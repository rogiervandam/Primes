GAS LISTING /tmp/ccdGK7kM.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd
  12              	# -mf16c -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt
  13              	# -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1
  14              	# -mclflushopt -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32
  20              	# --param l1-cache-line-size=64 --param l2-cache-size=12288 -mtune=skylake
  21              	# -masm=intel -g -Ofast -funroll-all-loops -fno-asynchronous-unwind-tables
  22              	# -fno-exceptions -fverbose-asm -fstack-protector-strong -Wformat
  23              	# -Wformat-security -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccdGK7kM.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  74              	# -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16 -mf16c -mfancy-math-387
  75              	# -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc -mhle -mlong-double-80
  76              	# -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mpush-args -mrdrnd
  77              	# -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3 -msse4 -msse4.1
  78              	# -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper -mxsave
  79              	# -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB5332:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** #include <immintrin.h>
   8:sieve_extend.c **** 
   9:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  10:sieve_extend.c **** #define option_runonce 0
  11:sieve_extend.c **** #define debug if (option_runonce)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 2
  19:sieve_extend.c **** #define default_tune_level 0
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/ccdGK7kM.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)(sizeof(bitword_t)*8))
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)(sizeof(bitword_t)*8))
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  38:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT))
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define SHIFT_VECTOR (SHIFT+2)
  41:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (sizeof(bitword_t)*VECTOR_ELEMENTS)
  43:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_counter)));
  44:sieve_extend.c **** 
  45:sieve_extend.c **** // globals for tuning
  46:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 64;
  47:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  48:sieve_extend.c **** 
  49:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  50:sieve_extend.c **** #define SAFE_ZERO  (bitshift_t)0U
  51:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  52:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)16)
  53:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)64)
  54:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  55:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  56:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  57:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  58:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  59:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  60:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  61:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  62:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  63:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  64:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  65:sieve_extend.c **** #define  markmask_calc(index) (SAFE_SHIFTBIT << bitindex_calc(index))
  66:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  67:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  68:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  69:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  70:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  71:sieve_extend.c **** #define real(bit) (bit*2+1)
  72:sieve_extend.c **** 
  73:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  74:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  75:sieve_extend.c **** 
  76:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  77:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  78:sieve_extend.c **** 
  79:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  80:sieve_extend.c **** 
  81:sieve_extend.c **** struct sieve_state {
  82:sieve_extend.c ****     bitword_t* bitarray;
  83:sieve_extend.c ****     counter_t  bits;
GAS LISTING /tmp/ccdGK7kM.s 			page 4


  84:sieve_extend.c ****     counter_t  size;
  85:sieve_extend.c **** };
  86:sieve_extend.c **** 
  87:sieve_extend.c **** #include "debugtools.h"
  88:sieve_extend.c **** 
  89:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  90:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  91:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
  92:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
  94:sieve_extend.c **** 
  95:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
  97:sieve_extend.c ****     sieve->size     = size;
  98:sieve_extend.c **** 
  99:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 100:sieve_extend.c ****     // it gave weird malloc problems at this point
 101:sieve_extend.c ****     return sieve;
 102:sieve_extend.c **** }
 103:sieve_extend.c **** 
 104:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 105:sieve_extend.c ****     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 107:sieve_extend.c **** }
 108:sieve_extend.c **** 
 109:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 110:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 116:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 117:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 118:sieve_extend.c **** 
 119:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 122:sieve_extend.c ****    index += distance;
 123:sieve_extend.c ****    distance += index_bit;
 124:sieve_extend.c **** 
 125:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 126:sieve_extend.c ****        index_word++;
 127:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 129:sieve_extend.c ****    }
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    return index;
 132:sieve_extend.c **** }
 133:sieve_extend.c **** 
 134:sieve_extend.c **** 
 135:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 136:sieve_extend.c **** //#if __APPLE__
 137:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 138:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 139:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 140:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
GAS LISTING /tmp/ccdGK7kM.s 			page 5


 141:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 142:sieve_extend.c **** //
 143:sieve_extend.c **** //   #pragma ivdep
 144:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 145:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 146:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 147:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 148:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 149:sieve_extend.c **** //   }
 150:sieve_extend.c **** //
 151:sieve_extend.c **** //   #pragma ivdep
 152:sieve_extend.c **** //   while (index_word < range_stop_word) {
 153:sieve_extend.c **** //       bitarray[index_word] |= mask;
 154:sieve_extend.c **** //       index_word += step;
 155:sieve_extend.c **** //   }
 156:sieve_extend.c **** //
 157:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 158:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 159:sieve_extend.c **** //   }
 160:sieve_extend.c **** //#endif
 161:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 162:sieve_extend.c **** //#if __linux__
 163:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 166:sieve_extend.c **** 
 167:sieve_extend.c ****   #pragma unroll
 168:sieve_extend.c ****    #pragma ivdep
 169:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 170:sieve_extend.c ****        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 172:sieve_extend.c ****        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 174:sieve_extend.c ****        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 180:sieve_extend.c ****    }
 181:sieve_extend.c **** 
 182:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****    }
 187:sieve_extend.c **** 
 188:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 191:sieve_extend.c **** 
 192:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 193:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 194:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 195:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 196:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 197:sieve_extend.c **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 6


 198:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 199:sieve_extend.c **** 
 200:sieve_extend.c **** //     #pragma unroll 1
 201:sieve_extend.c **** //    #pragma ivdep
 202:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 203:sieve_extend.c **** //        *(index_ptr) |= mask;
 204:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 205:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 206:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 207:sieve_extend.c **** //        index_ptr += 4*step;
 208:sieve_extend.c **** //    }
 209:sieve_extend.c **** 
 210:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 211:sieve_extend.c **** //        *index_ptr |= mask;
 212:sieve_extend.c **** //        index_ptr+=step;
 213:sieve_extend.c **** //    }
 214:sieve_extend.c **** 
 215:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 216:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 217:sieve_extend.c **** //    }
 218:sieve_extend.c **** //#endif
 219:sieve_extend.c **** }
 220:sieve_extend.c **** 
 221:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 222:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 223:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 224:sieve_extend.c **** 
 225:sieve_extend.c ****     // build the pattern in a word
 226:sieve_extend.c **** 	register bitword_t pattern = SAFE_SHIFTBIT;
 227:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 228:sieve_extend.c ****         pattern |= (pattern << patternsize);
 229:sieve_extend.c **** 
 230:sieve_extend.c ****     // initialize loop variables and stop if this is it
 231:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 232:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 233:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 234:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 235:sieve_extend.c ****        return;
 236:sieve_extend.c ****     }
 237:sieve_extend.c ****     
 238:sieve_extend.c ****     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 239:sieve_extend.c **** 
 240:sieve_extend.c ****     // from now on, we are before range_stop_word
 241:sieve_extend.c ****     // first word is special, because it should not set bits before the range_start_bit
 242:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 243:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 244:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 245:sieve_extend.c **** 
 246:sieve_extend.c ****     counter_t loop_range = range_stop_word - copy_word;
 247:sieve_extend.c ****     #pragma unroll
 248:sieve_extend.c ****     #pragma ivdep
 249:sieve_extend.c ****     for (counter_t i=0; i < loop_range; i++) {
 250:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 251:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 252:sieve_extend.c ****     } 
 253:sieve_extend.c ****     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pattern_shift_flipped)) 
 254:sieve_extend.c **** }
GAS LISTING /tmp/ccdGK7kM.s 			page 7


 255:sieve_extend.c **** 
 256:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 257:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 258:sieve_extend.c **** // This is especially true for small steps over long ranges
 259:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 260:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 261:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 262:sieve_extend.c **** 
 263:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 264:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 265:sieve_extend.c **** 
 266:sieve_extend.c ****         #pragma ivdep
 267:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 268:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 269:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 270:sieve_extend.c ****             #pragma ivdep
 271:sieve_extend.c ****             do {
 272:sieve_extend.c ****                 mask |= markmask(index);
 273:sieve_extend.c ****                 index += step;
 274:sieve_extend.c ****             } while (index_word == wordindex(index));
 275:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 276:sieve_extend.c ****             //     mask |= markmask(index);
 277:sieve_extend.c ****             bitarray[index_word] |= mask;
 278:sieve_extend.c ****         }
 279:sieve_extend.c ****     }
 280:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 281:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 282:sieve_extend.c ****         
 283:sieve_extend.c ****         #pragma ivdep
 284:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 285:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 286:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 287:sieve_extend.c ****             #pragma ivdep
 288:sieve_extend.c ****             do {
 289:sieve_extend.c ****                 mask |= markmask(index);
 290:sieve_extend.c ****                 index += step;
 291:sieve_extend.c ****             } while (index_word == wordindex(index));
 292:sieve_extend.c ****             // #pragma ivdep
 293:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****             //     mask |= markmask(index);
 295:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 296:sieve_extend.c ****         }
 297:sieve_extend.c ****     }
 298:sieve_extend.c **** }
 299:sieve_extend.c **** 
 300:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 301:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 302:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallrange (%ju occurances
 303:sieve_extend.c ****     
 304:sieve_extend.c ****     #pragma unroll
 305:sieve_extend.c ****     #pragma ivdep
 306:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 307:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 308:sieve_extend.c ****     }
 309:sieve_extend.c **** 
 310:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 311:sieve_extend.c **** //    #pragma unroll
GAS LISTING /tmp/ccdGK7kM.s 			page 8


 312:sieve_extend.c **** //     #pragma ivdep
 313:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 314:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 315:sieve_extend.c **** //     }
 316:sieve_extend.c **** }
 317:sieve_extend.c **** 
 318:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 319:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 320:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 321:sieve_extend.c **** 
 322:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 323:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 324:sieve_extend.c ****     
 325:sieve_extend.c ****     while (1) {
 326:sieve_extend.c ****         if (index1_word == index2_word) {
 327:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 328:sieve_extend.c ****             counter_t index_word = index1_word;
 329:sieve_extend.c ****             do {
 330:sieve_extend.c ****                 mask |= markmask(index1);
 331:sieve_extend.c ****                 index1 += step1;
 332:sieve_extend.c ****                 index1_word = wordindex(index1);
 333:sieve_extend.c ****             } while (index1_word == index_word);
 334:sieve_extend.c ****             do {
 335:sieve_extend.c ****                 mask |= markmask(index2);
 336:sieve_extend.c ****                 index2 += step2;
 337:sieve_extend.c ****                 index2_word = wordindex(index2);
 338:sieve_extend.c ****             } while (index2_word == index_word);
 339:sieve_extend.c ****             bitarray[index_word] |= mask;
 340:sieve_extend.c ****         }
 341:sieve_extend.c **** 
 342:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 343:sieve_extend.c ****         if (index2 > range_stop) {
 344:sieve_extend.c ****             while (index1 <= range_stop) {
 345:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 347:sieve_extend.c ****             }
 348:sieve_extend.c ****             return;
 349:sieve_extend.c ****         }
 350:sieve_extend.c **** 
 351:sieve_extend.c ****         if (index1 > range_stop) {
 352:sieve_extend.c ****             while (index2 <= range_stop) {
 353:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 354:sieve_extend.c ****                 index2 += step2;
 355:sieve_extend.c ****             }
 356:sieve_extend.c ****             return;
 357:sieve_extend.c ****         }
 358:sieve_extend.c **** 
 359:sieve_extend.c ****         while (index1_word < index2_word) {
 360:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 361:sieve_extend.c ****             index1 += step1;
 362:sieve_extend.c ****             index1_word = wordindex(index1);
 363:sieve_extend.c ****         }
 364:sieve_extend.c ****         
 365:sieve_extend.c ****         while (index2_word < index1_word){
 366:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 367:sieve_extend.c ****             index2 += step2;
 368:sieve_extend.c ****             index2_word = wordindex(index2);
GAS LISTING /tmp/ccdGK7kM.s 			page 9


 369:sieve_extend.c ****         }
 370:sieve_extend.c **** 
 371:sieve_extend.c ****     }
 372:sieve_extend.c **** }
 373:sieve_extend.c **** 
 374:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 375:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 376:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 377:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 378:sieve_extend.c **** 
 379:sieve_extend.c **** //    #pragma unroll
 380:sieve_extend.c ****     #pragma ivdep
 381:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 382:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 383:sieve_extend.c ****     }
 384:sieve_extend.c **** }
 385:sieve_extend.c **** 
 386:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, const counter_t rang
 387:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 388:sieve_extend.c **** 
 389:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 390:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 391:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 392:sieve_extend.c ****     // }
 393:sieve_extend.c ****     // return;
 394:sieve_extend.c **** 
 395:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 396:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     #pragma ivdep
 399:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 400:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 401:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 402:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 403:sieve_extend.c ****         
 404:sieve_extend.c ****         do {
 405:sieve_extend.c ****             quadmask[word] |= markmask(index);
 406:sieve_extend.c ****             index += step;
 407:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 408:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 409:sieve_extend.c ****         
 410:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word>>2;
 411:sieve_extend.c ****         
 412:sieve_extend.c ****         #pragma ivdep
 413:sieve_extend.c ****         for(; current_vector <= vectorindex(range_stop); current_vector += step) {
 414:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 415:sieve_extend.c ****         }
 416:sieve_extend.c ****         
 417:sieve_extend.c ****         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 418:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 419:sieve_extend.c ****         if (index_word <= range_stop_word) {
 420:sieve_extend.c ****             #pragma ivdep
 421:sieve_extend.c ****             for (word =0; word < VECTOR_ELEMENTS; word++) {
 422:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 423:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 424:sieve_extend.c ****             }
 425:sieve_extend.c ****         }
GAS LISTING /tmp/ccdGK7kM.s 			page 10


 426:sieve_extend.c ****     }
 427:sieve_extend.c **** }
 428:sieve_extend.c **** 
 429:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 429 153 view -0
  91              		.cfi_startproc
 430:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 430 5 view .LVU1
 431:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 432:sieve_extend.c **** 
 433:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 433 5 view .LVU2
 434:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 434 5 view .LVU3
  95              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 429 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100              	# sieve_extend.c:433:     const counter_t source_word = wordindex(source_start);
 433:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 101              		.loc 1 433 21 view .LVU5
 102 0001 4889F0   		mov	rax, rsi	# source_word, source_start
 103              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 104              		.loc 1 429 153 view .LVU6
 105 0004 4989D1   		mov	r9, rdx	# size, tmp437
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108 000a 4157     		push	r15	#
 109              	# sieve_extend.c:433:     const counter_t source_word = wordindex(source_start);
 433:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 110              		.loc 1 433 21 view .LVU7
 111 000c 48C1E806 		shr	rax, 6	# source_word,
 112              	.LVL1:
 113              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 114              		.loc 1 434 134 view .LVU8
 115 0010 89F2     		mov	edx, esi	# tmp250, source_start
 116              	.LVL2:
 117              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 118              		.loc 1 429 153 view .LVU9
 119 0012 4156     		push	r14	#
 120              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 121              		.loc 1 434 134 view .LVU10
 122 0014 83E23F   		and	edx, 63	# tmp250,
 123              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 124              		.loc 1 434 133 view .LVU11
 125 0017 41B84000 		mov	r8d, 64	# tmp252,
 125      0000
 126              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 127              		.loc 1 429 153 view .LVU12
 128 001d 4155     		push	r13	#
 129              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 130              		.loc 1 434 133 view .LVU13
GAS LISTING /tmp/ccdGK7kM.s 			page 11


 131 001f 4129D0   		sub	r8d, edx	# tmp251, tmp250
 132              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 133              		.loc 1 434 167 view .LVU14
 134 0022 4589CB   		mov	r11d, r9d	# tmp258, size
 135              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 136              		.loc 1 429 153 view .LVU15
 137 0025 4154     		push	r12	#
 138              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 139              		.loc 1 434 167 view .LVU16
 140 0027 41F7D3   		not	r11d	# tmp258
 141              		.cfi_offset 15, -24
 142              		.cfi_offset 14, -32
 143              		.cfi_offset 13, -40
 144              		.cfi_offset 12, -48
 145 002a 49C7C4FF 		mov	r12, -1	# tmp261,
 145      FFFFFF
 146              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 147              		.loc 1 429 153 view .LVU17
 148 0031 53       		push	rbx	#
 149              		.cfi_offset 3, -56
 150              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 151              		.loc 1 434 58 view .LVU18
 152 0032 488B1CC7 		mov	rbx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 153              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 154              		.loc 1 434 167 view .LVU19
 155 0036 C442A3F7 		shrx	r13, r12, r11	# tmp260, tmp261, tmp258
 155      EC
 156              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 434 112 view .LVU20
 158 003b C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp253, *_11, tmp251
 158      44C708
 159              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 160              		.loc 1 434 58 view .LVU21
 161 0042 C462CBF7 		shrx	r10, rbx, rsi	# tmp255, *_5, source_start
 161      D3
 162              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 163              		.loc 1 434 85 view .LVU22
 164 0047 4D09D0   		or	r8, r10	# tmp257, tmp255
 165              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 166              		.loc 1 434 24 view .LVU23
 167 004a 4D21E8   		and	r8, r13	# pattern, tmp260
 168              	.LVL3:
 435:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 169              		.loc 1 435 5 is_stmt 1 view .LVU24
 170              	.LBB264:
 171              		.loc 1 435 10 view .LVU25
 172              		.loc 1 435 54 view .LVU26
 173              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 174              		.loc 1 435 5 is_stmt 0 view .LVU27
 175 004d 4983F940 		cmp	r9, 64	# size,
 176 0051 0F87B900 		ja	.L2	#,
 176      0000
 177 0057 4D89CE   		mov	r14, r9	# pattern_size, size
 178              	.LVL4:
 179              	.L3:
GAS LISTING /tmp/ccdGK7kM.s 			page 12


 180              		.loc 1 435 120 is_stmt 1 discriminator 3 view .LVU28
 181              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 182              		.loc 1 435 103 is_stmt 0 discriminator 3 view .LVU29
 183 005a 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 184              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 185              		.loc 1 435 140 discriminator 3 view .LVU30
 186 005e C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 186      F8
 187              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 188              		.loc 1 435 128 discriminator 3 view .LVU31
 189 0063 4D09F8   		or	r8, r15	# pattern, _23
 190              	.LVL5:
 191              		.loc 1 435 90 is_stmt 1 discriminator 3 view .LVU32
 192              		.loc 1 435 54 discriminator 3 view .LVU33
 193              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 194              		.loc 1 435 5 is_stmt 0 discriminator 3 view .LVU34
 195 0066 4883F840 		cmp	rax, 64	# pattern_size,
 196 006a 0F87A000 		ja	.L2	#,
 196      0000
 197              		.loc 1 435 120 is_stmt 1 view .LVU35
 198              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 199              		.loc 1 435 103 is_stmt 0 view .LVU36
 200 0070 4A8D1CB5 		lea	rbx, 0[0+r14*4]	# pattern_size,
 200      00000000 
 201              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 202              		.loc 1 435 140 view .LVU37
 203 0078 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 203      D0
 204              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 205              		.loc 1 435 128 view .LVU38
 206 007d 4909D0   		or	r8, rdx	# pattern, _23
 207              	.LVL6:
 208              		.loc 1 435 90 is_stmt 1 view .LVU39
 209              		.loc 1 435 54 view .LVU40
 210              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 211              		.loc 1 435 5 is_stmt 0 view .LVU41
 212 0080 4883FB40 		cmp	rbx, 64	# pattern_size,
 213 0084 0F878600 		ja	.L2	#,
 213      0000
 214              		.loc 1 435 120 is_stmt 1 view .LVU42
 215              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 216              		.loc 1 435 103 is_stmt 0 view .LVU43
 217 008a 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 217      00000000 
 218              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 219              		.loc 1 435 140 view .LVU44
 220 0092 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 220      D0
 221              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 222              		.loc 1 435 128 view .LVU45
 223 0097 4D09D0   		or	r8, r10	# pattern, _23
 224              	.LVL7:
 225              		.loc 1 435 90 is_stmt 1 view .LVU46
 226              		.loc 1 435 54 view .LVU47
 227              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 228              		.loc 1 435 5 is_stmt 0 view .LVU48
 229 009a 4983FB40 		cmp	r11, 64	# pattern_size,
GAS LISTING /tmp/ccdGK7kM.s 			page 13


 230 009e 7770     		ja	.L2	#,
 231              		.loc 1 435 120 is_stmt 1 view .LVU49
 232              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 233              		.loc 1 435 103 is_stmt 0 view .LVU50
 234 00a0 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 235 00a3 49C1E504 		sal	r13, 4	# pattern_size,
 236              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 237              		.loc 1 435 140 view .LVU51
 238 00a7 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 238      E0
 239              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 240              		.loc 1 435 128 view .LVU52
 241 00ac 4D09E0   		or	r8, r12	# pattern, _23
 242              	.LVL8:
 243              		.loc 1 435 90 is_stmt 1 view .LVU53
 244              		.loc 1 435 54 view .LVU54
 245              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 246              		.loc 1 435 5 is_stmt 0 view .LVU55
 247 00af 4983FD40 		cmp	r13, 64	# pattern_size,
 248 00b3 775B     		ja	.L2	#,
 249              		.loc 1 435 120 is_stmt 1 view .LVU56
 250              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 251              		.loc 1 435 103 is_stmt 0 view .LVU57
 252 00b5 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 253 00b8 48C1E005 		sal	rax, 5	# pattern_size,
 254              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 255              		.loc 1 435 140 view .LVU58
 256 00bc C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 256      F8
 257              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 258              		.loc 1 435 128 view .LVU59
 259 00c1 4D09F8   		or	r8, r15	# pattern, _23
 260              	.LVL9:
 261              		.loc 1 435 90 is_stmt 1 view .LVU60
 262              		.loc 1 435 54 view .LVU61
 263              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 264              		.loc 1 435 5 is_stmt 0 view .LVU62
 265 00c4 4883F840 		cmp	rax, 64	# pattern_size,
 266 00c8 7746     		ja	.L2	#,
 267              		.loc 1 435 120 is_stmt 1 view .LVU63
 268              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 269              		.loc 1 435 103 is_stmt 0 view .LVU64
 270 00ca 4C89F3   		mov	rbx, r14	# pattern_size, pattern_size
 271 00cd 48C1E306 		sal	rbx, 6	# pattern_size,
 272              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 273              		.loc 1 435 140 view .LVU65
 274 00d1 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 274      D0
 275              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 276              		.loc 1 435 128 view .LVU66
 277 00d6 4909D0   		or	r8, rdx	# pattern, _23
 278              	.LVL10:
 279              		.loc 1 435 90 is_stmt 1 view .LVU67
 280              		.loc 1 435 54 view .LVU68
 281              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 282              		.loc 1 435 5 is_stmt 0 view .LVU69
 283 00d9 4883FB40 		cmp	rbx, 64	# pattern_size,
GAS LISTING /tmp/ccdGK7kM.s 			page 14


 284 00dd 7731     		ja	.L2	#,
 285              		.loc 1 435 120 is_stmt 1 view .LVU70
 286              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 287              		.loc 1 435 103 is_stmt 0 view .LVU71
 288 00df 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 289 00e2 49C1E307 		sal	r11, 7	# pattern_size,
 290              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 291              		.loc 1 435 140 view .LVU72
 292 00e6 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 292      D0
 293              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 294              		.loc 1 435 128 view .LVU73
 295 00eb 4D09D0   		or	r8, r10	# pattern, _23
 296              	.LVL11:
 297              		.loc 1 435 90 is_stmt 1 view .LVU74
 298              		.loc 1 435 54 view .LVU75
 299              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 300              		.loc 1 435 5 is_stmt 0 view .LVU76
 301 00ee 4983FB40 		cmp	r11, 64	# pattern_size,
 302 00f2 771C     		ja	.L2	#,
 303              		.loc 1 435 120 is_stmt 1 view .LVU77
 304              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 305              		.loc 1 435 103 is_stmt 0 view .LVU78
 306 00f4 49C1E608 		sal	r14, 8	# pattern_size,
 307              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 308              		.loc 1 435 140 view .LVU79
 309 00f8 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 309      E0
 310              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 311              		.loc 1 435 128 view .LVU80
 312 00fd 4D09E0   		or	r8, r12	# pattern, _23
 313              	.LVL12:
 314              		.loc 1 435 90 is_stmt 1 view .LVU81
 315              		.loc 1 435 54 view .LVU82
 316              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 317              		.loc 1 435 5 is_stmt 0 view .LVU83
 318 0100 4983FE40 		cmp	r14, 64	# pattern_size,
 319 0104 0F8650FF 		jbe	.L3	#,
 319      FFFF
 320              	.LVL13:
 321 010a 660F1F44 		.p2align 4,,10
 321      0000
 322              		.p2align 3
 323              	.L2:
 324              		.loc 1 435 5 view .LVU84
 325              	.LBE264:
 436:sieve_extend.c **** 
 437:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 326              		.loc 1 437 5 is_stmt 1 view .LVU85
 327              	# sieve_extend.c:437:     const counter_t destination_start = source_start + size;
 328              		.loc 1 437 21 is_stmt 0 view .LVU86
 329 0110 4C01CE   		add	rsi, r9	# destination_start, size
 330              	.LVL14:
 438:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 331              		.loc 1 438 5 is_stmt 1 view .LVU87
 332              	# sieve_extend.c:438:     counter_t destination_start_word = wordindex(destination_start);
 333              		.loc 1 438 15 is_stmt 0 view .LVU88
GAS LISTING /tmp/ccdGK7kM.s 			page 15


 334 0113 4989F6   		mov	r14, rsi	# destination_start_word, destination_start
 335 0116 49C1EE06 		shr	r14, 6	# destination_start_word,
 336              	.LVL15:
 439:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 337              		.loc 1 439 5 is_stmt 1 view .LVU89
 338              	# sieve_extend.c:439:     counter_t destination_stop_word = wordindex(destination_stop);
 339              		.loc 1 439 15 is_stmt 0 view .LVU90
 340 011a 4989CB   		mov	r11, rcx	# destination_stop_word, destination_stop
 341 011d 4E8D24F5 		lea	r12, 0[0+r14*8]	# _119,
 341      00000000 
 342 0125 4E8D3C27 		lea	r15, [rdi+r12]	# _120,
 343 0129 F7D1     		not	ecx	# tmp264
 344              	.LVL16:
 345              		.loc 1 439 15 view .LVU91
 346 012b 48C7C2FF 		mov	rdx, -1	# tmp266,
 346      FFFFFF
 347 0132 49C1EB06 		shr	r11, 6	# destination_stop_word,
 348              	.LVL17:
 440:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 349              		.loc 1 440 5 is_stmt 1 view .LVU92
 350 0136 4D8B2F   		mov	r13, QWORD PTR [r15]	# pretmp_121, *_120
 351 0139 C4C2C9F7 		shlx	rax, r8, rsi	# _123, pattern, destination_start
 351      C0
 352 013e C4E2F3F7 		shrx	rbx, rdx, rcx	# _127, tmp266, tmp264
 352      DA
 353              	# sieve_extend.c:440:     if (destination_start_word >= destination_stop_word) {
 354              		.loc 1 440 8 is_stmt 0 view .LVU93
 355 0143 4D39DE   		cmp	r14, r11	# destination_start_word, destination_stop_word
 356 0146 0F83B403 		jnb	.L39	#,
 356      0000
 441:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 442:sieve_extend.c ****         return;
 443:sieve_extend.c ****     }
 444:sieve_extend.c **** 
 445:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 357              		.loc 1 445 5 is_stmt 1 view .LVU94
 358              	# sieve_extend.c:445:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 359              		.loc 1 445 38 is_stmt 0 view .LVU95
 360 014c 4C09E8   		or	rax, r13	# tmp269, pretmp_121
 361              	# sieve_extend.c:447:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 446:sieve_extend.c **** 
 447:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 362              		.loc 1 447 31 view .LVU96
 363 014f B9400000 		mov	ecx, 64	# tmp270,
 363      00
 364              	# sieve_extend.c:445:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 445:sieve_extend.c **** 
 365              		.loc 1 445 38 view .LVU97
 366 0154 498907   		mov	QWORD PTR [r15], rax	# *_120, tmp269
 367              		.loc 1 447 5 is_stmt 1 view .LVU98
 368              	# sieve_extend.c:447:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 369              		.loc 1 447 31 is_stmt 0 view .LVU99
 370 0157 31D2     		xor	edx, edx	# tmp271
 371 0159 4889C8   		mov	rax, rcx	# tmp272, tmp270
 372 015c 49F7F1   		div	r9	# size
 373              	.LVL18:
 448:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
GAS LISTING /tmp/ccdGK7kM.s 			page 16


 374              		.loc 1 448 5 is_stmt 1 view .LVU100
 375              	# sieve_extend.c:449:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 449:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 376              		.loc 1 449 89 is_stmt 0 view .LVU101
 377 015f 48F7DE   		neg	rsi	# tmp274
 378              	.LVL19:
 379              	# sieve_extend.c:448:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 448:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 380              		.loc 1 448 31 view .LVU102
 381 0162 4889C8   		mov	rax, rcx	# tmp270, tmp270
 382              	.LBB265:
 383              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 450:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 451:sieve_extend.c ****     destination_start_word++;
 452:sieve_extend.c ****     
 453:sieve_extend.c ****     #pragma unroll
 454:sieve_extend.c ****     #pragma ivdep
 455:sieve_extend.c ****     for (counter_t i=0; i<loop_range; ++i ) {
 384              		.loc 1 455 5 view .LVU103
 385 0165 4D89DA   		mov	r10, r11	# loop_range, destination_stop_word
 386              	.LBE265:
 387              	# sieve_extend.c:449:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 449:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 388              		.loc 1 449 25 view .LVU104
 389 0168 83E63F   		and	esi, 63	# shift,
 390              	.LVL20:
 391              	# sieve_extend.c:451:     destination_start_word++;
 451:sieve_extend.c ****     
 392              		.loc 1 451 27 view .LVU105
 393 016b 4D8D6E01 		lea	r13, 1[r14]	# destination_start_word,
 394              	# sieve_extend.c:448:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 448:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 448 31 view .LVU106
 396 016f 4829D0   		sub	rax, rdx	# tmp270, tmp271
 397              	.LVL21:
 449:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 398              		.loc 1 449 5 is_stmt 1 view .LVU107
 450:sieve_extend.c ****     destination_start_word++;
 399              		.loc 1 450 5 view .LVU108
 451:sieve_extend.c ****     
 400              		.loc 1 451 5 view .LVU109
 401              		.loc 1 455 5 view .LVU110
 402              	.LBB266:
 403              		.loc 1 455 10 view .LVU111
 404              		.loc 1 455 25 view .LVU112
 405              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 406              		.loc 1 455 5 is_stmt 0 view .LVU113
 407 0172 4D29F2   		sub	r10, r14	# loop_range, destination_start_word
 408              	.LVL22:
 409              		.loc 1 455 5 view .LVU114
 410 0175 0F847403 		je	.L10	#,
 410      0000
 411 017b 498D4AFF 		lea	rcx, -1[r10]	# tmp276,
 412 017f 4883F906 		cmp	rcx, 6	# tmp276,
 413 0183 0F869003 		jbe	.L12	#,
 413      0000
 414 0189 4D89D1   		mov	r9, r10	# bnd.119, loop_range
GAS LISTING /tmp/ccdGK7kM.s 			page 17


 415              	.LVL23:
 416              		.loc 1 455 5 view .LVU115
 417 018c 49C1E903 		shr	r9, 3	# bnd.119,
 418 0190 49C1E106 		sal	r9, 6	# tmp283,
 419 0194 4E8D7C27 		lea	r15, 8[rdi+r12]	# ivtmp.137,
 419      08
 420 0199 C5F96EEA 		vmovd	xmm5, edx	# vect_cst__13, _130
 421 019d C5F96EE6 		vmovd	xmm4, esi	# vect_cst__2, _132
 422 01a1 C5F96ED8 		vmovd	xmm3, eax	# vect_cst__129, _128
 423 01a5 C4C1F96E 		vmovq	xmm6, r8	# pattern, pattern
 423      F0
 424 01aa 4F8D2439 		lea	r12, [r9+r15]	# _217,
 425 01ae 4183E140 		and	r9d, 64	# tmp283,
 426 01b2 C57D6F0D 		vmovdqa	ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.122,
 426      00000000 
 427 01ba C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp359,
 427      00000000 
 428 01c2 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp360,
 428      00000000 
 429 01ca C57D6F3D 		vmovdqa	ymm15, YMMWORD PTR .LC3[rip]	# tmp361,
 429      00000000 
 430 01d2 C4627D58 		vpbroadcastd	ymm12, xmm5	# vect_cst__13, vect_cst__13
 430      E5
 431 01d7 C4627D58 		vpbroadcastd	ymm13, xmm4	# vect_cst__2, vect_cst__2
 431      EC
 432 01dc C4627D58 		vpbroadcastd	ymm14, xmm3	# vect_cst__129, vect_cst__129
 432      F3
 433 01e1 C4E27D59 		vpbroadcastq	ymm2, xmm6	# vect_cst__35, pattern
 433      D6
 434 01e6 0F849400 		je	.L8	#,
 434      0000
 435 01ec C57D7FC9 		vmovdqa	ymm1, ymm9	# vect_vec_iv_.122, vect_vec_iv_.122
 436              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 437              		.loc 1 456 81 view .LVU116
 438 01f0 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp360
 439 01f4 C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp399, vect_vec_iv_.122, vect_vec_iv_.122,
 439      C220
 440 01fa C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp400, vect_vec_iv_.122, vect_vec_iv_.122,
 440      DA31
 441 0200 C5FD70E8 		vpshufd	ymm5, ymm0, 216	# tmp401, tmp399,
 441      D8
 442 0205 C4C17D70 		vpshufd	ymm4, ymm11, 216	# tmp402, tmp400,
 442      E3D8
 443 020b C5D56CDC 		vpunpcklqdq	ymm3, ymm5, ymm4	# tmp403, tmp401, tmp402
 444 020f C4E21D40 		vpmulld	ymm6, ymm12, ymm3	# vect__45.124, vect_cst__13, tmp403
 444      F3
 445 0214 4983C740 		add	r15, 64	# ivtmp.137,
 446 0218 C44135D4 		vpaddq	ymm9, ymm9, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp359
 446      C8
 447              	.LVL24:
 448              		.loc 1 456 9 is_stmt 1 view .LVU117
 449              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 456 81 is_stmt 0 view .LVU118
 451 021d C4C14DFE 		vpaddd	ymm1, ymm6, ymm13	# vect__47.125, vect__45.124, vect_cst__2
 451      CD
 452              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccdGK7kM.s 			page 18


 453              		.loc 1 456 99 view .LVU119
 454 0222 C4C175DB 		vpand	ymm0, ymm1, ymm15	# vect__48.126, vect__47.125, tmp361
 454      C7
 455              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 456 72 view .LVU120
 457 0227 C58DFAE8 		vpsubd	ymm5, ymm14, ymm0	# vect__49.127, vect_cst__129, vect__48.126
 458              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 459              		.loc 1 456 116 view .LVU121
 460 022b C4627D35 		vpmovzxdq	ymm10, xmm5	#, vect__49.127
 460      D5
 461 0230 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.126
 461      D8
 462 0235 C4C2ED47 		vpsllvq	ymm4, ymm2, ymm10	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 462      E2
 463 023a C4C2ED45 		vpsrlvq	ymm3, ymm2, ymm11	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
 463      DB
 464 023f C4E37D39 		vextracti128	xmm1, ymm5, 0x1	# tmp415, vect__49.127
 464      E901
 465 0245 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp418, vect__48.126
 465      C001
 466 024b C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 467 024f C4E27D35 		vpmovzxdq	ymm5, xmm1	# vect_patt_143.128, tmp415
 467      E9
 468 0254 C4E27D35 		vpmovzxdq	ymm4, xmm0	# vect_patt_141.130, tmp418
 468      E0
 469 0259 C462ED47 		vpsllvq	ymm10, ymm2, ymm5	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 469      D5
 470 025e C462ED45 		vpsrlvq	ymm11, ymm2, ymm4	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
 470      DC
 471              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 456 44 view .LVU122
 473 0263 C4C17E7F 		vmovdqu	YMMWORD PTR -64[r15], ymm6	# MEM[base: _214, offset: 0B], vect__55.132
 473      77C0
 474              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 456 116 view .LVU123
 476 0269 C4C12DEB 		vpor	ymm3, ymm10, ymm11	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 476      DB
 477              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 456 44 view .LVU124
 479 026e C4C17E7F 		vmovdqu	YMMWORD PTR -32[r15], ymm3	# MEM[base: _214, offset: 32B], vect__55.132
 479      5FE0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 480              		.loc 1 455 39 is_stmt 1 view .LVU125
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 481              		.loc 1 455 25 view .LVU126
 482 0274 4D39E7   		cmp	r15, r12	# ivtmp.137, _217
 483 0277 0F840E01 		je	.L34	#,
 483      0000
 484 027d 0F1F00   		.p2align 4,,10
 485              		.p2align 3
 486              	.L8:
 487              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 488              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU127
 489 0280 C5B5D4CF 		vpaddq	ymm1, ymm9, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp360
 490 0284 C4C135D4 		vpaddq	ymm6, ymm9, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp359
 490      F0
 491              		.loc 1 456 9 is_stmt 1 discriminator 3 view .LVU128
GAS LISTING /tmp/ccdGK7kM.s 			page 19


 492              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 493              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU129
 494 0289 C4E33546 		vperm2i128	ymm5, ymm9, ymm1, 32	# tmp290, vect_vec_iv_.122, vect_vec_iv_.122,
 494      E920
 495 028f C4633546 		vperm2i128	ymm9, ymm9, ymm1, 49	# tmp291, vect_vec_iv_.122, vect_vec_iv_.122,
 495      C931
 496 0295 C57D70D5 		vpshufd	ymm10, ymm5, 216	# tmp288, tmp290,
 496      D8
 497 029a C4C17D70 		vpshufd	ymm0, ymm9, 216	# tmp289, tmp291,
 497      C1D8
 498 02a0 C5AD6CE0 		vpunpcklqdq	ymm4, ymm10, ymm0	# tmp292, tmp288, tmp289
 499 02a4 C4621D40 		vpmulld	ymm11, ymm12, ymm4	# vect__45.124, vect_cst__13, tmp292
 499      DC
 500 02a9 4983EF80 		sub	r15, -128	# ivtmp.137,
 501 02ad C4C125FE 		vpaddd	ymm3, ymm11, ymm13	# vect__47.125, vect__45.124, vect_cst__2
 501      DD
 502              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 456 99 discriminator 3 view .LVU130
 504 02b2 C4C165DB 		vpand	ymm5, ymm3, ymm15	# vect__48.126, vect__47.125, tmp361
 504      EF
 505              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 456 72 discriminator 3 view .LVU131
 507 02b7 C58DFACD 		vpsubd	ymm1, ymm14, ymm5	# vect__49.127, vect_cst__129, vect__48.126
 508              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 456 116 discriminator 3 view .LVU132
 510 02bb C4627D35 		vpmovzxdq	ymm9, xmm1	#, vect__49.127
 510      C9
 511 02c0 C4E27D35 		vpmovzxdq	ymm0, xmm5	#, vect__48.126
 511      C5
 512 02c5 C442ED47 		vpsllvq	ymm10, ymm2, ymm9	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 512      D1
 513 02ca C4E2ED45 		vpsrlvq	ymm4, ymm2, ymm0	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
 513      E0
 514 02cf C4E37D39 		vextracti128	xmm3, ymm1, 0x1	# tmp304, vect__49.127
 514      CB01
 515 02d5 C4E37D39 		vextracti128	xmm5, ymm5, 0x1	# tmp307, vect__48.126
 515      ED01
 516 02db C52DEBDC 		vpor	ymm11, ymm10, ymm4	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 517 02df C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_143.128, tmp304
 517      CB
 518 02e4 C4627D35 		vpmovzxdq	ymm10, xmm5	# vect_patt_141.130, tmp307
 518      D5
 519 02e9 C462ED47 		vpsllvq	ymm9, ymm2, ymm1	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 519      C9
 520 02ee C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
 520      C2
 521              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 522              		.loc 1 456 44 discriminator 3 view .LVU133
 523 02f3 C4417E7F 		vmovdqu	YMMWORD PTR -128[r15], ymm11	# MEM[base: _214, offset: 0B], vect__55.132
 523      5F80
 524              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 525              		.loc 1 456 81 discriminator 3 view .LVU134
 526 02f9 C54DD4DF 		vpaddq	ymm11, ymm6, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp360
 527              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 528              		.loc 1 456 116 discriminator 3 view .LVU135
 529 02fd C5B5EBE0 		vpor	ymm4, ymm9, ymm0	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 530              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccdGK7kM.s 			page 20


 531              		.loc 1 456 81 discriminator 3 view .LVU136
 532 0301 C4C34D46 		vperm2i128	ymm3, ymm6, ymm11, 32	# tmp374, vect_vec_iv_.122, vect_vec_iv_.122,
 532      DB20
 533 0307 C4414DD4 		vpaddq	ymm9, ymm6, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp359
 533      C8
 534 030c C4C34D46 		vperm2i128	ymm6, ymm6, ymm11, 49	# tmp375, vect_vec_iv_.122, vect_vec_iv_.122,
 534      F331
 535 0312 C5FD70CB 		vpshufd	ymm1, ymm3, 216	# tmp376, tmp374,
 535      D8
 536 0317 C5FD70EE 		vpshufd	ymm5, ymm6, 216	# tmp377, tmp375,
 536      D8
 537 031c C5756CD5 		vpunpcklqdq	ymm10, ymm1, ymm5	# tmp378, tmp376, tmp377
 538 0320 C4C21D40 		vpmulld	ymm0, ymm12, ymm10	# vect__45.124, vect_cst__13, tmp378
 538      C2
 539              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 540              		.loc 1 456 44 discriminator 3 view .LVU137
 541 0325 C4C17E7F 		vmovdqu	YMMWORD PTR -96[r15], ymm4	# MEM[base: _214, offset: 32B], vect__55.132
 541      67A0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 542              		.loc 1 455 39 is_stmt 1 discriminator 3 view .LVU138
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 543              		.loc 1 455 25 discriminator 3 view .LVU139
 544              		.loc 1 456 9 discriminator 3 view .LVU140
 545              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 546              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU141
 547 032b C4C17DFE 		vpaddd	ymm4, ymm0, ymm13	# vect__47.125, vect__45.124, vect_cst__2
 547      E5
 548              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 549              		.loc 1 456 99 discriminator 3 view .LVU142
 550 0330 C4C15DDB 		vpand	ymm3, ymm4, ymm15	# vect__48.126, vect__47.125, tmp361
 550      DF
 551              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 552              		.loc 1 456 72 discriminator 3 view .LVU143
 553 0335 C58DFAF3 		vpsubd	ymm6, ymm14, ymm3	# vect__49.127, vect_cst__129, vect__48.126
 554              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 456 116 discriminator 3 view .LVU144
 556 0339 C4627D35 		vpmovzxdq	ymm11, xmm6	#, vect__49.127
 556      DE
 557 033e C4E27D35 		vpmovzxdq	ymm5, xmm3	#, vect__48.126
 557      EB
 558 0343 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 558      CB
 559 0348 C462ED45 		vpsrlvq	ymm10, ymm2, ymm5	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
 559      D5
 560 034d C4E37D39 		vextracti128	xmm4, ymm6, 0x1	# tmp390, vect__49.127
 560      F401
 561 0353 C4E37D39 		vextracti128	xmm3, ymm3, 0x1	# tmp393, vect__48.126
 561      DB01
 562 0359 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 562      C2
 563 035e C4E27D35 		vpmovzxdq	ymm6, xmm4	# vect_patt_143.128, tmp390
 563      F4
 564 0363 C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_141.130, tmp393
 564      CB
 565 0368 C462ED47 		vpsllvq	ymm11, ymm2, ymm6	# vect_patt_142.129, vect_cst__35, vect_patt_143.128
 565      DE
 566 036d C4E2ED45 		vpsrlvq	ymm5, ymm2, ymm1	# vect_patt_140.131, vect_cst__35, vect_patt_141.130
GAS LISTING /tmp/ccdGK7kM.s 			page 21


 566      E9
 567              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 568              		.loc 1 456 44 discriminator 3 view .LVU145
 569 0372 C4C17E7F 		vmovdqu	YMMWORD PTR -64[r15], ymm0	# MEM[base: _214, offset: 0B], vect__55.132
 569      47C0
 570              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 456 116 discriminator 3 view .LVU146
 572 0378 C525EBD5 		vpor	ymm10, ymm11, ymm5	# vect__55.132, vect_patt_142.129, vect_patt_140.131
 573              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 456 44 discriminator 3 view .LVU147
 575 037c C4417E7F 		vmovdqu	YMMWORD PTR -32[r15], ymm10	# MEM[base: _214, offset: 32B], vect__55.132
 575      57E0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 576              		.loc 1 455 39 is_stmt 1 discriminator 3 view .LVU148
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 577              		.loc 1 455 25 discriminator 3 view .LVU149
 578 0382 4D39E7   		cmp	r15, r12	# ivtmp.137, _217
 579 0385 0F85F5FE 		jne	.L8	#,
 579      FFFF
 580              	.L34:
 581 038b 4D89D7   		mov	r15, r10	# niters_vector_mult_vf.120, loop_range
 582 038e 4983E7F8 		and	r15, -8	# niters_vector_mult_vf.120,
 583 0392 41F6C207 		test	r10b, 7	# loop_range,
 584 0396 0F847801 		je	.L40	#,
 584      0000
 585 039c C5F877   		vzeroupper
 586              	.L7:
 587              	.LVL25:
 588              		.loc 1 456 9 view .LVU150
 589              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 456 81 is_stmt 0 view .LVU151
 591 039f 89D1     		mov	ecx, edx	# tmp310, tmp271
 592 03a1 410FAFCF 		imul	ecx, r15d	# tmp310, niters_vector_mult_vf.120
 593              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 594              		.loc 1 456 72 view .LVU152
 595 03a5 4189C6   		mov	r14d, eax	# tmp313, pattern_size
 596              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 597              		.loc 1 456 17 view .LVU153
 598 03a8 4F8D4C3D 		lea	r9, 0[r13+r15]	# tmp312,
 598      00
 599              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 600              		.loc 1 456 81 view .LVU154
 601 03ad 01F1     		add	ecx, esi	# tmp311, shift
 602              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 603              		.loc 1 456 99 view .LVU155
 604 03af 83E13F   		and	ecx, 63	# _49,
 605              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 456 72 view .LVU156
 607 03b2 4129CE   		sub	r14d, ecx	# tmp313, _49
 608              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 609              		.loc 1 456 55 view .LVU157
 610 03b5 C44289F7 		shlx	r12, r8, r14	# tmp314, pattern, tmp313
 610      E0
 611              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 612              		.loc 1 456 127 view .LVU158
 613 03ba C4C2F3F7 		shrx	rcx, r8, rcx	# tmp315, pattern, _49
 613      C8
GAS LISTING /tmp/ccdGK7kM.s 			page 22


 614              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 615              		.loc 1 456 116 view .LVU159
 616 03bf 4C09E1   		or	rcx, r12	# tmp316, tmp314
 617 03c2 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_55, tmp316
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 618              		.loc 1 455 39 is_stmt 1 view .LVU160
 619 03c6 4D8D4F01 		lea	r9, 1[r15]	# i,
 620              	.LVL26:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 621              		.loc 1 455 25 view .LVU161
 622              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 623              		.loc 1 455 5 is_stmt 0 view .LVU162
 624 03ca 4D39CA   		cmp	r10, r9	# loop_range, i
 625 03cd 0F861C01 		jbe	.L10	#,
 625      0000
 626              		.loc 1 456 9 is_stmt 1 view .LVU163
 627              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 628              		.loc 1 456 81 is_stmt 0 view .LVU164
 629 03d3 4189D6   		mov	r14d, edx	# tmp317, tmp271
 630 03d6 450FAFF1 		imul	r14d, r9d	# tmp317, i
 631              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 632              		.loc 1 456 72 view .LVU165
 633 03da 4189C4   		mov	r12d, eax	# tmp320, pattern_size
 634              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 635              		.loc 1 456 17 view .LVU166
 636 03dd 4D01E9   		add	r9, r13	# tmp319, destination_start_word
 637              	.LVL27:
 638              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 639              		.loc 1 456 81 view .LVU167
 640 03e0 4101F6   		add	r14d, esi	# tmp318, shift
 641              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 642              		.loc 1 456 99 view .LVU168
 643 03e3 4183E63F 		and	r14d, 63	# _31,
 644              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 645              		.loc 1 456 72 view .LVU169
 646 03e7 4529F4   		sub	r12d, r14d	# tmp320, _31
 647              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 648              		.loc 1 456 55 view .LVU170
 649 03ea C4C299F7 		shlx	rcx, r8, r12	# tmp321, pattern, tmp320
 649      C8
 650              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 651              		.loc 1 456 127 view .LVU171
 652 03ef C4428BF7 		shrx	r14, r8, r14	# tmp322, pattern, _31
 652      F0
 653              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 456 116 view .LVU172
 655 03f4 4C09F1   		or	rcx, r14	# tmp323, tmp322
 656 03f7 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_149, tmp323
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 455 39 is_stmt 1 view .LVU173
 658 03fb 4D8D4F02 		lea	r9, 2[r15]	# i,
 659              	.LVL28:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 660              		.loc 1 455 25 view .LVU174
 661              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccdGK7kM.s 			page 23


 662              		.loc 1 455 5 is_stmt 0 view .LVU175
 663 03ff 4D39CA   		cmp	r10, r9	# loop_range, i
 664 0402 0F86E700 		jbe	.L10	#,
 664      0000
 665              		.loc 1 456 9 is_stmt 1 view .LVU176
 666              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 456 81 is_stmt 0 view .LVU177
 668 0408 4189D4   		mov	r12d, edx	# tmp324, tmp271
 669 040b 450FAFE1 		imul	r12d, r9d	# tmp324, i
 670              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 671              		.loc 1 456 72 view .LVU178
 672 040f 89C1     		mov	ecx, eax	# tmp327, pattern_size
 673              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 674              		.loc 1 456 17 view .LVU179
 675 0411 4D01E9   		add	r9, r13	# tmp326, destination_start_word
 676              	.LVL29:
 677              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 678              		.loc 1 456 81 view .LVU180
 679 0414 4101F4   		add	r12d, esi	# tmp325, shift
 680              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 681              		.loc 1 456 99 view .LVU181
 682 0417 4183E43F 		and	r12d, 63	# _158,
 683              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 684              		.loc 1 456 72 view .LVU182
 685 041b 4429E1   		sub	ecx, r12d	# tmp327, _158
 686              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 687              		.loc 1 456 55 view .LVU183
 688 041e C442F1F7 		shlx	r14, r8, rcx	# tmp328, pattern, tmp327
 688      F0
 689              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 690              		.loc 1 456 127 view .LVU184
 691 0423 C4429BF7 		shrx	r12, r8, r12	# tmp329, pattern, _158
 691      E0
 692              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 693              		.loc 1 456 116 view .LVU185
 694 0428 4D09F4   		or	r12, r14	# tmp330, tmp328
 695 042b 4E8924CF 		mov	QWORD PTR [rdi+r9*8], r12	# *_164, tmp330
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 696              		.loc 1 455 39 is_stmt 1 view .LVU186
 697 042f 4D8D4F03 		lea	r9, 3[r15]	# i,
 698              	.LVL30:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 699              		.loc 1 455 25 view .LVU187
 700              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 701              		.loc 1 455 5 is_stmt 0 view .LVU188
 702 0433 4D39CA   		cmp	r10, r9	# loop_range, i
 703 0436 0F86B300 		jbe	.L10	#,
 703      0000
 704              		.loc 1 456 9 is_stmt 1 view .LVU189
 705              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 706              		.loc 1 456 81 is_stmt 0 view .LVU190
 707 043c 89D1     		mov	ecx, edx	# tmp331, tmp271
 708 043e 410FAFC9 		imul	ecx, r9d	# tmp331, i
 709              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 710              		.loc 1 456 72 view .LVU191
 711 0442 4189C6   		mov	r14d, eax	# tmp334, pattern_size
GAS LISTING /tmp/ccdGK7kM.s 			page 24


 712              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 713              		.loc 1 456 17 view .LVU192
 714 0445 4D01E9   		add	r9, r13	# tmp333, destination_start_word
 715              	.LVL31:
 716              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 717              		.loc 1 456 81 view .LVU193
 718 0448 01F1     		add	ecx, esi	# tmp332, shift
 719              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 720              		.loc 1 456 99 view .LVU194
 721 044a 83E13F   		and	ecx, 63	# _173,
 722              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 723              		.loc 1 456 72 view .LVU195
 724 044d 4129CE   		sub	r14d, ecx	# tmp334, _173
 725              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 726              		.loc 1 456 55 view .LVU196
 727 0450 C44289F7 		shlx	r12, r8, r14	# tmp335, pattern, tmp334
 727      E0
 728              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 729              		.loc 1 456 127 view .LVU197
 730 0455 C4C2F3F7 		shrx	rcx, r8, rcx	# tmp336, pattern, _173
 730      C8
 731              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 732              		.loc 1 456 116 view .LVU198
 733 045a 4C09E1   		or	rcx, r12	# tmp337, tmp335
 734 045d 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_179, tmp337
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 735              		.loc 1 455 39 is_stmt 1 view .LVU199
 736 0461 4D8D4F04 		lea	r9, 4[r15]	# i,
 737              	.LVL32:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 738              		.loc 1 455 25 view .LVU200
 739              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 740              		.loc 1 455 5 is_stmt 0 view .LVU201
 741 0465 4D39CA   		cmp	r10, r9	# loop_range, i
 742 0468 0F868100 		jbe	.L10	#,
 742      0000
 743              		.loc 1 456 9 is_stmt 1 view .LVU202
 744              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 745              		.loc 1 456 81 is_stmt 0 view .LVU203
 746 046e 4189D4   		mov	r12d, edx	# tmp338, tmp271
 747 0471 450FAFE1 		imul	r12d, r9d	# tmp338, i
 748              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 749              		.loc 1 456 72 view .LVU204
 750 0475 4189C6   		mov	r14d, eax	# tmp341, pattern_size
 751              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 752              		.loc 1 456 17 view .LVU205
 753 0478 4D01E9   		add	r9, r13	# tmp340, destination_start_word
 754              	.LVL33:
 755              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 756              		.loc 1 456 81 view .LVU206
 757 047b 4101F4   		add	r12d, esi	# tmp339, shift
 758              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 759              		.loc 1 456 99 view .LVU207
 760 047e 4183E43F 		and	r12d, 63	# _188,
 761              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 762              		.loc 1 456 72 view .LVU208
GAS LISTING /tmp/ccdGK7kM.s 			page 25


 763 0482 4529E6   		sub	r14d, r12d	# tmp341, _188
 764              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 765              		.loc 1 456 55 view .LVU209
 766 0485 C44289F7 		shlx	r14, r8, r14	# tmp342, pattern, tmp341
 766      F0
 767              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 768              		.loc 1 456 127 view .LVU210
 769 048a C4C29BF7 		shrx	rcx, r8, r12	# tmp343, pattern, _188
 769      C8
 770              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 771              		.loc 1 456 116 view .LVU211
 772 048f 4C09F1   		or	rcx, r14	# tmp344, tmp342
 773 0492 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_194, tmp344
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 774              		.loc 1 455 39 is_stmt 1 view .LVU212
 775 0496 4D8D4F05 		lea	r9, 5[r15]	# i,
 776              	.LVL34:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 777              		.loc 1 455 25 view .LVU213
 778              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 779              		.loc 1 455 5 is_stmt 0 view .LVU214
 780 049a 4D39CA   		cmp	r10, r9	# loop_range, i
 781 049d 7650     		jbe	.L10	#,
 782              		.loc 1 456 9 is_stmt 1 view .LVU215
 783              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 784              		.loc 1 456 81 is_stmt 0 view .LVU216
 785 049f 4189D4   		mov	r12d, edx	# tmp345, tmp271
 786 04a2 450FAFE1 		imul	r12d, r9d	# tmp345, i
 787              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 788              		.loc 1 456 72 view .LVU217
 789 04a6 4189C6   		mov	r14d, eax	# tmp348, pattern_size
 790              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 791              		.loc 1 456 17 view .LVU218
 792 04a9 4D01E9   		add	r9, r13	# tmp347, destination_start_word
 793              	.LVL35:
 794              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 456 81 view .LVU219
 796 04ac 4101F4   		add	r12d, esi	# tmp346, shift
 797              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 456 99 view .LVU220
 799 04af 4183E43F 		and	r12d, 63	# _203,
 800              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 456 72 view .LVU221
 802 04b3 4529E6   		sub	r14d, r12d	# tmp348, _203
 803              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 804              		.loc 1 456 55 view .LVU222
 805 04b6 C44289F7 		shlx	r14, r8, r14	# tmp349, pattern, tmp348
 805      F0
 806              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 807              		.loc 1 456 127 view .LVU223
 808 04bb C4C29BF7 		shrx	rcx, r8, r12	# tmp350, pattern, _203
 808      C8
 809              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 810              		.loc 1 455 39 view .LVU224
 811 04c0 4983C706 		add	r15, 6	# i,
GAS LISTING /tmp/ccdGK7kM.s 			page 26


 812              	.LVL36:
 813              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 456 116 view .LVU225
 815 04c4 4C09F1   		or	rcx, r14	# tmp351, tmp349
 816 04c7 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_209, tmp351
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 817              		.loc 1 455 39 is_stmt 1 view .LVU226
 818              	.LVL37:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 819              		.loc 1 455 25 view .LVU227
 820              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 821              		.loc 1 455 5 is_stmt 0 view .LVU228
 822 04cb 4D39FA   		cmp	r10, r15	# loop_range, i
 823 04ce 761F     		jbe	.L10	#,
 824              		.loc 1 456 9 is_stmt 1 view .LVU229
 825              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 826              		.loc 1 456 81 is_stmt 0 view .LVU230
 827 04d0 410FAFD7 		imul	edx, r15d	# tmp352, i
 828              	.LVL38:
 829              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 830              		.loc 1 456 17 view .LVU231
 831 04d4 4D01EF   		add	r15, r13	# tmp354, destination_start_word
 832              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 456 81 view .LVU232
 834 04d7 01D6     		add	esi, edx	# tmp353, tmp352
 835              	.LVL39:
 836              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 837              		.loc 1 456 99 view .LVU233
 838 04d9 83E63F   		and	esi, 63	# _116,
 839              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 840              		.loc 1 456 72 view .LVU234
 841 04dc 29F0     		sub	eax, esi	# tmp355, _116
 842              	.LVL40:
 843              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 844              		.loc 1 456 55 view .LVU235
 845 04de C4C2F9F7 		shlx	rdx, r8, rax	# tmp356, pattern, tmp355
 845      D0
 846              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 847              		.loc 1 456 127 view .LVU236
 848 04e3 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp357, pattern, _116
 848      F0
 849              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 850              		.loc 1 456 116 view .LVU237
 851 04e8 4809D6   		or	rsi, rdx	# tmp358, tmp356
 852 04eb 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_109, tmp358
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 853              		.loc 1 455 39 is_stmt 1 view .LVU238
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 854              		.loc 1 455 25 view .LVU239
 855              	.L10:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 856              		.loc 1 455 25 is_stmt 0 view .LVU240
 857              	.LBE266:
 457:sieve_extend.c ****     }
 458:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 858              		.loc 1 458 5 is_stmt 1 view .LVU241
GAS LISTING /tmp/ccdGK7kM.s 			page 27


 859              	# sieve_extend.c:458:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 860              		.loc 1 458 37 is_stmt 0 view .LVU242
 861 04ef 4A211CDF 		and	QWORD PTR [rdi+r11*8], rbx	# *_57, _127
 862              	# sieve_extend.c:459: }
 459:sieve_extend.c **** }
 863              		.loc 1 459 1 view .LVU243
 864 04f3 5B       		pop	rbx	#
 865 04f4 415C     		pop	r12	#
 866 04f6 415D     		pop	r13	#
 867              	.LVL41:
 868              		.loc 1 459 1 view .LVU244
 869 04f8 415E     		pop	r14	#
 870 04fa 415F     		pop	r15	#
 871 04fc 5D       		pop	rbp	#
 872              		.cfi_remember_state
 873              		.cfi_def_cfa 7, 8
 874 04fd C3       		ret	
 875              	.LVL42:
 876 04fe 6690     		.p2align 4,,10
 877              		.p2align 3
 878              	.L39:
 879              		.cfi_restore_state
 441:sieve_extend.c ****         return;
 880              		.loc 1 441 9 is_stmt 1 view .LVU245
 881              	# sieve_extend.c:441:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 441:sieve_extend.c ****         return;
 882              		.loc 1 441 86 is_stmt 0 view .LVU246
 883 0500 4821D8   		and	rax, rbx	# tmp267, _127
 884              	# sieve_extend.c:441:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 441:sieve_extend.c ****         return;
 885              		.loc 1 441 42 view .LVU247
 886 0503 4C09E8   		or	rax, r13	# tmp268, pretmp_121
 887 0506 498907   		mov	QWORD PTR [r15], rax	# *_120, tmp268
 442:sieve_extend.c ****     }
 888              		.loc 1 442 9 is_stmt 1 view .LVU248
 889              	# sieve_extend.c:459: }
 890              		.loc 1 459 1 is_stmt 0 view .LVU249
 891 0509 5B       		pop	rbx	#
 892 050a 415C     		pop	r12	#
 893 050c 415D     		pop	r13	#
 894 050e 415E     		pop	r14	#
 895              	.LVL43:
 896              		.loc 1 459 1 view .LVU250
 897 0510 415F     		pop	r15	#
 898 0512 5D       		pop	rbp	#
 899              		.cfi_remember_state
 900              		.cfi_def_cfa 7, 8
 901 0513 C3       		ret	
 902              	.LVL44:
 903              	.L40:
 904              		.cfi_restore_state
 905              		.loc 1 459 1 view .LVU251
 906 0514 C5F877   		vzeroupper
 907 0517 EBD6     		jmp	.L10	#
 908              	.LVL45:
 909              	.L12:
 910              	.LBB267:
GAS LISTING /tmp/ccdGK7kM.s 			page 28


 911              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 912              		.loc 1 455 20 view .LVU252
 913 0519 4531FF   		xor	r15d, r15d	# niters_vector_mult_vf.120
 914 051c E97EFEFF 		jmp	.L7	#
 914      FF
 915              	.LBE267:
 916              		.cfi_endproc
 917              	.LFE5332:
 919 0521 66662E0F 		.p2align 4
 919      1F840000 
 919      0000000F 
 919      1F4000
 921              	extendSieve_shiftright_ivdep:
 922              	.LVL46:
 923              	.LFB5337:
 460:sieve_extend.c **** 
 461:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 462:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 463:sieve_extend.c **** 
 464:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 465:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 466:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 467:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 468:sieve_extend.c ****     
 469:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 470:sieve_extend.c **** 
 471:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 472:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 473:sieve_extend.c ****         copy_word += size;
 474:sieve_extend.c ****     }
 475:sieve_extend.c **** 
 476:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 477:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 478:sieve_extend.c ****         source_word++;
 479:sieve_extend.c ****         copy_word++;
 480:sieve_extend.c ****     }
 481:sieve_extend.c **** 
 482:sieve_extend.c **** }
 483:sieve_extend.c **** 
 484:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 485:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 486:sieve_extend.c **** 
 487:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 488:sieve_extend.c **** {
 489:sieve_extend.c ****     int i = 0;
 490:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 491:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 492:sieve_extend.c ****     {
 493:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 494:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 495:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 496:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 497:sieve_extend.c ****     }
 498:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 499:sieve_extend.c ****     {
 500:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 29


 501:sieve_extend.c ****     }    
 502:sieve_extend.c **** }
 503:sieve_extend.c **** 
 504:sieve_extend.c **** #define forward_distance 3
 505:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 507:sieve_extend.c ****    
 508:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 509:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 510:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 511:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 512:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 513:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 514:sieve_extend.c **** 
 515:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 516:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 517:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 518:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 519:sieve_extend.c ****         return; // rapid exit for one word variant
 520:sieve_extend.c ****     }
 521:sieve_extend.c **** 
 522:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 523:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 524:sieve_extend.c ****                                 & keepmask(copy_start);
 525:sieve_extend.c **** 
 526:sieve_extend.c ****     copy_word++;
 527:sieve_extend.c **** 
 528:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 529:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 530:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 531:sieve_extend.c ****         
 532:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 533:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 534:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 535:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 536:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 537:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 538:sieve_extend.c **** 
 539:sieve_extend.c ****         #pragma ivdep 
 540:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 541:sieve_extend.c ****             #pragma ivdep
 542:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 543:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 544:sieve_extend.c ****             #pragma ivdep
 545:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 546:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 547:sieve_extend.c ****         }
 548:sieve_extend.c **** 
 549:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 550:sieve_extend.c ****         #pragma ivdep 
 551:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 552:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 553:sieve_extend.c **** 
 554:sieve_extend.c ****         // #pragma GCC ivdep
 555:sieve_extend.c ****         // for (; i <= size_word; i++) 
 556:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 557:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 30


 558:sieve_extend.c ****     else {
 559:sieve_extend.c ****         register counter_t i = 0;
 560:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 561:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 562:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 563:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 564:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 565:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 566:sieve_extend.c ****     }
 567:sieve_extend.c **** 
 568:sieve_extend.c ****     // for (; i <= size_word; i++) 
 569:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 570:sieve_extend.c **** 
 571:sieve_extend.c ****     // for (; i <= size_word; i++) 
 572:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 573:sieve_extend.c **** 
 574:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 575:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 576:sieve_extend.c **** }
 577:sieve_extend.c **** 
 578:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 579:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 580:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 581:sieve_extend.c ****     counter_t distance = 0;
 582:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 583:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 584:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 585:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 586:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 587:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 588:sieve_extend.c ****         copy_word += 2;
 589:sieve_extend.c ****         source_word += 2;
 590:sieve_extend.c ****         distance += 2;
 591:sieve_extend.c ****     }
 592:sieve_extend.c ****     return distance;
 593:sieve_extend.c **** }
 594:sieve_extend.c **** 
 595:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 596:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 597:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 598:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 599:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 600:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 601:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 602:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 603:sieve_extend.c **** //
 604:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 605:sieve_extend.c **** //    copy_ptr++;
 606:sieve_extend.c **** //    source_ptr++;
 607:sieve_extend.c **** //
 608:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 609:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 610:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 611:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 612:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 613:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 614:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
GAS LISTING /tmp/ccdGK7kM.s 			page 31


 615:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 616:sieve_extend.c **** //
 617:sieve_extend.c **** //        copy_ptr+=3;
 618:sieve_extend.c **** //        source_ptr+=3;
 619:sieve_extend.c **** //    }
 620:sieve_extend.c **** //
 621:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 622:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 623:sieve_extend.c **** //        source_ptr++;
 624:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 625:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 626:sieve_extend.c **** //        copy_ptr++;
 627:sieve_extend.c **** //    }
 628:sieve_extend.c **** //
 629:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 630:sieve_extend.c **** //
 631:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 632:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 633:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 634:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 635:sieve_extend.c **** //         copy_ptr += size;
 636:sieve_extend.c **** //     }
 637:sieve_extend.c **** //
 638:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 639:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 640:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 641:sieve_extend.c **** //        copy_ptr++;
 642:sieve_extend.c **** //        source_ptr++;
 643:sieve_extend.c **** //    }
 644:sieve_extend.c **** //
 645:sieve_extend.c **** //}
 646:sieve_extend.c **** 
 647:sieve_extend.c **** 
 648:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 924              		.loc 1 648 149 is_stmt 1 view -0
 925              		.cfi_startproc
 649:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 926              		.loc 1 649 5 view .LVU254
 650:sieve_extend.c ****    
 651:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 927              		.loc 1 651 5 view .LVU255
 928              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 929              		.loc 1 648 149 is_stmt 0 view .LVU256
 930 0530 55       		push	rbp	#
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 6, -16
 933              	# sieve_extend.c:652:     const counter_t copy_start = source_start + size;
 652:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 934              		.loc 1 652 21 view .LVU257
 935 0531 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 936              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 937              		.loc 1 651 21 view .LVU258
 938 0535 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 939              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
GAS LISTING /tmp/ccdGK7kM.s 			page 32


 940              		.loc 1 648 149 view .LVU259
 941 0538 4889E5   		mov	rbp, rsp	#,
 942              		.cfi_def_cfa_register 6
 943 053b 4157     		push	r15	#
 944              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 945              		.loc 1 653 39 view .LVU260
 946 053d 4D89C2   		mov	r10, r8	# _4, copy_start
 947 0540 4183E23F 		and	r10d, 63	# _4,
 948              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 949              		.loc 1 648 149 view .LVU261
 950 0544 4156     		push	r14	#
 951              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 952              		.loc 1 651 21 view .LVU262
 953 0546 48C1E806 		shr	rax, 6	# destination_stop_word,
 954 054a F7D1     		not	ecx	# tmp308
 955              	.LVL47:
 956              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 957              		.loc 1 648 149 view .LVU263
 958 054c 4155     		push	r13	#
 959 054e 4154     		push	r12	#
 960              		.cfi_offset 15, -24
 961              		.cfi_offset 14, -32
 962              		.cfi_offset 13, -40
 963              		.cfi_offset 12, -48
 964              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 965              		.loc 1 653 67 view .LVU264
 966 0550 4989F4   		mov	r12, rsi	# _5, source_start
 967              	# sieve_extend.c:655:     register counter_t source_word = wordindex(source_start);
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 655:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 968              		.loc 1 655 24 view .LVU265
 969 0553 48C1EE06 		shr	rsi, 6	# source_start,
 970              	.LVL48:
 971              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 972              		.loc 1 648 149 view .LVU266
 973 0557 53       		push	rbx	#
 974              	# sieve_extend.c:655:     register counter_t source_word = wordindex(source_start);
 975              		.loc 1 655 24 view .LVU267
 976 0558 4989F1   		mov	r9, rsi	# source_word, source_start
 977 055b 4E8D3CCD 		lea	r15, 0[0+r9*8]	# _179,
 977      00000000 
 978              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 979              		.loc 1 648 149 view .LVU268
 980 0563 4883E4E0 		and	rsp, -32	#,
 981              		.cfi_offset 3, -56
 982              	.LVL49:
 652:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 983              		.loc 1 652 5 is_stmt 1 view .LVU269
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 984              		.loc 1 653 5 view .LVU270
 985              	# sieve_extend.c:655:     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccdGK7kM.s 			page 33


 986              		.loc 1 655 24 is_stmt 0 view .LVU271
 987 0567 48897424 		mov	QWORD PTR -32[rsp], rsi	# %sfp, source_word
 987      E0
 988              	# sieve_extend.c:656:     register counter_t copy_word = wordindex(copy_start);
 656:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 989              		.loc 1 656 24 view .LVU272
 990 056c 4C89C6   		mov	rsi, r8	# copy_start, copy_start
 991 056f 48C1EE06 		shr	rsi, 6	# copy_start,
 992 0573 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _176,
 992      00000000 
 993              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 994              		.loc 1 653 67 view .LVU273
 995 057b 4183E43F 		and	r12d, 63	# _5,
 996              	.LVL50:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 997              		.loc 1 654 5 is_stmt 1 view .LVU274
 655:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 998              		.loc 1 655 5 view .LVU275
 999              		.loc 1 656 5 view .LVU276
 657:sieve_extend.c **** 
 658:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1000              		.loc 1 658 5 view .LVU277
 1001              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1002              		.loc 1 653 31 is_stmt 0 view .LVU278
 1003 057f 4D89D1   		mov	r9, r10	# shift, _4
 1004              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1005              		.loc 1 651 21 view .LVU279
 1006 0582 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1006      F8
 1007              	.LVL51:
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1008              		.loc 1 651 21 view .LVU280
 1009 0587 4C8D2C1F 		lea	r13, [rdi+rbx]	# _177,
 1010              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1011              		.loc 1 653 31 view .LVU281
 1012 058b 4D29E1   		sub	r9, r12	# shift, _5
 1013              	.LVL52:
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1014              		.loc 1 653 31 view .LVU282
 1015 058e 4D8B7500 		mov	r14, QWORD PTR 0[r13]	# pretmp_178, *_177
 1016              	# sieve_extend.c:654:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1017              		.loc 1 654 31 view .LVU283
 1018 0592 4983C440 		add	r12, 64	# tmp301,
 1019              	.LVL53:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1020              		.loc 1 654 31 view .LVU284
 1021 0596 4E8D1C3F 		lea	r11, [rdi+r15]	# _180,
 1022 059a 4D29D4   		sub	r12, r10	# tmp301, _4
 1023              	.LVL54:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1024              		.loc 1 654 31 view .LVU285
 1025 059d 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, _179
GAS LISTING /tmp/ccdGK7kM.s 			page 34


 1025      E8
 1026 05a2 49C7C7FF 		mov	r15, -1	# tmp307,
 1026      FFFFFF
 1027 05a9 C4C2B1F7 		shlx	rax, QWORD PTR [r11], r9	# tmp303, *_180, shift
 1027      03
 1028 05ae C4429BF7 		shrx	r8, r14, r12	# tmp305, pretmp_178, shift_flipped
 1028      C6
 1029              	.LVL55:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1030              		.loc 1 654 31 view .LVU286
 1031 05b3 C442A9F7 		shlx	r10, r15, r10	# _189, tmp307, _4
 1031      D7
 1032              	.LVL56:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1033              		.loc 1 654 31 view .LVU287
 1034 05b8 44894C24 		mov	DWORD PTR -12[rsp], r9d	# %sfp, shift
 1034      F4
 1035 05bd 4C09C0   		or	rax, r8	# _186, tmp305
 1036 05c0 C442F3F7 		shrx	r15, r15, rcx	# _193, tmp307, tmp308
 1036      FF
 1037              	# sieve_extend.c:658:     if (copy_word >= destination_stop_word) { 
 1038              		.loc 1 658 8 view .LVU288
 1039 05c5 48397424 		cmp	QWORD PTR -8[rsp], rsi	# %sfp, copy_word
 1039      F8
 1040 05ca 0F865009 		jbe	.L238	#,
 1040      0000
 1041              	# sieve_extend.c:667:                                 & keepmask(copy_start);
 659:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 660:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 661:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 662:sieve_extend.c ****         return; // rapid exit for one word variant
 663:sieve_extend.c ****     }
 664:sieve_extend.c **** 
 665:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 666:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 667:sieve_extend.c ****                                 & keepmask(copy_start);
 1042              		.loc 1 667 33 view .LVU289
 1043 05d0 4C21D0   		and	rax, r10	# tmp314, _189
 1044              	# sieve_extend.c:665:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 665:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1045              		.loc 1 665 25 view .LVU290
 1046 05d3 4C09F0   		or	rax, r14	# tmp315, pretmp_178
 1047 05d6 49894500 		mov	QWORD PTR 0[r13], rax	# *_177, tmp315
 1048 05da 4589E0   		mov	r8d, r12d	# _184, shift_flipped
 665:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1049              		.loc 1 665 5 is_stmt 1 view .LVU291
 668:sieve_extend.c **** 
 669:sieve_extend.c ****     copy_word++;
 1050              		.loc 1 669 5 view .LVU292
 1051              	# sieve_extend.c:669:     copy_word++;
 1052              		.loc 1 669 14 is_stmt 0 view .LVU293
 1053 05dd 4C8D7601 		lea	r14, 1[rsi]	# copy_word,
 1054              	.LVL57:
 670:sieve_extend.c **** 
 671:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 1055              		.loc 1 671 5 is_stmt 1 view .LVU294
 672:sieve_extend.c **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 35


 673:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1056              		.loc 1 673 5 view .LVU295
 1057              	# sieve_extend.c:673:     if (size >= WORD_SIZE_counter) {
 1058              		.loc 1 673 8 is_stmt 0 view .LVU296
 1059 05e1 4883FA3F 		cmp	rdx, 63	# size,
 1060 05e5 0F87AD03 		ja	.L239	#,
 1060      0000
 674:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 675:sieve_extend.c **** 
 676:sieve_extend.c ****         #pragma unroll
 677:sieve_extend.c ****         #pragma ivdep
 678:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 679:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 680:sieve_extend.c ****         }
 681:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 682:sieve_extend.c ****     }
 683:sieve_extend.c **** 
 684:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1061              		.loc 1 684 12 is_stmt 1 discriminator 1 view .LVU297
 1062              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1063              		.loc 1 684 5 is_stmt 0 discriminator 1 view .LVU298
 1064 05eb 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1064      F8
 1065              	.LVL58:
 1066              		.loc 1 684 5 discriminator 1 view .LVU299
 1067 05f0 4C39F2   		cmp	rdx, r14	# destination_stop_word, copy_word
 1068 05f3 0F828503 		jb	.L54	#,
 1068      0000
 1069 05f9 4C8B5C24 		mov	r11, QWORD PTR -32[rsp]	# source_word, %sfp
 1069      E0
 1070 05fe 488D4A01 		lea	rcx, 1[rdx]	# _198,
 1071 0602 4989D5   		mov	r13, rdx	# _173, destination_stop_word
 1072 0605 4A8D14F5 		lea	rdx, 0[0+r14*8]	# _166,
 1072      00000000 
 1073 060d 4A8D04DD 		lea	rax, 0[0+r11*8]	# _225,
 1073      00000000 
 1074 0615 4C8D5220 		lea	r10, 32[rdx]	# tmp380,
 1075 0619 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, _198
 1075      E8
 1076 061e 4D29F5   		sub	r13, r14	# _173, copy_word
 1077 0621 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _168,
 1077      28000000 
 1078 0629 4C39D0   		cmp	rax, r10	# _225, tmp380
 1079 062c 410F9DC3 		setge	r11b	#, tmp382
 1080 0630 4839CA   		cmp	rdx, rcx	# _166, _168
 1081 0633 410F9DC2 		setge	r10b	#, tmp384
 1082 0637 4508D3   		or	r11b, r10b	# tmp382, tmp384
 1083 063a 488D5E02 		lea	rbx, 2[rsi]	# _175,
 1084 063e 0F84C506 		je	.L46	#,
 1084      0000
 1085 0644 4983FD03 		cmp	r13, 3	# _173,
 1086 0648 410F97C3 		seta	r11b	#, tmp387
 1087 064c 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1087      E8
 1088 0651 410F96C2 		setbe	r10b	#, tmp389
 1089 0655 4584D3   		test	r11b, r10b	# tmp387, tmp389
 1090 0658 0F84AB06 		je	.L46	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 36


 1090      0000
 1091 065e 4C8B5424 		mov	r10, QWORD PTR -8[rsp]	# tmp391, %sfp
 1091      F8
 1092 0663 C5F96E4C 		vmovd	xmm1, DWORD PTR -12[rsp]	# _182, %sfp
 1092      24F4
 1093 0669 4929F2   		sub	r10, rsi	# tmp391, copy_word
 1094 066c 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1094      E8
 1095 0671 BE010000 		mov	esi, 1	# tmp392,
 1095      00
 1096 0676 4C0F47D6 		cmova	r10, rsi	# tmp391,, niters.147, tmp392
 1097 067a C4C1796E 		vmovd	xmm0, r12d	# _184, _184
 1097      C4
 1098 067f 4D89D3   		mov	r11, r10	# bnd.148, niters.147
 1099 0682 49C1EB02 		shr	r11, 2	# bnd.148,
 1100 0686 49C1E305 		sal	r11, 5	# bnd.148,
 1101 068a 4D8D43E0 		lea	r8, -32[r11]	# tmp446,
 1102 068e 49C1E805 		shr	r8, 5	# tmp444,
 1103 0692 49FFC0   		inc	r8	# tmp447
 1104 0695 488D740F 		lea	rsi, -32[rdi+rcx]	# vectp.157,
 1104      E0
 1105 069a 4801F8   		add	rax, rdi	# vectp.153, bitarray
 1106 069d 4801FA   		add	rdx, rdi	# vectp.162, bitarray
 1107              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1108              		.loc 1 684 5 view .LVU300
 1109 06a0 31C9     		xor	ecx, ecx	# ivtmp.192
 1110 06a2 4183E007 		and	r8d, 7	# tmp448,
 1111 06a6 0F841301 		je	.L55	#,
 1111      0000
 1112 06ac 4983F801 		cmp	r8, 1	# tmp448,
 1113 06b0 0F84E100 		je	.L172	#,
 1113      0000
 1114 06b6 4983F802 		cmp	r8, 2	# tmp448,
 1115 06ba 0F84B800 		je	.L173	#,
 1115      0000
 1116 06c0 4983F803 		cmp	r8, 3	# tmp448,
 1117 06c4 0F848E00 		je	.L174	#,
 1117      0000
 1118 06ca 4983F804 		cmp	r8, 4	# tmp448,
 1119 06ce 7469     		je	.L175	#,
 1120 06d0 4983F805 		cmp	r8, 5	# tmp448,
 1121 06d4 7443     		je	.L176	#,
 1122 06d6 4983F806 		cmp	r8, 6	# tmp448,
 1123 06da 741D     		je	.L177	#,
 1124              	.LVL59:
 685:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1125              		.loc 1 685 9 is_stmt 1 view .LVU301
 1126              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1127              		.loc 1 685 99 is_stmt 0 view .LVU302
 1128 06dc C5FE6F36 		vmovdqu	ymm6, YMMWORD PTR [rsi]	# tmp929, MEM[base: vectp.157_194, index: ivtmp.192_320, offset: 0
 1129              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1130              		.loc 1 685 54 view .LVU303
 1131 06e0 C5FE6F38 		vmovdqu	ymm7, YMMWORD PTR [rax]	# tmp930, MEM[base: vectp.153_2, index: ivtmp.192_320, offset: 0B]
 1132              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1133              		.loc 1 685 99 view .LVU304
 1134 06e4 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.159, tmp929, _182
 1135              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 37


 1136              		.loc 1 685 54 view .LVU305
 1137 06e8 C5C5D3D8 		vpsrlq	ymm3, ymm7, xmm0	# vect__62.155, tmp930, _184
 1138 06ec B9200000 		mov	ecx, 32	# ivtmp.192,
 1138      00
 1139              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1140              		.loc 1 685 72 view .LVU306
 1141 06f1 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.160, vect__67.159, vect__62.155
 1142              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1143              		.loc 1 685 29 view .LVU307
 1144 06f5 C5FE7F22 		vmovdqu	YMMWORD PTR [rdx], ymm4	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], vect_
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1145              		.loc 1 684 48 is_stmt 1 view .LVU308
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1146              		.loc 1 684 12 view .LVU309
 1147              	.L177:
 1148              		.loc 1 685 9 view .LVU310
 1149              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1150              		.loc 1 685 99 is_stmt 0 view .LVU311
 1151 06f9 C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rcx]	# tmp931, MEM[base: vectp.157_194, index: ivtmp.192_320, offse
 1151      0E
 1152              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1153              		.loc 1 685 54 view .LVU312
 1154 06fe C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rax+rcx]	# tmp932, MEM[base: vectp.153_2, index: ivtmp.192_320, offset:
 1154      08
 1155              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1156              		.loc 1 685 99 view .LVU313
 1157 0703 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.159, tmp931, _182
 1158              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1159              		.loc 1 685 54 view .LVU314
 1160 0707 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__62.155, tmp932, _184
 1161              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1162              		.loc 1 685 72 view .LVU315
 1163 070b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.160, vect__67.159, vect__62.155
 1163      DA
 1164              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1165              		.loc 1 685 29 view .LVU316
 1166 0710 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm11	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], 
 1166      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1167              		.loc 1 684 48 is_stmt 1 view .LVU317
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1168              		.loc 1 684 12 view .LVU318
 1169 0715 4883C120 		add	rcx, 32	# ivtmp.192,
 1170              	.L176:
 1171              		.loc 1 685 9 view .LVU319
 1172              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1173              		.loc 1 685 99 is_stmt 0 view .LVU320
 1174 0719 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rcx]	# tmp933, MEM[base: vectp.157_194, index: ivtmp.192_320, offs
 1174      0E
 1175              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1176              		.loc 1 685 54 view .LVU321
 1177 071e C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rax+rcx]	# tmp934, MEM[base: vectp.153_2, index: ivtmp.192_320, offset
 1177      08
 1178              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1179              		.loc 1 685 99 view .LVU322
 1180 0723 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__67.159, tmp933, _182
 1181              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 38


 1182              		.loc 1 685 54 view .LVU323
 1183 0727 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__62.155, tmp934, _184
 1184              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1185              		.loc 1 685 72 view .LVU324
 1186 072b C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.160, vect__67.159, vect__62.155
 1186      F7
 1187              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1188              		.loc 1 685 29 view .LVU325
 1189 0730 C5FE7F34 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm6	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], v
 1189      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1190              		.loc 1 684 48 is_stmt 1 view .LVU326
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1191              		.loc 1 684 12 view .LVU327
 1192 0735 4883C120 		add	rcx, 32	# ivtmp.192,
 1193              	.L175:
 1194              		.loc 1 685 9 view .LVU328
 1195              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1196              		.loc 1 685 99 is_stmt 0 view .LVU329
 1197 0739 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rcx]	# tmp935, MEM[base: vectp.157_194, index: ivtmp.192_320, offse
 1197      0E
 1198              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1199              		.loc 1 685 54 view .LVU330
 1200 073e C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp936, MEM[base: vectp.153_2, index: ivtmp.192_320, offset:
 1200      08
 1201              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1202              		.loc 1 685 99 view .LVU331
 1203 0743 C5EDF3F9 		vpsllq	ymm7, ymm2, xmm1	# vect__67.159, tmp935, _182
 1204              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1205              		.loc 1 685 54 view .LVU332
 1206 0747 C5E5D3E0 		vpsrlq	ymm4, ymm3, xmm0	# vect__62.155, tmp936, _184
 1207              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1208              		.loc 1 685 72 view .LVU333
 1209 074b C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.160, vect__67.159, vect__62.155
 1210              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1211              		.loc 1 685 29 view .LVU334
 1212 074f C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm5	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], v
 1212      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1213              		.loc 1 684 48 is_stmt 1 view .LVU335
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1214              		.loc 1 684 12 view .LVU336
 1215 0754 4883C120 		add	rcx, 32	# ivtmp.192,
 1216              	.L174:
 1217              		.loc 1 685 9 view .LVU337
 1218              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1219              		.loc 1 685 99 is_stmt 0 view .LVU338
 1220 0758 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rcx]	# tmp937, MEM[base: vectp.157_194, index: ivtmp.192_320, offse
 1220      0E
 1221              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1222              		.loc 1 685 54 view .LVU339
 1223 075d C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rax+rcx]	# tmp938, MEM[base: vectp.153_2, index: ivtmp.192_320, offset
 1223      08
 1224              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1225              		.loc 1 685 99 view .LVU340
 1226 0762 C53DF3C9 		vpsllq	ymm9, ymm8, xmm1	# vect__67.159, tmp937, _182
 1227              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 39


 1228              		.loc 1 685 54 view .LVU341
 1229 0766 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__62.155, tmp938, _184
 1230              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1231              		.loc 1 685 72 view .LVU342
 1232 076a C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.160, vect__67.159, vect__62.155
 1232      E3
 1233              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1234              		.loc 1 685 29 view .LVU343
 1235 076f C57E7F24 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm12	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], 
 1235      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1236              		.loc 1 684 48 is_stmt 1 view .LVU344
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1237              		.loc 1 684 12 view .LVU345
 1238 0774 4883C120 		add	rcx, 32	# ivtmp.192,
 1239              	.L173:
 1240              		.loc 1 685 9 view .LVU346
 1241              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1242              		.loc 1 685 99 is_stmt 0 view .LVU347
 1243 0778 C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rcx]	# tmp939, MEM[base: vectp.157_194, index: ivtmp.192_320, offs
 1243      0E
 1244              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1245              		.loc 1 685 54 view .LVU348
 1246 077d C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rax+rcx]	# tmp940, MEM[base: vectp.153_2, index: ivtmp.192_320, offset
 1246      08
 1247              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1248              		.loc 1 685 99 view .LVU349
 1249 0782 C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__67.159, tmp939, _182
 1250              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1251              		.loc 1 685 54 view .LVU350
 1252 0786 C585D3F0 		vpsrlq	ymm6, ymm15, xmm0	# vect__62.155, tmp940, _184
 1253              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1254              		.loc 1 685 72 view .LVU351
 1255 078a C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.160, vect__67.159, vect__62.155
 1256              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1257              		.loc 1 685 29 view .LVU352
 1258 078e C5FE7F14 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm2	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], v
 1258      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1259              		.loc 1 684 48 is_stmt 1 view .LVU353
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1260              		.loc 1 684 12 view .LVU354
 1261 0793 4883C120 		add	rcx, 32	# ivtmp.192,
 1262              	.L172:
 1263              		.loc 1 685 9 view .LVU355
 1264              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1265              		.loc 1 685 99 is_stmt 0 view .LVU356
 1266 0797 C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rsi+rcx]	# tmp941, MEM[base: vectp.157_194, index: ivtmp.192_320, offse
 1266      0E
 1267              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1268              		.loc 1 685 54 view .LVU357
 1269 079c C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp942, MEM[base: vectp.153_2, index: ivtmp.192_320, offset:
 1269      08
 1270              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1271              		.loc 1 685 99 view .LVU358
 1272 07a1 C5C5F3E1 		vpsllq	ymm4, ymm7, xmm1	# vect__67.159, tmp941, _182
 1273              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 40


 1274              		.loc 1 685 54 view .LVU359
 1275 07a5 C5E5D3E8 		vpsrlq	ymm5, ymm3, xmm0	# vect__62.155, tmp942, _184
 1276              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1277              		.loc 1 685 72 view .LVU360
 1278 07a9 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.160, vect__67.159, vect__62.155
 1279              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1280              		.loc 1 685 29 view .LVU361
 1281 07ad C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm8	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], v
 1281      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1282              		.loc 1 684 48 is_stmt 1 view .LVU362
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1283              		.loc 1 684 12 view .LVU363
 1284 07b2 4883C120 		add	rcx, 32	# ivtmp.192,
 1285 07b6 4C39D9   		cmp	rcx, r11	# ivtmp.192, _322
 1286 07b9 0F842601 		je	.L222	#,
 1286      0000
 1287              	.L55:
 1288              		.loc 1 685 9 discriminator 2 view .LVU364
 1289              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1290              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU365
 1291 07bf C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rcx]	# tmp875, MEM[base: vectp.157_194, index: ivtmp.192_320, offse
 1291      0E
 1292              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1293              		.loc 1 685 54 discriminator 2 view .LVU366
 1294 07c4 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rax+rcx]	# tmp876, MEM[base: vectp.153_2, index: ivtmp.192_320, offset
 1294      08
 1295              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1296              		.loc 1 685 99 discriminator 2 view .LVU367
 1297 07c9 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__67.159, tmp875, _182
 1298              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1299              		.loc 1 685 54 discriminator 2 view .LVU368
 1300 07cd C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__62.155, tmp876, _184
 1301              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1302              		.loc 1 685 72 discriminator 2 view .LVU369
 1303 07d1 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.160, vect__67.159, vect__62.155
 1303      EC
 1304              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1305              		.loc 1 685 29 discriminator 2 view .LVU370
 1306 07d6 C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm13	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B], 
 1306      0A
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1307              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU371
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1308              		.loc 1 684 12 discriminator 2 view .LVU372
 1309              		.loc 1 685 9 discriminator 2 view .LVU373
 1310              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1311              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU374
 1312 07db C57E6F74 		vmovdqu	ymm14, YMMWORD PTR 32[rsi+rcx]	# tmp877, MEM[base: vectp.157_194, index: ivtmp.192_320, of
 1312      0E20
 1313              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1314              		.loc 1 685 54 discriminator 2 view .LVU375
 1315 07e1 C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rax+rcx]	# tmp878, MEM[base: vectp.153_2, index: ivtmp.192_320, offse
 1315      0820
 1316              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1317              		.loc 1 685 99 discriminator 2 view .LVU376
 1318 07e7 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__67.159, tmp877, _182
GAS LISTING /tmp/ccdGK7kM.s 			page 41


 1319              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1320              		.loc 1 685 54 discriminator 2 view .LVU377
 1321 07eb C5CDD3D0 		vpsrlq	ymm2, ymm6, xmm0	# vect__62.155, tmp878, _184
 1322              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1323              		.loc 1 685 72 discriminator 2 view .LVU378
 1324 07ef C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.160, vect__67.159, vect__62.155
 1325              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1326              		.loc 1 685 29 discriminator 2 view .LVU379
 1327 07f3 C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rdx+rcx], ymm7	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B],
 1327      0A20
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1328              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU380
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1329              		.loc 1 684 12 discriminator 2 view .LVU381
 1330              		.loc 1 685 9 discriminator 2 view .LVU382
 1331              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1332              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU383
 1333 07f9 C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rsi+rcx]	# tmp879, MEM[base: vectp.157_194, index: ivtmp.192_320, off
 1333      0E40
 1334              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1335              		.loc 1 685 54 discriminator 2 view .LVU384
 1336 07ff C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rax+rcx]	# tmp880, MEM[base: vectp.153_2, index: ivtmp.192_320, offse
 1336      0840
 1337              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1338              		.loc 1 685 99 discriminator 2 view .LVU385
 1339 0805 C5DDF3E9 		vpsllq	ymm5, ymm4, xmm1	# vect__67.159, tmp879, _182
 1340              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1341              		.loc 1 685 54 discriminator 2 view .LVU386
 1342 0809 C565D3C0 		vpsrlq	ymm8, ymm3, xmm0	# vect__62.155, tmp880, _184
 1343              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1344              		.loc 1 685 72 discriminator 2 view .LVU387
 1345 080d C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.160, vect__67.159, vect__62.155
 1345      C8
 1346              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1347              		.loc 1 685 29 discriminator 2 view .LVU388
 1348 0812 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rdx+rcx], ymm9	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B],
 1348      0A40
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1349              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU389
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1350              		.loc 1 684 12 discriminator 2 view .LVU390
 1351              		.loc 1 685 9 discriminator 2 view .LVU391
 1352              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1353              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU392
 1354 0818 C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 96[rsi+rcx]	# tmp881, MEM[base: vectp.157_194, index: ivtmp.192_320, of
 1354      0E60
 1355              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1356              		.loc 1 685 54 discriminator 2 view .LVU393
 1357 081e C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rax+rcx]	# tmp882, MEM[base: vectp.153_2, index: ivtmp.192_320, offs
 1357      0860
 1358              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1359              		.loc 1 685 99 discriminator 2 view .LVU394
 1360 0824 C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__67.159, tmp881, _182
 1361              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1362              		.loc 1 685 54 discriminator 2 view .LVU395
 1363 0828 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__62.155, tmp882, _184
 1364              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 42


 1365              		.loc 1 685 72 discriminator 2 view .LVU396
 1366 082c C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.160, vect__67.159, vect__62.155
 1366      F5
 1367              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1368              		.loc 1 685 29 discriminator 2 view .LVU397
 1369 0831 C57E7F74 		vmovdqu	YMMWORD PTR 96[rdx+rcx], ymm14	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B]
 1369      0A60
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1370              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU398
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1371              		.loc 1 684 12 discriminator 2 view .LVU399
 1372              		.loc 1 685 9 discriminator 2 view .LVU400
 1373              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1374              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU401
 1375 0837 C57E6FBC 		vmovdqu	ymm15, YMMWORD PTR 128[rsi+rcx]	# tmp883, MEM[base: vectp.157_194, index: ivtmp.192_320, o
 1375      0E800000 
 1375      00
 1376              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1377              		.loc 1 685 54 discriminator 2 view .LVU402
 1378 0840 C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rax+rcx]	# tmp884, MEM[base: vectp.153_2, index: ivtmp.192_320, offs
 1378      08800000 
 1378      00
 1379              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1380              		.loc 1 685 99 discriminator 2 view .LVU403
 1381 0849 C585F3F1 		vpsllq	ymm6, ymm15, xmm1	# vect__67.159, tmp883, _182
 1382              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1383              		.loc 1 685 54 discriminator 2 view .LVU404
 1384 084d C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__62.155, tmp884, _184
 1385              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1386              		.loc 1 685 72 discriminator 2 view .LVU405
 1387 0851 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.160, vect__67.159, vect__62.155
 1388              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1389              		.loc 1 685 29 discriminator 2 view .LVU406
 1390 0855 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rdx+rcx], ymm4	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B]
 1390      0A800000 
 1390      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1391              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU407
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1392              		.loc 1 684 12 discriminator 2 view .LVU408
 1393              		.loc 1 685 9 discriminator 2 view .LVU409
 1394              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1395              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU410
 1396 085e C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 160[rsi+rcx]	# tmp885, MEM[base: vectp.157_194, index: ivtmp.192_320, of
 1396      0EA00000 
 1396      00
 1397              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1398              		.loc 1 685 54 discriminator 2 view .LVU411
 1399 0867 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rax+rcx]	# tmp886, MEM[base: vectp.153_2, index: ivtmp.192_320, offs
 1399      08A00000 
 1399      00
 1400              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1401              		.loc 1 685 99 discriminator 2 view .LVU412
 1402 0870 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.159, tmp885, _182
 1403              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 685 54 discriminator 2 view .LVU413
 1405 0874 C565D3C8 		vpsrlq	ymm9, ymm3, xmm0	# vect__62.155, tmp886, _184
GAS LISTING /tmp/ccdGK7kM.s 			page 43


 1406              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 685 72 discriminator 2 view .LVU414
 1408 0878 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.160, vect__67.159, vect__62.155
 1408      D1
 1409              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 685 29 discriminator 2 view .LVU415
 1411 087d C57E7F94 		vmovdqu	YMMWORD PTR 160[rdx+rcx], ymm10	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B
 1411      0AA00000 
 1411      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1412              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU416
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1413              		.loc 1 684 12 discriminator 2 view .LVU417
 1414              		.loc 1 685 9 discriminator 2 view .LVU418
 1415              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU419
 1417 0886 C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 192[rsi+rcx]	# tmp887, MEM[base: vectp.157_194, index: ivtmp.192_320, o
 1417      0EC00000 
 1417      00
 1418              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 685 54 discriminator 2 view .LVU420
 1420 088f C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rax+rcx]	# tmp888, MEM[base: vectp.153_2, index: ivtmp.192_320, off
 1420      08C00000 
 1420      00
 1421              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1422              		.loc 1 685 99 discriminator 2 view .LVU421
 1423 0898 C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__67.159, tmp887, _182
 1424              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1425              		.loc 1 685 54 discriminator 2 view .LVU422
 1426 089c C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__62.155, tmp888, _184
 1427              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1428              		.loc 1 685 72 discriminator 2 view .LVU423
 1429 08a0 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.160, vect__67.159, vect__62.155
 1429      FE
 1430              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1431              		.loc 1 685 29 discriminator 2 view .LVU424
 1432 08a5 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rdx+rcx], ymm15	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B
 1432      0AC00000 
 1432      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1433              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU425
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1434              		.loc 1 684 12 discriminator 2 view .LVU426
 1435              		.loc 1 685 9 discriminator 2 view .LVU427
 1436              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1437              		.loc 1 685 99 is_stmt 0 discriminator 2 view .LVU428
 1438 08ae C5FE6FB4 		vmovdqu	ymm6, YMMWORD PTR 224[rsi+rcx]	# tmp889, MEM[base: vectp.157_194, index: ivtmp.192_320, of
 1438      0EE00000 
 1438      00
 1439              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1440              		.loc 1 685 54 discriminator 2 view .LVU429
 1441 08b7 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rax+rcx]	# tmp890, MEM[base: vectp.153_2, index: ivtmp.192_320, offs
 1441      08E00000 
 1441      00
 1442              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1443              		.loc 1 685 99 discriminator 2 view .LVU430
 1444 08c0 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.159, tmp889, _182
GAS LISTING /tmp/ccdGK7kM.s 			page 44


 1445              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1446              		.loc 1 685 54 discriminator 2 view .LVU431
 1447 08c4 C5C5D3E0 		vpsrlq	ymm4, ymm7, xmm0	# vect__62.155, tmp890, _184
 1448              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1449              		.loc 1 685 72 discriminator 2 view .LVU432
 1450 08c8 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.160, vect__67.159, vect__62.155
 1451              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1452              		.loc 1 685 29 discriminator 2 view .LVU433
 1453 08cc C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rdx+rcx], ymm5	# MEM[base: vectp.162_31, index: ivtmp.192_320, offset: 0B]
 1453      0AE00000 
 1453      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU434
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1455              		.loc 1 684 12 discriminator 2 view .LVU435
 1456 08d5 4881C100 		add	rcx, 256	# ivtmp.192,
 1456      010000
 1457 08dc 4C39D9   		cmp	rcx, r11	# ivtmp.192, _322
 1458 08df 0F85DAFE 		jne	.L55	#,
 1458      FFFF
 1459              	.L222:
 1460 08e5 488B7424 		mov	rsi, QWORD PTR -32[rsp]	# source_word, %sfp
 1460      E0
 1461 08ea 4C89D2   		mov	rdx, r10	# niters_vector_mult_vf.149, niters.147
 1462 08ed 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.149,
 1463 08f1 4901D6   		add	r14, rdx	# tmp.150, niters_vector_mult_vf.149
 1464 08f4 4801D6   		add	rsi, rdx	# source_word, niters_vector_mult_vf.149
 1465 08f7 4C39D2   		cmp	rdx, r10	# niters_vector_mult_vf.149, niters.147
 1466 08fa 0F845006 		je	.L235	#,
 1466      0000
 1467              	.LVL60:
 1468              		.loc 1 685 9 view .LVU436
 1469              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1470              		.loc 1 684 5 is_stmt 0 view .LVU437
 1471 0900 4C8B4424 		mov	r8, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1471      F8
 1472              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 685 99 view .LVU438
 1474 0905 C4E2B1F7 		shlx	rax, QWORD PTR 8[rdi+rsi*8], r9	# tmp404, *_66, shift
 1474      44F708
 1475              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1476              		.loc 1 685 54 view .LVU439
 1477 090c C4629BF7 		shrx	r11, QWORD PTR [rdi+rsi*8], r12	# tmp406, *_61, shift_flipped
 1477      1CF7
 1478              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1479              		.loc 1 684 57 view .LVU440
 1480 0912 498D5601 		lea	rdx, 1[r14]	# copy_word,
 1481              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1482              		.loc 1 685 72 view .LVU441
 1483 0916 4C09D8   		or	rax, r11	# tmp408, tmp406
 1484 0919 4A8904F7 		mov	QWORD PTR [rdi+r14*8], rax	# *_70, tmp408
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1485              		.loc 1 684 48 is_stmt 1 view .LVU442
 1486              	.LVL61:
 1487              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccdGK7kM.s 			page 45


 1488              		.loc 1 685 83 is_stmt 0 view .LVU443
 1489 091d 4C8D5601 		lea	r10, 1[rsi]	# _64,
 1490              	.LVL62:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1491              		.loc 1 684 12 is_stmt 1 view .LVU444
 1492              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1493              		.loc 1 684 5 is_stmt 0 view .LVU445
 1494 0921 4939D0   		cmp	r8, rdx	# destination_stop_word, copy_word
 1495 0924 0F822606 		jb	.L235	#,
 1495      0000
 1496              		.loc 1 685 9 is_stmt 1 view .LVU446
 1497              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1498              		.loc 1 685 54 is_stmt 0 view .LVU447
 1499 092a 4A8B0CD7 		mov	rcx, QWORD PTR [rdi+r10*8]	# *_49, *_49
 1500              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1501              		.loc 1 685 99 view .LVU448
 1502 092e C4A2B1F7 		shlx	rax, QWORD PTR 8[rdi+r10*8], r9	# tmp409, *_54, shift
 1502      44D708
 1503              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1504              		.loc 1 684 57 view .LVU449
 1505 0935 4983C602 		add	r14, 2	# copy_word,
 1506              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1507              		.loc 1 685 54 view .LVU450
 1508 0939 C4629BF7 		shrx	r10, rcx, r12	# tmp411, *_49, shift_flipped
 1508      D1
 1509              	.LVL63:
 1510              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1511              		.loc 1 685 72 view .LVU451
 1512 093e 4C09D0   		or	rax, r10	# tmp413, tmp411
 1513 0941 488904D7 		mov	QWORD PTR [rdi+rdx*8], rax	# *_58, tmp413
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1514              		.loc 1 684 48 is_stmt 1 view .LVU452
 1515              	.LVL64:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1516              		.loc 1 684 12 view .LVU453
 1517              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1518              		.loc 1 685 83 is_stmt 0 view .LVU454
 1519 0945 4883C602 		add	rsi, 2	# _52,
 1520              	.LVL65:
 1521              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1522              		.loc 1 684 5 view .LVU455
 1523 0949 4D39F0   		cmp	r8, r14	# destination_stop_word, copy_word
 1524 094c 0F82FE05 		jb	.L235	#,
 1524      0000
 1525              		.loc 1 685 9 is_stmt 1 view .LVU456
 1526              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1527              		.loc 1 685 99 is_stmt 0 view .LVU457
 1528 0952 C462B1F7 		shlx	r9, QWORD PTR 8[rdi+rsi*8], r9	# tmp414, *_122, shift
 1528      4CF708
 1529              	.LVL66:
 1530              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1531              		.loc 1 685 54 view .LVU458
 1532 0959 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_127, *_127
 1533              	.LVL67:
GAS LISTING /tmp/ccdGK7kM.s 			page 46


 1534              		.loc 1 685 54 view .LVU459
 1535 095d C4629BF7 		shrx	r12, rsi, r12	# tmp416, *_127, shift_flipped
 1535      E6
 1536              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1537              		.loc 1 685 72 view .LVU460
 1538 0962 4D09E1   		or	r9, r12	# tmp418, tmp416
 1539 0965 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# *_118, tmp418
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1540              		.loc 1 684 48 is_stmt 1 view .LVU461
 1541              	.LVL68:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1542              		.loc 1 684 12 view .LVU462
 1543 0969 C5F877   		vzeroupper
 1544              	.LVL69:
 1545              	.L59:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1546              		.loc 1 684 12 is_stmt 0 view .LVU463
 1547 096c 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1547      E8
 1548 0971 41BE0000 		mov	r14d, 0	# tmp403,
 1548      0000
 1549 0977 4D0F46F5 		cmovbe	r14, r13	# _173,, tmp402
 1550 097b 4901DE   		add	r14, rbx	# copy_word, _175
 1551              	.L54:
 686:sieve_extend.c ****     }
 687:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1552              		.loc 1 687 5 is_stmt 1 view .LVU464
 1553              	# sieve_extend.c:687:     bitarray[copy_word] &= chopmask(destination_stop);
 1554              		.loc 1 687 25 is_stmt 0 view .LVU465
 1555 097e 4E213CF7 		and	QWORD PTR [rdi+r14*8], r15	# *_72, _193
 1556              	# sieve_extend.c:689: }
 688:sieve_extend.c **** 
 689:sieve_extend.c **** }
 1557              		.loc 1 689 1 view .LVU466
 1558 0982 488D65D8 		lea	rsp, -40[rbp]	#,
 1559 0986 5B       		pop	rbx	#
 1560 0987 415C     		pop	r12	#
 1561 0989 415D     		pop	r13	#
 1562 098b 415E     		pop	r14	#
 1563 098d 415F     		pop	r15	#
 1564 098f 5D       		pop	rbp	#
 1565              		.cfi_remember_state
 1566              		.cfi_def_cfa 7, 8
 1567 0990 C3       		ret	
 1568              	.LVL70:
 1569              		.p2align 4,,10
 1570 0991 0F1F8000 		.p2align 3
 1570      000000
 1571              	.L239:
 1572              		.cfi_restore_state
 1573              	.LBB268:
 674:sieve_extend.c **** 
 1574              		.loc 1 674 9 is_stmt 1 view .LVU467
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1575              		.loc 1 678 9 view .LVU468
 1576              	.LBB269:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccdGK7kM.s 			page 47


 1577              		.loc 1 678 14 view .LVU469
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1578              		.loc 1 678 40 view .LVU470
 1579              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1580              		.loc 1 678 9 is_stmt 0 view .LVU471
 1581 0998 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1581      F8
 1582 099d 488B4424 		mov	rax, QWORD PTR -32[rsp]	# source_word, %sfp
 1582      E0
 1583 09a2 4C29F1   		sub	rcx, r14	# loop_distance, copy_word
 1584 09a5 0F844903 		je	.L50	#,
 1584      0000
 1585 09ab 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1585      E8
 1586 09b0 488D4308 		lea	rax, 8[rbx]	# tmp319,
 1587 09b4 4D8D6A28 		lea	r13, 40[r10]	# tmp320,
 1588 09b8 4C39E8   		cmp	rax, r13	# tmp319, tmp320
 1589 09bb 410F9DC5 		setge	r13b	#, tmp322
 1590 09bf 498D5208 		lea	rdx, 8[r10]	# tmp324,
 1591              	.LVL71:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1592              		.loc 1 678 9 view .LVU472
 1593 09c3 4883C328 		add	rbx, 40	# tmp323,
 1594 09c7 4839D3   		cmp	rbx, rdx	# tmp323, tmp324
 1595 09ca 410F9EC2 		setle	r10b	#, tmp326
 1596 09ce 4509D5   		or	r13d, r10d	# tmp327, tmp326
 1597 09d1 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1597      E8
 1598 09d6 4983C220 		add	r10, 32	# tmp328,
 1599 09da 4939C2   		cmp	r10, rax	# tmp328, tmp319
 1600 09dd 410F9EC2 		setle	r10b	#, tmp331
 1601 09e1 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# tmp323, %sfp
 1601      E8
 1602 09e6 0F9EC3   		setle	bl	#, tmp334
 1603 09e9 4109DA   		or	r10d, ebx	# tmp335, tmp334
 1604 09ec 4584D5   		test	r13b, r10b	# tmp327, tmp335
 1605 09ef 0F846305 		je	.L47	#,
 1605      0000
 1606 09f5 4C8D69FF 		lea	r13, -1[rcx]	# tmp337,
 1607 09f9 4983FD03 		cmp	r13, 3	# tmp337,
 1608 09fd 0F865505 		jbe	.L47	#,
 1608      0000
 1609 0a03 4889CB   		mov	rbx, rcx	# bnd.164, loop_distance
 1610 0a06 48C1EB02 		shr	rbx, 2	# bnd.164,
 1611 0a0a 48C1E305 		sal	rbx, 5	# _338,
 1612 0a0e 4C8D53E0 		lea	r10, -32[rbx]	# tmp440,
 1613 0a12 49C1EA05 		shr	r10, 5	# tmp438,
 1614 0a16 49FFC2   		inc	r10	# tmp441
 1615 0a19 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1615      24F4
 1616 0a1f 4801FA   		add	rdx, rdi	# vectp.172, bitarray
 1617 0a22 4801F8   		add	rax, rdi	# vectp.177, bitarray
 1618 0a25 31F6     		xor	esi, esi	# ivtmp.211
 1619 0a27 C4C1796E 		vmovd	xmm1, r12d	# _184, _184
 1619      CC
 1620 0a2c 4183E207 		and	r10d, 7	# tmp442,
GAS LISTING /tmp/ccdGK7kM.s 			page 48


 1621 0a30 0F84FD00 		je	.L48	#,
 1621      0000
 1622 0a36 4983FA01 		cmp	r10, 1	# tmp442,
 1623 0a3a 0F84C900 		je	.L160	#,
 1623      0000
 1624 0a40 4983FA02 		cmp	r10, 2	# tmp442,
 1625 0a44 0F849E00 		je	.L161	#,
 1625      0000
 1626 0a4a 4983FA03 		cmp	r10, 3	# tmp442,
 1627 0a4e 7478     		je	.L162	#,
 1628 0a50 4983FA04 		cmp	r10, 4	# tmp442,
 1629 0a54 7451     		je	.L163	#,
 1630 0a56 4983FA05 		cmp	r10, 5	# tmp442,
 1631 0a5a 742B     		je	.L164	#,
 1632 0a5c 4983FA06 		cmp	r10, 6	# tmp442,
 1633 0a60 0F85F106 		jne	.L240	#,
 1633      0000
 1634              	.LVL72:
 1635              	.L165:
 679:sieve_extend.c ****         }
 1636              		.loc 1 679 13 is_stmt 1 view .LVU473
 1637              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1638              		.loc 1 679 62 is_stmt 0 view .LVU474
 1639 0a66 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r11+rsi]	# tmp917, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1639      2433
 1640              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1641              		.loc 1 679 109 view .LVU475
 1642 0a6c C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rdx+rsi]	# tmp918, MEM[base: vectp.172_265, index: ivtmp.211_336, offs
 1642      32
 1643              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1644              		.loc 1 679 62 view .LVU476
 1645 0a71 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.170, tmp917, _184
 1646              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1647              		.loc 1 679 109 view .LVU477
 1648 0a75 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.174, tmp918, _182
 1649              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1650              		.loc 1 679 80 view .LVU478
 1651 0a79 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.175, vect__49.170, vect__54.174
 1651      F7
 1652              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1653              		.loc 1 679 35 view .LVU479
 1654 0a7e C5FE7F34 		vmovdqu	YMMWORD PTR [rax+rsi], ymm6	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], 
 1654      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1655              		.loc 1 678 58 is_stmt 1 view .LVU480
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1656              		.loc 1 678 40 view .LVU481
 1657 0a83 4883C620 		add	rsi, 32	# ivtmp.211,
 1658              	.L164:
 679:sieve_extend.c ****         }
 1659              		.loc 1 679 13 view .LVU482
GAS LISTING /tmp/ccdGK7kM.s 			page 49


 1660              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1661              		.loc 1 679 62 is_stmt 0 view .LVU483
 1662 0a87 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r11+rsi]	# tmp919, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1662      1433
 1663              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1664              		.loc 1 679 109 view .LVU484
 1665 0a8d C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdx+rsi]	# tmp920, MEM[base: vectp.172_265, index: ivtmp.211_336, offse
 1665      32
 1666              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1667              		.loc 1 679 62 view .LVU485
 1668 0a92 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.170, tmp919, _184
 1669              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1670              		.loc 1 679 109 view .LVU486
 1671 0a96 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.174, tmp920, _182
 1672              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1673              		.loc 1 679 80 view .LVU487
 1674 0a9a C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.175, vect__49.170, vect__54.174
 1675              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1676              		.loc 1 679 35 view .LVU488
 1677 0a9e C57E7F04 		vmovdqu	YMMWORD PTR [rax+rsi], ymm8	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], 
 1677      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1678              		.loc 1 678 58 is_stmt 1 view .LVU489
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1679              		.loc 1 678 40 view .LVU490
 1680 0aa3 4883C620 		add	rsi, 32	# ivtmp.211,
 1681              	.L163:
 679:sieve_extend.c ****         }
 1682              		.loc 1 679 13 view .LVU491
 1683              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1684              		.loc 1 679 62 is_stmt 0 view .LVU492
 1685 0aa7 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r11+rsi]	# tmp921, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1685      0C33
 1686              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1687              		.loc 1 679 109 view .LVU493
 1688 0aad C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp922, MEM[base: vectp.172_265, index: ivtmp.211_336, offse
 1688      32
 1689              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1690              		.loc 1 679 62 view .LVU494
 1691 0ab2 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.170, tmp921, _184
 1692              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1693              		.loc 1 679 109 view .LVU495
 1694 0ab6 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.174, tmp922, _182
 1695              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1696              		.loc 1 679 80 view .LVU496
 1697 0aba C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.175, vect__49.170, vect__54.174
GAS LISTING /tmp/ccdGK7kM.s 			page 50


 1697      E3
 1698              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1699              		.loc 1 679 35 view .LVU497
 1700 0abf C57E7F24 		vmovdqu	YMMWORD PTR [rax+rsi], ymm12	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B],
 1700      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1701              		.loc 1 678 58 is_stmt 1 view .LVU498
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1702              		.loc 1 678 40 view .LVU499
 1703 0ac4 4883C620 		add	rsi, 32	# ivtmp.211,
 1704              	.L162:
 679:sieve_extend.c ****         }
 1705              		.loc 1 679 13 view .LVU500
 1706              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1707              		.loc 1 679 62 is_stmt 0 view .LVU501
 1708 0ac8 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR [r11+rsi]	# tmp923, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1708      2C33
 1709              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1710              		.loc 1 679 109 view .LVU502
 1711 0ace C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdx+rsi]	# tmp924, MEM[base: vectp.172_265, index: ivtmp.211_336, offs
 1711      32
 1712              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1713              		.loc 1 679 62 view .LVU503
 1714 0ad3 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.170, tmp923, _184
 1715              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1716              		.loc 1 679 109 view .LVU504
 1717 0ad7 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.174, tmp924, _182
 1718              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1719              		.loc 1 679 80 view .LVU505
 1720 0adb C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.175, vect__49.170, vect__54.174
 1721              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1722              		.loc 1 679 35 view .LVU506
 1723 0adf C5FE7F14 		vmovdqu	YMMWORD PTR [rax+rsi], ymm2	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], 
 1723      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1724              		.loc 1 678 58 is_stmt 1 view .LVU507
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1725              		.loc 1 678 40 view .LVU508
 1726 0ae4 4883C620 		add	rsi, 32	# ivtmp.211,
 1727              	.L161:
 679:sieve_extend.c ****         }
 1728              		.loc 1 679 13 view .LVU509
 1729              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1730              		.loc 1 679 62 is_stmt 0 view .LVU510
 1731 0ae8 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r11+rsi]	# tmp925, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1731      3C33
 1732              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1733              		.loc 1 679 109 view .LVU511
GAS LISTING /tmp/ccdGK7kM.s 			page 51


 1734 0aee C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rdx+rsi]	# tmp926, MEM[base: vectp.172_265, index: ivtmp.211_336, offse
 1734      32
 1735              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1736              		.loc 1 679 62 view .LVU512
 1737 0af3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.170, tmp925, _184
 1738              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1739              		.loc 1 679 109 view .LVU513
 1740 0af7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.174, tmp926, _182
 1741              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1742              		.loc 1 679 80 view .LVU514
 1743 0afb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.175, vect__49.170, vect__54.174
 1743      C8
 1744              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1745              		.loc 1 679 35 view .LVU515
 1746 0b00 C57E7F0C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm9	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], 
 1746      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1747              		.loc 1 678 58 is_stmt 1 view .LVU516
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1748              		.loc 1 678 40 view .LVU517
 1749 0b05 4883C620 		add	rsi, 32	# ivtmp.211,
 1750              	.L160:
 679:sieve_extend.c ****         }
 1751              		.loc 1 679 13 view .LVU518
 1752              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1753              		.loc 1 679 62 is_stmt 0 view .LVU519
 1754 0b09 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r11+rsi]	# tmp927, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1754      1433
 1755              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1756              		.loc 1 679 109 view .LVU520
 1757 0b0f C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp928, MEM[base: vectp.172_265, index: ivtmp.211_336, offse
 1757      32
 1758              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1759              		.loc 1 679 62 view .LVU521
 1760 0b14 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.170, tmp927, _184
 1761              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1762              		.loc 1 679 109 view .LVU522
 1763 0b18 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.174, tmp928, _182
 1764              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1765              		.loc 1 679 80 view .LVU523
 1766 0b1c C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.175, vect__49.170, vect__54.174
 1766      EC
 1767              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1768              		.loc 1 679 35 view .LVU524
 1769 0b21 C57E7F2C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm13	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B],
 1769      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccdGK7kM.s 			page 52


 1770              		.loc 1 678 58 is_stmt 1 view .LVU525
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1771              		.loc 1 678 40 view .LVU526
 1772 0b26 4883C620 		add	rsi, 32	# ivtmp.211,
 1773 0b2a 4839DE   		cmp	rsi, rbx	# ivtmp.211, _338
 1774 0b2d 0F842E01 		je	.L221	#,
 1774      0000
 1775              	.L48:
 679:sieve_extend.c ****         }
 1776              		.loc 1 679 13 discriminator 3 view .LVU527
 1777              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1778              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU528
 1779 0b33 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rsi]	# tmp839, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1779      3433
 1780              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1781              		.loc 1 679 109 discriminator 3 view .LVU529
 1782 0b39 C5FE6F34 		vmovdqu	ymm6, YMMWORD PTR [rdx+rsi]	# tmp840, MEM[base: vectp.172_265, index: ivtmp.211_336, offse
 1782      32
 1783              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1784              		.loc 1 679 62 discriminator 3 view .LVU530
 1785 0b3e C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.170, tmp839, _184
 1786              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1787              		.loc 1 679 109 discriminator 3 view .LVU531
 1788 0b42 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.174, tmp840, _182
 1789              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1790              		.loc 1 679 80 discriminator 3 view .LVU532
 1791 0b46 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.175, vect__49.170, vect__54.174
 1792              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1793              		.loc 1 679 35 discriminator 3 view .LVU533
 1794 0b4a C5FE7F3C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm7	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], 
 1794      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1795              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU534
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1796              		.loc 1 678 40 discriminator 3 view .LVU535
 679:sieve_extend.c ****         }
 1797              		.loc 1 679 13 discriminator 3 view .LVU536
 1798              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1799              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU537
 1800 0b4f C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 32[r11+rsi]	# tmp841, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1800      643320
 1801              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1802              		.loc 1 679 109 discriminator 3 view .LVU538
 1803 0b56 C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 32[rdx+rsi]	# tmp842, MEM[base: vectp.172_265, index: ivtmp.211_336, off
 1803      3220
 1804              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1805              		.loc 1 679 62 discriminator 3 view .LVU539
 1806 0b5c C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.170, tmp841, _184
GAS LISTING /tmp/ccdGK7kM.s 			page 53


 1807              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1808              		.loc 1 679 109 discriminator 3 view .LVU540
 1809 0b60 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.174, tmp842, _182
 1810              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1811              		.loc 1 679 80 discriminator 3 view .LVU541
 1812 0b64 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.175, vect__49.170, vect__54.174
 1812      D1
 1813              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1814              		.loc 1 679 35 discriminator 3 view .LVU542
 1815 0b69 C57E7F54 		vmovdqu	YMMWORD PTR 32[rax+rsi], ymm10	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B
 1815      3020
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1816              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU543
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1817              		.loc 1 678 40 discriminator 3 view .LVU544
 679:sieve_extend.c ****         }
 1818              		.loc 1 679 13 discriminator 3 view .LVU545
 1819              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1820              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU546
 1821 0b6f C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 64[r11+rsi]	# tmp843, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1821      5C3340
 1822              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1823              		.loc 1 679 109 discriminator 3 view .LVU547
 1824 0b76 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rdx+rsi]	# tmp844, MEM[base: vectp.172_265, index: ivtmp.211_336, off
 1824      3240
 1825              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1826              		.loc 1 679 62 discriminator 3 view .LVU548
 1827 0b7c C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.170, tmp843, _184
 1828              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1829              		.loc 1 679 109 discriminator 3 view .LVU549
 1830 0b80 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.174, tmp844, _182
 1831              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1832              		.loc 1 679 80 discriminator 3 view .LVU550
 1833 0b84 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.175, vect__49.170, vect__54.174
 1833      F5
 1834              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1835              		.loc 1 679 35 discriminator 3 view .LVU551
 1836 0b89 C57E7F74 		vmovdqu	YMMWORD PTR 64[rax+rsi], ymm14	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B
 1836      3040
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1837              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU552
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1838              		.loc 1 678 40 discriminator 3 view .LVU553
 679:sieve_extend.c ****         }
 1839              		.loc 1 679 13 discriminator 3 view .LVU554
 1840              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1841              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU555
GAS LISTING /tmp/ccdGK7kM.s 			page 54


 1842 0b8f C4417E6F 		vmovdqu	ymm15, YMMWORD PTR 96[r11+rsi]	# tmp845, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1842      7C3360
 1843              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1844              		.loc 1 679 109 discriminator 3 view .LVU556
 1845 0b96 C5FE6F54 		vmovdqu	ymm2, YMMWORD PTR 96[rdx+rsi]	# tmp846, MEM[base: vectp.172_265, index: ivtmp.211_336, off
 1845      3260
 1846              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1847              		.loc 1 679 62 discriminator 3 view .LVU557
 1848 0b9c C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.170, tmp845, _184
 1849              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1850              		.loc 1 679 109 discriminator 3 view .LVU558
 1851 0ba0 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.174, tmp846, _182
 1852              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1853              		.loc 1 679 80 discriminator 3 view .LVU559
 1854 0ba4 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.175, vect__49.170, vect__54.174
 1855              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1856              		.loc 1 679 35 discriminator 3 view .LVU560
 1857 0ba8 C5FE7F64 		vmovdqu	YMMWORD PTR 96[rax+rsi], ymm4	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B]
 1857      3060
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1858              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU561
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1859              		.loc 1 678 40 discriminator 3 view .LVU562
 679:sieve_extend.c ****         }
 1860              		.loc 1 679 13 discriminator 3 view .LVU563
 1861              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1862              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU564
 1863 0bae C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 128[r11+rsi]	# tmp847, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1863      84338000 
 1863      0000
 1864              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1865              		.loc 1 679 109 discriminator 3 view .LVU565
 1866 0bb8 C57E6F8C 		vmovdqu	ymm9, YMMWORD PTR 128[rdx+rsi]	# tmp848, MEM[base: vectp.172_265, index: ivtmp.211_336, of
 1866      32800000 
 1866      00
 1867              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1868              		.loc 1 679 62 discriminator 3 view .LVU566
 1869 0bc1 C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.170, tmp847, _184
 1870              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1871              		.loc 1 679 109 discriminator 3 view .LVU567
 1872 0bc5 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.174, tmp848, _182
 1873              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1874              		.loc 1 679 80 discriminator 3 view .LVU568
 1875 0bc9 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.175, vect__49.170, vect__54.174
 1875      DA
 1876              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
GAS LISTING /tmp/ccdGK7kM.s 			page 55


 1877              		.loc 1 679 35 discriminator 3 view .LVU569
 1878 0bce C57E7F9C 		vmovdqu	YMMWORD PTR 128[rax+rsi], ymm11	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0
 1878      30800000 
 1878      00
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1879              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU570
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1880              		.loc 1 678 40 discriminator 3 view .LVU571
 679:sieve_extend.c ****         }
 1881              		.loc 1 679 13 discriminator 3 view .LVU572
 1882              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1883              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU573
 1884 0bd7 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r11+rsi]	# tmp849, MEM[base: _180, index: ivtmp.211_336, offset: 0B
 1884      A433A000 
 1884      0000
 1885              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1886              		.loc 1 679 109 discriminator 3 view .LVU574
 1887 0be1 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rdx+rsi]	# tmp850, MEM[base: vectp.172_265, index: ivtmp.211_336, of
 1887      32A00000 
 1887      00
 1888              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1889              		.loc 1 679 62 discriminator 3 view .LVU575
 1890 0bea C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.170, tmp849, _184
 1891              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1892              		.loc 1 679 109 discriminator 3 view .LVU576
 1893 0bee C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.174, tmp850, _182
 1894              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1895              		.loc 1 679 80 discriminator 3 view .LVU577
 1896 0bf2 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.175, vect__49.170, vect__54.174
 1896      FE
 1897              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1898              		.loc 1 679 35 discriminator 3 view .LVU578
 1899 0bf7 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rax+rsi], ymm15	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0
 1899      30A00000 
 1899      00
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1900              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU579
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1901              		.loc 1 678 40 discriminator 3 view .LVU580
 679:sieve_extend.c ****         }
 1902              		.loc 1 679 13 discriminator 3 view .LVU581
 1903              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1904              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU582
 1905 0c00 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 192[r11+rsi]	# tmp851, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1905      B433C000 
 1905      0000
 1906              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1907              		.loc 1 679 109 discriminator 3 view .LVU583
 1908 0c0a C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 192[rdx+rsi]	# tmp852, MEM[base: vectp.172_265, index: ivtmp.211_336, of
GAS LISTING /tmp/ccdGK7kM.s 			page 56


 1908      32C00000 
 1908      00
 1909              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1910              		.loc 1 679 62 discriminator 3 view .LVU584
 1911 0c13 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.170, tmp851, _184
 1912              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1913              		.loc 1 679 109 discriminator 3 view .LVU585
 1914 0c17 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.174, tmp852, _182
 1915              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1916              		.loc 1 679 80 discriminator 3 view .LVU586
 1917 0c1b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.175, vect__49.170, vect__54.174
 1918              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1919              		.loc 1 679 35 discriminator 3 view .LVU587
 1920 0c1f C57E7F84 		vmovdqu	YMMWORD PTR 192[rax+rsi], ymm8	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B
 1920      30C00000 
 1920      00
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1921              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU588
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1922              		.loc 1 678 40 discriminator 3 view .LVU589
 679:sieve_extend.c ****         }
 1923              		.loc 1 679 13 discriminator 3 view .LVU590
 1924              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1925              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU591
 1926 0c28 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 224[r11+rsi]	# tmp853, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 1926      AC33E000 
 1926      0000
 1927              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1928              		.loc 1 679 109 discriminator 3 view .LVU592
 1929 0c32 C57E6F94 		vmovdqu	ymm10, YMMWORD PTR 224[rdx+rsi]	# tmp854, MEM[base: vectp.172_265, index: ivtmp.211_336, o
 1929      32E00000 
 1929      00
 1930              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1931              		.loc 1 679 62 discriminator 3 view .LVU593
 1932 0c3b C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.170, tmp853, _184
 1933              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1934              		.loc 1 679 109 discriminator 3 view .LVU594
 1935 0c3f C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.174, tmp854, _182
 1936              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1937              		.loc 1 679 80 discriminator 3 view .LVU595
 1938 0c43 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.175, vect__49.170, vect__54.174
 1938      E3
 1939              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1940              		.loc 1 679 35 discriminator 3 view .LVU596
 1941 0c48 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rax+rsi], ymm12	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0
 1941      30E00000 
 1941      00
GAS LISTING /tmp/ccdGK7kM.s 			page 57


 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1942              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU597
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1943              		.loc 1 678 40 discriminator 3 view .LVU598
 1944 0c51 4881C600 		add	rsi, 256	# ivtmp.211,
 1944      010000
 1945 0c58 4839DE   		cmp	rsi, rbx	# ivtmp.211, _338
 1946 0c5b 0F85D2FE 		jne	.L48	#,
 1946      FFFF
 1947              	.L221:
 1948 0c61 4C8B6C24 		mov	r13, QWORD PTR -32[rsp]	# source_word, %sfp
 1948      E0
 1949 0c66 4889CA   		mov	rdx, rcx	# niters_vector_mult_vf.165, loop_distance
 1950 0c69 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.165,
 1951 0c6d 498D440D 		lea	rax, 0[r13+rcx]	# source_word,
 1951      00
 1952 0c72 F6C103   		test	cl, 3	# loop_distance,
 1953 0c75 0F84C502 		je	.L233	#,
 1953      0000
 1954              	.LVL73:
 679:sieve_extend.c ****         }
 1955              		.loc 1 679 13 view .LVU599
 1956              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1957              		.loc 1 679 58 is_stmt 0 view .LVU600
 1958 0c7b 498D5C15 		lea	rbx, 0[r13+rdx]	# tmp350,
 1958      00
 1959              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1960              		.loc 1 679 62 view .LVU601
 1961 0c80 4C8B14DF 		mov	r10, QWORD PTR [rdi+rbx*8]	# *_281, *_281
 1962              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1963              		.loc 1 679 109 view .LVU602
 1964 0c84 C4E2B1F7 		shlx	rsi, QWORD PTR 8[rdi+rbx*8], r9	# tmp352, *_286, shift
 1964      74DF08
 1965              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1966              		.loc 1 679 21 view .LVU603
 1967 0c8b 4D8D1C16 		lea	r11, [r14+rdx]	# tmp351,
 1968              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1969              		.loc 1 679 62 view .LVU604
 1970 0c8f C4C29BF7 		shrx	rbx, r10, r12	# tmp354, *_281, shift_flipped
 1970      DA
 1971              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1972              		.loc 1 679 80 view .LVU605
 1973 0c94 4809DE   		or	rsi, rbx	# tmp356, tmp354
 1974 0c97 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_291, tmp356
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1975              		.loc 1 678 58 is_stmt 1 view .LVU606
 1976              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1977              		.loc 1 678 59 is_stmt 0 view .LVU607
 1978 0c9b 488D7201 		lea	rsi, 1[rdx]	# i,
 1979              	.LVL74:
GAS LISTING /tmp/ccdGK7kM.s 			page 58


 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 678 40 is_stmt 1 view .LVU608
 1981              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1982              		.loc 1 678 9 is_stmt 0 view .LVU609
 1983 0c9f 4839F1   		cmp	rcx, rsi	# loop_distance, i
 1984 0ca2 0F869802 		jbe	.L233	#,
 1984      0000
 679:sieve_extend.c ****         }
 1985              		.loc 1 679 13 is_stmt 1 view .LVU610
 1986              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1987              		.loc 1 679 58 is_stmt 0 view .LVU611
 1988 0ca8 4D8D5C35 		lea	r11, 0[r13+rsi]	# tmp357,
 1988      00
 1989              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1990              		.loc 1 679 62 view .LVU612
 1991 0cad 4A8B1CDF 		mov	rbx, QWORD PTR [rdi+r11*8]	# *_299, *_299
 1992              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1993              		.loc 1 679 109 view .LVU613
 1994 0cb1 C422B1F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r9	# tmp359, *_304, shift
 1994      54DF08
 1995              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 1996              		.loc 1 679 21 view .LVU614
 1997 0cb8 4C01F6   		add	rsi, r14	# tmp358, copy_word
 1998              	.LVL75:
 1999              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2000              		.loc 1 679 62 view .LVU615
 2001 0cbb C4629BF7 		shrx	r11, rbx, r12	# tmp361, *_299, shift_flipped
 2001      DB
 2002              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2003              		.loc 1 678 59 view .LVU616
 2004 0cc0 4883C202 		add	rdx, 2	# i,
 2005              	.LVL76:
 2006              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2007              		.loc 1 679 80 view .LVU617
 2008 0cc4 4D09DA   		or	r10, r11	# tmp363, tmp361
 2009 0cc7 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# *_309, tmp363
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2010              		.loc 1 678 58 is_stmt 1 view .LVU618
 2011              	.LVL77:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2012              		.loc 1 678 40 view .LVU619
 2013              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2014              		.loc 1 678 9 is_stmt 0 view .LVU620
 2015 0ccb 4839D1   		cmp	rcx, rdx	# loop_distance, i
 2016 0cce 0F866C02 		jbe	.L233	#,
 2016      0000
 679:sieve_extend.c ****         }
 2017              		.loc 1 679 13 is_stmt 1 view .LVU621
GAS LISTING /tmp/ccdGK7kM.s 			page 59


 2018              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2019              		.loc 1 679 58 is_stmt 0 view .LVU622
 2020 0cd4 4901D5   		add	r13, rdx	# source_word, i
 2021              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2022              		.loc 1 679 21 view .LVU623
 2023 0cd7 4C01F2   		add	rdx, r14	# tmp365, copy_word
 2024              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2025              		.loc 1 679 109 view .LVU624
 2026 0cda C422B1F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r9	# tmp366, *_245, shift
 2026      74EF08
 2027              	.LVL78:
 2028              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2029              		.loc 1 679 62 view .LVU625
 2030 0ce1 4E8B0CEF 		mov	r9, QWORD PTR [rdi+r13*8]	# *_240, *_240
 2031              	.LVL79:
 679:sieve_extend.c ****         }
 2032              		.loc 1 679 62 view .LVU626
 2033 0ce5 C4429BF7 		shrx	r12, r9, r12	# tmp368, *_240, shift_flipped
 2033      E1
 2034              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2035              		.loc 1 679 80 view .LVU627
 2036 0cea 4D09E6   		or	r14, r12	# tmp370, tmp368
 2037 0ced 4C8934D7 		mov	QWORD PTR [rdi+rdx*8], r14	# *_250, tmp370
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2038              		.loc 1 678 58 is_stmt 1 view .LVU628
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 678 40 view .LVU629
 2040 0cf1 C5F877   		vzeroupper
 2041              	.L50:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2042              		.loc 1 678 40 is_stmt 0 view .LVU630
 2043              	.LBE269:
 681:sieve_extend.c ****     }
 2044              		.loc 1 681 9 is_stmt 1 view .LVU631
 681:sieve_extend.c ****     }
 2045              		.loc 1 681 39 view .LVU632
 2046              	.LVL80:
 681:sieve_extend.c ****     }
 2047              		.loc 1 681 39 is_stmt 0 view .LVU633
 2048              	.LBE268:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2049              		.loc 1 684 12 is_stmt 1 view .LVU634
 2050 0cf4 4C8B7424 		mov	r14, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2050      F8
 2051 0cf9 48C1E003 		sal	rax, 3	# _225,
 2052              	.LVL81:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2053              		.loc 1 684 12 is_stmt 0 view .LVU635
 2054 0cfd 498D5E01 		lea	rbx, 1[r14]	# _198,
 2055 0d01 48895C24 		mov	QWORD PTR -24[rsp], rbx	# %sfp, _198
 2055      E8
 2056              	.LBB271:
GAS LISTING /tmp/ccdGK7kM.s 			page 60


 2057              	# sieve_extend.c:681:         source_word += loop_distance; copy_word+= loop_distance;
 681:sieve_extend.c ****     }
 2058              		.loc 1 681 21 view .LVU636
 2059 0d06 4531ED   		xor	r13d, r13d	# _173
 2060              	.LVL82:
 2061              	.L46:
 681:sieve_extend.c ****     }
 2062              		.loc 1 681 21 view .LVU637
 2063 0d09 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2063      F8
 2064              	.LBE271:
 2065              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2066              		.loc 1 685 99 view .LVU638
 2067 0d0e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp897, %sfp
 2067      F4
 2068 0d13 4801F8   		add	rax, rdi	# ivtmp.184, bitarray
 2069 0d16 4C89DE   		mov	rsi, r11	# tmp428, destination_stop_word
 2070 0d19 C462F1F7 		shlx	r9, QWORD PTR 8[rax], rcx	# tmp419, MEM[base: _318, offset: 8B], tmp897
 2070      4808
 2071              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2072              		.loc 1 685 54 view .LVU639
 2073 0d1f C462BBF7 		shrx	r10, QWORD PTR [rax], r8	# tmp421, MEM[base: _318, offset: 0B], _184
 2073      10
 2074 0d24 4C29F6   		sub	rsi, r14	# tmp428, copy_word
 2075              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2076              		.loc 1 685 72 view .LVU640
 2077 0d27 4D09D1   		or	r9, r10	# tmp423, tmp421
 2078              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2079              		.loc 1 684 57 view .LVU641
 2080 0d2a 498D4E01 		lea	rcx, 1[r14]	# copy_word,
 2081              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2082              		.loc 1 685 72 view .LVU642
 2083 0d2e 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 2084 0d32 83E607   		and	esi, 7	# tmp429,
 2085              	.LVL83:
 685:sieve_extend.c ****     }
 2086              		.loc 1 685 9 is_stmt 1 view .LVU643
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2087              		.loc 1 684 48 view .LVU644
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2088              		.loc 1 684 12 view .LVU645
 2089 0d35 4C8D5008 		lea	r10, 8[rax]	# ivtmp.184,
 2090              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2091              		.loc 1 684 5 is_stmt 0 view .LVU646
 2092 0d39 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 2093 0d3c 0F822AFC 		jb	.L59	#,
 2093      FFFF
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2094              		.loc 1 684 5 view .LVU647
 2095 0d42 4885F6   		test	rsi, rsi	# tmp429
 2096 0d45 0F841501 		je	.L227	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 61


 2096      0000
 2097 0d4b 4883FE01 		cmp	rsi, 1	# tmp429,
 2098 0d4f 0F84E100 		je	.L179	#,
 2098      0000
 2099 0d55 4883FE02 		cmp	rsi, 2	# tmp429,
 2100 0d59 0F84B900 		je	.L180	#,
 2100      0000
 2101 0d5f 4883FE03 		cmp	rsi, 3	# tmp429,
 2102 0d63 0F849000 		je	.L181	#,
 2102      0000
 2103 0d69 4883FE04 		cmp	rsi, 4	# tmp429,
 2104 0d6d 746C     		je	.L182	#,
 2105 0d6f 4883FE05 		cmp	rsi, 5	# tmp429,
 2106 0d73 7447     		je	.L183	#,
 2107 0d75 4883FE06 		cmp	rsi, 6	# tmp429,
 2108 0d79 7423     		je	.L184	#,
 685:sieve_extend.c ****     }
 2109              		.loc 1 685 9 is_stmt 1 view .LVU648
 2110              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2111              		.loc 1 685 54 is_stmt 0 view .LVU649
 2112 0d7b 498B12   		mov	rdx, QWORD PTR [r10]	# MEM[base: _318, offset: 0B], MEM[base: _318, offset: 0B]
 2113              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2114              		.loc 1 685 99 view .LVU650
 2115 0d7e 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp900, %sfp
 2115      24F4
 2116              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2117              		.loc 1 685 54 view .LVU651
 2118 0d84 C4E2BBF7 		shrx	rsi, rdx, r8	# tmp637, MEM[base: _318, offset: 0B], _184
 2118      F2
 2119              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2120              		.loc 1 685 99 view .LVU652
 2121 0d89 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp635, MEM[base: _318, offset: 8B], tmp900
 2121      5A08
 2122              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2123              		.loc 1 685 72 view .LVU653
 2124 0d8f 4C09DE   		or	rsi, r11	# tmp638, tmp635
 2125 0d92 488934CF 		mov	QWORD PTR [rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2126              		.loc 1 684 48 is_stmt 1 view .LVU654
 2127 0d96 4C8D5010 		lea	r10, 16[rax]	# ivtmp.184,
 2128              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2129              		.loc 1 684 57 is_stmt 0 view .LVU655
 2130 0d9a 498D4E02 		lea	rcx, 2[r14]	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2131              		.loc 1 684 12 is_stmt 1 view .LVU656
 2132              	.L184:
 685:sieve_extend.c ****     }
 2133              		.loc 1 685 9 view .LVU657
 2134              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2135              		.loc 1 685 99 is_stmt 0 view .LVU658
GAS LISTING /tmp/ccdGK7kM.s 			page 62


 2136 0d9e 0FB64424 		movzx	eax, BYTE PTR -12[rsp]	# tmp901, %sfp
 2136      F4
 2137              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2138              		.loc 1 685 54 view .LVU659
 2139 0da3 C442BBF7 		shrx	r9, QWORD PTR [r10], r8	# tmp642, MEM[base: _318, offset: 0B], _184
 2139      0A
 2140              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2141              		.loc 1 685 99 view .LVU660
 2142 0da8 C442F9F7 		shlx	r14, QWORD PTR 8[r10], rax	# tmp640, MEM[base: _318, offset: 8B], tmp901
 2142      7208
 2143              	.LVL84:
 2144              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2145              		.loc 1 685 72 view .LVU661
 2146 0dae 4D09CE   		or	r14, r9	# tmp643, tmp642
 2147 0db1 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2148              		.loc 1 684 48 is_stmt 1 view .LVU662
 2149 0db5 4983C208 		add	r10, 8	# ivtmp.184,
 2150              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2151              		.loc 1 684 57 is_stmt 0 view .LVU663
 2152 0db9 48FFC1   		inc	rcx	# copy_word
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2153              		.loc 1 684 12 is_stmt 1 view .LVU664
 2154              	.L183:
 685:sieve_extend.c ****     }
 2155              		.loc 1 685 9 view .LVU665
 2156              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2157              		.loc 1 685 99 is_stmt 0 view .LVU666
 2158 0dbc 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp902, %sfp
 2158      24F4
 2159              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2160              		.loc 1 685 54 view .LVU667
 2161 0dc2 C4C2BBF7 		shrx	rdx, QWORD PTR [r10], r8	# tmp647, MEM[base: _318, offset: 0B], _184
 2161      12
 2162              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2163              		.loc 1 685 99 view .LVU668
 2164 0dc7 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp645, MEM[base: _318, offset: 8B], tmp902
 2164      5A08
 2165              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2166              		.loc 1 685 72 view .LVU669
 2167 0dcd 4909D3   		or	r11, rdx	# tmp648, tmp647
 2168 0dd0 4C891CCF 		mov	QWORD PTR [rdi+rcx*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2169              		.loc 1 684 48 is_stmt 1 view .LVU670
 2170 0dd4 4983C208 		add	r10, 8	# ivtmp.184,
 2171              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2172              		.loc 1 684 57 is_stmt 0 view .LVU671
 2173 0dd8 48FFC1   		inc	rcx	# copy_word
GAS LISTING /tmp/ccdGK7kM.s 			page 63


 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2174              		.loc 1 684 12 is_stmt 1 view .LVU672
 2175              	.L182:
 685:sieve_extend.c ****     }
 2176              		.loc 1 685 9 view .LVU673
 2177              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2178              		.loc 1 685 99 is_stmt 0 view .LVU674
 2179 0ddb 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp903, %sfp
 2179      F4
 2180              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2181              		.loc 1 685 54 view .LVU675
 2182 0de0 C442BBF7 		shrx	r14, QWORD PTR [r10], r8	# tmp652, MEM[base: _318, offset: 0B], _184
 2182      32
 2183              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2184              		.loc 1 685 99 view .LVU676
 2185 0de5 C4C2C9F7 		shlx	rax, QWORD PTR 8[r10], rsi	# tmp650, MEM[base: _318, offset: 8B], tmp903
 2185      4208
 2186              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2187              		.loc 1 685 72 view .LVU677
 2188 0deb 4C09F0   		or	rax, r14	# tmp653, tmp652
 2189 0dee 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2190              		.loc 1 684 48 is_stmt 1 view .LVU678
 2191 0df2 4983C208 		add	r10, 8	# ivtmp.184,
 2192              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2193              		.loc 1 684 57 is_stmt 0 view .LVU679
 2194 0df6 48FFC1   		inc	rcx	# copy_word
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2195              		.loc 1 684 12 is_stmt 1 view .LVU680
 2196              	.L181:
 685:sieve_extend.c ****     }
 2197              		.loc 1 685 9 view .LVU681
 2198              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2199              		.loc 1 685 99 is_stmt 0 view .LVU682
 2200 0df9 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp904, %sfp
 2200      24F4
 2201              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2202              		.loc 1 685 54 view .LVU683
 2203 0dff C442BBF7 		shrx	r11, QWORD PTR [r10], r8	# tmp657, MEM[base: _318, offset: 0B], _184
 2203      1A
 2204              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2205              		.loc 1 685 99 view .LVU684
 2206 0e04 C442B1F7 		shlx	r12, QWORD PTR 8[r10], r9	# tmp655, MEM[base: _318, offset: 8B], tmp904
 2206      6208
 2207              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2208              		.loc 1 685 72 view .LVU685
 2209 0e0a 4D09DC   		or	r12, r11	# tmp658, tmp657
 2210 0e0d 4C8924CF 		mov	QWORD PTR [rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
GAS LISTING /tmp/ccdGK7kM.s 			page 64


 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2211              		.loc 1 684 48 is_stmt 1 view .LVU686
 2212 0e11 4983C208 		add	r10, 8	# ivtmp.184,
 2213              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2214              		.loc 1 684 57 is_stmt 0 view .LVU687
 2215 0e15 48FFC1   		inc	rcx	# copy_word
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2216              		.loc 1 684 12 is_stmt 1 view .LVU688
 2217              	.L180:
 685:sieve_extend.c ****     }
 2218              		.loc 1 685 9 view .LVU689
 2219              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2220              		.loc 1 685 99 is_stmt 0 view .LVU690
 2221 0e18 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp905, %sfp
 2221      F4
 2222              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2223              		.loc 1 685 54 view .LVU691
 2224 0e1d C4C2BBF7 		shrx	rsi, QWORD PTR [r10], r8	# tmp662, MEM[base: _318, offset: 0B], _184
 2224      32
 2225              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2226              		.loc 1 685 99 view .LVU692
 2227 0e22 C4C2E9F7 		shlx	rax, QWORD PTR 8[r10], rdx	# tmp660, MEM[base: _318, offset: 8B], tmp905
 2227      4208
 2228              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2229              		.loc 1 685 72 view .LVU693
 2230 0e28 4809F0   		or	rax, rsi	# tmp663, tmp662
 2231 0e2b 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2232              		.loc 1 684 48 is_stmt 1 view .LVU694
 2233 0e2f 4983C208 		add	r10, 8	# ivtmp.184,
 2234              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2235              		.loc 1 684 57 is_stmt 0 view .LVU695
 2236 0e33 48FFC1   		inc	rcx	# copy_word
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2237              		.loc 1 684 12 is_stmt 1 view .LVU696
 2238              	.L179:
 685:sieve_extend.c ****     }
 2239              		.loc 1 685 9 view .LVU697
 2240              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2241              		.loc 1 685 99 is_stmt 0 view .LVU698
 2242 0e36 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp906, %sfp
 2242      24F4
 2243              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2244              		.loc 1 685 54 view .LVU699
 2245 0e3c C442BBF7 		shrx	r12, QWORD PTR [r10], r8	# tmp667, MEM[base: _318, offset: 0B], _184
 2245      22
 2246              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2247              		.loc 1 685 99 view .LVU700
GAS LISTING /tmp/ccdGK7kM.s 			page 65


 2248 0e41 C44289F7 		shlx	r9, QWORD PTR 8[r10], r14	# tmp665, MEM[base: _318, offset: 8B], tmp906
 2248      4A08
 2249              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2250              		.loc 1 685 72 view .LVU701
 2251 0e47 4D09E1   		or	r9, r12	# tmp668, tmp667
 2252 0e4a 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2253              		.loc 1 684 48 is_stmt 1 view .LVU702
 2254              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2255              		.loc 1 684 57 is_stmt 0 view .LVU703
 2256 0e4e 48FFC1   		inc	rcx	# copy_word
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2257              		.loc 1 684 12 is_stmt 1 view .LVU704
 2258 0e51 4983C208 		add	r10, 8	# ivtmp.184,
 2259              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2260              		.loc 1 684 5 is_stmt 0 view .LVU705
 2261 0e55 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2261      F8
 2262 0e5a 0F820CFB 		jb	.L59	#,
 2262      FFFF
 2263              	.L227:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2264              		.loc 1 684 5 view .LVU706
 2265 0e60 448B5C24 		mov	r11d, DWORD PTR -12[rsp]	# _182, %sfp
 2265      F4
 2266              	.L58:
 685:sieve_extend.c ****     }
 2267              		.loc 1 685 9 is_stmt 1 view .LVU707
 2268              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2269              		.loc 1 685 54 is_stmt 0 view .LVU708
 2270 0e65 C4C2BBF7 		shrx	rax, QWORD PTR [r10], r8	# tmp583, MEM[base: _318, offset: 0B], _184
 2270      02
 2271              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2272              		.loc 1 685 99 view .LVU709
 2273 0e6a C4C2A1F7 		shlx	rdx, QWORD PTR 8[r10], r11	# tmp581, MEM[base: _318, offset: 8B], _182
 2273      5208
 2274              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2275              		.loc 1 685 72 view .LVU710
 2276 0e70 4809C2   		or	rdx, rax	# tmp584, tmp583
 2277 0e73 488914CF 		mov	QWORD PTR [rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2278              		.loc 1 684 48 is_stmt 1 view .LVU711
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2279              		.loc 1 684 12 view .LVU712
 685:sieve_extend.c ****     }
 2280              		.loc 1 685 9 view .LVU713
 2281 0e77 4983C240 		add	r10, 64	# ivtmp.184,
 2282              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2283              		.loc 1 685 54 is_stmt 0 view .LVU714
 2284 0e7b C442BBF7 		shrx	r14, QWORD PTR -56[r10], r8	# tmp590, MEM[base: _318, offset: 0B], _184
GAS LISTING /tmp/ccdGK7kM.s 			page 66


 2284      72C8
 2285              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2286              		.loc 1 685 99 view .LVU715
 2287 0e81 C4C2A1F7 		shlx	rsi, QWORD PTR -48[r10], r11	# tmp588, MEM[base: _318, offset: 8B], _182
 2287      72D0
 2288              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2289              		.loc 1 685 72 view .LVU716
 2290 0e87 4C09F6   		or	rsi, r14	# tmp591, tmp590
 2291 0e8a 488974CF 		mov	QWORD PTR 8[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2291      08
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2292              		.loc 1 684 48 is_stmt 1 view .LVU717
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2293              		.loc 1 684 12 view .LVU718
 685:sieve_extend.c ****     }
 2294              		.loc 1 685 9 view .LVU719
 2295              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2296              		.loc 1 685 54 is_stmt 0 view .LVU720
 2297 0e8f C442BBF7 		shrx	r9, QWORD PTR -48[r10], r8	# tmp597, MEM[base: _318, offset: 0B], _184
 2297      4AD0
 2298              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2299              		.loc 1 685 99 view .LVU721
 2300 0e95 C442A1F7 		shlx	r12, QWORD PTR -40[r10], r11	# tmp595, MEM[base: _318, offset: 8B], _182
 2300      62D8
 2301              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2302              		.loc 1 685 72 view .LVU722
 2303 0e9b 4D09CC   		or	r12, r9	# tmp598, tmp597
 2304 0e9e 4C8964CF 		mov	QWORD PTR 16[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2304      10
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2305              		.loc 1 684 48 is_stmt 1 view .LVU723
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2306              		.loc 1 684 12 view .LVU724
 685:sieve_extend.c ****     }
 2307              		.loc 1 685 9 view .LVU725
 2308              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2309              		.loc 1 685 54 is_stmt 0 view .LVU726
 2310 0ea3 C4C2BBF7 		shrx	rax, QWORD PTR -40[r10], r8	# tmp604, MEM[base: _318, offset: 0B], _184
 2310      42D8
 2311              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2312              		.loc 1 685 99 view .LVU727
 2313 0ea9 C4C2A1F7 		shlx	rdx, QWORD PTR -32[r10], r11	# tmp602, MEM[base: _318, offset: 8B], _182
 2313      52E0
 2314              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2315              		.loc 1 685 72 view .LVU728
 2316 0eaf 4809C2   		or	rdx, rax	# tmp605, tmp604
 2317 0eb2 488954CF 		mov	QWORD PTR 24[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2317      18
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccdGK7kM.s 			page 67


 2318              		.loc 1 684 48 is_stmt 1 view .LVU729
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2319              		.loc 1 684 12 view .LVU730
 685:sieve_extend.c ****     }
 2320              		.loc 1 685 9 view .LVU731
 2321              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2322              		.loc 1 685 54 is_stmt 0 view .LVU732
 2323 0eb7 C442BBF7 		shrx	r14, QWORD PTR -32[r10], r8	# tmp611, MEM[base: _318, offset: 0B], _184
 2323      72E0
 2324              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2325              		.loc 1 685 99 view .LVU733
 2326 0ebd C4C2A1F7 		shlx	rsi, QWORD PTR -24[r10], r11	# tmp609, MEM[base: _318, offset: 8B], _182
 2326      72E8
 2327              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2328              		.loc 1 685 72 view .LVU734
 2329 0ec3 4C09F6   		or	rsi, r14	# tmp612, tmp611
 2330 0ec6 488974CF 		mov	QWORD PTR 32[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2330      20
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2331              		.loc 1 684 48 is_stmt 1 view .LVU735
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2332              		.loc 1 684 12 view .LVU736
 685:sieve_extend.c ****     }
 2333              		.loc 1 685 9 view .LVU737
 2334              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2335              		.loc 1 685 99 is_stmt 0 view .LVU738
 2336 0ecb C442A1F7 		shlx	r12, QWORD PTR -16[r10], r11	# tmp616, MEM[base: _318, offset: 8B], _182
 2336      62F0
 2337              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2338              		.loc 1 685 54 view .LVU739
 2339 0ed1 C442BBF7 		shrx	r9, QWORD PTR -24[r10], r8	# tmp618, MEM[base: _318, offset: 0B], _184
 2339      4AE8
 2340              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2341              		.loc 1 685 72 view .LVU740
 2342 0ed7 4D09CC   		or	r12, r9	# tmp619, tmp618
 2343 0eda 4C8964CF 		mov	QWORD PTR 40[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2343      28
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2344              		.loc 1 684 48 is_stmt 1 view .LVU741
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2345              		.loc 1 684 12 view .LVU742
 685:sieve_extend.c ****     }
 2346              		.loc 1 685 9 view .LVU743
 2347              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2348              		.loc 1 685 99 is_stmt 0 view .LVU744
 2349 0edf C4C2A1F7 		shlx	rdx, QWORD PTR -8[r10], r11	# tmp623, MEM[base: _318, offset: 8B], _182
 2349      52F8
 2350              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2351              		.loc 1 685 54 view .LVU745
GAS LISTING /tmp/ccdGK7kM.s 			page 68


 2352 0ee5 C4C2BBF7 		shrx	rax, QWORD PTR -16[r10], r8	# tmp625, MEM[base: _318, offset: 0B], _184
 2352      42F0
 2353              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2354              		.loc 1 685 72 view .LVU746
 2355 0eeb 4809C2   		or	rdx, rax	# tmp626, tmp625
 2356 0eee 488954CF 		mov	QWORD PTR 48[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2356      30
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2357              		.loc 1 684 48 is_stmt 1 view .LVU747
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2358              		.loc 1 684 12 view .LVU748
 685:sieve_extend.c ****     }
 2359              		.loc 1 685 9 view .LVU749
 2360              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2361              		.loc 1 685 99 is_stmt 0 view .LVU750
 2362 0ef3 C4C2A1F7 		shlx	rsi, QWORD PTR [r10], r11	# tmp630, MEM[base: _318, offset: 8B], _182
 2362      32
 2363              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2364              		.loc 1 685 54 view .LVU751
 2365 0ef8 C442BBF7 		shrx	r14, QWORD PTR -8[r10], r8	# tmp632, MEM[base: _318, offset: 0B], _184
 2365      72F8
 2366              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2367              		.loc 1 685 72 view .LVU752
 2368 0efe 4C09F6   		or	rsi, r14	# tmp633, tmp632
 2369 0f01 488974CF 		mov	QWORD PTR 56[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2369      38
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2370              		.loc 1 684 48 is_stmt 1 view .LVU753
 2371              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2372              		.loc 1 684 57 is_stmt 0 view .LVU754
 2373 0f06 4883C108 		add	rcx, 8	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2374              		.loc 1 684 12 is_stmt 1 view .LVU755
 2375              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2376              		.loc 1 684 5 is_stmt 0 view .LVU756
 2377 0f0a 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2377      F8
 2378 0f0f 0F8350FF 		jnb	.L58	#,
 2378      FFFF
 2379 0f15 E952FAFF 		jmp	.L59	#
 2379      FF
 2380              	.LVL85:
 2381 0f1a 660F1F44 		.p2align 4,,10
 2381      0000
 2382              		.p2align 3
 2383              	.L238:
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2384              		.loc 1 659 9 is_stmt 1 view .LVU757
 2385              	# sieve_extend.c:661:                                 & keepmask(copy_start) & chopmask(destination
 661:sieve_extend.c ****         return; // rapid exit for one word variant
 2386              		.loc 1 661 56 is_stmt 0 view .LVU758
GAS LISTING /tmp/ccdGK7kM.s 			page 69


 2387 0f20 4D21D7   		and	r15, r10	# tmp311, _189
 2388 0f23 4C21F8   		and	rax, r15	# tmp312, tmp311
 2389              	# sieve_extend.c:659:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2390              		.loc 1 659 29 view .LVU759
 2391 0f26 4909C6   		or	r14, rax	# tmp313, tmp312
 2392 0f29 4D897500 		mov	QWORD PTR 0[r13], r14	# *_177, tmp313
 662:sieve_extend.c ****     }
 2393              		.loc 1 662 9 is_stmt 1 view .LVU760
 2394              	# sieve_extend.c:689: }
 2395              		.loc 1 689 1 is_stmt 0 view .LVU761
 2396 0f2d 488D65D8 		lea	rsp, -40[rbp]	#,
 2397 0f31 5B       		pop	rbx	#
 2398 0f32 415C     		pop	r12	#
 2399 0f34 415D     		pop	r13	#
 2400 0f36 415E     		pop	r14	#
 2401 0f38 415F     		pop	r15	#
 2402 0f3a 5D       		pop	rbp	#
 2403              		.cfi_remember_state
 2404              		.cfi_def_cfa 7, 8
 2405 0f3b C3       		ret	
 2406              	.LVL86:
 2407 0f3c 0F1F4000 		.p2align 4,,10
 2408              		.p2align 3
 2409              	.L233:
 2410              		.cfi_restore_state
 2411              		.loc 1 689 1 view .LVU762
 2412 0f40 C5F877   		vzeroupper
 2413 0f43 E9ACFDFF 		jmp	.L50	#
 2413      FF
 2414              	.LVL87:
 2415 0f48 0F1F8400 		.p2align 4,,10
 2415      00000000 
 2416              		.p2align 3
 2417              	.L235:
 2418              		.loc 1 689 1 view .LVU763
 2419 0f50 C5F877   		vzeroupper
 2420 0f53 E914FAFF 		jmp	.L59	#
 2420      FF
 2421              	.LVL88:
 2422              	.L47:
 2423              		.loc 1 689 1 view .LVU764
 2424 0f58 488B5424 		mov	rdx, QWORD PTR -32[rsp]	# source_word, %sfp
 2424      E0
 2425 0f5d 488D040A 		lea	rax, [rdx+rcx]	# source_word,
 2426 0f61 488D0CC7 		lea	rcx, [rdi+rax*8]	# _334,
 2427 0f65 4989CD   		mov	r13, rcx	# tmp433, _334
 2428 0f68 4D29DD   		sub	r13, r11	# tmp433, ivtmp.202
 2429 0f6b 4983ED08 		sub	r13, 8	# tmp434,
 2430 0f6f 49C1ED03 		shr	r13, 3	# tmp432,
 2431 0f73 49FFC5   		inc	r13	# tmp435
 2432              	.LBB272:
 2433              	.LBB270:
 2434              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2435              		.loc 1 679 35 view .LVU765
 2436 0f76 4829D6   		sub	rsi, rdx	# tmp373, source_word
GAS LISTING /tmp/ccdGK7kM.s 			page 70


 2437 0f79 4183E507 		and	r13d, 7	# tmp436,
 2438 0f7d 0F840201 		je	.L228	#,
 2438      0000
 2439 0f83 4983FD01 		cmp	r13, 1	# tmp436,
 2440 0f87 0F84D300 		je	.L166	#,
 2440      0000
 2441 0f8d 4983FD02 		cmp	r13, 2	# tmp436,
 2442 0f91 0F84AC00 		je	.L167	#,
 2442      0000
 2443 0f97 4983FD03 		cmp	r13, 3	# tmp436,
 2444 0f9b 0F848500 		je	.L168	#,
 2444      0000
 2445 0fa1 4983FD04 		cmp	r13, 4	# tmp436,
 2446 0fa5 7463     		je	.L169	#,
 2447 0fa7 4983FD05 		cmp	r13, 5	# tmp436,
 2448 0fab 7440     		je	.L170	#,
 2449 0fad 4983FD06 		cmp	r13, 6	# tmp436,
 2450 0fb1 741D     		je	.L171	#,
 2451              	.LVL89:
 679:sieve_extend.c ****         }
 2452              		.loc 1 679 13 is_stmt 1 view .LVU766
 2453              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2454              		.loc 1 679 109 is_stmt 0 view .LVU767
 2455 0fb3 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp908, %sfp
 2455      24F4
 2456              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2457              		.loc 1 679 62 view .LVU768
 2458 0fb9 C442BBF7 		shrx	r14, QWORD PTR [r11], r8	# tmp670, MEM[base: _328, offset: 0B], _184
 2458      33
 2459              	.LVL90:
 2460              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2461              		.loc 1 679 109 view .LVU769
 2462 0fbe C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp672, MEM[base: _328, offset: 8B], tmp908
 2462      5B08
 2463              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2464              		.loc 1 679 80 view .LVU770
 2465 0fc4 4909DE   		or	r14, rbx	# tmp673, tmp672
 2466 0fc7 4D8974F3 		mov	QWORD PTR 8[r11+rsi*8], r14	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp673
 2466      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 678 58 is_stmt 1 view .LVU771
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2468              		.loc 1 678 40 view .LVU772
 2469 0fcc 4983C308 		add	r11, 8	# ivtmp.202,
 2470              	.L171:
 679:sieve_extend.c ****         }
 2471              		.loc 1 679 13 view .LVU773
 2472              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2473              		.loc 1 679 109 is_stmt 0 view .LVU774
 2474 0fd0 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp909, %sfp
 2474      24F4
 2475              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccdGK7kM.s 			page 71


 679:sieve_extend.c ****         }
 2476              		.loc 1 679 62 view .LVU775
 2477 0fd6 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp675, MEM[base: _328, offset: 0B], _184
 2477      0B
 2478              	.LVL91:
 2479              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2480              		.loc 1 679 109 view .LVU776
 2481 0fdb C4C299F7 		shlx	rdx, QWORD PTR 8[r11], r12	# tmp677, MEM[base: _328, offset: 8B], tmp909
 2481      5308
 2482              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2483              		.loc 1 679 80 view .LVU777
 2484 0fe1 4909D1   		or	r9, rdx	# tmp678, tmp677
 2485 0fe4 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp678
 2485      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2486              		.loc 1 678 58 is_stmt 1 view .LVU778
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2487              		.loc 1 678 40 view .LVU779
 2488 0fe9 4983C308 		add	r11, 8	# ivtmp.202,
 2489              	.L170:
 679:sieve_extend.c ****         }
 2490              		.loc 1 679 13 view .LVU780
 2491              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2492              		.loc 1 679 109 is_stmt 0 view .LVU781
 2493 0fed 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp910, %sfp
 2493      24F4
 2494              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2495              		.loc 1 679 62 view .LVU782
 2496 0ff3 C442BBF7 		shrx	r13, QWORD PTR [r11], r8	# tmp680, MEM[base: _328, offset: 0B], _184
 2496      2B
 2497              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2498              		.loc 1 679 109 view .LVU783
 2499 0ff8 C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp682, MEM[base: _328, offset: 8B], tmp910
 2499      5308
 2500              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2501              		.loc 1 679 80 view .LVU784
 2502 0ffe 4D09D5   		or	r13, r10	# tmp683, tmp682
 2503 1001 4D896CF3 		mov	QWORD PTR 8[r11+rsi*8], r13	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp683
 2503      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2504              		.loc 1 678 58 is_stmt 1 view .LVU785
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2505              		.loc 1 678 40 view .LVU786
 2506 1006 4983C308 		add	r11, 8	# ivtmp.202,
 2507              	.L169:
 679:sieve_extend.c ****         }
 2508              		.loc 1 679 13 view .LVU787
 2509              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2510              		.loc 1 679 109 is_stmt 0 view .LVU788
 2511 100a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp911, %sfp
GAS LISTING /tmp/ccdGK7kM.s 			page 72


 2511      F4
 2512              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2513              		.loc 1 679 62 view .LVU789
 2514 100f C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp685, MEM[base: _328, offset: 0B], _184
 2514      0B
 2515              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2516              		.loc 1 679 109 view .LVU790
 2517 1014 C442E1F7 		shlx	r12, QWORD PTR 8[r11], rbx	# tmp687, MEM[base: _328, offset: 8B], tmp911
 2517      6308
 2518              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2519              		.loc 1 679 80 view .LVU791
 2520 101a 4D09E1   		or	r9, r12	# tmp688, tmp687
 2521 101d 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp688
 2521      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2522              		.loc 1 678 58 is_stmt 1 view .LVU792
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2523              		.loc 1 678 40 view .LVU793
 2524 1022 4983C308 		add	r11, 8	# ivtmp.202,
 2525              	.L168:
 679:sieve_extend.c ****         }
 2526              		.loc 1 679 13 view .LVU794
 2527              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2528              		.loc 1 679 109 is_stmt 0 view .LVU795
 2529 1026 440FB66C 		movzx	r13d, BYTE PTR -12[rsp]	# tmp912, %sfp
 2529      24F4
 2530              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2531              		.loc 1 679 62 view .LVU796
 2532 102c C4C2BBF7 		shrx	rdx, QWORD PTR [r11], r8	# tmp690, MEM[base: _328, offset: 0B], _184
 2532      13
 2533              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2534              		.loc 1 679 109 view .LVU797
 2535 1031 C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp692, MEM[base: _328, offset: 8B], tmp912
 2535      7308
 2536              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2537              		.loc 1 679 80 view .LVU798
 2538 1037 4C09F2   		or	rdx, r14	# tmp693, tmp692
 2539 103a 498954F3 		mov	QWORD PTR 8[r11+rsi*8], rdx	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp693
 2539      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2540              		.loc 1 678 58 is_stmt 1 view .LVU799
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2541              		.loc 1 678 40 view .LVU800
 2542 103f 4983C308 		add	r11, 8	# ivtmp.202,
 2543              	.L167:
 679:sieve_extend.c ****         }
 2544              		.loc 1 679 13 view .LVU801
 2545              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2546              		.loc 1 679 109 is_stmt 0 view .LVU802
GAS LISTING /tmp/ccdGK7kM.s 			page 73


 2547 1043 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp913, %sfp
 2547      24F4
 2548              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2549              		.loc 1 679 62 view .LVU803
 2550 1049 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp695, MEM[base: _328, offset: 0B], _184
 2550      0B
 2551              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2552              		.loc 1 679 109 view .LVU804
 2553 104e C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp697, MEM[base: _328, offset: 8B], tmp913
 2553      5B08
 2554              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2555              		.loc 1 679 80 view .LVU805
 2556 1054 4909D9   		or	r9, rbx	# tmp698, tmp697
 2557 1057 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp698
 2557      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2558              		.loc 1 678 58 is_stmt 1 view .LVU806
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2559              		.loc 1 678 40 view .LVU807
 2560 105c 4983C308 		add	r11, 8	# ivtmp.202,
 2561              	.L166:
 679:sieve_extend.c ****         }
 2562              		.loc 1 679 13 view .LVU808
 2563              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2564              		.loc 1 679 109 is_stmt 0 view .LVU809
 2565 1060 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp914, %sfp
 2565      F4
 2566              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2567              		.loc 1 679 62 view .LVU810
 2568 1065 C442BBF7 		shrx	r12, QWORD PTR [r11], r8	# tmp700, MEM[base: _328, offset: 0B], _184
 2568      23
 2569              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2570              		.loc 1 679 109 view .LVU811
 2571 106a C442E9F7 		shlx	r13, QWORD PTR 8[r11], rdx	# tmp702, MEM[base: _328, offset: 8B], tmp914
 2571      6B08
 2572              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2573              		.loc 1 679 80 view .LVU812
 2574 1070 4D09EC   		or	r12, r13	# tmp703, tmp702
 2575 1073 4D8964F3 		mov	QWORD PTR 8[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp703
 2575      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2576              		.loc 1 678 58 is_stmt 1 view .LVU813
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2577              		.loc 1 678 40 view .LVU814
 2578 1078 4983C308 		add	r11, 8	# ivtmp.202,
 2579              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2580              		.loc 1 678 9 is_stmt 0 view .LVU815
 2581 107c 4939CB   		cmp	r11, rcx	# ivtmp.202, _334
 2582 107f 0F846FFC 		je	.L50	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 74


 2582      FFFF
 2583              	.L228:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2584              		.loc 1 678 9 view .LVU816
 2585 1085 448B7424 		mov	r14d, DWORD PTR -12[rsp]	# _182, %sfp
 2585      F4
 2586              	.L52:
 679:sieve_extend.c ****         }
 2587              		.loc 1 679 13 is_stmt 1 view .LVU817
 2588              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2589              		.loc 1 679 109 is_stmt 0 view .LVU818
 2590 108a C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp376, MEM[base: _328, offset: 8B], _182
 2590      5308
 2591              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2592              		.loc 1 679 62 view .LVU819
 2593 1090 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp374, MEM[base: _328, offset: 0B], _184
 2593      0B
 2594              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2595              		.loc 1 679 80 view .LVU820
 2596 1095 4D09D1   		or	r9, r10	# tmp378, tmp376
 2597 1098 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp378
 2597      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2598              		.loc 1 678 58 is_stmt 1 view .LVU821
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2599              		.loc 1 678 40 view .LVU822
 2600 109d 4D8D6B10 		lea	r13, 16[r11]	# ivtmp.202,
 2601 10a1 498D5B08 		lea	rbx, 8[r11]	# tmp437,
 679:sieve_extend.c ****         }
 2602              		.loc 1 679 13 view .LVU823
 2603              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2604              		.loc 1 679 109 is_stmt 0 view .LVU824
 2605 10a5 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp496, MEM[base: _328, offset: 8B], _182
 2605      5308
 2606              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2607              		.loc 1 679 62 view .LVU825
 2608 10ab C442BBF7 		shrx	r12, QWORD PTR 8[r11], r8	# tmp494, MEM[base: _328, offset: 0B], _184
 2608      6308
 2609              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2610              		.loc 1 679 80 view .LVU826
 2611 10b1 4909D4   		or	r12, rdx	# tmp497, tmp496
 2612 10b4 4D8964F3 		mov	QWORD PTR 16[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp497
 2612      10
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2613              		.loc 1 678 58 is_stmt 1 view .LVU827
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2614              		.loc 1 678 40 view .LVU828
 679:sieve_extend.c ****         }
 2615              		.loc 1 679 13 view .LVU829
 2616 10b9 498D5B18 		lea	rbx, 24[r11]	# ivtmp.202,
 2617              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccdGK7kM.s 			page 75


 679:sieve_extend.c ****         }
 2618              		.loc 1 679 109 is_stmt 0 view .LVU830
 2619 10bd C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp502, MEM[base: _328, offset: 8B], _182
 2619      5508
 2620              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2621              		.loc 1 679 62 view .LVU831
 2622 10c3 C442BBF7 		shrx	r9, QWORD PTR 16[r11], r8	# tmp500, MEM[base: _328, offset: 0B], _184
 2622      4B10
 2623              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2624              		.loc 1 679 80 view .LVU832
 2625 10c9 4D09D1   		or	r9, r10	# tmp503, tmp502
 2626 10cc 4D894CF3 		mov	QWORD PTR 24[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp503
 2626      18
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2627              		.loc 1 678 58 is_stmt 1 view .LVU833
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2628              		.loc 1 678 40 view .LVU834
 679:sieve_extend.c ****         }
 2629              		.loc 1 679 13 view .LVU835
 2630 10d1 4D8D6B20 		lea	r13, 32[r11]	# ivtmp.202,
 2631              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2632              		.loc 1 679 109 is_stmt 0 view .LVU836
 2633 10d5 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp508, MEM[base: _328, offset: 8B], _182
 2633      5308
 2634              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2635              		.loc 1 679 62 view .LVU837
 2636 10db C442BBF7 		shrx	r12, QWORD PTR 24[r11], r8	# tmp506, MEM[base: _328, offset: 0B], _184
 2636      6318
 2637              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2638              		.loc 1 679 80 view .LVU838
 2639 10e1 4909D4   		or	r12, rdx	# tmp509, tmp508
 2640 10e4 4D8964F3 		mov	QWORD PTR 32[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp509
 2640      20
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2641              		.loc 1 678 58 is_stmt 1 view .LVU839
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2642              		.loc 1 678 40 view .LVU840
 679:sieve_extend.c ****         }
 2643              		.loc 1 679 13 view .LVU841
 2644 10e9 498D5B28 		lea	rbx, 40[r11]	# ivtmp.202,
 2645              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2646              		.loc 1 679 109 is_stmt 0 view .LVU842
 2647 10ed C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp514, MEM[base: _328, offset: 8B], _182
 2647      5508
 2648              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2649              		.loc 1 679 62 view .LVU843
 2650 10f3 C442BBF7 		shrx	r9, QWORD PTR 32[r11], r8	# tmp512, MEM[base: _328, offset: 0B], _184
 2650      4B20
 2651              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
GAS LISTING /tmp/ccdGK7kM.s 			page 76


 2652              		.loc 1 679 80 view .LVU844
 2653 10f9 4D09D1   		or	r9, r10	# tmp515, tmp514
 2654 10fc 4D894CF3 		mov	QWORD PTR 40[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp515
 2654      28
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2655              		.loc 1 678 58 is_stmt 1 view .LVU845
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2656              		.loc 1 678 40 view .LVU846
 679:sieve_extend.c ****         }
 2657              		.loc 1 679 13 view .LVU847
 2658 1101 4D8D6B30 		lea	r13, 48[r11]	# ivtmp.202,
 2659              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2660              		.loc 1 679 109 is_stmt 0 view .LVU848
 2661 1105 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp520, MEM[base: _328, offset: 8B], _182
 2661      5308
 2662              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2663              		.loc 1 679 62 view .LVU849
 2664 110b C442BBF7 		shrx	r12, QWORD PTR 40[r11], r8	# tmp518, MEM[base: _328, offset: 0B], _184
 2664      6328
 2665              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2666              		.loc 1 679 80 view .LVU850
 2667 1111 4909D4   		or	r12, rdx	# tmp521, tmp520
 2668 1114 4D8964F3 		mov	QWORD PTR 48[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp521
 2668      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2669              		.loc 1 678 58 is_stmt 1 view .LVU851
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2670              		.loc 1 678 40 view .LVU852
 679:sieve_extend.c ****         }
 2671              		.loc 1 679 13 view .LVU853
 2672 1119 498D5B38 		lea	rbx, 56[r11]	# ivtmp.202,
 2673              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2674              		.loc 1 679 62 is_stmt 0 view .LVU854
 2675 111d C442BBF7 		shrx	r9, QWORD PTR 48[r11], r8	# tmp524, MEM[base: _328, offset: 0B], _184
 2675      4B30
 2676              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2677              		.loc 1 679 109 view .LVU855
 2678 1123 C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp526, MEM[base: _328, offset: 8B], _182
 2678      5508
 2679              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2680              		.loc 1 679 80 view .LVU856
 2681 1129 4D09D1   		or	r9, r10	# tmp527, tmp526
 2682 112c 4D894CF3 		mov	QWORD PTR 56[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp527
 2682      38
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2683              		.loc 1 678 58 is_stmt 1 view .LVU857
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2684              		.loc 1 678 40 view .LVU858
 679:sieve_extend.c ****         }
 2685              		.loc 1 679 13 view .LVU859
 2686              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccdGK7kM.s 			page 77


 679:sieve_extend.c ****         }
 2687              		.loc 1 679 62 is_stmt 0 view .LVU860
 2688 1131 C442BBF7 		shrx	r12, QWORD PTR 56[r11], r8	# tmp530, MEM[base: _328, offset: 0B], _184
 2688      6338
 2689              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2690              		.loc 1 679 109 view .LVU861
 2691 1137 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp532, MEM[base: _328, offset: 8B], _182
 2691      5308
 2692              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2693              		.loc 1 679 80 view .LVU862
 2694 113d 4909D4   		or	r12, rdx	# tmp533, tmp532
 2695 1140 4D8964F3 		mov	QWORD PTR 64[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp533
 2695      40
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2696              		.loc 1 678 58 is_stmt 1 view .LVU863
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2697              		.loc 1 678 40 view .LVU864
 2698 1145 4983C340 		add	r11, 64	# ivtmp.202,
 2699              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2700              		.loc 1 678 9 is_stmt 0 view .LVU865
 2701 1149 4939CB   		cmp	r11, rcx	# ivtmp.202, _334
 2702 114c 0F8538FF 		jne	.L52	#,
 2702      FFFF
 2703 1152 E99DFBFF 		jmp	.L50	#
 2703      FF
 2704              	.LVL92:
 2705              	.L240:
 679:sieve_extend.c ****         }
 2706              		.loc 1 679 13 is_stmt 1 view .LVU866
 2707              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2708              		.loc 1 679 62 is_stmt 0 view .LVU867
 2709 1157 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r11]	# tmp915, MEM[base: _180, index: ivtmp.211_336, offset: 0B]
 2709      03
 2710              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2711              		.loc 1 679 109 view .LVU868
 2712 115c C5FE6F1A 		vmovdqu	ymm3, YMMWORD PTR [rdx]	# tmp916, MEM[base: vectp.172_265, index: ivtmp.211_336, offset: 0
 2713              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2714              		.loc 1 679 62 view .LVU869
 2715 1160 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.170, tmp915, _184
 2716              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2717              		.loc 1 679 109 view .LVU870
 2718 1164 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.174, tmp916, _182
 2719 1168 BE200000 		mov	esi, 32	# ivtmp.211,
 2719      00
 2720              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2721              		.loc 1 679 80 view .LVU871
 2722 116d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.175, vect__49.170, vect__54.174
 2722      DA
 2723              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccdGK7kM.s 			page 78


 679:sieve_extend.c ****         }
 2724              		.loc 1 679 35 view .LVU872
 2725 1172 C57E7F18 		vmovdqu	YMMWORD PTR [rax], ymm11	# MEM[base: vectp.177_273, index: ivtmp.211_336, offset: 0B], vec
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2726              		.loc 1 678 58 is_stmt 1 view .LVU873
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2727              		.loc 1 678 40 view .LVU874
 2728 1176 E9EBF8FF 		jmp	.L165	#
 2728      FF
 2729              	.LBE270:
 2730              	.LBE272:
 2731              		.cfi_endproc
 2732              	.LFE5337:
 2734 117b 0F1F4400 		.p2align 4
 2734      00
 2735              		.globl	compare_tuning_result
 2737              	compare_tuning_result:
 2738              	.LVL93:
 2739              	.LFB5349:
 690:sieve_extend.c **** 
 691:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 692:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 693:sieve_extend.c ****    
 694:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 695:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 696:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 697:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 698:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 699:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 700:sieve_extend.c **** 
 701:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 702:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 703:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 704:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 705:sieve_extend.c ****         return; // rapid exit for one word variant
 706:sieve_extend.c ****     }
 707:sieve_extend.c **** 
 708:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 709:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 710:sieve_extend.c ****                                 & keepmask(copy_start);
 711:sieve_extend.c ****     
 712:sieve_extend.c ****     copy_word++;
 713:sieve_extend.c **** 
 714:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 715:sieve_extend.c **** 
 716:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 717:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 718:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 719:sieve_extend.c **** 
 720:sieve_extend.c **** }
 721:sieve_extend.c **** 
 722:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 724:sieve_extend.c **** 
 725:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 726:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 727:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
GAS LISTING /tmp/ccdGK7kM.s 			page 79


 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 730:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 731:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 732:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 733:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 734:sieve_extend.c **** 
 735:sieve_extend.c ****     copy_word++;
 736:sieve_extend.c ****     source_word++;
 737:sieve_extend.c **** 
 738:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 739:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 740:sieve_extend.c ****     source_word += distance;
 741:sieve_extend.c ****     copy_word += distance;
 742:sieve_extend.c **** 
 743:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 744:sieve_extend.c **** 
 745:sieve_extend.c ****     #pragma ivdep
 746:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 747:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 748:sieve_extend.c ****     }
 749:sieve_extend.c **** 
 750:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 751:sieve_extend.c **** 
 752:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 753:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 754:sieve_extend.c **** 
 755:sieve_extend.c ****     #pragma ivdep
 756:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 757:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 758:sieve_extend.c **** 
 759:sieve_extend.c ****     #pragma ivdep
 760:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 761:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 762:sieve_extend.c **** 
 763:sieve_extend.c **** 
 764:sieve_extend.c ****  }
 765:sieve_extend.c **** 
 766:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 767:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 768:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 769:sieve_extend.c ****         return; // rapid exit for small sizes
 770:sieve_extend.c ****     }
 771:sieve_extend.c **** 
 772:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 773:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 774:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 777:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 778:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 779:sieve_extend.c **** }
 780:sieve_extend.c **** 
 781:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 782:sieve_extend.c ****     counter_t prime = prime_start;
 783:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 784:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
GAS LISTING /tmp/ccdGK7kM.s 			page 80


 785:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 786:sieve_extend.c **** 
 787:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 788:sieve_extend.c ****     
 789:sieve_extend.c ****     while (start <= block_stop) {
 790:sieve_extend.c ****         step  = prime * 2 + 1;
 791:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 792:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 793:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 794:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 795:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 796:sieve_extend.c ****     }
 797:sieve_extend.c ****     
 798:sieve_extend.c ****     while (start <= block_stop) {
 799:sieve_extend.c ****         step  = prime * 2 + 1;
 800:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 801:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 802:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 803:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 804:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 805:sieve_extend.c ****     }
 806:sieve_extend.c **** 
 807:sieve_extend.c **** //     counter_t start1 = 0; // save value
 808:sieve_extend.c **** //     counter_t step1 = 0; // save value
 809:sieve_extend.c **** //     while (start <= block_stop) {
 810:sieve_extend.c **** //         step  = prime * 2 + 1;
 811:sieve_extend.c **** //         if (step > 64) break;
 812:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 813:sieve_extend.c **** //         start1 = start; // save value
 814:sieve_extend.c **** //         step1 = step; // save value
 815:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 816:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 817:sieve_extend.c **** //         step  = prime * 2 + 1;
 818:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 819:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 820:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 821:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 822:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 823:sieve_extend.c **** //     }
 824:sieve_extend.c **** 
 825:sieve_extend.c ****     while (start <= block_stop) {
 826:sieve_extend.c ****         step  = prime * 2 + 1;
 827:sieve_extend.c ****         if unlikely(step > VECTOR_SIZE_counter*3/4) break;
 828:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 829:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 830:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 831:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 832:sieve_extend.c ****     }
 833:sieve_extend.c **** 
 834:sieve_extend.c ****     while (start <= block_stop) {
 835:sieve_extend.c ****         step  = prime * 2 + 1;
 836:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 837:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 838:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 839:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 840:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 841:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 81


 842:sieve_extend.c **** 
 843:sieve_extend.c ****     while (start <= block_stop) {
 844:sieve_extend.c ****         step  = prime * 2 + 1;
 845:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 846:sieve_extend.c ****         if likely(start <= block_stop)
 847:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 848:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 849:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 850:sieve_extend.c ****     }
 851:sieve_extend.c **** }
 852:sieve_extend.c **** 
 853:sieve_extend.c **** struct block {
 854:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 855:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 856:sieve_extend.c ****     counter_t prime; // next prime to be striped
 857:sieve_extend.c **** };
 858:sieve_extend.c **** 
 859:sieve_extend.c **** // returns prime that could not be handled:
 860:sieve_extend.c **** // start is too large
 861:sieve_extend.c **** // range is too big
 862:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 863:sieve_extend.c ****     register counter_t prime   = 0;
 864:sieve_extend.c ****     counter_t patternsize_bits = 1;
 865:sieve_extend.c ****     counter_t pattern_start    = 0;
 866:sieve_extend.c ****     counter_t range_stop       = block_start;
 867:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 868:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 869:sieve_extend.c **** 
 870:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 871:sieve_extend.c ****     
 872:sieve_extend.c ****     for (;range_stop < block_stop;) {
 873:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 874:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 875:sieve_extend.c ****         if unlikely(start > block_stop) break;
 876:sieve_extend.c **** 
 877:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 878:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 879:sieve_extend.c **** 
 880:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 881:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 882:sieve_extend.c ****         block.pattern_start = pattern_start;
 883:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 884:sieve_extend.c **** 
 885:sieve_extend.c ****         if (patternsize_bits>1) {
 886:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 887:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 888:sieve_extend.c ****         }
 889:sieve_extend.c ****         patternsize_bits *= step;
 890:sieve_extend.c **** 
 891:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 892:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 893:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 894:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 895:sieve_extend.c ****         block.prime = prime;
 896:sieve_extend.c ****     } 
 897:sieve_extend.c **** 
 898:sieve_extend.c ****     return block;
GAS LISTING /tmp/ccdGK7kM.s 			page 82


 899:sieve_extend.c **** }
 900:sieve_extend.c **** 
 901:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 902:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 903:sieve_extend.c ****     counter_t prime     = 0;
 904:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 905:sieve_extend.c **** 
 906:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 907:sieve_extend.c **** 
 908:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 909:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 910:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 911:sieve_extend.c ****     prime = block.prime;
 912:sieve_extend.c **** 
 913:sieve_extend.c ****     // #pragma unroll 8
 914:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 915:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 916:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 917:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 918:sieve_extend.c ****     } 
 919:sieve_extend.c **** 
 920:sieve_extend.c ****     return sieve;
 921:sieve_extend.c **** }
 922:sieve_extend.c **** 
 923:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 924:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 925:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 926:sieve_extend.c ****         primeCount++;
 927:sieve_extend.c ****         if (factor < maxFactor/2) {
 928:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 929:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 930:sieve_extend.c ****         }
 931:sieve_extend.c ****     }
 932:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 933:sieve_extend.c **** }
 934:sieve_extend.c **** 
 935:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
 936:sieve_extend.c ****     counter_t primeCount = 1;
 937:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 938:sieve_extend.c ****     return primeCount;
 939:sieve_extend.c **** }
 940:sieve_extend.c **** 
 941:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
 942:sieve_extend.c ****     printf("DeepAnalyzing\n");
 943:sieve_extend.c ****     counter_t warn_prime = 0;
 944:sieve_extend.c ****     counter_t warn_nonprime = 0;
 945:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 946:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 947:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 948:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 949:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 950:sieve_extend.c ****                 }
 951:sieve_extend.c ****             }
 952:sieve_extend.c ****         }
 953:sieve_extend.c ****         else {
 954:sieve_extend.c ****             counter_t c_prime = 0;
 955:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccdGK7kM.s 			page 83


 956:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 957:sieve_extend.c ****             }
 958:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 959:sieve_extend.c ****         }
 960:sieve_extend.c ****     }
 961:sieve_extend.c **** }
 962:sieve_extend.c **** 
 963:sieve_extend.c **** 
 964:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 965:sieve_extend.c **** 
 966:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 967:sieve_extend.c ****     counter_t valid_primes = 0;
 968:sieve_extend.c ****     switch(sieve->size) {
 969:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 970:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 971:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 972:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 973:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 974:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 975:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 976:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 977:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 978:sieve_extend.c ****         default:            valid_primes= 0;
 979:sieve_extend.c ****     }
 980:sieve_extend.c **** 
 981:sieve_extend.c ****     int valid = (valid_primes == primecount);
 982:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 983:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 984:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 985:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 986:sieve_extend.c ****     }
 987:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
 988:sieve_extend.c ****     return (valid);
 989:sieve_extend.c **** }
 990:sieve_extend.c **** 
 991:sieve_extend.c **** void usage(char *name) {
 992:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 993:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 994:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 995:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 996:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 997:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 998:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 999:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1000:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1001:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1002:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1003:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1004:sieve_extend.c ****     exit(1);
1005:sieve_extend.c **** }
1006:sieve_extend.c **** 
1007:sieve_extend.c **** typedef struct  {
1008:sieve_extend.c ****     counter_t maxints;
1009:sieve_extend.c ****     counter_t blocksize_bits;
1010:sieve_extend.c ****     counter_t blocksize_kb;
1011:sieve_extend.c ****     counter_t free_bits;
1012:sieve_extend.c ****     counter_t smallstep_faster;
GAS LISTING /tmp/ccdGK7kM.s 			page 84


1013:sieve_extend.c ****     counter_t mediumstep_faster;
1014:sieve_extend.c ****     counter_t sample_max;
1015:sieve_extend.c ****     double    sample_duration;
1016:sieve_extend.c ****     counter_t passes;
1017:sieve_extend.c ****     double    elapsed_time;
1018:sieve_extend.c ****     double    avg;
1019:sieve_extend.c **** } tuning_result_type;
1020:sieve_extend.c **** 
1021:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 2740              		.loc 1 1021 57 view -0
 2741              		.cfi_startproc
 2742              		.loc 1 1021 57 is_stmt 0 view .LVU876
 2743 1180 F30F1EFA 		endbr64	
1022:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 2744              		.loc 1 1022 5 is_stmt 1 view .LVU877
 2745              	.LVL94:
1023:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 2746              		.loc 1 1023 5 view .LVU878
1024:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 2747              		.loc 1 1024 5 view .LVU879
 2748              	# sieve_extend.c:1024:     return (resultB->avg > resultA->avg ? 1 : -1);
 2749              		.loc 1 1024 45 is_stmt 0 view .LVU880
 2750 1184 C5FB1046 		vmovsd	xmm0, QWORD PTR 80[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 2750      50
 2751 1189 31C0     		xor	eax, eax	# <retval>
 2752 118b C5F92F47 		vcomisd	xmm0, QWORD PTR 80[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 2752      50
 2753 1190 0F97C0   		seta	al	#, <retval>
 2754 1193 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 2755              	# sieve_extend.c:1025: }
1025:sieve_extend.c **** }
 2756              		.loc 1 1025 1 view .LVU881
 2757 1197 C3       		ret	
 2758              		.cfi_endproc
 2759              	.LFE5349:
 2761 1198 0F1F8400 		.p2align 4
 2761      00000000 
 2763              	setBitsTrue_largeRange_vector:
 2764              	.LVL95:
 2765              	.LFB5331:
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 2766              		.loc 1 386 159 is_stmt 1 view -0
 2767              		.cfi_startproc
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 2768              		.loc 1 386 159 is_stmt 0 view .LVU883
 2769 11a0 55       		push	rbp	#
 2770              		.cfi_def_cfa_offset 16
 2771              		.cfi_offset 6, -16
 2772              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 2773              		.loc 1 396 42 view .LVU884
 2774 11a1 4989D0   		mov	r8, rdx	# tmp181, step
 2775 11a4 49C1E008 		sal	r8, 8	# tmp181,
 2776              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 2777              		.loc 1 386 159 view .LVU885
 2778 11a8 4889E5   		mov	rbp, rsp	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 85


 2779              		.cfi_def_cfa_register 6
 2780 11ab 4154     		push	r12	#
 2781              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 2782              		.loc 1 396 42 view .LVU886
 2783 11ad 4901F0   		add	r8, rsi	# tmp182, range_start
 2784              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 2785              		.loc 1 386 159 view .LVU887
 2786 11b0 53       		push	rbx	#
 2787 11b1 4883E4E0 		and	rsp, -32	#,
 2788 11b5 4883EC40 		sub	rsp, 64	#,
 2789              		.cfi_offset 12, -24
 2790              		.cfi_offset 3, -32
 2791              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 2792              		.loc 1 386 159 view .LVU888
 2793 11b9 64488B04 		mov	rax, QWORD PTR fs:40	# tmp308, MEM[(<address-space-1> long unsigned int *)40B]
 2793      25280000 
 2793      00
 2794 11c2 48894424 		mov	QWORD PTR 56[rsp], rax	# D.34759, tmp308
 2794      38
 2795 11c7 31C0     		xor	eax, eax	# tmp308
 387:sieve_extend.c **** 
 2796              		.loc 1 387 5 is_stmt 1 view .LVU889
 395:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 2797              		.loc 1 395 5 view .LVU890
 2798              	.LVL96:
 396:sieve_extend.c **** 
 2799              		.loc 1 396 5 view .LVU891
 2800              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 2801              		.loc 1 396 21 is_stmt 0 view .LVU892
 2802 11c9 4939C8   		cmp	r8, rcx	# tmp182, range_stop
 2803 11cc 4C0F47C1 		cmova	r8, rcx	# tmp182,, range_stop_unique, range_stop
 2804              	.LVL97:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 2805              		.loc 1 399 5 is_stmt 1 view .LVU893
 2806              	.LBB273:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 2807              		.loc 1 399 10 view .LVU894
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 2808              		.loc 1 399 41 view .LVU895
 2809              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 2810              		.loc 1 399 5 is_stmt 0 view .LVU896
 2811 11d0 4C39C6   		cmp	rsi, r8	# range_start, range_stop_unique
 2812 11d3 0F83E202 		jnb	.L244	#,
 2812      0000
 2813              	.LBB274:
 2814              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 2815              		.loc 1 413 33 view .LVU897
 2816 11d9 4989C9   		mov	r9, rcx	# _69, range_stop
 2817              	# sieve_extend.c:418:         counter_t range_stop_word = wordindex(range_stop);
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 2818              		.loc 1 418 19 view .LVU898
GAS LISTING /tmp/ccdGK7kM.s 			page 86


 2819 11dc 48C1E906 		shr	rcx, 6	# range_stop,
 2820              	.LVL98:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 2821              		.loc 1 418 19 view .LVU899
 2822 11e0 4989CA   		mov	r10, rcx	# range_stop_word, range_stop
 2823              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 2824              		.loc 1 413 33 view .LVU900
 2825 11e3 49C1E908 		shr	r9, 8	# _69,
 2826              	.LVL99:
 2827              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 2828              		.loc 1 401 30 view .LVU901
 2829 11e7 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp205
 2830              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2831              		.loc 1 405 31 view .LVU902
 2832 11eb B9010000 		mov	ecx, 1	# tmp209,
 2832      00
 2833 11f0 4883FA01 		cmp	rdx, 1	# step,
 2834 11f4 0F852A03 		jne	.L361	#,
 2834      0000
 2835              	.LVL100:
 2836 11fa 660F1F44 		.p2align 4,,10
 2836      0000
 2837              		.p2align 3
 2838              	.L246:
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 2839              		.loc 1 400 9 is_stmt 1 view .LVU903
 2840              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 2841              		.loc 1 400 54 is_stmt 0 view .LVU904
 2842 1200 4889F2   		mov	rdx, rsi	# tmp204, range_start
 2843 1203 48C1EA08 		shr	rdx, 8	# tmp204,
 2844              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 2845              		.loc 1 402 35 view .LVU905
 2846 1207 4889F0   		mov	rax, rsi	# tmp206, range_start
 2847 120a 4D89C3   		mov	r11, r8	# tmp230, range_stop_unique
 2848              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 2849              		.loc 1 400 25 view .LVU906
 2850 120d 48C1E202 		sal	rdx, 2	# current_vector_start_word,
 2851              	.LVL101:
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 2852              		.loc 1 401 9 is_stmt 1 view .LVU907
 2853              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 2854              		.loc 1 402 35 is_stmt 0 view .LVU908
 2855 1211 48C1E806 		shr	rax, 6	# tmp206,
 2856 1215 4929F3   		sub	r11, rsi	# tmp230, range_start
 2857              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 2858              		.loc 1 401 30 view .LVU909
 2859 1218 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp205
 2859      24
 402:sieve_extend.c ****         
GAS LISTING /tmp/ccdGK7kM.s 			page 87


 2860              		.loc 1 402 9 is_stmt 1 view .LVU910
 2861              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 2862              		.loc 1 402 28 is_stmt 0 view .LVU911
 2863 121d 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 2864              	.LVL102:
 402:sieve_extend.c ****         
 2865              		.loc 1 402 28 view .LVU912
 2866 1220 4183E303 		and	r11d, 3	# tmp231,
 2867 1224 747A     		je	.L257	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 2868              		.loc 1 404 9 is_stmt 1 view .LVU913
 405:sieve_extend.c ****             index += step;
 2869              		.loc 1 405 13 view .LVU914
 2870              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2871              		.loc 1 405 31 is_stmt 0 view .LVU915
 2872 1226 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp265, tmp209, range_start
 2872      D9
 2873              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2874              		.loc 1 406 19 view .LVU916
 2875 122b 48FFC6   		inc	rsi	# range_start
 2876              	.LVL103:
 2877              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2878              		.loc 1 405 28 view .LVU917
 2879 122e 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp265
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2880              		.loc 1 406 13 is_stmt 1 view .LVU918
 2881              	.LVL104:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2882              		.loc 1 407 13 view .LVU919
 2883              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2884              		.loc 1 407 20 is_stmt 0 view .LVU920
 2885 1232 4889F0   		mov	rax, rsi	# tmp266, range_start
 2886              	.LVL105:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2887              		.loc 1 407 20 view .LVU921
 2888 1235 48C1E806 		shr	rax, 6	# tmp266,
 2889              	.LVL106:
 2890              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2891              		.loc 1 407 18 view .LVU922
 2892 1239 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 2893              	.LVL107:
 408:sieve_extend.c ****         
 2894              		.loc 1 408 17 is_stmt 1 view .LVU923
 2895              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 2896              		.loc 1 408 9 is_stmt 0 view .LVU924
 2897 123c 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 2898 123f 0F82DB00 		jb	.L268	#,
 2898      0000
 2899 1245 4883F803 		cmp	rax, 3	# word,
 2900 1249 0F87D100 		ja	.L268	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 88


 2900      0000
 2901 124f 4983FB01 		cmp	r11, 1	# tmp231,
 2902 1253 744B     		je	.L257	#,
 2903 1255 4983FB02 		cmp	r11, 2	# tmp231,
 2904 1259 7420     		je	.L334	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 2905              		.loc 1 404 9 is_stmt 1 view .LVU925
 405:sieve_extend.c ****             index += step;
 2906              		.loc 1 405 13 view .LVU926
 2907              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2908              		.loc 1 405 31 is_stmt 0 view .LVU927
 2909 125b C462C9F7 		shlx	r12, rcx, rsi	# tmp269, tmp209, range_start
 2909      E1
 2910              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2911              		.loc 1 406 19 view .LVU928
 2912 1260 48FFC6   		inc	rsi	# range_start
 2913              	.LVL108:
 2914              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2915              		.loc 1 405 28 view .LVU929
 2916 1263 4C0924C4 		or	QWORD PTR [rsp+rax*8], r12	# quadmask, tmp269
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2917              		.loc 1 406 13 is_stmt 1 view .LVU930
 2918              	.LVL109:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2919              		.loc 1 407 13 view .LVU931
 2920              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2921              		.loc 1 407 20 is_stmt 0 view .LVU932
 2922 1267 4889F0   		mov	rax, rsi	# tmp270, range_start
 2923              	.LVL110:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2924              		.loc 1 407 20 view .LVU933
 2925 126a 48C1E806 		shr	rax, 6	# tmp270,
 2926              	.LVL111:
 2927              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2928              		.loc 1 407 18 view .LVU934
 2929 126e 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 2930              	.LVL112:
 408:sieve_extend.c ****         
 2931              		.loc 1 408 17 is_stmt 1 view .LVU935
 2932              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 2933              		.loc 1 408 9 is_stmt 0 view .LVU936
 2934 1271 4883F803 		cmp	rax, 3	# word,
 2935 1275 0F87A500 		ja	.L268	#,
 2935      0000
 2936              	.L334:
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 2937              		.loc 1 404 9 is_stmt 1 view .LVU937
 405:sieve_extend.c ****             index += step;
 2938              		.loc 1 405 13 view .LVU938
 2939              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccdGK7kM.s 			page 89


 2940              		.loc 1 405 31 is_stmt 0 view .LVU939
 2941 127b C462C9F7 		shlx	r11, rcx, rsi	# tmp273, tmp209, range_start
 2941      D9
 2942              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2943              		.loc 1 406 19 view .LVU940
 2944 1280 48FFC6   		inc	rsi	# range_start
 2945              	.LVL113:
 2946              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2947              		.loc 1 405 28 view .LVU941
 2948 1283 4C091CC4 		or	QWORD PTR [rsp+rax*8], r11	# quadmask, tmp273
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2949              		.loc 1 406 13 is_stmt 1 view .LVU942
 2950              	.LVL114:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2951              		.loc 1 407 13 view .LVU943
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2952              		.loc 1 407 13 view .LVU944
 2953              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2954              		.loc 1 407 20 is_stmt 0 view .LVU945
 2955 1287 4889F0   		mov	rax, rsi	# tmp288, range_start
 2956              	.LVL115:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2957              		.loc 1 407 20 view .LVU946
 2958 128a 48C1E806 		shr	rax, 6	# tmp288,
 2959              	.LVL116:
 2960              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2961              		.loc 1 407 18 view .LVU947
 2962 128e 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 2963              	.LVL117:
 408:sieve_extend.c ****         
 2964              		.loc 1 408 17 is_stmt 1 view .LVU948
 2965              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 2966              		.loc 1 408 9 is_stmt 0 view .LVU949
 2967 1291 4883F803 		cmp	rax, 3	# word,
 2968 1295 0F878500 		ja	.L268	#,
 2968      0000
 2969 129b 0F1F4400 		.p2align 4,,10
 2969      00
 2970              		.p2align 3
 2971              	.L257:
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 2972              		.loc 1 404 9 is_stmt 1 view .LVU950
 405:sieve_extend.c ****             index += step;
 2973              		.loc 1 405 13 view .LVU951
 2974              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2975              		.loc 1 406 19 is_stmt 0 view .LVU952
 2976 12a0 4C8D6601 		lea	r12, 1[rsi]	# tmp232,
 2977              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2978              		.loc 1 407 20 view .LVU953
 2979 12a4 4D89E3   		mov	r11, r12	# tmp210, range_start
GAS LISTING /tmp/ccdGK7kM.s 			page 90


 2980 12a7 49C1EB06 		shr	r11, 6	# tmp210,
 2981              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2982              		.loc 1 405 31 view .LVU954
 2983 12ab C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp208, tmp209, range_start
 2983      D9
 2984              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2985              		.loc 1 407 18 view .LVU955
 2986 12b0 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 2987              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 2988              		.loc 1 405 28 view .LVU956
 2989 12b3 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp208
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2990              		.loc 1 406 13 is_stmt 1 view .LVU957
 2991              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 2992              		.loc 1 406 19 is_stmt 0 view .LVU958
 2993 12b7 4C89E6   		mov	rsi, r12	# range_start, tmp232
 2994              	.LVL118:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 2995              		.loc 1 407 13 is_stmt 1 view .LVU959
 408:sieve_extend.c ****         
 2996              		.loc 1 408 17 view .LVU960
 2997              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 2998              		.loc 1 408 9 is_stmt 0 view .LVU961
 2999 12ba 4D39E0   		cmp	r8, r12	# range_stop_unique, range_start
 3000 12bd 7261     		jb	.L268	#,
 408:sieve_extend.c ****         
 3001              		.loc 1 408 9 view .LVU962
 3002 12bf 4983FB03 		cmp	r11, 3	# word,
 3003 12c3 775B     		ja	.L268	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3004              		.loc 1 404 9 is_stmt 1 view .LVU963
 405:sieve_extend.c ****             index += step;
 3005              		.loc 1 405 13 view .LVU964
 3006              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3007              		.loc 1 406 19 is_stmt 0 view .LVU965
 3008 12c5 48FFC6   		inc	rsi	# range_start
 3009              	.LVL119:
 3010              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3011              		.loc 1 407 20 view .LVU966
 3012 12c8 4889F3   		mov	rbx, rsi	# tmp278, range_start
 3013 12cb 48C1EB06 		shr	rbx, 6	# tmp278,
 3014              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3015              		.loc 1 407 18 view .LVU967
 3016 12cf 4829D3   		sub	rbx, rdx	# word, current_vector_start_word
 3017              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3018              		.loc 1 405 31 view .LVU968
 3019 12d2 C4E299F7 		shlx	rax, rcx, r12	# tmp277, tmp209, range_start
 3019      C1
GAS LISTING /tmp/ccdGK7kM.s 			page 91


 3020              	.LVL120:
 3021              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3022              		.loc 1 405 28 view .LVU969
 3023 12d7 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp277
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3024              		.loc 1 406 13 is_stmt 1 view .LVU970
 3025              	.LVL121:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3026              		.loc 1 407 13 view .LVU971
 408:sieve_extend.c ****         
 3027              		.loc 1 408 17 view .LVU972
 3028              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3029              		.loc 1 408 9 is_stmt 0 view .LVU973
 3030 12db 4883FB03 		cmp	rbx, 3	# word,
 3031 12df 773F     		ja	.L268	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3032              		.loc 1 404 9 is_stmt 1 view .LVU974
 405:sieve_extend.c ****             index += step;
 3033              		.loc 1 405 13 view .LVU975
 3034              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3035              		.loc 1 405 31 is_stmt 0 view .LVU976
 3036 12e1 C4E2C9F7 		shlx	rsi, rcx, rsi	# tmp282, tmp209, range_start
 3036      F1
 3037              	.LVL122:
 3038              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3039              		.loc 1 405 28 view .LVU977
 3040 12e6 480934DC 		or	QWORD PTR [rsp+rbx*8], rsi	# quadmask, tmp282
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3041              		.loc 1 406 13 is_stmt 1 view .LVU978
 3042              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3043              		.loc 1 406 19 is_stmt 0 view .LVU979
 3044 12ea 498D7424 		lea	rsi, 2[r12]	# range_start,
 3044      02
 3045              	.LVL123:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3046              		.loc 1 407 13 is_stmt 1 view .LVU980
 3047              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3048              		.loc 1 407 20 is_stmt 0 view .LVU981
 3049 12ef 4989F3   		mov	r11, rsi	# tmp283, range_start
 3050 12f2 49C1EB06 		shr	r11, 6	# tmp283,
 3051              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3052              		.loc 1 407 18 view .LVU982
 3053 12f6 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 408:sieve_extend.c ****         
 3054              		.loc 1 408 17 is_stmt 1 view .LVU983
 3055              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3056              		.loc 1 408 9 is_stmt 0 view .LVU984
 3057 12f9 4983FB03 		cmp	r11, 3	# word,
 3058 12fd 7721     		ja	.L268	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 92


 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3059              		.loc 1 404 9 is_stmt 1 view .LVU985
 405:sieve_extend.c ****             index += step;
 3060              		.loc 1 405 13 view .LVU986
 3061              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3062              		.loc 1 405 31 is_stmt 0 view .LVU987
 3063 12ff C4E2C9F7 		shlx	rax, rcx, rsi	# tmp287, tmp209, range_start
 3063      C1
 3064              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3065              		.loc 1 406 19 view .LVU988
 3066 1304 498D7424 		lea	rsi, 3[r12]	# range_start,
 3066      03
 3067              	.LVL124:
 3068              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3069              		.loc 1 405 28 view .LVU989
 3070 1309 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp287
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3071              		.loc 1 406 13 is_stmt 1 view .LVU990
 3072              	.LVL125:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3073              		.loc 1 407 13 view .LVU991
 3074              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3075              		.loc 1 407 20 is_stmt 0 view .LVU992
 3076 130d 4889F0   		mov	rax, rsi	# tmp288, range_start
 3077 1310 48C1E806 		shr	rax, 6	# tmp288,
 3078              	.LVL126:
 3079              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3080              		.loc 1 407 18 view .LVU993
 3081 1314 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3082              	.LVL127:
 408:sieve_extend.c ****         
 3083              		.loc 1 408 17 is_stmt 1 view .LVU994
 3084              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3085              		.loc 1 408 9 is_stmt 0 view .LVU995
 3086 1317 4883F803 		cmp	rax, 3	# word,
 3087 131b 7683     		jbe	.L257	#,
 3088              	.LVL128:
 3089 131d 0F1F00   		.p2align 4,,10
 3090              		.p2align 3
 3091              	.L268:
 410:sieve_extend.c ****         
 3092              		.loc 1 410 9 is_stmt 1 view .LVU996
 3093              	# sieve_extend.c:410:         register counter_t current_vector = current_vector_start_word>>2;
 410:sieve_extend.c ****         
 3094              		.loc 1 410 28 is_stmt 0 view .LVU997
 3095 1320 48C1EA02 		shr	rdx, 2	# current_vector,
 3096              	.LVL129:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3097              		.loc 1 413 9 is_stmt 1 view .LVU998
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3098              		.loc 1 413 15 view .LVU999
GAS LISTING /tmp/ccdGK7kM.s 			page 93


 3099              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3100              		.loc 1 413 9 is_stmt 0 view .LVU1000
 3101 1324 4939D1   		cmp	r9, rdx	# _69, current_vector
 3102 1327 0F827501 		jb	.L259	#,
 3102      0000
 3103 132d 4989D4   		mov	r12, rdx	# tmp215, current_vector
 3104              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3105              		.loc 1 414 45 view .LVU1001
 3106 1330 C57D6F14 		vmovdqa	ymm10, YMMWORD PTR [rsp]	# quadmask.56_105, quadmask
 3106      24
 3107 1335 49C1E405 		sal	r12, 5	# tmp215,
 3108 1339 4901FC   		add	r12, rdi	# ivtmp.234, bitarray_word
 3109 133c C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR [r12]	# tmp216, quadmask.56_105, MEM[base: _153, offset: 0B]
 3109      1C24
 3110 1342 4C89CB   		mov	rbx, r9	# tmp226, _69
 3111 1345 4829D3   		sub	rbx, rdx	# tmp226, current_vector
 3112              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3113              		.loc 1 413 73 view .LVU1002
 3114 1348 48FFC2   		inc	rdx	# current_vector
 3115              	.LVL130:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3116              		.loc 1 413 73 view .LVU1003
 3117 134b 83E307   		and	ebx, 7	# tmp227,
 414:sieve_extend.c ****         }
 3118              		.loc 1 414 13 is_stmt 1 view .LVU1004
 3119              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3120              		.loc 1 414 45 is_stmt 0 view .LVU1005
 3121 134e C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm11	# MEM[base: _153, offset: 0B], tmp216
 3121      1C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3122              		.loc 1 413 58 is_stmt 1 view .LVU1006
 3123              	.LVL131:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3124              		.loc 1 413 15 view .LVU1007
 3125 1354 4D8D5C24 		lea	r11, 32[r12]	# ivtmp.234,
 3125      20
 3126              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3127              		.loc 1 413 9 is_stmt 0 view .LVU1008
 3128 1359 4939D1   		cmp	r9, rdx	# _69, current_vector
 3129 135c 0F824001 		jb	.L259	#,
 3129      0000
 3130 1362 4885DB   		test	rbx, rbx	# tmp227
 3131 1365 0F84AD00 		je	.L260	#,
 3131      0000
 3132 136b 4883FB01 		cmp	rbx, 1	# tmp227,
 3133 136f 0F848900 		je	.L327	#,
 3133      0000
 3134 1375 4883FB02 		cmp	rbx, 2	# tmp227,
 3135 1379 7472     		je	.L328	#,
 3136 137b 4883FB03 		cmp	rbx, 3	# tmp227,
 3137 137f 745B     		je	.L329	#,
 3138 1381 4883FB04 		cmp	rbx, 4	# tmp227,
GAS LISTING /tmp/ccdGK7kM.s 			page 94


 3139 1385 7444     		je	.L330	#,
 3140 1387 4883FB05 		cmp	rbx, 5	# tmp227,
 3141 138b 742D     		je	.L331	#,
 3142 138d 4883FB06 		cmp	rbx, 6	# tmp227,
 3143 1391 7416     		je	.L332	#,
 414:sieve_extend.c ****         }
 3144              		.loc 1 414 13 is_stmt 1 view .LVU1009
 3145              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3146              		.loc 1 414 45 is_stmt 0 view .LVU1010
 3147 1393 C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 32[r12]	# tmp258, quadmask.56_105, MEM[base: _153, offset: 0B]
 3147      642420
 3148              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3149              		.loc 1 413 73 view .LVU1011
 3150 139a 48FFC2   		inc	rdx	# current_vector
 3151              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3152              		.loc 1 414 45 view .LVU1012
 3153 139d C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm12	# MEM[base: _153, offset: 0B], tmp258
 3153      642420
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3154              		.loc 1 413 58 is_stmt 1 view .LVU1013
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3155              		.loc 1 413 15 view .LVU1014
 3156 13a4 4D8D5C24 		lea	r11, 64[r12]	# ivtmp.234,
 3156      40
 3157              	.L332:
 414:sieve_extend.c ****         }
 3158              		.loc 1 414 13 view .LVU1015
 3159              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3160              		.loc 1 414 45 is_stmt 0 view .LVU1016
 3161 13a9 C4412DEB 		vpor	ymm13, ymm10, YMMWORD PTR [r11]	# tmp259, quadmask.56_105, MEM[base: _153, offset: 0B]
 3161      2B
 3162              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3163              		.loc 1 413 73 view .LVU1017
 3164 13ae 48FFC2   		inc	rdx	# current_vector
 3165              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3166              		.loc 1 414 45 view .LVU1018
 3167 13b1 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm13	# MEM[base: _153, offset: 0B], tmp259
 3167      2B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3168              		.loc 1 413 58 is_stmt 1 view .LVU1019
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3169              		.loc 1 413 15 view .LVU1020
 3170 13b6 4983C320 		add	r11, 32	# ivtmp.234,
 3171              	.L331:
 414:sieve_extend.c ****         }
 3172              		.loc 1 414 13 view .LVU1021
 3173              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3174              		.loc 1 414 45 is_stmt 0 view .LVU1022
 3175 13ba C4412DEB 		vpor	ymm14, ymm10, YMMWORD PTR [r11]	# tmp260, quadmask.56_105, MEM[base: _153, offset: 0B]
 3175      33
GAS LISTING /tmp/ccdGK7kM.s 			page 95


 3176              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3177              		.loc 1 413 73 view .LVU1023
 3178 13bf 48FFC2   		inc	rdx	# current_vector
 3179              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3180              		.loc 1 414 45 view .LVU1024
 3181 13c2 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm14	# MEM[base: _153, offset: 0B], tmp260
 3181      33
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3182              		.loc 1 413 58 is_stmt 1 view .LVU1025
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3183              		.loc 1 413 15 view .LVU1026
 3184 13c7 4983C320 		add	r11, 32	# ivtmp.234,
 3185              	.L330:
 414:sieve_extend.c ****         }
 3186              		.loc 1 414 13 view .LVU1027
 3187              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3188              		.loc 1 414 45 is_stmt 0 view .LVU1028
 3189 13cb C4412DEB 		vpor	ymm15, ymm10, YMMWORD PTR [r11]	# tmp261, quadmask.56_105, MEM[base: _153, offset: 0B]
 3189      3B
 3190              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3191              		.loc 1 413 73 view .LVU1029
 3192 13d0 48FFC2   		inc	rdx	# current_vector
 3193              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3194              		.loc 1 414 45 view .LVU1030
 3195 13d3 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm15	# MEM[base: _153, offset: 0B], tmp261
 3195      3B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3196              		.loc 1 413 58 is_stmt 1 view .LVU1031
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3197              		.loc 1 413 15 view .LVU1032
 3198 13d8 4983C320 		add	r11, 32	# ivtmp.234,
 3199              	.L329:
 414:sieve_extend.c ****         }
 3200              		.loc 1 414 13 view .LVU1033
 3201              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3202              		.loc 1 414 45 is_stmt 0 view .LVU1034
 3203 13dc C4C12DEB 		vpor	ymm0, ymm10, YMMWORD PTR [r11]	# tmp262, quadmask.56_105, MEM[base: _153, offset: 0B]
 3203      03
 3204              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3205              		.loc 1 413 73 view .LVU1035
 3206 13e1 48FFC2   		inc	rdx	# current_vector
 3207              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3208              		.loc 1 414 45 view .LVU1036
 3209 13e4 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm0	# MEM[base: _153, offset: 0B], tmp262
 3209      03
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3210              		.loc 1 413 58 is_stmt 1 view .LVU1037
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3211              		.loc 1 413 15 view .LVU1038
GAS LISTING /tmp/ccdGK7kM.s 			page 96


 3212 13e9 4983C320 		add	r11, 32	# ivtmp.234,
 3213              	.L328:
 414:sieve_extend.c ****         }
 3214              		.loc 1 414 13 view .LVU1039
 3215              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3216              		.loc 1 414 45 is_stmt 0 view .LVU1040
 3217 13ed C4C12DEB 		vpor	ymm1, ymm10, YMMWORD PTR [r11]	# tmp263, quadmask.56_105, MEM[base: _153, offset: 0B]
 3217      0B
 3218              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3219              		.loc 1 413 73 view .LVU1041
 3220 13f2 48FFC2   		inc	rdx	# current_vector
 3221              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3222              		.loc 1 414 45 view .LVU1042
 3223 13f5 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm1	# MEM[base: _153, offset: 0B], tmp263
 3223      0B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3224              		.loc 1 413 58 is_stmt 1 view .LVU1043
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3225              		.loc 1 413 15 view .LVU1044
 3226 13fa 4983C320 		add	r11, 32	# ivtmp.234,
 3227              	.L327:
 414:sieve_extend.c ****         }
 3228              		.loc 1 414 13 view .LVU1045
 3229              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3230              		.loc 1 414 45 is_stmt 0 view .LVU1046
 3231 13fe C4C12DEB 		vpor	ymm3, ymm10, YMMWORD PTR [r11]	# tmp264, quadmask.56_105, MEM[base: _153, offset: 0B]
 3231      1B
 3232              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3233              		.loc 1 413 73 view .LVU1047
 3234 1403 48FFC2   		inc	rdx	# current_vector
 3235              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3236              		.loc 1 414 45 view .LVU1048
 3237 1406 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm3	# MEM[base: _153, offset: 0B], tmp264
 3237      1B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3238              		.loc 1 413 58 is_stmt 1 view .LVU1049
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3239              		.loc 1 413 15 view .LVU1050
 3240 140b 4983C320 		add	r11, 32	# ivtmp.234,
 3241              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3242              		.loc 1 413 9 is_stmt 0 view .LVU1051
 3243 140f 4939D1   		cmp	r9, rdx	# _69, current_vector
 3244 1412 0F828A00 		jb	.L259	#,
 3244      0000
 3245              	.L260:
 414:sieve_extend.c ****         }
 3246              		.loc 1 414 13 is_stmt 1 view .LVU1052
 3247              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3248              		.loc 1 414 45 is_stmt 0 view .LVU1053
GAS LISTING /tmp/ccdGK7kM.s 			page 97


 3249 1418 C4C12DEB 		vpor	ymm4, ymm10, YMMWORD PTR [r11]	# tmp236, quadmask.56_105, MEM[base: _153, offset: 0B]
 3249      23
 3250 141d C4C12DEB 		vpor	ymm5, ymm10, YMMWORD PTR 32[r11]	# tmp239, quadmask.56_105, MEM[base: _153, offset: 0B]
 3250      6B20
 3251 1423 C4C12DEB 		vpor	ymm6, ymm10, YMMWORD PTR 64[r11]	# tmp242, quadmask.56_105, MEM[base: _153, offset: 0B]
 3251      7340
 3252 1429 C4C12DEB 		vpor	ymm7, ymm10, YMMWORD PTR 96[r11]	# tmp245, quadmask.56_105, MEM[base: _153, offset: 0B]
 3252      7B60
 3253 142f C4412DEB 		vpor	ymm8, ymm10, YMMWORD PTR 128[r11]	# tmp248, quadmask.56_105, MEM[base: _153, offset: 0B]
 3253      83800000 
 3253      00
 3254 1438 C4412DEB 		vpor	ymm9, ymm10, YMMWORD PTR 160[r11]	# tmp251, quadmask.56_105, MEM[base: _153, offset: 0B]
 3254      8BA00000 
 3254      00
 3255 1441 C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR 192[r11]	# tmp254, quadmask.56_105, MEM[base: _153, offset: 0B]
 3255      9BC00000 
 3255      00
 3256 144a C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 224[r11]	# tmp257, quadmask.56_105, MEM[base: _153, offset: 0B]
 3256      A3E00000 
 3256      00
 3257              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3258              		.loc 1 413 73 view .LVU1054
 3259 1453 4883C208 		add	rdx, 8	# current_vector,
 3260              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3261              		.loc 1 414 45 view .LVU1055
 3262 1457 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm4	# MEM[base: _153, offset: 0B], tmp236
 3262      23
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3263              		.loc 1 413 58 is_stmt 1 view .LVU1056
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3264              		.loc 1 413 15 view .LVU1057
 414:sieve_extend.c ****         }
 3265              		.loc 1 414 13 view .LVU1058
 3266              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3267              		.loc 1 414 45 is_stmt 0 view .LVU1059
 3268 145c C4C17D7F 		vmovdqa	YMMWORD PTR 32[r11], ymm5	# MEM[base: _153, offset: 0B], tmp239
 3268      6B20
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3269              		.loc 1 413 58 is_stmt 1 view .LVU1060
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3270              		.loc 1 413 15 view .LVU1061
 414:sieve_extend.c ****         }
 3271              		.loc 1 414 13 view .LVU1062
 3272              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3273              		.loc 1 414 45 is_stmt 0 view .LVU1063
 3274 1462 C4C17D7F 		vmovdqa	YMMWORD PTR 64[r11], ymm6	# MEM[base: _153, offset: 0B], tmp242
 3274      7340
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3275              		.loc 1 413 58 is_stmt 1 view .LVU1064
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3276              		.loc 1 413 15 view .LVU1065
 414:sieve_extend.c ****         }
 3277              		.loc 1 414 13 view .LVU1066
GAS LISTING /tmp/ccdGK7kM.s 			page 98


 3278              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3279              		.loc 1 414 45 is_stmt 0 view .LVU1067
 3280 1468 C4C17D7F 		vmovdqa	YMMWORD PTR 96[r11], ymm7	# MEM[base: _153, offset: 0B], tmp245
 3280      7B60
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3281              		.loc 1 413 58 is_stmt 1 view .LVU1068
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3282              		.loc 1 413 15 view .LVU1069
 414:sieve_extend.c ****         }
 3283              		.loc 1 414 13 view .LVU1070
 3284              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3285              		.loc 1 414 45 is_stmt 0 view .LVU1071
 3286 146e C4417D7F 		vmovdqa	YMMWORD PTR 128[r11], ymm8	# MEM[base: _153, offset: 0B], tmp248
 3286      83800000 
 3286      00
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3287              		.loc 1 413 58 is_stmt 1 view .LVU1072
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3288              		.loc 1 413 15 view .LVU1073
 414:sieve_extend.c ****         }
 3289              		.loc 1 414 13 view .LVU1074
 3290              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3291              		.loc 1 414 45 is_stmt 0 view .LVU1075
 3292 1477 C4417D7F 		vmovdqa	YMMWORD PTR 160[r11], ymm9	# MEM[base: _153, offset: 0B], tmp251
 3292      8BA00000 
 3292      00
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3293              		.loc 1 413 58 is_stmt 1 view .LVU1076
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3294              		.loc 1 413 15 view .LVU1077
 414:sieve_extend.c ****         }
 3295              		.loc 1 414 13 view .LVU1078
 3296              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3297              		.loc 1 414 45 is_stmt 0 view .LVU1079
 3298 1480 C4417D7F 		vmovdqa	YMMWORD PTR 192[r11], ymm11	# MEM[base: _153, offset: 0B], tmp254
 3298      9BC00000 
 3298      00
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3299              		.loc 1 413 58 is_stmt 1 view .LVU1080
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3300              		.loc 1 413 15 view .LVU1081
 414:sieve_extend.c ****         }
 3301              		.loc 1 414 13 view .LVU1082
 3302              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3303              		.loc 1 414 45 is_stmt 0 view .LVU1083
 3304 1489 C4417D7F 		vmovdqa	YMMWORD PTR 224[r11], ymm12	# MEM[base: _153, offset: 0B], tmp257
 3304      A3E00000 
 3304      00
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3305              		.loc 1 413 58 is_stmt 1 view .LVU1084
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3306              		.loc 1 413 15 view .LVU1085
GAS LISTING /tmp/ccdGK7kM.s 			page 99


 3307 1492 4981C300 		add	r11, 256	# ivtmp.234,
 3307      010000
 3308              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3309              		.loc 1 413 9 is_stmt 0 view .LVU1086
 3310 1499 4939D1   		cmp	r9, rdx	# _69, current_vector
 3311 149c 0F8376FF 		jnb	.L260	#,
 3311      FFFF
 3312              	.L259:
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3313              		.loc 1 417 9 is_stmt 1 view .LVU1087
 3314              	# sieve_extend.c:417:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3315              		.loc 1 417 19 is_stmt 0 view .LVU1088
 3316 14a2 488D0495 		lea	rax, 0[0+rdx*4]	# index_word,
 3316      00000000 
 3317              	.LVL132:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3318              		.loc 1 418 9 is_stmt 1 view .LVU1089
 419:sieve_extend.c ****             #pragma ivdep
 3319              		.loc 1 419 9 view .LVU1090
 3320              	# sieve_extend.c:419:         if (index_word <= range_stop_word) {
 419:sieve_extend.c ****             #pragma ivdep
 3321              		.loc 1 419 12 is_stmt 0 view .LVU1091
 3322 14aa 4939C2   		cmp	r10, rax	# range_stop_word, index_word
 3323 14ad 7331     		jnb	.L362	#,
 3324              	.LVL133:
 3325              	.L262:
 419:sieve_extend.c ****             #pragma ivdep
 3326              		.loc 1 419 12 view .LVU1092
 3327              	.LBE274:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3328              		.loc 1 399 41 is_stmt 1 view .LVU1093
 3329              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3330              		.loc 1 399 5 is_stmt 0 view .LVU1094
 3331 14af 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3332 14b2 0F8748FD 		ja	.L246	#,
 3332      FFFF
 3333              	.LVL134:
 3334              	.L360:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3335              		.loc 1 399 5 view .LVU1095
 3336 14b8 C5F877   		vzeroupper
 3337              	.L244:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3338              		.loc 1 399 5 view .LVU1096
 3339              	.LBE273:
 3340              	# sieve_extend.c:427: }
 427:sieve_extend.c **** 
 3341              		.loc 1 427 1 view .LVU1097
 3342 14bb 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp309, D.34759
 3342      38
 3343 14c0 64483304 		xor	rax, QWORD PTR fs:40	# tmp309, MEM[(<address-space-1> long unsigned int *)40B]
 3343      25280000 
 3343      00
 3344 14c9 0F85F801 		jne	.L363	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 100


 3344      0000
 3345 14cf 488D65F0 		lea	rsp, -16[rbp]	#,
 3346 14d3 5B       		pop	rbx	#
 3347 14d4 415C     		pop	r12	#
 3348 14d6 5D       		pop	rbp	#
 3349              		.cfi_remember_state
 3350              		.cfi_def_cfa 7, 8
 3351 14d7 C3       		ret	
 3352              	.LVL135:
 3353 14d8 0F1F8400 		.p2align 4,,10
 3353      00000000 
 3354              		.p2align 3
 3355              	.L362:
 3356              		.cfi_restore_state
 3357              	.LBB277:
 3358              	.LBB275:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3359              		.loc 1 421 27 is_stmt 1 view .LVU1098
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3360              		.loc 1 422 17 view .LVU1099
 423:sieve_extend.c ****             }
 3361              		.loc 1 423 21 view .LVU1100
 3362              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3363              		.loc 1 423 52 is_stmt 0 view .LVU1101
 3364 14e0 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 3365 14e4 48C1E205 		sal	rdx, 5	# tmp217,
 3366              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3367              		.loc 1 422 31 view .LVU1102
 3368 14e8 488D5801 		lea	rbx, 1[rax]	# _34,
 3369              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3370              		.loc 1 423 52 view .LVU1103
 3371 14ec 4C092417 		or	QWORD PTR [rdi+rdx], r12	# *_67, quadmask
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3372              		.loc 1 421 51 is_stmt 1 view .LVU1104
 3373              	.LVL136:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3374              		.loc 1 421 27 view .LVU1105
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3375              		.loc 1 422 17 view .LVU1106
 3376              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3377              		.loc 1 422 20 is_stmt 0 view .LVU1107
 3378 14f0 4C39D3   		cmp	rbx, r10	# _34, range_stop_word
 3379 14f3 7709     		ja	.L263	#,
 423:sieve_extend.c ****             }
 3380              		.loc 1 423 21 is_stmt 1 view .LVU1108
 3381              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3382              		.loc 1 423 52 is_stmt 0 view .LVU1109
 3383 14f5 4C8B5C24 		mov	r11, QWORD PTR 8[rsp]	# quadmask, quadmask
 3383      08
 3384 14fa 4C091CDF 		or	QWORD PTR [rdi+rbx*8], r11	# *_139, quadmask
 3385              	.L263:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
GAS LISTING /tmp/ccdGK7kM.s 			page 101


 3386              		.loc 1 421 51 is_stmt 1 view .LVU1110
 3387              	.LVL137:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3388              		.loc 1 421 27 view .LVU1111
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3389              		.loc 1 422 17 view .LVU1112
 3390              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3391              		.loc 1 422 31 is_stmt 0 view .LVU1113
 3392 14fe 488D5002 		lea	rdx, 2[rax]	# _31,
 3393              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3394              		.loc 1 422 20 view .LVU1114
 3395 1502 4C39D2   		cmp	rdx, r10	# _31, range_stop_word
 3396 1505 7709     		ja	.L264	#,
 423:sieve_extend.c ****             }
 3397              		.loc 1 423 21 is_stmt 1 view .LVU1115
 3398              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3399              		.loc 1 423 52 is_stmt 0 view .LVU1116
 3400 1507 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 3400      10
 3401 150c 4C0924D7 		or	QWORD PTR [rdi+rdx*8], r12	# *_133, quadmask
 3402              	.L264:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3403              		.loc 1 421 51 is_stmt 1 view .LVU1117
 3404              	.LVL138:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3405              		.loc 1 421 27 view .LVU1118
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3406              		.loc 1 422 17 view .LVU1119
 3407              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3408              		.loc 1 422 31 is_stmt 0 view .LVU1120
 3409 1510 4883C003 		add	rax, 3	# _27,
 3410              	.LVL139:
 3411              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3412              		.loc 1 422 20 view .LVU1121
 3413 1514 4C39D0   		cmp	rax, r10	# _27, range_stop_word
 3414 1517 7796     		ja	.L262	#,
 423:sieve_extend.c ****             }
 3415              		.loc 1 423 21 is_stmt 1 view .LVU1122
 3416              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3417              		.loc 1 423 52 is_stmt 0 view .LVU1123
 3418 1519 488B5C24 		mov	rbx, QWORD PTR 24[rsp]	# quadmask, quadmask
 3418      18
 3419              	.LVL140:
 423:sieve_extend.c ****             }
 3420              		.loc 1 423 52 view .LVU1124
 3421 151e 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_24, quadmask
 3422 1522 EB8B     		jmp	.L262	#
 3423              	.LVL141:
 3424              	.L361:
 423:sieve_extend.c ****             }
 3425              		.loc 1 423 52 view .LVU1125
GAS LISTING /tmp/ccdGK7kM.s 			page 102


 3426 1524 4889D3   		mov	rbx, rdx	# _157, step
 3427 1527 48C1E305 		sal	rbx, 5	# _157,
 3428              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3429              		.loc 1 405 31 view .LVU1126
 3430 152b 41BB0100 		mov	r11d, 1	# tmp188,
 3430      0000
 3431              	.LVL142:
 3432              		.p2align 4,,10
 3433 1531 0F1F8000 		.p2align 3
 3433      000000
 3434              	.L256:
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3435              		.loc 1 400 9 is_stmt 1 view .LVU1127
 3436              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3437              		.loc 1 400 54 is_stmt 0 view .LVU1128
 3438 1538 4889F0   		mov	rax, rsi	# tmp183, range_start
 3439 153b 48C1E808 		shr	rax, 8	# tmp183,
 3440              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3441              		.loc 1 400 25 view .LVU1129
 3442 153f 4C8D2485 		lea	r12, 0[0+rax*4]	# current_vector_start_word,
 3442      00000000 
 3443              	.LVL143:
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3444              		.loc 1 401 9 is_stmt 1 view .LVU1130
 3445              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3446              		.loc 1 402 35 is_stmt 0 view .LVU1131
 3447 1547 4889F0   		mov	rax, rsi	# tmp185, range_start
 3448 154a 48C1E806 		shr	rax, 6	# tmp185,
 3449              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3450              		.loc 1 401 30 view .LVU1132
 3451 154e C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp184
 3451      24
 402:sieve_extend.c ****         
 3452              		.loc 1 402 9 is_stmt 1 view .LVU1133
 3453              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3454              		.loc 1 402 28 is_stmt 0 view .LVU1134
 3455 1553 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 3456              	.LVL144:
 402:sieve_extend.c ****         
 3457              		.loc 1 402 28 view .LVU1135
 3458 1556 EB0D     		jmp	.L247	#
 3459 1558 0F1F8400 		.p2align 4,,10
 3459      00000000 
 3460              		.p2align 3
 3461              	.L364:
 3462              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3463              		.loc 1 408 9 discriminator 1 view .LVU1136
 3464 1560 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3465 1563 721C     		jb	.L267	#,
 3466              	.L247:
GAS LISTING /tmp/ccdGK7kM.s 			page 103


 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3467              		.loc 1 404 9 is_stmt 1 discriminator 1 view .LVU1137
 405:sieve_extend.c ****             index += step;
 3468              		.loc 1 405 13 discriminator 1 view .LVU1138
 3469              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3470              		.loc 1 405 31 is_stmt 0 discriminator 1 view .LVU1139
 3471 1565 C4C2C9F7 		shlx	rcx, r11, rsi	# tmp187, tmp188, range_start
 3471      CB
 3472              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3473              		.loc 1 406 19 discriminator 1 view .LVU1140
 3474 156a 4801D6   		add	rsi, rdx	# range_start, step
 3475              	.LVL145:
 3476              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3477              		.loc 1 405 28 discriminator 1 view .LVU1141
 3478 156d 48090CC4 		or	QWORD PTR [rsp+rax*8], rcx	# quadmask, tmp187
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3479              		.loc 1 406 13 is_stmt 1 discriminator 1 view .LVU1142
 3480              	.LVL146:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3481              		.loc 1 407 13 discriminator 1 view .LVU1143
 3482              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3483              		.loc 1 407 20 is_stmt 0 discriminator 1 view .LVU1144
 3484 1571 4889F0   		mov	rax, rsi	# tmp189, range_start
 3485              	.LVL147:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3486              		.loc 1 407 20 discriminator 1 view .LVU1145
 3487 1574 48C1E806 		shr	rax, 6	# tmp189,
 3488              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3489              		.loc 1 407 18 discriminator 1 view .LVU1146
 3490 1578 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 3491              	.LVL148:
 408:sieve_extend.c ****         
 3492              		.loc 1 408 17 is_stmt 1 discriminator 1 view .LVU1147
 3493              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3494              		.loc 1 408 9 is_stmt 0 discriminator 1 view .LVU1148
 3495 157b 4883F803 		cmp	rax, 3	# word,
 3496 157f 76DF     		jbe	.L364	#,
 3497              	.L267:
 410:sieve_extend.c ****         
 3498              		.loc 1 410 9 is_stmt 1 view .LVU1149
 3499              	# sieve_extend.c:410:         register counter_t current_vector = current_vector_start_word>>2;
 410:sieve_extend.c ****         
 3500              		.loc 1 410 28 is_stmt 0 view .LVU1150
 3501 1581 4C89E0   		mov	rax, r12	# current_vector_start_word, current_vector_start_word
 3502              	.LVL149:
 410:sieve_extend.c ****         
 3503              		.loc 1 410 28 view .LVU1151
 3504 1584 48C1E802 		shr	rax, 2	# current_vector_start_word,
 3505              	.LVL150:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3506              		.loc 1 413 9 is_stmt 1 view .LVU1152
GAS LISTING /tmp/ccdGK7kM.s 			page 104


 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3507              		.loc 1 413 15 view .LVU1153
 3508              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3509              		.loc 1 413 9 is_stmt 0 view .LVU1154
 3510 1588 4C39C8   		cmp	rax, r9	# current_vector, _69
 3511 158b 0F87D700 		ja	.L249	#,
 3511      0000
 3512 1591 4989C4   		mov	r12, rax	# tmp194, current_vector
 3513              	.LVL151:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3514              		.loc 1 413 9 view .LVU1155
 3515 1594 49C1E405 		sal	r12, 5	# tmp194,
 3516              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3517              		.loc 1 414 45 view .LVU1156
 3518 1598 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.56_19, quadmask
 3518      24
 3519 159d 4901FC   		add	r12, rdi	# ivtmp.240, bitarray_word
 3520              	.L250:
 414:sieve_extend.c ****         }
 3521              		.loc 1 414 13 is_stmt 1 discriminator 2 view .LVU1157
 3522              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3523              		.loc 1 414 45 is_stmt 0 discriminator 2 view .LVU1158
 3524 15a0 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r12]	# tmp195, quadmask.56_19, MEM[base: _161, offset: 0B]
 3524      0C24
 3525              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3526              		.loc 1 413 73 discriminator 2 view .LVU1159
 3527 15a6 4801D0   		add	rax, rdx	# current_vector, step
 3528              	.LVL152:
 3529              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3530              		.loc 1 414 45 discriminator 2 view .LVU1160
 3531 15a9 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm1	# MEM[base: _161, offset: 0B], tmp195
 3531      0C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3532              		.loc 1 413 58 is_stmt 1 discriminator 2 view .LVU1161
 3533              	.LVL153:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3534              		.loc 1 413 15 discriminator 2 view .LVU1162
 3535 15af 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3536              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3537              		.loc 1 413 9 is_stmt 0 discriminator 2 view .LVU1163
 3538 15b2 4C39C8   		cmp	rax, r9	# current_vector, _69
 3539 15b5 0F87AD00 		ja	.L249	#,
 3539      0000
 414:sieve_extend.c ****         }
 3540              		.loc 1 414 13 is_stmt 1 view .LVU1164
 3541              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3542              		.loc 1 414 45 is_stmt 0 view .LVU1165
 3543 15bb C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r12]	# tmp291, quadmask.56_19, MEM[base: _161, offset: 0B]
 3543      1C24
 3544              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
GAS LISTING /tmp/ccdGK7kM.s 			page 105


 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3545              		.loc 1 413 73 view .LVU1166
 3546 15c1 4801D0   		add	rax, rdx	# current_vector, step
 3547              	.LVL154:
 3548              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3549              		.loc 1 414 45 view .LVU1167
 3550 15c4 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm3	# MEM[base: _161, offset: 0B], tmp291
 3550      1C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3551              		.loc 1 413 58 is_stmt 1 view .LVU1168
 3552              	.LVL155:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3553              		.loc 1 413 15 view .LVU1169
 3554 15ca 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3555              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3556              		.loc 1 413 9 is_stmt 0 view .LVU1170
 3557 15cd 4C39C8   		cmp	rax, r9	# current_vector, _69
 3558 15d0 0F879200 		ja	.L249	#,
 3558      0000
 414:sieve_extend.c ****         }
 3559              		.loc 1 414 13 is_stmt 1 view .LVU1171
 3560              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3561              		.loc 1 414 45 is_stmt 0 view .LVU1172
 3562 15d6 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r12]	# tmp293, quadmask.56_19, MEM[base: _161, offset: 0B]
 3562      2424
 3563              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3564              		.loc 1 413 73 view .LVU1173
 3565 15dc 4801D0   		add	rax, rdx	# current_vector, step
 3566              	.LVL156:
 3567              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3568              		.loc 1 414 45 view .LVU1174
 3569 15df C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm4	# MEM[base: _161, offset: 0B], tmp293
 3569      2424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3570              		.loc 1 413 58 is_stmt 1 view .LVU1175
 3571              	.LVL157:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3572              		.loc 1 413 15 view .LVU1176
 3573 15e5 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3574              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3575              		.loc 1 413 9 is_stmt 0 view .LVU1177
 3576 15e8 4C39C8   		cmp	rax, r9	# current_vector, _69
 3577 15eb 777B     		ja	.L249	#,
 414:sieve_extend.c ****         }
 3578              		.loc 1 414 13 is_stmt 1 view .LVU1178
 3579              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3580              		.loc 1 414 45 is_stmt 0 view .LVU1179
 3581 15ed C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r12]	# tmp295, quadmask.56_19, MEM[base: _161, offset: 0B]
 3581      2C24
 3582              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
GAS LISTING /tmp/ccdGK7kM.s 			page 106


 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3583              		.loc 1 413 73 view .LVU1180
 3584 15f3 4801D0   		add	rax, rdx	# current_vector, step
 3585              	.LVL158:
 3586              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3587              		.loc 1 414 45 view .LVU1181
 3588 15f6 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm5	# MEM[base: _161, offset: 0B], tmp295
 3588      2C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3589              		.loc 1 413 58 is_stmt 1 view .LVU1182
 3590              	.LVL159:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3591              		.loc 1 413 15 view .LVU1183
 3592 15fc 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3593              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3594              		.loc 1 413 9 is_stmt 0 view .LVU1184
 3595 15ff 4C39C8   		cmp	rax, r9	# current_vector, _69
 3596 1602 7764     		ja	.L249	#,
 414:sieve_extend.c ****         }
 3597              		.loc 1 414 13 is_stmt 1 view .LVU1185
 3598              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3599              		.loc 1 414 45 is_stmt 0 view .LVU1186
 3600 1604 C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r12]	# tmp297, quadmask.56_19, MEM[base: _161, offset: 0B]
 3600      3424
 3601              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3602              		.loc 1 413 73 view .LVU1187
 3603 160a 4801D0   		add	rax, rdx	# current_vector, step
 3604              	.LVL160:
 3605              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3606              		.loc 1 414 45 view .LVU1188
 3607 160d C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm6	# MEM[base: _161, offset: 0B], tmp297
 3607      3424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3608              		.loc 1 413 58 is_stmt 1 view .LVU1189
 3609              	.LVL161:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3610              		.loc 1 413 15 view .LVU1190
 3611 1613 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3612              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3613              		.loc 1 413 9 is_stmt 0 view .LVU1191
 3614 1616 4C39C8   		cmp	rax, r9	# current_vector, _69
 3615 1619 774D     		ja	.L249	#,
 414:sieve_extend.c ****         }
 3616              		.loc 1 414 13 is_stmt 1 view .LVU1192
 3617              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3618              		.loc 1 414 45 is_stmt 0 view .LVU1193
 3619 161b C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r12]	# tmp299, quadmask.56_19, MEM[base: _161, offset: 0B]
 3619      3C24
 3620              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccdGK7kM.s 			page 107


 3621              		.loc 1 413 73 view .LVU1194
 3622 1621 4801D0   		add	rax, rdx	# current_vector, step
 3623              	.LVL162:
 3624              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3625              		.loc 1 414 45 view .LVU1195
 3626 1624 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm7	# MEM[base: _161, offset: 0B], tmp299
 3626      3C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3627              		.loc 1 413 58 is_stmt 1 view .LVU1196
 3628              	.LVL163:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3629              		.loc 1 413 15 view .LVU1197
 3630 162a 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3631              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3632              		.loc 1 413 9 is_stmt 0 view .LVU1198
 3633 162d 4C39C8   		cmp	rax, r9	# current_vector, _69
 3634 1630 7736     		ja	.L249	#,
 414:sieve_extend.c ****         }
 3635              		.loc 1 414 13 is_stmt 1 view .LVU1199
 3636              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3637              		.loc 1 414 45 is_stmt 0 view .LVU1200
 3638 1632 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r12]	# tmp301, quadmask.56_19, MEM[base: _161, offset: 0B]
 3638      0424
 3639              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3640              		.loc 1 413 73 view .LVU1201
 3641 1638 4801D0   		add	rax, rdx	# current_vector, step
 3642              	.LVL164:
 3643              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3644              		.loc 1 414 45 view .LVU1202
 3645 163b C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm8	# MEM[base: _161, offset: 0B], tmp301
 3645      0424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3646              		.loc 1 413 58 is_stmt 1 view .LVU1203
 3647              	.LVL165:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3648              		.loc 1 413 15 view .LVU1204
 3649 1641 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3650              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3651              		.loc 1 413 9 is_stmt 0 view .LVU1205
 3652 1644 4C39C8   		cmp	rax, r9	# current_vector, _69
 3653 1647 771F     		ja	.L249	#,
 414:sieve_extend.c ****         }
 3654              		.loc 1 414 13 is_stmt 1 view .LVU1206
 3655              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3656              		.loc 1 414 45 is_stmt 0 view .LVU1207
 3657 1649 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r12]	# tmp303, quadmask.56_19, MEM[base: _161, offset: 0B]
 3657      0C24
 3658              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3659              		.loc 1 413 73 view .LVU1208
GAS LISTING /tmp/ccdGK7kM.s 			page 108


 3660 164f 4801D0   		add	rax, rdx	# current_vector, step
 3661              	.LVL166:
 3662              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3663              		.loc 1 414 45 view .LVU1209
 3664 1652 C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm9	# MEM[base: _161, offset: 0B], tmp303
 3664      0C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3665              		.loc 1 413 58 is_stmt 1 view .LVU1210
 3666              	.LVL167:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3667              		.loc 1 413 15 view .LVU1211
 3668 1658 4901DC   		add	r12, rbx	# ivtmp.240, _157
 3669              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3670              		.loc 1 413 9 is_stmt 0 view .LVU1212
 3671 165b 4C39C8   		cmp	rax, r9	# current_vector, _69
 3672 165e 0F863CFF 		jbe	.L250	#,
 3672      FFFF
 3673              		.p2align 4,,10
 3674 1664 0F1F4000 		.p2align 3
 3675              	.L249:
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3676              		.loc 1 417 9 is_stmt 1 view .LVU1213
 3677              	# sieve_extend.c:417:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3678              		.loc 1 417 19 is_stmt 0 view .LVU1214
 3679 1668 488D0C85 		lea	rcx, 0[0+rax*4]	# index_word,
 3679      00000000 
 3680              	.LVL168:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3681              		.loc 1 418 9 is_stmt 1 view .LVU1215
 419:sieve_extend.c ****             #pragma ivdep
 3682              		.loc 1 419 9 view .LVU1216
 3683              	# sieve_extend.c:419:         if (index_word <= range_stop_word) {
 419:sieve_extend.c ****             #pragma ivdep
 3684              		.loc 1 419 12 is_stmt 0 view .LVU1217
 3685 1670 4C39D1   		cmp	rcx, r10	# index_word, range_stop_word
 3686 1673 760E     		jbe	.L365	#,
 3687              	.LVL169:
 3688              	.L252:
 419:sieve_extend.c ****             #pragma ivdep
 3689              		.loc 1 419 12 view .LVU1218
 3690              	.LBE275:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3691              		.loc 1 399 41 is_stmt 1 view .LVU1219
 3692              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3693              		.loc 1 399 5 is_stmt 0 view .LVU1220
 3694 1675 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3695 1678 0F87BAFE 		ja	.L256	#,
 3695      FFFF
 3696 167e E935FEFF 		jmp	.L360	#
 3696      FF
 3697              	.LVL170:
 3698              	.L365:
 3699              	.LBB276:
GAS LISTING /tmp/ccdGK7kM.s 			page 109


 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3700              		.loc 1 421 27 is_stmt 1 view .LVU1221
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3701              		.loc 1 422 17 view .LVU1222
 423:sieve_extend.c ****             }
 3702              		.loc 1 423 21 view .LVU1223
 3703              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3704              		.loc 1 423 52 is_stmt 0 view .LVU1224
 3705 1683 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 3706 1687 48C1E005 		sal	rax, 5	# tmp196,
 3707              	.LVL171:
 423:sieve_extend.c ****             }
 3708              		.loc 1 423 52 view .LVU1225
 3709 168b 4C092407 		or	QWORD PTR [rdi+rax], r12	# *_62, quadmask
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3710              		.loc 1 421 51 is_stmt 1 view .LVU1226
 3711              	.LVL172:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3712              		.loc 1 421 27 view .LVU1227
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3713              		.loc 1 422 17 view .LVU1228
 3714              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3715              		.loc 1 422 31 is_stmt 0 view .LVU1229
 3716 168f 488D4101 		lea	rax, 1[rcx]	# _71,
 3717              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3718              		.loc 1 422 20 view .LVU1230
 3719 1693 4939C2   		cmp	r10, rax	# range_stop_word, _71
 3720 1696 7209     		jb	.L253	#,
 423:sieve_extend.c ****             }
 3721              		.loc 1 423 21 is_stmt 1 view .LVU1231
 3722              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3723              		.loc 1 423 52 is_stmt 0 view .LVU1232
 3724 1698 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# quadmask, quadmask
 3724      08
 3725 169d 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_73, quadmask
 3726              	.L253:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3727              		.loc 1 421 51 is_stmt 1 view .LVU1233
 3728              	.LVL173:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3729              		.loc 1 421 27 view .LVU1234
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3730              		.loc 1 422 17 view .LVU1235
 3731              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3732              		.loc 1 422 31 is_stmt 0 view .LVU1236
 3733 16a1 488D4102 		lea	rax, 2[rcx]	# _82,
 3734              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3735              		.loc 1 422 20 view .LVU1237
 3736 16a5 4939C2   		cmp	r10, rax	# range_stop_word, _82
 3737 16a8 7209     		jb	.L254	#,
 423:sieve_extend.c ****             }
GAS LISTING /tmp/ccdGK7kM.s 			page 110


 3738              		.loc 1 423 21 is_stmt 1 view .LVU1238
 3739              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3740              		.loc 1 423 52 is_stmt 0 view .LVU1239
 3741 16aa 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 3741      10
 3742 16af 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_84, quadmask
 3743              	.L254:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3744              		.loc 1 421 51 is_stmt 1 view .LVU1240
 3745              	.LVL174:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3746              		.loc 1 421 27 view .LVU1241
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3747              		.loc 1 422 17 view .LVU1242
 3748              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3749              		.loc 1 422 31 is_stmt 0 view .LVU1243
 3750 16b3 4883C103 		add	rcx, 3	# _93,
 3751              	.LVL175:
 3752              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3753              		.loc 1 422 20 view .LVU1244
 3754 16b7 4939CA   		cmp	r10, rcx	# range_stop_word, _93
 3755 16ba 72B9     		jb	.L252	#,
 423:sieve_extend.c ****             }
 3756              		.loc 1 423 21 is_stmt 1 view .LVU1245
 3757              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3758              		.loc 1 423 52 is_stmt 0 view .LVU1246
 3759 16bc 488B4424 		mov	rax, QWORD PTR 24[rsp]	# quadmask, quadmask
 3759      18
 3760              	.LVL176:
 423:sieve_extend.c ****             }
 3761              		.loc 1 423 52 view .LVU1247
 3762 16c1 480904CF 		or	QWORD PTR [rdi+rcx*8], rax	# *_95, quadmask
 3763 16c5 EBAE     		jmp	.L252	#
 3764              	.LVL177:
 3765              	.L363:
 423:sieve_extend.c ****             }
 3766              		.loc 1 423 52 view .LVU1248
 3767              	.LBE276:
 3768              	.LBE277:
 3769              	# sieve_extend.c:427: }
 427:sieve_extend.c **** 
 3770              		.loc 1 427 1 view .LVU1249
 3771 16c7 E8000000 		call	__stack_chk_fail@PLT	#
 3771      00
 3772              	.LVL178:
 427:sieve_extend.c **** 
 3773              		.loc 1 427 1 view .LVU1250
 3774              		.cfi_endproc
 3775              	.LFE5331:
 3777 16cc 0F1F4000 		.p2align 4
 3779              	extendSieve_aligned:
 3780              	.LVL179:
 3781              	.LFB5333:
GAS LISTING /tmp/ccdGK7kM.s 			page 111


 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3782              		.loc 1 461 140 is_stmt 1 view -0
 3783              		.cfi_startproc
 462:sieve_extend.c **** 
 3784              		.loc 1 462 5 view .LVU1252
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3785              		.loc 1 464 5 view .LVU1253
 3786              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3787              		.loc 1 461 140 is_stmt 0 view .LVU1254
 3788 16d0 55       		push	rbp	#
 3789              		.cfi_def_cfa_offset 16
 3790              		.cfi_offset 6, -16
 3791 16d1 4889E5   		mov	rbp, rsp	#,
 3792              		.cfi_def_cfa_register 6
 3793 16d4 4157     		push	r15	#
 3794 16d6 4156     		push	r14	#
 3795              		.cfi_offset 15, -24
 3796              		.cfi_offset 14, -32
 3797              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3798              		.loc 1 469 35 view .LVU1255
 3799 16d8 4989FE   		mov	r14, rdi	# _5, bitarray
 3800              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3801              		.loc 1 461 140 view .LVU1256
 3802 16db 4155     		push	r13	#
 3803 16dd 4154     		push	r12	#
 3804              		.cfi_offset 13, -40
 3805              		.cfi_offset 12, -48
 3806 16df 4989D4   		mov	r12, rdx	# size, tmp267
 3807              	# sieve_extend.c:465:     const counter_t copy_start = source_start + size;
 465:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 3808              		.loc 1 465 21 view .LVU1257
 3809 16e2 4801F2   		add	rdx, rsi	# copy_start, source_start
 3810              	.LVL180:
 3811              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3812              		.loc 1 461 140 view .LVU1258
 3813 16e5 53       		push	rbx	#
 3814              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3815              		.loc 1 466 15 view .LVU1259
 3816 16e6 48C1EE06 		shr	rsi, 6	# source_start,
 3817              	.LVL181:
 3818              	# sieve_extend.c:467:     counter_t copy_word = wordindex(copy_start);
 467:sieve_extend.c ****     
 3819              		.loc 1 467 15 view .LVU1260
 3820 16ea 4889D0   		mov	rax, rdx	# ivtmp.282, copy_start
 3821              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3822              		.loc 1 461 140 view .LVU1261
 3823 16ed 4883E4E0 		and	rsp, -32	#,
 3824 16f1 4883EC20 		sub	rsp, 32	#,
 3825              		.cfi_offset 3, -56
 3826              	# sieve_extend.c:464:     const counter_t destination_stop_word = wordindex(destination_stop);
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccdGK7kM.s 			page 112


 3827              		.loc 1 464 21 view .LVU1262
 3828 16f5 4889CB   		mov	rbx, rcx	# tmp268, tmp268
 3829              	# sieve_extend.c:467:     counter_t copy_word = wordindex(copy_start);
 467:sieve_extend.c ****     
 3830              		.loc 1 467 15 view .LVU1263
 3831 16f8 48C1E806 		shr	rax, 6	# ivtmp.282,
 3832              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3833              		.loc 1 469 52 view .LVU1264
 3834 16fc 89D1     		mov	ecx, edx	# tmp159, copy_start
 3835              	.LVL182:
 3836              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3837              		.loc 1 466 15 view .LVU1265
 3838 16fe 48893424 		mov	QWORD PTR [rsp], rsi	# %sfp, source_word
 3839              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3840              		.loc 1 469 35 view .LVU1266
 3841 1702 48C1E603 		sal	rsi, 3	# _4,
 3842 1706 4901F6   		add	r14, rsi	# _5, _4
 3843              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3844              		.loc 1 469 52 view .LVU1267
 3845 1709 F7D1     		not	ecx	# tmp159
 3846 170b 48C7C2FF 		mov	rdx, -1	# tmp162,
 3846      FFFFFF
 3847              	# sieve_extend.c:464:     const counter_t destination_stop_word = wordindex(destination_stop);
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3848              		.loc 1 464 21 view .LVU1268
 3849 1712 48C1EB06 		shr	rbx, 6	# tmp268,
 3850              	.LVL183:
 465:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 3851              		.loc 1 465 5 is_stmt 1 view .LVU1269
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3852              		.loc 1 466 5 view .LVU1270
 467:sieve_extend.c ****     
 3853              		.loc 1 467 5 view .LVU1271
 469:sieve_extend.c **** 
 3854              		.loc 1 469 5 view .LVU1272
 3855              	# sieve_extend.c:471:     while (copy_word + size <= destination_stop_word) {
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3856              		.loc 1 471 22 is_stmt 0 view .LVU1273
 3857 1716 4D8D0C04 		lea	r9, [r12+rax]	# ivtmp.282,
 3858              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3859              		.loc 1 469 35 view .LVU1274
 3860 171a 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, _4
 3860      08
 3861              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3862              		.loc 1 461 140 view .LVU1275
 3863 171f 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, bitarray
 3863      10
 3864              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3865              		.loc 1 469 52 view .LVU1276
 3866 1724 C4E2F3F7 		shrx	rsi, rdx, rcx	# tmp161, tmp162, tmp159
GAS LISTING /tmp/ccdGK7kM.s 			page 113


 3866      F2
 3867              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3868              		.loc 1 469 49 view .LVU1277
 3869 1729 C442C8F2 		andn	r8, rsi, QWORD PTR [r14]	# tmp165, tmp161, *_5
 3869      06
 3870              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 3871              		.loc 1 469 25 view .LVU1278
 3872 172e 4C8904C7 		mov	QWORD PTR [rdi+rax*8], r8	# *_13, tmp165
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3873              		.loc 1 471 5 is_stmt 1 view .LVU1279
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3874              		.loc 1 471 11 view .LVU1280
 3875 1732 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.282
 3876 1735 0F824D01 		jb	.L367	#,
 3876      0000
 3877 173b 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _12,
 3877      00000000 
 3878 1743 4901FD   		add	r13, rdi	# tmp166, bitarray
 3879 1746 4A8D04CD 		lea	rax, 0[0+r9*8]	# tmp167,
 3879      00000000 
 3880              	# sieve_extend.c:472:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 472:sieve_extend.c ****         copy_word += size;
 3881              		.loc 1 472 9 is_stmt 0 view .LVU1281
 3882 174e 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 3882      00000000 
 3883 1756 4929C5   		sub	r13, rax	# _135, tmp167
 3884              	.LVL184:
 3885              	.L368:
 472:sieve_extend.c ****         copy_word += size;
 3886              		.loc 1 472 9 is_stmt 1 view .LVU1282
 3887              	.LBB278:
 3888              	.LBI278:
 3889              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
GAS LISTING /tmp/ccdGK7kM.s 			page 114


  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 3890              		.loc 2 31 1 view .LVU1283
 3891              	.LBB279:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 3892              		.loc 2 34 3 view .LVU1284
 3893              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3894              		.loc 2 34 10 is_stmt 0 view .LVU1285
 3895 1759 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp169,
 3895      00
 3896 175e 4C89FA   		mov	rdx, r15	#, _15
 3897 1761 4C89F6   		mov	rsi, r14	#, _5
 3898 1764 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.282
 3898      18
 3899 1769 E8000000 		call	memcpy@PLT	#
 3899      00
 3900              	.LVL185:
 3901              		.loc 2 34 10 view .LVU1286
 3902              	.LBE279:
 3903              	.LBE278:
 473:sieve_extend.c ****     }
 3904              		.loc 1 473 9 is_stmt 1 view .LVU1287
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3905              		.loc 1 471 11 view .LVU1288
 3906 176e 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 3906      18
 3907 1773 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.282,
 3908 1777 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.282
 3909 177a 0F820801 		jb	.L367	#,
 3909      0000
 472:sieve_extend.c ****         copy_word += size;
 3910              		.loc 1 472 9 view .LVU1289
 3911              	.LVL186:
 3912              	.LBB287:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3913              		.loc 2 31 1 view .LVU1290
 3914              	.LBB280:
 3915              		.loc 2 34 3 view .LVU1291
 3916              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3917              		.loc 2 34 10 is_stmt 0 view .LVU1292
 3918 1780 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp246,
 3918      00
 3919 1785 4C89FA   		mov	rdx, r15	#, _15
 3920 1788 4C89F6   		mov	rsi, r14	#, _5
 3921 178b 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.282
 3921      18
 3922              	.LVL187:
 3923              		.loc 2 34 10 view .LVU1293
GAS LISTING /tmp/ccdGK7kM.s 			page 115


 3924 1790 E8000000 		call	memcpy@PLT	#
 3924      00
 3925              	.LVL188:
 3926              		.loc 2 34 10 view .LVU1294
 3927              	.LBE280:
 3928              	.LBE287:
 473:sieve_extend.c ****     }
 3929              		.loc 1 473 9 is_stmt 1 view .LVU1295
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3930              		.loc 1 471 11 view .LVU1296
 3931 1795 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 3931      18
 3932 179a 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.282,
 3933 179e 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.282
 3934 17a1 0F82E100 		jb	.L367	#,
 3934      0000
 472:sieve_extend.c ****         copy_word += size;
 3935              		.loc 1 472 9 view .LVU1297
 3936              	.LVL189:
 3937              	.LBB288:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3938              		.loc 2 31 1 view .LVU1298
 3939              	.LBB281:
 3940              		.loc 2 34 3 view .LVU1299
 3941              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3942              		.loc 2 34 10 is_stmt 0 view .LVU1300
 3943 17a7 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp249,
 3943      00
 3944 17ac 4C89FA   		mov	rdx, r15	#, _15
 3945 17af 4C89F6   		mov	rsi, r14	#, _5
 3946 17b2 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, ivtmp.282
 3946      18
 3947 17b7 E8000000 		call	memcpy@PLT	#
 3947      00
 3948              	.LVL190:
 3949              		.loc 2 34 10 view .LVU1301
 3950              	.LBE281:
 3951              	.LBE288:
 473:sieve_extend.c ****     }
 3952              		.loc 1 473 9 is_stmt 1 view .LVU1302
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3953              		.loc 1 471 11 view .LVU1303
 3954 17bc 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 3954      18
 3955 17c1 4E8D1C20 		lea	r11, [rax+r12]	# ivtmp.282,
 3956 17c5 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.282
 3957 17c8 0F82BA00 		jb	.L367	#,
 3957      0000
 472:sieve_extend.c ****         copy_word += size;
 3958              		.loc 1 472 9 view .LVU1304
 3959              	.LVL191:
 3960              	.LBB289:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3961              		.loc 2 31 1 view .LVU1305
 3962              	.LBB282:
 3963              		.loc 2 34 3 view .LVU1306
 3964              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccdGK7kM.s 			page 116


 3965              		.loc 2 34 10 is_stmt 0 view .LVU1307
 3966 17ce 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp252,
 3966      00
 3967 17d3 4C89FA   		mov	rdx, r15	#, _15
 3968 17d6 4C89F6   		mov	rsi, r14	#, _5
 3969 17d9 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, ivtmp.282
 3969      18
 3970 17de E8000000 		call	memcpy@PLT	#
 3970      00
 3971              	.LVL192:
 3972              		.loc 2 34 10 view .LVU1308
 3973              	.LBE282:
 3974              	.LBE289:
 473:sieve_extend.c ****     }
 3975              		.loc 1 473 9 is_stmt 1 view .LVU1309
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3976              		.loc 1 471 11 view .LVU1310
 3977 17e3 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 3977      18
 3978 17e8 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.282,
 3979 17ec 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.282
 3980 17ef 0F829300 		jb	.L367	#,
 3980      0000
 472:sieve_extend.c ****         copy_word += size;
 3981              		.loc 1 472 9 view .LVU1311
 3982              	.LVL193:
 3983              	.LBB290:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3984              		.loc 2 31 1 view .LVU1312
 3985              	.LBB283:
 3986              		.loc 2 34 3 view .LVU1313
 3987              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3988              		.loc 2 34 10 is_stmt 0 view .LVU1314
 3989 17f5 4C89FA   		mov	rdx, r15	#, _15
 3990 17f8 498D7CCD 		lea	rdi, 0[r13+rcx*8]	# tmp255,
 3990      00
 3991 17fd 4C89F6   		mov	rsi, r14	#, _5
 3992 1800 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, ivtmp.282
 3992      18
 3993 1805 E8000000 		call	memcpy@PLT	#
 3993      00
 3994              	.LVL194:
 3995              		.loc 2 34 10 view .LVU1315
 3996              	.LBE283:
 3997              	.LBE290:
 473:sieve_extend.c ****     }
 3998              		.loc 1 473 9 is_stmt 1 view .LVU1316
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3999              		.loc 1 471 11 view .LVU1317
 4000 180a 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 4000      18
 4001 180f 4A8D1420 		lea	rdx, [rax+r12]	# ivtmp.282,
 4002 1813 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.282
 4003 1816 7270     		jb	.L367	#,
 472:sieve_extend.c ****         copy_word += size;
 4004              		.loc 1 472 9 view .LVU1318
 4005              	.LVL195:
GAS LISTING /tmp/ccdGK7kM.s 			page 117


 4006              	.LBB291:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4007              		.loc 2 31 1 view .LVU1319
 4008              	.LBB284:
 4009              		.loc 2 34 3 view .LVU1320
 4010              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4011              		.loc 2 34 10 is_stmt 0 view .LVU1321
 4012 1818 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, ivtmp.282
 4012      18
 4013 181d 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp258,
 4013      00
 4014 1822 4C89F6   		mov	rsi, r14	#, _5
 4015 1825 4C89FA   		mov	rdx, r15	#, _15
 4016 1828 E8000000 		call	memcpy@PLT	#
 4016      00
 4017              	.LVL196:
 4018              		.loc 2 34 10 view .LVU1322
 4019              	.LBE284:
 4020              	.LBE291:
 473:sieve_extend.c ****     }
 4021              		.loc 1 473 9 is_stmt 1 view .LVU1323
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4022              		.loc 1 471 11 view .LVU1324
 4023 182d 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 4023      18
 4024 1832 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.282,
 4025 1836 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.282
 4026 1839 724D     		jb	.L367	#,
 472:sieve_extend.c ****         copy_word += size;
 4027              		.loc 1 472 9 view .LVU1325
 4028              	.LVL197:
 4029              	.LBB292:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4030              		.loc 2 31 1 view .LVU1326
 4031              	.LBB285:
 4032              		.loc 2 34 3 view .LVU1327
 4033              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4034              		.loc 2 34 10 is_stmt 0 view .LVU1328
 4035 183b 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.282
 4035      18
 4036 1840 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp261,
 4036      00
 4037 1845 4C89FA   		mov	rdx, r15	#, _15
 4038 1848 4C89F6   		mov	rsi, r14	#, _5
 4039 184b E8000000 		call	memcpy@PLT	#
 4039      00
 4040              	.LVL198:
 4041              		.loc 2 34 10 view .LVU1329
 4042              	.LBE285:
 4043              	.LBE292:
 473:sieve_extend.c ****     }
 4044              		.loc 1 473 9 is_stmt 1 view .LVU1330
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4045              		.loc 1 471 11 view .LVU1331
 4046 1850 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 4046      18
 4047 1855 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.282,
GAS LISTING /tmp/ccdGK7kM.s 			page 118


 4048 1859 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.282
 4049 185c 722A     		jb	.L367	#,
 472:sieve_extend.c ****         copy_word += size;
 4050              		.loc 1 472 9 view .LVU1332
 4051              	.LVL199:
 4052              	.LBB293:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4053              		.loc 2 31 1 view .LVU1333
 4054              	.LBB286:
 4055              		.loc 2 34 3 view .LVU1334
 4056              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4057              		.loc 2 34 10 is_stmt 0 view .LVU1335
 4058 185e 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp264,
 4058      00
 4059 1863 4C89FA   		mov	rdx, r15	#, _15
 4060 1866 4C89F6   		mov	rsi, r14	#, _5
 4061 1869 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, ivtmp.282
 4061      18
 4062 186e E8000000 		call	memcpy@PLT	#
 4062      00
 4063              	.LVL200:
 4064              		.loc 2 34 10 view .LVU1336
 4065              	.LBE286:
 4066              	.LBE293:
 473:sieve_extend.c ****     }
 4067              		.loc 1 473 9 is_stmt 1 view .LVU1337
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4068              		.loc 1 471 11 view .LVU1338
 4069 1873 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.282, %sfp
 4069      18
 4070              	.LVL201:
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4071              		.loc 1 471 11 is_stmt 0 view .LVU1339
 4072 1878 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.282,
 4073              	.LVL202:
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4074              		.loc 1 471 11 view .LVU1340
 4075 187c 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.282
 4076 187f 0F83D4FE 		jnb	.L368	#,
 4076      FFFF
 4077              	.LVL203:
 4078              		.p2align 4,,10
 4079 1885 0F1F00   		.p2align 3
 4080              	.L367:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4081              		.loc 1 476 10 is_stmt 1 view .LVU1341
 4082 1888 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.282
 4083 188b 0F86F701 		jbe	.L472	#,
 4083      0000
 4084 1891 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# _4, %sfp
 4084      08
 4085 1896 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 4085      00000000 
 4086              	.LVL204:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4087              		.loc 1 476 10 is_stmt 0 view .LVU1342
 4088 189e 498D7C24 		lea	rdi, 32[r12]	# tmp175,
GAS LISTING /tmp/ccdGK7kM.s 			page 119


 4088      20
 4089 18a3 4939FD   		cmp	r13, rdi	# _4, tmp175
 4090 18a6 4D8D5520 		lea	r10, 32[r13]	# tmp178,
 4091 18aa 410F9DC7 		setge	r15b	#, tmp177
 4092 18ae 4D39D4   		cmp	r12, r10	# _41, tmp178
 4093 18b1 410F9DC3 		setge	r11b	#, tmp180
 4094 18b5 4508DF   		or	r15b, r11b	# tmp177, tmp180
 4095 18b8 0F84FA01 		je	.L370	#,
 4095      0000
 4096 18be 488D4BFF 		lea	rcx, -1[rbx]	# tmp182,
 4097 18c2 4829C1   		sub	rcx, rax	# tmp183, ivtmp.282
 4098 18c5 4883F908 		cmp	rcx, 8	# tmp183,
 4099 18c9 0F86E901 		jbe	.L370	#,
 4099      0000
 4100 18cf 4989D9   		mov	r9, rbx	# niters.251, destination_stop_word
 4101 18d2 4929C1   		sub	r9, rax	# niters.251, ivtmp.282
 4102 18d5 4C89CE   		mov	rsi, r9	# bnd.252, niters.251
 4103 18d8 48C1EE02 		shr	rsi, 2	# bnd.252,
 4104 18dc 48C1E605 		sal	rsi, 5	# _128,
 4105 18e0 4C8D46E0 		lea	r8, -32[rsi]	# tmp198,
 4106 18e4 49C1E805 		shr	r8, 5	# tmp196,
 4107 18e8 49FFC0   		inc	r8	# tmp199
 4108 18eb 4C036424 		add	r12, QWORD PTR 16[rsp]	# vectp.260, %sfp
 4108      10
 4109 18f0 31D2     		xor	edx, edx	# ivtmp.273
 4110 18f2 4183E007 		and	r8d, 7	# tmp200,
 4111 18f6 0F849D00 		je	.L371	#,
 4111      0000
 4112 18fc 4983F801 		cmp	r8, 1	# tmp200,
 4113 1900 747E     		je	.L432	#,
 4114 1902 4983F802 		cmp	r8, 2	# tmp200,
 4115 1906 7468     		je	.L433	#,
 4116 1908 4983F803 		cmp	r8, 3	# tmp200,
 4117 190c 7452     		je	.L434	#,
 4118 190e 4983F804 		cmp	r8, 4	# tmp200,
 4119 1912 743C     		je	.L435	#,
 4120 1914 4983F805 		cmp	r8, 5	# tmp200,
 4121 1918 7426     		je	.L436	#,
 4122 191a 4983F806 		cmp	r8, 6	# tmp200,
 4123 191e 7410     		je	.L437	#,
 4124              	.LVL205:
 477:sieve_extend.c ****         source_word++;
 4125              		.loc 1 477 9 is_stmt 1 view .LVU1343
 4126              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4127              		.loc 1 477 29 is_stmt 0 view .LVU1344
 4128 1920 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14]	# tmp306, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4128      0E
 4129 1925 BA200000 		mov	edx, 32	# ivtmp.273,
 4129      00
 4130 192a C4C17E7F 		vmovdqu	YMMWORD PTR [r12], ymm1	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], tmp30
 4130      0C24
 478:sieve_extend.c ****         copy_word++;
 4131              		.loc 1 478 9 is_stmt 1 view .LVU1345
 479:sieve_extend.c ****     }
 4132              		.loc 1 479 9 view .LVU1346
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 120


 4133              		.loc 1 476 10 view .LVU1347
 4134              	.L437:
 477:sieve_extend.c ****         source_word++;
 4135              		.loc 1 477 9 view .LVU1348
 4136              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4137              		.loc 1 477 29 is_stmt 0 view .LVU1349
 4138 1930 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r14+rdx]	# tmp307, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4138      3C16
 4139 1936 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4139      3C14
 478:sieve_extend.c ****         copy_word++;
 4140              		.loc 1 478 9 is_stmt 1 view .LVU1350
 479:sieve_extend.c ****     }
 4141              		.loc 1 479 9 view .LVU1351
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4142              		.loc 1 476 10 view .LVU1352
 4143 193c 4883C220 		add	rdx, 32	# ivtmp.273,
 4144              	.L436:
 477:sieve_extend.c ****         source_word++;
 4145              		.loc 1 477 9 view .LVU1353
 4146              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4147              		.loc 1 477 29 is_stmt 0 view .LVU1354
 4148 1940 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r14+rdx]	# tmp308, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4148      3416
 4149 1946 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4149      3414
 478:sieve_extend.c ****         copy_word++;
 4150              		.loc 1 478 9 is_stmt 1 view .LVU1355
 479:sieve_extend.c ****     }
 4151              		.loc 1 479 9 view .LVU1356
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4152              		.loc 1 476 10 view .LVU1357
 4153 194c 4883C220 		add	rdx, 32	# ivtmp.273,
 4154              	.L435:
 477:sieve_extend.c ****         source_word++;
 4155              		.loc 1 477 9 view .LVU1358
 4156              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4157              		.loc 1 477 29 is_stmt 0 view .LVU1359
 4158 1950 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r14+rdx]	# tmp309, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4158      2C16
 4159 1956 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm5	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4159      2C14
 478:sieve_extend.c ****         copy_word++;
 4160              		.loc 1 478 9 is_stmt 1 view .LVU1360
 479:sieve_extend.c ****     }
 4161              		.loc 1 479 9 view .LVU1361
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4162              		.loc 1 476 10 view .LVU1362
 4163 195c 4883C220 		add	rdx, 32	# ivtmp.273,
 4164              	.L434:
 477:sieve_extend.c ****         source_word++;
 4165              		.loc 1 477 9 view .LVU1363
 4166              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccdGK7kM.s 			page 121


 4167              		.loc 1 477 29 is_stmt 0 view .LVU1364
 4168 1960 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rdx]	# tmp310, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4168      2416
 4169 1966 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm4	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4169      2414
 478:sieve_extend.c ****         copy_word++;
 4170              		.loc 1 478 9 is_stmt 1 view .LVU1365
 479:sieve_extend.c ****     }
 4171              		.loc 1 479 9 view .LVU1366
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4172              		.loc 1 476 10 view .LVU1367
 4173 196c 4883C220 		add	rdx, 32	# ivtmp.273,
 4174              	.L433:
 477:sieve_extend.c ****         source_word++;
 4175              		.loc 1 477 9 view .LVU1368
 4176              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4177              		.loc 1 477 29 is_stmt 0 view .LVU1369
 4178 1970 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rdx]	# tmp311, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4178      0416
 4179 1976 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm0	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4179      0414
 478:sieve_extend.c ****         copy_word++;
 4180              		.loc 1 478 9 is_stmt 1 view .LVU1370
 479:sieve_extend.c ****     }
 4181              		.loc 1 479 9 view .LVU1371
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4182              		.loc 1 476 10 view .LVU1372
 4183 197c 4883C220 		add	rdx, 32	# ivtmp.273,
 4184              	.L432:
 477:sieve_extend.c ****         source_word++;
 4185              		.loc 1 477 9 view .LVU1373
 4186              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4187              		.loc 1 477 29 is_stmt 0 view .LVU1374
 4188 1980 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r14+rdx]	# tmp312, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4188      1416
 4189 1986 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4189      1414
 478:sieve_extend.c ****         copy_word++;
 4190              		.loc 1 478 9 is_stmt 1 view .LVU1375
 479:sieve_extend.c ****     }
 4191              		.loc 1 479 9 view .LVU1376
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4192              		.loc 1 476 10 view .LVU1377
 4193 198c 4883C220 		add	rdx, 32	# ivtmp.273,
 4194 1990 4839F2   		cmp	rdx, rsi	# ivtmp.273, _128
 4195 1993 0F849600 		je	.L468	#,
 4195      0000
 4196              	.L371:
 477:sieve_extend.c ****         source_word++;
 4197              		.loc 1 477 9 view .LVU1378
 4198              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4199              		.loc 1 477 29 is_stmt 0 view .LVU1379
 4200 1999 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r14+rdx]	# tmp286, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4200      1C16
GAS LISTING /tmp/ccdGK7kM.s 			page 122


 4201 199f C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm3	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B], t
 4201      1C14
 478:sieve_extend.c ****         copy_word++;
 4202              		.loc 1 478 9 is_stmt 1 view .LVU1380
 479:sieve_extend.c ****     }
 4203              		.loc 1 479 9 view .LVU1381
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4204              		.loc 1 476 10 view .LVU1382
 477:sieve_extend.c ****         source_word++;
 4205              		.loc 1 477 9 view .LVU1383
 4206              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4207              		.loc 1 477 29 is_stmt 0 view .LVU1384
 4208 19a5 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r14+rdx]	# tmp287, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4208      441620
 4209 19ac C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm8	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B],
 4209      441420
 478:sieve_extend.c ****         copy_word++;
 4210              		.loc 1 478 9 is_stmt 1 view .LVU1385
 479:sieve_extend.c ****     }
 4211              		.loc 1 479 9 view .LVU1386
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4212              		.loc 1 476 10 view .LVU1387
 477:sieve_extend.c ****         source_word++;
 4213              		.loc 1 477 9 view .LVU1388
 4214              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4215              		.loc 1 477 29 is_stmt 0 view .LVU1389
 4216 19b3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rdx]	# tmp288, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4216      4C1640
 4217 19ba C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm9	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B],
 4217      4C1440
 478:sieve_extend.c ****         copy_word++;
 4218              		.loc 1 478 9 is_stmt 1 view .LVU1390
 479:sieve_extend.c ****     }
 4219              		.loc 1 479 9 view .LVU1391
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4220              		.loc 1 476 10 view .LVU1392
 477:sieve_extend.c ****         source_word++;
 4221              		.loc 1 477 9 view .LVU1393
 4222              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4223              		.loc 1 477 29 is_stmt 0 view .LVU1394
 4224 19c1 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 96[r14+rdx]	# tmp289, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4224      541660
 4225 19c8 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm10	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B]
 4225      541460
 478:sieve_extend.c ****         copy_word++;
 4226              		.loc 1 478 9 is_stmt 1 view .LVU1395
 479:sieve_extend.c ****     }
 4227              		.loc 1 479 9 view .LVU1396
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4228              		.loc 1 476 10 view .LVU1397
 477:sieve_extend.c ****         source_word++;
 4229              		.loc 1 477 9 view .LVU1398
 4230              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccdGK7kM.s 			page 123


 4231              		.loc 1 477 29 is_stmt 0 view .LVU1399
 4232 19cf C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 128[r14+rdx]	# tmp290, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4232      9C168000 
 4232      0000
 4233 19d9 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B
 4233      9C148000 
 4233      0000
 478:sieve_extend.c ****         copy_word++;
 4234              		.loc 1 478 9 is_stmt 1 view .LVU1400
 479:sieve_extend.c ****     }
 4235              		.loc 1 479 9 view .LVU1401
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4236              		.loc 1 476 10 view .LVU1402
 477:sieve_extend.c ****         source_word++;
 4237              		.loc 1 477 9 view .LVU1403
 4238              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4239              		.loc 1 477 29 is_stmt 0 view .LVU1404
 4240 19e3 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r14+rdx]	# tmp291, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4240      A416A000 
 4240      0000
 4241 19ed C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm12	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B
 4241      A414A000 
 4241      0000
 478:sieve_extend.c ****         copy_word++;
 4242              		.loc 1 478 9 is_stmt 1 view .LVU1405
 479:sieve_extend.c ****     }
 4243              		.loc 1 479 9 view .LVU1406
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4244              		.loc 1 476 10 view .LVU1407
 477:sieve_extend.c ****         source_word++;
 4245              		.loc 1 477 9 view .LVU1408
 4246              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4247              		.loc 1 477 29 is_stmt 0 view .LVU1409
 4248 19f7 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r14+rdx]	# tmp292, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4248      AC16C000 
 4248      0000
 4249 1a01 C4417E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm13	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B
 4249      AC14C000 
 4249      0000
 478:sieve_extend.c ****         copy_word++;
 4250              		.loc 1 478 9 is_stmt 1 view .LVU1410
 479:sieve_extend.c ****     }
 4251              		.loc 1 479 9 view .LVU1411
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4252              		.loc 1 476 10 view .LVU1412
 477:sieve_extend.c ****         source_word++;
 4253              		.loc 1 477 9 view .LVU1413
 4254              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4255              		.loc 1 477 29 is_stmt 0 view .LVU1414
 4256 1a0b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 224[r14+rdx]	# tmp293, MEM[base: _5, index: ivtmp.273_126, offset: 0B]
 4256      B416E000 
 4256      0000
 4257 1a15 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm14	# MEM[base: vectp.260_98, index: ivtmp.273_126, offset: 0B
 4257      B414E000 
GAS LISTING /tmp/ccdGK7kM.s 			page 124


 4257      0000
 478:sieve_extend.c ****         copy_word++;
 4258              		.loc 1 478 9 is_stmt 1 view .LVU1415
 479:sieve_extend.c ****     }
 4259              		.loc 1 479 9 view .LVU1416
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4260              		.loc 1 476 10 view .LVU1417
 4261 1a1f 4881C200 		add	rdx, 256	# ivtmp.273,
 4261      010000
 4262 1a26 4839F2   		cmp	rdx, rsi	# ivtmp.273, _128
 4263 1a29 0F856AFF 		jne	.L371	#,
 4263      FFFF
 4264              	.L468:
 4265 1a2f 4C8B2424 		mov	r12, QWORD PTR [rsp]	# source_word, %sfp
 4266 1a33 4D89CE   		mov	r14, r9	# niters_vector_mult_vf.253, niters.251
 4267 1a36 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.253,
 4268 1a3a 4D01F4   		add	r12, r14	# source_word, niters_vector_mult_vf.253
 4269 1a3d 4C01F0   		add	rax, r14	# tmp.255, niters_vector_mult_vf.253
 4270 1a40 4D39F1   		cmp	r9, r14	# niters.251, niters_vector_mult_vf.253
 4271 1a43 745B     		je	.L471	#,
 4272              	.LVL206:
 477:sieve_extend.c ****         source_word++;
 4273              		.loc 1 477 9 view .LVU1418
 4274              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4275              		.loc 1 477 39 is_stmt 0 view .LVU1419
 4276 1a45 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# bitarray, %sfp
 4276      10
 4277              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4278              		.loc 1 479 18 view .LVU1420
 4279 1a4a 4C8D7801 		lea	r15, 1[rax]	# copy_word,
 4280              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4281              		.loc 1 477 39 view .LVU1421
 4282 1a4e 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# _37, *_21
 4282      00
 4283              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4284              		.loc 1 478 20 view .LVU1422
 4285 1a53 49FFC4   		inc	r12	# source_word
 4286              	.LVL207:
 4287              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4288              		.loc 1 477 29 view .LVU1423
 4289 1a56 49897CC5 		mov	QWORD PTR 0[r13+rax*8], rdi	# *_23, _37
 4289      00
 478:sieve_extend.c ****         copy_word++;
 4290              		.loc 1 478 9 is_stmt 1 view .LVU1424
 4291              	.LVL208:
 479:sieve_extend.c ****     }
 4292              		.loc 1 479 9 view .LVU1425
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4293              		.loc 1 476 10 view .LVU1426
 4294 1a5b 4C39FB   		cmp	rbx, r15	# destination_stop_word, copy_word
 4295 1a5e 7640     		jbe	.L471	#,
 477:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccdGK7kM.s 			page 125


 4296              		.loc 1 477 9 view .LVU1427
 4297              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4298              		.loc 1 477 39 is_stmt 0 view .LVU1428
 4299 1a60 4F8B5CE5 		mov	r11, QWORD PTR 0[r13+r12*8]	# _111, *_108
 4299      00
 4300              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4301              		.loc 1 479 18 view .LVU1429
 4302 1a65 4883C002 		add	rax, 2	# copy_word,
 4303              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4304              		.loc 1 477 29 view .LVU1430
 4305 1a69 4F895CFD 		mov	QWORD PTR 0[r13+r15*8], r11	# *_110, _111
 4305      00
 478:sieve_extend.c ****         copy_word++;
 4306              		.loc 1 478 9 is_stmt 1 view .LVU1431
 479:sieve_extend.c ****     }
 4307              		.loc 1 479 9 view .LVU1432
 4308              	.LVL209:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4309              		.loc 1 476 10 view .LVU1433
 4310              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4311              		.loc 1 477 39 is_stmt 0 view .LVU1434
 4312 1a6e 4E8D14E5 		lea	r10, 0[0+r12*8]	# _107,
 4312      00000000 
 4313              	# sieve_extend.c:476:    while (copy_word < destination_stop_word) {
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4314              		.loc 1 476 10 view .LVU1435
 4315 1a76 4839C3   		cmp	rbx, rax	# destination_stop_word, copy_word
 4316 1a79 7625     		jbe	.L471	#,
 477:sieve_extend.c ****         source_word++;
 4317              		.loc 1 477 9 is_stmt 1 view .LVU1436
 4318              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4319              		.loc 1 477 39 is_stmt 0 view .LVU1437
 4320 1a7b 4F8B4C15 		mov	r9, QWORD PTR 8[r13+r10]	# _83, *_80
 4320      08
 4321              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4322              		.loc 1 477 29 view .LVU1438
 4323 1a80 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_82, _83
 4323      00
 478:sieve_extend.c ****         copy_word++;
 4324              		.loc 1 478 9 is_stmt 1 view .LVU1439
 479:sieve_extend.c ****     }
 4325              		.loc 1 479 9 view .LVU1440
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4326              		.loc 1 476 10 view .LVU1441
 4327 1a85 C5F877   		vzeroupper
 4328              	.LVL210:
 4329              	.L472:
 4330              	# sieve_extend.c:482: }
 482:sieve_extend.c **** 
 4331              		.loc 1 482 1 is_stmt 0 view .LVU1442
 4332 1a88 488D65D8 		lea	rsp, -40[rbp]	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 126


 4333              	.LVL211:
 482:sieve_extend.c **** 
 4334              		.loc 1 482 1 view .LVU1443
 4335 1a8c 5B       		pop	rbx	#
 4336 1a8d 415C     		pop	r12	#
 4337 1a8f 415D     		pop	r13	#
 4338 1a91 415E     		pop	r14	#
 4339 1a93 415F     		pop	r15	#
 4340 1a95 5D       		pop	rbp	#
 4341              		.cfi_remember_state
 4342              		.cfi_def_cfa 7, 8
 4343              	.LVL212:
 482:sieve_extend.c **** 
 4344              		.loc 1 482 1 view .LVU1444
 4345 1a96 C3       		ret	
 4346              	.LVL213:
 4347 1a97 660F1F84 		.p2align 4,,10
 4347      00000000 
 4347      00
 4348              		.p2align 3
 4349              	.L471:
 4350              		.cfi_restore_state
 482:sieve_extend.c **** 
 4351              		.loc 1 482 1 view .LVU1445
 4352 1aa0 C5F877   		vzeroupper
 4353 1aa3 488D65D8 		lea	rsp, -40[rbp]	#,
 4354              	.LVL214:
 482:sieve_extend.c **** 
 4355              		.loc 1 482 1 view .LVU1446
 4356 1aa7 5B       		pop	rbx	#
 4357              	.LVL215:
 482:sieve_extend.c **** 
 4358              		.loc 1 482 1 view .LVU1447
 4359 1aa8 415C     		pop	r12	#
 4360 1aaa 415D     		pop	r13	#
 4361 1aac 415E     		pop	r14	#
 4362 1aae 415F     		pop	r15	#
 4363 1ab0 5D       		pop	rbp	#
 4364              		.cfi_remember_state
 4365              		.cfi_def_cfa 7, 8
 4366              	.LVL216:
 482:sieve_extend.c **** 
 4367              		.loc 1 482 1 view .LVU1448
 4368 1ab1 C3       		ret	
 4369              	.LVL217:
 4370              		.p2align 4,,10
 4371 1ab2 660F1F44 		.p2align 3
 4371      0000
 4372              	.L370:
 4373              		.cfi_restore_state
 482:sieve_extend.c **** 
 4374              		.loc 1 482 1 view .LVU1449
 4375 1ab8 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# bitarray, %sfp
 4375      10
 4376              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4377              		.loc 1 477 39 view .LVU1450
GAS LISTING /tmp/ccdGK7kM.s 			page 127


 4378 1abd 488B1424 		mov	rdx, QWORD PTR [rsp]	# source_word, %sfp
 4379 1ac1 4C8D04DE 		lea	r8, [rsi+rbx*8]	# _125,
 4380 1ac5 4901F4   		add	r12, rsi	# ivtmp.268, bitarray
 4381 1ac8 4829C2   		sub	rdx, rax	# source_word, ivtmp.282
 4382 1acb 4C89C0   		mov	rax, r8	# tmp191, _125
 4383 1ace 4C29E0   		sub	rax, r12	# tmp191, ivtmp.268
 4384 1ad1 4883E808 		sub	rax, 8	# tmp192,
 4385 1ad5 48C1E803 		shr	rax, 3	# tmp190,
 4386 1ad9 48FFC0   		inc	rax	# tmp193
 4387 1adc 83E007   		and	eax, 7	# tmp194,
 4388 1adf 0F848800 		je	.L373	#,
 4388      0000
 4389 1ae5 4883F801 		cmp	rax, 1	# tmp194,
 4390 1ae9 746C     		je	.L438	#,
 4391 1aeb 4883F802 		cmp	rax, 2	# tmp194,
 4392 1aef 7459     		je	.L439	#,
 4393 1af1 4883F803 		cmp	rax, 3	# tmp194,
 4394 1af5 7446     		je	.L440	#,
 4395 1af7 4883F804 		cmp	rax, 4	# tmp194,
 4396 1afb 7433     		je	.L441	#,
 4397 1afd 4883F805 		cmp	rax, 5	# tmp194,
 4398 1b01 7420     		je	.L442	#,
 4399 1b03 4883F806 		cmp	rax, 6	# tmp194,
 4400 1b07 740D     		je	.L443	#,
 4401              	.LVL218:
 477:sieve_extend.c ****         source_word++;
 4402              		.loc 1 477 9 is_stmt 1 view .LVU1451
 4403              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4404              		.loc 1 477 39 is_stmt 0 view .LVU1452
 4405 1b09 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4406 1b0d 4983C408 		add	r12, 8	# ivtmp.268,
 4407              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4408              		.loc 1 477 29 view .LVU1453
 4409 1b11 4D897424 		mov	QWORD PTR -8[r12], r14	# MEM[base: _120, offset: 0B], _70
 4409      F8
 478:sieve_extend.c ****         copy_word++;
 4410              		.loc 1 478 9 is_stmt 1 view .LVU1454
 479:sieve_extend.c ****     }
 4411              		.loc 1 479 9 view .LVU1455
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4412              		.loc 1 476 10 view .LVU1456
 4413              	.L443:
 477:sieve_extend.c ****         source_word++;
 4414              		.loc 1 477 9 view .LVU1457
 4415              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4416              		.loc 1 477 39 is_stmt 0 view .LVU1458
 4417 1b16 4D8B2CD4 		mov	r13, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4418 1b1a 4983C408 		add	r12, 8	# ivtmp.268,
 4419              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4420              		.loc 1 477 29 view .LVU1459
 4421 1b1e 4D896C24 		mov	QWORD PTR -8[r12], r13	# MEM[base: _120, offset: 0B], _70
 4421      F8
 478:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccdGK7kM.s 			page 128


 4422              		.loc 1 478 9 is_stmt 1 view .LVU1460
 479:sieve_extend.c ****     }
 4423              		.loc 1 479 9 view .LVU1461
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4424              		.loc 1 476 10 view .LVU1462
 4425              	.L442:
 477:sieve_extend.c ****         source_word++;
 4426              		.loc 1 477 9 view .LVU1463
 4427              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4428              		.loc 1 477 39 is_stmt 0 view .LVU1464
 4429 1b23 498B3CD4 		mov	rdi, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4430 1b27 4983C408 		add	r12, 8	# ivtmp.268,
 4431              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4432              		.loc 1 477 29 view .LVU1465
 4433 1b2b 49897C24 		mov	QWORD PTR -8[r12], rdi	# MEM[base: _120, offset: 0B], _70
 4433      F8
 478:sieve_extend.c ****         copy_word++;
 4434              		.loc 1 478 9 is_stmt 1 view .LVU1466
 479:sieve_extend.c ****     }
 4435              		.loc 1 479 9 view .LVU1467
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4436              		.loc 1 476 10 view .LVU1468
 4437              	.L441:
 477:sieve_extend.c ****         source_word++;
 4438              		.loc 1 477 9 view .LVU1469
 4439              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4440              		.loc 1 477 39 is_stmt 0 view .LVU1470
 4441 1b30 4D8B3CD4 		mov	r15, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4442 1b34 4983C408 		add	r12, 8	# ivtmp.268,
 4443              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4444              		.loc 1 477 29 view .LVU1471
 4445 1b38 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 4445      F8
 478:sieve_extend.c ****         copy_word++;
 4446              		.loc 1 478 9 is_stmt 1 view .LVU1472
 479:sieve_extend.c ****     }
 4447              		.loc 1 479 9 view .LVU1473
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4448              		.loc 1 476 10 view .LVU1474
 4449              	.L440:
 477:sieve_extend.c ****         source_word++;
 4450              		.loc 1 477 9 view .LVU1475
 4451              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4452              		.loc 1 477 39 is_stmt 0 view .LVU1476
 4453 1b3d 4D8B14D4 		mov	r10, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4454 1b41 4983C408 		add	r12, 8	# ivtmp.268,
 4455              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4456              		.loc 1 477 29 view .LVU1477
 4457 1b45 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _120, offset: 0B], _70
 4457      F8
 478:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccdGK7kM.s 			page 129


 4458              		.loc 1 478 9 is_stmt 1 view .LVU1478
 479:sieve_extend.c ****     }
 4459              		.loc 1 479 9 view .LVU1479
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4460              		.loc 1 476 10 view .LVU1480
 4461              	.L439:
 477:sieve_extend.c ****         source_word++;
 4462              		.loc 1 477 9 view .LVU1481
 4463              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4464              		.loc 1 477 39 is_stmt 0 view .LVU1482
 4465 1b4a 4D8B1CD4 		mov	r11, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4466 1b4e 4983C408 		add	r12, 8	# ivtmp.268,
 4467              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4468              		.loc 1 477 29 view .LVU1483
 4469 1b52 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _120, offset: 0B], _70
 4469      F8
 478:sieve_extend.c ****         copy_word++;
 4470              		.loc 1 478 9 is_stmt 1 view .LVU1484
 479:sieve_extend.c ****     }
 4471              		.loc 1 479 9 view .LVU1485
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4472              		.loc 1 476 10 view .LVU1486
 4473              	.L438:
 477:sieve_extend.c ****         source_word++;
 4474              		.loc 1 477 9 view .LVU1487
 4475              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4476              		.loc 1 477 39 is_stmt 0 view .LVU1488
 4477 1b57 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4478 1b5b 4983C408 		add	r12, 8	# ivtmp.268,
 4479              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4480              		.loc 1 477 29 view .LVU1489
 4481 1b5f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _120, offset: 0B], _70
 4481      F8
 478:sieve_extend.c ****         copy_word++;
 4482              		.loc 1 478 9 is_stmt 1 view .LVU1490
 479:sieve_extend.c ****     }
 4483              		.loc 1 479 9 view .LVU1491
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4484              		.loc 1 476 10 view .LVU1492
 4485 1b64 4D39C4   		cmp	r12, r8	# ivtmp.268, _125
 4486 1b67 0F841BFF 		je	.L472	#,
 4486      FFFF
 4487              	.LVL219:
 4488              	.L373:
 477:sieve_extend.c ****         source_word++;
 4489              		.loc 1 477 9 view .LVU1493
 4490              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4491              		.loc 1 477 39 is_stmt 0 view .LVU1494
 4492 1b6d 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4493              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4494              		.loc 1 477 29 view .LVU1495
GAS LISTING /tmp/ccdGK7kM.s 			page 130


 4495 1b71 49891C24 		mov	QWORD PTR [r12], rbx	# MEM[base: _120, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 4496              		.loc 1 478 9 is_stmt 1 view .LVU1496
 479:sieve_extend.c ****     }
 4497              		.loc 1 479 9 view .LVU1497
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4498              		.loc 1 476 10 view .LVU1498
 477:sieve_extend.c ****         source_word++;
 4499              		.loc 1 477 9 view .LVU1499
 4500              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4501              		.loc 1 477 39 is_stmt 0 view .LVU1500
 4502 1b75 4D8B4CD4 		mov	r9, QWORD PTR 8[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4502      08
 4503              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4504              		.loc 1 477 29 view .LVU1501
 4505 1b7a 4D894C24 		mov	QWORD PTR 8[r12], r9	# MEM[base: _120, offset: 0B], _70
 4505      08
 478:sieve_extend.c ****         copy_word++;
 4506              		.loc 1 478 9 is_stmt 1 view .LVU1502
 479:sieve_extend.c ****     }
 4507              		.loc 1 479 9 view .LVU1503
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4508              		.loc 1 476 10 view .LVU1504
 477:sieve_extend.c ****         source_word++;
 4509              		.loc 1 477 9 view .LVU1505
 4510              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4511              		.loc 1 477 39 is_stmt 0 view .LVU1506
 4512 1b7f 498B74D4 		mov	rsi, QWORD PTR 16[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4512      10
 4513              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4514              		.loc 1 477 29 view .LVU1507
 4515 1b84 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _120, offset: 0B], _70
 4515      10
 478:sieve_extend.c ****         copy_word++;
 4516              		.loc 1 478 9 is_stmt 1 view .LVU1508
 479:sieve_extend.c ****     }
 4517              		.loc 1 479 9 view .LVU1509
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4518              		.loc 1 476 10 view .LVU1510
 477:sieve_extend.c ****         source_word++;
 4519              		.loc 1 477 9 view .LVU1511
 4520              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4521              		.loc 1 477 39 is_stmt 0 view .LVU1512
 4522 1b89 498B44D4 		mov	rax, QWORD PTR 24[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4522      18
 4523              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4524              		.loc 1 477 29 view .LVU1513
 4525 1b8e 49894424 		mov	QWORD PTR 24[r12], rax	# MEM[base: _120, offset: 0B], _70
 4525      18
 478:sieve_extend.c ****         copy_word++;
 4526              		.loc 1 478 9 is_stmt 1 view .LVU1514
GAS LISTING /tmp/ccdGK7kM.s 			page 131


 479:sieve_extend.c ****     }
 4527              		.loc 1 479 9 view .LVU1515
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4528              		.loc 1 476 10 view .LVU1516
 477:sieve_extend.c ****         source_word++;
 4529              		.loc 1 477 9 view .LVU1517
 4530              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4531              		.loc 1 477 39 is_stmt 0 view .LVU1518
 4532 1b93 4D8B74D4 		mov	r14, QWORD PTR 32[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4532      20
 4533              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4534              		.loc 1 477 29 view .LVU1519
 4535 1b98 4D897424 		mov	QWORD PTR 32[r12], r14	# MEM[base: _120, offset: 0B], _70
 4535      20
 478:sieve_extend.c ****         copy_word++;
 4536              		.loc 1 478 9 is_stmt 1 view .LVU1520
 479:sieve_extend.c ****     }
 4537              		.loc 1 479 9 view .LVU1521
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4538              		.loc 1 476 10 view .LVU1522
 477:sieve_extend.c ****         source_word++;
 4539              		.loc 1 477 9 view .LVU1523
 4540              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4541              		.loc 1 477 39 is_stmt 0 view .LVU1524
 4542 1b9d 4D8B6CD4 		mov	r13, QWORD PTR 40[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4542      28
 4543              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4544              		.loc 1 477 29 view .LVU1525
 4545 1ba2 4D896C24 		mov	QWORD PTR 40[r12], r13	# MEM[base: _120, offset: 0B], _70
 4545      28
 478:sieve_extend.c ****         copy_word++;
 4546              		.loc 1 478 9 is_stmt 1 view .LVU1526
 479:sieve_extend.c ****     }
 4547              		.loc 1 479 9 view .LVU1527
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4548              		.loc 1 476 10 view .LVU1528
 477:sieve_extend.c ****         source_word++;
 4549              		.loc 1 477 9 view .LVU1529
 4550              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4551              		.loc 1 477 39 is_stmt 0 view .LVU1530
 4552 1ba7 498B7CD4 		mov	rdi, QWORD PTR 48[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4552      30
 4553              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4554              		.loc 1 477 29 view .LVU1531
 4555 1bac 49897C24 		mov	QWORD PTR 48[r12], rdi	# MEM[base: _120, offset: 0B], _70
 4555      30
 478:sieve_extend.c ****         copy_word++;
 4556              		.loc 1 478 9 is_stmt 1 view .LVU1532
 479:sieve_extend.c ****     }
 4557              		.loc 1 479 9 view .LVU1533
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 132


 4558              		.loc 1 476 10 view .LVU1534
 477:sieve_extend.c ****         source_word++;
 4559              		.loc 1 477 9 view .LVU1535
 4560              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4561              		.loc 1 477 39 is_stmt 0 view .LVU1536
 4562 1bb1 4D8B7CD4 		mov	r15, QWORD PTR 56[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 4562      38
 4563 1bb6 4983C440 		add	r12, 64	# ivtmp.268,
 4564              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4565              		.loc 1 477 29 view .LVU1537
 4566 1bba 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 4566      F8
 478:sieve_extend.c ****         copy_word++;
 4567              		.loc 1 478 9 is_stmt 1 view .LVU1538
 479:sieve_extend.c ****     }
 4568              		.loc 1 479 9 view .LVU1539
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4569              		.loc 1 476 10 view .LVU1540
 4570 1bbf 4D39C4   		cmp	r12, r8	# ivtmp.268, _125
 4571 1bc2 75A9     		jne	.L373	#,
 4572 1bc4 E9BFFEFF 		jmp	.L472	#
 4572      FF
 4573              		.cfi_endproc
 4574              	.LFE5333:
 4576 1bc9 0F1F8000 		.p2align 4
 4576      000000
 4578              	extendSieve_shiftleft:
 4579              	.LVL220:
 4580              	.LFB5339:
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 4581              		.loc 1 722 142 view -0
 4582              		.cfi_startproc
 723:sieve_extend.c **** 
 4583              		.loc 1 723 5 view .LVU1542
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4584              		.loc 1 725 5 view .LVU1543
 4585              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 4586              		.loc 1 722 142 is_stmt 0 view .LVU1544
 4587 1bd0 55       		push	rbp	#
 4588              		.cfi_def_cfa_offset 16
 4589              		.cfi_offset 6, -16
 4590              	# sieve_extend.c:725:     const counter_t destination_stop_word = wordindex(destination_stop);
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4591              		.loc 1 725 21 view .LVU1545
 4592 1bd1 48C1E906 		shr	rcx, 6	# tmp1116,
 4593              	.LVL221:
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4594              		.loc 1 725 21 view .LVU1546
 4595 1bd5 4989CA   		mov	r10, rcx	# destination_stop_word, tmp1116
 4596              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 4597              		.loc 1 722 142 view .LVU1547
 4598 1bd8 4889E5   		mov	rbp, rsp	#,
 4599              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccdGK7kM.s 			page 133


 4600 1bdb 4157     		push	r15	#
 4601 1bdd 4989D1   		mov	r9, rdx	# size, tmp1115
 4602 1be0 4156     		push	r14	#
 4603 1be2 4155     		push	r13	#
 4604 1be4 4154     		push	r12	#
 4605 1be6 53       		push	rbx	#
 4606              		.cfi_offset 15, -24
 4607              		.cfi_offset 14, -32
 4608              		.cfi_offset 13, -40
 4609              		.cfi_offset 12, -48
 4610              		.cfi_offset 3, -56
 4611 1be7 4889FB   		mov	rbx, rdi	# bitarray, tmp1113
 4612              	# sieve_extend.c:726:     const counter_t copy_start = source_start + size;
 726:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 4613              		.loc 1 726 21 view .LVU1548
 4614 1bea 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 4615              	.LVL222:
 4616              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 4617              		.loc 1 722 142 view .LVU1549
 4618 1bee 4883E4E0 		and	rsp, -32	#,
 4619 1bf2 4883EC60 		sub	rsp, 96	#,
 4620              	# sieve_extend.c:725:     const counter_t destination_stop_word = wordindex(destination_stop);
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4621              		.loc 1 725 21 view .LVU1550
 4622 1bf6 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 4622      50
 4623              	.LVL223:
 726:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 4624              		.loc 1 726 5 is_stmt 1 view .LVU1551
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4625              		.loc 1 727 5 view .LVU1552
 4626              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4627              		.loc 1 727 39 is_stmt 0 view .LVU1553
 4628 1bfb 4889F1   		mov	rcx, rsi	# _4, source_start
 4629              	.LVL224:
 4630              	# sieve_extend.c:729:     register counter_t source_word = wordindex(source_start);
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 4631              		.loc 1 729 24 view .LVU1554
 4632 1bfe 48C1EE06 		shr	rsi, 6	# source_start,
 4633              	.LVL225:
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 4634              		.loc 1 729 24 view .LVU1555
 4635 1c02 4989F0   		mov	r8, rsi	# source_word, source_start
 4636              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4637              		.loc 1 727 39 view .LVU1556
 4638 1c05 83E13F   		and	ecx, 63	# _4,
 4639              	.LVL226:
 4640              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4641              		.loc 1 727 69 view .LVU1557
 4642 1c08 4889F8   		mov	rax, rdi	# _5, copy_start
 4643 1c0b 83E03F   		and	eax, 63	# _5,
 4644              	.LVL227:
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccdGK7kM.s 			page 134


 4645              		.loc 1 728 5 is_stmt 1 view .LVU1558
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 4646              		.loc 1 729 5 view .LVU1559
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 4647              		.loc 1 730 5 view .LVU1560
 4648              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4649              		.loc 1 732 41 is_stmt 0 view .LVU1561
 4650 1c0e 4D8D7001 		lea	r14, 1[r8]	# _183,
 4651              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4652              		.loc 1 727 31 view .LVU1562
 4653 1c12 4989CF   		mov	r15, rcx	# shift, _4
 4654 1c15 4929C7   		sub	r15, rax	# shift, _5
 4655              	.LVL228:
 4656              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4657              		.loc 1 732 41 view .LVU1563
 4658 1c18 4C897424 		mov	QWORD PTR 88[rsp], r14	# %sfp, _183
 4658      58
 4659              	# sieve_extend.c:728:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 4660              		.loc 1 728 31 view .LVU1564
 4661 1c1d 4829C8   		sub	rax, rcx	# tmp470, _4
 4662              	.LVL229:
 4663              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 4664              		.loc 1 731 52 view .LVU1565
 4665 1c20 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 4666              	.LVL230:
 4667              	# sieve_extend.c:728:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 4668              		.loc 1 728 31 view .LVU1566
 4669 1c24 4C8D7040 		lea	r14, 64[rax]	# shift_flipped,
 4670              	.LVL231:
 4671              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 4672              		.loc 1 722 142 view .LVU1567
 4673 1c28 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 4673      18
 4674              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 4675              		.loc 1 731 38 view .LVU1568
 4676 1c2d 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 4676      00000000 
 4677              	.LVL232:
 4678              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4679              		.loc 1 732 57 view .LVU1569
 4680 1c35 C4E289F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r14	# tmp472, *_16, shift_flipped
 4680      441308
 4681              	# sieve_extend.c:730:     register counter_t copy_word = wordindex(copy_start);
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 4682              		.loc 1 730 24 view .LVU1570
 4683 1c3c 4989FB   		mov	r11, rdi	# copy_word, copy_start
 4684              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccdGK7kM.s 			page 135


 4685              		.loc 1 731 52 view .LVU1571
 4686 1c3f C46283F7 		shrx	r8, rcx, r15	# tmp474, *_10, shift
 4686      C1
 4687              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 4688              		.loc 1 733 33 view .LVU1572
 4689 1c44 F7D7     		not	edi	# tmp477
 4690              	.LVL233:
 4691              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4692              		.loc 1 732 30 view .LVU1573
 4693 1c46 4909C0   		or	r8, rax	# tmp476, tmp472
 4694              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 4695              		.loc 1 733 33 view .LVU1574
 4696 1c49 48C7C0FF 		mov	rax, -1	# tmp480,
 4696      FFFFFF
 4697 1c50 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp479, tmp480, tmp477
 4697      F8
 4698              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 4699              		.loc 1 733 30 view .LVU1575
 4700 1c55 C4C2C0F2 		andn	rcx, rdi, r8	# tmp482, tmp479, tmp476
 4700      C8
 4701              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 4702              		.loc 1 738 41 view .LVU1576
 4703 1c5a 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# tmp483, %sfp
 4703      58
 4704              	# sieve_extend.c:730:     register counter_t copy_word = wordindex(copy_start);
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 4705              		.loc 1 730 24 view .LVU1577
 4706 1c5f 49C1EB06 		shr	r11, 6	# copy_word,
 4707              	.LVL234:
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 4708              		.loc 1 731 5 is_stmt 1 view .LVU1578
 4709              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 4710              		.loc 1 738 41 is_stmt 0 view .LVU1579
 4711 1c63 4D01C8   		add	r8, r9	# tmp483, size
 4712              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 4713              		.loc 1 731 25 view .LVU1580
 4714 1c66 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 4714      00000000 
 4715 1c6e 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp482
 735:sieve_extend.c ****     source_word++;
 4716              		.loc 1 735 5 is_stmt 1 view .LVU1581
 4717              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 4718              		.loc 1 738 21 is_stmt 0 view .LVU1582
 4719 1c72 4D39D0   		cmp	r8, r10	# tmp483, destination_stop_word
 4720 1c75 4D0F47C2 		cmova	r8, r10	# tmp483,, tmp483, destination_stop_word
 4721              	.LBB299:
 4722              	.LBB300:
 4723              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/ccdGK7kM.s 			page 136


 4724              		.loc 1 579 91 view .LVU1583
 4725 1c79 41BA0200 		mov	r10d, 2	# tmp484,
 4725      0000
 4726              	.LVL235:
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4727              		.loc 1 579 91 view .LVU1584
 4728 1c7f 4983F802 		cmp	r8, 2	# aligned_copy_word,
 4729 1c83 4D0F43D0 		cmovnb	r10, r8	# aligned_copy_word,, _86
 4730              	.LBE300:
 4731              	.LBE299:
 4732              	# sieve_extend.c:735:     copy_word++;
 735:sieve_extend.c ****     source_word++;
 4733              		.loc 1 735 14 view .LVU1585
 4734 1c87 498D4301 		lea	rax, 1[r11]	# ivtmp.360,
 4735              	.LVL236:
 736:sieve_extend.c **** 
 4736              		.loc 1 736 5 is_stmt 1 view .LVU1586
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 4737              		.loc 1 738 5 view .LVU1587
 4738              	.LBB322:
 4739              	.LBB317:
 4740              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4741              		.loc 1 579 21 is_stmt 0 view .LVU1588
 4742 1c8b 498D7AFE 		lea	rdi, -2[r10]	# fast_loop_stop_word,
 4743              	.LBE317:
 4744              	.LBE322:
 4745              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 4746              		.loc 1 738 21 view .LVU1589
 4747 1c8f 4C894424 		mov	QWORD PTR 56[rsp], r8	# %sfp, aligned_copy_word
 4747      38
 4748              	.LVL237:
 739:sieve_extend.c ****     source_word += distance;
 4749              		.loc 1 739 5 is_stmt 1 view .LVU1590
 4750              	.LBB323:
 4751              	.LBI299:
 578:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 4752              		.loc 1 578 25 view .LVU1591
 4753              	.LBB318:
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4754              		.loc 1 579 5 view .LVU1592
 4755              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4756              		.loc 1 579 21 is_stmt 0 view .LVU1593
 4757 1c94 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, fast_loop_stop_word
 4757      48
 4758              	.LVL238:
 580:sieve_extend.c ****     counter_t distance = 0;
 4759              		.loc 1 580 5 is_stmt 1 view .LVU1594
 581:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 4760              		.loc 1 581 5 view .LVU1595
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4761              		.loc 1 582 5 view .LVU1596
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4762              		.loc 1 582 11 view .LVU1597
 4763              	.LBE318:
GAS LISTING /tmp/ccdGK7kM.s 			page 137


 4764              	.LBE323:
 4765              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 4766              		.loc 1 731 52 is_stmt 0 view .LVU1598
 4767 1c99 4589FC   		mov	r12d, r15d	# _12, shift
 4768              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4769              		.loc 1 732 57 view .LVU1599
 4770 1c9c 4589F5   		mov	r13d, r14d	# _18, shift_flipped
 4771              	.LBB324:
 4772              	.LBB319:
 4773              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4774              		.loc 1 582 11 view .LVU1600
 4775 1c9f 4839F8   		cmp	rax, rdi	# ivtmp.360, fast_loop_stop_word
 4776 1ca2 0F832104 		jnb	.L475	#,
 4776      0000
 4777 1ca8 4D29DA   		sub	r10, r11	# tmp485, copy_word
 4778 1cab 4C8D4A40 		lea	r9, 64[rdx]	# tmp487,
 4779              	.LVL239:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4780              		.loc 1 582 11 view .LVU1601
 4781 1caf 498D4AFC 		lea	rcx, -4[r10]	# _269,
 4782 1cb3 4C8D4610 		lea	r8, 16[rsi]	# tmp488,
 4783 1cb7 4C8D5648 		lea	r10, 72[rsi]	# tmp491,
 4784 1cbb 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, _269
 4784      30
 4785 1cc0 4D39C1   		cmp	r9, r8	# tmp487, tmp488
 4786 1cc3 488D4A08 		lea	rcx, 8[rdx]	# tmp690,
 4787 1cc7 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, tmp487
 4787      28
 4788 1ccc 410F9EC1 		setle	r9b	#, tmp490
 4789 1cd0 4939CA   		cmp	r10, rcx	# tmp491, tmp690
 4790 1cd3 4C895424 		mov	QWORD PTR 64[rsp], r10	# %sfp, tmp491
 4790      40
 4791 1cd8 410F9EC2 		setle	r10b	#, tmp494
 4792 1cdc 4509D1   		or	r9d, r10d	# tmp490, tmp494
 4793 1cdf 4589CA   		mov	r10d, r9d	# tmp495, tmp490
 4794 1ce2 4C8D4A50 		lea	r9, 80[rdx]	# tmp496,
 4795 1ce6 4D39C1   		cmp	r9, r8	# tmp496, tmp488
 4796 1ce9 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, tmp496
 4796      20
 4797 1cee 410F9EC1 		setle	r9b	#, tmp499
 4798 1cf2 4883C210 		add	rdx, 16	# tmp501,
 4799 1cf6 48395424 		cmp	QWORD PTR 64[rsp], rdx	# %sfp, tmp501
 4799      40
 4800 1cfb 400F9EC7 		setle	dil	#, tmp503
 4801              	.LVL240:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4802              		.loc 1 582 11 view .LVU1602
 4803 1cff 4409CF   		or	edi, r9d	# tmp504, tmp499
 4804 1d02 4421D7   		and	edi, r10d	# tmp505, tmp495
 4805 1d05 48837C24 		cmp	QWORD PTR 48[rsp], 11	# %sfp,
 4805      300B
 4806 1d0b 410F97C2 		seta	r10b	#, tmp507
 4807 1d0f 4C8D4E08 		lea	r9, 8[rsi]	# tmp510,
 4808 1d13 4421D7   		and	edi, r10d	# tmp508, tmp507
GAS LISTING /tmp/ccdGK7kM.s 			page 138


 4809 1d16 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp510
 4809      28
 4810 1d1b 410F9EC2 		setle	r10b	#, tmp512
 4811 1d1f 4883C640 		add	rsi, 64	# tmp513,
 4812 1d23 4839CE   		cmp	rsi, rcx	# tmp513, tmp690
 4813 1d26 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 4813      28
 4814 1d2b 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp517, %sfp
 4814      28
 4815 1d30 4421D7   		and	edi, r10d	# tmp518, tmp517
 4816 1d33 4C394C24 		cmp	QWORD PTR 32[rsp], r9	# %sfp, tmp510
 4816      20
 4817 1d38 410F9EC2 		setle	r10b	#, tmp522
 4818 1d3c 4839D6   		cmp	rsi, rdx	# tmp513, tmp501
 4819 1d3f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 4819      28
 4820 1d44 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp527, %sfp
 4820      28
 4821 1d49 4484D7   		test	dil, r10b	# tmp518, tmp527
 4822 1d4c 0F84460E 		je	.L476	#,
 4822      0000
 4823 1d52 4C394C24 		cmp	QWORD PTR 64[rsp], r9	# %sfp, tmp510
 4823      40
 4824 1d57 400F9EC7 		setle	dil	#, tmp532
 4825 1d5b 4C39C6   		cmp	rsi, r8	# tmp513, tmp488
 4826 1d5e 400F9EC6 		setle	sil	#, tmp536
 4827 1d62 4008F7   		or	dil, sil	# tmp532, tmp536
 4828 1d65 0F842D0E 		je	.L476	#,
 4828      0000
 4829 1d6b 4801D9   		add	rcx, rbx	# vectp.325, bitarray
 4830              	.LBB301:
 4831              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4832              		.loc 1 583 19 view .LVU1603
 4833 1d6e C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1219, MEM[base: vectp.325_427, index: ivtmp.400_621, offset: 
 4834 1d72 4801DA   		add	rdx, rbx	# vectp.329, bitarray
 4835              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4836              		.loc 1 584 19 view .LVU1604
 4837 1d75 C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B], MEM[
 4838 1d79 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 32B], M
 4838      20
 4839              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4840              		.loc 1 583 19 view .LVU1605
 4841 1d7e C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp548, tmp1219, MEM[base: vectp.325_427, index: ivt
 4841      20
 4842 1d83 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# _269, %sfp
 4842      30
 4843              	.LVL241:
 4844              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4845              		.loc 1 584 19 view .LVU1606
 4846 1d88 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp544, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B],
 4847 1d8c C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp562, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B]
 4848 1d90 49C1EB03 		shr	r11, 3	# _269,
 4849 1d94 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_444, tmp544,
GAS LISTING /tmp/ccdGK7kM.s 			page 139


 4849      C5D8
 4850 1d9a C4C1796E 		vmovd	xmm3, r15d	# _12, _12
 4850      DF
 4851 1d9f C4C1796E 		vmovd	xmm4, r14d	# _18, _18
 4851      E6
 4852              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4853              		.loc 1 583 19 view .LVU1607
 4854 1da4 C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp547, tmp548,
 4854      F2D8
 4855              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4856              		.loc 1 584 19 view .LVU1608
 4857 1daa C443FD00 		vpermq	ymm15, ymm14, 216	# tmp561, tmp562,
 4857      FED8
 4858 1db0 4C895C24 		mov	QWORD PTR 64[rsp], r11	# %sfp, bnd.318
 4858      40
 4859              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4860              		.loc 1 585 42 view .LVU1609
 4861 1db5 C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.332, tmp547, _12
 4862              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4863              		.loc 1 585 63 view .LVU1610
 4864 1db9 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.333, vect_perm_even_444, _18
 4865              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4866              		.loc 1 587 63 view .LVU1611
 4867 1dbd C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.336, tmp561, _18
 4868              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4869              		.loc 1 587 42 view .LVU1612
 4870 1dc1 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.335, vect_perm_even_444, _12
 4871              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4872              		.loc 1 585 52 view .LVU1613
 4873 1dc5 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.334, vect__98.332, vect__100.333
 4873      DA
 4874              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4875              		.loc 1 587 52 view .LVU1614
 4876 1dca C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.337, vect__110.336, vect__109.335
 4877 1dce 49FFCB   		dec	r11	# tmp725
 4878              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4879              		.loc 1 585 31 view .LVU1615
 4880 1dd1 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp558, vect__104.334
 4880      DD01
 4881              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4882              		.loc 1 587 31 view .LVU1616
 4883 1dd7 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp572, vect__114.337
 4883      EF01
 4884 1ddd 4183E301 		and	r11d, 1	# tmp725,
 4885              	.LVL242:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4886              		.loc 1 583 9 is_stmt 1 view .LVU1617
GAS LISTING /tmp/ccdGK7kM.s 			page 140


 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4887              		.loc 1 584 9 view .LVU1618
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4888              		.loc 1 585 9 view .LVU1619
 4889 1de1 48837C24 		cmp	QWORD PTR 64[rsp], 1	# %sfp,
 4889      4001
 4890              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4891              		.loc 1 585 31 is_stmt 0 view .LVU1620
 4892 1de7 C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _450, index: ivtmp.400_621, offset: 0B], tmp554
 4892      1C0B
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4893              		.loc 1 585 31 view .LVU1621
 4894 1ded C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _450, index: ivtmp.400_621, offset: 32B], tmp558
 4894      6C0B20
 4895 1df4 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 16B], tmp55
 4895      5C0B1001 
 4896 1dfc C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 48B], tmp55
 4896      6C0B3001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4897              		.loc 1 586 9 is_stmt 1 view .LVU1622
 4898              	.LVL243:
 587:sieve_extend.c ****         copy_word += 2;
 4899              		.loc 1 587 9 view .LVU1623
 4900 1e04 4E8D140B 		lea	r10, [rbx+r9]	# _450,
 4901 1e08 4A8D3C03 		lea	rdi, [rbx+r8]	# _470,
 4902              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4903              		.loc 1 587 31 is_stmt 0 view .LVU1624
 4904 1e0c C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _470, index: ivtmp.400_621, offset: 0B], tmp568
 4904      2C03
 587:sieve_extend.c ****         copy_word += 2;
 4905              		.loc 1 587 31 view .LVU1625
 4906 1e12 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _470, index: ivtmp.400_621, offset: 32B], tmp572
 4906      7C0320
 4907 1e19 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 16B], tmp568
 4907      6C031001 
 4908 1e21 C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 48B], tmp572
 4908      7C033001 
 588:sieve_extend.c ****         source_word += 2;
 4909              		.loc 1 588 9 is_stmt 1 view .LVU1626
 589:sieve_extend.c ****         distance += 2;
 4910              		.loc 1 589 9 view .LVU1627
 590:sieve_extend.c ****     }
 4911              		.loc 1 590 9 view .LVU1628
 590:sieve_extend.c ****     }
 4912              		.loc 1 590 9 is_stmt 0 view .LVU1629
 4913              	.LBE301:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4914              		.loc 1 582 11 is_stmt 1 view .LVU1630
 4915 1e29 41B94000 		mov	r9d, 64	# ivtmp.400,
 4915      0000
 4916 1e2f 41B80100 		mov	r8d, 1	# ivtmp.398,
 4916      0000
 4917 1e35 0F864A01 		jbe	.L694	#,
 4917      0000
 4918 1e3b 4D85DB   		test	r11, r11	# tmp727
GAS LISTING /tmp/ccdGK7kM.s 			page 141


 4919 1e3e 0F857C0A 		jne	.L727	#,
 4919      0000
 4920              	.L720:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4921              		.loc 1 582 11 is_stmt 0 view .LVU1631
 4922 1e44 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# bnd.318, %sfp
 4922      40
 4923              	.L477:
 4924              	.LBB302:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4925              		.loc 1 583 9 is_stmt 1 view .LVU1632
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4926              		.loc 1 584 9 view .LVU1633
 4927              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4928              		.loc 1 583 19 is_stmt 0 view .LVU1634
 4929 1e49 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r9]	# tmp1221, MEM[base: vectp.325_427, index: ivtmp.400_621, offse
 4929      0C09
 4930              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4931              		.loc 1 584 19 view .LVU1635
 4932 1e4f C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r9]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B], 
 4932      240A
 4933 1e55 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r9]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 32B
 4933      6C0A20
 4934              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4935              		.loc 1 583 19 view .LVU1636
 4936 1e5c C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r9]	# tmp738, tmp1221, MEM[base: vectp.325_427, index: 
 4936      440920
 4937              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4938              		.loc 1 584 19 view .LVU1637
 4939 1e63 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp734, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0
 4939      F5
 4940 1e68 C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp749, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0
 4940      DD
 4941 1e6d C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_444, tmp734,
 4941      FED8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4942              		.loc 1 585 9 is_stmt 1 view .LVU1638
 4943              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4944              		.loc 1 583 19 is_stmt 0 view .LVU1639
 4945 1e73 C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp739, tmp738,
 4945      E8D8
 4946              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4947              		.loc 1 584 19 view .LVU1640
 4948 1e79 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp750, tmp749,
 4948      F3D8
 4949              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4950              		.loc 1 585 42 view .LVU1641
 4951 1e7f C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.332, tmp739, _12
 4952              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccdGK7kM.s 			page 142


 4953              		.loc 1 585 63 view .LVU1642
 4954 1e83 C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.333, vect_perm_even_444, _18
 4955              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4956              		.loc 1 587 63 view .LVU1643
 4957 1e87 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.336, tmp750, _18
 4958              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4959              		.loc 1 587 42 view .LVU1644
 4960 1e8b C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.335, vect_perm_even_444, _12
 4961              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4962              		.loc 1 585 52 view .LVU1645
 4963 1e8f C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.334, vect__98.332, vect__100.333
 4964              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4965              		.loc 1 587 52 view .LVU1646
 4966 1e93 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.337, vect__110.336, vect__109.335
 4966      F5
 4967              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4968              		.loc 1 585 31 view .LVU1647
 4969 1e98 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp746, vect__104.334
 4969      CA01
 4970              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4971              		.loc 1 587 31 view .LVU1648
 4972 1e9e C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp757, vect__114.337
 4972      F101
 4973              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4974              		.loc 1 585 31 view .LVU1649
 4975 1ea4 C40179D6 		vmovq	QWORD PTR [r10+r9], xmm9	# MEM[base: _450, index: ivtmp.400_621, offset: 0B], tmp743
 4975      0C0A
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4976              		.loc 1 585 31 view .LVU1650
 4977 1eaa C48179D6 		vmovq	QWORD PTR 32[r10+r9], xmm2	# MEM[base: _450, index: ivtmp.400_621, offset: 32B], tmp746
 4977      540A20
 4978 1eb1 C403F916 		vpextrq	QWORD PTR 16[r10+r9], xmm9, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 16B], tmp743
 4978      4C0A1001 
 4979 1eb9 C483F916 		vpextrq	QWORD PTR 48[r10+r9], xmm2, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 48B], tmp746
 4979      540A3001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4980              		.loc 1 586 9 is_stmt 1 view .LVU1651
 587:sieve_extend.c ****         copy_word += 2;
 4981              		.loc 1 587 9 view .LVU1652
 4982              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 4983              		.loc 1 587 31 is_stmt 0 view .LVU1653
 4984 1ec1 C42179D6 		vmovq	QWORD PTR [rdi+r9], xmm14	# MEM[base: _470, index: ivtmp.400_621, offset: 0B], tmp754
 4984      340F
 587:sieve_extend.c ****         copy_word += 2;
 4985              		.loc 1 587 31 view .LVU1654
 4986 1ec7 C4A179D6 		vmovq	QWORD PTR 32[rdi+r9], xmm1	# MEM[base: _470, index: ivtmp.400_621, offset: 32B], tmp757
 4986      4C0F20
 4987 1ece C423F916 		vpextrq	QWORD PTR 16[rdi+r9], xmm14, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 16B], tmp75
 4987      740F1001 
GAS LISTING /tmp/ccdGK7kM.s 			page 143


 4988 1ed6 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r9], xmm1, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 48B], tmp757
 4988      4C0F3001 
 588:sieve_extend.c ****         source_word += 2;
 4989              		.loc 1 588 9 is_stmt 1 view .LVU1655
 589:sieve_extend.c ****         distance += 2;
 4990              		.loc 1 589 9 view .LVU1656
 590:sieve_extend.c ****     }
 4991              		.loc 1 590 9 view .LVU1657
 590:sieve_extend.c ****     }
 4992              		.loc 1 590 9 is_stmt 0 view .LVU1658
 4993              	.LBE302:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4994              		.loc 1 582 11 is_stmt 1 view .LVU1659
 4995              	.LBB303:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4996              		.loc 1 583 9 view .LVU1660
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4997              		.loc 1 584 9 view .LVU1661
 4998              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4999              		.loc 1 583 19 is_stmt 0 view .LVU1662
 5000 1ede C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r9]	# tmp1222, MEM[base: vectp.325_427, index: ivtmp.400_621, off
 5000      7C0940
 5001              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5002              		.loc 1 584 19 view .LVU1663
 5003 1ee5 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r9]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B],
 5003      440A40
 5004 1eec C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r9]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 32B]
 5004      440A60
 5005              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5006              		.loc 1 583 19 view .LVU1664
 5007 1ef3 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r9]	# tmp768, tmp1222, MEM[base: vectp.325_427, index:
 5007      540960
 5008              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5009              		.loc 1 584 19 view .LVU1665
 5010 1efa C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp764, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B],
 5011 1efe C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp779, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B]
 5012 1f02 C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_444, tmp764,
 5012      CDD8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5013              		.loc 1 585 9 is_stmt 1 view .LVU1666
 5014              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5015              		.loc 1 583 19 is_stmt 0 view .LVU1667
 5016 1f08 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp769, tmp768,
 5016      D2D8
 5017              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5018              		.loc 1 584 19 view .LVU1668
 5019 1f0e C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp780, tmp779,
 5019      CFD8
 5020              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5021              		.loc 1 585 42 view .LVU1669
GAS LISTING /tmp/ccdGK7kM.s 			page 144


 5022 1f14 C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.332, tmp769, _12
 5023              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5024              		.loc 1 585 63 view .LVU1670
 5025 1f18 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.333, vect_perm_even_444, _18
 5026              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5027              		.loc 1 587 63 view .LVU1671
 5028 1f1c C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.336, tmp780, _18
 5029              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5030              		.loc 1 587 42 view .LVU1672
 5031 1f20 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.335, vect_perm_even_444, _12
 5032              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5033              		.loc 1 585 52 view .LVU1673
 5034 1f24 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.334, vect__98.332, vect__100.333
 5035              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5036              		.loc 1 587 52 view .LVU1674
 5037 1f28 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.337, vect__110.336, vect__109.335
 5038              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5039              		.loc 1 585 31 view .LVU1675
 5040 1f2c C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp776, vect__104.334
 5040      E601
 5041              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5042              		.loc 1 587 31 view .LVU1676
 5043 1f32 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp787, vect__114.337
 5043      EF01
 5044 1f38 4983C002 		add	r8, 2	# ivtmp.398,
 5045              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5046              		.loc 1 585 31 view .LVU1677
 5047 1f3c C40179D6 		vmovq	QWORD PTR 64[r10+r9], xmm12	# MEM[base: _450, index: ivtmp.400_621, offset: 0B], tmp773
 5047      640A40
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5048              		.loc 1 585 31 view .LVU1678
 5049 1f43 C40179D6 		vmovq	QWORD PTR 96[r10+r9], xmm14	# MEM[base: _450, index: ivtmp.400_621, offset: 32B], tmp776
 5049      740A60
 5050 1f4a C403F916 		vpextrq	QWORD PTR 80[r10+r9], xmm12, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 16B], tmp77
 5050      640A5001 
 5051 1f52 C403F916 		vpextrq	QWORD PTR 112[r10+r9], xmm14, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 48B], tmp7
 5051      740A7001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5052              		.loc 1 586 9 is_stmt 1 view .LVU1679
 587:sieve_extend.c ****         copy_word += 2;
 5053              		.loc 1 587 9 view .LVU1680
 5054              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5055              		.loc 1 587 31 is_stmt 0 view .LVU1681
 5056 1f5a C4A179D6 		vmovq	QWORD PTR 64[rdi+r9], xmm5	# MEM[base: _470, index: ivtmp.400_621, offset: 0B], tmp784
 5056      6C0F40
 587:sieve_extend.c ****         copy_word += 2;
 5057              		.loc 1 587 31 view .LVU1682
 5058 1f61 C4A179D6 		vmovq	QWORD PTR 96[rdi+r9], xmm7	# MEM[base: _470, index: ivtmp.400_621, offset: 32B], tmp787
GAS LISTING /tmp/ccdGK7kM.s 			page 145


 5058      7C0F60
 5059 1f68 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r9], xmm5, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 16B], tmp784
 5059      6C0F5001 
 5060 1f70 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r9], xmm7, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 48B], tmp78
 5060      7C0F7001 
 588:sieve_extend.c ****         source_word += 2;
 5061              		.loc 1 588 9 is_stmt 1 view .LVU1683
 589:sieve_extend.c ****         distance += 2;
 5062              		.loc 1 589 9 view .LVU1684
 590:sieve_extend.c ****     }
 5063              		.loc 1 590 9 view .LVU1685
 590:sieve_extend.c ****     }
 5064              		.loc 1 590 9 is_stmt 0 view .LVU1686
 5065              	.LBE303:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5066              		.loc 1 582 11 is_stmt 1 view .LVU1687
 5067 1f78 4983E980 		sub	r9, -128	# ivtmp.400,
 5068 1f7c 4C39C6   		cmp	rsi, r8	# bnd.318, ivtmp.398
 5069 1f7f 0F87C4FE 		ja	.L477	#,
 5069      FFFF
 5070              	.L694:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5071              		.loc 1 582 11 is_stmt 0 view .LVU1688
 5072 1f85 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# bnd.318, %sfp
 5072      40
 5073 1f8a 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 5073      58
 5074 1f8f 49C1E303 		sal	r11, 3	# bnd.318,
 5075 1f93 4A8D0C1A 		lea	rcx, [rdx+r11]	# tmp.320,
 5076              	.LBB304:
 5077              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5078              		.loc 1 583 37 view .LVU1689
 5079 1f97 4C8D14CD 		lea	r10, 0[0+rcx*8]	# _55,
 5079      00000000 
 5080              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5081              		.loc 1 584 19 view .LVU1690
 5082 1f9f 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_223
 5082      08
 5083 1fa4 4A8D1418 		lea	rdx, [rax+r11]	# tmp.321,
 5084              	.LVL244:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5085              		.loc 1 583 9 is_stmt 1 view .LVU1691
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5086              		.loc 1 584 9 view .LVU1692
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5087              		.loc 1 585 9 view .LVU1693
 5088              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5089              		.loc 1 585 42 is_stmt 0 view .LVU1694
 5090 1fa8 C46283F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r15	# tmp576, *_56, shift
 5090      04CB
 5091              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5092              		.loc 1 585 63 view .LVU1695
 5093 1fae C46289F7 		shlx	r9, rdi, r14	# tmp578, source1, shift_flipped
GAS LISTING /tmp/ccdGK7kM.s 			page 146


 5093      CF
 5094              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5095              		.loc 1 585 52 view .LVU1696
 5096 1fb3 4D09C8   		or	r8, r9	# tmp579, tmp578
 5097 1fb6 4C8904D3 		mov	QWORD PTR [rbx+rdx*8], r8	# *_78, tmp579
 5098              	.LVL245:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5099              		.loc 1 586 9 is_stmt 1 view .LVU1697
 5100              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5101              		.loc 1 587 42 is_stmt 0 view .LVU1698
 5102 1fba C4E283F7 		shrx	rdi, rdi, r15	# tmp582, source1, shift
 5102      FF
 5103              	.LVL246:
 5104              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5105              		.loc 1 588 19 view .LVU1699
 5106 1fbf 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 5107              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5108              		.loc 1 587 63 view .LVU1700
 5109 1fc3 4A8B7413 		mov	rsi, QWORD PTR 16[rbx+r10]	# *_495, *_495
 5109      10
 5110              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5111              		.loc 1 586 37 view .LVU1701
 5112 1fc8 4C8D4902 		lea	r9, 2[rcx]	# _493,
 5113              	.LVL247:
 587:sieve_extend.c ****         copy_word += 2;
 5114              		.loc 1 587 9 is_stmt 1 view .LVU1702
 5115              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5116              		.loc 1 587 63 is_stmt 0 view .LVU1703
 5117 1fcc C46289F7 		shlx	r10, rsi, r14	# tmp580, *_495, shift_flipped
 5117      D6
 5118              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5119              		.loc 1 587 52 view .LVU1704
 5120 1fd1 4C09D7   		or	rdi, r10	# tmp583, tmp580
 5121 1fd4 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_501, tmp583
 5121      08
 588:sieve_extend.c ****         source_word += 2;
 5122              		.loc 1 588 9 is_stmt 1 view .LVU1705
 5123              	.LVL248:
 589:sieve_extend.c ****         distance += 2;
 5124              		.loc 1 589 9 view .LVU1706
 590:sieve_extend.c ****     }
 5125              		.loc 1 590 9 view .LVU1707
 5126              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5127              		.loc 1 590 18 is_stmt 0 view .LVU1708
 5128 1fd9 4D8D5302 		lea	r10, 2[r11]	# distance,
 5129              	.LVL249:
 590:sieve_extend.c ****     }
 5130              		.loc 1 590 18 view .LVU1709
 5131              	.LBE304:
GAS LISTING /tmp/ccdGK7kM.s 			page 147


 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5132              		.loc 1 582 11 is_stmt 1 view .LVU1710
 5133 1fdd 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 5133      48
 5134 1fe2 0F86D900 		jbe	.L480	#,
 5134      0000
 5135              	.LBB305:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5136              		.loc 1 583 9 view .LVU1711
 5137              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5138              		.loc 1 583 37 is_stmt 0 view .LVU1712
 5139 1fe8 4E8D14CD 		lea	r10, 0[0+r9*8]	# _510,
 5139      00000000 
 5140              	.LVL250:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5141              		.loc 1 584 9 is_stmt 1 view .LVU1713
 5142              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5143              		.loc 1 584 19 is_stmt 0 view .LVU1714
 5144 1ff0 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_515
 5144      08
 5145              	.LVL251:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5146              		.loc 1 585 9 is_stmt 1 view .LVU1715
 5147              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5148              		.loc 1 585 42 is_stmt 0 view .LVU1716
 5149 1ff5 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_511, *_511
 5150              	.LVL252:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5151              		.loc 1 585 42 view .LVU1717
 5152 1ff9 C4C283F7 		shrx	rsi, r9, r15	# tmp584, *_511, shift
 5152      F1
 5153              	.LVL253:
 5154              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5155              		.loc 1 585 63 view .LVU1718
 5156 1ffe C46289F7 		shlx	r9, rdi, r14	# tmp586, source1, shift_flipped
 5156      CF
 5157              	.LVL254:
 5158              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5159              		.loc 1 585 52 view .LVU1719
 5160 2003 4C09CE   		or	rsi, r9	# tmp587, tmp586
 5161 2006 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_520, tmp587
 5162              	.LVL255:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5163              		.loc 1 586 9 is_stmt 1 view .LVU1720
 5164              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5165              		.loc 1 587 42 is_stmt 0 view .LVU1721
 5166 200a C4E283F7 		shrx	rdi, rdi, r15	# tmp590, source1, shift
 5166      FF
 5167              	.LVL256:
 5168              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 148


 5169              		.loc 1 586 37 view .LVU1722
 5170 200f 4C8D4904 		lea	r9, 4[rcx]	# _523,
 5171              	.LVL257:
 587:sieve_extend.c ****         copy_word += 2;
 5172              		.loc 1 587 9 is_stmt 1 view .LVU1723
 5173              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5174              		.loc 1 587 63 is_stmt 0 view .LVU1724
 5175 2013 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_525, *_525
 5175      10
 5176              	.LVL258:
 587:sieve_extend.c ****         copy_word += 2;
 5177              		.loc 1 587 63 view .LVU1725
 5178 2018 C4C289F7 		shlx	rsi, r10, r14	# tmp588, *_525, shift_flipped
 5178      F2
 5179              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5180              		.loc 1 587 52 view .LVU1726
 5181 201d 4809F7   		or	rdi, rsi	# tmp591, tmp588
 5182 2020 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_531, tmp591
 5182      08
 588:sieve_extend.c ****         source_word += 2;
 5183              		.loc 1 588 9 is_stmt 1 view .LVU1727
 5184              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5185              		.loc 1 588 19 is_stmt 0 view .LVU1728
 5186 2025 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 5187              	.LVL259:
 589:sieve_extend.c ****         distance += 2;
 5188              		.loc 1 589 9 is_stmt 1 view .LVU1729
 590:sieve_extend.c ****     }
 5189              		.loc 1 590 9 view .LVU1730
 5190              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5191              		.loc 1 590 18 is_stmt 0 view .LVU1731
 5192 2029 4D8D5304 		lea	r10, 4[r11]	# distance,
 5193              	.LVL260:
 590:sieve_extend.c ****     }
 5194              		.loc 1 590 18 view .LVU1732
 5195              	.LBE305:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5196              		.loc 1 582 11 is_stmt 1 view .LVU1733
 5197 202d 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 5197      48
 5198 2032 0F868900 		jbe	.L480	#,
 5198      0000
 5199              	.LBB306:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5200              		.loc 1 583 9 view .LVU1734
 5201              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5202              		.loc 1 583 37 is_stmt 0 view .LVU1735
 5203 2038 4E8D14CD 		lea	r10, 0[0+r9*8]	# _540,
 5203      00000000 
 5204              	.LVL261:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5205              		.loc 1 584 9 is_stmt 1 view .LVU1736
GAS LISTING /tmp/ccdGK7kM.s 			page 149


 5206              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5207              		.loc 1 584 19 is_stmt 0 view .LVU1737
 5208 2040 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_545
 5208      08
 5209              	.LVL262:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5210              		.loc 1 585 9 is_stmt 1 view .LVU1738
 5211              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5212              		.loc 1 585 42 is_stmt 0 view .LVU1739
 5213 2045 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_541, *_541
 5214              	.LVL263:
 5215              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5216              		.loc 1 588 19 view .LVU1740
 5217 2049 4883C206 		add	rdx, 6	# copy_word,
 5218              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5219              		.loc 1 585 42 view .LVU1741
 5220 204d C4C283F7 		shrx	rsi, r9, r15	# tmp592, *_541, shift
 5220      F1
 5221              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5222              		.loc 1 585 63 view .LVU1742
 5223 2052 C46289F7 		shlx	r9, rdi, r14	# tmp594, source1, shift_flipped
 5223      CF
 5224              	.LVL264:
 5225              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5226              		.loc 1 585 52 view .LVU1743
 5227 2057 4C09CE   		or	rsi, r9	# tmp595, tmp594
 5228 205a 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_550, tmp595
 5229              	.LVL265:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5230              		.loc 1 586 9 is_stmt 1 view .LVU1744
 5231              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5232              		.loc 1 587 42 is_stmt 0 view .LVU1745
 5233 205e C4E283F7 		shrx	rdi, rdi, r15	# tmp598, source1, shift
 5233      FF
 5234              	.LVL266:
 5235              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5236              		.loc 1 586 37 view .LVU1746
 5237 2063 4883C106 		add	rcx, 6	# _553,
 5238              	.LVL267:
 587:sieve_extend.c ****         copy_word += 2;
 5239              		.loc 1 587 9 is_stmt 1 view .LVU1747
 5240              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5241              		.loc 1 587 63 is_stmt 0 view .LVU1748
 5242 2067 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_555, *_555
 5242      10
 5243              	.LVL268:
 587:sieve_extend.c ****         copy_word += 2;
 5244              		.loc 1 587 63 view .LVU1749
GAS LISTING /tmp/ccdGK7kM.s 			page 150


 5245 206c C4C289F7 		shlx	rsi, r10, r14	# tmp596, *_555, shift_flipped
 5245      F2
 5246              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5247              		.loc 1 587 52 view .LVU1750
 5248 2071 4809F7   		or	rdi, rsi	# tmp599, tmp596
 5249 2074 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_561, tmp599
 5249      08
 588:sieve_extend.c ****         source_word += 2;
 5250              		.loc 1 588 9 is_stmt 1 view .LVU1751
 5251              	.LVL269:
 589:sieve_extend.c ****         distance += 2;
 5252              		.loc 1 589 9 view .LVU1752
 590:sieve_extend.c ****     }
 5253              		.loc 1 590 9 view .LVU1753
 5254              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5255              		.loc 1 590 18 is_stmt 0 view .LVU1754
 5256 2079 4D8D5306 		lea	r10, 6[r11]	# distance,
 5257              	.LVL270:
 590:sieve_extend.c ****     }
 5258              		.loc 1 590 18 view .LVU1755
 5259              	.LBE306:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5260              		.loc 1 582 11 is_stmt 1 view .LVU1756
 5261 207d 48395424 		cmp	QWORD PTR 72[rsp], rdx	# %sfp, copy_word
 5261      48
 5262 2082 763D     		jbe	.L480	#,
 5263              	.LBB307:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5264              		.loc 1 583 9 view .LVU1757
 5265              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5266              		.loc 1 583 37 is_stmt 0 view .LVU1758
 5267 2084 4C8D0CCD 		lea	r9, 0[0+rcx*8]	# _389,
 5267      00000000 
 5268              	.LVL271:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5269              		.loc 1 584 9 is_stmt 1 view .LVU1759
 5270              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5271              		.loc 1 584 19 is_stmt 0 view .LVU1760
 5272 208c 4E8B540B 		mov	r10, QWORD PTR 8[rbx+r9]	# source1, *_394
 5272      08
 5273              	.LVL272:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5274              		.loc 1 585 9 is_stmt 1 view .LVU1761
 5275              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5276              		.loc 1 585 42 is_stmt 0 view .LVU1762
 5277 2091 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_390, *_390
 5278              	.LVL273:
 5279              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5280              		.loc 1 585 63 view .LVU1763
 5281 2095 C44289F7 		shlx	r8, r10, r14	# tmp602, source1, shift_flipped
 5281      C2
GAS LISTING /tmp/ccdGK7kM.s 			page 151


 5282              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5283              		.loc 1 585 42 view .LVU1764
 5284 209a C4E283F7 		shrx	rsi, rcx, r15	# tmp600, *_390, shift
 5284      F1
 5285              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5286              		.loc 1 585 52 view .LVU1765
 5287 209f 4C09C6   		or	rsi, r8	# tmp603, tmp602
 5288 20a2 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_399, tmp603
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5289              		.loc 1 586 9 is_stmt 1 view .LVU1766
 5290              	.LVL274:
 587:sieve_extend.c ****         copy_word += 2;
 5291              		.loc 1 587 9 view .LVU1767
 5292              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5293              		.loc 1 587 42 is_stmt 0 view .LVU1768
 5294 20a6 C44283F7 		shrx	r10, r10, r15	# tmp606, source1, shift
 5294      D2
 5295              	.LVL275:
 5296              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5297              		.loc 1 587 63 view .LVU1769
 5298 20ab 4A8B7C0B 		mov	rdi, QWORD PTR 16[rbx+r9]	# *_404, *_404
 5298      10
 5299 20b0 C46289F7 		shlx	r9, rdi, r14	# tmp604, *_404, shift_flipped
 5299      CF
 5300              	.LVL276:
 5301              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5302              		.loc 1 587 52 view .LVU1770
 5303 20b5 4D09CA   		or	r10, r9	# tmp607, tmp604
 5304 20b8 4C8954D3 		mov	QWORD PTR 8[rbx+rdx*8], r10	# *_410, tmp607
 5304      08
 588:sieve_extend.c ****         source_word += 2;
 5305              		.loc 1 588 9 is_stmt 1 view .LVU1771
 589:sieve_extend.c ****         distance += 2;
 5306              		.loc 1 589 9 view .LVU1772
 5307              	.LVL277:
 590:sieve_extend.c ****     }
 5308              		.loc 1 590 9 view .LVU1773
 5309              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5310              		.loc 1 590 18 is_stmt 0 view .LVU1774
 5311 20bd 4D8D5308 		lea	r10, 8[r11]	# distance,
 5312              	.LVL278:
 590:sieve_extend.c ****     }
 5313              		.loc 1 590 18 view .LVU1775
 5314              	.LBE307:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5315              		.loc 1 582 11 is_stmt 1 view .LVU1776
 5316              	.L480:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5317              		.loc 1 582 11 is_stmt 0 view .LVU1777
 5318 20c1 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 5318      58
GAS LISTING /tmp/ccdGK7kM.s 			page 152


 5319              	.LVL279:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5320              		.loc 1 582 11 view .LVU1778
 5321 20c6 4C01D0   		add	rax, r10	# ivtmp.360, distance
 5322              	.L475:
 592:sieve_extend.c **** }
 5323              		.loc 1 592 5 is_stmt 1 view .LVU1779
 5324              	.LVL280:
 592:sieve_extend.c **** }
 5325              		.loc 1 592 5 is_stmt 0 view .LVU1780
 5326              	.LBE319:
 5327              	.LBE324:
 740:sieve_extend.c ****     copy_word += distance;
 5328              		.loc 1 740 5 is_stmt 1 view .LVU1781
 741:sieve_extend.c **** 
 5329              		.loc 1 741 5 view .LVU1782
 743:sieve_extend.c **** 
 5330              		.loc 1 743 6 view .LVU1783
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5331              		.loc 1 746 11 view .LVU1784
 5332              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5333              		.loc 1 746 5 is_stmt 0 view .LVU1785
 5334 20c9 4C8B5C24 		mov	r11, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 5334      38
 5335 20ce 4939C3   		cmp	r11, rax	# aligned_copy_word, ivtmp.360
 5336 20d1 0F828503 		jb	.L481	#,
 5336      0000
 5337 20d7 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 5337      58
 5338 20dc 488D34C5 		lea	rsi, 0[0+rax*8]	# _33,
 5338      00000000 
 5339 20e4 488D0CFD 		lea	rcx, 0[0+rdi*8]	# _2,
 5339      00000000 
 5340 20ec 4C8D4E20 		lea	r9, 32[rsi]	# tmp619,
 5341 20f0 4C39C9   		cmp	rcx, r9	# _2, tmp619
 5342 20f3 488D14FD 		lea	rdx, 40[0+rdi*8]	# _72,
 5342      28000000 
 5343 20fb 410F9DC2 		setge	r10b	#, tmp621
 5344 20ff 4839D6   		cmp	rsi, rdx	# _33, _72
 5345 2102 410F9DC0 		setge	r8b	#, tmp623
 5346 2106 4508C2   		or	r10b, r8b	# tmp621, tmp623
 5347 2109 0F84B108 		je	.L482	#,
 5347      0000
 5348 210f 4C89DF   		mov	rdi, r11	# tmp625, aligned_copy_word
 5349 2112 4829C7   		sub	rdi, rax	# tmp625, ivtmp.360
 5350 2115 4883FF03 		cmp	rdi, 3	# tmp625,
 5351 2119 0F86A108 		jbe	.L482	#,
 5351      0000
 5352 211f 4D8D5301 		lea	r10, 1[r11]	# ivtmp.360,
 5353 2123 4D89D1   		mov	r9, r10	# niters.300, ivtmp.360
 5354 2126 4929C1   		sub	r9, rax	# niters.300, ivtmp.360
 5355 2129 4D89C8   		mov	r8, r9	# bnd.301, niters.300
 5356 212c 49C1E802 		shr	r8, 2	# bnd.301,
 5357 2130 49C1E005 		sal	r8, 5	# _606,
 5358 2134 C441796E 		vmovd	xmm10, r12d	# _12, _12
 5358      D4
GAS LISTING /tmp/ccdGK7kM.s 			page 153


 5359 2139 4D8D60E0 		lea	r12, -32[r8]	# tmp715,
 5360 213d 49C1EC05 		shr	r12, 5	# tmp713,
 5361 2141 49FFC4   		inc	r12	# tmp716
 5362 2144 4801D9   		add	rcx, rbx	# vectp.306, bitarray
 5363 2147 488D7C13 		lea	rdi, -32[rbx+rdx]	# vectp.310,
 5363      E0
 5364 214c 4801DE   		add	rsi, rbx	# vectp.315, bitarray
 5365 214f 4531DB   		xor	r11d, r11d	# ivtmp.376
 5366 2152 C441796E 		vmovd	xmm11, r13d	# _18, _18
 5366      DD
 5367 2157 4183E407 		and	r12d, 7	# tmp717,
 5368 215b 0F843401 		je	.L483	#,
 5368      0000
 5369 2161 4983FC01 		cmp	r12, 1	# tmp717,
 5370 2165 0F84FC00 		je	.L623	#,
 5370      0000
 5371 216b 4983FC02 		cmp	r12, 2	# tmp717,
 5372 216f 0F84CE00 		je	.L624	#,
 5372      0000
 5373 2175 4983FC03 		cmp	r12, 3	# tmp717,
 5374 2179 0F849F00 		je	.L625	#,
 5374      0000
 5375 217f 4983FC04 		cmp	r12, 4	# tmp717,
 5376 2183 7474     		je	.L626	#,
 5377 2185 4983FC05 		cmp	r12, 5	# tmp717,
 5378 2189 744A     		je	.L627	#,
 5379 218b 4983FC06 		cmp	r12, 6	# tmp717,
 5380 218f 7420     		je	.L628	#,
 747:sieve_extend.c ****     }
 5381              		.loc 1 747 9 is_stmt 1 view .LVU1786
 5382              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5383              		.loc 1 747 56 is_stmt 0 view .LVU1787
 5384 2191 C5FE6F19 		vmovdqu	ymm3, YMMWORD PTR [rcx]	# tmp1298, MEM[base: vectp.306_247, index: ivtmp.376_604, offset: 
 5385              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5386              		.loc 1 747 94 view .LVU1788
 5387 2195 C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1299, MEM[base: vectp.310_253, index: ivtmp.376_604, offset: 
 5388              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5389              		.loc 1 747 56 view .LVU1789
 5390 2199 C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.308, tmp1298, _12
 5390      D2
 5391              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5392              		.loc 1 747 94 view .LVU1790
 5393 219e C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.312, tmp1299, _18
 5393      F3
 5394 21a3 41BB2000 		mov	r11d, 32	# ivtmp.376,
 5394      0000
 5395              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5396              		.loc 1 747 66 view .LVU1791
 5397 21a9 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.313, vect__38.308, vect__43.312
 5398              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5399              		.loc 1 747 29 view .LVU1792
GAS LISTING /tmp/ccdGK7kM.s 			page 154


 5400 21ad C57E7F26 		vmovdqu	YMMWORD PTR [rsi], ymm12	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], vec
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5401              		.loc 1 746 43 is_stmt 1 view .LVU1793
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5402              		.loc 1 746 11 view .LVU1794
 5403              	.L628:
 747:sieve_extend.c ****     }
 5404              		.loc 1 747 9 view .LVU1795
 5405              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5406              		.loc 1 747 56 is_stmt 0 view .LVU1796
 5407 21b1 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rcx+r11]	# tmp1300, MEM[base: vectp.306_247, index: ivtmp.376_604, off
 5407      2C19
 5408              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5409              		.loc 1 747 94 view .LVU1797
 5410 21b7 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r11]	# tmp1301, MEM[base: vectp.310_253, index: ivtmp.376_604, off
 5410      3C1F
 5411              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5412              		.loc 1 747 56 view .LVU1798
 5413 21bd C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.308, tmp1300, _12
 5413      F2
 5414              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5415              		.loc 1 747 94 view .LVU1799
 5416 21c2 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.312, tmp1301, _18
 5416      CB
 5417              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5418              		.loc 1 747 66 view .LVU1800
 5419 21c7 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.313, vect__38.308, vect__43.312
 5420              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5421              		.loc 1 747 29 view .LVU1801
 5422 21cb C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm8	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], 
 5422      041E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5423              		.loc 1 746 43 is_stmt 1 view .LVU1802
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5424              		.loc 1 746 11 view .LVU1803
 5425 21d1 4983C320 		add	r11, 32	# ivtmp.376,
 5426              	.L627:
 747:sieve_extend.c ****     }
 5427              		.loc 1 747 9 view .LVU1804
 5428              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5429              		.loc 1 747 56 is_stmt 0 view .LVU1805
 5430 21d5 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rcx+r11]	# tmp1302, MEM[base: vectp.306_247, index: ivtmp.376_604, offs
 5430      0419
 5431              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5432              		.loc 1 747 94 view .LVU1806
 5433 21db C4217E6F 		vmovdqu	ymm9, YMMWORD PTR [rdi+r11]	# tmp1303, MEM[base: vectp.310_253, index: ivtmp.376_604, offs
 5433      0C1F
 5434              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 155


 5435              		.loc 1 747 56 view .LVU1807
 5436 21e1 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.308, tmp1302, _12
 5436      EA
 5437              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5438              		.loc 1 747 94 view .LVU1808
 5439 21e6 C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.312, tmp1303, _18
 5439      FB
 5440              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5441              		.loc 1 747 66 view .LVU1809
 5442 21eb C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.313, vect__38.308, vect__43.312
 5443              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5444              		.loc 1 747 29 view .LVU1810
 5445 21ef C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm3	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], 
 5445      1C1E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5446              		.loc 1 746 43 is_stmt 1 view .LVU1811
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5447              		.loc 1 746 11 view .LVU1812
 5448 21f5 4983C320 		add	r11, 32	# ivtmp.376,
 5449              	.L626:
 747:sieve_extend.c ****     }
 5450              		.loc 1 747 9 view .LVU1813
 5451              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5452              		.loc 1 747 56 is_stmt 0 view .LVU1814
 5453 21f9 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR [rcx+r11]	# tmp1304, MEM[base: vectp.306_247, index: ivtmp.376_604, offs
 5453      1419
 5454              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5455              		.loc 1 747 94 view .LVU1815
 5456 21ff C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR [rdi+r11]	# tmp1305, MEM[base: vectp.310_253, index: ivtmp.376_604, offs
 5456      341F
 5457              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5458              		.loc 1 747 56 view .LVU1816
 5459 2205 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.308, tmp1304, _12
 5459      E2
 5460              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5461              		.loc 1 747 94 view .LVU1817
 5462 220a C4414DF3 		vpsllq	ymm12, ymm6, xmm11	# vect__43.312, tmp1305, _18
 5462      E3
 5463              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5464              		.loc 1 747 66 view .LVU1818
 5465 220f C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.313, vect__38.308, vect__43.312
 5465      EC
 5466              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5467              		.loc 1 747 29 view .LVU1819
 5468 2214 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm13	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B],
 5468      2C1E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5469              		.loc 1 746 43 is_stmt 1 view .LVU1820
GAS LISTING /tmp/ccdGK7kM.s 			page 156


 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5470              		.loc 1 746 11 view .LVU1821
 5471 221a 4983C320 		add	r11, 32	# ivtmp.376,
 5472              	.L625:
 747:sieve_extend.c ****     }
 5473              		.loc 1 747 9 view .LVU1822
 5474              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5475              		.loc 1 747 56 is_stmt 0 view .LVU1823
 5476 221e C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rcx+r11]	# tmp1306, MEM[base: vectp.306_247, index: ivtmp.376_604, off
 5476      3419
 5477              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5478              		.loc 1 747 94 view .LVU1824
 5479 2224 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r11]	# tmp1307, MEM[base: vectp.310_253, index: ivtmp.376_604, offs
 5479      0C1F
 5480              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5481              		.loc 1 747 56 view .LVU1825
 5482 222a C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.308, tmp1306, _12
 5482      FA
 5483              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5484              		.loc 1 747 94 view .LVU1826
 5485 222f C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.312, tmp1307, _18
 5485      C3
 5486              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5487              		.loc 1 747 66 view .LVU1827
 5488 2234 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.313, vect__38.308, vect__43.312
 5488      C0
 5489              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5490              		.loc 1 747 29 view .LVU1828
 5491 2239 C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm0	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], 
 5491      041E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5492              		.loc 1 746 43 is_stmt 1 view .LVU1829
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5493              		.loc 1 746 11 view .LVU1830
 5494 223f 4983C320 		add	r11, 32	# ivtmp.376,
 5495              	.L624:
 747:sieve_extend.c ****     }
 5496              		.loc 1 747 9 view .LVU1831
 5497              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5498              		.loc 1 747 56 is_stmt 0 view .LVU1832
 5499 2243 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR [rcx+r11]	# tmp1308, MEM[base: vectp.306_247, index: ivtmp.376_604, offs
 5499      2C19
 5500              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5501              		.loc 1 747 94 view .LVU1833
 5502 2249 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR [rdi+r11]	# tmp1309, MEM[base: vectp.310_253, index: ivtmp.376_604, offs
 5502      3C1F
 5503              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5504              		.loc 1 747 56 view .LVU1834
GAS LISTING /tmp/ccdGK7kM.s 			page 157


 5505 224f C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.308, tmp1308, _12
 5505      CA
 5506              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5507              		.loc 1 747 94 view .LVU1835
 5508 2254 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.312, tmp1309, _18
 5508      DB
 5509              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5510              		.loc 1 747 66 view .LVU1836
 5511 2259 C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.313, vect__38.308, vect__43.312
 5512              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5513              		.loc 1 747 29 view .LVU1837
 5514 225d C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm2	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], 
 5514      141E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5515              		.loc 1 746 43 is_stmt 1 view .LVU1838
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5516              		.loc 1 746 11 view .LVU1839
 5517 2263 4983C320 		add	r11, 32	# ivtmp.376,
 5518              	.L623:
 747:sieve_extend.c ****     }
 5519              		.loc 1 747 9 view .LVU1840
 5520              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5521              		.loc 1 747 56 is_stmt 0 view .LVU1841
 5522 2267 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR [rcx+r11]	# tmp1310, MEM[base: vectp.306_247, index: ivtmp.376_604, offs
 5522      2419
 5523              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5524              		.loc 1 747 94 view .LVU1842
 5525 226d C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdi+r11]	# tmp1311, MEM[base: vectp.310_253, index: ivtmp.376_604, off
 5525      241F
 5526              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5527              		.loc 1 747 56 view .LVU1843
 5528 2273 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.308, tmp1310, _12
 5528      F2
 5529              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5530              		.loc 1 747 94 view .LVU1844
 5531 2278 C4411DF3 		vpsllq	ymm13, ymm12, xmm11	# vect__43.312, tmp1311, _18
 5531      EB
 5532              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5533              		.loc 1 747 66 view .LVU1845
 5534 227d C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.313, vect__38.308, vect__43.312
 5534      F5
 5535              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5536              		.loc 1 747 29 view .LVU1846
 5537 2282 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm14	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B],
 5537      341E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5538              		.loc 1 746 43 is_stmt 1 view .LVU1847
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccdGK7kM.s 			page 158


 5539              		.loc 1 746 11 view .LVU1848
 5540 2288 4983C320 		add	r11, 32	# ivtmp.376,
 5541 228c 4D39C3   		cmp	r11, r8	# ivtmp.376, _606
 5542 228f 0F844C01 		je	.L702	#,
 5542      0000
 5543              	.L483:
 747:sieve_extend.c ****     }
 5544              		.loc 1 747 9 discriminator 2 view .LVU1849
 5545              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5546              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1850
 5547 2295 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rcx+r11]	# tmp1241, MEM[base: vectp.306_247, index: ivtmp.376_604, off
 5547      3C19
 5548              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5549              		.loc 1 747 94 discriminator 2 view .LVU1851
 5550 229b C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r11]	# tmp1242, MEM[base: vectp.310_253, index: ivtmp.376_604, offs
 5550      041F
 5551              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5552              		.loc 1 747 56 discriminator 2 view .LVU1852
 5553 22a1 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.308, tmp1241, _12
 5553      CA
 5554              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5555              		.loc 1 747 94 discriminator 2 view .LVU1853
 5556 22a6 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.312, tmp1242, _18
 5556      C3
 5557              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5558              		.loc 1 747 66 discriminator 2 view .LVU1854
 5559 22ab C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.313, vect__38.308, vect__43.312
 5560              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5561              		.loc 1 747 29 discriminator 2 view .LVU1855
 5562 22af C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm5	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B], 
 5562      2C1E
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5563              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1856
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5564              		.loc 1 746 11 discriminator 2 view .LVU1857
 747:sieve_extend.c ****     }
 5565              		.loc 1 747 9 discriminator 2 view .LVU1858
 5566              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5567              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1859
 5568 22b5 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 32[rcx+r11]	# tmp1243, MEM[base: vectp.306_247, index: ivtmp.376_604, of
 5568      4C1920
 5569              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5570              		.loc 1 747 94 discriminator 2 view .LVU1860
 5571 22bc C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[rdi+r11]	# tmp1244, MEM[base: vectp.310_253, index: ivtmp.376_604, of
 5571      7C1F20
 5572              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5573              		.loc 1 747 56 discriminator 2 view .LVU1861
 5574 22c3 C4C135D3 		vpsrlq	ymm2, ymm9, xmm10	# vect__38.308, tmp1243, _12
GAS LISTING /tmp/ccdGK7kM.s 			page 159


 5574      D2
 5575              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5576              		.loc 1 747 94 discriminator 2 view .LVU1862
 5577 22c8 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.312, tmp1244, _18
 5577      DB
 5578              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5579              		.loc 1 747 66 discriminator 2 view .LVU1863
 5580 22cd C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__46.313, vect__38.308, vect__43.312
 5581              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5582              		.loc 1 747 29 discriminator 2 view .LVU1864
 5583 22d1 C4A17E7F 		vmovdqu	YMMWORD PTR 32[rsi+r11], ymm4	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B]
 5583      641E20
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5584              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1865
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5585              		.loc 1 746 11 discriminator 2 view .LVU1866
 747:sieve_extend.c ****     }
 5586              		.loc 1 747 9 discriminator 2 view .LVU1867
 5587              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5588              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1868
 5589 22d8 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 64[rcx+r11]	# tmp1245, MEM[base: vectp.306_247, index: ivtmp.376_604, of
 5589      741940
 5590              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5591              		.loc 1 747 94 discriminator 2 view .LVU1869
 5592 22df C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 64[rdi+r11]	# tmp1246, MEM[base: vectp.310_253, index: ivtmp.376_604, o
 5592      6C1F40
 5593              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5594              		.loc 1 747 56 discriminator 2 view .LVU1870
 5595 22e6 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.308, tmp1245, _12
 5595      E2
 5596              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5597              		.loc 1 747 94 discriminator 2 view .LVU1871
 5598 22eb C44115F3 		vpsllq	ymm14, ymm13, xmm11	# vect__43.312, tmp1246, _18
 5598      F3
 5599              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5600              		.loc 1 747 66 discriminator 2 view .LVU1872
 5601 22f0 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.313, vect__38.308, vect__43.312
 5601      FE
 5602              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5603              		.loc 1 747 29 discriminator 2 view .LVU1873
 5604 22f5 C4217E7F 		vmovdqu	YMMWORD PTR 64[rsi+r11], ymm15	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B
 5604      7C1E40
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5605              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1874
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5606              		.loc 1 746 11 discriminator 2 view .LVU1875
 747:sieve_extend.c ****     }
 5607              		.loc 1 747 9 discriminator 2 view .LVU1876
GAS LISTING /tmp/ccdGK7kM.s 			page 160


 5608              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5609              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1877
 5610 22fc C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR 96[rcx+r11]	# tmp1247, MEM[base: vectp.306_247, index: ivtmp.376_604, of
 5610      4C1960
 5611              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5612              		.loc 1 747 94 discriminator 2 view .LVU1878
 5613 2303 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+r11]	# tmp1248, MEM[base: vectp.310_253, index: ivtmp.376_604, of
 5613      441F60
 5614              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5615              		.loc 1 747 56 discriminator 2 view .LVU1879
 5616 230a C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.308, tmp1247, _12
 5616      C2
 5617              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5618              		.loc 1 747 94 discriminator 2 view .LVU1880
 5619 230f C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.312, tmp1248, _18
 5619      EB
 5620              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5621              		.loc 1 747 66 discriminator 2 view .LVU1881
 5622 2314 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.313, vect__38.308, vect__43.312
 5623              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5624              		.loc 1 747 29 discriminator 2 view .LVU1882
 5625 2318 C4217E7F 		vmovdqu	YMMWORD PTR 96[rsi+r11], ymm9	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B]
 5625      4C1E60
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5626              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1883
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5627              		.loc 1 746 11 discriminator 2 view .LVU1884
 747:sieve_extend.c ****     }
 5628              		.loc 1 747 9 discriminator 2 view .LVU1885
 5629              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5630              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1886
 5631 231f C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[rcx+r11]	# tmp1249, MEM[base: vectp.306_247, index: ivtmp.376_604, o
 5631      94198000 
 5631      0000
 5632              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5633              		.loc 1 747 94 discriminator 2 view .LVU1887
 5634 2329 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[rdi+r11]	# tmp1250, MEM[base: vectp.310_253, index: ivtmp.376_604, o
 5634      BC1F8000 
 5634      0000
 5635              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5636              		.loc 1 747 56 discriminator 2 view .LVU1888
 5637 2333 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.308, tmp1249, _12
 5637      E2
 5638              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5639              		.loc 1 747 94 discriminator 2 view .LVU1889
 5640 2338 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.312, tmp1250, _18
 5640      DB
GAS LISTING /tmp/ccdGK7kM.s 			page 161


 5641              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5642              		.loc 1 747 66 discriminator 2 view .LVU1890
 5643 233d C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.313, vect__38.308, vect__43.312
 5644              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5645              		.loc 1 747 29 discriminator 2 view .LVU1891
 5646 2341 C4A17E7F 		vmovdqu	YMMWORD PTR 128[rsi+r11], ymm6	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B
 5646      B41E8000 
 5646      0000
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5647              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1892
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5648              		.loc 1 746 11 discriminator 2 view .LVU1893
 747:sieve_extend.c ****     }
 5649              		.loc 1 747 9 discriminator 2 view .LVU1894
 5650              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5651              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1895
 5652 234b C4217E6F 		vmovdqu	ymm12, YMMWORD PTR 160[rcx+r11]	# tmp1251, MEM[base: vectp.306_247, index: ivtmp.376_604, 
 5652      A419A000 
 5652      0000
 5653              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5654              		.loc 1 747 94 discriminator 2 view .LVU1896
 5655 2355 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR 160[rdi+r11]	# tmp1252, MEM[base: vectp.310_253, index: ivtmp.376_604, 
 5655      B41FA000 
 5655      0000
 5656              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5657              		.loc 1 747 56 discriminator 2 view .LVU1897
 5658 235f C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.308, tmp1251, _12
 5658      EA
 5659              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5660              		.loc 1 747 94 discriminator 2 view .LVU1898
 5661 2364 C4410DF3 		vpsllq	ymm15, ymm14, xmm11	# vect__43.312, tmp1252, _18
 5661      FB
 5662              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5663              		.loc 1 747 66 discriminator 2 view .LVU1899
 5664 2369 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.313, vect__38.308, vect__43.312
 5664      CF
 5665              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5666              		.loc 1 747 29 discriminator 2 view .LVU1900
 5667 236e C4A17E7F 		vmovdqu	YMMWORD PTR 160[rsi+r11], ymm1	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B
 5667      8C1EA000 
 5667      0000
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5668              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1901
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5669              		.loc 1 746 11 discriminator 2 view .LVU1902
 747:sieve_extend.c ****     }
 5670              		.loc 1 747 9 discriminator 2 view .LVU1903
 5671              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 162


 5672              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1904
 5673 2378 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 192[rcx+r11]	# tmp1253, MEM[base: vectp.306_247, index: ivtmp.376_604, o
 5673      8419C000 
 5673      0000
 5674              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5675              		.loc 1 747 94 discriminator 2 view .LVU1905
 5676 2382 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+r11]	# tmp1254, MEM[base: vectp.310_253, index: ivtmp.376_604, o
 5676      AC1FC000 
 5676      0000
 5677              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5678              		.loc 1 747 56 discriminator 2 view .LVU1906
 5679 238c C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.308, tmp1253, _12
 5679      C2
 5680              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5681              		.loc 1 747 94 discriminator 2 view .LVU1907
 5682 2391 C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.312, tmp1254, _18
 5682      CB
 5683              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5684              		.loc 1 747 66 discriminator 2 view .LVU1908
 5685 2396 C4C17DEB 		vpor	ymm2, ymm0, ymm9	# vect__46.313, vect__38.308, vect__43.312
 5685      D1
 5686              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5687              		.loc 1 747 29 discriminator 2 view .LVU1909
 5688 239b C4A17E7F 		vmovdqu	YMMWORD PTR 192[rsi+r11], ymm2	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0B
 5688      941EC000 
 5688      0000
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5689              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1910
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5690              		.loc 1 746 11 discriminator 2 view .LVU1911
 747:sieve_extend.c ****     }
 5691              		.loc 1 747 9 discriminator 2 view .LVU1912
 5692              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5693              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU1913
 5694 23a5 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 224[rcx+r11]	# tmp1255, MEM[base: vectp.306_247, index: ivtmp.376_604, o
 5694      A419E000 
 5694      0000
 5695              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5696              		.loc 1 747 94 discriminator 2 view .LVU1914
 5697 23af C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[rdi+r11]	# tmp1256, MEM[base: vectp.310_253, index: ivtmp.376_604, o
 5697      BC1FE000 
 5697      0000
 5698              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5699              		.loc 1 747 56 discriminator 2 view .LVU1915
 5700 23b9 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.308, tmp1255, _12
 5700      F2
 5701              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5702              		.loc 1 747 94 discriminator 2 view .LVU1916
GAS LISTING /tmp/ccdGK7kM.s 			page 163


 5703 23be C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.312, tmp1256, _18
 5703      DB
 5704              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5705              		.loc 1 747 66 discriminator 2 view .LVU1917
 5706 23c3 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.313, vect__38.308, vect__43.312
 5707              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5708              		.loc 1 747 29 discriminator 2 view .LVU1918
 5709 23c7 C4217E7F 		vmovdqu	YMMWORD PTR 224[rsi+r11], ymm12	# MEM[base: vectp.315_261, index: ivtmp.376_604, offset: 0
 5709      A41EE000 
 5709      0000
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5710              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU1919
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5711              		.loc 1 746 11 discriminator 2 view .LVU1920
 5712 23d1 4981C300 		add	r11, 256	# ivtmp.376,
 5712      010000
 5713 23d8 4D39C3   		cmp	r11, r8	# ivtmp.376, _606
 5714 23db 0F85B4FE 		jne	.L483	#,
 5714      FFFF
 5715              	.L702:
 5716 23e1 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 5716      58
 5717 23e6 4D89CD   		mov	r13, r9	# niters_vector_mult_vf.302, niters.300
 5718 23e9 4983E5FC 		and	r13, -4	# niters_vector_mult_vf.302,
 5719 23ed 4C01EA   		add	rdx, r13	# _183, niters_vector_mult_vf.302
 5720 23f0 4C01E8   		add	rax, r13	# tmp.304, niters_vector_mult_vf.302
 5721 23f3 4D39E9   		cmp	r9, r13	# niters.300, niters_vector_mult_vf.302
 5722 23f6 7461     		je	.L486	#,
 5723              	.LVL281:
 747:sieve_extend.c ****     }
 5724              		.loc 1 747 9 view .LVU1921
 5725              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5726              		.loc 1 746 5 is_stmt 0 view .LVU1922
 5727 23f8 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 5727      38
 5728              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5729              		.loc 1 747 94 view .LVU1923
 5730 23fd C4E289F7 		shlx	rcx, QWORD PTR 8[rbx+rdx*8], r14	# tmp638, *_484, shift_flipped
 5730      4CD308
 5731              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5732              		.loc 1 747 56 view .LVU1924
 5733 2404 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rdx*8], r15	# tmp640, *_110, shift
 5733      34D3
 5734              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5735              		.loc 1 746 52 view .LVU1925
 5736 240a 488D7801 		lea	rdi, 1[rax]	# copy_word,
 5737              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5738              		.loc 1 747 66 view .LVU1926
 5739 240e 4809F1   		or	rcx, rsi	# tmp642, tmp640
 5740 2411 48890CC3 		mov	QWORD PTR [rbx+rax*8], rcx	# *_487, tmp642
GAS LISTING /tmp/ccdGK7kM.s 			page 164


 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5741              		.loc 1 746 43 is_stmt 1 view .LVU1927
 5742              	.LVL282:
 5743              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5744              		.loc 1 747 77 is_stmt 0 view .LVU1928
 5745 2415 4C8D4A01 		lea	r9, 1[rdx]	# _113,
 5746              	.LVL283:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5747              		.loc 1 746 11 is_stmt 1 view .LVU1929
 5748              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5749              		.loc 1 746 5 is_stmt 0 view .LVU1930
 5750 2419 4939F8   		cmp	r8, rdi	# aligned_copy_word, copy_word
 5751 241c 723B     		jb	.L486	#,
 747:sieve_extend.c ****     }
 5752              		.loc 1 747 9 is_stmt 1 view .LVU1931
 5753              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5754              		.loc 1 747 56 is_stmt 0 view .LVU1932
 5755 241e 4E8B2CCB 		mov	r13, QWORD PTR [rbx+r9*8]	# *_38, *_38
 5756              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5757              		.loc 1 747 94 view .LVU1933
 5758 2422 C42289F7 		shlx	r11, QWORD PTR 8[rbx+r9*8], r14	# tmp643, *_43, shift_flipped
 5758      5CCB08
 5759              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5760              		.loc 1 747 77 view .LVU1934
 5761 2429 4C8D6202 		lea	r12, 2[rdx]	# _41,
 5762              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5763              		.loc 1 746 52 view .LVU1935
 5764 242d 4883C002 		add	rax, 2	# copy_word,
 5765              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5766              		.loc 1 747 56 view .LVU1936
 5767 2431 C4C283F7 		shrx	rdx, r13, r15	# tmp645, *_38, shift
 5767      D5
 5768              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5769              		.loc 1 747 66 view .LVU1937
 5770 2436 4909D3   		or	r11, rdx	# tmp647, tmp645
 5771 2439 4C891CFB 		mov	QWORD PTR [rbx+rdi*8], r11	# *_82, tmp647
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5772              		.loc 1 746 43 is_stmt 1 view .LVU1938
 5773              	.LVL284:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5774              		.loc 1 746 11 view .LVU1939
 5775              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5776              		.loc 1 746 5 is_stmt 0 view .LVU1940
 5777 243d 4939C0   		cmp	r8, rax	# aligned_copy_word, copy_word
 5778 2440 7217     		jb	.L486	#,
 747:sieve_extend.c ****     }
 5779              		.loc 1 747 9 is_stmt 1 view .LVU1941
 5780              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccdGK7kM.s 			page 165


 747:sieve_extend.c ****     }
 5781              		.loc 1 747 56 is_stmt 0 view .LVU1942
 5782 2442 4E8B0CE3 		mov	r9, QWORD PTR [rbx+r12*8]	# *_228, *_228
 5783              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5784              		.loc 1 747 94 view .LVU1943
 5785 2446 C42289F7 		shlx	r14, QWORD PTR 8[rbx+r12*8], r14	# tmp648, *_233, shift_flipped
 5785      74E308
 5786              	.LVL285:
 5787              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5788              		.loc 1 747 56 view .LVU1944
 5789 244d C44283F7 		shrx	r15, r9, r15	# tmp650, *_228, shift
 5789      F9
 5790              	.LVL286:
 5791              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 5792              		.loc 1 747 66 view .LVU1945
 5793 2452 4D09FE   		or	r14, r15	# tmp652, tmp650
 5794 2455 4C8934C3 		mov	QWORD PTR [rbx+rax*8], r14	# *_237, tmp652
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5795              		.loc 1 746 43 is_stmt 1 view .LVU1946
 5796              	.LVL287:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5797              		.loc 1 746 11 view .LVU1947
 5798              	.L486:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5799              		.loc 1 746 11 is_stmt 0 view .LVU1948
 5800 2459 4C89D0   		mov	rax, r10	# ivtmp.360, ivtmp.360
 5801              	.L481:
 750:sieve_extend.c **** 
 5802              		.loc 1 750 5 is_stmt 1 view .LVU1949
 5803              	# sieve_extend.c:750:     if (copy_word >= destination_stop_word) return;
 750:sieve_extend.c **** 
 5804              		.loc 1 750 8 is_stmt 0 view .LVU1950
 5805 245c 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5805      50
 5806 2461 4839C6   		cmp	rsi, rax	# destination_stop_word, ivtmp.360
 5807 2464 0F864204 		jbe	.L724	#,
 5807      0000
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5808              		.loc 1 752 5 is_stmt 1 view .LVU1951
 5809              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5810              		.loc 1 752 17 is_stmt 0 view .LVU1952
 5811 246a 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# size, %sfp
 5811      18
 5812 246f 4989C5   		mov	r13, rax	# source_word, ivtmp.360
 5813              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5814              		.loc 1 756 21 view .LVU1953
 5815 2472 498D0C00 		lea	rcx, [r8+rax]	# ivtmp.360,
 5816              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5817              		.loc 1 752 17 view .LVU1954
 5818 2476 4D29C5   		sub	r13, r8	# source_word, size
 5819              	.LVL288:
GAS LISTING /tmp/ccdGK7kM.s 			page 166


 753:sieve_extend.c **** 
 5820              		.loc 1 753 5 is_stmt 1 view .LVU1955
 5821              	# sieve_extend.c:753:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 753:sieve_extend.c **** 
 5822              		.loc 1 753 18 is_stmt 0 view .LVU1956
 5823 2479 4E8D34C5 		lea	r14, 0[0+r8*8]	# memsize,
 5823      00000000 
 5824              	.LVL289:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5825              		.loc 1 756 5 is_stmt 1 view .LVU1957
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5826              		.loc 1 756 11 view .LVU1958
 5827              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5828              		.loc 1 756 5 is_stmt 0 view .LVU1959
 5829 2481 4839CE   		cmp	rsi, rcx	# destination_stop_word, ivtmp.360
 5830 2484 0F826301 		jb	.L488	#,
 5830      0000
 5831 248a 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp665,
 5832 248e 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# tmp666,
 5832      00000000 
 5833              	# sieve_extend.c:757:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 757:sieve_extend.c **** 
 5834              		.loc 1 757 38 view .LVU1960
 5835 2496 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 5836 249a 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 5836      48
 5837 249f 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 5837      40
 5838 24a4 4D29DC   		sub	r12, r11	# _584, tmp666
 5839 24a7 4889F3   		mov	rbx, rsi	# destination_stop_word, destination_stop_word
 5840              	.LVL290:
 757:sieve_extend.c **** 
 5841              		.loc 1 757 38 view .LVU1961
 5842 24aa 4D89C5   		mov	r13, r8	# size, size
 5843              	.LVL291:
 757:sieve_extend.c **** 
 5844              		.loc 1 757 38 view .LVU1962
 5845 24ad C5F877   		vzeroupper
 5846              	.L489:
 757:sieve_extend.c **** 
 5847              		.loc 1 757 9 is_stmt 1 discriminator 2 view .LVU1963
 5848              	.LVL292:
 5849              	.LBB325:
 5850              	.LBI325:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5851              		.loc 2 31 1 discriminator 2 view .LVU1964
 5852              	.LBB326:
 5853              		.loc 2 34 3 discriminator 2 view .LVU1965
 5854              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5855              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1966
 5856 24b0 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp668,
 5857 24b4 4C89F2   		mov	rdx, r14	#, memsize
 5858 24b7 4C89FE   		mov	rsi, r15	#, _48
 5859 24ba 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.360
 5859      58
 5860 24bf E8000000 		call	memcpy@PLT	#
GAS LISTING /tmp/ccdGK7kM.s 			page 167


 5860      00
 5861              	.LVL293:
 5862              		.loc 2 34 10 discriminator 2 view .LVU1967
 5863              	.LBE326:
 5864              	.LBE325:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5865              		.loc 1 756 54 is_stmt 1 discriminator 2 view .LVU1968
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5866              		.loc 1 756 11 discriminator 2 view .LVU1969
 5867 24c4 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 5867      58
 5868 24c9 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.360,
 5869              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5870              		.loc 1 756 5 is_stmt 0 discriminator 2 view .LVU1970
 5871 24cd 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.360
 5872 24d0 0F820201 		jb	.L714	#,
 5872      0000
 757:sieve_extend.c **** 
 5873              		.loc 1 757 9 is_stmt 1 view .LVU1971
 5874              	.LVL294:
 5875              	.LBB334:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5876              		.loc 2 31 1 view .LVU1972
 5877              	.LBB327:
 5878              		.loc 2 34 3 view .LVU1973
 5879              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5880              		.loc 2 34 10 is_stmt 0 view .LVU1974
 5881 24d6 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp967,
 5882 24da 4C89F2   		mov	rdx, r14	#, memsize
 5883 24dd 4C89FE   		mov	rsi, r15	#, _48
 5884 24e0 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.360
 5884      58
 5885              	.LVL295:
 5886              		.loc 2 34 10 view .LVU1975
 5887 24e5 E8000000 		call	memcpy@PLT	#
 5887      00
 5888              	.LVL296:
 5889              		.loc 2 34 10 view .LVU1976
 5890              	.LBE327:
 5891              	.LBE334:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5892              		.loc 1 756 54 is_stmt 1 view .LVU1977
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5893              		.loc 1 756 11 view .LVU1978
 5894 24ea 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 5894      58
 5895 24ef 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.360,
 5896              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5897              		.loc 1 756 5 is_stmt 0 view .LVU1979
 5898 24f3 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.360
 5899 24f6 0F82DC00 		jb	.L714	#,
 5899      0000
 757:sieve_extend.c **** 
 5900              		.loc 1 757 9 is_stmt 1 view .LVU1980
 5901              	.LVL297:
GAS LISTING /tmp/ccdGK7kM.s 			page 168


 5902              	.LBB335:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5903              		.loc 2 31 1 view .LVU1981
 5904              	.LBB328:
 5905              		.loc 2 34 3 view .LVU1982
 5906              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5907              		.loc 2 34 10 is_stmt 0 view .LVU1983
 5908 24fc 4C89F2   		mov	rdx, r14	#, memsize
 5909 24ff 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp970,
 5910 2503 4C89FE   		mov	rsi, r15	#, _48
 5911 2506 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.360
 5911      58
 5912 250b E8000000 		call	memcpy@PLT	#
 5912      00
 5913              	.LVL298:
 5914              		.loc 2 34 10 view .LVU1984
 5915              	.LBE328:
 5916              	.LBE335:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5917              		.loc 1 756 54 is_stmt 1 view .LVU1985
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5918              		.loc 1 756 11 view .LVU1986
 5919 2510 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 5919      58
 5920 2515 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.360,
 5921              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5922              		.loc 1 756 5 is_stmt 0 view .LVU1987
 5923 2519 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.360
 5924 251c 0F82B600 		jb	.L714	#,
 5924      0000
 757:sieve_extend.c **** 
 5925              		.loc 1 757 9 is_stmt 1 view .LVU1988
 5926              	.LVL299:
 5927              	.LBB336:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5928              		.loc 2 31 1 view .LVU1989
 5929              	.LBB329:
 5930              		.loc 2 34 3 view .LVU1990
 5931              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5932              		.loc 2 34 10 is_stmt 0 view .LVU1991
 5933 2522 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.360
 5933      58
 5934 2527 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp973,
 5935 252b 4C89FE   		mov	rsi, r15	#, _48
 5936 252e 4C89F2   		mov	rdx, r14	#, memsize
 5937 2531 E8000000 		call	memcpy@PLT	#
 5937      00
 5938              	.LVL300:
 5939              		.loc 2 34 10 view .LVU1992
 5940              	.LBE329:
 5941              	.LBE336:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5942              		.loc 1 756 54 is_stmt 1 view .LVU1993
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5943              		.loc 1 756 11 view .LVU1994
 5944 2536 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
GAS LISTING /tmp/ccdGK7kM.s 			page 169


 5944      58
 5945 253b 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.360,
 5946              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5947              		.loc 1 756 5 is_stmt 0 view .LVU1995
 5948 253f 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.360
 5949 2542 0F829000 		jb	.L714	#,
 5949      0000
 757:sieve_extend.c **** 
 5950              		.loc 1 757 9 is_stmt 1 view .LVU1996
 5951              	.LVL301:
 5952              	.LBB337:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5953              		.loc 2 31 1 view .LVU1997
 5954              	.LBB330:
 5955              		.loc 2 34 3 view .LVU1998
 5956              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5957              		.loc 2 34 10 is_stmt 0 view .LVU1999
 5958 2548 4C89FE   		mov	rsi, r15	#, _48
 5959 254b 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp976,
 5960 254f 4C89F2   		mov	rdx, r14	#, memsize
 5961 2552 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.360
 5961      58
 5962 2557 E8000000 		call	memcpy@PLT	#
 5962      00
 5963              	.LVL302:
 5964              		.loc 2 34 10 view .LVU2000
 5965              	.LBE330:
 5966              	.LBE337:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5967              		.loc 1 756 54 is_stmt 1 view .LVU2001
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5968              		.loc 1 756 11 view .LVU2002
 5969 255c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 5969      58
 5970 2561 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.360,
 5971              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5972              		.loc 1 756 5 is_stmt 0 view .LVU2003
 5973 2565 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.360
 5974 2568 726E     		jb	.L714	#,
 757:sieve_extend.c **** 
 5975              		.loc 1 757 9 is_stmt 1 view .LVU2004
 5976              	.LVL303:
 5977              	.LBB338:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5978              		.loc 2 31 1 view .LVU2005
 5979              	.LBB331:
 5980              		.loc 2 34 3 view .LVU2006
 5981              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5982              		.loc 2 34 10 is_stmt 0 view .LVU2007
 5983 256a 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.360
 5983      58
 5984 256f 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp979,
 5985 2573 4C89F2   		mov	rdx, r14	#, memsize
 5986 2576 4C89FE   		mov	rsi, r15	#, _48
 5987 2579 E8000000 		call	memcpy@PLT	#
GAS LISTING /tmp/ccdGK7kM.s 			page 170


 5987      00
 5988              	.LVL304:
 5989              		.loc 2 34 10 view .LVU2008
 5990              	.LBE331:
 5991              	.LBE338:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5992              		.loc 1 756 54 is_stmt 1 view .LVU2009
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5993              		.loc 1 756 11 view .LVU2010
 5994 257e 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 5994      58
 5995 2583 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.360,
 5996              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5997              		.loc 1 756 5 is_stmt 0 view .LVU2011
 5998 2587 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.360
 5999 258a 724C     		jb	.L714	#,
 757:sieve_extend.c **** 
 6000              		.loc 1 757 9 is_stmt 1 view .LVU2012
 6001              	.LVL305:
 6002              	.LBB339:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6003              		.loc 2 31 1 view .LVU2013
 6004              	.LBB332:
 6005              		.loc 2 34 3 view .LVU2014
 6006              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6007              		.loc 2 34 10 is_stmt 0 view .LVU2015
 6008 258c 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp982,
 6009 2590 4C89F2   		mov	rdx, r14	#, memsize
 6010 2593 4C89FE   		mov	rsi, r15	#, _48
 6011 2596 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.360
 6011      58
 6012 259b E8000000 		call	memcpy@PLT	#
 6012      00
 6013              	.LVL306:
 6014              		.loc 2 34 10 view .LVU2016
 6015              	.LBE332:
 6016              	.LBE339:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6017              		.loc 1 756 54 is_stmt 1 view .LVU2017
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6018              		.loc 1 756 11 view .LVU2018
 6019 25a0 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 6019      58
 6020 25a5 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.360,
 6021              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6022              		.loc 1 756 5 is_stmt 0 view .LVU2019
 6023 25a9 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.360
 6024 25ac 722A     		jb	.L714	#,
 757:sieve_extend.c **** 
 6025              		.loc 1 757 9 is_stmt 1 view .LVU2020
 6026              	.LVL307:
 6027              	.LBB340:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6028              		.loc 2 31 1 view .LVU2021
 6029              	.LBB333:
GAS LISTING /tmp/ccdGK7kM.s 			page 171


 6030              		.loc 2 34 3 view .LVU2022
 6031              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6032              		.loc 2 34 10 is_stmt 0 view .LVU2023
 6033 25ae 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp985,
 6034 25b2 4C89F2   		mov	rdx, r14	#, memsize
 6035 25b5 4C89FE   		mov	rsi, r15	#, _48
 6036 25b8 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.360
 6036      58
 6037 25bd E8000000 		call	memcpy@PLT	#
 6037      00
 6038              	.LVL308:
 6039              		.loc 2 34 10 view .LVU2024
 6040              	.LBE333:
 6041              	.LBE340:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6042              		.loc 1 756 54 is_stmt 1 view .LVU2025
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6043              		.loc 1 756 11 view .LVU2026
 6044 25c2 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.360, %sfp
 6044      58
 6045              	.LVL309:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6046              		.loc 1 756 11 is_stmt 0 view .LVU2027
 6047 25c7 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.360,
 6048              	.LVL310:
 6049              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6050              		.loc 1 756 5 view .LVU2028
 6051 25cb 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.360
 6052 25ce 0F83DCFE 		jnb	.L489	#,
 6052      FFFF
 6053              	.LVL311:
 6054              		.p2align 4,,10
 6055 25d4 0F1F4000 		.p2align 3
 6056              	.L714:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6057              		.loc 1 756 5 view .LVU2029
 6058 25d8 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 6058      48
 6059 25dd 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 6059      40
 6060              	.LVL312:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6061              		.loc 1 760 11 is_stmt 1 view .LVU2030
 6062              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6063              		.loc 1 760 5 is_stmt 0 view .LVU2031
 6064 25e2 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.360
 6064      50
 6065 25e7 0F820402 		jb	.L725	#,
 6065      0000
 6066              	.LVL313:
 6067              	.L488:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6068              		.loc 1 760 5 view .LVU2032
 6069 25ed 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 6069      00000000 
GAS LISTING /tmp/ccdGK7kM.s 			page 172


 6070 25f5 4A8D3CED 		lea	rdi, 0[0+r13*8]	# _187,
 6070      00000000 
 6071 25fd 4D8D6720 		lea	r12, 32[r15]	# tmp675,
 6072 2601 4C39E7   		cmp	rdi, r12	# _187, tmp675
 6073 2604 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 6073      20000000 
 6074              	.LVL314:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6075              		.loc 1 760 5 view .LVU2033
 6076 260c 410F9DC1 		setge	r9b	#, tmp677
 6077 2610 4D39F7   		cmp	r15, r14	# _195, _197
 6078 2613 0F9DC2   		setge	dl	#, tmp679
 6079 2616 4108D1   		or	r9b, dl	# tmp677, tmp679
 6080 2619 0F84E101 		je	.L491	#,
 6080      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6081              		.loc 1 760 5 view .LVU2034
 6082 261f 4C8B5424 		mov	r10, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6082      50
 6083 2624 4C89D6   		mov	rsi, r10	# tmp681, destination_stop_word
 6084 2627 4829C6   		sub	rsi, rax	# tmp681, ivtmp.360
 6085 262a 4883FE08 		cmp	rsi, 8	# tmp681,
 6086 262e 0F86CC01 		jbe	.L491	#,
 6086      0000
 6087 2634 4D8D4201 		lea	r8, 1[r10]	# tmp684,
 6088 2638 4929C0   		sub	r8, rax	# niters.290, ivtmp.360
 6089 263b 4D89C3   		mov	r11, r8	# bnd.291, niters.290
 6090 263e 49C1EB02 		shr	r11, 2	# bnd.291,
 6091 2642 49C1E305 		sal	r11, 5	# _577,
 6092 2646 498D4BE0 		lea	rcx, -32[r11]	# tmp703,
 6093 264a 48C1E905 		shr	rcx, 5	# tmp701,
 6094 264e 48FFC1   		inc	rcx	# tmp704
 6095 2651 4801DF   		add	rdi, rbx	# vectp.296, bitarray
 6096 2654 4901DF   		add	r15, rbx	# vectp.299, bitarray
 6097              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6098              		.loc 1 746 5 view .LVU2035
 6099 2657 4531F6   		xor	r14d, r14d	# ivtmp.352
 6100 265a 83E107   		and	ecx, 7	# tmp705,
 6101 265d 0F849C00 		je	.L492	#,
 6101      0000
 6102 2663 4883F901 		cmp	rcx, 1	# tmp705,
 6103 2667 747D     		je	.L636	#,
 6104 2669 4883F902 		cmp	rcx, 2	# tmp705,
 6105 266d 7467     		je	.L637	#,
 6106 266f 4883F903 		cmp	rcx, 3	# tmp705,
 6107 2673 7451     		je	.L638	#,
 6108 2675 4883F904 		cmp	rcx, 4	# tmp705,
 6109 2679 743B     		je	.L639	#,
 6110 267b 4883F905 		cmp	rcx, 5	# tmp705,
 6111 267f 7425     		je	.L640	#,
 6112 2681 4883F906 		cmp	rcx, 6	# tmp705,
 6113 2685 740F     		je	.L641	#,
 6114              	.LVL315:
 761:sieve_extend.c **** 
 6115              		.loc 1 761 9 is_stmt 1 view .LVU2036
 6116              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 173


 761:sieve_extend.c **** 
 6117              		.loc 1 761 29 is_stmt 0 view .LVU2037
 6118 2687 C57E6F17 		vmovdqu	ymm10, YMMWORD PTR [rdi]	# tmp1291, MEM[base: vectp.296_146, index: ivtmp.352_575, offset:
 6119 268b 41BE2000 		mov	r14d, 32	# ivtmp.352,
 6119      0000
 6120 2691 C4417E7F 		vmovdqu	YMMWORD PTR [r15], ymm10	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B], tmp
 6120      17
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6121              		.loc 1 760 48 is_stmt 1 view .LVU2038
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6122              		.loc 1 760 11 view .LVU2039
 6123              	.L641:
 761:sieve_extend.c **** 
 6124              		.loc 1 761 9 view .LVU2040
 6125              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6126              		.loc 1 761 29 is_stmt 0 view .LVU2041
 6127 2696 C4217E6F 		vmovdqu	ymm11, YMMWORD PTR [rdi+r14]	# tmp1292, MEM[base: vectp.296_146, index: ivtmp.352_575, off
 6127      1C37
 6128 269c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm11	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B],
 6128      1C37
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6129              		.loc 1 760 48 is_stmt 1 view .LVU2042
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6130              		.loc 1 760 11 view .LVU2043
 6131 26a2 4983C620 		add	r14, 32	# ivtmp.352,
 6132              	.L640:
 761:sieve_extend.c **** 
 6133              		.loc 1 761 9 view .LVU2044
 6134              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6135              		.loc 1 761 29 is_stmt 0 view .LVU2045
 6136 26a6 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rdi+r14]	# tmp1293, MEM[base: vectp.296_146, index: ivtmp.352_575, off
 6136      2C37
 6137 26ac C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm13	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B],
 6137      2C37
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6138              		.loc 1 760 48 is_stmt 1 view .LVU2046
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6139              		.loc 1 760 11 view .LVU2047
 6140 26b2 4983C620 		add	r14, 32	# ivtmp.352,
 6141              	.L639:
 761:sieve_extend.c **** 
 6142              		.loc 1 761 9 view .LVU2048
 6143              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6144              		.loc 1 761 29 is_stmt 0 view .LVU2049
 6145 26b6 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rdi+r14]	# tmp1294, MEM[base: vectp.296_146, index: ivtmp.352_575, off
 6145      3437
 6146 26bc C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm14	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B],
 6146      3437
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6147              		.loc 1 760 48 is_stmt 1 view .LVU2050
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6148              		.loc 1 760 11 view .LVU2051
 6149 26c2 4983C620 		add	r14, 32	# ivtmp.352,
 6150              	.L638:
GAS LISTING /tmp/ccdGK7kM.s 			page 174


 761:sieve_extend.c **** 
 6151              		.loc 1 761 9 view .LVU2052
 6152              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6153              		.loc 1 761 29 is_stmt 0 view .LVU2053
 6154 26c6 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r14]	# tmp1295, MEM[base: vectp.296_146, index: ivtmp.352_575, off
 6154      3C37
 6155 26cc C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm15	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B],
 6155      3C37
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6156              		.loc 1 760 48 is_stmt 1 view .LVU2054
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6157              		.loc 1 760 11 view .LVU2055
 6158 26d2 4983C620 		add	r14, 32	# ivtmp.352,
 6159              	.L637:
 761:sieve_extend.c **** 
 6160              		.loc 1 761 9 view .LVU2056
 6161              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6162              		.loc 1 761 29 is_stmt 0 view .LVU2057
 6163 26d6 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r14]	# tmp1296, MEM[base: vectp.296_146, index: ivtmp.352_575, offs
 6163      0C37
 6164 26dc C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm1	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B], 
 6164      0C37
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6165              		.loc 1 760 48 is_stmt 1 view .LVU2058
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6166              		.loc 1 760 11 view .LVU2059
 6167 26e2 4983C620 		add	r14, 32	# ivtmp.352,
 6168              	.L636:
 761:sieve_extend.c **** 
 6169              		.loc 1 761 9 view .LVU2060
 6170              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6171              		.loc 1 761 29 is_stmt 0 view .LVU2061
 6172 26e6 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r14]	# tmp1297, MEM[base: vectp.296_146, index: ivtmp.352_575, offs
 6172      0437
 6173 26ec C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm8	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B], 
 6173      0437
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6174              		.loc 1 760 48 is_stmt 1 view .LVU2062
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6175              		.loc 1 760 11 view .LVU2063
 6176 26f2 4983C620 		add	r14, 32	# ivtmp.352,
 6177 26f6 4D39DE   		cmp	r14, r11	# ivtmp.352, _577
 6178 26f9 0F849600 		je	.L699	#,
 6178      0000
 6179              	.L492:
 761:sieve_extend.c **** 
 6180              		.loc 1 761 9 discriminator 2 view .LVU2064
 6181              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6182              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2065
 6183 26ff C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rdi+r14]	# tmp1278, MEM[base: vectp.296_146, index: ivtmp.352_575, offs
 6183      0437
 6184 2705 C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm0	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B], 
 6184      0437
GAS LISTING /tmp/ccdGK7kM.s 			page 175


 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6185              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2066
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6186              		.loc 1 760 11 discriminator 2 view .LVU2067
 761:sieve_extend.c **** 
 6187              		.loc 1 761 9 discriminator 2 view .LVU2068
 6188              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6189              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2069
 6190 270b C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[rdi+r14]	# tmp1279, MEM[base: vectp.296_146, index: ivtmp.352_575, of
 6190      6C3720
 6191 2712 C4817E7F 		vmovdqu	YMMWORD PTR 32[r15+r14], ymm5	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B]
 6191      6C3720
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6192              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2070
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6193              		.loc 1 760 11 discriminator 2 view .LVU2071
 761:sieve_extend.c **** 
 6194              		.loc 1 761 9 discriminator 2 view .LVU2072
 6195              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6196              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2073
 6197 2719 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 64[rdi+r14]	# tmp1280, MEM[base: vectp.296_146, index: ivtmp.352_575, of
 6197      4C3740
 6198 2720 C4017E7F 		vmovdqu	YMMWORD PTR 64[r15+r14], ymm9	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B]
 6198      4C3740
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6199              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2074
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6200              		.loc 1 760 11 discriminator 2 view .LVU2075
 761:sieve_extend.c **** 
 6201              		.loc 1 761 9 discriminator 2 view .LVU2076
 6202              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6203              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2077
 6204 2727 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[rdi+r14]	# tmp1281, MEM[base: vectp.296_146, index: ivtmp.352_575, of
 6204      543760
 6205 272e C4817E7F 		vmovdqu	YMMWORD PTR 96[r15+r14], ymm2	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B]
 6205      543760
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6206              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2078
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6207              		.loc 1 760 11 discriminator 2 view .LVU2079
 761:sieve_extend.c **** 
 6208              		.loc 1 761 9 discriminator 2 view .LVU2080
 6209              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6210              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2081
 6211 2735 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 128[rdi+r14]	# tmp1282, MEM[base: vectp.296_146, index: ivtmp.352_575, o
 6211      A4378000 
 6211      0000
 6212 273f C4817E7F 		vmovdqu	YMMWORD PTR 128[r15+r14], ymm4	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B
 6212      A4378000 
 6212      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6213              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2082
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 176


 6214              		.loc 1 760 11 discriminator 2 view .LVU2083
 761:sieve_extend.c **** 
 6215              		.loc 1 761 9 discriminator 2 view .LVU2084
 6216              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6217              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2085
 6218 2749 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 160[rdi+r14]	# tmp1283, MEM[base: vectp.296_146, index: ivtmp.352_575, o
 6218      B437A000 
 6218      0000
 6219 2753 C4817E7F 		vmovdqu	YMMWORD PTR 160[r15+r14], ymm6	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B
 6219      B437A000 
 6219      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6220              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2086
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6221              		.loc 1 760 11 discriminator 2 view .LVU2087
 761:sieve_extend.c **** 
 6222              		.loc 1 761 9 discriminator 2 view .LVU2088
 6223              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6224              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2089
 6225 275d C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[rdi+r14]	# tmp1284, MEM[base: vectp.296_146, index: ivtmp.352_575, o
 6225      BC37C000 
 6225      0000
 6226 2767 C4817E7F 		vmovdqu	YMMWORD PTR 192[r15+r14], ymm7	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B
 6226      BC37C000 
 6226      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6227              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2090
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6228              		.loc 1 760 11 discriminator 2 view .LVU2091
 761:sieve_extend.c **** 
 6229              		.loc 1 761 9 discriminator 2 view .LVU2092
 6230              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6231              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2093
 6232 2771 C4A17E6F 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+r14]	# tmp1285, MEM[base: vectp.296_146, index: ivtmp.352_575, o
 6232      9C37E000 
 6232      0000
 6233 277b C4817E7F 		vmovdqu	YMMWORD PTR 224[r15+r14], ymm3	# MEM[base: vectp.299_119, index: ivtmp.352_575, offset: 0B
 6233      9C37E000 
 6233      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6234              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2094
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6235              		.loc 1 760 11 discriminator 2 view .LVU2095
 6236 2785 4981C600 		add	r14, 256	# ivtmp.352,
 6236      010000
 6237 278c 4D39DE   		cmp	r14, r11	# ivtmp.352, _577
 6238 278f 0F856AFF 		jne	.L492	#,
 6238      FFFF
 6239              	.L699:
 6240 2795 4D89C7   		mov	r15, r8	# niters_vector_mult_vf.292, niters.290
 6241 2798 4983E7FC 		and	r15, -4	# niters_vector_mult_vf.292,
 6242 279c 4D01FD   		add	r13, r15	# tmp.293, niters_vector_mult_vf.292
 6243 279f 4C01F8   		add	rax, r15	# tmp.294, niters_vector_mult_vf.292
 6244 27a2 4D39C7   		cmp	r15, r8	# niters_vector_mult_vf.292, niters.290
GAS LISTING /tmp/ccdGK7kM.s 			page 177


 6245 27a5 0F840101 		je	.L724	#,
 6245      0000
 6246              	.LVL316:
 761:sieve_extend.c **** 
 6247              		.loc 1 761 9 view .LVU2096
 6248              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6249              		.loc 1 761 39 is_stmt 0 view .LVU2097
 6250 27ab 4A8B3CEB 		mov	rdi, QWORD PTR [rbx+r13*8]	# _90, *_141
 6251              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6252              		.loc 1 760 5 view .LVU2098
 6253 27af 4C8B4C24 		mov	r9, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6253      50
 6254              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6255              		.loc 1 760 57 view .LVU2099
 6256 27b4 4C8D6001 		lea	r12, 1[rax]	# copy_word,
 6257              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6258              		.loc 1 761 29 view .LVU2100
 6259 27b8 48893CC3 		mov	QWORD PTR [rbx+rax*8], rdi	# *_426, _90
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6260              		.loc 1 760 48 is_stmt 1 view .LVU2101
 6261              	.LVL317:
 6262              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6263              		.loc 1 760 71 is_stmt 0 view .LVU2102
 6264 27bc 49FFC5   		inc	r13	# source_word
 6265              	.LVL318:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6266              		.loc 1 760 11 is_stmt 1 view .LVU2103
 6267              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6268              		.loc 1 760 5 is_stmt 0 view .LVU2104
 6269 27bf 4D39E1   		cmp	r9, r12	# destination_stop_word, copy_word
 6270 27c2 0F82E400 		jb	.L724	#,
 6270      0000
 761:sieve_extend.c **** 
 6271              		.loc 1 761 9 is_stmt 1 view .LVU2105
 6272              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6273              		.loc 1 761 39 is_stmt 0 view .LVU2106
 6274 27c8 4A8D14ED 		lea	rdx, 0[0+r13*8]	# _96,
 6274      00000000 
 6275 27d0 4E8B2CEB 		mov	r13, QWORD PTR [rbx+r13*8]	# _103, *_98
 6276              	.LVL319:
 6277              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6278              		.loc 1 760 57 view .LVU2107
 6279 27d4 4883C002 		add	rax, 2	# copy_word,
 6280              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6281              		.loc 1 761 29 view .LVU2108
 6282 27d8 4E892CE3 		mov	QWORD PTR [rbx+r12*8], r13	# *_102, _103
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6283              		.loc 1 760 48 is_stmt 1 view .LVU2109
GAS LISTING /tmp/ccdGK7kM.s 			page 178


 6284              	.LVL320:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6285              		.loc 1 760 11 view .LVU2110
 6286              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6287              		.loc 1 760 5 is_stmt 0 view .LVU2111
 6288 27dc 4939C1   		cmp	r9, rax	# destination_stop_word, copy_word
 6289 27df 0F82C700 		jb	.L724	#,
 6289      0000
 761:sieve_extend.c **** 
 6290              		.loc 1 761 9 is_stmt 1 view .LVU2112
 6291              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6292              		.loc 1 761 39 is_stmt 0 view .LVU2113
 6293 27e5 4C8B5413 		mov	r10, QWORD PTR 8[rbx+rdx]	# _156, *_159
 6293      08
 6294              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6295              		.loc 1 761 29 view .LVU2114
 6296 27ea 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_157, _156
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6297              		.loc 1 760 48 is_stmt 1 view .LVU2115
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6298              		.loc 1 760 11 view .LVU2116
 6299 27ee C5F877   		vzeroupper
 6300              	.L725:
 6301              	# sieve_extend.c:764:  }
 764:sieve_extend.c **** 
 6302              		.loc 1 764 2 is_stmt 0 view .LVU2117
 6303 27f1 488D65D8 		lea	rsp, -40[rbp]	#,
 6304              	.LVL321:
 764:sieve_extend.c **** 
 6305              		.loc 1 764 2 view .LVU2118
 6306 27f5 5B       		pop	rbx	#
 6307 27f6 415C     		pop	r12	#
 6308 27f8 415D     		pop	r13	#
 6309 27fa 415E     		pop	r14	#
 6310 27fc 415F     		pop	r15	#
 6311 27fe 5D       		pop	rbp	#
 6312              		.cfi_remember_state
 6313              		.cfi_def_cfa 7, 8
 6314              	.LVL322:
 764:sieve_extend.c **** 
 6315              		.loc 1 764 2 view .LVU2119
 6316 27ff C3       		ret	
 6317              	.LVL323:
 6318              		.p2align 4,,10
 6319              		.p2align 3
 6320              	.L491:
 6321              		.cfi_restore_state
 764:sieve_extend.c **** 
 6322              		.loc 1 764 2 view .LVU2120
 6323 2800 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6323      50
 6324 2805 4E8D043B 		lea	r8, [rbx+r15]	# ivtmp.346,
 6325 2809 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _574,
 6325      08
GAS LISTING /tmp/ccdGK7kM.s 			page 179


 6326              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6327              		.loc 1 761 39 view .LVU2121
 6328 280e 4929C5   		sub	r13, rax	# tmp689, ivtmp.360
 6329              	.LVL324:
 761:sieve_extend.c **** 
 6330              		.loc 1 761 39 view .LVU2122
 6331 2811 4889D8   		mov	rax, rbx	# tmp696, _574
 6332 2814 4C29C0   		sub	rax, r8	# tmp696, ivtmp.346
 6333 2817 4883E808 		sub	rax, 8	# tmp697,
 6334 281b 48C1E803 		shr	rax, 3	# tmp695,
 6335 281f 48FFC0   		inc	rax	# tmp698
 6336 2822 83E007   		and	eax, 7	# tmp699,
 6337 2825 0F843D01 		je	.L495	#,
 6337      0000
 6338 282b 4883F801 		cmp	rax, 1	# tmp699,
 6339 282f 7466     		je	.L642	#,
 6340 2831 4883F802 		cmp	rax, 2	# tmp699,
 6341 2835 7454     		je	.L643	#,
 6342 2837 4883F803 		cmp	rax, 3	# tmp699,
 6343 283b 7442     		je	.L644	#,
 6344 283d 4883F804 		cmp	rax, 4	# tmp699,
 6345 2841 7430     		je	.L645	#,
 6346 2843 4883F805 		cmp	rax, 5	# tmp699,
 6347 2847 741E     		je	.L646	#,
 6348 2849 4883F806 		cmp	rax, 6	# tmp699,
 6349 284d 740C     		je	.L647	#,
 761:sieve_extend.c **** 
 6350              		.loc 1 761 9 is_stmt 1 view .LVU2123
 6351              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6352              		.loc 1 761 39 is_stmt 0 view .LVU2124
 6353 284f 4F8B1CE8 		mov	r11, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6354 2853 4983C008 		add	r8, 8	# ivtmp.346,
 6355              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6356              		.loc 1 761 29 view .LVU2125
 6357 2857 4D8958F8 		mov	QWORD PTR -8[r8], r11	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6358              		.loc 1 760 48 is_stmt 1 view .LVU2126
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6359              		.loc 1 760 11 view .LVU2127
 6360              	.L647:
 761:sieve_extend.c **** 
 6361              		.loc 1 761 9 view .LVU2128
 6362              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6363              		.loc 1 761 39 is_stmt 0 view .LVU2129
 6364 285b 4B8B0CE8 		mov	rcx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6365 285f 4983C008 		add	r8, 8	# ivtmp.346,
 6366              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6367              		.loc 1 761 29 view .LVU2130
 6368 2863 498948F8 		mov	QWORD PTR -8[r8], rcx	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6369              		.loc 1 760 48 is_stmt 1 view .LVU2131
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 180


 6370              		.loc 1 760 11 view .LVU2132
 6371              	.L646:
 761:sieve_extend.c **** 
 6372              		.loc 1 761 9 view .LVU2133
 6373              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6374              		.loc 1 761 39 is_stmt 0 view .LVU2134
 6375 2867 4F8B34E8 		mov	r14, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6376 286b 4983C008 		add	r8, 8	# ivtmp.346,
 6377              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6378              		.loc 1 761 29 view .LVU2135
 6379 286f 4D8970F8 		mov	QWORD PTR -8[r8], r14	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6380              		.loc 1 760 48 is_stmt 1 view .LVU2136
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6381              		.loc 1 760 11 view .LVU2137
 6382              	.L645:
 761:sieve_extend.c **** 
 6383              		.loc 1 761 9 view .LVU2138
 6384              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6385              		.loc 1 761 39 is_stmt 0 view .LVU2139
 6386 2873 4F8B3CE8 		mov	r15, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6387 2877 4983C008 		add	r8, 8	# ivtmp.346,
 6388              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6389              		.loc 1 761 29 view .LVU2140
 6390 287b 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6391              		.loc 1 760 48 is_stmt 1 view .LVU2141
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6392              		.loc 1 760 11 view .LVU2142
 6393              	.L644:
 761:sieve_extend.c **** 
 6394              		.loc 1 761 9 view .LVU2143
 6395              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6396              		.loc 1 761 39 is_stmt 0 view .LVU2144
 6397 287f 4B8B3CE8 		mov	rdi, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6398 2883 4983C008 		add	r8, 8	# ivtmp.346,
 6399              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6400              		.loc 1 761 29 view .LVU2145
 6401 2887 498978F8 		mov	QWORD PTR -8[r8], rdi	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6402              		.loc 1 760 48 is_stmt 1 view .LVU2146
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6403              		.loc 1 760 11 view .LVU2147
 6404              	.L643:
 761:sieve_extend.c **** 
 6405              		.loc 1 761 9 view .LVU2148
 6406              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6407              		.loc 1 761 39 is_stmt 0 view .LVU2149
 6408 288b 4F8B24E8 		mov	r12, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6409 288f 4983C008 		add	r8, 8	# ivtmp.346,
GAS LISTING /tmp/ccdGK7kM.s 			page 181


 6410              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6411              		.loc 1 761 29 view .LVU2150
 6412 2893 4D8960F8 		mov	QWORD PTR -8[r8], r12	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6413              		.loc 1 760 48 is_stmt 1 view .LVU2151
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6414              		.loc 1 760 11 view .LVU2152
 6415              	.L642:
 761:sieve_extend.c **** 
 6416              		.loc 1 761 9 view .LVU2153
 6417              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6418              		.loc 1 761 39 is_stmt 0 view .LVU2154
 6419 2897 4F8B0CE8 		mov	r9, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6420 289b 4983C008 		add	r8, 8	# ivtmp.346,
 6421              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6422              		.loc 1 761 29 view .LVU2155
 6423 289f 4D8948F8 		mov	QWORD PTR -8[r8], r9	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6424              		.loc 1 760 48 is_stmt 1 view .LVU2156
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6425              		.loc 1 760 11 view .LVU2157
 6426              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6427              		.loc 1 760 5 is_stmt 0 view .LVU2158
 6428 28a3 4939D8   		cmp	r8, rbx	# ivtmp.346, _574
 6429 28a6 0F85BC00 		jne	.L495	#,
 6429      0000
 6430              	.LVL325:
 6431              	.L724:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6432              		.loc 1 760 5 view .LVU2159
 6433 28ac C5F877   		vzeroupper
 6434              	# sieve_extend.c:764:  }
 764:sieve_extend.c **** 
 6435              		.loc 1 764 2 view .LVU2160
 6436 28af 488D65D8 		lea	rsp, -40[rbp]	#,
 6437              	.LVL326:
 764:sieve_extend.c **** 
 6438              		.loc 1 764 2 view .LVU2161
 6439 28b3 5B       		pop	rbx	#
 6440 28b4 415C     		pop	r12	#
 6441 28b6 415D     		pop	r13	#
 6442 28b8 415E     		pop	r14	#
 6443 28ba 415F     		pop	r15	#
 6444 28bc 5D       		pop	rbp	#
 6445              		.cfi_remember_state
 6446              		.cfi_def_cfa 7, 8
 6447              	.LVL327:
 764:sieve_extend.c **** 
 6448              		.loc 1 764 2 view .LVU2162
 6449 28bd C3       		ret	
 6450              	.LVL328:
 6451 28be 6690     		.p2align 4,,10
 6452              		.p2align 3
GAS LISTING /tmp/ccdGK7kM.s 			page 182


 6453              	.L727:
 6454              		.cfi_restore_state
 6455              	.LBB341:
 6456              	.LBB320:
 6457              	.LBB308:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6458              		.loc 1 583 9 is_stmt 1 view .LVU2163
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6459              		.loc 1 584 9 view .LVU2164
 6460              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6461              		.loc 1 583 19 is_stmt 0 view .LVU2165
 6462 28c0 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1313, MEM[base: vectp.325_427, index: ivtmp.400_621, offset
 6462      40
 6463              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6464              		.loc 1 584 19 view .LVU2166
 6465 28c5 C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B], ME
 6465      40
 6466 28ca C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 32B], 
 6466      60
 6467              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6468              		.loc 1 583 19 view .LVU2167
 6469 28cf C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1091, tmp1313, MEM[base: vectp.325_427, index: i
 6469      60
 6470              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6471              		.loc 1 584 19 view .LVU2168
 6472 28d4 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1087, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B
 6472      D2
 6473 28d9 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1102, MEM[base: vectp.329_436, index: ivtmp.400_621, offset: 0B
 6473      C2
 6474 28de C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_444, tmp1087,
 6474      DAD8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6475              		.loc 1 585 9 is_stmt 1 view .LVU2169
 6476              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6477              		.loc 1 583 19 is_stmt 0 view .LVU2170
 6478 28e4 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1092, tmp1091,
 6478      ECD8
 6479              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6480              		.loc 1 584 19 view .LVU2171
 6481 28ea C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1103, tmp1102,
 6481      F8D8
 6482              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6483              		.loc 1 585 42 view .LVU2172
 6484 28f0 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.332, tmp1092, _12
 6485              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6486              		.loc 1 585 63 view .LVU2173
 6487 28f4 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.333, vect_perm_even_444, _18
 6488              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccdGK7kM.s 			page 183


 6489              		.loc 1 587 63 view .LVU2174
 6490 28f8 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.336, tmp1103, _18
 6491              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6492              		.loc 1 587 42 view .LVU2175
 6493 28fc C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.335, vect_perm_even_444, _12
 6494              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6495              		.loc 1 585 52 view .LVU2176
 6496 2900 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.334, vect__98.332, vect__100.333
 6496      CF
 6497              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6498              		.loc 1 587 52 view .LVU2177
 6499 2905 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.337, vect__110.336, vect__109.335
 6499      D2
 6500              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6501              		.loc 1 585 31 view .LVU2178
 6502 290a C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1099, vect__104.334
 6502      CD01
 6503              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6504              		.loc 1 587 31 view .LVU2179
 6505 2910 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1110, vect__114.337
 6505      D601
 6506 2916 48837C24 		cmp	QWORD PTR 64[rsp], 2	# %sfp,
 6506      4002
 6507              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6508              		.loc 1 585 31 view .LVU2180
 6509 291c C4C179D6 		vmovq	QWORD PTR 64[r10], xmm1	# MEM[base: _450, index: ivtmp.400_621, offset: 0B], tmp1096
 6509      4A40
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6510              		.loc 1 585 31 view .LVU2181
 6511 2922 C4C179D6 		vmovq	QWORD PTR 96[r10], xmm5	# MEM[base: _450, index: ivtmp.400_621, offset: 32B], tmp1099
 6511      6A60
 6512 2928 C4C3F916 		vpextrq	QWORD PTR 80[r10], xmm1, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 16B], tmp1096
 6512      4A5001
 6513 292f C4C3F916 		vpextrq	QWORD PTR 112[r10], xmm5, 1	# MEM[base: _450, index: ivtmp.400_621, offset: 48B], tmp1099
 6513      6A7001
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6514              		.loc 1 586 9 is_stmt 1 view .LVU2182
 587:sieve_extend.c ****         copy_word += 2;
 6515              		.loc 1 587 9 view .LVU2183
 6516 2936 41B80200 		mov	r8d, 2	# ivtmp.398,
 6516      0000
 6517              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6518              		.loc 1 587 31 is_stmt 0 view .LVU2184
 6519 293c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _470, index: ivtmp.400_621, offset: 0B], tmp1107
 6519      40
 587:sieve_extend.c ****         copy_word += 2;
 6520              		.loc 1 587 31 view .LVU2185
 6521 2941 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _470, index: ivtmp.400_621, offset: 32B], tmp1110
 6521      60
 6522 2946 41B98000 		mov	r9d, 128	# ivtmp.400,
GAS LISTING /tmp/ccdGK7kM.s 			page 184


 6522      0000
 6523 294c C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 16B], tmp1107
 6523      575001
 6524 2953 C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _470, index: ivtmp.400_621, offset: 48B], tmp1110
 6524      777001
 588:sieve_extend.c ****         source_word += 2;
 6525              		.loc 1 588 9 is_stmt 1 view .LVU2186
 589:sieve_extend.c ****         distance += 2;
 6526              		.loc 1 589 9 view .LVU2187
 590:sieve_extend.c ****     }
 6527              		.loc 1 590 9 view .LVU2188
 590:sieve_extend.c ****     }
 6528              		.loc 1 590 9 is_stmt 0 view .LVU2189
 6529              	.LBE308:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6530              		.loc 1 582 11 is_stmt 1 view .LVU2190
 6531 295a 0F87E4F4 		ja	.L720	#,
 6531      FFFF
 6532 2960 E920F6FF 		jmp	.L694	#
 6532      FF
 6533              	.LVL329:
 6534              		.p2align 4,,10
 6535 2965 0F1F00   		.p2align 3
 6536              	.L495:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6537              		.loc 1 582 11 is_stmt 0 view .LVU2191
 6538              	.LBE320:
 6539              	.LBE341:
 761:sieve_extend.c **** 
 6540              		.loc 1 761 9 is_stmt 1 view .LVU2192
 6541              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6542              		.loc 1 761 39 is_stmt 0 view .LVU2193
 6543 2968 4B8B14E8 		mov	rdx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6544              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6545              		.loc 1 761 29 view .LVU2194
 6546 296c 498910   		mov	QWORD PTR [r8], rdx	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6547              		.loc 1 760 48 is_stmt 1 view .LVU2195
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6548              		.loc 1 760 11 view .LVU2196
 761:sieve_extend.c **** 
 6549              		.loc 1 761 9 view .LVU2197
 6550              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6551              		.loc 1 761 39 is_stmt 0 view .LVU2198
 6552 296f 4F8B54E8 		mov	r10, QWORD PTR 8[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6552      08
 6553              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6554              		.loc 1 761 29 view .LVU2199
 6555 2974 4D895008 		mov	QWORD PTR 8[r8], r10	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6556              		.loc 1 760 48 is_stmt 1 view .LVU2200
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6557              		.loc 1 760 11 view .LVU2201
GAS LISTING /tmp/ccdGK7kM.s 			page 185


 761:sieve_extend.c **** 
 6558              		.loc 1 761 9 view .LVU2202
 6559              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6560              		.loc 1 761 39 is_stmt 0 view .LVU2203
 6561 2978 4B8B74E8 		mov	rsi, QWORD PTR 16[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6561      10
 6562              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6563              		.loc 1 761 29 view .LVU2204
 6564 297d 49897010 		mov	QWORD PTR 16[r8], rsi	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6565              		.loc 1 760 48 is_stmt 1 view .LVU2205
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6566              		.loc 1 760 11 view .LVU2206
 761:sieve_extend.c **** 
 6567              		.loc 1 761 9 view .LVU2207
 6568              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6569              		.loc 1 761 39 is_stmt 0 view .LVU2208
 6570 2981 4B8B44E8 		mov	rax, QWORD PTR 24[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6570      18
 6571              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6572              		.loc 1 761 29 view .LVU2209
 6573 2986 49894018 		mov	QWORD PTR 24[r8], rax	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6574              		.loc 1 760 48 is_stmt 1 view .LVU2210
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6575              		.loc 1 760 11 view .LVU2211
 761:sieve_extend.c **** 
 6576              		.loc 1 761 9 view .LVU2212
 6577              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6578              		.loc 1 761 39 is_stmt 0 view .LVU2213
 6579 298a 4F8B5CE8 		mov	r11, QWORD PTR 32[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6579      20
 6580              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6581              		.loc 1 761 29 view .LVU2214
 6582 298f 4D895820 		mov	QWORD PTR 32[r8], r11	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6583              		.loc 1 760 48 is_stmt 1 view .LVU2215
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6584              		.loc 1 760 11 view .LVU2216
 761:sieve_extend.c **** 
 6585              		.loc 1 761 9 view .LVU2217
 6586              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6587              		.loc 1 761 39 is_stmt 0 view .LVU2218
 6588 2993 4B8B4CE8 		mov	rcx, QWORD PTR 40[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6588      28
 6589              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6590              		.loc 1 761 29 view .LVU2219
 6591 2998 49894828 		mov	QWORD PTR 40[r8], rcx	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccdGK7kM.s 			page 186


 6592              		.loc 1 760 48 is_stmt 1 view .LVU2220
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6593              		.loc 1 760 11 view .LVU2221
 761:sieve_extend.c **** 
 6594              		.loc 1 761 9 view .LVU2222
 6595              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6596              		.loc 1 761 39 is_stmt 0 view .LVU2223
 6597 299c 4F8B74E8 		mov	r14, QWORD PTR 48[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6597      30
 6598              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6599              		.loc 1 761 29 view .LVU2224
 6600 29a1 4D897030 		mov	QWORD PTR 48[r8], r14	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6601              		.loc 1 760 48 is_stmt 1 view .LVU2225
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6602              		.loc 1 760 11 view .LVU2226
 761:sieve_extend.c **** 
 6603              		.loc 1 761 9 view .LVU2227
 6604              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6605              		.loc 1 761 39 is_stmt 0 view .LVU2228
 6606 29a5 4F8B7CE8 		mov	r15, QWORD PTR 56[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 6606      38
 6607 29aa 4983C040 		add	r8, 64	# ivtmp.346,
 6608              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6609              		.loc 1 761 29 view .LVU2229
 6610 29ae 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6611              		.loc 1 760 48 is_stmt 1 view .LVU2230
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6612              		.loc 1 760 11 view .LVU2231
 6613              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6614              		.loc 1 760 5 is_stmt 0 view .LVU2232
 6615 29b2 4939D8   		cmp	r8, rbx	# ivtmp.346, _574
 6616 29b5 75B1     		jne	.L495	#,
 6617 29b7 E9F0FEFF 		jmp	.L724	#
 6617      FF
 6618              	.LVL330:
 6619 29bc 0F1F4000 		.p2align 4,,10
 6620              		.p2align 3
 6621              	.L482:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6622              		.loc 1 760 5 view .LVU2233
 6623 29c0 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 6623      58
 6624 29c5 4C8B5424 		mov	r10, QWORD PTR 56[rsp]	# tmp653, %sfp
 6624      38
 6625 29ca 4801D9   		add	rcx, rbx	# ivtmp.368, bitarray
 6626 29cd 4901FA   		add	r10, rdi	# tmp653, _183
 6627 29d0 4E8D44D3 		lea	r8, 8[rbx+r10*8]	# tmp656,
 6627      08
 6628 29d5 4929F0   		sub	r8, rsi	# tmp656, _33
 6629 29d8 4C89C6   		mov	rsi, r8	# _602, tmp656
GAS LISTING /tmp/ccdGK7kM.s 			page 187


 6630 29db 4929C8   		sub	r8, rcx	# tmp708, ivtmp.368
 6631 29de 4983E808 		sub	r8, 8	# tmp709,
 6632 29e2 49C1E803 		shr	r8, 3	# tmp707,
 6633 29e6 49FFC0   		inc	r8	# tmp710
 6634              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6635              		.loc 1 747 29 view .LVU2234
 6636 29e9 4829F8   		sub	rax, rdi	# tmp657, _183
 6637 29ec 4183E007 		and	r8d, 7	# tmp711,
 6638 29f0 0F84CF00 		je	.L485	#,
 6638      0000
 6639 29f6 4983F801 		cmp	r8, 1	# tmp711,
 6640 29fa 0F84A600 		je	.L629	#,
 6640      0000
 6641 2a00 4983F802 		cmp	r8, 2	# tmp711,
 6642 2a04 0F848600 		je	.L630	#,
 6642      0000
 6643 2a0a 4983F803 		cmp	r8, 3	# tmp711,
 6644 2a0e 746A     		je	.L631	#,
 6645 2a10 4983F804 		cmp	r8, 4	# tmp711,
 6646 2a14 744E     		je	.L632	#,
 6647 2a16 4983F805 		cmp	r8, 5	# tmp711,
 6648 2a1a 7432     		je	.L633	#,
 6649 2a1c 4983F806 		cmp	r8, 6	# tmp711,
 6650 2a20 7416     		je	.L634	#,
 747:sieve_extend.c ****     }
 6651              		.loc 1 747 9 is_stmt 1 view .LVU2235
 6652              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6653              		.loc 1 747 56 is_stmt 0 view .LVU2236
 6654 2a22 C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp987, MEM[base: _593, offset: 0B], _12
 6654      19
 6655              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6656              		.loc 1 747 94 view .LVU2237
 6657 2a27 C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp989, MEM[base: _593, offset: 8B], _18
 6657      5108
 6658              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6659              		.loc 1 747 66 view .LVU2238
 6660 2a2d 4909D3   		or	r11, rdx	# tmp990, tmp989
 6661 2a30 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp990
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6662              		.loc 1 746 43 is_stmt 1 view .LVU2239
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6663              		.loc 1 746 11 view .LVU2240
 6664 2a34 4883C108 		add	rcx, 8	# ivtmp.368,
 6665              	.L634:
 747:sieve_extend.c ****     }
 6666              		.loc 1 747 9 view .LVU2241
 6667              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6668              		.loc 1 747 56 is_stmt 0 view .LVU2242
 6669 2a38 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp992, MEM[base: _593, offset: 0B], _12
 6669      31
 6670              	.LVL331:
 6671              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccdGK7kM.s 			page 188


 747:sieve_extend.c ****     }
 6672              		.loc 1 747 94 view .LVU2243
 6673 2a3d C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp994, MEM[base: _593, offset: 8B], _18
 6673      4908
 6674              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6675              		.loc 1 747 66 view .LVU2244
 6676 2a43 4D09CE   		or	r14, r9	# tmp995, tmp994
 6677 2a46 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp995
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6678              		.loc 1 746 43 is_stmt 1 view .LVU2245
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6679              		.loc 1 746 11 view .LVU2246
 6680 2a4a 4883C108 		add	rcx, 8	# ivtmp.368,
 6681              	.L633:
 747:sieve_extend.c ****     }
 6682              		.loc 1 747 9 view .LVU2247
 6683              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6684              		.loc 1 747 56 is_stmt 0 view .LVU2248
 6685 2a4e C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp997, MEM[base: _593, offset: 0B], _12
 6685      39
 6686              	.LVL332:
 6687              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6688              		.loc 1 747 94 view .LVU2249
 6689 2a53 C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp999, MEM[base: _593, offset: 8B], _18
 6689      5108
 6690              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6691              		.loc 1 747 66 view .LVU2250
 6692 2a59 4D09D7   		or	r15, r10	# tmp1000, tmp999
 6693 2a5c 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1000
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6694              		.loc 1 746 43 is_stmt 1 view .LVU2251
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6695              		.loc 1 746 11 view .LVU2252
 6696 2a60 4883C108 		add	rcx, 8	# ivtmp.368,
 6697              	.L632:
 747:sieve_extend.c ****     }
 6698              		.loc 1 747 9 view .LVU2253
 6699              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6700              		.loc 1 747 56 is_stmt 0 view .LVU2254
 6701 2a64 C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp1002, MEM[base: _593, offset: 0B], _12
 6701      01
 6702              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6703              		.loc 1 747 94 view .LVU2255
 6704 2a69 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp1004, MEM[base: _593, offset: 8B], _18
 6704      7908
 6705              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6706              		.loc 1 747 66 view .LVU2256
 6707 2a6f 4909F8   		or	r8, rdi	# tmp1005, tmp1004
 6708 2a72 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1005
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccdGK7kM.s 			page 189


 6709              		.loc 1 746 43 is_stmt 1 view .LVU2257
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6710              		.loc 1 746 11 view .LVU2258
 6711 2a76 4883C108 		add	rcx, 8	# ivtmp.368,
 6712              	.L631:
 747:sieve_extend.c ****     }
 6713              		.loc 1 747 9 view .LVU2259
 6714              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6715              		.loc 1 747 56 is_stmt 0 view .LVU2260
 6716 2a7a C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp1007, MEM[base: _593, offset: 0B], _12
 6716      19
 6717              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6718              		.loc 1 747 94 view .LVU2261
 6719 2a7f C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp1009, MEM[base: _593, offset: 8B], _18
 6719      5108
 6720              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6721              		.loc 1 747 66 view .LVU2262
 6722 2a85 4909D3   		or	r11, rdx	# tmp1010, tmp1009
 6723 2a88 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1010
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6724              		.loc 1 746 43 is_stmt 1 view .LVU2263
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6725              		.loc 1 746 11 view .LVU2264
 6726 2a8c 4883C108 		add	rcx, 8	# ivtmp.368,
 6727              	.L630:
 747:sieve_extend.c ****     }
 6728              		.loc 1 747 9 view .LVU2265
 6729              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6730              		.loc 1 747 56 is_stmt 0 view .LVU2266
 6731 2a90 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp1012, MEM[base: _593, offset: 0B], _12
 6731      31
 6732              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6733              		.loc 1 747 94 view .LVU2267
 6734 2a95 C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp1014, MEM[base: _593, offset: 8B], _18
 6734      4908
 6735              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6736              		.loc 1 747 66 view .LVU2268
 6737 2a9b 4D09CE   		or	r14, r9	# tmp1015, tmp1014
 6738 2a9e 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1015
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6739              		.loc 1 746 43 is_stmt 1 view .LVU2269
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6740              		.loc 1 746 11 view .LVU2270
 6741 2aa2 4883C108 		add	rcx, 8	# ivtmp.368,
 6742              	.L629:
 747:sieve_extend.c ****     }
 6743              		.loc 1 747 9 view .LVU2271
 6744              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6745              		.loc 1 747 56 is_stmt 0 view .LVU2272
 6746 2aa6 C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp1017, MEM[base: _593, offset: 0B], _12
GAS LISTING /tmp/ccdGK7kM.s 			page 190


 6746      39
 6747              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6748              		.loc 1 747 94 view .LVU2273
 6749 2aab C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp1019, MEM[base: _593, offset: 8B], _18
 6749      5108
 6750              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6751              		.loc 1 747 66 view .LVU2274
 6752 2ab1 4D09D7   		or	r15, r10	# tmp1020, tmp1019
 6753 2ab4 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1020
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6754              		.loc 1 746 43 is_stmt 1 view .LVU2275
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6755              		.loc 1 746 11 view .LVU2276
 6756 2ab8 4883C108 		add	rcx, 8	# ivtmp.368,
 6757              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6758              		.loc 1 746 5 is_stmt 0 view .LVU2277
 6759 2abc 4839F1   		cmp	rcx, rsi	# ivtmp.368, _602
 6760 2abf 0F84C000 		je	.L701	#,
 6760      0000
 6761              	.L485:
 747:sieve_extend.c ****     }
 6762              		.loc 1 747 9 is_stmt 1 view .LVU2278
 6763              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6764              		.loc 1 747 94 is_stmt 0 view .LVU2279
 6765 2ac5 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp660, MEM[base: _593, offset: 8B], _18
 6765      7908
 6766              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6767              		.loc 1 747 56 view .LVU2280
 6768 2acb C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp658, MEM[base: _593, offset: 0B], _12
 6768      01
 6769              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6770              		.loc 1 747 66 view .LVU2281
 6771 2ad0 4909F8   		or	r8, rdi	# tmp662, tmp660
 6772 2ad3 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp662
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6773              		.loc 1 746 43 is_stmt 1 view .LVU2282
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6774              		.loc 1 746 11 view .LVU2283
 6775 2ad7 4C8D5908 		lea	r11, 8[rcx]	# tmp712,
 747:sieve_extend.c ****     }
 6776              		.loc 1 747 9 view .LVU2284
 6777 2adb 4C8D4910 		lea	r9, 16[rcx]	# ivtmp.368,
 6778              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6779              		.loc 1 747 94 is_stmt 0 view .LVU2285
 6780 2adf C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp885, MEM[base: _593, offset: 8B], _18
 6780      7308
 6781              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6782              		.loc 1 747 56 view .LVU2286
 6783 2ae5 C4E29BF7 		shrx	rdx, QWORD PTR 8[rcx], r12	# tmp883, MEM[base: _593, offset: 0B], _12
GAS LISTING /tmp/ccdGK7kM.s 			page 191


 6783      5108
 6784              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6785              		.loc 1 747 66 view .LVU2287
 6786 2aeb 4C09F2   		or	rdx, r14	# tmp886, tmp885
 6787 2aee 498914C3 		mov	QWORD PTR [r11+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp886
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6788              		.loc 1 746 43 is_stmt 1 view .LVU2288
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6789              		.loc 1 746 11 view .LVU2289
 747:sieve_extend.c ****     }
 6790              		.loc 1 747 9 view .LVU2290
 6791 2af2 4C8D4118 		lea	r8, 24[rcx]	# ivtmp.368,
 6792 2af6 4C8D7120 		lea	r14, 32[rcx]	# ivtmp.368,
 6793              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6794              		.loc 1 747 94 is_stmt 0 view .LVU2291
 6795 2afa C44291F7 		shlx	r10, QWORD PTR 8[r9], r13	# tmp891, MEM[base: _593, offset: 8B], _18
 6795      5108
 6796              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6797              		.loc 1 747 56 view .LVU2292
 6798 2b00 C4629BF7 		shrx	r15, QWORD PTR 16[rcx], r12	# tmp889, MEM[base: _593, offset: 0B], _12
 6798      7910
 6799              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6800              		.loc 1 747 66 view .LVU2293
 6801 2b06 4D09D7   		or	r15, r10	# tmp892, tmp891
 6802 2b09 4D893CC1 		mov	QWORD PTR [r9+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp892
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6803              		.loc 1 746 43 is_stmt 1 view .LVU2294
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6804              		.loc 1 746 11 view .LVU2295
 747:sieve_extend.c ****     }
 6805              		.loc 1 747 9 view .LVU2296
 6806 2b0d 4C8D7928 		lea	r15, 40[rcx]	# ivtmp.368,
 6807              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6808              		.loc 1 747 94 is_stmt 0 view .LVU2297
 6809 2b11 C4C291F7 		shlx	rdi, QWORD PTR 8[r8], r13	# tmp897, MEM[base: _593, offset: 8B], _18
 6809      7808
 6810              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6811              		.loc 1 747 56 view .LVU2298
 6812 2b17 C4629BF7 		shrx	r11, QWORD PTR 24[rcx], r12	# tmp895, MEM[base: _593, offset: 0B], _12
 6812      5918
 6813              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6814              		.loc 1 747 66 view .LVU2299
 6815 2b1d 4909FB   		or	r11, rdi	# tmp898, tmp897
 6816 2b20 4D891CC0 		mov	QWORD PTR [r8+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp898
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6817              		.loc 1 746 43 is_stmt 1 view .LVU2300
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6818              		.loc 1 746 11 view .LVU2301
 747:sieve_extend.c ****     }
 6819              		.loc 1 747 9 view .LVU2302
GAS LISTING /tmp/ccdGK7kM.s 			page 192


 6820 2b24 4C8D5930 		lea	r11, 48[rcx]	# ivtmp.368,
 6821              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6822              		.loc 1 747 94 is_stmt 0 view .LVU2303
 6823 2b28 C44291F7 		shlx	r9, QWORD PTR 8[r14], r13	# tmp903, MEM[base: _593, offset: 8B], _18
 6823      4E08
 6824              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6825              		.loc 1 747 56 view .LVU2304
 6826 2b2e C4E29BF7 		shrx	rdx, QWORD PTR 32[rcx], r12	# tmp901, MEM[base: _593, offset: 0B], _12
 6826      5120
 6827              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6828              		.loc 1 747 66 view .LVU2305
 6829 2b34 4C09CA   		or	rdx, r9	# tmp904, tmp903
 6830 2b37 498914C6 		mov	QWORD PTR [r14+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp904
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6831              		.loc 1 746 43 is_stmt 1 view .LVU2306
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6832              		.loc 1 746 11 view .LVU2307
 747:sieve_extend.c ****     }
 6833              		.loc 1 747 9 view .LVU2308
 6834 2b3b 4C8D4938 		lea	r9, 56[rcx]	# ivtmp.368,
 6835 2b3f 4883C140 		add	rcx, 64	# ivtmp.368,
 6836              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6837              		.loc 1 747 94 is_stmt 0 view .LVU2309
 6838 2b43 C44291F7 		shlx	r8, QWORD PTR 8[r15], r13	# tmp909, MEM[base: _593, offset: 8B], _18
 6838      4708
 6839              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6840              		.loc 1 747 56 view .LVU2310
 6841 2b49 C4629BF7 		shrx	r10, QWORD PTR -24[rcx], r12	# tmp907, MEM[base: _593, offset: 0B], _12
 6841      51E8
 6842              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6843              		.loc 1 747 66 view .LVU2311
 6844 2b4f 4D09C2   		or	r10, r8	# tmp910, tmp909
 6845 2b52 4D8914C7 		mov	QWORD PTR [r15+rax*8], r10	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp910
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6846              		.loc 1 746 43 is_stmt 1 view .LVU2312
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6847              		.loc 1 746 11 view .LVU2313
 747:sieve_extend.c ****     }
 6848              		.loc 1 747 9 view .LVU2314
 6849              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6850              		.loc 1 747 56 is_stmt 0 view .LVU2315
 6851 2b56 C4629BF7 		shrx	r14, QWORD PTR -16[rcx], r12	# tmp913, MEM[base: _593, offset: 0B], _12
 6851      71F0
 6852              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6853              		.loc 1 747 94 view .LVU2316
 6854 2b5c C4C291F7 		shlx	rdi, QWORD PTR 8[r11], r13	# tmp915, MEM[base: _593, offset: 8B], _18
 6854      7B08
 6855              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 193


 6856              		.loc 1 747 66 view .LVU2317
 6857 2b62 4909FE   		or	r14, rdi	# tmp916, tmp915
 6858 2b65 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp916
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6859              		.loc 1 746 43 is_stmt 1 view .LVU2318
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6860              		.loc 1 746 11 view .LVU2319
 747:sieve_extend.c ****     }
 6861              		.loc 1 747 9 view .LVU2320
 6862              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6863              		.loc 1 747 56 is_stmt 0 view .LVU2321
 6864 2b69 C4E29BF7 		shrx	rdx, QWORD PTR -8[rcx], r12	# tmp919, MEM[base: _593, offset: 0B], _12
 6864      51F8
 6865              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6866              		.loc 1 747 94 view .LVU2322
 6867 2b6f C44291F7 		shlx	r15, QWORD PTR 8[r9], r13	# tmp921, MEM[base: _593, offset: 8B], _18
 6867      7908
 6868              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6869              		.loc 1 747 66 view .LVU2323
 6870 2b75 4C09FA   		or	rdx, r15	# tmp922, tmp921
 6871 2b78 498914C1 		mov	QWORD PTR [r9+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp922
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6872              		.loc 1 746 43 is_stmt 1 view .LVU2324
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6873              		.loc 1 746 11 view .LVU2325
 6874              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6875              		.loc 1 746 5 is_stmt 0 view .LVU2326
 6876 2b7c 4839F1   		cmp	rcx, rsi	# ivtmp.368, _602
 6877 2b7f 0F8540FF 		jne	.L485	#,
 6877      FFFF
 6878              	.L701:
 6879 2b85 488B4424 		mov	rax, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 6879      38
 6880 2b8a 4C8D5001 		lea	r10, 1[rax]	# ivtmp.360,
 6881 2b8e E9C6F8FF 		jmp	.L486	#
 6881      FF
 6882              	.LVL333:
 6883              		.p2align 4,,10
 6884 2b93 0F1F4400 		.p2align 3
 6884      00
 6885              	.L476:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6886              		.loc 1 746 5 view .LVU2327
 6887 2b98 4801D9   		add	rcx, rbx	# ivtmp.391, bitarray
 6888              	.LBB342:
 6889              	.LBB321:
 6890              	.LBB309:
 6891              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6892              		.loc 1 584 19 view .LVU2328
 6893 2b9b 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _616, offset: 8B]
 6894              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccdGK7kM.s 			page 194


 6895              		.loc 1 585 42 view .LVU2329
 6896 2b9f C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp609, MEM[base: _616, offset: 0B], _12
 6896      11
 6897              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6898              		.loc 1 585 63 view .LVU2330
 6899 2ba4 C4E291F7 		shlx	rdi, rsi, r13	# tmp611, source1, _18
 6899      FE
 6900              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6901              		.loc 1 585 52 view .LVU2331
 6902 2ba9 4809FA   		or	rdx, rdi	# tmp612, tmp611
 6903 2bac 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6904 2bb0 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	# fast_loop_stop_word, %sfp
 6904      48
 6905 2bb5 4989C0   		mov	r8, rax	# tmp720, ivtmp.360
 6906 2bb8 49F7D0   		not	r8	# tmp720
 6907 2bbb 4D01C8   		add	r8, r9	# tmp721, fast_loop_stop_word
 6908              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6909              		.loc 1 587 63 view .LVU2332
 6910 2bbe C46291F7 		shlx	r10, QWORD PTR 16[rcx], r13	# tmp613, MEM[base: _616, offset: 16B], _18
 6910      5110
 6911 2bc4 49F7D3   		not	r11	# tmp694
 6912              	.LVL334:
 587:sieve_extend.c ****         copy_word += 2;
 6913              		.loc 1 587 63 view .LVU2333
 6914 2bc7 49D1E8   		shr	r8	# tmp719
 6915              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 6916              		.loc 1 588 19 view .LVU2334
 6917 2bca 488D7802 		lea	rdi, 2[rax]	# copy_word,
 6918              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6919              		.loc 1 587 42 view .LVU2335
 6920 2bce C4E29BF7 		shrx	rsi, rsi, r12	# tmp615, source1, _12
 6920      F6
 6921              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6922              		.loc 1 587 52 view .LVU2336
 6923 2bd3 4C09D6   		or	rsi, r10	# tmp616, tmp613
 6924 2bd6 488974C3 		mov	QWORD PTR 8[rbx+rax*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6924      08
 6925 2bdb 4183E003 		and	r8d, 3	# tmp722,
 6926              	.LVL335:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6927              		.loc 1 583 9 is_stmt 1 view .LVU2337
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6928              		.loc 1 584 9 view .LVU2338
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6929              		.loc 1 585 9 view .LVU2339
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6930              		.loc 1 586 9 view .LVU2340
 587:sieve_extend.c ****         copy_word += 2;
 6931              		.loc 1 587 9 view .LVU2341
 588:sieve_extend.c ****         source_word += 2;
 6932              		.loc 1 588 9 view .LVU2342
GAS LISTING /tmp/ccdGK7kM.s 			page 195


 589:sieve_extend.c ****         distance += 2;
 6933              		.loc 1 589 9 view .LVU2343
 590:sieve_extend.c ****     }
 6934              		.loc 1 590 9 view .LVU2344
 6935 2bdf 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 590:sieve_extend.c ****     }
 6936              		.loc 1 590 9 is_stmt 0 view .LVU2345
 6937              	.LBE309:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6938              		.loc 1 582 11 is_stmt 1 view .LVU2346
 6939 2be3 488D5110 		lea	rdx, 16[rcx]	# ivtmp.391,
 6940 2be7 4939F9   		cmp	r9, rdi	# fast_loop_stop_word, copy_word
 6941 2bea 0F86D1F4 		jbe	.L480	#,
 6941      FFFF
 6942 2bf0 4D85C0   		test	r8, r8	# tmp722
 6943 2bf3 747D     		je	.L479	#,
 6944 2bf5 4983F801 		cmp	r8, 1	# tmp722,
 6945 2bf9 7439     		je	.L654	#,
 6946 2bfb 4983F802 		cmp	r8, 2	# tmp722,
 6947 2bff 0F854001 		jne	.L728	#,
 6947      0000
 6948              	.LVL336:
 6949              	.L655:
 6950              	.LBB310:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6951              		.loc 1 583 9 view .LVU2347
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6952              		.loc 1 584 9 view .LVU2348
 6953              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6954              		.loc 1 584 19 is_stmt 0 view .LVU2349
 6955 2c05 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6956              		.loc 1 585 9 is_stmt 1 view .LVU2350
 6957              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6958              		.loc 1 585 42 is_stmt 0 view .LVU2351
 6959 2c09 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1068, MEM[base: _616, offset: 0B], _12
 6959      0A
 6960              	.LVL337:
 6961              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6962              		.loc 1 585 63 view .LVU2352
 6963 2c0e C44291F7 		shlx	r8, r9, r13	# tmp1069, source1, _18
 6963      C1
 6964              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6965              		.loc 1 585 52 view .LVU2353
 6966 2c13 4C09C1   		or	rcx, r8	# tmp1070, tmp1069
 6967 2c16 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6968              	.LVL338:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6969              		.loc 1 586 9 is_stmt 1 view .LVU2354
 587:sieve_extend.c ****         copy_word += 2;
 6970              		.loc 1 587 9 view .LVU2355
 6971              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccdGK7kM.s 			page 196


 6972              		.loc 1 587 42 is_stmt 0 view .LVU2356
 6973 2c1a C4C29BF7 		shrx	rsi, r9, r12	# tmp1073, source1, _12
 6973      F1
 6974 2c1f 4883C210 		add	rdx, 16	# ivtmp.391,
 6975              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6976              		.loc 1 587 63 view .LVU2357
 6977 2c23 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1072, MEM[base: _616, offset: 16B], _18
 6977      12
 6978              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6979              		.loc 1 587 52 view .LVU2358
 6980 2c28 4C09D6   		or	rsi, r10	# tmp1074, tmp1072
 6981 2c2b 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6981      08
 6982              	.LVL339:
 588:sieve_extend.c ****         source_word += 2;
 6983              		.loc 1 588 9 is_stmt 1 view .LVU2359
 6984              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 6985              		.loc 1 588 19 is_stmt 0 view .LVU2360
 6986 2c30 4883C702 		add	rdi, 2	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 6987              		.loc 1 589 9 is_stmt 1 view .LVU2361
 590:sieve_extend.c ****     }
 6988              		.loc 1 590 9 view .LVU2362
 590:sieve_extend.c ****     }
 6989              		.loc 1 590 9 is_stmt 0 view .LVU2363
 6990              	.LBE310:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6991              		.loc 1 582 11 is_stmt 1 view .LVU2364
 6992              	.LVL340:
 6993              	.L654:
 6994              	.LBB311:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6995              		.loc 1 583 9 view .LVU2365
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6996              		.loc 1 584 9 view .LVU2366
 6997              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6998              		.loc 1 584 19 is_stmt 0 view .LVU2367
 6999 2c34 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7000              		.loc 1 585 9 is_stmt 1 view .LVU2368
 7001              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7002              		.loc 1 585 42 is_stmt 0 view .LVU2369
 7003 2c38 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1078, MEM[base: _616, offset: 0B], _12
 7003      0A
 7004              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7005              		.loc 1 585 63 view .LVU2370
 7006 2c3d C44291F7 		shlx	r8, r9, r13	# tmp1079, source1, _18
 7006      C1
 7007              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7008              		.loc 1 585 52 view .LVU2371
GAS LISTING /tmp/ccdGK7kM.s 			page 197


 7009 2c42 4C09C1   		or	rcx, r8	# tmp1080, tmp1079
 7010 2c45 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 7011              	.LVL341:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7012              		.loc 1 586 9 is_stmt 1 view .LVU2372
 587:sieve_extend.c ****         copy_word += 2;
 7013              		.loc 1 587 9 view .LVU2373
 7014              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7015              		.loc 1 587 42 is_stmt 0 view .LVU2374
 7016 2c49 C4C29BF7 		shrx	rsi, r9, r12	# tmp1083, source1, _12
 7016      F1
 7017 2c4e 4883C210 		add	rdx, 16	# ivtmp.391,
 7018              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7019              		.loc 1 587 63 view .LVU2375
 7020 2c52 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1082, MEM[base: _616, offset: 16B], _18
 7020      12
 7021              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7022              		.loc 1 587 52 view .LVU2376
 7023 2c57 4C09D6   		or	rsi, r10	# tmp1084, tmp1082
 7024 2c5a 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 7024      08
 7025              	.LVL342:
 588:sieve_extend.c ****         source_word += 2;
 7026              		.loc 1 588 9 is_stmt 1 view .LVU2377
 7027              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7028              		.loc 1 588 19 is_stmt 0 view .LVU2378
 7029 2c5f 4883C702 		add	rdi, 2	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7030              		.loc 1 589 9 is_stmt 1 view .LVU2379
 590:sieve_extend.c ****     }
 7031              		.loc 1 590 9 view .LVU2380
 7032 2c63 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 590:sieve_extend.c ****     }
 7033              		.loc 1 590 9 is_stmt 0 view .LVU2381
 7034              	.LBE311:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7035              		.loc 1 582 11 is_stmt 1 view .LVU2382
 7036 2c67 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
 7036      48
 7037 2c6c 0F864FF4 		jbe	.L480	#,
 7037      FFFF
 7038              	.LVL343:
 7039              	.L479:
 7040              	.LBB312:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7041              		.loc 1 583 9 view .LVU2383
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7042              		.loc 1 584 9 view .LVU2384
 7043              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7044              		.loc 1 584 19 is_stmt 0 view .LVU2385
 7045 2c72 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccdGK7kM.s 			page 198


 7046              		.loc 1 585 9 is_stmt 1 view .LVU2386
 7047              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7048              		.loc 1 585 42 is_stmt 0 view .LVU2387
 7049 2c76 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp794, MEM[base: _616, offset: 0B], _12
 7049      02
 7050              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7051              		.loc 1 585 63 view .LVU2388
 7052 2c7b C4C291F7 		shlx	rcx, r9, r13	# tmp795, source1, _18
 7052      C9
 7053              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7054              		.loc 1 585 52 view .LVU2389
 7055 2c80 4909C8   		or	r8, rcx	# tmp796, tmp795
 7056 2c83 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 7057              	.LVL344:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7058              		.loc 1 586 9 is_stmt 1 view .LVU2390
 587:sieve_extend.c ****         copy_word += 2;
 7059              		.loc 1 587 9 view .LVU2391
 7060              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7061              		.loc 1 587 42 is_stmt 0 view .LVU2392
 7062 2c87 C4429BF7 		shrx	r10, r9, r12	# tmp799, source1, _12
 7062      D1
 7063              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7064              		.loc 1 588 19 view .LVU2393
 7065 2c8c 4C8D4F02 		lea	r9, 2[rdi]	# tmp723,
 7066              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7067              		.loc 1 587 63 view .LVU2394
 7068 2c90 C4E291F7 		shlx	rsi, QWORD PTR 16[rdx], r13	# tmp798, MEM[base: _616, offset: 16B], _18
 7068      7210
 7069              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7070              		.loc 1 587 52 view .LVU2395
 7071 2c96 4C09D6   		or	rsi, r10	# tmp800, tmp799
 7072 2c99 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 7072      08
 7073              	.LVL345:
 588:sieve_extend.c ****         source_word += 2;
 7074              		.loc 1 588 9 is_stmt 1 view .LVU2396
 589:sieve_extend.c ****         distance += 2;
 7075              		.loc 1 589 9 view .LVU2397
 590:sieve_extend.c ****     }
 7076              		.loc 1 590 9 view .LVU2398
 590:sieve_extend.c ****     }
 7077              		.loc 1 590 9 is_stmt 0 view .LVU2399
 7078              	.LBE312:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7079              		.loc 1 582 11 is_stmt 1 view .LVU2400
 7080              	.LBB313:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7081              		.loc 1 583 9 view .LVU2401
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 199


 7082              		.loc 1 584 9 view .LVU2402
 7083 2c9e 4883C240 		add	rdx, 64	# ivtmp.391,
 7084              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7085              		.loc 1 584 19 is_stmt 0 view .LVU2403
 7086 2ca2 4C8B42D8 		mov	r8, QWORD PTR -40[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7087              		.loc 1 585 9 is_stmt 1 view .LVU2404
 7088              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7089              		.loc 1 585 42 is_stmt 0 view .LVU2405
 7090 2ca6 C4E29BF7 		shrx	rcx, QWORD PTR -48[rdx], r12	# tmp806, MEM[base: _616, offset: 0B], _12
 7090      4AD0
 7091              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7092              		.loc 1 585 63 view .LVU2406
 7093 2cac C4C291F7 		shlx	rsi, r8, r13	# tmp807, source1, _18
 7093      F0
 7094              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7095              		.loc 1 585 52 view .LVU2407
 7096 2cb1 4809F1   		or	rcx, rsi	# tmp808, tmp807
 7097 2cb4 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 7098              	.LVL346:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7099              		.loc 1 586 9 is_stmt 1 view .LVU2408
 587:sieve_extend.c ****         copy_word += 2;
 7100              		.loc 1 587 9 view .LVU2409
 7101              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7102              		.loc 1 587 42 is_stmt 0 view .LVU2410
 7103 2cb8 C4429BF7 		shrx	r8, r8, r12	# tmp811, source1, _12
 7103      C0
 7104              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7105              		.loc 1 587 63 view .LVU2411
 7106 2cbd 4C8B52E0 		mov	r10, QWORD PTR -32[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 7107 2cc1 C4C291F7 		shlx	rcx, r10, r13	# tmp810, MEM[base: _616, offset: 16B], _18
 7107      CA
 7108              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7109              		.loc 1 587 52 view .LVU2412
 7110 2cc6 4909C8   		or	r8, rcx	# tmp812, tmp810
 7111 2cc9 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 7111      08
 7112              	.LVL347:
 588:sieve_extend.c ****         source_word += 2;
 7113              		.loc 1 588 9 is_stmt 1 view .LVU2413
 7114              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7115              		.loc 1 588 19 is_stmt 0 view .LVU2414
 7116 2cce 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7117              		.loc 1 589 9 is_stmt 1 view .LVU2415
 590:sieve_extend.c ****     }
 7118              		.loc 1 590 9 view .LVU2416
 590:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 200


 7119              		.loc 1 590 9 is_stmt 0 view .LVU2417
 7120              	.LBE313:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7121              		.loc 1 582 11 is_stmt 1 view .LVU2418
 7122              	.LBB314:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7123              		.loc 1 583 9 view .LVU2419
 7124              	.LVL348:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7125              		.loc 1 584 9 view .LVU2420
 7126              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7127              		.loc 1 584 19 is_stmt 0 view .LVU2421
 7128 2cd2 488B72E8 		mov	rsi, QWORD PTR -24[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7129              		.loc 1 585 9 is_stmt 1 view .LVU2422
 7130              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7131              		.loc 1 585 42 is_stmt 0 view .LVU2423
 7132 2cd6 C4E29BF7 		shrx	rcx, QWORD PTR -32[rdx], r12	# tmp818, MEM[base: _616, offset: 0B], _12
 7132      4AE0
 7133              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7134              		.loc 1 585 63 view .LVU2424
 7135 2cdc C46291F7 		shlx	r10, rsi, r13	# tmp819, source1, _18
 7135      D6
 7136              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7137              		.loc 1 585 52 view .LVU2425
 7138 2ce1 4C09D1   		or	rcx, r10	# tmp820, tmp819
 7139 2ce4 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 7140              	.LVL349:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7141              		.loc 1 586 9 is_stmt 1 view .LVU2426
 587:sieve_extend.c ****         copy_word += 2;
 7142              		.loc 1 587 9 view .LVU2427
 7143              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7144              		.loc 1 587 42 is_stmt 0 view .LVU2428
 7145 2ce8 C4E29BF7 		shrx	rsi, rsi, r12	# tmp823, source1, _12
 7145      F6
 7146              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7147              		.loc 1 587 63 view .LVU2429
 7148 2ced 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 7149 2cf1 C4C291F7 		shlx	rcx, r8, r13	# tmp822, MEM[base: _616, offset: 16B], _18
 7149      C8
 7150              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7151              		.loc 1 587 52 view .LVU2430
 7152 2cf6 4809CE   		or	rsi, rcx	# tmp824, tmp822
 7153 2cf9 4A8974CB 		mov	QWORD PTR 8[rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 7153      08
 7154              	.LVL350:
 588:sieve_extend.c ****         source_word += 2;
 7155              		.loc 1 588 9 is_stmt 1 view .LVU2431
 7156              	# sieve_extend.c:588:         copy_word += 2;
GAS LISTING /tmp/ccdGK7kM.s 			page 201


 588:sieve_extend.c ****         source_word += 2;
 7157              		.loc 1 588 19 is_stmt 0 view .LVU2432
 7158 2cfe 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7159              		.loc 1 589 9 is_stmt 1 view .LVU2433
 590:sieve_extend.c ****     }
 7160              		.loc 1 590 9 view .LVU2434
 590:sieve_extend.c ****     }
 7161              		.loc 1 590 9 is_stmt 0 view .LVU2435
 7162              	.LBE314:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7163              		.loc 1 582 11 is_stmt 1 view .LVU2436
 7164              	.LBB315:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7165              		.loc 1 583 9 view .LVU2437
 7166              	.LVL351:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7167              		.loc 1 584 9 view .LVU2438
 7168              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7169              		.loc 1 588 19 is_stmt 0 view .LVU2439
 7170 2d02 4883C708 		add	rdi, 8	# copy_word,
 7171              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7172              		.loc 1 584 19 view .LVU2440
 7173 2d06 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7174              		.loc 1 585 9 is_stmt 1 view .LVU2441
 7175              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7176              		.loc 1 585 42 is_stmt 0 view .LVU2442
 7177 2d0a C4E29BF7 		shrx	rcx, QWORD PTR -16[rdx], r12	# tmp830, MEM[base: _616, offset: 0B], _12
 7177      4AF0
 7178              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7179              		.loc 1 585 63 view .LVU2443
 7180 2d10 C44291F7 		shlx	r10, r8, r13	# tmp831, source1, _18
 7180      D0
 7181              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7182              		.loc 1 585 52 view .LVU2444
 7183 2d15 4C09D1   		or	rcx, r10	# tmp832, tmp831
 7184 2d18 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 7185              	.LVL352:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7186              		.loc 1 586 9 is_stmt 1 view .LVU2445
 587:sieve_extend.c ****         copy_word += 2;
 7187              		.loc 1 587 9 view .LVU2446
 7188              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7189              		.loc 1 587 42 is_stmt 0 view .LVU2447
 7190 2d1c C4429BF7 		shrx	r8, r8, r12	# tmp835, source1, _12
 7190      C0
 7191 2d21 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 7192              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7193              		.loc 1 587 63 view .LVU2448
GAS LISTING /tmp/ccdGK7kM.s 			page 202


 7194 2d25 488B32   		mov	rsi, QWORD PTR [rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 7195 2d28 C4E291F7 		shlx	rcx, rsi, r13	# tmp834, MEM[base: _616, offset: 16B], _18
 7195      CE
 7196              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7197              		.loc 1 587 52 view .LVU2449
 7198 2d2d 4909C8   		or	r8, rcx	# tmp836, tmp834
 7199 2d30 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 7199      08
 7200              	.LVL353:
 588:sieve_extend.c ****         source_word += 2;
 7201              		.loc 1 588 9 is_stmt 1 view .LVU2450
 589:sieve_extend.c ****         distance += 2;
 7202              		.loc 1 589 9 view .LVU2451
 590:sieve_extend.c ****     }
 7203              		.loc 1 590 9 view .LVU2452
 590:sieve_extend.c ****     }
 7204              		.loc 1 590 9 is_stmt 0 view .LVU2453
 7205              	.LBE315:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7206              		.loc 1 582 11 is_stmt 1 view .LVU2454
 7207 2d35 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
 7207      48
 7208 2d3a 0F8732FF 		ja	.L479	#,
 7208      FFFF
 7209 2d40 E97CF3FF 		jmp	.L480	#
 7209      FF
 7210              	.L728:
 7211              	.LBB316:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7212              		.loc 1 583 9 view .LVU2455
 7213              	.LVL354:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7214              		.loc 1 584 9 view .LVU2456
 7215              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7216              		.loc 1 584 19 is_stmt 0 view .LVU2457
 7217 2d45 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7218              		.loc 1 585 9 is_stmt 1 view .LVU2458
 7219              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7220              		.loc 1 585 42 is_stmt 0 view .LVU2459
 7221 2d49 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1058, MEM[base: _616, offset: 0B], _12
 7221      12
 7222              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7223              		.loc 1 585 63 view .LVU2460
 7224 2d4e C44291F7 		shlx	r8, r9, r13	# tmp1059, source1, _18
 7224      C1
 7225              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7226              		.loc 1 585 52 view .LVU2461
 7227 2d53 4D09C2   		or	r10, r8	# tmp1060, tmp1059
 7228 2d56 4C8914FB 		mov	QWORD PTR [rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 7229              	.LVL355:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 203


 7230              		.loc 1 586 9 is_stmt 1 view .LVU2462
 587:sieve_extend.c ****         copy_word += 2;
 7231              		.loc 1 587 9 view .LVU2463
 7232              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7233              		.loc 1 587 42 is_stmt 0 view .LVU2464
 7234 2d5a C4C29BF7 		shrx	rsi, r9, r12	# tmp1063, source1, _12
 7234      F1
 7235              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7236              		.loc 1 587 63 view .LVU2465
 7237 2d5f 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 7238 2d63 C46291F7 		shlx	r10, rdx, r13	# tmp1062, MEM[base: _616, offset: 16B], _18
 7238      D2
 7239              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7240              		.loc 1 587 52 view .LVU2466
 7241 2d68 4909F2   		or	r10, rsi	# tmp1064, tmp1063
 7242 2d6b 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 7242      08
 7243              	.LVL356:
 588:sieve_extend.c ****         source_word += 2;
 7244              		.loc 1 588 9 is_stmt 1 view .LVU2467
 7245 2d70 488D5120 		lea	rdx, 32[rcx]	# ivtmp.391,
 7246              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7247              		.loc 1 588 19 is_stmt 0 view .LVU2468
 7248 2d74 488D7804 		lea	rdi, 4[rax]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7249              		.loc 1 589 9 is_stmt 1 view .LVU2469
 590:sieve_extend.c ****     }
 7250              		.loc 1 590 9 view .LVU2470
 590:sieve_extend.c ****     }
 7251              		.loc 1 590 9 is_stmt 0 view .LVU2471
 7252              	.LBE316:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7253              		.loc 1 582 11 is_stmt 1 view .LVU2472
 7254 2d78 E988FEFF 		jmp	.L655	#
 7254      FF
 7255              	.LBE321:
 7256              	.LBE342:
 7257              		.cfi_endproc
 7258              	.LFE5339:
 7260              		.section	.rodata.str1.1,"aMS",@progbits,1
 7261              	.LC5:
 7262 0000 25336A75 		.string	"%3ju "
 7262      2000
 7263              	.LC6:
 7264 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 7264      6E642025 
 7264      6A752070 
 7264      72696D65 
 7264      7320756E 
 7265              		.text
 7266 2d7d 0F1F00   		.p2align 4
 7268              	show_primes.isra.0:
 7269              	.LVL357:
GAS LISTING /tmp/ccdGK7kM.s 			page 204


 7270              	.LFB5353:
 923:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 7271              		.loc 1 923 13 view -0
 7272              		.cfi_startproc
 7273              	.LBB343:
 925:sieve_extend.c ****         primeCount++;
 7274              		.loc 1 925 30 view .LVU2474
 7275              	.LBE343:
 7276              	# sieve_extend.c:923: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 923:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 7277              		.loc 1 923 13 is_stmt 0 view .LVU2475
 7278 2d80 4157     		push	r15	#
 7279              		.cfi_def_cfa_offset 16
 7280              		.cfi_offset 15, -16
 7281 2d82 4156     		push	r14	#
 7282              		.cfi_def_cfa_offset 24
 7283              		.cfi_offset 14, -24
 7284 2d84 4155     		push	r13	#
 7285              		.cfi_def_cfa_offset 32
 7286              		.cfi_offset 13, -32
 7287 2d86 4154     		push	r12	#
 7288              		.cfi_def_cfa_offset 40
 7289              		.cfi_offset 12, -40
 7290 2d88 55       		push	rbp	#
 7291              		.cfi_def_cfa_offset 48
 7292              		.cfi_offset 6, -48
 7293 2d89 4889F5   		mov	rbp, rsi	# ISRA.71, tmp168
 7294 2d8c 53       		push	rbx	#
 7295              		.cfi_def_cfa_offset 56
 7296              		.cfi_offset 3, -56
 7297 2d8d 4883EC08 		sub	rsp, 8	#,
 7298              		.cfi_def_cfa_offset 64
 7299              	.LBB360:
 7300              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 7301              		.loc 1 925 44 view .LVU2476
 7302 2d91 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.71_32(D)
 7303              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 7304              		.loc 1 925 5 view .LVU2477
 7305 2d94 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 7306 2d98 0F867601 		jbe	.L736	#,
 7306      0000
 7307              	# sieve_extend.c:927:         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 7308              		.loc 1 927 31 view .LVU2478
 7309 2d9e 48D1EA   		shr	rdx	# maxFactor
 7310              	.LVL358:
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 7311              		.loc 1 927 31 view .LVU2479
 7312 2da1 4989FC   		mov	r12, rdi	# ISRA.70, tmp167
 7313 2da4 4989D7   		mov	r15, rdx	# _4, maxFactor
 7314              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 7315              		.loc 1 925 20 view .LVU2480
 7316 2da7 BB010000 		mov	ebx, 1	# factor,
 7316      00
GAS LISTING /tmp/ccdGK7kM.s 			page 205


 7317              	.LBE360:
 7318              	# sieve_extend.c:924:     counter_t primeCount = 1;    // We already have 2
 924:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 7319              		.loc 1 924 15 view .LVU2481
 7320 2dac 41BE0100 		mov	r14d, 1	# primeCount,
 7320      0000
 7321              	.LBB361:
 7322              	.LBB344:
 7323              	.LBB345:
 7324              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7325              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
GAS LISTING /tmp/ccdGK7kM.s 			page 206


  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 207


 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 7326              		.loc 3 107 10 view .LVU2482
 7327 2db2 49BDCDCC 		movabs	r13, -3689348814741910323	# tmp136,
 7327      CCCCCCCC 
 7327      CCCC
 7328              	.LVL359:
 7329 2dbc 0F1F4000 		.p2align 4,,10
 7330              		.p2align 3
 7331              	.L735:
 7332              		.loc 3 107 10 view .LVU2483
 7333              	.LBE345:
 7334              	.LBE344:
 926:sieve_extend.c ****         if (factor < maxFactor/2) {
 7335              		.loc 1 926 9 is_stmt 1 view .LVU2484
 7336              	# sieve_extend.c:926:         primeCount++;
 926:sieve_extend.c ****         if (factor < maxFactor/2) {
 7337              		.loc 1 926 19 is_stmt 0 view .LVU2485
 7338 2dc0 49FFC6   		inc	r14	# primeCount
 7339              	.LVL360:
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 7340              		.loc 1 927 9 is_stmt 1 view .LVU2486
 7341              	# sieve_extend.c:927:         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 7342              		.loc 1 927 12 is_stmt 0 view .LVU2487
 7343 2dc3 4939DF   		cmp	r15, rbx	# _4, factor
 7344 2dc6 0F87FC00 		ja	.L759	#,
 7344      0000
 7345              	.L731:
 925:sieve_extend.c ****         primeCount++;
 7346              		.loc 1 925 52 is_stmt 1 view .LVU2488
 7347              	.LVL361:
 7348              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 7349              		.loc 1 925 61 is_stmt 0 view .LVU2489
 7350 2dcc 4D8B0424 		mov	r8, QWORD PTR [r12]	# _11, *ISRA.70_33(D)
 7351 2dd0 48FFC3   		inc	rbx	# factor
 7352              	.LVL362:
 7353              	.L758:
 7354              	.LBB350:
 7355              	.LBI350:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 7356              		.loc 1 110 25 is_stmt 1 view .LVU2490
 7357              	.LBB351:
 111:sieve_extend.c ****     return index;
 7358              		.loc 1 111 5 view .LVU2491
 111:sieve_extend.c ****     return index;
 7359              		.loc 1 111 11 view .LVU2492
 7360              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7361              		.loc 1 111 21 is_stmt 0 view .LVU2493
 7362 2dd3 4889D9   		mov	rcx, rbx	# tmp124, factor
 7363 2dd6 48C1E906 		shr	rcx, 6	# tmp124,
 7364              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccdGK7kM.s 			page 208


 7365              		.loc 1 111 12 view .LVU2494
 7366 2dda 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 7367              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7368              		.loc 1 111 11 view .LVU2495
 7369 2dde 490FA3D9 		bt	r9, rbx	# *_39, factor
 7370 2de2 0F83A800 		jnc	.L733	#,
 7370      0000
 111:sieve_extend.c ****     return index;
 7371              		.loc 1 111 58 is_stmt 1 view .LVU2496
 7372              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7373              		.loc 1 111 63 is_stmt 0 view .LVU2497
 7374 2de8 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 7375              	.LVL363:
 7376              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7377              		.loc 1 111 21 view .LVU2498
 7378 2dec 4D89D3   		mov	r11, r10	# tmp129, factor
 7379 2def 49C1EB06 		shr	r11, 6	# tmp129,
 7380              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7381              		.loc 1 111 12 view .LVU2499
 7382 2df3 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 7383              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7384              		.loc 1 111 63 view .LVU2500
 7385 2df7 4C89D3   		mov	rbx, r10	# factor, tmp138
 111:sieve_extend.c ****     return index;
 7386              		.loc 1 111 11 is_stmt 1 view .LVU2501
 7387 2dfa 4C0FA3D0 		bt	rax, r10	# *_16, factor
 7388 2dfe 0F838C00 		jnc	.L733	#,
 7388      0000
 111:sieve_extend.c ****     return index;
 7389              		.loc 1 111 58 view .LVU2502
 7390              	.LVL364:
 7391              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7392              		.loc 1 111 63 is_stmt 0 view .LVU2503
 7393 2e04 48FFC3   		inc	rbx	# factor
 7394              	.LVL365:
 111:sieve_extend.c ****     return index;
 7395              		.loc 1 111 11 is_stmt 1 view .LVU2504
 7396              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7397              		.loc 1 111 21 is_stmt 0 view .LVU2505
 7398 2e07 4889DA   		mov	rdx, rbx	# tmp139, factor
 7399 2e0a 48C1EA06 		shr	rdx, 6	# tmp139,
 7400              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7401              		.loc 1 111 12 view .LVU2506
 7402 2e0e 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 7403              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7404              		.loc 1 111 11 view .LVU2507
 7405 2e12 480FA3DF 		bt	rdi, rbx	# *_16, factor
 7406 2e16 7378     		jnc	.L733	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 209


 111:sieve_extend.c ****     return index;
 7407              		.loc 1 111 58 is_stmt 1 view .LVU2508
 7408              	.LVL366:
 7409              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7410              		.loc 1 111 63 is_stmt 0 view .LVU2509
 7411 2e18 498D5A02 		lea	rbx, 2[r10]	# factor,
 7412              	.LVL367:
 111:sieve_extend.c ****     return index;
 7413              		.loc 1 111 11 is_stmt 1 view .LVU2510
 7414              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7415              		.loc 1 111 21 is_stmt 0 view .LVU2511
 7416 2e1c 4889D9   		mov	rcx, rbx	# tmp143, factor
 7417 2e1f 48C1E906 		shr	rcx, 6	# tmp143,
 7418              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7419              		.loc 1 111 12 view .LVU2512
 7420 2e23 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 7421              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7422              		.loc 1 111 11 view .LVU2513
 7423 2e27 490FA3D9 		bt	r9, rbx	# *_16, factor
 7424 2e2b 7363     		jnc	.L733	#,
 111:sieve_extend.c ****     return index;
 7425              		.loc 1 111 58 is_stmt 1 view .LVU2514
 7426              	.LVL368:
 7427              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7428              		.loc 1 111 63 is_stmt 0 view .LVU2515
 7429 2e2d 498D5A03 		lea	rbx, 3[r10]	# factor,
 7430              	.LVL369:
 111:sieve_extend.c ****     return index;
 7431              		.loc 1 111 11 is_stmt 1 view .LVU2516
 7432              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7433              		.loc 1 111 21 is_stmt 0 view .LVU2517
 7434 2e31 4989DB   		mov	r11, rbx	# tmp147, factor
 7435 2e34 49C1EB06 		shr	r11, 6	# tmp147,
 7436              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7437              		.loc 1 111 12 view .LVU2518
 7438 2e38 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 7439              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7440              		.loc 1 111 11 view .LVU2519
 7441 2e3c 480FA3D8 		bt	rax, rbx	# *_16, factor
 7442 2e40 734E     		jnc	.L733	#,
 111:sieve_extend.c ****     return index;
 7443              		.loc 1 111 58 is_stmt 1 view .LVU2520
 7444              	.LVL370:
 7445              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7446              		.loc 1 111 63 is_stmt 0 view .LVU2521
 7447 2e42 498D5A04 		lea	rbx, 4[r10]	# factor,
 7448              	.LVL371:
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccdGK7kM.s 			page 210


 7449              		.loc 1 111 11 is_stmt 1 view .LVU2522
 7450              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7451              		.loc 1 111 21 is_stmt 0 view .LVU2523
 7452 2e46 4889DA   		mov	rdx, rbx	# tmp151, factor
 7453 2e49 48C1EA06 		shr	rdx, 6	# tmp151,
 7454              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7455              		.loc 1 111 12 view .LVU2524
 7456 2e4d 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 7457              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7458              		.loc 1 111 11 view .LVU2525
 7459 2e51 480FA3DF 		bt	rdi, rbx	# *_16, factor
 7460 2e55 7339     		jnc	.L733	#,
 111:sieve_extend.c ****     return index;
 7461              		.loc 1 111 58 is_stmt 1 view .LVU2526
 7462              	.LVL372:
 7463              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7464              		.loc 1 111 63 is_stmt 0 view .LVU2527
 7465 2e57 498D5A05 		lea	rbx, 5[r10]	# factor,
 7466              	.LVL373:
 111:sieve_extend.c ****     return index;
 7467              		.loc 1 111 11 is_stmt 1 view .LVU2528
 7468              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7469              		.loc 1 111 21 is_stmt 0 view .LVU2529
 7470 2e5b 4889D9   		mov	rcx, rbx	# tmp155, factor
 7471 2e5e 48C1E906 		shr	rcx, 6	# tmp155,
 7472              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7473              		.loc 1 111 12 view .LVU2530
 7474 2e62 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 7475              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7476              		.loc 1 111 11 view .LVU2531
 7477 2e66 490FA3D9 		bt	r9, rbx	# *_16, factor
 7478 2e6a 7324     		jnc	.L733	#,
 111:sieve_extend.c ****     return index;
 7479              		.loc 1 111 58 is_stmt 1 view .LVU2532
 7480              	.LVL374:
 7481              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7482              		.loc 1 111 63 is_stmt 0 view .LVU2533
 7483 2e6c 498D5A06 		lea	rbx, 6[r10]	# factor,
 7484              	.LVL375:
 111:sieve_extend.c ****     return index;
 7485              		.loc 1 111 11 is_stmt 1 view .LVU2534
 7486              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7487              		.loc 1 111 21 is_stmt 0 view .LVU2535
 7488 2e70 4989DB   		mov	r11, rbx	# tmp159, factor
 7489 2e73 49C1EB06 		shr	r11, 6	# tmp159,
 7490              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7491              		.loc 1 111 12 view .LVU2536
GAS LISTING /tmp/ccdGK7kM.s 			page 211


 7492 2e77 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 7493              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7494              		.loc 1 111 11 view .LVU2537
 7495 2e7b 480FA3D8 		bt	rax, rbx	# *_16, factor
 7496 2e7f 730F     		jnc	.L733	#,
 111:sieve_extend.c ****     return index;
 7497              		.loc 1 111 58 is_stmt 1 view .LVU2538
 7498              	.LVL376:
 7499              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7500              		.loc 1 111 63 is_stmt 0 view .LVU2539
 7501 2e81 498D5A07 		lea	rbx, 7[r10]	# factor,
 7502              	.LVL377:
 111:sieve_extend.c ****     return index;
 7503              		.loc 1 111 11 is_stmt 1 view .LVU2540
 7504 2e85 E949FFFF 		jmp	.L758	#
 7504      FF
 7505 2e8a 660F1F44 		.p2align 4,,10
 7505      0000
 7506              		.p2align 3
 7507              	.L733:
 7508              	.LVL378:
 111:sieve_extend.c ****     return index;
 7509              		.loc 1 111 11 is_stmt 0 view .LVU2541
 7510              	.LBE351:
 7511              	.LBE350:
 925:sieve_extend.c ****         primeCount++;
 7512              		.loc 1 925 30 is_stmt 1 view .LVU2542
 7513              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 7514              		.loc 1 925 5 is_stmt 0 view .LVU2543
 7515 2e90 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 7516 2e93 0F8227FF 		jb	.L735	#,
 7516      FFFF
 7517              	.LVL379:
 7518              	.L730:
 925:sieve_extend.c ****         primeCount++;
 7519              		.loc 1 925 5 view .LVU2544
 7520              	.LBE361:
 932:sieve_extend.c **** }
 7521              		.loc 1 932 5 is_stmt 1 view .LVU2545
 7522              	.LBB362:
 7523              	.LBI362:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 7524              		.loc 3 105 1 view .LVU2546
 7525              	.LBB363:
 7526              		.loc 3 107 3 view .LVU2547
 7527              	.LBE363:
 7528              	.LBE362:
 7529              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 7530              		.loc 1 933 1 is_stmt 0 view .LVU2548
 7531 2e99 4883C408 		add	rsp, 8	#,
 7532              		.cfi_remember_state
 7533              		.cfi_def_cfa_offset 56
 7534 2e9d 5B       		pop	rbx	#
GAS LISTING /tmp/ccdGK7kM.s 			page 212


 7535              		.cfi_def_cfa_offset 48
 7536 2e9e 5D       		pop	rbp	#
 7537              		.cfi_def_cfa_offset 40
 7538 2e9f 415C     		pop	r12	#
 7539              		.cfi_def_cfa_offset 32
 7540 2ea1 415D     		pop	r13	#
 7541              		.cfi_def_cfa_offset 24
 7542              	.LBB367:
 7543              	.LBB364:
 7544              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7545              		.loc 3 107 10 view .LVU2549
 7546 2ea3 4C89F2   		mov	rdx, r14	#, primeCount
 7547              	.LBE364:
 7548              	.LBE367:
 7549              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 7550              		.loc 1 933 1 view .LVU2550
 7551 2ea6 415E     		pop	r14	#
 7552              		.cfi_def_cfa_offset 16
 7553              	# sieve_extend.c:932:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 932:sieve_extend.c **** }
 7554              		.loc 1 932 5 view .LVU2551
 7555 2ea8 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 7555      01
 7556              	.LBB368:
 7557              	.LBB365:
 7558              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7559              		.loc 3 107 10 view .LVU2552
 7560 2ead BF010000 		mov	edi, 1	#,
 7560      00
 7561 2eb2 488D3500 		lea	rsi, .LC6[rip]	#,
 7561      000000
 7562 2eb9 31C0     		xor	eax, eax	#
 7563              	.LBE365:
 7564              	.LBE368:
 7565              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 7566              		.loc 1 933 1 view .LVU2553
 7567 2ebb 415F     		pop	r15	#
 7568              		.cfi_def_cfa_offset 8
 7569              	.LBB369:
 7570              	.LBB366:
 7571              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7572              		.loc 3 107 10 view .LVU2554
 7573 2ebd E9000000 		jmp	__printf_chk@PLT	#
 7573      00
 7574              	.LVL380:
 7575              		.p2align 4,,10
 7576 2ec2 660F1F44 		.p2align 3
 7576      0000
 7577              	.L759:
 7578              		.cfi_restore_state
 7579              		.loc 3 107 10 view .LVU2555
 7580              	.LBE366:
 7581              	.LBE369:
 7582              	.LBB370:
 928:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
GAS LISTING /tmp/ccdGK7kM.s 			page 213


 7583              		.loc 1 928 13 is_stmt 1 view .LVU2556
 7584              	.LBB352:
 7585              	.LBI344:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 7586              		.loc 3 105 1 view .LVU2557
 7587              	.LBB346:
 7588              		.loc 3 107 3 view .LVU2558
 7589              	.LBE346:
 7590              	.LBE352:
 7591              	# sieve_extend.c:928:             printf("%3ju ",(uintmax_t)factor*2+1);
 928:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 7592              		.loc 1 928 13 is_stmt 0 view .LVU2559
 7593 2ec8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 7593      01
 7594              	.LBB353:
 7595              	.LBB347:
 7596              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7597              		.loc 3 107 10 view .LVU2560
 7598 2ecd BF010000 		mov	edi, 1	#,
 7598      00
 7599 2ed2 488D3500 		lea	rsi, .LC5[rip]	#,
 7599      000000
 7600 2ed9 31C0     		xor	eax, eax	#
 7601 2edb E8000000 		call	__printf_chk@PLT	#
 7601      00
 7602              	.LVL381:
 7603              		.loc 3 107 10 view .LVU2561
 7604              	.LBE347:
 7605              	.LBE353:
 929:sieve_extend.c ****         }
 7606              		.loc 1 929 13 is_stmt 1 view .LVU2562
 7607              	.LBB354:
 7608              	.LBB348:
 7609              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7610              		.loc 3 107 10 is_stmt 0 view .LVU2563
 7611 2ee0 4C89F0   		mov	rax, r14	# tmp120, primeCount
 7612 2ee3 490FAFC5 		imul	rax, r13	# tmp120, tmp136
 7613              	.LBE348:
 7614              	.LBE354:
 7615              	# sieve_extend.c:929:             if (primeCount % 10 == 0) printf("\n");
 929:sieve_extend.c ****         }
 7616              		.loc 1 929 16 view .LVU2564
 7617 2ee7 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 7617      99999999 
 7617      9919
 7618              	.LBB355:
 7619              	.LBB349:
 7620              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7621              		.loc 3 107 10 view .LVU2565
 7622 2ef1 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 7622      D001
 7623              	.LBE349:
 7624              	.LBE355:
 7625              	# sieve_extend.c:929:             if (primeCount % 10 == 0) printf("\n");
 929:sieve_extend.c ****         }
 7626              		.loc 1 929 16 view .LVU2566
 7627 2ef7 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
GAS LISTING /tmp/ccdGK7kM.s 			page 214


 7628 2efa 760C     		jbe	.L732	#,
 7629              	.L757:
 7630 2efc 488B7500 		mov	rsi, QWORD PTR 0[rbp]	# prephitmp_86, *ISRA.71_32(D)
 7631              	.LBB356:
 7632              	.LBB357:
 7633              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7634              		.loc 3 107 10 view .LVU2567
 7635 2f00 E9C7FEFF 		jmp	.L731	#
 7635      FF
 7636              		.p2align 4,,10
 7637 2f05 0F1F00   		.p2align 3
 7638              	.L732:
 7639              	.LBE357:
 7640              	.LBE356:
 929:sieve_extend.c ****         }
 7641              		.loc 1 929 39 is_stmt 1 view .LVU2568
 7642              	.LVL382:
 7643              	.LBB359:
 7644              	.LBI356:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 7645              		.loc 3 105 1 view .LVU2569
 7646              	.LBB358:
 7647              		.loc 3 107 3 view .LVU2570
 7648              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 7649              		.loc 3 107 10 is_stmt 0 view .LVU2571
 7650 2f08 BF0A0000 		mov	edi, 10	#,
 7650      00
 7651 2f0d E8000000 		call	putchar@PLT	#
 7651      00
 7652              	.LVL383:
 7653 2f12 EBE8     		jmp	.L757	#
 7654              	.LVL384:
 7655              	.L736:
 7656              		.loc 3 107 10 view .LVU2572
 7657              	.LBE358:
 7658              	.LBE359:
 7659              	.LBE370:
 7660              	# sieve_extend.c:924:     counter_t primeCount = 1;    // We already have 2
 924:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 7661              		.loc 1 924 15 view .LVU2573
 7662 2f14 41BE0100 		mov	r14d, 1	# primeCount,
 7662      0000
 7663 2f1a E97AFFFF 		jmp	.L730	#
 7663      FF
 7664              		.cfi_endproc
 7665              	.LFE5353:
 7667 2f1f 90       		.p2align 4
 7669              	sieve:
 7670              	.LVL385:
 7671              	.LFB5343:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7672              		.loc 1 901 86 is_stmt 1 view -0
 7673              		.cfi_startproc
 902:sieve_extend.c ****     counter_t prime     = 0;
 7674              		.loc 1 902 5 view .LVU2575
 7675              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
GAS LISTING /tmp/ccdGK7kM.s 			page 215


 7676              		.loc 1 901 86 is_stmt 0 view .LVU2576
 7677 2f20 4157     		push	r15	#
 7678              		.cfi_def_cfa_offset 16
 7679              		.cfi_offset 15, -16
 7680 2f22 4156     		push	r14	#
 7681              		.cfi_def_cfa_offset 24
 7682              		.cfi_offset 14, -24
 7683 2f24 4155     		push	r13	#
 7684              		.cfi_def_cfa_offset 32
 7685              		.cfi_offset 13, -32
 7686 2f26 4154     		push	r12	#
 7687              		.cfi_def_cfa_offset 40
 7688              		.cfi_offset 12, -40
 7689 2f28 55       		push	rbp	#
 7690              		.cfi_def_cfa_offset 48
 7691              		.cfi_offset 6, -48
 7692 2f29 53       		push	rbx	#
 7693              		.cfi_def_cfa_offset 56
 7694              		.cfi_offset 3, -56
 7695 2f2a 4889FB   		mov	rbx, rdi	# maxints, tmp1191
 7696              	.LVL386:
 7697              	.LBB443:
 7698              	.LBI443:
  91:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 7699              		.loc 1 91 28 is_stmt 1 view .LVU2577
 7700              	.LBB444:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 7701              		.loc 1 92 5 view .LVU2578
 7702              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 7703              		.loc 1 93 22 is_stmt 0 view .LVU2579
 7704 2f2d 4989DE   		mov	r14, rbx	# prephitmp_1527, maxints
 7705              	.LBE444:
 7706              	.LBE443:
 7707              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7708              		.loc 1 901 86 view .LVU2580
 7709 2f30 4883EC58 		sub	rsp, 88	#,
 7710              		.cfi_def_cfa_offset 144
 7711              	.LBB447:
 7712              	.LBB445:
 7713              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 7714              		.loc 1 93 22 view .LVU2581
 7715 2f34 49D1EE   		shr	r14	# prephitmp_1527
 7716              	.LBE445:
 7717              	.LBE447:
 7718              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7719              		.loc 1 901 86 view .LVU2582
 7720 2f37 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp1192
 7720      40
 7721              	.LBB448:
 7722              	.LBB446:
 7723              	# sieve_extend.c:92:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 7724              		.loc 1 92 33 view .LVU2583
GAS LISTING /tmp/ccdGK7kM.s 			page 216


 7725 2f3c BF080000 		mov	edi, 8	#,
 7725      00
 7726              	.LVL387:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 7727              		.loc 1 92 33 view .LVU2584
 7728 2f41 BE180000 		mov	esi, 24	#,
 7728      00
 7729              	.LVL388:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 7730              		.loc 1 92 33 view .LVU2585
 7731 2f46 E8000000 		call	aligned_alloc@PLT	#
 7731      00
 7732              	.LVL389:
 7733              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 7734              		.loc 1 93 22 view .LVU2586
 7735 2f4b 498DB600 		lea	rsi, 1024[r14]	# tmp539,
 7735      040000
 7736 2f52 48C1EE0A 		shr	rsi, 10	# tmp540,
 7737              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 7738              		.loc 1 93 12 view .LVU2587
 7739 2f56 48C1E607 		sal	rsi, 7	# memSize,
 7740              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 7741              		.loc 1 95 23 view .LVU2588
 7742 2f5a BF800000 		mov	edi, 128	#,
 7742      00
 7743              	# sieve_extend.c:92:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 7744              		.loc 1 92 33 view .LVU2589
 7745 2f5f 4989C7   		mov	r15, rax	# <retval>, tmp1193
 7746 2f62 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 7746      30
 7747              	.LVL390:
  93:sieve_extend.c **** 
 7748              		.loc 1 93 5 is_stmt 1 view .LVU2590
 7749              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 7750              		.loc 1 93 22 is_stmt 0 view .LVU2591
 7751 2f67 4C893424 		mov	QWORD PTR [rsp], r14	# %sfp, prephitmp_1527
 7752              	.LVL391:
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 7753              		.loc 1 95 5 is_stmt 1 view .LVU2592
 7754              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 7755              		.loc 1 95 23 is_stmt 0 view .LVU2593
 7756 2f6b E8000000 		call	aligned_alloc@PLT	#
 7756      00
 7757              	.LVL392:
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 7758              		.loc 1 95 23 view .LVU2594
 7759 2f70 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _95
 7759      38
 7760              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 7761              		.loc 1 95 21 view .LVU2595
GAS LISTING /tmp/ccdGK7kM.s 			page 217


 7762 2f75 498907   		mov	QWORD PTR [r15], rax	# sieve_90->bitarray, _95
  96:sieve_extend.c ****     sieve->size     = size;
 7763              		.loc 1 96 5 is_stmt 1 view .LVU2596
 7764              	# sieve_extend.c:96:     sieve->bits     = size >> 1;
  96:sieve_extend.c ****     sieve->size     = size;
 7765              		.loc 1 96 21 is_stmt 0 view .LVU2597
 7766 2f78 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_90->bits, prephitmp_1527
  97:sieve_extend.c **** 
 7767              		.loc 1 97 5 is_stmt 1 view .LVU2598
 7768              	# sieve_extend.c:97:     sieve->size     = size;
  97:sieve_extend.c **** 
 7769              		.loc 1 97 21 is_stmt 0 view .LVU2599
 7770 2f7c 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_90->size, maxints
 101:sieve_extend.c **** }
 7771              		.loc 1 101 5 is_stmt 1 view .LVU2600
 7772              	.LVL393:
 101:sieve_extend.c **** }
 7773              		.loc 1 101 5 is_stmt 0 view .LVU2601
 7774              	.LBE446:
 7775              	.LBE448:
 903:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 7776              		.loc 1 903 5 is_stmt 1 view .LVU2602
 904:sieve_extend.c **** 
 7777              		.loc 1 904 5 view .LVU2603
 906:sieve_extend.c **** 
 7778              		.loc 1 906 5 view .LVU2604
 909:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 7779              		.loc 1 909 5 view .LVU2605
 7780              	.LBB449:
 7781              	.LBI449:
 862:sieve_extend.c ****     register counter_t prime   = 0;
 7782              		.loc 1 862 21 view .LVU2606
 7783              	.LBB450:
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 7784              		.loc 1 863 5 view .LVU2607
 864:sieve_extend.c ****     counter_t pattern_start    = 0;
 7785              		.loc 1 864 5 view .LVU2608
 865:sieve_extend.c ****     counter_t range_stop       = block_start;
 7786              		.loc 1 865 5 view .LVU2609
 866:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 7787              		.loc 1 866 5 view .LVU2610
 867:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 7788              		.loc 1 867 5 view .LVU2611
 868:sieve_extend.c **** 
 7789              		.loc 1 868 5 view .LVU2612
 870:sieve_extend.c ****     
 7790              		.loc 1 870 5 view .LVU2613
 7791              	# sieve_extend.c:870:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 870:sieve_extend.c ****     
 7792              		.loc 1 870 24 is_stmt 0 view .LVU2614
 7793 2f80 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_95],
 7793      000000
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7794              		.loc 1 872 5 is_stmt 1 view .LVU2615
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7795              		.loc 1 872 11 view .LVU2616
 7796              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
GAS LISTING /tmp/ccdGK7kM.s 			page 218


 868:sieve_extend.c **** 
 7797              		.loc 1 868 18 is_stmt 0 view .LVU2617
 7798 2f87 31F6     		xor	esi, esi	# block$pattern_start
 7799              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7800              		.loc 1 872 5 view .LVU2618
 7801 2f89 4D85F6   		test	r14, r14	# prephitmp_1527
 7802 2f8c 0F84391B 		je	.L1381	#,
 7802      0000
 7803              	.LBB451:
 7804              	# sieve_extend.c:873:         prime = searchBitFalse(bitarray, prime+1);
 873:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 7805              		.loc 1 873 17 view .LVU2619
 7806 2f92 41BD0100 		mov	r13d, 1	# index,
 7806      0000
 7807              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 7808              		.loc 1 878 102 view .LVU2620
 7809 2f98 4C896C24 		mov	QWORD PTR 8[rsp], r13	# %sfp, index
 7809      08
 7810              	.LBE451:
 7811              	# sieve_extend.c:865:     counter_t pattern_start    = 0;
 865:sieve_extend.c ****     counter_t range_stop       = block_start;
 7812              		.loc 1 865 15 view .LVU2621
 7813 2f9d 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 7813      10000000 
 7813      00
 7814              	.LBB502:
 7815              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 7816              		.loc 1 878 102 view .LVU2622
 7817 2fa6 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# _95, %sfp
 7817      38
 7818 2fab 488B4424 		mov	rax, QWORD PTR 8[rsp]	# index, %sfp
 7818      08
 7819              	.LVL394:
 878:sieve_extend.c **** 
 7820              		.loc 1 878 102 view .LVU2623
 7821              	.LBE502:
 7822              	# sieve_extend.c:864:     counter_t patternsize_bits = 1;
 864:sieve_extend.c ****     counter_t pattern_start    = 0;
 7823              		.loc 1 864 15 view .LVU2624
 7824 2fb0 41BE0100 		mov	r14d, 1	# patternsize_bits,
 7824      0000
 7825              	.LVL395:
 7826              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 868:sieve_extend.c **** 
 7827              		.loc 1 868 18 view .LVU2625
 7828 2fb6 31D2     		xor	edx, edx	# block$pattern_size
 7829              	# sieve_extend.c:863:     register counter_t prime   = 0;
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 7830              		.loc 1 863 24 view .LVU2626
 7831 2fb8 31C9     		xor	ecx, ecx	# prime
 7832              	.LVL396:
 7833 2fba 660F1F44 		.p2align 4,,10
 7833      0000
 7834              		.p2align 3
GAS LISTING /tmp/ccdGK7kM.s 			page 219


 7835              	.L761:
 7836              	.LBB503:
 7837              	.LBB452:
 7838              	.LBB453:
 112:sieve_extend.c **** }
 7839              		.loc 1 112 5 is_stmt 1 view .LVU2627
 112:sieve_extend.c **** }
 7840              		.loc 1 112 5 is_stmt 0 view .LVU2628
 7841              	.LBE453:
 7842              	.LBE452:
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7843              		.loc 1 874 9 is_stmt 1 view .LVU2629
 7844              	# sieve_extend.c:874:         counter_t start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7845              		.loc 1 874 45 is_stmt 0 view .LVU2630
 7846 2fc0 488D5801 		lea	rbx, 1[rax]	# index,
 7847 2fc4 4C8D2400 		lea	r12, [rax+rax]	# _951,
 7848              	# sieve_extend.c:874:         counter_t start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7849              		.loc 1 874 19 view .LVU2631
 7850 2fc8 4889DD   		mov	rbp, rbx	# index, index
 7851 2fcb 490FAFEC 		imul	rbp, r12	# index, _951
 7852              	.LVL397:
 875:sieve_extend.c **** 
 7853              		.loc 1 875 9 is_stmt 1 view .LVU2632
 7854              	# sieve_extend.c:875:         if unlikely(start > block_stop) break;
 875:sieve_extend.c **** 
 7855              		.loc 1 875 12 is_stmt 0 view .LVU2633
 7856 2fcf 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# index, %sfp
 7857 2fd3 0F87C309 		ja	.L1382	#,
 7857      0000
 877:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 7858              		.loc 1 877 9 is_stmt 1 view .LVU2634
 7859              	# sieve_extend.c:877:         const counter_t step  = prime * 2 + 1;
 877:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 7860              		.loc 1 877 25 is_stmt 0 view .LVU2635
 7861 2fd9 49FFC4   		inc	r12	# step
 7862              	.LVL398:
 878:sieve_extend.c **** 
 7863              		.loc 1 878 9 is_stmt 1 view .LVU2636
 7864              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 7865              		.loc 1 878 12 is_stmt 0 view .LVU2637
 7866 2fdc 4885DB   		test	rbx, rbx	# index
 7867 2fdf 7516     		jne	.L767	#,
 878:sieve_extend.c **** 
 7868              		.loc 1 878 41 is_stmt 1 view .LVU2638
 7869              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 7870              		.loc 1 878 102 is_stmt 0 view .LVU2639
 7871 2fe1 48C7C0FF 		mov	rax, -1	# tmp556,
 7871      FFFFFF
 7872 2fe8 31D2     		xor	edx, edx	# tmp555
 7873 2fea 49F7F4   		div	r12	# step
 7874              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 7875              		.loc 1 878 47 view .LVU2640
GAS LISTING /tmp/ccdGK7kM.s 			page 220


 7876 2fed 48C7C5FE 		mov	rbp, -2	# tmp557,
 7876      FFFFFF
 7877              	.LVL399:
 878:sieve_extend.c **** 
 7878              		.loc 1 878 47 view .LVU2641
 7879 2ff4 4829D5   		sub	rbp, rdx	# index, tmp555
 7880              	.LVL400:
 7881              	.L767:
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7882              		.loc 1 880 9 is_stmt 1 view .LVU2642
 7883              	# sieve_extend.c:880:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7884              		.loc 1 880 53 is_stmt 0 view .LVU2643
 7885 2ff7 4C89E6   		mov	rsi, r12	# _68, step
 7886 2ffa 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 7887              	# sieve_extend.c:880:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7888              		.loc 1 880 60 view .LVU2644
 7889 2ffe 4C8D3C36 		lea	r15, [rsi+rsi]	# _69,
 7890              	.LVL401:
 881:sieve_extend.c ****         block.pattern_start = pattern_start;
 7891              		.loc 1 881 9 is_stmt 1 view .LVU2645
 882:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 7892              		.loc 1 882 9 view .LVU2646
 883:sieve_extend.c **** 
 7893              		.loc 1 883 9 view .LVU2647
 7894              	# sieve_extend.c:880:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7895              		.loc 1 880 53 is_stmt 0 view .LVU2648
 7896 3002 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 7896      20
 7897              	# sieve_extend.c:883:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 883:sieve_extend.c **** 
 7898              		.loc 1 883 12 view .LVU2649
 7899 3007 4C3B3C24 		cmp	r15, QWORD PTR [rsp]	# _69, %sfp
 7900 300b 0F879B1A 		ja	.L1383	#,
 7900      0000
 885:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 7901              		.loc 1 885 9 is_stmt 1 view .LVU2650
 7902 3011 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 7902      10
 7903 3016 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 7903      18
 7904              	# sieve_extend.c:885:         if (patternsize_bits>1) {
 885:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 7905              		.loc 1 885 12 is_stmt 0 view .LVU2651
 7906 301b 4983FE01 		cmp	r14, 1	# patternsize_bits,
 7907 301f 0F872B01 		ja	.L1384	#,
 7907      0000
 7908              	.L770:
 7909              	.LVL402:
 889:sieve_extend.c **** 
 7910              		.loc 1 889 9 is_stmt 1 view .LVU2652
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7911              		.loc 1 891 9 view .LVU2653
 7912              	# sieve_extend.c:891:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
GAS LISTING /tmp/ccdGK7kM.s 			page 221


 7913              		.loc 1 891 17 is_stmt 0 view .LVU2654
 7914 3025 4983FC0F 		cmp	r12, 15	# step,
 7915 3029 0F867101 		jbe	.L1385	#,
 7915      0000
 7916              	.L774:
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 7917              		.loc 1 892 14 is_stmt 1 view .LVU2655
 7918              	# sieve_extend.c:892:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 7919              		.loc 1 892 17 is_stmt 0 view .LVU2656
 7920 302f 4983FC3F 		cmp	r12, 63	# step,
 7921 3033 0F868706 		jbe	.L1386	#,
 7921      0000
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 7922              		.loc 1 893 14 is_stmt 1 view .LVU2657
 7923              	# sieve_extend.c:893:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 7924              		.loc 1 893 17 is_stmt 0 view .LVU2658
 7925 3039 4981FCFF 		cmp	r12, 255	# step,
 7925      000000
 7926 3040 0F876204 		ja	.L795	#,
 7926      0000
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 7927              		.loc 1 893 48 is_stmt 1 view .LVU2659
 7928 3046 4C89F9   		mov	rcx, r15	#, _69
 7929 3049 4C89E2   		mov	rdx, r12	#, step
 7930 304c 4889EE   		mov	rsi, rbp	#, index
 7931 304f 4C89EF   		mov	rdi, r13	#, _95
 7932 3052 E849E1FF 		call	setBitsTrue_largeRange_vector	#
 7932      FF
 7933              	.LVL403:
 7934              	.L777:
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 7935              		.loc 1 893 48 is_stmt 0 view .LVU2660
 7936              	.LBE503:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7937              		.loc 1 872 11 is_stmt 1 view .LVU2661
 7938              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7939              		.loc 1 872 5 is_stmt 0 view .LVU2662
 7940 3057 4C3B3C24 		cmp	r15, QWORD PTR [rsp]	# _69, %sfp
 7941 305b 0F830504 		jnb	.L1387	#,
 7941      0000
 7942              	.LVL404:
 7943              	.L802:
 7944              	.LBB504:
 873:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 7945              		.loc 1 873 9 is_stmt 1 view .LVU2663
 7946              	.LBB455:
 7947              	.LBI452:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 7948              		.loc 1 110 25 view .LVU2664
 7949              	.LBB454:
 111:sieve_extend.c ****     return index;
 7950              		.loc 1 111 5 view .LVU2665
 111:sieve_extend.c ****     return index;
 7951              		.loc 1 111 11 view .LVU2666
GAS LISTING /tmp/ccdGK7kM.s 			page 222


 7952              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7953              		.loc 1 111 21 is_stmt 0 view .LVU2667
 7954 3061 4989DB   		mov	r11, rbx	# tmp543, index
 7955 3064 49C1EB06 		shr	r11, 6	# tmp543,
 7956              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7957              		.loc 1 111 12 view .LVU2668
 7958 3068 4F8B54DD 		mov	r10, QWORD PTR 0[r13+r11*8]	# *_942,* _95
 7958      00
 7959              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7960              		.loc 1 111 11 view .LVU2669
 7961 306d 490FA3DA 		bt	r10, rbx	# *_942, index
 7962 3071 0F83A900 		jnc	.L763	#,
 7962      0000
 111:sieve_extend.c ****     return index;
 7963              		.loc 1 111 58 is_stmt 1 view .LVU2670
 7964              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7965              		.loc 1 111 63 is_stmt 0 view .LVU2671
 7966 3077 488D4301 		lea	rax, 1[rbx]	# tmp839,
 7967              	.LVL405:
 7968              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7969              		.loc 1 111 21 view .LVU2672
 7970 307b 4989C1   		mov	r9, rax	# tmp548, index
 7971 307e 49C1E906 		shr	r9, 6	# tmp548,
 7972              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7973              		.loc 1 111 12 view .LVU2673
 7974 3082 4B8B4CCD 		mov	rcx, QWORD PTR 0[r13+r9*8]	# *_49, *_49
 7974      00
 7975              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7976              		.loc 1 111 63 view .LVU2674
 7977 3087 4889C3   		mov	rbx, rax	# index, tmp839
 111:sieve_extend.c ****     return index;
 7978              		.loc 1 111 11 is_stmt 1 view .LVU2675
 7979 308a 480FA3C1 		bt	rcx, rax	# *_49, index
 7980 308e 0F838C00 		jnc	.L763	#,
 7980      0000
 111:sieve_extend.c ****     return index;
 7981              		.loc 1 111 58 view .LVU2676
 7982              	.LVL406:
 7983              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7984              		.loc 1 111 63 is_stmt 0 view .LVU2677
 7985 3094 48FFC3   		inc	rbx	# index
 7986              	.LVL407:
 111:sieve_extend.c ****     return index;
 7987              		.loc 1 111 11 is_stmt 1 view .LVU2678
 7988              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7989              		.loc 1 111 21 is_stmt 0 view .LVU2679
 7990 3097 4889DD   		mov	rbp, rbx	# tmp1096, index
 7991 309a 48C1ED06 		shr	rbp, 6	# tmp1096,
GAS LISTING /tmp/ccdGK7kM.s 			page 223


 7992              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7993              		.loc 1 111 12 view .LVU2680
 7994 309e 4D8B44ED 		mov	r8, QWORD PTR 0[r13+rbp*8]	# *_49, *_49
 7994      00
 7995              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 7996              		.loc 1 111 11 view .LVU2681
 7997 30a3 490FA3D8 		bt	r8, rbx	# *_49, index
 7998 30a7 7377     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 7999              		.loc 1 111 58 is_stmt 1 view .LVU2682
 8000              	.LVL408:
 8001              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8002              		.loc 1 111 63 is_stmt 0 view .LVU2683
 8003 30a9 488D5802 		lea	rbx, 2[rax]	# index,
 8004              	.LVL409:
 111:sieve_extend.c ****     return index;
 8005              		.loc 1 111 11 is_stmt 1 view .LVU2684
 8006              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8007              		.loc 1 111 21 is_stmt 0 view .LVU2685
 8008 30ad 4889DA   		mov	rdx, rbx	# tmp1100, index
 8009 30b0 48C1EA06 		shr	rdx, 6	# tmp1100,
 8010              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8011              		.loc 1 111 12 view .LVU2686
 8012 30b4 498B74D5 		mov	rsi, QWORD PTR 0[r13+rdx*8]	# *_49, *_49
 8012      00
 8013              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8014              		.loc 1 111 11 view .LVU2687
 8015 30b9 480FA3DE 		bt	rsi, rbx	# *_49, index
 8016 30bd 7361     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 8017              		.loc 1 111 58 is_stmt 1 view .LVU2688
 8018              	.LVL410:
 8019              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8020              		.loc 1 111 63 is_stmt 0 view .LVU2689
 8021 30bf 488D5803 		lea	rbx, 3[rax]	# index,
 8022              	.LVL411:
 111:sieve_extend.c ****     return index;
 8023              		.loc 1 111 11 is_stmt 1 view .LVU2690
 8024              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8025              		.loc 1 111 21 is_stmt 0 view .LVU2691
 8026 30c3 4989DC   		mov	r12, rbx	# tmp1104, index
 8027 30c6 49C1EC06 		shr	r12, 6	# tmp1104,
 8028              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8029              		.loc 1 111 12 view .LVU2692
 8030 30ca 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# *_49, *_49
 8030      00
 8031              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccdGK7kM.s 			page 224


 8032              		.loc 1 111 11 view .LVU2693
 8033 30cf 480FA3DF 		bt	rdi, rbx	# *_49, index
 8034 30d3 734B     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 8035              		.loc 1 111 58 is_stmt 1 view .LVU2694
 8036              	.LVL412:
 8037              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8038              		.loc 1 111 63 is_stmt 0 view .LVU2695
 8039 30d5 488D5804 		lea	rbx, 4[rax]	# index,
 8040              	.LVL413:
 111:sieve_extend.c ****     return index;
 8041              		.loc 1 111 11 is_stmt 1 view .LVU2696
 8042              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8043              		.loc 1 111 21 is_stmt 0 view .LVU2697
 8044 30d9 4989DF   		mov	r15, rbx	# tmp1108, index
 8045 30dc 49C1EF06 		shr	r15, 6	# tmp1108,
 8046              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8047              		.loc 1 111 12 view .LVU2698
 8048 30e0 4F8B5CFD 		mov	r11, QWORD PTR 0[r13+r15*8]	# *_49, *_49
 8048      00
 8049              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8050              		.loc 1 111 11 view .LVU2699
 8051 30e5 490FA3DB 		bt	r11, rbx	# *_49, index
 8052 30e9 7335     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 8053              		.loc 1 111 58 is_stmt 1 view .LVU2700
 8054              	.LVL414:
 8055              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8056              		.loc 1 111 63 is_stmt 0 view .LVU2701
 8057 30eb 488D5805 		lea	rbx, 5[rax]	# index,
 8058              	.LVL415:
 111:sieve_extend.c ****     return index;
 8059              		.loc 1 111 11 is_stmt 1 view .LVU2702
 8060              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8061              		.loc 1 111 21 is_stmt 0 view .LVU2703
 8062 30ef 4989DA   		mov	r10, rbx	# tmp1112, index
 8063 30f2 49C1EA06 		shr	r10, 6	# tmp1112,
 8064              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8065              		.loc 1 111 12 view .LVU2704
 8066 30f6 4F8B4CD5 		mov	r9, QWORD PTR 0[r13+r10*8]	# *_49, *_49
 8066      00
 8067              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8068              		.loc 1 111 11 view .LVU2705
 8069 30fb 490FA3D9 		bt	r9, rbx	# *_49, index
 8070 30ff 731F     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 8071              		.loc 1 111 58 is_stmt 1 view .LVU2706
 8072              	.LVL416:
 8073              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccdGK7kM.s 			page 225


 111:sieve_extend.c ****     return index;
 8074              		.loc 1 111 63 is_stmt 0 view .LVU2707
 8075 3101 488D5806 		lea	rbx, 6[rax]	# index,
 8076              	.LVL417:
 111:sieve_extend.c ****     return index;
 8077              		.loc 1 111 11 is_stmt 1 view .LVU2708
 8078              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8079              		.loc 1 111 21 is_stmt 0 view .LVU2709
 8080 3105 4889D9   		mov	rcx, rbx	# tmp1116, index
 8081 3108 48C1E906 		shr	rcx, 6	# tmp1116,
 8082              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8083              		.loc 1 111 12 view .LVU2710
 8084 310c 498B6CCD 		mov	rbp, QWORD PTR 0[r13+rcx*8]	# *_49, *_49
 8084      00
 8085              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8086              		.loc 1 111 11 view .LVU2711
 8087 3111 480FA3DD 		bt	rbp, rbx	# *_49, index
 8088 3115 7309     		jnc	.L763	#,
 111:sieve_extend.c ****     return index;
 8089              		.loc 1 111 58 is_stmt 1 view .LVU2712
 8090              	.LVL418:
 8091              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8092              		.loc 1 111 63 is_stmt 0 view .LVU2713
 8093 3117 488D5807 		lea	rbx, 7[rax]	# index,
 8094              	.LVL419:
 111:sieve_extend.c ****     return index;
 8095              		.loc 1 111 11 is_stmt 1 view .LVU2714
 8096 311b E941FFFF 		jmp	.L802	#
 8096      FF
 8097              	.LVL420:
 8098              		.p2align 4,,10
 8099              		.p2align 3
 8100              	.L763:
 111:sieve_extend.c ****     return index;
 8101              		.loc 1 111 11 is_stmt 0 view .LVU2715
 8102              	.LBE454:
 8103              	.LBE455:
 8104              	.LBE504:
 8105              	.LBE450:
 8106              	.LBE449:
 8107              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8108              		.loc 1 901 86 view .LVU2716
 8109 3120 488B4424 		mov	rax, QWORD PTR 24[rsp]	# pattern_start, %sfp
 8109      18
 8110 3125 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 8110      10
 8111              	.LVL421:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8112              		.loc 1 901 86 view .LVU2717
 8113 312a 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# prime, %sfp
 8113      08
 8114 312f 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, pattern_start
GAS LISTING /tmp/ccdGK7kM.s 			page 226


 8114      10
 8115 3134 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 8116              	.LVL422:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8117              		.loc 1 901 86 view .LVU2718
 8118 3137 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, index
 8118      08
 8119 313c 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 8119      20
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8120              		.loc 1 901 86 view .LVU2719
 8121 3141 4889D8   		mov	rax, rbx	# index, index
 8122              	.LVL423:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8123              		.loc 1 901 86 view .LVU2720
 8124 3144 E977FEFF 		jmp	.L761	#
 8124      FF
 8125              	.LVL424:
 8126 3149 0F1F8000 		.p2align 4,,10
 8126      000000
 8127              		.p2align 3
 8128              	.L1384:
 8129              	.LBB515:
 8130              	.LBB510:
 8131              	.LBB505:
 886:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 8132              		.loc 1 886 13 is_stmt 1 view .LVU2721
 887:sieve_extend.c ****         }
 8133              		.loc 1 887 13 view .LVU2722
 8134              	.LBB456:
 8135              	.LBI456:
 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 8136              		.loc 1 766 20 view .LVU2723
 8137              	.LBB457:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8138              		.loc 1 767 5 view .LVU2724
 8139              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8140              		.loc 1 767 8 is_stmt 0 view .LVU2725
 8141 3150 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 8142 3154 0F861319 		jbe	.L1388	#,
 8142      0000
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 8143              		.loc 1 772 5 is_stmt 1 view .LVU2726
 8144              	.LVL425:
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8145              		.loc 1 773 5 view .LVU2727
 8146              	# sieve_extend.c:772:     const counter_t copy_start  = source_start + size;
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 8147              		.loc 1 772 21 is_stmt 0 view .LVU2728
 8148 315a 4F8D0436 		lea	r8, [r14+r14]	# copy_start,
 8149              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 8150              		.loc 1 774 22 view .LVU2729
 8151 315e 4D89F1   		mov	r9, r14	# source_bit, patternsize_bits
 8152              	# sieve_extend.c:773:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
GAS LISTING /tmp/ccdGK7kM.s 			page 227


 8153              		.loc 1 773 22 view .LVU2730
 8154 3161 4183E03F 		and	r8d, 63	# copy_bit,
 8155              	.LVL426:
 774:sieve_extend.c **** 
 8156              		.loc 1 774 5 is_stmt 1 view .LVU2731
 8157              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 8158              		.loc 1 774 22 is_stmt 0 view .LVU2732
 8159 3165 4183E13F 		and	r9d, 63	# source_bit,
 8160              	.LVL427:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 8161              		.loc 1 776 5 is_stmt 1 view .LVU2733
 8162              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 8163              		.loc 1 776 13 is_stmt 0 view .LVU2734
 8164 3169 4D39C8   		cmp	r8, r9	# copy_bit, source_bit
 8165              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 8166              		.loc 1 776 37 view .LVU2735
 8167 316c 4C89F9   		mov	rcx, r15	#, _69
 8168 316f 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8169 3172 4C89F6   		mov	rsi, r14	#, patternsize_bits
 8170 3175 4C89EF   		mov	rdi, r13	#, _95
 8171              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 8172              		.loc 1 776 13 view .LVU2736
 8173 3178 0F82C40A 		jb	.L1389	#,
 8173      0000
 8174              	.LVL428:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 8175              		.loc 1 777 10 is_stmt 1 view .LVU2737
 8176              	# sieve_extend.c:777:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 8177              		.loc 1 777 13 is_stmt 0 view .LVU2738
 8178 317e 0F86AF0A 		jbe	.L773	#,
 8178      0000
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 8179              		.loc 1 777 37 is_stmt 1 view .LVU2739
 8180 3184 E8A7D3FF 		call	extendSieve_shiftright_ivdep	#
 8180      FF
 8181              	.LVL429:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 8182              		.loc 1 777 37 is_stmt 0 view .LVU2740
 8183 3189 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 8183      18
 8184              	.LVL430:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 8185              		.loc 1 777 37 view .LVU2741
 8186              	.LBE457:
 8187              	.LBE456:
 889:sieve_extend.c **** 
 8188              		.loc 1 889 9 is_stmt 1 view .LVU2742
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8189              		.loc 1 891 9 view .LVU2743
 8190              	# sieve_extend.c:891:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8191              		.loc 1 891 17 is_stmt 0 view .LVU2744
GAS LISTING /tmp/ccdGK7kM.s 			page 228


 8192 318e 4983FC0F 		cmp	r12, 15	# step,
 8193 3192 0F8797FE 		ja	.L774	#,
 8193      FFFF
 8194              	.LVL431:
 8195 3198 0F1F8400 		.p2align 4,,10
 8195      00000000 
 8196              		.p2align 3
 8197              	.L1385:
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8198              		.loc 1 891 17 view .LVU2745
 8199 31a0 4D89E3   		mov	r11, r12	# patternsize, step
 8200              	.LBB460:
 8201              	.LBB461:
 8202              	# sieve_extend.c:226: 	register bitword_t pattern = SAFE_SHIFTBIT;
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 8203              		.loc 1 226 21 view .LVU2746
 8204 31a3 B9010000 		mov	ecx, 1	# pattern,
 8204      00
 8205              	.L775:
 8206              	.LVL432:
 8207              	.LBB462:
 228:sieve_extend.c **** 
 8208              		.loc 1 228 9 is_stmt 1 view .LVU2747
 8209              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8210              		.loc 1 227 88 is_stmt 0 view .LVU2748
 8211 31a8 4B8D041B 		lea	rax, [r11+r11]	# patternsize,
 8212              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8213              		.loc 1 228 29 view .LVU2749
 8214 31ac C4E2A1F7 		shlx	rdi, rcx, r11	# _103, pattern, patternsize
 8214      F9
 8215              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8216              		.loc 1 228 17 view .LVU2750
 8217 31b1 4809F9   		or	rcx, rdi	# pattern, _103
 8218              	.LVL433:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8219              		.loc 1 227 76 is_stmt 1 view .LVU2751
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8220              		.loc 1 227 41 view .LVU2752
 8221              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8222              		.loc 1 227 5 is_stmt 0 view .LVU2753
 8223 31b4 4883F840 		cmp	rax, 64	# patternsize,
 8224 31b8 0F87A200 		ja	.L1252	#,
 8224      0000
 228:sieve_extend.c **** 
 8225              		.loc 1 228 9 is_stmt 1 view .LVU2754
 8226              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8227              		.loc 1 227 88 is_stmt 0 view .LVU2755
 8228 31be 4E8D049D 		lea	r8, 0[0+r11*4]	# patternsize,
 8228      00000000 
 8229              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8230              		.loc 1 228 29 view .LVU2756
GAS LISTING /tmp/ccdGK7kM.s 			page 229


 8231 31c6 C4E2F9F7 		shlx	rsi, rcx, rax	# _103, pattern, patternsize
 8231      F1
 8232              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8233              		.loc 1 228 17 view .LVU2757
 8234 31cb 4809F1   		or	rcx, rsi	# pattern, _103
 8235              	.LVL434:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8236              		.loc 1 227 76 is_stmt 1 view .LVU2758
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8237              		.loc 1 227 41 view .LVU2759
 8238              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8239              		.loc 1 227 5 is_stmt 0 view .LVU2760
 8240 31ce 4983F840 		cmp	r8, 64	# patternsize,
 8241 31d2 0F878800 		ja	.L1252	#,
 8241      0000
 228:sieve_extend.c **** 
 8242              		.loc 1 228 9 is_stmt 1 view .LVU2761
 8243              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8244              		.loc 1 227 88 is_stmt 0 view .LVU2762
 8245 31d8 4E8D14DD 		lea	r10, 0[0+r11*8]	# patternsize,
 8245      00000000 
 8246              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8247              		.loc 1 228 29 view .LVU2763
 8248 31e0 C462B9F7 		shlx	r9, rcx, r8	# _103, pattern, patternsize
 8248      C9
 8249              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8250              		.loc 1 228 17 view .LVU2764
 8251 31e5 4C09C9   		or	rcx, r9	# pattern, _103
 8252              	.LVL435:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8253              		.loc 1 227 76 is_stmt 1 view .LVU2765
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8254              		.loc 1 227 41 view .LVU2766
 8255              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8256              		.loc 1 227 5 is_stmt 0 view .LVU2767
 8257 31e8 4983FA40 		cmp	r10, 64	# patternsize,
 8258 31ec 7772     		ja	.L1252	#,
 228:sieve_extend.c **** 
 8259              		.loc 1 228 9 is_stmt 1 view .LVU2768
 8260              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8261              		.loc 1 227 88 is_stmt 0 view .LVU2769
 8262 31ee 4C89DF   		mov	rdi, r11	# patternsize, patternsize
 8263 31f1 48C1E704 		sal	rdi, 4	# patternsize,
 8264              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8265              		.loc 1 228 29 view .LVU2770
 8266 31f5 C4E2A9F7 		shlx	rdx, rcx, r10	# _103, pattern, patternsize
 8266      D1
 8267              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 230


 8268              		.loc 1 228 17 view .LVU2771
 8269 31fa 4809D1   		or	rcx, rdx	# pattern, _103
 8270              	.LVL436:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8271              		.loc 1 227 76 is_stmt 1 view .LVU2772
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8272              		.loc 1 227 41 view .LVU2773
 8273              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8274              		.loc 1 227 5 is_stmt 0 view .LVU2774
 8275 31fd 4883FF40 		cmp	rdi, 64	# patternsize,
 8276 3201 775D     		ja	.L1252	#,
 228:sieve_extend.c **** 
 8277              		.loc 1 228 9 is_stmt 1 view .LVU2775
 8278              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8279              		.loc 1 227 88 is_stmt 0 view .LVU2776
 8280 3203 4C89DE   		mov	rsi, r11	# patternsize, patternsize
 8281 3206 48C1E605 		sal	rsi, 5	# patternsize,
 8282              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8283              		.loc 1 228 29 view .LVU2777
 8284 320a C4E2C1F7 		shlx	rax, rcx, rdi	# _103, pattern, patternsize
 8284      C1
 8285              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8286              		.loc 1 228 17 view .LVU2778
 8287 320f 4809C1   		or	rcx, rax	# pattern, _103
 8288              	.LVL437:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8289              		.loc 1 227 76 is_stmt 1 view .LVU2779
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8290              		.loc 1 227 41 view .LVU2780
 8291              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8292              		.loc 1 227 5 is_stmt 0 view .LVU2781
 8293 3212 4883FE40 		cmp	rsi, 64	# patternsize,
 8294 3216 7748     		ja	.L1252	#,
 228:sieve_extend.c **** 
 8295              		.loc 1 228 9 is_stmt 1 view .LVU2782
 8296              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8297              		.loc 1 227 88 is_stmt 0 view .LVU2783
 8298 3218 4D89D9   		mov	r9, r11	# patternsize, patternsize
 8299 321b 49C1E106 		sal	r9, 6	# patternsize,
 8300              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8301              		.loc 1 228 29 view .LVU2784
 8302 321f C462C9F7 		shlx	r8, rcx, rsi	# _103, pattern, patternsize
 8302      C1
 8303              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8304              		.loc 1 228 17 view .LVU2785
 8305 3224 4C09C1   		or	rcx, r8	# pattern, _103
 8306              	.LVL438:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8307              		.loc 1 227 76 is_stmt 1 view .LVU2786
GAS LISTING /tmp/ccdGK7kM.s 			page 231


 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8308              		.loc 1 227 41 view .LVU2787
 8309              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8310              		.loc 1 227 5 is_stmt 0 view .LVU2788
 8311 3227 4983F940 		cmp	r9, 64	# patternsize,
 8312 322b 7733     		ja	.L1252	#,
 228:sieve_extend.c **** 
 8313              		.loc 1 228 9 is_stmt 1 view .LVU2789
 8314              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8315              		.loc 1 227 88 is_stmt 0 view .LVU2790
 8316 322d 4C89DA   		mov	rdx, r11	# patternsize, patternsize
 8317 3230 48C1E207 		sal	rdx, 7	# patternsize,
 8318              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8319              		.loc 1 228 29 view .LVU2791
 8320 3234 C462B1F7 		shlx	r10, rcx, r9	# _103, pattern, patternsize
 8320      D1
 8321              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8322              		.loc 1 228 17 view .LVU2792
 8323 3239 4C09D1   		or	rcx, r10	# pattern, _103
 8324              	.LVL439:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8325              		.loc 1 227 76 is_stmt 1 view .LVU2793
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8326              		.loc 1 227 41 view .LVU2794
 8327              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8328              		.loc 1 227 5 is_stmt 0 view .LVU2795
 8329 323c 4883FA40 		cmp	rdx, 64	# patternsize,
 8330 3240 771E     		ja	.L1252	#,
 228:sieve_extend.c **** 
 8331              		.loc 1 228 9 is_stmt 1 view .LVU2796
 8332              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8333              		.loc 1 227 88 is_stmt 0 view .LVU2797
 8334 3242 49C1E308 		sal	r11, 8	# patternsize,
 8335              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8336              		.loc 1 228 29 view .LVU2798
 8337 3246 C4E2E9F7 		shlx	rdi, rcx, rdx	# _103, pattern, patternsize
 8337      F9
 8338              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 8339              		.loc 1 228 17 view .LVU2799
 8340 324b 4809F9   		or	rcx, rdi	# pattern, _103
 8341              	.LVL440:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8342              		.loc 1 227 76 is_stmt 1 view .LVU2800
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8343              		.loc 1 227 41 view .LVU2801
 8344              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8345              		.loc 1 227 5 is_stmt 0 view .LVU2802
 8346 324e 4983FB40 		cmp	r11, 64	# patternsize,
GAS LISTING /tmp/ccdGK7kM.s 			page 232


 8347 3252 0F8650FF 		jbe	.L775	#,
 8347      FFFF
 8348              	.LVL441:
 8349 3258 0F1F8400 		.p2align 4,,10
 8349      00000000 
 8350              		.p2align 3
 8351              	.L1252:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8352              		.loc 1 227 5 view .LVU2803
 8353              	.LBE462:
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8354              		.loc 1 231 5 is_stmt 1 view .LVU2804
 8355              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 8356              		.loc 1 232 24 is_stmt 0 view .LVU2805
 8357 3260 4989E8   		mov	r8, rbp	# copy_word, index
 8358              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8359              		.loc 1 231 21 view .LVU2806
 8360 3263 4C89FF   		mov	rdi, r15	# range_stop_word, _69
 8361              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 8362              		.loc 1 232 24 view .LVU2807
 8363 3266 49C1E806 		shr	r8, 6	# copy_word,
 8364 326a 4489F8   		mov	eax, r15d	# tmp561, _69
 8365 326d 4B8D74C5 		lea	rsi, 0[r13+r8*8]	# _1250,
 8365      00
 8366 3272 F7D0     		not	eax	# tmp561
 8367 3274 49C7C1FF 		mov	r9, -1	# tmp1548,
 8367      FFFFFF
 8368              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8369              		.loc 1 231 21 view .LVU2808
 8370 327b 48C1EF06 		shr	rdi, 6	# range_stop_word,
 8371              	.LVL442:
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 8372              		.loc 1 232 5 is_stmt 1 view .LVU2809
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8373              		.loc 1 233 6 view .LVU2810
 8374 327f C442FBF7 		shrx	r10, r9, rax	# _1257, tmp1548, tmp561
 8374      D1
 8375 3284 4C8B1E   		mov	r11, QWORD PTR [rsi]	# pretmp_1251, MEM[(uint64_t *)_1250]
 8376 3287 4C895424 		mov	QWORD PTR 40[rsp], r10	# %sfp, _1257
 8376      28
 8377              	# sieve_extend.c:233:      if (copy_word >= range_stop_word) { // shortcut
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8378              		.loc 1 233 9 is_stmt 0 view .LVU2811
 8379 328c 4C39C7   		cmp	rdi, r8	# range_stop_word, copy_word
 8380 328f 0F869508 		jbe	.L1390	#,
 8380      0000
 238:sieve_extend.c **** 
 8381              		.loc 1 238 5 is_stmt 1 view .LVU2812
 8382              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 8383              		.loc 1 238 27 is_stmt 0 view .LVU2813
 8384 3295 C4E2D1F7 		shlx	rdx, rcx, rbp	# tmp567, pattern, index
 8384      D1
GAS LISTING /tmp/ccdGK7kM.s 			page 233


 8385              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8386              		.loc 1 242 28 view .LVU2814
 8387 329a 4889E8   		mov	rax, rbp	# index, index
 8388              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 8389              		.loc 1 238 27 view .LVU2815
 8390 329d 4C09DA   		or	rdx, r11	# tmp568, pretmp_1251
 8391 32a0 488916   		mov	QWORD PTR [rsi], rdx	# MEM[(uint64_t *)_1250], tmp568
 8392              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8393              		.loc 1 242 28 view .LVU2816
 8394 32a3 83E03F   		and	eax, 63	# index,
 8395              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8396              		.loc 1 242 55 view .LVU2817
 8397 32a6 31D2     		xor	edx, edx	# tmp571
 8398 32a8 49F7F4   		div	r12	# step
 8399              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8400              		.loc 1 243 25 view .LVU2818
 8401 32ab B8400000 		mov	eax, 64	# tmp574,
 8401      00
 8402              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 8403              		.loc 1 244 84 view .LVU2819
 8404 32b0 BD200000 		mov	ebp, 32	# tmp578,
 8404      00
 8405              	.LVL443:
 244:sieve_extend.c **** 
 8406              		.loc 1 244 84 view .LVU2820
 8407 32b5 4C8D4FFF 		lea	r9, -1[rdi]	# _636,
 8408              	.LVL444:
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8409              		.loc 1 242 5 is_stmt 1 view .LVU2821
 8410              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8411              		.loc 1 242 13 is_stmt 0 view .LVU2822
 8412 32b9 C4E2E9F7 		shlx	rcx, rcx, rdx	# pattern, pattern, tmp571
 8412      C9
 8413              	.LVL445:
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8414              		.loc 1 243 5 is_stmt 1 view .LVU2823
 8415              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8416              		.loc 1 243 25 is_stmt 0 view .LVU2824
 8417 32be 31D2     		xor	edx, edx	# tmp575
 8418 32c0 49F7F4   		div	r12	# step
 8419              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 8420              		.loc 1 244 84 view .LVU2825
 8421 32c3 4829D5   		sub	rbp, rdx	# tmp577, tmp575
 8422              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 8423              		.loc 1 244 25 view .LVU2826
 8424 32c6 4C8D542D 		lea	r10, [rbp+rbp]	# pattern_shift_flipped,
 8424      00
GAS LISTING /tmp/ccdGK7kM.s 			page 234


 8425              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8426              		.loc 1 243 25 view .LVU2827
 8427 32cb 4989D4   		mov	r12, rdx	# tmp575, tmp575
 8428              	.LVL446:
 244:sieve_extend.c **** 
 8429              		.loc 1 244 5 is_stmt 1 view .LVU2828
 246:sieve_extend.c ****     #pragma unroll
 8430              		.loc 1 246 5 view .LVU2829
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8431              		.loc 1 249 5 view .LVU2830
 8432              	.LBB463:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8433              		.loc 1 249 10 view .LVU2831
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8434              		.loc 1 249 25 view .LVU2832
 8435 32ce 4189D3   		mov	r11d, edx	# _1542, tmp575
 8436 32d1 4489D0   		mov	eax, r10d	# _1543, pattern_shift_flipped
 8437              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8438              		.loc 1 249 5 is_stmt 0 view .LVU2833
 8439 32d4 4D39C1   		cmp	r9, r8	# _636, copy_word
 8440 32d7 0F846801 		je	.L778	#,
 8440      0000
 8441 32dd 4F8D4CCD 		lea	r9, 0[r13+r9*8]	# _1443,
 8441      00
 8442              	.LVL447:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8443              		.loc 1 249 5 view .LVU2834
 8444 32e2 4D89C8   		mov	r8, r9	# tmp841, _1443
 8445              	.LVL448:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8446              		.loc 1 249 5 view .LVU2835
 8447 32e5 4929F0   		sub	r8, rsi	# tmp841, ivtmp.557
 8448 32e8 4983E808 		sub	r8, 8	# tmp842,
 8449 32ec 49C1E803 		shr	r8, 3	# tmp840,
 8450 32f0 49FFC0   		inc	r8	# tmp843
 8451 32f3 4183E007 		and	r8d, 7	# tmp844,
 8452 32f7 0F84B300 		je	.L779	#,
 8452      0000
 8453 32fd 4983F801 		cmp	r8, 1	# tmp844,
 8454 3301 0F848B00 		je	.L1088	#,
 8454      0000
 8455 3307 4983F802 		cmp	r8, 2	# tmp844,
 8456 330b 7470     		je	.L1089	#,
 8457 330d 4983F803 		cmp	r8, 3	# tmp844,
 8458 3311 7455     		je	.L1090	#,
 8459 3313 4983F804 		cmp	r8, 4	# tmp844,
 8460 3317 743A     		je	.L1091	#,
 8461 3319 4983F805 		cmp	r8, 5	# tmp844,
 8462 331d 741F     		je	.L1092	#,
 8463 331f 4983F806 		cmp	r8, 6	# tmp844,
 8464 3323 0F856917 		jne	.L1391	#,
 8464      0000
 8465              	.LVL449:
 8466              	.L1093:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
GAS LISTING /tmp/ccdGK7kM.s 			page 235


 8467              		.loc 1 250 9 is_stmt 1 view .LVU2836
 8468              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8469              		.loc 1 250 28 is_stmt 0 view .LVU2837
 8470 3329 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8470      E9
 8471              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8472              		.loc 1 250 57 view .LVU2838
 8473 332e C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8473      C9
 8474              	.LVL450:
 8475              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8476              		.loc 1 250 17 view .LVU2839
 8477 3333 4809E9   		or	rcx, rbp	# pattern, _137
 8478              	.LVL451:
 251:sieve_extend.c ****     } 
 8479              		.loc 1 251 9 is_stmt 1 view .LVU2840
 8480              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8481              		.loc 1 251 31 is_stmt 0 view .LVU2841
 8482 3336 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8483              		.loc 1 249 41 is_stmt 1 view .LVU2842
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8484              		.loc 1 249 25 view .LVU2843
 8485 333a 4883C608 		add	rsi, 8	# ivtmp.557,
 8486              	.LVL452:
 8487              	.L1092:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8488              		.loc 1 250 9 view .LVU2844
 8489              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8490              		.loc 1 250 28 is_stmt 0 view .LVU2845
 8491 333e C462A3F7 		shrx	r8, rcx, r11	# _137, pattern, _1542
 8491      C1
 8492              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8493              		.loc 1 250 57 view .LVU2846
 8494 3343 C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8494      C9
 8495              	.LVL453:
 8496              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8497              		.loc 1 250 17 view .LVU2847
 8498 3348 4C09C1   		or	rcx, r8	# pattern, _137
 8499              	.LVL454:
 251:sieve_extend.c ****     } 
 8500              		.loc 1 251 9 is_stmt 1 view .LVU2848
 8501              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8502              		.loc 1 251 31 is_stmt 0 view .LVU2849
 8503 334b 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8504              		.loc 1 249 41 is_stmt 1 view .LVU2850
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 236


 8505              		.loc 1 249 25 view .LVU2851
 8506 334f 4883C608 		add	rsi, 8	# ivtmp.557,
 8507              	.LVL455:
 8508              	.L1091:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8509              		.loc 1 250 9 view .LVU2852
 8510              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8511              		.loc 1 250 28 is_stmt 0 view .LVU2853
 8512 3353 C4E2A3F7 		shrx	rdx, rcx, r11	# _137, pattern, _1542
 8512      D1
 8513              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8514              		.loc 1 250 57 view .LVU2854
 8515 3358 C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8515      C9
 8516              	.LVL456:
 8517              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8518              		.loc 1 250 17 view .LVU2855
 8519 335d 4809D1   		or	rcx, rdx	# pattern, _137
 8520              	.LVL457:
 251:sieve_extend.c ****     } 
 8521              		.loc 1 251 9 is_stmt 1 view .LVU2856
 8522              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8523              		.loc 1 251 31 is_stmt 0 view .LVU2857
 8524 3360 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8525              		.loc 1 249 41 is_stmt 1 view .LVU2858
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8526              		.loc 1 249 25 view .LVU2859
 8527 3364 4883C608 		add	rsi, 8	# ivtmp.557,
 8528              	.LVL458:
 8529              	.L1090:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8530              		.loc 1 250 9 view .LVU2860
 8531              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8532              		.loc 1 250 28 is_stmt 0 view .LVU2861
 8533 3368 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8533      E9
 8534              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8535              		.loc 1 250 57 view .LVU2862
 8536 336d C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8536      C9
 8537              	.LVL459:
 8538              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8539              		.loc 1 250 17 view .LVU2863
 8540 3372 4809E9   		or	rcx, rbp	# pattern, _137
 8541              	.LVL460:
 251:sieve_extend.c ****     } 
 8542              		.loc 1 251 9 is_stmt 1 view .LVU2864
 8543              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
GAS LISTING /tmp/ccdGK7kM.s 			page 237


 8544              		.loc 1 251 31 is_stmt 0 view .LVU2865
 8545 3375 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8546              		.loc 1 249 41 is_stmt 1 view .LVU2866
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8547              		.loc 1 249 25 view .LVU2867
 8548 3379 4883C608 		add	rsi, 8	# ivtmp.557,
 8549              	.LVL461:
 8550              	.L1089:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8551              		.loc 1 250 9 view .LVU2868
 8552              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8553              		.loc 1 250 28 is_stmt 0 view .LVU2869
 8554 337d C462A3F7 		shrx	r8, rcx, r11	# _137, pattern, _1542
 8554      C1
 8555              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8556              		.loc 1 250 57 view .LVU2870
 8557 3382 C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8557      C9
 8558              	.LVL462:
 8559              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8560              		.loc 1 250 17 view .LVU2871
 8561 3387 4C09C1   		or	rcx, r8	# pattern, _137
 8562              	.LVL463:
 251:sieve_extend.c ****     } 
 8563              		.loc 1 251 9 is_stmt 1 view .LVU2872
 8564              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8565              		.loc 1 251 31 is_stmt 0 view .LVU2873
 8566 338a 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8567              		.loc 1 249 41 is_stmt 1 view .LVU2874
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8568              		.loc 1 249 25 view .LVU2875
 8569 338e 4883C608 		add	rsi, 8	# ivtmp.557,
 8570              	.LVL464:
 8571              	.L1088:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8572              		.loc 1 250 9 view .LVU2876
 8573              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8574              		.loc 1 250 28 is_stmt 0 view .LVU2877
 8575 3392 C4E2A3F7 		shrx	rdx, rcx, r11	# _137, pattern, _1542
 8575      D1
 8576              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8577              		.loc 1 250 57 view .LVU2878
 8578 3397 C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 8578      C9
 8579              	.LVL465:
 8580              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8581              		.loc 1 250 17 view .LVU2879
 8582 339c 4809D1   		or	rcx, rdx	# pattern, _137
GAS LISTING /tmp/ccdGK7kM.s 			page 238


 8583              	.LVL466:
 251:sieve_extend.c ****     } 
 8584              		.loc 1 251 9 is_stmt 1 view .LVU2880
 8585              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8586              		.loc 1 251 31 is_stmt 0 view .LVU2881
 8587 339f 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8588              		.loc 1 249 41 is_stmt 1 view .LVU2882
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8589              		.loc 1 249 25 view .LVU2883
 8590 33a3 4883C608 		add	rsi, 8	# ivtmp.557,
 8591              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8592              		.loc 1 249 5 is_stmt 0 view .LVU2884
 8593 33a7 4939F1   		cmp	r9, rsi	# _1443, ivtmp.557
 8594 33aa 0F849500 		je	.L778	#,
 8594      0000
 8595              	.LVL467:
 8596              	.L779:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8597              		.loc 1 250 9 is_stmt 1 view .LVU2885
 8598              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8599              		.loc 1 250 57 is_stmt 0 view .LVU2886
 8600 33b0 C462F9F7 		shlx	r8, rcx, rax	# _139, pattern, _1543
 8600      C1
 8601              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8602              		.loc 1 250 28 view .LVU2887
 8603 33b5 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8603      E9
 8604              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8605              		.loc 1 250 17 view .LVU2888
 8606 33ba 4C09C5   		or	rbp, r8	# pattern, _139
 251:sieve_extend.c ****     } 
 8607              		.loc 1 251 9 is_stmt 1 view .LVU2889
 8608              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8609              		.loc 1 250 57 is_stmt 0 view .LVU2890
 8610 33bd C4E2F9F7 		shlx	rdx, rbp, rax	# _139, pattern, _1543
 8610      D5
 8611              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8612              		.loc 1 250 28 view .LVU2891
 8613 33c2 C4E2A3F7 		shrx	rcx, rbp, r11	# _137, pattern, _1542
 8613      CD
 8614              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8615              		.loc 1 250 17 view .LVU2892
 8616 33c7 4809D1   		or	rcx, rdx	# pattern, _139
 8617              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8618              		.loc 1 250 57 view .LVU2893
 8619 33ca C462F9F7 		shlx	r8, rcx, rax	# _139, pattern, _1543
 8619      C1
GAS LISTING /tmp/ccdGK7kM.s 			page 239


 8620              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8621              		.loc 1 251 31 view .LVU2894
 8622 33cf 48096E08 		or	QWORD PTR 8[rsi], rbp	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8623              		.loc 1 249 41 is_stmt 1 view .LVU2895
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8624              		.loc 1 249 25 view .LVU2896
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8625              		.loc 1 250 9 view .LVU2897
 251:sieve_extend.c ****     } 
 8626              		.loc 1 251 9 view .LVU2898
 8627              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8628              		.loc 1 250 28 is_stmt 0 view .LVU2899
 8629 33d3 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8629      E9
 8630              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8631              		.loc 1 250 17 view .LVU2900
 8632 33d8 4C09C5   		or	rbp, r8	# pattern, _139
 8633              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8634              		.loc 1 250 57 view .LVU2901
 8635 33db C4E2F9F7 		shlx	rdx, rbp, rax	# _139, pattern, _1543
 8635      D5
 8636              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8637              		.loc 1 251 31 view .LVU2902
 8638 33e0 48094E10 		or	QWORD PTR 16[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8639              		.loc 1 249 41 is_stmt 1 view .LVU2903
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8640              		.loc 1 249 25 view .LVU2904
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8641              		.loc 1 250 9 view .LVU2905
 251:sieve_extend.c ****     } 
 8642              		.loc 1 251 9 view .LVU2906
 8643              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8644              		.loc 1 250 28 is_stmt 0 view .LVU2907
 8645 33e4 C4E2A3F7 		shrx	rcx, rbp, r11	# _137, pattern, _1542
 8645      CD
 8646              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8647              		.loc 1 250 17 view .LVU2908
 8648 33e9 4809D1   		or	rcx, rdx	# pattern, _139
 8649              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8650              		.loc 1 250 57 view .LVU2909
 8651 33ec C462F9F7 		shlx	r8, rcx, rax	# _139, pattern, _1543
 8651      C1
 8652              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8653              		.loc 1 251 31 view .LVU2910
 8654 33f1 48096E18 		or	QWORD PTR 24[rsi], rbp	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 240


 8655              		.loc 1 249 41 is_stmt 1 view .LVU2911
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8656              		.loc 1 249 25 view .LVU2912
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8657              		.loc 1 250 9 view .LVU2913
 251:sieve_extend.c ****     } 
 8658              		.loc 1 251 9 view .LVU2914
 8659              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8660              		.loc 1 250 28 is_stmt 0 view .LVU2915
 8661 33f5 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8661      E9
 8662              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8663              		.loc 1 250 17 view .LVU2916
 8664 33fa 4C09C5   		or	rbp, r8	# pattern, _139
 8665              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8666              		.loc 1 250 57 view .LVU2917
 8667 33fd C4E2F9F7 		shlx	rdx, rbp, rax	# _139, pattern, _1543
 8667      D5
 8668              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8669              		.loc 1 251 31 view .LVU2918
 8670 3402 48094E20 		or	QWORD PTR 32[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8671              		.loc 1 249 41 is_stmt 1 view .LVU2919
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8672              		.loc 1 249 25 view .LVU2920
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8673              		.loc 1 250 9 view .LVU2921
 251:sieve_extend.c ****     } 
 8674              		.loc 1 251 9 view .LVU2922
 8675              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8676              		.loc 1 250 28 is_stmt 0 view .LVU2923
 8677 3406 C4E2A3F7 		shrx	rcx, rbp, r11	# _137, pattern, _1542
 8677      CD
 8678              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8679              		.loc 1 250 17 view .LVU2924
 8680 340b 4809D1   		or	rcx, rdx	# pattern, _139
 8681              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8682              		.loc 1 251 31 view .LVU2925
 8683 340e 48096E28 		or	QWORD PTR 40[rsi], rbp	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8684              		.loc 1 249 41 is_stmt 1 view .LVU2926
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8685              		.loc 1 249 25 view .LVU2927
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8686              		.loc 1 250 9 view .LVU2928
 251:sieve_extend.c ****     } 
 8687              		.loc 1 251 9 view .LVU2929
 8688              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8689              		.loc 1 250 57 is_stmt 0 view .LVU2930
GAS LISTING /tmp/ccdGK7kM.s 			page 241


 8690 3412 C462F9F7 		shlx	r8, rcx, rax	# _139, pattern, _1543
 8690      C1
 8691              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8692              		.loc 1 250 28 view .LVU2931
 8693 3417 C4E2A3F7 		shrx	rbp, rcx, r11	# _137, pattern, _1542
 8693      E9
 8694              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8695              		.loc 1 250 17 view .LVU2932
 8696 341c 4C09C5   		or	rbp, r8	# pattern, _139
 8697              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8698              		.loc 1 251 31 view .LVU2933
 8699 341f 48094E30 		or	QWORD PTR 48[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8700              		.loc 1 249 41 is_stmt 1 view .LVU2934
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8701              		.loc 1 249 25 view .LVU2935
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8702              		.loc 1 250 9 view .LVU2936
 251:sieve_extend.c ****     } 
 8703              		.loc 1 251 9 view .LVU2937
 8704              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8705              		.loc 1 250 57 is_stmt 0 view .LVU2938
 8706 3423 C4E2F9F7 		shlx	rdx, rbp, rax	# _139, pattern, _1543
 8706      D5
 8707              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8708              		.loc 1 250 28 view .LVU2939
 8709 3428 C4E2A3F7 		shrx	rcx, rbp, r11	# _137, pattern, _1542
 8709      CD
 8710              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8711              		.loc 1 250 17 view .LVU2940
 8712 342d 4809D1   		or	rcx, rdx	# pattern, _139
 8713              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8714              		.loc 1 251 31 view .LVU2941
 8715 3430 48096E38 		or	QWORD PTR 56[rsi], rbp	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8716              		.loc 1 249 41 is_stmt 1 view .LVU2942
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8717              		.loc 1 249 25 view .LVU2943
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 8718              		.loc 1 250 9 view .LVU2944
 251:sieve_extend.c ****     } 
 8719              		.loc 1 251 9 view .LVU2945
 8720              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 8721              		.loc 1 251 31 is_stmt 0 view .LVU2946
 8722 3434 48094E40 		or	QWORD PTR 64[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8723              		.loc 1 249 41 is_stmt 1 view .LVU2947
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8724              		.loc 1 249 25 view .LVU2948
GAS LISTING /tmp/ccdGK7kM.s 			page 242


 8725 3438 4883C640 		add	rsi, 64	# ivtmp.557,
 8726              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8727              		.loc 1 249 5 is_stmt 0 view .LVU2949
 8728 343c 4939F1   		cmp	r9, rsi	# _1443, ivtmp.557
 8729 343f 0F856BFF 		jne	.L779	#,
 8729      FFFF
 8730              	.L778:
 8731              	.LBE463:
 253:sieve_extend.c **** }
 8732              		.loc 1 253 5 is_stmt 1 view .LVU2950
 8733              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 8734              		.loc 1 253 44 is_stmt 0 view .LVU2951
 8735 3445 C4E29BF7 		shrx	rsi, rcx, r12	# tmp583, pattern, tmp575
 8735      F1
 8736              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 8737              		.loc 1 253 73 view .LVU2952
 8738 344a C462A9F7 		shlx	r12, rcx, r10	# tmp584, pattern, pattern_shift_flipped
 8738      E1
 8739              	.LVL468:
 8740              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 8741              		.loc 1 253 62 view .LVU2953
 8742 344f 4C09E6   		or	rsi, r12	# tmp585, tmp584
 8743              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 8744              		.loc 1 253 100 view .LVU2954
 8745 3452 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp586, %sfp
 8745      28
 8746              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 8747              		.loc 1 253 31 view .LVU2955
 8748 3457 490974FD 		or	QWORD PTR 0[r13+rdi*8], rsi	# *_149, tmp586
 8748      00
 8749              	.LVL469:
 253:sieve_extend.c **** }
 8750              		.loc 1 253 31 view .LVU2956
 8751              	.LBE461:
 8752              	.LBE460:
 8753              	.LBE505:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8754              		.loc 1 872 11 is_stmt 1 view .LVU2957
 8755              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8756              		.loc 1 872 5 is_stmt 0 view .LVU2958
 8757 345c 4C3B3C24 		cmp	r15, QWORD PTR [rsp]	# _69, %sfp
 8758 3460 0F82FBFB 		jb	.L802	#,
 8758      FFFF
 8759              	.LVL470:
 8760              	.L1387:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8761              		.loc 1 872 5 view .LVU2959
 8762 3466 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 8762      30
 8763              	.LVL471:
GAS LISTING /tmp/ccdGK7kM.s 			page 243


 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8764              		.loc 1 872 5 view .LVU2960
 8765 346b 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# index, %sfp
 8765      08
 8766              	.LVL472:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8767              		.loc 1 872 5 view .LVU2961
 8768 3470 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_1527, sieve_90->bits
 8769 3474 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 8770 3477 48891C24 		mov	QWORD PTR [rsp], rbx	# %sfp, prephitmp_1527
 8771              	.LVL473:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8772              		.loc 1 872 5 view .LVU2962
 8773 347b 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 8773      20
 8774              	.LVL474:
 898:sieve_extend.c **** }
 8775              		.loc 1 898 5 is_stmt 1 view .LVU2963
 8776              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8777              		.loc 1 872 5 is_stmt 0 view .LVU2964
 8778 3480 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 8778      10
 8779              	.LVL475:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8780              		.loc 1 872 5 view .LVU2965
 8781              	.LBE510:
 8782              	.LBE515:
 910:sieve_extend.c ****     prime = block.prime;
 8783              		.loc 1 910 5 is_stmt 1 view .LVU2966
 8784              	.LBB516:
 8785              	.LBI516:
 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 8786              		.loc 1 766 20 view .LVU2967
 8787              	.LBB517:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8788              		.loc 1 767 5 view .LVU2968
 8789              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8790              		.loc 1 767 8 is_stmt 0 view .LVU2969
 8791 3485 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 8792 3489 0F872905 		ja	.L803	#,
 8792      0000
 8793              	.LVL476:
 8794              	.L762:
 768:sieve_extend.c ****         return; // rapid exit for small sizes
 8795              		.loc 1 768 9 is_stmt 1 view .LVU2970
 8796 348f 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 8797 3493 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 8797      38
 8798 3498 E863CBFF 		call	extendSieve_smallSize	#
 8798      FF
 8799              	.LVL477:
 769:sieve_extend.c ****     }
 8800              		.loc 1 769 9 view .LVU2971
 8801 349d E9410500 		jmp	.L804	#
 8801      00
GAS LISTING /tmp/ccdGK7kM.s 			page 244


 8802              	.LVL478:
 8803              		.p2align 4,,10
 8804 34a2 660F1F44 		.p2align 3
 8804      0000
 8805              	.L795:
 769:sieve_extend.c ****     }
 8806              		.loc 1 769 9 is_stmt 0 view .LVU2972
 8807              	.LBE517:
 8808              	.LBE516:
 8809              	.LBB521:
 8810              	.LBB511:
 8811              	.LBB506:
 894:sieve_extend.c ****         block.prime = prime;
 8812              		.loc 1 894 48 is_stmt 1 view .LVU2973
 8813              	.LBB467:
 8814              	.LBI467:
 375:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8815              		.loc 1 375 20 view .LVU2974
 8816              	.LBB468:
 376:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 8817              		.loc 1 376 5 view .LVU2975
 377:sieve_extend.c **** 
 8818              		.loc 1 377 5 view .LVU2976
 8819              	# sieve_extend.c:377:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 377:sieve_extend.c **** 
 8820              		.loc 1 377 74 is_stmt 0 view .LVU2977
 8821 34a8 4D89E2   		mov	r10, r12	# tmp615, step
 8822 34ab 49C1E206 		sal	r10, 6	# tmp615,
 8823              	# sieve_extend.c:377:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 377:sieve_extend.c **** 
 8824              		.loc 1 377 21 view .LVU2978
 8825 34af 4901EA   		add	r10, rbp	# range_stop_unique, index
 8826              	.LVL479:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 8827              		.loc 1 381 5 is_stmt 1 view .LVU2979
 8828              	.LBB469:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 8829              		.loc 1 381 10 view .LVU2980
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 8830              		.loc 1 381 50 view .LVU2981
 8831              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 8832              		.loc 1 381 5 is_stmt 0 view .LVU2982
 8833 34b2 4C39D5   		cmp	rbp, r10	# index, range_stop_unique
 8834 34b5 0F839CFB 		jnb	.L777	#,
 8834      FFFF
 8835              	.LBB470:
 8836              	.LBB471:
 8837              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8838              		.loc 1 163 20 view .LVU2983
 8839 34bb 4D89FB   		mov	r11, r15	# range_stop_word, _69
 8840 34be 49C1EB06 		shr	r11, 6	# range_stop_word,
 8841              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 8842              		.loc 1 189 29 view .LVU2984
 8843 34c2 4489FA   		mov	edx, r15d	# tmp620, _69
GAS LISTING /tmp/ccdGK7kM.s 			page 245


 8844              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 8845              		.loc 1 165 110 view .LVU2985
 8846 34c5 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp618,
 8847              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 8848              		.loc 1 165 133 view .LVU2986
 8849 34c9 4D89D9   		mov	r9, r11	# tmp624, range_stop_word
 8850              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 8851              		.loc 1 189 29 view .LVU2987
 8852 34cc F7D2     		not	edx	# tmp620
 8853 34ce 48C7C6FF 		mov	rsi, -1	# tmp1570,
 8853      FFFFFF
 8854              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 8855              		.loc 1 165 133 view .LVU2988
 8856 34d5 4929C1   		sub	r9, rax	# tmp624, tmp618
 8857              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 8858              		.loc 1 189 29 view .LVU2989
 8859 34d8 C4E2EBF7 		shrx	rdi, rsi, rdx	# _293, tmp1570, tmp620
 8859      FE
 8860 34dd 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, _293
 8860      28
 8861              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 8862              		.loc 1 165 53 view .LVU2990
 8863 34e2 4939C3   		cmp	r11, rax	# range_stop_word, tmp618
 8864              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8865              		.loc 1 182 41 view .LVU2991
 8866 34e5 4F8D44DD 		lea	r8, 0[r13+r11*8]	# range_stop_ptr,
 8866      00
 8867              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 8868              		.loc 1 165 53 view .LVU2992
 8869 34ea 4F8D4CCD 		lea	r9, 0[r13+r9*8]	# tmp626,
 8869      00
 8870 34ef 4D89E3   		mov	r11, r12	# _1415, step
 8871 34f2 4D0F46CD 		cmovbe	r9, r13	# _95,, fast_loop_ptr
 8872              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 8873              		.loc 1 171 17 view .LVU2993
 8874 34f6 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _261,
 8874      00000000 
 8875 34fe 48C1E003 		sal	rax, 3	# tmp630,
 8876 3502 49C1E304 		sal	r11, 4	# _1415,
 8877              	.LVL480:
 8878 3506 662E0F1F 		.p2align 4,,10
 8878      84000000 
 8878      0000
 8879              		.p2align 3
 8880              	.L801:
 171:sieve_extend.c ****        *index_ptr |= mask;
 8881              		.loc 1 171 17 view .LVU2994
 8882              	.LBE471:
GAS LISTING /tmp/ccdGK7kM.s 			page 246


 8883              	.LBE470:
 382:sieve_extend.c ****     }
 8884              		.loc 1 382 9 is_stmt 1 view .LVU2995
 8885 3510 4889EF   		mov	rdi, rbp	# tmp633, index
 8886 3513 BA010000 		mov	edx, 1	# tmp1573,
 8886      00
 8887 3518 48C1EF06 		shr	rdi, 6	# tmp633,
 8888 351c C4E2D1F7 		shlx	rsi, rdx, rbp	# _246, tmp1573, index
 8888      F2
 8889              	.LVL481:
 8890              	.LBB474:
 8891              	.LBI470:
 135:sieve_extend.c **** //#if __APPLE__
 8892              		.loc 1 135 20 view .LVU2996
 8893              	.LBB472:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8894              		.loc 1 163 4 view .LVU2997
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 8895              		.loc 1 164 4 view .LVU2998
 8896              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 8897              		.loc 1 164 78 is_stmt 0 view .LVU2999
 8898 3521 498D54FD 		lea	rdx, 0[r13+rdi*8]	# index_ptr,
 8898      00
 8899              	.LVL482:
 165:sieve_extend.c **** 
 8900              		.loc 1 165 4 is_stmt 1 view .LVU3000
 169:sieve_extend.c ****        *index_ptr |= mask;
 8901              		.loc 1 169 4 view .LVU3001
 169:sieve_extend.c ****        *index_ptr |= mask;
 8902              		.loc 1 169 10 view .LVU3002
 8903 3526 4C39CA   		cmp	rdx, r9	# index_ptr, fast_loop_ptr
 8904 3529 0F830101 		jnb	.L796	#,
 8904      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 8905              		.loc 1 169 10 is_stmt 0 view .LVU3003
 8906 352f 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.598,
 8907              	.LVL483:
 8908              	.L797:
 170:sieve_extend.c ****        index_ptr+=step;
 8909              		.loc 1 170 8 is_stmt 1 view .LVU3004
 8910              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 8911              		.loc 1 170 19 is_stmt 0 view .LVU3005
 8912 3533 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 8913              		.loc 1 171 8 is_stmt 1 view .LVU3006
 8914              	.LVL484:
 172:sieve_extend.c ****        index_ptr+=step;
 8915              		.loc 1 172 8 view .LVU3007
 8916              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 8917              		.loc 1 172 19 is_stmt 0 view .LVU3008
 8918 3536 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 8919              		.loc 1 173 8 is_stmt 1 view .LVU3009
 8920              	.LVL485:
GAS LISTING /tmp/ccdGK7kM.s 			page 247


 174:sieve_extend.c ****        index_ptr+=step;
 8921              		.loc 1 174 8 view .LVU3010
 8922              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 8923              		.loc 1 174 19 is_stmt 0 view .LVU3011
 8924 353a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 8925              		.loc 1 175 8 is_stmt 1 view .LVU3012
 8926              	.LVL486:
 176:sieve_extend.c ****        index_ptr+=step;
 8927              		.loc 1 176 8 view .LVU3013
 8928              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 8929              		.loc 1 176 19 is_stmt 0 view .LVU3014
 8930 353d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 8931              		.loc 1 177 8 is_stmt 1 view .LVU3015
 8932              	.LVL487:
 178:sieve_extend.c ****        index_ptr+=step;
 8933              		.loc 1 178 8 view .LVU3016
 8934 3541 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 8935              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 8936              		.loc 1 178 19 is_stmt 0 view .LVU3017
 8937 3544 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 8938              		.loc 1 179 8 is_stmt 1 view .LVU3018
 8939 3548 4801C2   		add	rdx, rax	# index_ptr, tmp630
 8940              	.LVL488:
 169:sieve_extend.c ****        *index_ptr |= mask;
 8941              		.loc 1 169 10 view .LVU3019
 8942 354b 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 8943 354e 0F86DC00 		jbe	.L796	#,
 8943      0000
 170:sieve_extend.c ****        index_ptr+=step;
 8944              		.loc 1 170 8 view .LVU3020
 8945              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 8946              		.loc 1 170 19 is_stmt 0 view .LVU3021
 8947 3554 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 8948              		.loc 1 171 8 is_stmt 1 view .LVU3022
 8949              	.LVL489:
 172:sieve_extend.c ****        index_ptr+=step;
 8950              		.loc 1 172 8 view .LVU3023
 8951              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 8952              		.loc 1 172 19 is_stmt 0 view .LVU3024
 8953 3557 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 8954              		.loc 1 173 8 is_stmt 1 view .LVU3025
 8955              	.LVL490:
 174:sieve_extend.c ****        index_ptr+=step;
 8956              		.loc 1 174 8 view .LVU3026
 8957              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 8958              		.loc 1 174 19 is_stmt 0 view .LVU3027
GAS LISTING /tmp/ccdGK7kM.s 			page 248


 8959 355b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 8960              		.loc 1 175 8 is_stmt 1 view .LVU3028
 8961              	.LVL491:
 176:sieve_extend.c ****        index_ptr+=step;
 8962              		.loc 1 176 8 view .LVU3029
 8963              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 8964              		.loc 1 176 19 is_stmt 0 view .LVU3030
 8965 355e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 8966              		.loc 1 177 8 is_stmt 1 view .LVU3031
 8967              	.LVL492:
 178:sieve_extend.c ****        index_ptr+=step;
 8968              		.loc 1 178 8 view .LVU3032
 8969 3562 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 8970              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 8971              		.loc 1 178 19 is_stmt 0 view .LVU3033
 8972 3565 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 8973              		.loc 1 179 8 is_stmt 1 view .LVU3034
 8974 3569 4801C2   		add	rdx, rax	# index_ptr, tmp630
 8975              	.LVL493:
 169:sieve_extend.c ****        *index_ptr |= mask;
 8976              		.loc 1 169 10 view .LVU3035
 8977 356c 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 8978 356f 0F86BB00 		jbe	.L796	#,
 8978      0000
 170:sieve_extend.c ****        index_ptr+=step;
 8979              		.loc 1 170 8 view .LVU3036
 8980              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 8981              		.loc 1 170 19 is_stmt 0 view .LVU3037
 8982 3575 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 8983              		.loc 1 171 8 is_stmt 1 view .LVU3038
 8984              	.LVL494:
 172:sieve_extend.c ****        index_ptr+=step;
 8985              		.loc 1 172 8 view .LVU3039
 8986              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 8987              		.loc 1 172 19 is_stmt 0 view .LVU3040
 8988 3578 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 8989              		.loc 1 173 8 is_stmt 1 view .LVU3041
 8990              	.LVL495:
 174:sieve_extend.c ****        index_ptr+=step;
 8991              		.loc 1 174 8 view .LVU3042
 8992              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 8993              		.loc 1 174 19 is_stmt 0 view .LVU3043
 8994 357c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 8995              		.loc 1 175 8 is_stmt 1 view .LVU3044
 8996              	.LVL496:
 176:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 249


 8997              		.loc 1 176 8 view .LVU3045
 8998              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 8999              		.loc 1 176 19 is_stmt 0 view .LVU3046
 9000 357f 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9001              		.loc 1 177 8 is_stmt 1 view .LVU3047
 9002              	.LVL497:
 178:sieve_extend.c ****        index_ptr+=step;
 9003              		.loc 1 178 8 view .LVU3048
 9004 3583 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 9005              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9006              		.loc 1 178 19 is_stmt 0 view .LVU3049
 9007 3586 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9008              		.loc 1 179 8 is_stmt 1 view .LVU3050
 9009 358a 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9010              	.LVL498:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9011              		.loc 1 169 10 view .LVU3051
 9012 358d 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9013 3590 0F869A00 		jbe	.L796	#,
 9013      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9014              		.loc 1 170 8 view .LVU3052
 9015              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9016              		.loc 1 170 19 is_stmt 0 view .LVU3053
 9017 3596 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9018              		.loc 1 171 8 is_stmt 1 view .LVU3054
 9019              	.LVL499:
 172:sieve_extend.c ****        index_ptr+=step;
 9020              		.loc 1 172 8 view .LVU3055
 9021              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9022              		.loc 1 172 19 is_stmt 0 view .LVU3056
 9023 3599 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9024              		.loc 1 173 8 is_stmt 1 view .LVU3057
 9025              	.LVL500:
 174:sieve_extend.c ****        index_ptr+=step;
 9026              		.loc 1 174 8 view .LVU3058
 9027              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9028              		.loc 1 174 19 is_stmt 0 view .LVU3059
 9029 359d 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9030              		.loc 1 175 8 is_stmt 1 view .LVU3060
 9031              	.LVL501:
 176:sieve_extend.c ****        index_ptr+=step;
 9032              		.loc 1 176 8 view .LVU3061
 9033              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9034              		.loc 1 176 19 is_stmt 0 view .LVU3062
 9035 35a0 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
GAS LISTING /tmp/ccdGK7kM.s 			page 250


 177:sieve_extend.c ****        *index_ptr |= mask;
 9036              		.loc 1 177 8 is_stmt 1 view .LVU3063
 9037              	.LVL502:
 178:sieve_extend.c ****        index_ptr+=step;
 9038              		.loc 1 178 8 view .LVU3064
 9039 35a4 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 9040              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9041              		.loc 1 178 19 is_stmt 0 view .LVU3065
 9042 35a7 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9043              		.loc 1 179 8 is_stmt 1 view .LVU3066
 9044 35ab 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9045              	.LVL503:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9046              		.loc 1 169 10 view .LVU3067
 9047 35ae 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9048 35b1 767D     		jbe	.L796	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9049              		.loc 1 170 8 view .LVU3068
 9050              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9051              		.loc 1 170 19 is_stmt 0 view .LVU3069
 9052 35b3 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9053              		.loc 1 171 8 is_stmt 1 view .LVU3070
 9054              	.LVL504:
 172:sieve_extend.c ****        index_ptr+=step;
 9055              		.loc 1 172 8 view .LVU3071
 9056              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9057              		.loc 1 172 19 is_stmt 0 view .LVU3072
 9058 35b6 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9059              		.loc 1 173 8 is_stmt 1 view .LVU3073
 9060              	.LVL505:
 174:sieve_extend.c ****        index_ptr+=step;
 9061              		.loc 1 174 8 view .LVU3074
 9062              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9063              		.loc 1 174 19 is_stmt 0 view .LVU3075
 9064 35ba 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9065              		.loc 1 175 8 is_stmt 1 view .LVU3076
 9066              	.LVL506:
 176:sieve_extend.c ****        index_ptr+=step;
 9067              		.loc 1 176 8 view .LVU3077
 9068              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9069              		.loc 1 176 19 is_stmt 0 view .LVU3078
 9070 35bd 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9071              		.loc 1 177 8 is_stmt 1 view .LVU3079
 9072              	.LVL507:
 178:sieve_extend.c ****        index_ptr+=step;
 9073              		.loc 1 178 8 view .LVU3080
 9074 35c1 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
GAS LISTING /tmp/ccdGK7kM.s 			page 251


 9075              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9076              		.loc 1 178 19 is_stmt 0 view .LVU3081
 9077 35c4 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9078              		.loc 1 179 8 is_stmt 1 view .LVU3082
 9079 35c8 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9080              	.LVL508:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9081              		.loc 1 169 10 view .LVU3083
 9082 35cb 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9083 35ce 7660     		jbe	.L796	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9084              		.loc 1 170 8 view .LVU3084
 9085              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9086              		.loc 1 170 19 is_stmt 0 view .LVU3085
 9087 35d0 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9088              		.loc 1 171 8 is_stmt 1 view .LVU3086
 9089              	.LVL509:
 172:sieve_extend.c ****        index_ptr+=step;
 9090              		.loc 1 172 8 view .LVU3087
 9091              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9092              		.loc 1 172 19 is_stmt 0 view .LVU3088
 9093 35d3 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9094              		.loc 1 173 8 is_stmt 1 view .LVU3089
 9095              	.LVL510:
 174:sieve_extend.c ****        index_ptr+=step;
 9096              		.loc 1 174 8 view .LVU3090
 9097              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9098              		.loc 1 174 19 is_stmt 0 view .LVU3091
 9099 35d7 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9100              		.loc 1 175 8 is_stmt 1 view .LVU3092
 9101              	.LVL511:
 176:sieve_extend.c ****        index_ptr+=step;
 9102              		.loc 1 176 8 view .LVU3093
 9103              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9104              		.loc 1 176 19 is_stmt 0 view .LVU3094
 9105 35da 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9106              		.loc 1 177 8 is_stmt 1 view .LVU3095
 9107              	.LVL512:
 178:sieve_extend.c ****        index_ptr+=step;
 9108              		.loc 1 178 8 view .LVU3096
 9109 35de 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 9110              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9111              		.loc 1 178 19 is_stmt 0 view .LVU3097
 9112 35e1 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9113              		.loc 1 179 8 is_stmt 1 view .LVU3098
GAS LISTING /tmp/ccdGK7kM.s 			page 252


 9114 35e5 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9115              	.LVL513:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9116              		.loc 1 169 10 view .LVU3099
 9117 35e8 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9118 35eb 7643     		jbe	.L796	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9119              		.loc 1 170 8 view .LVU3100
 9120              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9121              		.loc 1 170 19 is_stmt 0 view .LVU3101
 9122 35ed 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9123              		.loc 1 171 8 is_stmt 1 view .LVU3102
 9124              	.LVL514:
 172:sieve_extend.c ****        index_ptr+=step;
 9125              		.loc 1 172 8 view .LVU3103
 9126              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9127              		.loc 1 172 19 is_stmt 0 view .LVU3104
 9128 35f0 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9129              		.loc 1 173 8 is_stmt 1 view .LVU3105
 9130              	.LVL515:
 174:sieve_extend.c ****        index_ptr+=step;
 9131              		.loc 1 174 8 view .LVU3106
 9132              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9133              		.loc 1 174 19 is_stmt 0 view .LVU3107
 9134 35f4 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9135              		.loc 1 175 8 is_stmt 1 view .LVU3108
 9136              	.LVL516:
 176:sieve_extend.c ****        index_ptr+=step;
 9137              		.loc 1 176 8 view .LVU3109
 9138              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9139              		.loc 1 176 19 is_stmt 0 view .LVU3110
 9140 35f7 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9141              		.loc 1 177 8 is_stmt 1 view .LVU3111
 9142              	.LVL517:
 178:sieve_extend.c ****        index_ptr+=step;
 9143              		.loc 1 178 8 view .LVU3112
 9144 35fb 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 9145              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9146              		.loc 1 178 19 is_stmt 0 view .LVU3113
 9147 35fe 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9148              		.loc 1 179 8 is_stmt 1 view .LVU3114
 9149 3602 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9150              	.LVL518:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9151              		.loc 1 169 10 view .LVU3115
 9152 3605 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9153 3608 7626     		jbe	.L796	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 253


 170:sieve_extend.c ****        index_ptr+=step;
 9154              		.loc 1 170 8 view .LVU3116
 9155              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9156              		.loc 1 170 19 is_stmt 0 view .LVU3117
 9157 360a 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_878, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9158              		.loc 1 171 8 is_stmt 1 view .LVU3118
 9159              	.LVL519:
 172:sieve_extend.c ****        index_ptr+=step;
 9160              		.loc 1 172 8 view .LVU3119
 9161              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9162              		.loc 1 172 19 is_stmt 0 view .LVU3120
 9163 360d 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_878, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9164              		.loc 1 173 8 is_stmt 1 view .LVU3121
 9165              	.LVL520:
 174:sieve_extend.c ****        index_ptr+=step;
 9166              		.loc 1 174 8 view .LVU3122
 9167              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9168              		.loc 1 174 19 is_stmt 0 view .LVU3123
 9169 3611 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1409, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9170              		.loc 1 175 8 is_stmt 1 view .LVU3124
 9171              	.LVL521:
 176:sieve_extend.c ****        index_ptr+=step;
 9172              		.loc 1 176 8 view .LVU3125
 9173              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9174              		.loc 1 176 19 is_stmt 0 view .LVU3126
 9175 3614 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1409, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9176              		.loc 1 177 8 is_stmt 1 view .LVU3127
 9177              	.LVL522:
 178:sieve_extend.c ****        index_ptr+=step;
 9178              		.loc 1 178 8 view .LVU3128
 9179 3618 4801C7   		add	rdi, rax	# ivtmp.598, tmp630
 9180              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9181              		.loc 1 178 19 is_stmt 0 view .LVU3129
 9182 361b 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_878, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9183              		.loc 1 179 8 is_stmt 1 view .LVU3130
 9184 361f 4801C2   		add	rdx, rax	# index_ptr, tmp630
 9185              	.LVL523:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9186              		.loc 1 169 10 view .LVU3131
 9187 3622 4939D1   		cmp	r9, rdx	# fast_loop_ptr, index_ptr
 9188 3625 0F8708FF 		ja	.L797	#,
 9188      FFFF
 9189 362b 0F1F4400 		.p2align 4,,10
 9189      00
 9190              		.p2align 3
 9191              	.L796:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/ccdGK7kM.s 			page 254


 9192              		.loc 1 182 4 view .LVU3132
 183:sieve_extend.c ****        *index_ptr |= mask;
 9193              		.loc 1 183 4 view .LVU3133
 183:sieve_extend.c ****        *index_ptr |= mask;
 9194              		.loc 1 183 10 view .LVU3134
 9195 3630 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9196 3633 765B     		jbe	.L798	#,
 9197              	.L799:
 184:sieve_extend.c ****        index_ptr+=step;
 9198              		.loc 1 184 8 view .LVU3135
 9199              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9200              		.loc 1 184 19 is_stmt 0 view .LVU3136
 9201 3635 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9202              		.loc 1 185 8 is_stmt 1 view .LVU3137
 9203              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9204              		.loc 1 185 17 is_stmt 0 view .LVU3138
 9205 3638 4801CA   		add	rdx, rcx	# index_ptr, _261
 9206              	.LVL524:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9207              		.loc 1 183 10 is_stmt 1 view .LVU3139
 9208 363b 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9209 363e 7650     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9210              		.loc 1 184 8 view .LVU3140
 9211              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9212              		.loc 1 184 19 is_stmt 0 view .LVU3141
 9213 3640 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9214              		.loc 1 185 8 is_stmt 1 view .LVU3142
 9215              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9216              		.loc 1 185 17 is_stmt 0 view .LVU3143
 9217 3643 4801CA   		add	rdx, rcx	# index_ptr, _261
 9218              	.LVL525:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9219              		.loc 1 183 10 is_stmt 1 view .LVU3144
 9220 3646 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9221 3649 7645     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9222              		.loc 1 184 8 view .LVU3145
 9223              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9224              		.loc 1 184 19 is_stmt 0 view .LVU3146
 9225 364b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9226              		.loc 1 185 8 is_stmt 1 view .LVU3147
 9227              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9228              		.loc 1 185 17 is_stmt 0 view .LVU3148
 9229 364e 4801CA   		add	rdx, rcx	# index_ptr, _261
 9230              	.LVL526:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9231              		.loc 1 183 10 is_stmt 1 view .LVU3149
GAS LISTING /tmp/ccdGK7kM.s 			page 255


 9232 3651 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9233 3654 763A     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9234              		.loc 1 184 8 view .LVU3150
 9235              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9236              		.loc 1 184 19 is_stmt 0 view .LVU3151
 9237 3656 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9238              		.loc 1 185 8 is_stmt 1 view .LVU3152
 9239              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9240              		.loc 1 185 17 is_stmt 0 view .LVU3153
 9241 3659 4801CA   		add	rdx, rcx	# index_ptr, _261
 9242              	.LVL527:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9243              		.loc 1 183 10 is_stmt 1 view .LVU3154
 9244 365c 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9245 365f 762F     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9246              		.loc 1 184 8 view .LVU3155
 9247              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9248              		.loc 1 184 19 is_stmt 0 view .LVU3156
 9249 3661 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9250              		.loc 1 185 8 is_stmt 1 view .LVU3157
 9251              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9252              		.loc 1 185 17 is_stmt 0 view .LVU3158
 9253 3664 4801CA   		add	rdx, rcx	# index_ptr, _261
 9254              	.LVL528:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9255              		.loc 1 183 10 is_stmt 1 view .LVU3159
 9256 3667 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9257 366a 7624     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9258              		.loc 1 184 8 view .LVU3160
 9259              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9260              		.loc 1 184 19 is_stmt 0 view .LVU3161
 9261 366c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9262              		.loc 1 185 8 is_stmt 1 view .LVU3162
 9263              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9264              		.loc 1 185 17 is_stmt 0 view .LVU3163
 9265 366f 4801CA   		add	rdx, rcx	# index_ptr, _261
 9266              	.LVL529:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9267              		.loc 1 183 10 is_stmt 1 view .LVU3164
 9268 3672 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9269 3675 7619     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9270              		.loc 1 184 8 view .LVU3165
 9271              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 256


 9272              		.loc 1 184 19 is_stmt 0 view .LVU3166
 9273 3677 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9274              		.loc 1 185 8 is_stmt 1 view .LVU3167
 9275              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9276              		.loc 1 185 17 is_stmt 0 view .LVU3168
 9277 367a 4801CA   		add	rdx, rcx	# index_ptr, _261
 9278              	.LVL530:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9279              		.loc 1 183 10 is_stmt 1 view .LVU3169
 9280 367d 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9281 3680 760E     		jbe	.L798	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9282              		.loc 1 184 8 view .LVU3170
 9283              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9284              		.loc 1 184 19 is_stmt 0 view .LVU3171
 9285 3682 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 9286              		.loc 1 185 8 is_stmt 1 view .LVU3172
 9287              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9288              		.loc 1 185 17 is_stmt 0 view .LVU3173
 9289 3685 4801CA   		add	rdx, rcx	# index_ptr, _261
 9290              	.LVL531:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9291              		.loc 1 183 10 is_stmt 1 view .LVU3174
 9292 3688 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9293 368b 77A8     		ja	.L799	#,
 9294 368d 0F1F00   		.p2align 4,,10
 9295              		.p2align 3
 9296              	.L798:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9297              		.loc 1 188 4 view .LVU3175
 9298              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9299              		.loc 1 188 7 is_stmt 0 view .LVU3176
 9300 3690 4939D0   		cmp	r8, rdx	# range_stop_ptr, index_ptr
 9301 3693 741B     		je	.L1392	#,
 9302              	.LVL532:
 9303              	.L800:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9304              		.loc 1 188 7 view .LVU3177
 9305              	.LBE472:
 9306              	.LBE474:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9307              		.loc 1 381 77 is_stmt 1 view .LVU3178
 9308              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9309              		.loc 1 381 83 is_stmt 0 view .LVU3179
 9310 3695 4C01E5   		add	rbp, r12	# index, step
 9311              	.LVL533:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9312              		.loc 1 381 50 is_stmt 1 view .LVU3180
 9313              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
GAS LISTING /tmp/ccdGK7kM.s 			page 257


 9314              		.loc 1 381 5 is_stmt 0 view .LVU3181
 9315 3698 4939EA   		cmp	r10, rbp	# range_stop_unique, index
 9316 369b 0F876FFE 		ja	.L801	#,
 9316      FFFF
 9317 36a1 E9B1F9FF 		jmp	.L777	#
 9317      FF
 9318              	.LVL534:
 9319 36a6 662E0F1F 		.p2align 4,,10
 9319      84000000 
 9319      0000
 9320              		.p2align 3
 9321              	.L1392:
 9322              	.LBB475:
 9323              	.LBB473:
 189:sieve_extend.c ****    }
 9324              		.loc 1 189 7 is_stmt 1 view .LVU3182
 9325              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9326              		.loc 1 189 27 is_stmt 0 view .LVU3183
 9327 36b0 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp635, %sfp
 9327      28
 9328              	.LVL535:
 9329              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9330              		.loc 1 189 18 view .LVU3184
 9331 36b5 490930   		or	QWORD PTR [r8], rsi	# *index_ptr_885, tmp635
 9332 36b8 EBDB     		jmp	.L800	#
 9333              	.LVL536:
 9334 36ba 660F1F44 		.p2align 4,,10
 9334      0000
 9335              		.p2align 3
 9336              	.L1386:
 189:sieve_extend.c ****    }
 9337              		.loc 1 189 18 view .LVU3185
 9338              	.LBE473:
 9339              	.LBE475:
 9340              	.LBE469:
 9341              	.LBE468:
 9342              	.LBE467:
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9343              		.loc 1 892 48 is_stmt 1 view .LVU3186
 9344              	.LBB476:
 9345              	.LBI476:
 260:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9346              		.loc 1 260 14 view .LVU3187
 9347              	.LBB477:
 261:sieve_extend.c **** 
 9348              		.loc 1 261 5 view .LVU3188
 9349              	# sieve_extend.c:261:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 261:sieve_extend.c **** 
 9350              		.loc 1 261 74 is_stmt 0 view .LVU3189
 9351 36c0 4D89E3   		mov	r11, r12	# tmp587, step
 9352 36c3 49C1E306 		sal	r11, 6	# tmp587,
 9353 36c7 4531D2   		xor	r10d, r10d	# _882
 9354 36ca 4901EB   		add	r11, rbp	# tmp588, index
 9355 36cd 410F92C2 		setc	r10b	#, _882
 9356              	.LVL537:
GAS LISTING /tmp/ccdGK7kM.s 			page 258


 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9357              		.loc 1 263 5 is_stmt 1 view .LVU3190
 9358              	# sieve_extend.c:263:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9359              		.loc 1 263 8 is_stmt 0 view .LVU3191
 9360 36d1 4D39DF   		cmp	r15, r11	# _69, tmp588
 9361 36d4 0F826504 		jb	.L783	#,
 9361      0000
 9362              	.LVL538:
 9363              	.LBB478:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9364              		.loc 1 284 54 is_stmt 1 view .LVU3192
 9365              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9366              		.loc 1 284 9 is_stmt 0 view .LVU3193
 9367 36da 4D85D2   		test	r10, r10	# _882
 9368 36dd 0F8574F9 		jne	.L777	#,
 9368      FFFF
 9369              	.LBB479:
 9370              	.LBB480:
 9371              	.LBB481:
 9372              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9373              		.loc 1 163 20 view .LVU3194
 9374 36e3 4C89F8   		mov	rax, r15	# range_stop_word, _69
 9375 36e6 48C1E806 		shr	rax, 6	# range_stop_word,
 9376              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9377              		.loc 1 165 110 view .LVU3195
 9378 36ea 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp596,
 9379              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9380              		.loc 1 165 133 view .LVU3196
 9381 36ee 4989C2   		mov	r10, rax	# tmp602, range_stop_word
 9382              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9383              		.loc 1 189 29 view .LVU3197
 9384 36f1 4589F9   		mov	r9d, r15d	# tmp598, _69
 9385              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9386              		.loc 1 165 133 view .LVU3198
 9387 36f4 4929FA   		sub	r10, rdi	# tmp602, tmp596
 9388              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9389              		.loc 1 189 29 view .LVU3199
 9390 36f7 41F7D1   		not	r9d	# tmp598
 9391 36fa 48C7C6FF 		mov	rsi, -1	# tmp1560,
 9391      FFFFFF
 9392 3701 4839F8   		cmp	rax, rdi	# range_stop_word, tmp596
 9393 3704 C4E2B3F7 		shrx	rdx, rsi, r9	# _237, tmp1560, tmp598
 9393      D6
 9394              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9395              		.loc 1 182 41 view .LVU3200
 9396 3709 4D8D44C5 		lea	r8, 0[r13+rax*8]	# range_stop_ptr,
 9396      00
 9397 370e 4F8D4CD5 		lea	r9, 0[r13+r10*8]	# tmp604,
GAS LISTING /tmp/ccdGK7kM.s 			page 259


 9397      00
 9398 3713 4C89E0   		mov	rax, r12	# _1434, step
 9399              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9400              		.loc 1 189 29 view .LVU3201
 9401 3716 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _237
 9401      28
 9402 371b 4D0F46CD 		cmovbe	r9, r13	# _95,, fast_loop_ptr
 9403 371f 48C1E004 		sal	rax, 4	# _1434,
 9404              	.LBE481:
 9405              	.LBE480:
 9406              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9407              		.loc 1 289 25 view .LVU3202
 9408 3723 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, index
 9408      48
 9409              	.LBB485:
 9410              	.LBB482:
 9411              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 9412              		.loc 1 171 17 view .LVU3203
 9413 3728 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _205,
 9413      00000000 
 9414 3730 48C1E703 		sal	rdi, 3	# tmp608,
 9415              	.LBE482:
 9416              	.LBE485:
 9417              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9418              		.loc 1 289 25 view .LVU3204
 9419 3734 41BA0100 		mov	r10d, 1	# tmp611,
 9419      0000
 9420 373a 4889C3   		mov	rbx, rax	# _1434, _1434
 9421              	.LVL539:
 9422 373d 0F1F00   		.p2align 4,,10
 9423              		.p2align 3
 9424              	.L794:
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9425              		.loc 1 285 13 is_stmt 1 view .LVU3205
 9426              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9427              		.loc 1 285 32 is_stmt 0 view .LVU3206
 9428 3740 4889E8   		mov	rax, rbp	# index_word, index
 9429 3743 48C1E806 		shr	rax, 6	# index_word,
 9430              	.LVL540:
 286:sieve_extend.c ****             #pragma ivdep
 9431              		.loc 1 286 13 is_stmt 1 view .LVU3207
 9432              	# sieve_extend.c:286:             register bitword_t mask = SAFE_ZERO;
 286:sieve_extend.c ****             #pragma ivdep
 9433              		.loc 1 286 32 is_stmt 0 view .LVU3208
 9434 3747 31D2     		xor	edx, edx	# mask
 9435              	.LVL541:
 9436              	.L788:
 288:sieve_extend.c ****                 mask |= markmask(index);
 9437              		.loc 1 288 13 is_stmt 1 view .LVU3209
 289:sieve_extend.c ****                 index += step;
 9438              		.loc 1 289 17 view .LVU3210
 9439              	# sieve_extend.c:289:                 mask |= markmask(index);
GAS LISTING /tmp/ccdGK7kM.s 			page 260


 289:sieve_extend.c ****                 index += step;
 9440              		.loc 1 289 25 is_stmt 0 view .LVU3211
 9441 3749 C4C2D1F7 		shlx	rsi, r10, rbp	# tmp610, tmp611, index
 9441      F2
 9442              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9443              		.loc 1 290 23 view .LVU3212
 9444 374e 4C01E5   		add	rbp, r12	# index, step
 9445              	.LVL542:
 9446              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9447              		.loc 1 289 22 view .LVU3213
 9448 3751 4809F2   		or	rdx, rsi	# mask, tmp610
 9449              	.LVL543:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9450              		.loc 1 290 17 is_stmt 1 view .LVU3214
 291:sieve_extend.c ****             // #pragma ivdep
 9451              		.loc 1 291 21 view .LVU3215
 9452              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9453              		.loc 1 291 36 is_stmt 0 view .LVU3216
 9454 3754 4889EE   		mov	rsi, rbp	# tmp612, index
 9455 3757 48C1EE06 		shr	rsi, 6	# tmp612,
 9456              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9457              		.loc 1 291 13 view .LVU3217
 9458 375b 4839F0   		cmp	rax, rsi	# index_word, tmp612
 9459 375e 0F85AC00 		jne	.L1254	#,
 9459      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 9460              		.loc 1 288 13 is_stmt 1 view .LVU3218
 289:sieve_extend.c ****                 index += step;
 9461              		.loc 1 289 17 view .LVU3219
 9462              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9463              		.loc 1 289 25 is_stmt 0 view .LVU3220
 9464 3764 C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1171, tmp611, index
 9464      F2
 9465              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9466              		.loc 1 290 23 view .LVU3221
 9467 3769 4C01E5   		add	rbp, r12	# index, step
 9468              	.LVL544:
 9469              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9470              		.loc 1 289 22 view .LVU3222
 9471 376c 4809F2   		or	rdx, rsi	# mask, tmp1171
 9472              	.LVL545:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9473              		.loc 1 290 17 is_stmt 1 view .LVU3223
 291:sieve_extend.c ****             // #pragma ivdep
 9474              		.loc 1 291 21 view .LVU3224
 9475              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9476              		.loc 1 291 36 is_stmt 0 view .LVU3225
 9477 376f 4889EE   		mov	rsi, rbp	# tmp1172, index
 9478 3772 48C1EE06 		shr	rsi, 6	# tmp1172,
GAS LISTING /tmp/ccdGK7kM.s 			page 261


 9479              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9480              		.loc 1 291 13 view .LVU3226
 9481 3776 4839F0   		cmp	rax, rsi	# index_word, tmp1172
 9482 3779 0F859100 		jne	.L1254	#,
 9482      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 9483              		.loc 1 288 13 is_stmt 1 view .LVU3227
 289:sieve_extend.c ****                 index += step;
 9484              		.loc 1 289 17 view .LVU3228
 9485              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9486              		.loc 1 289 25 is_stmt 0 view .LVU3229
 9487 377f C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1173, tmp611, index
 9487      F2
 9488              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9489              		.loc 1 290 23 view .LVU3230
 9490 3784 4C01E5   		add	rbp, r12	# index, step
 9491              	.LVL546:
 9492              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9493              		.loc 1 289 22 view .LVU3231
 9494 3787 4809F2   		or	rdx, rsi	# mask, tmp1173
 9495              	.LVL547:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9496              		.loc 1 290 17 is_stmt 1 view .LVU3232
 291:sieve_extend.c ****             // #pragma ivdep
 9497              		.loc 1 291 21 view .LVU3233
 9498              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9499              		.loc 1 291 36 is_stmt 0 view .LVU3234
 9500 378a 4889EE   		mov	rsi, rbp	# tmp1174, index
 9501 378d 48C1EE06 		shr	rsi, 6	# tmp1174,
 9502              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9503              		.loc 1 291 13 view .LVU3235
 9504 3791 4839F0   		cmp	rax, rsi	# index_word, tmp1174
 9505 3794 757A     		jne	.L1254	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 9506              		.loc 1 288 13 is_stmt 1 view .LVU3236
 289:sieve_extend.c ****                 index += step;
 9507              		.loc 1 289 17 view .LVU3237
 9508              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9509              		.loc 1 289 25 is_stmt 0 view .LVU3238
 9510 3796 C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1175, tmp611, index
 9510      F2
 9511              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9512              		.loc 1 290 23 view .LVU3239
 9513 379b 4C01E5   		add	rbp, r12	# index, step
 9514              	.LVL548:
 9515              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9516              		.loc 1 289 22 view .LVU3240
 9517 379e 4809F2   		or	rdx, rsi	# mask, tmp1175
GAS LISTING /tmp/ccdGK7kM.s 			page 262


 9518              	.LVL549:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9519              		.loc 1 290 17 is_stmt 1 view .LVU3241
 291:sieve_extend.c ****             // #pragma ivdep
 9520              		.loc 1 291 21 view .LVU3242
 9521              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9522              		.loc 1 291 36 is_stmt 0 view .LVU3243
 9523 37a1 4889EE   		mov	rsi, rbp	# tmp1176, index
 9524 37a4 48C1EE06 		shr	rsi, 6	# tmp1176,
 9525              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9526              		.loc 1 291 13 view .LVU3244
 9527 37a8 4839F0   		cmp	rax, rsi	# index_word, tmp1176
 9528 37ab 7563     		jne	.L1254	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 9529              		.loc 1 288 13 is_stmt 1 view .LVU3245
 289:sieve_extend.c ****                 index += step;
 9530              		.loc 1 289 17 view .LVU3246
 9531              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9532              		.loc 1 289 25 is_stmt 0 view .LVU3247
 9533 37ad C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1177, tmp611, index
 9533      F2
 9534              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9535              		.loc 1 290 23 view .LVU3248
 9536 37b2 4C01E5   		add	rbp, r12	# index, step
 9537              	.LVL550:
 9538              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9539              		.loc 1 289 22 view .LVU3249
 9540 37b5 4809F2   		or	rdx, rsi	# mask, tmp1177
 9541              	.LVL551:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9542              		.loc 1 290 17 is_stmt 1 view .LVU3250
 291:sieve_extend.c ****             // #pragma ivdep
 9543              		.loc 1 291 21 view .LVU3251
 9544              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9545              		.loc 1 291 36 is_stmt 0 view .LVU3252
 9546 37b8 4889EE   		mov	rsi, rbp	# tmp1178, index
 9547 37bb 48C1EE06 		shr	rsi, 6	# tmp1178,
 9548              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9549              		.loc 1 291 13 view .LVU3253
 9550 37bf 4839F0   		cmp	rax, rsi	# index_word, tmp1178
 9551 37c2 754C     		jne	.L1254	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 9552              		.loc 1 288 13 is_stmt 1 view .LVU3254
 289:sieve_extend.c ****                 index += step;
 9553              		.loc 1 289 17 view .LVU3255
 9554              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9555              		.loc 1 289 25 is_stmt 0 view .LVU3256
 9556 37c4 C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1179, tmp611, index
 9556      F2
GAS LISTING /tmp/ccdGK7kM.s 			page 263


 9557              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9558              		.loc 1 290 23 view .LVU3257
 9559 37c9 4C01E5   		add	rbp, r12	# index, step
 9560              	.LVL552:
 9561              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9562              		.loc 1 289 22 view .LVU3258
 9563 37cc 4809F2   		or	rdx, rsi	# mask, tmp1179
 9564              	.LVL553:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9565              		.loc 1 290 17 is_stmt 1 view .LVU3259
 291:sieve_extend.c ****             // #pragma ivdep
 9566              		.loc 1 291 21 view .LVU3260
 9567              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9568              		.loc 1 291 36 is_stmt 0 view .LVU3261
 9569 37cf 4889EE   		mov	rsi, rbp	# tmp1180, index
 9570 37d2 48C1EE06 		shr	rsi, 6	# tmp1180,
 9571              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9572              		.loc 1 291 13 view .LVU3262
 9573 37d6 4839F0   		cmp	rax, rsi	# index_word, tmp1180
 9574 37d9 7535     		jne	.L1254	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 9575              		.loc 1 288 13 is_stmt 1 view .LVU3263
 289:sieve_extend.c ****                 index += step;
 9576              		.loc 1 289 17 view .LVU3264
 9577              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9578              		.loc 1 289 25 is_stmt 0 view .LVU3265
 9579 37db C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1181, tmp611, index
 9579      F2
 9580              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9581              		.loc 1 290 23 view .LVU3266
 9582 37e0 4C01E5   		add	rbp, r12	# index, step
 9583              	.LVL554:
 9584              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9585              		.loc 1 289 22 view .LVU3267
 9586 37e3 4809F2   		or	rdx, rsi	# mask, tmp1181
 9587              	.LVL555:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9588              		.loc 1 290 17 is_stmt 1 view .LVU3268
 291:sieve_extend.c ****             // #pragma ivdep
 9589              		.loc 1 291 21 view .LVU3269
 9590              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9591              		.loc 1 291 36 is_stmt 0 view .LVU3270
 9592 37e6 4889EE   		mov	rsi, rbp	# tmp1182, index
 9593 37e9 48C1EE06 		shr	rsi, 6	# tmp1182,
 9594              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9595              		.loc 1 291 13 view .LVU3271
 9596 37ed 4839F0   		cmp	rax, rsi	# index_word, tmp1182
 9597 37f0 751E     		jne	.L1254	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 264


 288:sieve_extend.c ****                 mask |= markmask(index);
 9598              		.loc 1 288 13 is_stmt 1 view .LVU3272
 289:sieve_extend.c ****                 index += step;
 9599              		.loc 1 289 17 view .LVU3273
 9600              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9601              		.loc 1 289 25 is_stmt 0 view .LVU3274
 9602 37f2 C4C2D1F7 		shlx	rsi, r10, rbp	# tmp1183, tmp611, index
 9602      F2
 9603              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9604              		.loc 1 290 23 view .LVU3275
 9605 37f7 4C01E5   		add	rbp, r12	# index, step
 9606              	.LVL556:
 9607              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 9608              		.loc 1 289 22 view .LVU3276
 9609 37fa 4809F2   		or	rdx, rsi	# mask, tmp1183
 9610              	.LVL557:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 9611              		.loc 1 290 17 is_stmt 1 view .LVU3277
 291:sieve_extend.c ****             // #pragma ivdep
 9612              		.loc 1 291 21 view .LVU3278
 9613              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9614              		.loc 1 291 36 is_stmt 0 view .LVU3279
 9615 37fd 4889EE   		mov	rsi, rbp	# tmp1184, index
 9616 3800 48C1EE06 		shr	rsi, 6	# tmp1184,
 9617              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 9618              		.loc 1 291 13 view .LVU3280
 9619 3804 4839F0   		cmp	rax, rsi	# index_word, tmp1184
 9620 3807 0F843CFF 		je	.L788	#,
 9620      FFFF
 9621 380d 0F1F00   		.p2align 4,,10
 9622              		.p2align 3
 9623              	.L1254:
 295:sieve_extend.c ****         }
 9624              		.loc 1 295 13 is_stmt 1 view .LVU3281
 9625              	.LVL558:
 9626              	.LBB486:
 9627              	.LBI480:
 135:sieve_extend.c **** //#if __APPLE__
 9628              		.loc 1 135 20 view .LVU3282
 9629              	.LBB483:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9630              		.loc 1 163 4 view .LVU3283
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9631              		.loc 1 164 4 view .LVU3284
 9632              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9633              		.loc 1 164 78 is_stmt 0 view .LVU3285
 9634 3810 498D44C5 		lea	rax, 0[r13+rax*8]	# index_ptr,
 9634      00
 9635              	.LVL559:
 165:sieve_extend.c **** 
 9636              		.loc 1 165 4 is_stmt 1 view .LVU3286
GAS LISTING /tmp/ccdGK7kM.s 			page 265


 169:sieve_extend.c ****        *index_ptr |= mask;
 9637              		.loc 1 169 4 view .LVU3287
 169:sieve_extend.c ****        *index_ptr |= mask;
 9638              		.loc 1 169 10 view .LVU3288
 9639 3815 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 9640 3818 0F830201 		jnb	.L789	#,
 9640      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 9641              		.loc 1 169 10 is_stmt 0 view .LVU3289
 9642 381e 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.576,
 9643              	.L790:
 170:sieve_extend.c ****        index_ptr+=step;
 9644              		.loc 1 170 8 is_stmt 1 view .LVU3290
 9645              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9646              		.loc 1 170 19 is_stmt 0 view .LVU3291
 9647 3822 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9648              		.loc 1 171 8 is_stmt 1 view .LVU3292
 9649              	.LVL560:
 172:sieve_extend.c ****        index_ptr+=step;
 9650              		.loc 1 172 8 view .LVU3293
 9651              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9652              		.loc 1 172 19 is_stmt 0 view .LVU3294
 9653 3825 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9654              		.loc 1 173 8 is_stmt 1 view .LVU3295
 9655              	.LVL561:
 174:sieve_extend.c ****        index_ptr+=step;
 9656              		.loc 1 174 8 view .LVU3296
 9657              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9658              		.loc 1 174 19 is_stmt 0 view .LVU3297
 9659 3829 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9660              		.loc 1 175 8 is_stmt 1 view .LVU3298
 9661              	.LVL562:
 176:sieve_extend.c ****        index_ptr+=step;
 9662              		.loc 1 176 8 view .LVU3299
 9663              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9664              		.loc 1 176 19 is_stmt 0 view .LVU3300
 9665 382c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9666              		.loc 1 177 8 is_stmt 1 view .LVU3301
 9667              	.LVL563:
 178:sieve_extend.c ****        index_ptr+=step;
 9668              		.loc 1 178 8 view .LVU3302
 9669 3830 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9670              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9671              		.loc 1 178 19 is_stmt 0 view .LVU3303
 9672 3833 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9673              		.loc 1 179 8 is_stmt 1 view .LVU3304
 9674 3837 4801F8   		add	rax, rdi	# index_ptr, tmp608
GAS LISTING /tmp/ccdGK7kM.s 			page 266


 9675              	.LVL564:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9676              		.loc 1 169 10 view .LVU3305
 9677 383a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9678 383d 0F86DD00 		jbe	.L789	#,
 9678      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9679              		.loc 1 170 8 view .LVU3306
 9680              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9681              		.loc 1 170 19 is_stmt 0 view .LVU3307
 9682 3843 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9683              		.loc 1 171 8 is_stmt 1 view .LVU3308
 9684              	.LVL565:
 172:sieve_extend.c ****        index_ptr+=step;
 9685              		.loc 1 172 8 view .LVU3309
 9686              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9687              		.loc 1 172 19 is_stmt 0 view .LVU3310
 9688 3846 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9689              		.loc 1 173 8 is_stmt 1 view .LVU3311
 9690              	.LVL566:
 174:sieve_extend.c ****        index_ptr+=step;
 9691              		.loc 1 174 8 view .LVU3312
 9692              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9693              		.loc 1 174 19 is_stmt 0 view .LVU3313
 9694 384a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9695              		.loc 1 175 8 is_stmt 1 view .LVU3314
 9696              	.LVL567:
 176:sieve_extend.c ****        index_ptr+=step;
 9697              		.loc 1 176 8 view .LVU3315
 9698              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9699              		.loc 1 176 19 is_stmt 0 view .LVU3316
 9700 384d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9701              		.loc 1 177 8 is_stmt 1 view .LVU3317
 9702              	.LVL568:
 178:sieve_extend.c ****        index_ptr+=step;
 9703              		.loc 1 178 8 view .LVU3318
 9704 3851 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9705              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9706              		.loc 1 178 19 is_stmt 0 view .LVU3319
 9707 3854 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9708              		.loc 1 179 8 is_stmt 1 view .LVU3320
 9709 3858 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9710              	.LVL569:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9711              		.loc 1 169 10 view .LVU3321
 9712 385b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9713 385e 0F86BC00 		jbe	.L789	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 267


 9713      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9714              		.loc 1 170 8 view .LVU3322
 9715              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9716              		.loc 1 170 19 is_stmt 0 view .LVU3323
 9717 3864 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9718              		.loc 1 171 8 is_stmt 1 view .LVU3324
 9719              	.LVL570:
 172:sieve_extend.c ****        index_ptr+=step;
 9720              		.loc 1 172 8 view .LVU3325
 9721              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9722              		.loc 1 172 19 is_stmt 0 view .LVU3326
 9723 3867 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9724              		.loc 1 173 8 is_stmt 1 view .LVU3327
 9725              	.LVL571:
 174:sieve_extend.c ****        index_ptr+=step;
 9726              		.loc 1 174 8 view .LVU3328
 9727              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9728              		.loc 1 174 19 is_stmt 0 view .LVU3329
 9729 386b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9730              		.loc 1 175 8 is_stmt 1 view .LVU3330
 9731              	.LVL572:
 176:sieve_extend.c ****        index_ptr+=step;
 9732              		.loc 1 176 8 view .LVU3331
 9733              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9734              		.loc 1 176 19 is_stmt 0 view .LVU3332
 9735 386e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9736              		.loc 1 177 8 is_stmt 1 view .LVU3333
 9737              	.LVL573:
 178:sieve_extend.c ****        index_ptr+=step;
 9738              		.loc 1 178 8 view .LVU3334
 9739 3872 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9740              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9741              		.loc 1 178 19 is_stmt 0 view .LVU3335
 9742 3875 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9743              		.loc 1 179 8 is_stmt 1 view .LVU3336
 9744 3879 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9745              	.LVL574:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9746              		.loc 1 169 10 view .LVU3337
 9747 387c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9748 387f 0F869B00 		jbe	.L789	#,
 9748      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9749              		.loc 1 170 8 view .LVU3338
 9750              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 268


 9751              		.loc 1 170 19 is_stmt 0 view .LVU3339
 9752 3885 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9753              		.loc 1 171 8 is_stmt 1 view .LVU3340
 9754              	.LVL575:
 172:sieve_extend.c ****        index_ptr+=step;
 9755              		.loc 1 172 8 view .LVU3341
 9756              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9757              		.loc 1 172 19 is_stmt 0 view .LVU3342
 9758 3888 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9759              		.loc 1 173 8 is_stmt 1 view .LVU3343
 9760              	.LVL576:
 174:sieve_extend.c ****        index_ptr+=step;
 9761              		.loc 1 174 8 view .LVU3344
 9762              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9763              		.loc 1 174 19 is_stmt 0 view .LVU3345
 9764 388c 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9765              		.loc 1 175 8 is_stmt 1 view .LVU3346
 9766              	.LVL577:
 176:sieve_extend.c ****        index_ptr+=step;
 9767              		.loc 1 176 8 view .LVU3347
 9768              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9769              		.loc 1 176 19 is_stmt 0 view .LVU3348
 9770 388f 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9771              		.loc 1 177 8 is_stmt 1 view .LVU3349
 9772              	.LVL578:
 178:sieve_extend.c ****        index_ptr+=step;
 9773              		.loc 1 178 8 view .LVU3350
 9774 3893 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9775              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9776              		.loc 1 178 19 is_stmt 0 view .LVU3351
 9777 3896 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9778              		.loc 1 179 8 is_stmt 1 view .LVU3352
 9779 389a 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9780              	.LVL579:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9781              		.loc 1 169 10 view .LVU3353
 9782 389d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9783 38a0 767E     		jbe	.L789	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9784              		.loc 1 170 8 view .LVU3354
 9785              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9786              		.loc 1 170 19 is_stmt 0 view .LVU3355
 9787 38a2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9788              		.loc 1 171 8 is_stmt 1 view .LVU3356
 9789              	.LVL580:
 172:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 269


 9790              		.loc 1 172 8 view .LVU3357
 9791              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9792              		.loc 1 172 19 is_stmt 0 view .LVU3358
 9793 38a5 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9794              		.loc 1 173 8 is_stmt 1 view .LVU3359
 9795              	.LVL581:
 174:sieve_extend.c ****        index_ptr+=step;
 9796              		.loc 1 174 8 view .LVU3360
 9797              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9798              		.loc 1 174 19 is_stmt 0 view .LVU3361
 9799 38a9 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9800              		.loc 1 175 8 is_stmt 1 view .LVU3362
 9801              	.LVL582:
 176:sieve_extend.c ****        index_ptr+=step;
 9802              		.loc 1 176 8 view .LVU3363
 9803              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9804              		.loc 1 176 19 is_stmt 0 view .LVU3364
 9805 38ac 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9806              		.loc 1 177 8 is_stmt 1 view .LVU3365
 9807              	.LVL583:
 178:sieve_extend.c ****        index_ptr+=step;
 9808              		.loc 1 178 8 view .LVU3366
 9809 38b0 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9810              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9811              		.loc 1 178 19 is_stmt 0 view .LVU3367
 9812 38b3 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9813              		.loc 1 179 8 is_stmt 1 view .LVU3368
 9814 38b7 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9815              	.LVL584:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9816              		.loc 1 169 10 view .LVU3369
 9817 38ba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9818 38bd 7661     		jbe	.L789	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9819              		.loc 1 170 8 view .LVU3370
 9820              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9821              		.loc 1 170 19 is_stmt 0 view .LVU3371
 9822 38bf 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9823              		.loc 1 171 8 is_stmt 1 view .LVU3372
 9824              	.LVL585:
 172:sieve_extend.c ****        index_ptr+=step;
 9825              		.loc 1 172 8 view .LVU3373
 9826              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9827              		.loc 1 172 19 is_stmt 0 view .LVU3374
 9828 38c2 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccdGK7kM.s 			page 270


 9829              		.loc 1 173 8 is_stmt 1 view .LVU3375
 9830              	.LVL586:
 174:sieve_extend.c ****        index_ptr+=step;
 9831              		.loc 1 174 8 view .LVU3376
 9832              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9833              		.loc 1 174 19 is_stmt 0 view .LVU3377
 9834 38c6 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9835              		.loc 1 175 8 is_stmt 1 view .LVU3378
 9836              	.LVL587:
 176:sieve_extend.c ****        index_ptr+=step;
 9837              		.loc 1 176 8 view .LVU3379
 9838              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9839              		.loc 1 176 19 is_stmt 0 view .LVU3380
 9840 38c9 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9841              		.loc 1 177 8 is_stmt 1 view .LVU3381
 9842              	.LVL588:
 178:sieve_extend.c ****        index_ptr+=step;
 9843              		.loc 1 178 8 view .LVU3382
 9844 38cd 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9845              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9846              		.loc 1 178 19 is_stmt 0 view .LVU3383
 9847 38d0 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9848              		.loc 1 179 8 is_stmt 1 view .LVU3384
 9849 38d4 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9850              	.LVL589:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9851              		.loc 1 169 10 view .LVU3385
 9852 38d7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9853 38da 7644     		jbe	.L789	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9854              		.loc 1 170 8 view .LVU3386
 9855              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9856              		.loc 1 170 19 is_stmt 0 view .LVU3387
 9857 38dc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9858              		.loc 1 171 8 is_stmt 1 view .LVU3388
 9859              	.LVL590:
 172:sieve_extend.c ****        index_ptr+=step;
 9860              		.loc 1 172 8 view .LVU3389
 9861              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9862              		.loc 1 172 19 is_stmt 0 view .LVU3390
 9863 38df 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9864              		.loc 1 173 8 is_stmt 1 view .LVU3391
 9865              	.LVL591:
 174:sieve_extend.c ****        index_ptr+=step;
 9866              		.loc 1 174 8 view .LVU3392
 9867              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 271


 9868              		.loc 1 174 19 is_stmt 0 view .LVU3393
 9869 38e3 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9870              		.loc 1 175 8 is_stmt 1 view .LVU3394
 9871              	.LVL592:
 176:sieve_extend.c ****        index_ptr+=step;
 9872              		.loc 1 176 8 view .LVU3395
 9873              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9874              		.loc 1 176 19 is_stmt 0 view .LVU3396
 9875 38e6 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9876              		.loc 1 177 8 is_stmt 1 view .LVU3397
 9877              	.LVL593:
 178:sieve_extend.c ****        index_ptr+=step;
 9878              		.loc 1 178 8 view .LVU3398
 9879 38ea 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9880              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9881              		.loc 1 178 19 is_stmt 0 view .LVU3399
 9882 38ed 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9883              		.loc 1 179 8 is_stmt 1 view .LVU3400
 9884 38f1 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9885              	.LVL594:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9886              		.loc 1 169 10 view .LVU3401
 9887 38f4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9888 38f7 7627     		jbe	.L789	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9889              		.loc 1 170 8 view .LVU3402
 9890              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9891              		.loc 1 170 19 is_stmt 0 view .LVU3403
 9892 38f9 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_879, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 9893              		.loc 1 171 8 is_stmt 1 view .LVU3404
 9894              	.LVL595:
 172:sieve_extend.c ****        index_ptr+=step;
 9895              		.loc 1 172 8 view .LVU3405
 9896              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9897              		.loc 1 172 19 is_stmt 0 view .LVU3406
 9898 38fc 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_879, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 9899              		.loc 1 173 8 is_stmt 1 view .LVU3407
 9900              	.LVL596:
 174:sieve_extend.c ****        index_ptr+=step;
 9901              		.loc 1 174 8 view .LVU3408
 9902              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9903              		.loc 1 174 19 is_stmt 0 view .LVU3409
 9904 3900 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1428, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 9905              		.loc 1 175 8 is_stmt 1 view .LVU3410
 9906              	.LVL597:
 176:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 272


 9907              		.loc 1 176 8 view .LVU3411
 9908              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9909              		.loc 1 176 19 is_stmt 0 view .LVU3412
 9910 3903 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1428, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 9911              		.loc 1 177 8 is_stmt 1 view .LVU3413
 9912              	.LVL598:
 178:sieve_extend.c ****        index_ptr+=step;
 9913              		.loc 1 178 8 view .LVU3414
 9914 3907 4801FE   		add	rsi, rdi	# ivtmp.576, tmp608
 9915              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9916              		.loc 1 178 19 is_stmt 0 view .LVU3415
 9917 390a 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_879, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 9918              		.loc 1 179 8 is_stmt 1 view .LVU3416
 9919 390e 4801F8   		add	rax, rdi	# index_ptr, tmp608
 9920              	.LVL599:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9921              		.loc 1 169 10 view .LVU3417
 9922 3911 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9923 3914 0F8708FF 		ja	.L790	#,
 9923      FFFF
 9924 391a 660F1F44 		.p2align 4,,10
 9924      0000
 9925              		.p2align 3
 9926              	.L789:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9927              		.loc 1 182 4 view .LVU3418
 183:sieve_extend.c ****        *index_ptr |= mask;
 9928              		.loc 1 183 4 view .LVU3419
 183:sieve_extend.c ****        *index_ptr |= mask;
 9929              		.loc 1 183 10 view .LVU3420
 9930 3920 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9931 3923 765B     		jbe	.L791	#,
 9932              	.L792:
 184:sieve_extend.c ****        index_ptr+=step;
 9933              		.loc 1 184 8 view .LVU3421
 9934              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9935              		.loc 1 184 19 is_stmt 0 view .LVU3422
 9936 3925 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9937              		.loc 1 185 8 is_stmt 1 view .LVU3423
 9938              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9939              		.loc 1 185 17 is_stmt 0 view .LVU3424
 9940 3928 4801C8   		add	rax, rcx	# index_ptr, _205
 9941              	.LVL600:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9942              		.loc 1 183 10 is_stmt 1 view .LVU3425
 9943 392b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9944 392e 7650     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9945              		.loc 1 184 8 view .LVU3426
 9946              	# sieve_extend.c:184:        *index_ptr |= mask;
GAS LISTING /tmp/ccdGK7kM.s 			page 273


 184:sieve_extend.c ****        index_ptr+=step;
 9947              		.loc 1 184 19 is_stmt 0 view .LVU3427
 9948 3930 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9949              		.loc 1 185 8 is_stmt 1 view .LVU3428
 9950              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9951              		.loc 1 185 17 is_stmt 0 view .LVU3429
 9952 3933 4801C8   		add	rax, rcx	# index_ptr, _205
 9953              	.LVL601:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9954              		.loc 1 183 10 is_stmt 1 view .LVU3430
 9955 3936 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9956 3939 7645     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9957              		.loc 1 184 8 view .LVU3431
 9958              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9959              		.loc 1 184 19 is_stmt 0 view .LVU3432
 9960 393b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9961              		.loc 1 185 8 is_stmt 1 view .LVU3433
 9962              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9963              		.loc 1 185 17 is_stmt 0 view .LVU3434
 9964 393e 4801C8   		add	rax, rcx	# index_ptr, _205
 9965              	.LVL602:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9966              		.loc 1 183 10 is_stmt 1 view .LVU3435
 9967 3941 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9968 3944 763A     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9969              		.loc 1 184 8 view .LVU3436
 9970              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9971              		.loc 1 184 19 is_stmt 0 view .LVU3437
 9972 3946 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9973              		.loc 1 185 8 is_stmt 1 view .LVU3438
 9974              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9975              		.loc 1 185 17 is_stmt 0 view .LVU3439
 9976 3949 4801C8   		add	rax, rcx	# index_ptr, _205
 9977              	.LVL603:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9978              		.loc 1 183 10 is_stmt 1 view .LVU3440
 9979 394c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9980 394f 762F     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9981              		.loc 1 184 8 view .LVU3441
 9982              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9983              		.loc 1 184 19 is_stmt 0 view .LVU3442
 9984 3951 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9985              		.loc 1 185 8 is_stmt 1 view .LVU3443
 9986              	# sieve_extend.c:185:        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 274


 185:sieve_extend.c ****    }
 9987              		.loc 1 185 17 is_stmt 0 view .LVU3444
 9988 3954 4801C8   		add	rax, rcx	# index_ptr, _205
 9989              	.LVL604:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9990              		.loc 1 183 10 is_stmt 1 view .LVU3445
 9991 3957 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9992 395a 7624     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9993              		.loc 1 184 8 view .LVU3446
 9994              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9995              		.loc 1 184 19 is_stmt 0 view .LVU3447
 9996 395c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 9997              		.loc 1 185 8 is_stmt 1 view .LVU3448
 9998              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 9999              		.loc 1 185 17 is_stmt 0 view .LVU3449
 10000 395f 4801C8   		add	rax, rcx	# index_ptr, _205
 10001              	.LVL605:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10002              		.loc 1 183 10 is_stmt 1 view .LVU3450
 10003 3962 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 10004 3965 7619     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10005              		.loc 1 184 8 view .LVU3451
 10006              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10007              		.loc 1 184 19 is_stmt 0 view .LVU3452
 10008 3967 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 10009              		.loc 1 185 8 is_stmt 1 view .LVU3453
 10010              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10011              		.loc 1 185 17 is_stmt 0 view .LVU3454
 10012 396a 4801C8   		add	rax, rcx	# index_ptr, _205
 10013              	.LVL606:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10014              		.loc 1 183 10 is_stmt 1 view .LVU3455
 10015 396d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 10016 3970 760E     		jbe	.L791	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10017              		.loc 1 184 8 view .LVU3456
 10018              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10019              		.loc 1 184 19 is_stmt 0 view .LVU3457
 10020 3972 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_880, offset: 0B], mask
 185:sieve_extend.c ****    }
 10021              		.loc 1 185 8 is_stmt 1 view .LVU3458
 10022              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10023              		.loc 1 185 17 is_stmt 0 view .LVU3459
 10024 3975 4801C8   		add	rax, rcx	# index_ptr, _205
 10025              	.LVL607:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10026              		.loc 1 183 10 is_stmt 1 view .LVU3460
GAS LISTING /tmp/ccdGK7kM.s 			page 275


 10027 3978 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 10028 397b 77A8     		ja	.L792	#,
 10029 397d 0F1F00   		.p2align 4,,10
 10030              		.p2align 3
 10031              	.L791:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10032              		.loc 1 188 4 view .LVU3461
 10033              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10034              		.loc 1 188 7 is_stmt 0 view .LVU3462
 10035 3980 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 10036 3983 0F84D710 		je	.L1393	#,
 10036      0000
 10037              	.LVL608:
 10038              	.L793:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10039              		.loc 1 188 7 view .LVU3463
 10040              	.LBE483:
 10041              	.LBE486:
 10042              	.LBE479:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10043              		.loc 1 284 54 is_stmt 1 view .LVU3464
 10044              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10045              		.loc 1 284 9 is_stmt 0 view .LVU3465
 10046 3989 4939EB   		cmp	r11, rbp	# tmp588, index
 10047 398c 0F83AEFD 		jnb	.L794	#,
 10047      FFFF
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10048              		.loc 1 284 9 view .LVU3466
 10049 3992 488B5C24 		mov	rbx, QWORD PTR 72[rsp]	# index, %sfp
 10049      48
 10050 3997 E9BBF6FF 		jmp	.L777	#
 10050      FF
 10051              	.LVL609:
 10052              	.L1382:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10053              		.loc 1 284 9 view .LVU3467
 10054 399c 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 10054      30
 10055 39a1 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, prime
 10055      20
 10056 39a6 4D8B6608 		mov	r12, QWORD PTR 8[r14]	# prephitmp_1527, sieve_90->bits
 10057 39aa 4C892424 		mov	QWORD PTR [rsp], r12	# %sfp, prephitmp_1527
 10058              	.LVL610:
 10059              	.L769:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10060              		.loc 1 284 9 view .LVU3468
 10061              	.LBE478:
 10062              	.LBE477:
 10063              	.LBE476:
 10064              	.LBE506:
 10065              	.LBE511:
 10066              	.LBE521:
 910:sieve_extend.c ****     prime = block.prime;
 10067              		.loc 1 910 5 is_stmt 1 view .LVU3469
 10068              	.LBB522:
GAS LISTING /tmp/ccdGK7kM.s 			page 276


 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10069              		.loc 1 766 20 view .LVU3470
 10070              	.LBB518:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10071              		.loc 1 767 5 view .LVU3471
 10072              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10073              		.loc 1 767 8 is_stmt 0 view .LVU3472
 10074 39ae 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10075 39b2 0F86D7FA 		jbe	.L762	#,
 10075      FFFF
 10076              	.LVL611:
 10077              	.L803:
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10078              		.loc 1 772 5 is_stmt 1 view .LVU3473
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10079              		.loc 1 773 5 view .LVU3474
 10080              	# sieve_extend.c:772:     const counter_t copy_start  = source_start + size;
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10081              		.loc 1 772 21 is_stmt 0 view .LVU3475
 10082 39b8 488D3C32 		lea	rdi, [rdx+rsi]	# copy_start,
 10083              	.LVL612:
 10084              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 10085              		.loc 1 774 22 view .LVU3476
 10086 39bc 4989F7   		mov	r15, rsi	# source_bit, block$pattern_start
 10087              	# sieve_extend.c:773:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10088              		.loc 1 773 22 view .LVU3477
 10089 39bf 83E73F   		and	edi, 63	# copy_bit,
 10090              	.LVL613:
 774:sieve_extend.c **** 
 10091              		.loc 1 774 5 is_stmt 1 view .LVU3478
 10092              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 10093              		.loc 1 774 22 is_stmt 0 view .LVU3479
 10094 39c2 4183E73F 		and	r15d, 63	# source_bit,
 10095              	.LVL614:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10096              		.loc 1 776 5 is_stmt 1 view .LVU3480
 10097              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10098              		.loc 1 776 13 is_stmt 0 view .LVU3481
 10099 39c6 4C39FF   		cmp	rdi, r15	# copy_bit, source_bit
 10100              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10101              		.loc 1 776 37 view .LVU3482
 10102 39c9 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 10103 39cd 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10103      38
 10104              	.LVL615:
 10105              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10106              		.loc 1 776 13 view .LVU3483
 10107 39d2 0F82B010 		jb	.L1394	#,
 10107      0000
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
GAS LISTING /tmp/ccdGK7kM.s 			page 277


 10108              		.loc 1 777 10 is_stmt 1 view .LVU3484
 10109              	# sieve_extend.c:777:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10110              		.loc 1 777 13 is_stmt 0 view .LVU3485
 10111 39d8 0F877302 		ja	.L1395	#,
 10111      0000
 778:sieve_extend.c **** }
 10112              		.loc 1 778 37 is_stmt 1 view .LVU3486
 10113 39de E8EDDCFF 		call	extendSieve_aligned	#
 10113      FF
 10114              	.LVL616:
 10115              	.L804:
 778:sieve_extend.c **** }
 10116              		.loc 1 778 37 is_stmt 0 view .LVU3487
 10117              	.LBE518:
 10118              	.LBE522:
 911:sieve_extend.c **** 
 10119              		.loc 1 911 5 is_stmt 1 view .LVU3488
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10120              		.loc 1 914 5 view .LVU3489
 10121              	.LBB523:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10122              		.loc 1 914 10 view .LVU3490
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10123              		.loc 1 914 10 is_stmt 0 view .LVU3491
 10124 39e3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# prime, %sfp
 10124      20
 10125              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10126              		.loc 1 914 38 view .LVU3492
 10127 39e8 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
 10127      40
 10128              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10129              		.loc 1 914 83 view .LVU3493
 10130 39ed 488B7424 		mov	rsi, QWORD PTR 48[rsp]	# <retval>, %sfp
 10130      30
 10131 39f2 49FFC3   		inc	r11	# tmp807
 10132              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10133              		.loc 1 914 20 view .LVU3494
 10134 39f5 48C70424 		mov	QWORD PTR [rsp], 0	# %sfp,
 10134      00000000 
 10135 39fd 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, tmp807
 10135      18
 10136              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10137              		.loc 1 914 38 view .LVU3495
 10138 3a02 4C8D52FF 		lea	r10, -1[rdx]	# block_stop,
 10139              	.LVL617:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10140              		.loc 1 914 63 is_stmt 1 view .LVU3496
 10141 3a06 4C8B3E   		mov	r15, QWORD PTR [rsi]	# _30, MEM[(uint64_t * *)sieve_90]
 10142              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10143              		.loc 1 914 83 is_stmt 0 view .LVU3497
 10144 3a09 488B5608 		mov	rdx, QWORD PTR 8[rsi]	# _8, sieve_90->bits
GAS LISTING /tmp/ccdGK7kM.s 			page 278


 10145              	.LBB524:
 10146              	.LBB525:
 10147              	.LBB526:
 10148              	.LBB527:
 10149              	.LBB528:
 10150              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 10151              		.loc 1 382 9 view .LVU3498
 10152 3a0d 41BC0100 		mov	r12d, 1	# tmp821,
 10152      0000
 10153              	.LVL618:
 10154              		.p2align 4,,10
 10155 3a13 0F1F4400 		.p2align 3
 10155      00
 10156              	.L810:
 382:sieve_extend.c ****     }
 10157              		.loc 1 382 9 view .LVU3499
 10158              	.LBE528:
 10159              	.LBE527:
 10160              	.LBE526:
 10161              	.LBE525:
 10162              	.LBE524:
 915:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 10163              		.loc 1 915 9 is_stmt 1 view .LVU3500
 10164              	.LBB604:
 10165              	.LBB605:
 10166              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10167              		.loc 1 111 21 is_stmt 0 view .LVU3501
 10168 3a18 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# prime, %sfp
 10168      20
 10169 3a1d 4C39D2   		cmp	rdx, r10	# _8, block_stop
 10170              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10171              		.loc 1 111 12 view .LVU3502
 10172 3a20 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# _95, %sfp
 10172      38
 10173              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10174              		.loc 1 111 21 view .LVU3503
 10175 3a25 4C89CD   		mov	rbp, r9	# tmp637, prime
 10176 3a28 4C0F46D2 		cmovbe	r10, rdx	# _8,, block_stop
 10177              	.LVL619:
 111:sieve_extend.c ****     return index;
 10178              		.loc 1 111 21 view .LVU3504
 10179              	.LBE605:
 10180              	.LBE604:
 916:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 10181              		.loc 1 916 9 is_stmt 1 view .LVU3505
 10182              	.LBB608:
 10183              	.LBI604:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10184              		.loc 1 110 25 view .LVU3506
 10185              	.LBB606:
 111:sieve_extend.c ****     return index;
 10186              		.loc 1 111 5 view .LVU3507
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccdGK7kM.s 			page 279


 10187              		.loc 1 111 11 view .LVU3508
 10188              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10189              		.loc 1 111 21 is_stmt 0 view .LVU3509
 10190 3a2c 48C1ED06 		shr	rbp, 6	# tmp637,
 10191              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10192              		.loc 1 111 12 view .LVU3510
 10193 3a30 488B04E9 		mov	rax, QWORD PTR [rcx+rbp*8]	# *_285, *_285
 10194              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10195              		.loc 1 111 11 view .LVU3511
 10196 3a34 4C0FA3C8 		bt	rax, r9	# *_285, tmp1587
 10197 3a38 0F833402 		jnc	.L807	#,
 10197      0000
 10198 3a3e 488B4424 		mov	rax, QWORD PTR 24[rsp]	# tmp807, %sfp
 10198      18
 10199              	.L808:
 111:sieve_extend.c ****     return index;
 10200              		.loc 1 111 58 is_stmt 1 view .LVU3512
 10201              	.LVL620:
 10202              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10203              		.loc 1 111 21 is_stmt 0 view .LVU3513
 10204 3a43 4889C3   		mov	rbx, rax	# tmp642, tmp807
 10205 3a46 48C1EB06 		shr	rbx, 6	# tmp642,
 10206              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10207              		.loc 1 111 12 view .LVU3514
 10208 3a4a 4C8B2CD9 		mov	r13, QWORD PTR [rcx+rbx*8]	# *_34, *_34
 10209              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10210              		.loc 1 111 63 view .LVU3515
 10211 3a4e 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10212              		.loc 1 111 11 is_stmt 1 view .LVU3516
 10213 3a51 490FA3C5 		bt	r13, rax	# *_34, tmp807
 10214 3a55 0F830502 		jnc	.L1328	#,
 10214      0000
 10215 3a5b 4C8D7001 		lea	r14, 1[rax]	# tmp838,
 10216              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10217              		.loc 1 111 21 is_stmt 0 view .LVU3517
 10218 3a5f 4D89F0   		mov	r8, r14	# tmp878, tmp807
 10219 3a62 49C1E806 		shr	r8, 6	# tmp878,
 10220              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10221              		.loc 1 111 12 view .LVU3518
 10222 3a66 4A8B3CC1 		mov	rdi, QWORD PTR [rcx+r8*8]	# *_34, *_34
 10223 3a6a 4C89F0   		mov	rax, r14	# tmp807, tmp838
 10224              	.LVL621:
 111:sieve_extend.c ****     return index;
 10225              		.loc 1 111 58 is_stmt 1 view .LVU3519
 10226              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10227              		.loc 1 111 11 is_stmt 0 view .LVU3520
 10228 3a6d 4C0FA3F7 		bt	rdi, r14	# *_34, tmp807
GAS LISTING /tmp/ccdGK7kM.s 			page 280


 10229              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10230              		.loc 1 111 63 view .LVU3521
 10231 3a71 4C89F6   		mov	rsi, r14	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10232              		.loc 1 111 11 is_stmt 1 view .LVU3522
 10233 3a74 0F83E601 		jnc	.L1328	#,
 10233      0000
 10234 3a7a 48FFC0   		inc	rax	# tmp807
 10235              	.LVL622:
 111:sieve_extend.c ****     return index;
 10236              		.loc 1 111 58 view .LVU3523
 10237              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10238              		.loc 1 111 21 is_stmt 0 view .LVU3524
 10239 3a7d 4989C3   		mov	r11, rax	# tmp1072, tmp807
 10240 3a80 49C1EB06 		shr	r11, 6	# tmp1072,
 10241              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10242              		.loc 1 111 12 view .LVU3525
 10243 3a84 4E8B0CD9 		mov	r9, QWORD PTR [rcx+r11*8]	# *_34, *_34
 10244              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10245              		.loc 1 111 63 view .LVU3526
 10246 3a88 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10247              		.loc 1 111 11 is_stmt 1 view .LVU3527
 10248 3a8b 490FA3C1 		bt	r9, rax	# *_34, tmp807
 10249 3a8f 0F83CB01 		jnc	.L1328	#,
 10249      0000
 10250 3a95 498D4602 		lea	rax, 2[r14]	# tmp807,
 10251              	.LVL623:
 111:sieve_extend.c ****     return index;
 10252              		.loc 1 111 58 view .LVU3528
 10253              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10254              		.loc 1 111 21 is_stmt 0 view .LVU3529
 10255 3a99 4889C5   		mov	rbp, rax	# tmp1076, tmp807
 10256 3a9c 48C1ED06 		shr	rbp, 6	# tmp1076,
 10257              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10258              		.loc 1 111 12 view .LVU3530
 10259 3aa0 488B1CE9 		mov	rbx, QWORD PTR [rcx+rbp*8]	# *_34, *_34
 10260              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10261              		.loc 1 111 63 view .LVU3531
 10262 3aa4 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10263              		.loc 1 111 11 is_stmt 1 view .LVU3532
 10264 3aa7 480FA3C3 		bt	rbx, rax	# *_34, tmp807
 10265 3aab 0F83AF01 		jnc	.L1328	#,
 10265      0000
 10266 3ab1 498D4603 		lea	rax, 3[r14]	# tmp807,
 10267              	.LVL624:
 111:sieve_extend.c ****     return index;
 10268              		.loc 1 111 58 view .LVU3533
 10269              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccdGK7kM.s 			page 281


 111:sieve_extend.c ****     return index;
 10270              		.loc 1 111 21 is_stmt 0 view .LVU3534
 10271 3ab5 4989C5   		mov	r13, rax	# tmp1080, tmp807
 10272 3ab8 49C1ED06 		shr	r13, 6	# tmp1080,
 10273              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10274              		.loc 1 111 12 view .LVU3535
 10275 3abc 4E8B04E9 		mov	r8, QWORD PTR [rcx+r13*8]	# *_34, *_34
 10276              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10277              		.loc 1 111 63 view .LVU3536
 10278 3ac0 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10279              		.loc 1 111 11 is_stmt 1 view .LVU3537
 10280 3ac3 490FA3C0 		bt	r8, rax	# *_34, tmp807
 10281 3ac7 0F839301 		jnc	.L1328	#,
 10281      0000
 10282 3acd 498D4604 		lea	rax, 4[r14]	# tmp807,
 10283              	.LVL625:
 111:sieve_extend.c ****     return index;
 10284              		.loc 1 111 58 view .LVU3538
 10285              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10286              		.loc 1 111 21 is_stmt 0 view .LVU3539
 10287 3ad1 4889C7   		mov	rdi, rax	# tmp1084, tmp807
 10288 3ad4 48C1EF06 		shr	rdi, 6	# tmp1084,
 10289              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10290              		.loc 1 111 12 view .LVU3540
 10291 3ad8 4C8B1CF9 		mov	r11, QWORD PTR [rcx+rdi*8]	# *_34, *_34
 10292              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10293              		.loc 1 111 63 view .LVU3541
 10294 3adc 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10295              		.loc 1 111 11 is_stmt 1 view .LVU3542
 10296 3adf 490FA3C3 		bt	r11, rax	# *_34, tmp807
 10297 3ae3 0F837701 		jnc	.L1328	#,
 10297      0000
 10298 3ae9 498D4605 		lea	rax, 5[r14]	# tmp807,
 10299              	.LVL626:
 111:sieve_extend.c ****     return index;
 10300              		.loc 1 111 58 view .LVU3543
 10301              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10302              		.loc 1 111 21 is_stmt 0 view .LVU3544
 10303 3aed 4989C1   		mov	r9, rax	# tmp1088, tmp807
 10304 3af0 49C1E906 		shr	r9, 6	# tmp1088,
 10305              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10306              		.loc 1 111 12 view .LVU3545
 10307 3af4 4A8B2CC9 		mov	rbp, QWORD PTR [rcx+r9*8]	# *_34, *_34
 10308              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10309              		.loc 1 111 63 view .LVU3546
 10310 3af8 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccdGK7kM.s 			page 282


 10311              		.loc 1 111 11 is_stmt 1 view .LVU3547
 10312 3afb 480FA3C5 		bt	rbp, rax	# *_34, tmp807
 10313 3aff 0F835B01 		jnc	.L1328	#,
 10313      0000
 10314 3b05 498D4606 		lea	rax, 6[r14]	# tmp807,
 10315              	.LVL627:
 111:sieve_extend.c ****     return index;
 10316              		.loc 1 111 58 view .LVU3548
 10317              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10318              		.loc 1 111 21 is_stmt 0 view .LVU3549
 10319 3b09 4889C3   		mov	rbx, rax	# tmp1092, tmp807
 10320 3b0c 48C1EB06 		shr	rbx, 6	# tmp1092,
 10321              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10322              		.loc 1 111 12 view .LVU3550
 10323 3b10 4C8B2CD9 		mov	r13, QWORD PTR [rcx+rbx*8]	# *_34, *_34
 10324              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 10325              		.loc 1 111 63 view .LVU3551
 10326 3b14 4889C6   		mov	rsi, rax	# prime, tmp807
 111:sieve_extend.c ****     return index;
 10327              		.loc 1 111 11 is_stmt 1 view .LVU3552
 10328 3b17 490FA3C5 		bt	r13, rax	# *_34, tmp807
 10329 3b1b 0F833F01 		jnc	.L1328	#,
 10329      0000
 10330 3b21 498D4607 		lea	rax, 7[r14]	# tmp807,
 10331              	.LVL628:
 111:sieve_extend.c ****     return index;
 10332              		.loc 1 111 11 is_stmt 0 view .LVU3553
 10333 3b25 E919FFFF 		jmp	.L808	#
 10333      FF
 10334              	.LVL629:
 10335              	.L1390:
 111:sieve_extend.c ****     return index;
 10336              		.loc 1 111 11 view .LVU3554
 10337              	.LBE606:
 10338              	.LBE608:
 10339              	.LBE523:
 10340              	.LBB612:
 10341              	.LBB512:
 10342              	.LBB507:
 10343              	.LBB496:
 10344              	.LBB465:
 234:sieve_extend.c ****        return;
 10345              		.loc 1 234 8 is_stmt 1 view .LVU3555
 10346              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 10347              		.loc 1 234 41 is_stmt 0 view .LVU3556
 10348 3b2a C4E2D1F7 		shlx	rdi, rcx, rbp	# tmp564, pattern, index
 10348      F9
 10349              	.LVL630:
 10350              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 10351              		.loc 1 234 67 view .LVU3557
 10352 3b2f 48237C24 		and	rdi, QWORD PTR 40[rsp]	# tmp565, %sfp
 10352      28
GAS LISTING /tmp/ccdGK7kM.s 			page 283


 10353              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 10354              		.loc 1 234 28 view .LVU3558
 10355 3b34 4909FB   		or	r11, rdi	# tmp566, tmp565
 10356 3b37 4C891E   		mov	QWORD PTR [rsi], r11	# MEM[(uint64_t *)_1250], tmp566
 235:sieve_extend.c ****     }
 10357              		.loc 1 235 8 is_stmt 1 view .LVU3559
 10358 3b3a E918F5FF 		jmp	.L777	#
 10358      FF
 10359              	.LVL631:
 10360              	.L783:
 235:sieve_extend.c ****     }
 10361              		.loc 1 235 8 is_stmt 0 view .LVU3560
 10362              	.LBE465:
 10363              	.LBE496:
 10364              	.LBB497:
 10365              	.LBB494:
 10366              	.LBB489:
 10367              	.LBB490:
 10368              	.LBB491:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10369              		.loc 1 267 54 is_stmt 1 view .LVU3561
 10370              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10371              		.loc 1 267 9 is_stmt 0 view .LVU3562
 10372 3b3f 4939EF   		cmp	r15, rbp	# _69, index
 10373 3b42 0F820FF5 		jb	.L777	#,
 10373      FFFF
 10374              	.LBB492:
 10375              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10376              		.loc 1 272 25 view .LVU3563
 10377 3b48 41BB0100 		mov	r11d, 1	# tmp591,
 10377      0000
 10378              	.LVL632:
 10379 3b4e 6690     		.p2align 4,,10
 10380              		.p2align 3
 10381              	.L787:
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10382              		.loc 1 268 13 is_stmt 1 view .LVU3564
 10383              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10384              		.loc 1 268 32 is_stmt 0 view .LVU3565
 10385 3b50 4889EF   		mov	rdi, rbp	# index_word, index
 10386 3b53 48C1EF06 		shr	rdi, 6	# index_word,
 10387              	.LVL633:
 269:sieve_extend.c ****             #pragma ivdep
 10388              		.loc 1 269 13 is_stmt 1 view .LVU3566
 10389              	# sieve_extend.c:269:             register bitword_t mask = SAFE_ZERO;
 269:sieve_extend.c ****             #pragma ivdep
 10390              		.loc 1 269 32 is_stmt 0 view .LVU3567
 10391 3b57 31C9     		xor	ecx, ecx	# mask
 10392              	.LVL634:
 10393              	.L786:
 271:sieve_extend.c ****                 mask |= markmask(index);
 10394              		.loc 1 271 13 is_stmt 1 view .LVU3568
 272:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccdGK7kM.s 			page 284


 10395              		.loc 1 272 17 view .LVU3569
 10396              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10397              		.loc 1 272 25 is_stmt 0 view .LVU3570
 10398 3b59 C442D1F7 		shlx	r8, r11, rbp	# tmp590, tmp591, index
 10398      C3
 10399              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10400              		.loc 1 273 23 view .LVU3571
 10401 3b5e 4C01E5   		add	rbp, r12	# index, step
 10402              	.LVL635:
 10403              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10404              		.loc 1 274 36 view .LVU3572
 10405 3b61 4989E9   		mov	r9, rbp	# tmp592, index
 10406 3b64 49C1E906 		shr	r9, 6	# tmp592,
 10407              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10408              		.loc 1 272 22 view .LVU3573
 10409 3b68 4C09C1   		or	rcx, r8	# mask, tmp590
 10410              	.LVL636:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10411              		.loc 1 273 17 is_stmt 1 view .LVU3574
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10412              		.loc 1 274 21 view .LVU3575
 10413              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10414              		.loc 1 274 13 is_stmt 0 view .LVU3576
 10415 3b6b 4C39CF   		cmp	rdi, r9	# index_word, tmp592
 10416 3b6e 0F85AC00 		jne	.L1253	#,
 10416      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 10417              		.loc 1 271 13 is_stmt 1 view .LVU3577
 272:sieve_extend.c ****                 index += step;
 10418              		.loc 1 272 17 view .LVU3578
 10419              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10420              		.loc 1 272 25 is_stmt 0 view .LVU3579
 10421 3b74 C442D1F7 		shlx	r10, r11, rbp	# tmp1151, tmp591, index
 10421      D3
 10422              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10423              		.loc 1 273 23 view .LVU3580
 10424 3b79 4C01E5   		add	rbp, r12	# index, step
 10425              	.LVL637:
 10426              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10427              		.loc 1 274 36 view .LVU3581
 10428 3b7c 4889EA   		mov	rdx, rbp	# tmp1152, index
 10429 3b7f 48C1EA06 		shr	rdx, 6	# tmp1152,
 10430              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10431              		.loc 1 272 22 view .LVU3582
 10432 3b83 4C09D1   		or	rcx, r10	# mask, tmp1151
 10433              	.LVL638:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10434              		.loc 1 273 17 is_stmt 1 view .LVU3583
GAS LISTING /tmp/ccdGK7kM.s 			page 285


 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10435              		.loc 1 274 21 view .LVU3584
 10436              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10437              		.loc 1 274 13 is_stmt 0 view .LVU3585
 10438 3b86 4839D7   		cmp	rdi, rdx	# index_word, tmp1152
 10439 3b89 0F859100 		jne	.L1253	#,
 10439      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 10440              		.loc 1 271 13 is_stmt 1 view .LVU3586
 272:sieve_extend.c ****                 index += step;
 10441              		.loc 1 272 17 view .LVU3587
 10442              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10443              		.loc 1 272 25 is_stmt 0 view .LVU3588
 10444 3b8f C4C2D1F7 		shlx	rax, r11, rbp	# tmp1153, tmp591, index
 10444      C3
 10445              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10446              		.loc 1 273 23 view .LVU3589
 10447 3b94 4C01E5   		add	rbp, r12	# index, step
 10448              	.LVL639:
 10449              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10450              		.loc 1 274 36 view .LVU3590
 10451 3b97 4889EE   		mov	rsi, rbp	# tmp1154, index
 10452 3b9a 48C1EE06 		shr	rsi, 6	# tmp1154,
 10453              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10454              		.loc 1 272 22 view .LVU3591
 10455 3b9e 4809C1   		or	rcx, rax	# mask, tmp1153
 10456              	.LVL640:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10457              		.loc 1 273 17 is_stmt 1 view .LVU3592
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10458              		.loc 1 274 21 view .LVU3593
 10459              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10460              		.loc 1 274 13 is_stmt 0 view .LVU3594
 10461 3ba1 4839F7   		cmp	rdi, rsi	# index_word, tmp1154
 10462 3ba4 757A     		jne	.L1253	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 10463              		.loc 1 271 13 is_stmt 1 view .LVU3595
 272:sieve_extend.c ****                 index += step;
 10464              		.loc 1 272 17 view .LVU3596
 10465              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10466              		.loc 1 272 25 is_stmt 0 view .LVU3597
 10467 3ba6 C442D1F7 		shlx	r8, r11, rbp	# tmp1155, tmp591, index
 10467      C3
 10468              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10469              		.loc 1 273 23 view .LVU3598
 10470 3bab 4C01E5   		add	rbp, r12	# index, step
 10471              	.LVL641:
 10472              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccdGK7kM.s 			page 286


 10473              		.loc 1 274 36 view .LVU3599
 10474 3bae 4989E9   		mov	r9, rbp	# tmp1156, index
 10475 3bb1 49C1E906 		shr	r9, 6	# tmp1156,
 10476              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10477              		.loc 1 272 22 view .LVU3600
 10478 3bb5 4C09C1   		or	rcx, r8	# mask, tmp1155
 10479              	.LVL642:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10480              		.loc 1 273 17 is_stmt 1 view .LVU3601
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10481              		.loc 1 274 21 view .LVU3602
 10482              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10483              		.loc 1 274 13 is_stmt 0 view .LVU3603
 10484 3bb8 4C39CF   		cmp	rdi, r9	# index_word, tmp1156
 10485 3bbb 7563     		jne	.L1253	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 10486              		.loc 1 271 13 is_stmt 1 view .LVU3604
 272:sieve_extend.c ****                 index += step;
 10487              		.loc 1 272 17 view .LVU3605
 10488              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10489              		.loc 1 272 25 is_stmt 0 view .LVU3606
 10490 3bbd C442D1F7 		shlx	r10, r11, rbp	# tmp1157, tmp591, index
 10490      D3
 10491              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10492              		.loc 1 273 23 view .LVU3607
 10493 3bc2 4C01E5   		add	rbp, r12	# index, step
 10494              	.LVL643:
 10495              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10496              		.loc 1 274 36 view .LVU3608
 10497 3bc5 4889EA   		mov	rdx, rbp	# tmp1158, index
 10498 3bc8 48C1EA06 		shr	rdx, 6	# tmp1158,
 10499              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10500              		.loc 1 272 22 view .LVU3609
 10501 3bcc 4C09D1   		or	rcx, r10	# mask, tmp1157
 10502              	.LVL644:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10503              		.loc 1 273 17 is_stmt 1 view .LVU3610
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10504              		.loc 1 274 21 view .LVU3611
 10505              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10506              		.loc 1 274 13 is_stmt 0 view .LVU3612
 10507 3bcf 4839D7   		cmp	rdi, rdx	# index_word, tmp1158
 10508 3bd2 754C     		jne	.L1253	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 10509              		.loc 1 271 13 is_stmt 1 view .LVU3613
 272:sieve_extend.c ****                 index += step;
 10510              		.loc 1 272 17 view .LVU3614
 10511              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10512              		.loc 1 272 25 is_stmt 0 view .LVU3615
GAS LISTING /tmp/ccdGK7kM.s 			page 287


 10513 3bd4 C4C2D1F7 		shlx	rax, r11, rbp	# tmp1159, tmp591, index
 10513      C3
 10514              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10515              		.loc 1 273 23 view .LVU3616
 10516 3bd9 4C01E5   		add	rbp, r12	# index, step
 10517              	.LVL645:
 10518              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10519              		.loc 1 274 36 view .LVU3617
 10520 3bdc 4889EE   		mov	rsi, rbp	# tmp1160, index
 10521 3bdf 48C1EE06 		shr	rsi, 6	# tmp1160,
 10522              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10523              		.loc 1 272 22 view .LVU3618
 10524 3be3 4809C1   		or	rcx, rax	# mask, tmp1159
 10525              	.LVL646:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10526              		.loc 1 273 17 is_stmt 1 view .LVU3619
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10527              		.loc 1 274 21 view .LVU3620
 10528              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10529              		.loc 1 274 13 is_stmt 0 view .LVU3621
 10530 3be6 4839F7   		cmp	rdi, rsi	# index_word, tmp1160
 10531 3be9 7535     		jne	.L1253	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 10532              		.loc 1 271 13 is_stmt 1 view .LVU3622
 272:sieve_extend.c ****                 index += step;
 10533              		.loc 1 272 17 view .LVU3623
 10534              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10535              		.loc 1 272 25 is_stmt 0 view .LVU3624
 10536 3beb C442D1F7 		shlx	r8, r11, rbp	# tmp1161, tmp591, index
 10536      C3
 10537              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10538              		.loc 1 273 23 view .LVU3625
 10539 3bf0 4C01E5   		add	rbp, r12	# index, step
 10540              	.LVL647:
 10541              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10542              		.loc 1 274 36 view .LVU3626
 10543 3bf3 4989E9   		mov	r9, rbp	# tmp1162, index
 10544 3bf6 49C1E906 		shr	r9, 6	# tmp1162,
 10545              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10546              		.loc 1 272 22 view .LVU3627
 10547 3bfa 4C09C1   		or	rcx, r8	# mask, tmp1161
 10548              	.LVL648:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10549              		.loc 1 273 17 is_stmt 1 view .LVU3628
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10550              		.loc 1 274 21 view .LVU3629
 10551              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10552              		.loc 1 274 13 is_stmt 0 view .LVU3630
GAS LISTING /tmp/ccdGK7kM.s 			page 288


 10553 3bfd 4C39CF   		cmp	rdi, r9	# index_word, tmp1162
 10554 3c00 751E     		jne	.L1253	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 10555              		.loc 1 271 13 is_stmt 1 view .LVU3631
 272:sieve_extend.c ****                 index += step;
 10556              		.loc 1 272 17 view .LVU3632
 10557              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10558              		.loc 1 272 25 is_stmt 0 view .LVU3633
 10559 3c02 C442D1F7 		shlx	r10, r11, rbp	# tmp1163, tmp591, index
 10559      D3
 10560              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10561              		.loc 1 273 23 view .LVU3634
 10562 3c07 4C01E5   		add	rbp, r12	# index, step
 10563              	.LVL649:
 10564              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10565              		.loc 1 274 36 view .LVU3635
 10566 3c0a 4889EA   		mov	rdx, rbp	# tmp1164, index
 10567 3c0d 48C1EA06 		shr	rdx, 6	# tmp1164,
 10568              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 10569              		.loc 1 272 22 view .LVU3636
 10570 3c11 4C09D1   		or	rcx, r10	# mask, tmp1163
 10571              	.LVL650:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 10572              		.loc 1 273 17 is_stmt 1 view .LVU3637
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10573              		.loc 1 274 21 view .LVU3638
 10574              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10575              		.loc 1 274 13 is_stmt 0 view .LVU3639
 10576 3c14 4839D7   		cmp	rdi, rdx	# index_word, tmp1164
 10577 3c17 0F843CFF 		je	.L786	#,
 10577      FFFF
 10578 3c1d 0F1F00   		.p2align 4,,10
 10579              		.p2align 3
 10580              	.L1253:
 277:sieve_extend.c ****         }
 10581              		.loc 1 277 13 is_stmt 1 view .LVU3640
 10582              	# sieve_extend.c:277:             bitarray[index_word] |= mask;
 277:sieve_extend.c ****         }
 10583              		.loc 1 277 34 is_stmt 0 view .LVU3641
 10584 3c20 49094CFD 		or	QWORD PTR 0[r13+rdi*8], rcx	# *_187, mask
 10584      00
 277:sieve_extend.c ****         }
 10585              		.loc 1 277 34 view .LVU3642
 10586              	.LBE492:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10587              		.loc 1 267 54 is_stmt 1 view .LVU3643
 10588              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10589              		.loc 1 267 9 is_stmt 0 view .LVU3644
 10590 3c25 4939EF   		cmp	r15, rbp	# _69, index
 10591 3c28 0F8322FF 		jnb	.L787	#,
 10591      FFFF
GAS LISTING /tmp/ccdGK7kM.s 			page 289


 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10592              		.loc 1 267 9 view .LVU3645
 10593 3c2e E924F4FF 		jmp	.L777	#
 10593      FF
 10594              	.LVL651:
 10595              	.L773:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10596              		.loc 1 267 9 view .LVU3646
 10597              	.LBE491:
 10598              	.LBE490:
 10599              	.LBE489:
 10600              	.LBE494:
 10601              	.LBE497:
 10602              	.LBB498:
 10603              	.LBB458:
 778:sieve_extend.c **** }
 10604              		.loc 1 778 37 is_stmt 1 view .LVU3647
 10605 3c33 E898DAFF 		call	extendSieve_aligned	#
 10605      FF
 10606              	.LVL652:
 778:sieve_extend.c **** }
 10607              		.loc 1 778 37 is_stmt 0 view .LVU3648
 10608 3c38 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 10608      18
 10609 3c3d E9E3F3FF 		jmp	.L770	#
 10609      FF
 10610              	.LVL653:
 10611              	.L1389:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10612              		.loc 1 776 37 is_stmt 1 view .LVU3649
 10613 3c42 E889DFFF 		call	extendSieve_shiftleft	#
 10613      FF
 10614              	.LVL654:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10615              		.loc 1 776 37 is_stmt 0 view .LVU3650
 10616 3c47 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 10616      18
 10617 3c4c E9D4F3FF 		jmp	.L770	#
 10617      FF
 10618              	.LVL655:
 10619              	.L1395:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10620              		.loc 1 776 37 view .LVU3651
 10621              	.LBE458:
 10622              	.LBE498:
 10623              	.LBE507:
 10624              	.LBE512:
 10625              	.LBE612:
 10626              	.LBB613:
 10627              	.LBB519:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10628              		.loc 1 777 37 is_stmt 1 view .LVU3652
 10629 3c51 E8DAC8FF 		call	extendSieve_shiftright_ivdep	#
 10629      FF
 10630              	.LVL656:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10631              		.loc 1 777 37 is_stmt 0 view .LVU3653
GAS LISTING /tmp/ccdGK7kM.s 			page 290


 10632 3c56 E988FDFF 		jmp	.L804	#
 10632      FF
 10633              	.LVL657:
 10634 3c5b 0F1F4400 		.p2align 4,,10
 10634      00
 10635              		.p2align 3
 10636              	.L1328:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10637              		.loc 1 777 37 view .LVU3654
 10638 3c60 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp807
 10638      18
 10639 3c65 48FFC0   		inc	rax	# tmp807
 10640              	.LVL658:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10641              		.loc 1 777 37 view .LVU3655
 10642 3c68 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, prime
 10642      20
 10643 3c6d 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp807
 10643      18
 10644              	.LVL659:
 10645              	.L807:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10646              		.loc 1 777 37 view .LVU3656
 10647              	.LBE519:
 10648              	.LBE613:
 10649              	.LBB614:
 10650              	.LBB609:
 10651              	.LBB607:
 112:sieve_extend.c **** }
 10652              		.loc 1 112 5 is_stmt 1 view .LVU3657
 112:sieve_extend.c **** }
 10653              		.loc 1 112 5 is_stmt 0 view .LVU3658
 10654              	.LBE607:
 10655              	.LBE609:
 917:sieve_extend.c ****     } 
 10656              		.loc 1 917 9 is_stmt 1 view .LVU3659
 10657              	.LBB610:
 10658              	.LBI524:
 781:sieve_extend.c ****     counter_t prime = prime_start;
 10659              		.loc 1 781 13 view .LVU3660
 10660              	.LBB602:
 782:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 10661              		.loc 1 782 5 view .LVU3661
 783:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10662              		.loc 1 783 5 view .LVU3662
 10663 3c72 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# prime, %sfp
 10663      20
 10664              	# sieve_extend.c:783:     counter_t start = prime * prime * 2 + prime * 2;
 783:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10665              		.loc 1 783 15 is_stmt 0 view .LVU3663
 10666 3c77 488B4424 		mov	rax, QWORD PTR 24[rsp]	# index, %sfp
 10666      18
 10667 3c7c 4C8D0409 		lea	r8, [rcx+rcx]	# _952,
 10668 3c80 490FAFC0 		imul	rax, r8	# index, _952
 10669              	.LVL660:
 784:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 10670              		.loc 1 784 5 is_stmt 1 view .LVU3664
GAS LISTING /tmp/ccdGK7kM.s 			page 291


 785:sieve_extend.c **** 
 10671              		.loc 1 785 5 view .LVU3665
 787:sieve_extend.c ****     
 10672              		.loc 1 787 5 view .LVU3666
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 10673              		.loc 1 789 5 view .LVU3667
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 10674              		.loc 1 789 11 view .LVU3668
 10675 3c84 4939C2   		cmp	r10, rax	# block_stop, index
 10676 3c87 0F827D04 		jb	.L823	#,
 10676      0000
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 10677              		.loc 1 790 9 view .LVU3669
 10678              	# sieve_extend.c:790:         step  = prime * 2 + 1;
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 10679              		.loc 1 790 15 is_stmt 0 view .LVU3670
 10680 3c8d 49FFC0   		inc	r8	# step
 10681              	.LVL661:
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10682              		.loc 1 791 9 is_stmt 1 view .LVU3671
 10683              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10684              		.loc 1 791 12 is_stmt 0 view .LVU3672
 10685 3c90 4983F810 		cmp	r8, 16	# step,
 10686 3c94 0F87A604 		ja	.L868	#,
 10686      0000
 10687              	.LBB545:
 10688              	.LBB546:
 10689              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10690              		.loc 1 231 21 view .LVU3673
 10691 3c9a 4C89D2   		mov	rdx, r10	# range_stop_word, block_stop
 10692 3c9d 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10693              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 10694              		.loc 1 253 102 view .LVU3674
 10695 3ca1 4589D6   		mov	r14d, r10d	# tmp810, block_stop
 10696 3ca4 41F7D6   		not	r14d	# tmp810
 10697              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10698              		.loc 1 231 21 view .LVU3675
 10699 3ca7 48895424 		mov	QWORD PTR 8[rsp], rdx	# %sfp, range_stop_word
 10699      08
 10700              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 10701              		.loc 1 253 31 view .LVU3676
 10702 3cac 498D1CD7 		lea	rbx, [r15+rdx*8]	# _496,
 10703 3cb0 48FFCA   		dec	rdx	# _559
 10704              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 10705              		.loc 1 253 102 view .LVU3677
 10706 3cb3 48C7C7FF 		mov	rdi, -1	# tmp1602,
 10706      FFFFFF
 10707 3cba 44897424 		mov	DWORD PTR 40[rsp], r14d	# %sfp, tmp810
 10707      28
 10708 3cbf 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, _559
 10708      10
GAS LISTING /tmp/ccdGK7kM.s 			page 292


 10709 3cc4 C4628BF7 		shrx	r13, rdi, r14	# _507, tmp1602, tmp1603
 10709      EF
 10710 3cc9 488B2C24 		mov	rbp, QWORD PTR [rsp]	# block_start, %sfp
 10711 3ccd 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# prime, %sfp
 10711      20
 10712 3cd2 4D8D1CD7 		lea	r11, [r15+rdx*8]	# _1461,
 10713 3cd6 662E0F1F 		.p2align 4,,10
 10713      84000000 
 10713      0000
 10714              		.p2align 3
 10715              	.L813:
 10716              	.LVL662:
 253:sieve_extend.c **** }
 10717              		.loc 1 253 102 view .LVU3678
 10718              	.LBE546:
 10719              	.LBE545:
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10720              		.loc 1 792 9 is_stmt 1 view .LVU3679
 10721              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10722              		.loc 1 792 12 is_stmt 0 view .LVU3680
 10723 3ce0 488D4F01 		lea	rcx, 1[rdi]	# index,
 10724 3ce4 4839E9   		cmp	rcx, rbp	# index, block_start
 10725 3ce7 7713     		ja	.L814	#,
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10726              		.loc 1 792 47 is_stmt 1 view .LVU3681
 10727              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10728              		.loc 1 792 67 is_stmt 0 view .LVU3682
 10729 3ce9 488D443D 		lea	rax, 0[rbp+rdi]	# _311,
 10729      00
 10730              	.LVL663:
 10731              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10732              		.loc 1 792 108 view .LVU3683
 10733 3cee 31D2     		xor	edx, edx	# tmp654
 10734              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10735              		.loc 1 792 75 view .LVU3684
 10736 3cf0 4801C7   		add	rdi, rax	# tmp652, _311
 10737              	.LVL664:
 10738              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10739              		.loc 1 792 108 view .LVU3685
 10740 3cf3 49F7F0   		div	r8	# step
 10741              	.LVL665:
 10742              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10743              		.loc 1 792 53 view .LVU3686
 10744 3cf6 4889F8   		mov	rax, rdi	# tmp652, tmp652
 10745 3cf9 4829D0   		sub	rax, rdx	# tmp652, tmp654
 10746              	.LVL666:
 10747              	.L814:
 793:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 10748              		.loc 1 793 9 is_stmt 1 view .LVU3687
 10749              	.LBB554:
 10750              	.LBI545:
GAS LISTING /tmp/ccdGK7kM.s 			page 293


 222:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 10751              		.loc 1 222 20 view .LVU3688
 10752              	.LBB551:
 223:sieve_extend.c **** 
 10753              		.loc 1 223 5 view .LVU3689
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10754              		.loc 1 226 2 view .LVU3690
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10755              		.loc 1 227 5 view .LVU3691
 10756              	.LBB547:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10757              		.loc 1 227 10 view .LVU3692
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10758              		.loc 1 227 41 view .LVU3693
 10759              	.LBE547:
 10760              	.LBE551:
 10761              	.LBE554:
 10762 3cfc 4D89C1   		mov	r9, r8	# patternsize, step
 10763              	.LBB555:
 10764              	.LBB552:
 10765              	# sieve_extend.c:226: 	register bitword_t pattern = SAFE_SHIFTBIT;
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10766              		.loc 1 226 21 is_stmt 0 view .LVU3694
 10767 3cff BE010000 		mov	esi, 1	# pattern,
 10767      00
 10768              	.LVL667:
 10769              	.L815:
 10770              	.LBB548:
 228:sieve_extend.c **** 
 10771              		.loc 1 228 9 is_stmt 1 view .LVU3695
 10772              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10773              		.loc 1 227 88 is_stmt 0 view .LVU3696
 10774 3d04 4B8D3C09 		lea	rdi, [r9+r9]	# patternsize,
 10775              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10776              		.loc 1 228 29 view .LVU3697
 10777 3d08 C462B1F7 		shlx	r14, rsi, r9	# _450, pattern, patternsize
 10777      F6
 10778              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10779              		.loc 1 228 17 view .LVU3698
 10780 3d0d 4C09F6   		or	rsi, r14	# pattern, _450
 10781              	.LVL668:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10782              		.loc 1 227 76 is_stmt 1 view .LVU3699
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10783              		.loc 1 227 41 view .LVU3700
 10784              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10785              		.loc 1 227 5 is_stmt 0 view .LVU3701
 10786 3d10 4883FF40 		cmp	rdi, 64	# patternsize,
 10787 3d14 0F879E00 		ja	.L1251	#,
 10787      0000
 228:sieve_extend.c **** 
 10788              		.loc 1 228 9 is_stmt 1 view .LVU3702
 10789              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/ccdGK7kM.s 			page 294


 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10790              		.loc 1 227 88 is_stmt 0 view .LVU3703
 10791 3d1a 4E8D348D 		lea	r14, 0[0+r9*4]	# patternsize,
 10791      00000000 
 10792              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10793              		.loc 1 228 29 view .LVU3704
 10794 3d22 C4E2C1F7 		shlx	rdx, rsi, rdi	# _450, pattern, patternsize
 10794      D6
 10795              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10796              		.loc 1 228 17 view .LVU3705
 10797 3d27 4809D6   		or	rsi, rdx	# pattern, _450
 10798              	.LVL669:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10799              		.loc 1 227 76 is_stmt 1 view .LVU3706
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10800              		.loc 1 227 41 view .LVU3707
 10801              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10802              		.loc 1 227 5 is_stmt 0 view .LVU3708
 10803 3d2a 4983FE40 		cmp	r14, 64	# patternsize,
 10804 3d2e 0F878400 		ja	.L1251	#,
 10804      0000
 228:sieve_extend.c **** 
 10805              		.loc 1 228 9 is_stmt 1 view .LVU3709
 10806              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10807              		.loc 1 227 88 is_stmt 0 view .LVU3710
 10808 3d34 4A8D14CD 		lea	rdx, 0[0+r9*8]	# patternsize,
 10808      00000000 
 10809              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10810              		.loc 1 228 29 view .LVU3711
 10811 3d3c C4E289F7 		shlx	rdi, rsi, r14	# _450, pattern, patternsize
 10811      FE
 10812              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10813              		.loc 1 228 17 view .LVU3712
 10814 3d41 4809FE   		or	rsi, rdi	# pattern, _450
 10815              	.LVL670:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10816              		.loc 1 227 76 is_stmt 1 view .LVU3713
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10817              		.loc 1 227 41 view .LVU3714
 10818              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10819              		.loc 1 227 5 is_stmt 0 view .LVU3715
 10820 3d44 4883FA40 		cmp	rdx, 64	# patternsize,
 10821 3d48 776E     		ja	.L1251	#,
 228:sieve_extend.c **** 
 10822              		.loc 1 228 9 is_stmt 1 view .LVU3716
 10823              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10824              		.loc 1 227 88 is_stmt 0 view .LVU3717
 10825 3d4a 4C89CF   		mov	rdi, r9	# patternsize, patternsize
 10826 3d4d 48C1E704 		sal	rdi, 4	# patternsize,
GAS LISTING /tmp/ccdGK7kM.s 			page 295


 10827              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10828              		.loc 1 228 29 view .LVU3718
 10829 3d51 C462E9F7 		shlx	r14, rsi, rdx	# _450, pattern, patternsize
 10829      F6
 10830              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10831              		.loc 1 228 17 view .LVU3719
 10832 3d56 4C09F6   		or	rsi, r14	# pattern, _450
 10833              	.LVL671:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10834              		.loc 1 227 76 is_stmt 1 view .LVU3720
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10835              		.loc 1 227 41 view .LVU3721
 10836              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10837              		.loc 1 227 5 is_stmt 0 view .LVU3722
 10838 3d59 4883FF40 		cmp	rdi, 64	# patternsize,
 10839 3d5d 7759     		ja	.L1251	#,
 228:sieve_extend.c **** 
 10840              		.loc 1 228 9 is_stmt 1 view .LVU3723
 10841              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10842              		.loc 1 227 88 is_stmt 0 view .LVU3724
 10843 3d5f 4D89CE   		mov	r14, r9	# patternsize, patternsize
 10844 3d62 49C1E605 		sal	r14, 5	# patternsize,
 10845              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10846              		.loc 1 228 29 view .LVU3725
 10847 3d66 C4E2C1F7 		shlx	rdx, rsi, rdi	# _450, pattern, patternsize
 10847      D6
 10848              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10849              		.loc 1 228 17 view .LVU3726
 10850 3d6b 4809D6   		or	rsi, rdx	# pattern, _450
 10851              	.LVL672:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10852              		.loc 1 227 76 is_stmt 1 view .LVU3727
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10853              		.loc 1 227 41 view .LVU3728
 10854              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10855              		.loc 1 227 5 is_stmt 0 view .LVU3729
 10856 3d6e 4983FE40 		cmp	r14, 64	# patternsize,
 10857 3d72 7744     		ja	.L1251	#,
 228:sieve_extend.c **** 
 10858              		.loc 1 228 9 is_stmt 1 view .LVU3730
 10859              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10860              		.loc 1 227 88 is_stmt 0 view .LVU3731
 10861 3d74 4C89CA   		mov	rdx, r9	# patternsize, patternsize
 10862 3d77 48C1E206 		sal	rdx, 6	# patternsize,
 10863              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10864              		.loc 1 228 29 view .LVU3732
 10865 3d7b C4E289F7 		shlx	rdi, rsi, r14	# _450, pattern, patternsize
 10865      FE
GAS LISTING /tmp/ccdGK7kM.s 			page 296


 10866              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10867              		.loc 1 228 17 view .LVU3733
 10868 3d80 4809FE   		or	rsi, rdi	# pattern, _450
 10869              	.LVL673:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10870              		.loc 1 227 76 is_stmt 1 view .LVU3734
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10871              		.loc 1 227 41 view .LVU3735
 10872              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10873              		.loc 1 227 5 is_stmt 0 view .LVU3736
 10874 3d83 4883FA40 		cmp	rdx, 64	# patternsize,
 10875 3d87 772F     		ja	.L1251	#,
 228:sieve_extend.c **** 
 10876              		.loc 1 228 9 is_stmt 1 view .LVU3737
 10877              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10878              		.loc 1 227 88 is_stmt 0 view .LVU3738
 10879 3d89 4C89CF   		mov	rdi, r9	# patternsize, patternsize
 10880 3d8c 48C1E707 		sal	rdi, 7	# patternsize,
 10881              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10882              		.loc 1 228 29 view .LVU3739
 10883 3d90 C462E9F7 		shlx	r14, rsi, rdx	# _450, pattern, patternsize
 10883      F6
 10884              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10885              		.loc 1 228 17 view .LVU3740
 10886 3d95 4C09F6   		or	rsi, r14	# pattern, _450
 10887              	.LVL674:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10888              		.loc 1 227 76 is_stmt 1 view .LVU3741
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10889              		.loc 1 227 41 view .LVU3742
 10890              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10891              		.loc 1 227 5 is_stmt 0 view .LVU3743
 10892 3d98 4883FF40 		cmp	rdi, 64	# patternsize,
 10893 3d9c 771A     		ja	.L1251	#,
 228:sieve_extend.c **** 
 10894              		.loc 1 228 9 is_stmt 1 view .LVU3744
 10895              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10896              		.loc 1 227 88 is_stmt 0 view .LVU3745
 10897 3d9e 49C1E108 		sal	r9, 8	# patternsize,
 10898              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10899              		.loc 1 228 29 view .LVU3746
 10900 3da2 C4E2C1F7 		shlx	rdx, rsi, rdi	# _450, pattern, patternsize
 10900      D6
 10901              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 10902              		.loc 1 228 17 view .LVU3747
 10903 3da7 4809D6   		or	rsi, rdx	# pattern, _450
 10904              	.LVL675:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccdGK7kM.s 			page 297


 10905              		.loc 1 227 76 is_stmt 1 view .LVU3748
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10906              		.loc 1 227 41 view .LVU3749
 10907              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10908              		.loc 1 227 5 is_stmt 0 view .LVU3750
 10909 3daa 4983F940 		cmp	r9, 64	# patternsize,
 10910 3dae 0F8650FF 		jbe	.L815	#,
 10910      FFFF
 10911              	.LVL676:
 10912              		.p2align 4,,10
 10913 3db4 0F1F4000 		.p2align 3
 10914              	.L1251:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10915              		.loc 1 227 5 view .LVU3751
 10916              	.LBE548:
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10917              		.loc 1 231 5 is_stmt 1 view .LVU3752
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 10918              		.loc 1 232 5 view .LVU3753
 10919              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 10920              		.loc 1 232 24 is_stmt 0 view .LVU3754
 10921 3db8 4989C1   		mov	r9, rax	# copy_word, index
 10922 3dbb 49C1E906 		shr	r9, 6	# copy_word,
 10923              	.LVL677:
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10924              		.loc 1 233 6 is_stmt 1 view .LVU3755
 10925 3dbf 4B8D3CCF 		lea	rdi, [r15+r9*8]	# _1363,
 10926 3dc3 4C8B37   		mov	r14, QWORD PTR [rdi]	# pretmp_1364, *_1363
 10927 3dc6 C4E2F9F7 		shlx	rdx, rsi, rax	# _1366, pattern, index
 10927      D6
 10928              	# sieve_extend.c:233:      if (copy_word >= range_stop_word) { // shortcut
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10929              		.loc 1 233 9 is_stmt 0 view .LVU3756
 10930 3dcb 4C394C24 		cmp	QWORD PTR 8[rsp], r9	# %sfp, copy_word
 10930      08
 10931 3dd0 0F86B202 		jbe	.L1396	#,
 10931      0000
 238:sieve_extend.c **** 
 10932              		.loc 1 238 5 is_stmt 1 view .LVU3757
 10933              	.LVL678:
 10934              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 10935              		.loc 1 238 27 is_stmt 0 view .LVU3758
 10936 3dd6 4C09F2   		or	rdx, r14	# tmp661, pretmp_1364
 10937 3dd9 488917   		mov	QWORD PTR [rdi], rdx	# *_1363, tmp661
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10938              		.loc 1 242 5 is_stmt 1 view .LVU3759
 10939              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10940              		.loc 1 242 28 is_stmt 0 view .LVU3760
 10941 3ddc 83E03F   		and	eax, 63	# tmp662,
 10942              	.LVL679:
 10943              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10944              		.loc 1 242 55 view .LVU3761
GAS LISTING /tmp/ccdGK7kM.s 			page 298


 10945 3ddf 31D2     		xor	edx, edx	# tmp664
 10946 3de1 49F7F0   		div	r8	# step
 10947              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10948              		.loc 1 243 25 view .LVU3762
 10949 3de4 B8400000 		mov	eax, 64	# tmp672,
 10949      00
 10950              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10951              		.loc 1 242 13 view .LVU3763
 10952 3de9 C4E2E9F7 		shlx	rsi, rsi, rdx	# pattern, pattern, tmp664
 10952      F6
 10953              	.LVL680:
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10954              		.loc 1 243 5 is_stmt 1 view .LVU3764
 10955              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10956              		.loc 1 243 25 is_stmt 0 view .LVU3765
 10957 3dee 31D2     		xor	edx, edx	# tmp671
 10958 3df0 49F7F0   		div	r8	# step
 10959 3df3 4989D6   		mov	r14, rdx	# tmp671, tmp671
 10960              	.LVL681:
 244:sieve_extend.c **** 
 10961              		.loc 1 244 5 is_stmt 1 view .LVU3766
 246:sieve_extend.c ****     #pragma unroll
 10962              		.loc 1 246 5 view .LVU3767
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10963              		.loc 1 249 5 view .LVU3768
 10964              	.LBB549:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10965              		.loc 1 249 10 view .LVU3769
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10966              		.loc 1 249 25 view .LVU3770
 10967 3df6 89D0     		mov	eax, edx	# _1556, tmp671
 10968              	.LBE549:
 10969              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 10970              		.loc 1 244 84 is_stmt 0 view .LVU3771
 10971 3df8 BA200000 		mov	edx, 32	# tmp676,
 10971      00
 10972              	.LVL682:
 244:sieve_extend.c **** 
 10973              		.loc 1 244 84 view .LVU3772
 10974 3dfd 4C29F2   		sub	rdx, r14	# tmp676, tmp671
 10975              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 10976              		.loc 1 244 25 view .LVU3773
 10977 3e00 4801D2   		add	rdx, rdx	# pattern_shift_flipped
 10978              	.LVL683:
 244:sieve_extend.c **** 
 10979              		.loc 1 244 25 view .LVU3774
 10980 3e03 4189D0   		mov	r8d, edx	# _1557, pattern_shift_flipped
 10981              	.LVL684:
 10982              	.LBB550:
 10983              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10984              		.loc 1 249 5 view .LVU3775
GAS LISTING /tmp/ccdGK7kM.s 			page 299


 10985 3e06 4C394C24 		cmp	QWORD PTR 16[rsp], r9	# %sfp, copy_word
 10985      10
 10986 3e0b 0F847801 		je	.L818	#,
 10986      0000
 10987 3e11 4D89D9   		mov	r9, r11	# tmp833, _1461
 10988              	.LVL685:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10989              		.loc 1 249 5 view .LVU3776
 10990 3e14 4929F9   		sub	r9, rdi	# tmp833, ivtmp.537
 10991 3e17 4983E908 		sub	r9, 8	# tmp834,
 10992 3e1b 49C1E903 		shr	r9, 3	# tmp832,
 10993 3e1f 49FFC1   		inc	r9	# tmp835
 10994 3e22 4183E107 		and	r9d, 7	# tmp836,
 10995 3e26 0F84C800 		je	.L819	#,
 10995      0000
 10996 3e2c 4983F901 		cmp	r9, 1	# tmp836,
 10997 3e30 0F84A000 		je	.L1101	#,
 10997      0000
 10998 3e36 4983F902 		cmp	r9, 2	# tmp836,
 10999 3e3a 0F848100 		je	.L1102	#,
 10999      0000
 11000 3e40 4983F903 		cmp	r9, 3	# tmp836,
 11001 3e44 7466     		je	.L1103	#,
 11002 3e46 4983F904 		cmp	r9, 4	# tmp836,
 11003 3e4a 744B     		je	.L1104	#,
 11004 3e4c 4983F905 		cmp	r9, 5	# tmp836,
 11005 3e50 7430     		je	.L1105	#,
 11006 3e52 4983F906 		cmp	r9, 6	# tmp836,
 11007 3e56 7415     		je	.L1106	#,
 11008              	.LVL686:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11009              		.loc 1 250 9 is_stmt 1 view .LVU3777
 11010              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11011              		.loc 1 250 28 is_stmt 0 view .LVU3778
 11012 3e58 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11012      CE
 11013              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11014              		.loc 1 250 57 view .LVU3779
 11015 3e5d C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11015      F6
 11016              	.LVL687:
 11017              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11018              		.loc 1 250 17 view .LVU3780
 11019 3e62 4C09CE   		or	rsi, r9	# pattern, _484
 11020              	.LVL688:
 251:sieve_extend.c ****     } 
 11021              		.loc 1 251 9 is_stmt 1 view .LVU3781
 11022              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11023              		.loc 1 251 31 is_stmt 0 view .LVU3782
 11024 3e65 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11025              		.loc 1 249 41 is_stmt 1 view .LVU3783
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccdGK7kM.s 			page 300


 11026              		.loc 1 249 25 view .LVU3784
 11027 3e69 4883C708 		add	rdi, 8	# ivtmp.537,
 11028              	.LVL689:
 11029              	.L1106:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11030              		.loc 1 250 9 view .LVU3785
 11031              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11032              		.loc 1 250 28 is_stmt 0 view .LVU3786
 11033 3e6d C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11033      CE
 11034              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11035              		.loc 1 250 57 view .LVU3787
 11036 3e72 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11036      F6
 11037              	.LVL690:
 11038              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11039              		.loc 1 250 17 view .LVU3788
 11040 3e77 4C09CE   		or	rsi, r9	# pattern, _484
 11041              	.LVL691:
 251:sieve_extend.c ****     } 
 11042              		.loc 1 251 9 is_stmt 1 view .LVU3789
 11043              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11044              		.loc 1 251 31 is_stmt 0 view .LVU3790
 11045 3e7a 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11046              		.loc 1 249 41 is_stmt 1 view .LVU3791
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11047              		.loc 1 249 25 view .LVU3792
 11048 3e7e 4883C708 		add	rdi, 8	# ivtmp.537,
 11049              	.LVL692:
 11050              	.L1105:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11051              		.loc 1 250 9 view .LVU3793
 11052              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11053              		.loc 1 250 28 is_stmt 0 view .LVU3794
 11054 3e82 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11054      CE
 11055              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11056              		.loc 1 250 57 view .LVU3795
 11057 3e87 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11057      F6
 11058              	.LVL693:
 11059              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11060              		.loc 1 250 17 view .LVU3796
 11061 3e8c 4C09CE   		or	rsi, r9	# pattern, _484
 11062              	.LVL694:
 251:sieve_extend.c ****     } 
 11063              		.loc 1 251 9 is_stmt 1 view .LVU3797
 11064              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
GAS LISTING /tmp/ccdGK7kM.s 			page 301


 11065              		.loc 1 251 31 is_stmt 0 view .LVU3798
 11066 3e8f 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11067              		.loc 1 249 41 is_stmt 1 view .LVU3799
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11068              		.loc 1 249 25 view .LVU3800
 11069 3e93 4883C708 		add	rdi, 8	# ivtmp.537,
 11070              	.LVL695:
 11071              	.L1104:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11072              		.loc 1 250 9 view .LVU3801
 11073              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11074              		.loc 1 250 28 is_stmt 0 view .LVU3802
 11075 3e97 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11075      CE
 11076              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11077              		.loc 1 250 57 view .LVU3803
 11078 3e9c C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11078      F6
 11079              	.LVL696:
 11080              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11081              		.loc 1 250 17 view .LVU3804
 11082 3ea1 4C09CE   		or	rsi, r9	# pattern, _484
 11083              	.LVL697:
 251:sieve_extend.c ****     } 
 11084              		.loc 1 251 9 is_stmt 1 view .LVU3805
 11085              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11086              		.loc 1 251 31 is_stmt 0 view .LVU3806
 11087 3ea4 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11088              		.loc 1 249 41 is_stmt 1 view .LVU3807
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11089              		.loc 1 249 25 view .LVU3808
 11090 3ea8 4883C708 		add	rdi, 8	# ivtmp.537,
 11091              	.LVL698:
 11092              	.L1103:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11093              		.loc 1 250 9 view .LVU3809
 11094              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11095              		.loc 1 250 28 is_stmt 0 view .LVU3810
 11096 3eac C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11096      CE
 11097              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11098              		.loc 1 250 57 view .LVU3811
 11099 3eb1 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11099      F6
 11100              	.LVL699:
 11101              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11102              		.loc 1 250 17 view .LVU3812
 11103 3eb6 4C09CE   		or	rsi, r9	# pattern, _484
GAS LISTING /tmp/ccdGK7kM.s 			page 302


 11104              	.LVL700:
 251:sieve_extend.c ****     } 
 11105              		.loc 1 251 9 is_stmt 1 view .LVU3813
 11106              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11107              		.loc 1 251 31 is_stmt 0 view .LVU3814
 11108 3eb9 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11109              		.loc 1 249 41 is_stmt 1 view .LVU3815
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11110              		.loc 1 249 25 view .LVU3816
 11111 3ebd 4883C708 		add	rdi, 8	# ivtmp.537,
 11112              	.LVL701:
 11113              	.L1102:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11114              		.loc 1 250 9 view .LVU3817
 11115              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11116              		.loc 1 250 28 is_stmt 0 view .LVU3818
 11117 3ec1 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11117      CE
 11118              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11119              		.loc 1 250 57 view .LVU3819
 11120 3ec6 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11120      F6
 11121              	.LVL702:
 11122              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11123              		.loc 1 250 17 view .LVU3820
 11124 3ecb 4C09CE   		or	rsi, r9	# pattern, _484
 11125              	.LVL703:
 251:sieve_extend.c ****     } 
 11126              		.loc 1 251 9 is_stmt 1 view .LVU3821
 11127              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11128              		.loc 1 251 31 is_stmt 0 view .LVU3822
 11129 3ece 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11130              		.loc 1 249 41 is_stmt 1 view .LVU3823
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11131              		.loc 1 249 25 view .LVU3824
 11132 3ed2 4883C708 		add	rdi, 8	# ivtmp.537,
 11133              	.LVL704:
 11134              	.L1101:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11135              		.loc 1 250 9 view .LVU3825
 11136              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11137              		.loc 1 250 28 is_stmt 0 view .LVU3826
 11138 3ed6 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11138      CE
 11139              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11140              		.loc 1 250 57 view .LVU3827
 11141 3edb C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11141      F6
GAS LISTING /tmp/ccdGK7kM.s 			page 303


 11142              	.LVL705:
 11143              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11144              		.loc 1 250 17 view .LVU3828
 11145 3ee0 4C09CE   		or	rsi, r9	# pattern, _484
 11146              	.LVL706:
 251:sieve_extend.c ****     } 
 11147              		.loc 1 251 9 is_stmt 1 view .LVU3829
 11148              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11149              		.loc 1 251 31 is_stmt 0 view .LVU3830
 11150 3ee3 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11151              		.loc 1 249 41 is_stmt 1 view .LVU3831
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11152              		.loc 1 249 25 view .LVU3832
 11153 3ee7 4883C708 		add	rdi, 8	# ivtmp.537,
 11154              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11155              		.loc 1 249 5 is_stmt 0 view .LVU3833
 11156 3eeb 4939FB   		cmp	r11, rdi	# _1461, ivtmp.537
 11157 3eee 0F849500 		je	.L818	#,
 11157      0000
 11158              	.LVL707:
 11159              	.L819:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11160              		.loc 1 250 9 is_stmt 1 view .LVU3834
 11161              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11162              		.loc 1 250 28 is_stmt 0 view .LVU3835
 11163 3ef4 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11163      CE
 11164              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11165              		.loc 1 250 57 view .LVU3836
 11166 3ef9 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11166      F6
 11167              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11168              		.loc 1 250 17 view .LVU3837
 11169 3efe 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 11170              		.loc 1 251 9 is_stmt 1 view .LVU3838
 11171              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11172              		.loc 1 251 31 is_stmt 0 view .LVU3839
 11173 3f01 4C094F08 		or	QWORD PTR 8[rdi], r9	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11174              		.loc 1 249 41 is_stmt 1 view .LVU3840
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11175              		.loc 1 249 25 view .LVU3841
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11176              		.loc 1 250 9 view .LVU3842
 11177              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11178              		.loc 1 250 28 is_stmt 0 view .LVU3843
 11179 3f05 C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1556
GAS LISTING /tmp/ccdGK7kM.s 			page 304


 11179      F1
 11180              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11181              		.loc 1 250 57 view .LVU3844
 11182 3f0a C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1557
 11182      C9
 11183              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11184              		.loc 1 250 17 view .LVU3845
 11185 3f0f 4C09CE   		or	rsi, r9	# pattern, _486
 251:sieve_extend.c ****     } 
 11186              		.loc 1 251 9 is_stmt 1 view .LVU3846
 11187              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11188              		.loc 1 251 31 is_stmt 0 view .LVU3847
 11189 3f12 48097710 		or	QWORD PTR 16[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11190              		.loc 1 249 41 is_stmt 1 view .LVU3848
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11191              		.loc 1 249 25 view .LVU3849
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11192              		.loc 1 250 9 view .LVU3850
 11193              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11194              		.loc 1 250 28 is_stmt 0 view .LVU3851
 11195 3f16 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11195      CE
 11196              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11197              		.loc 1 250 57 view .LVU3852
 11198 3f1b C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11198      F6
 11199              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11200              		.loc 1 250 17 view .LVU3853
 11201 3f20 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 11202              		.loc 1 251 9 is_stmt 1 view .LVU3854
 11203              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11204              		.loc 1 251 31 is_stmt 0 view .LVU3855
 11205 3f23 4C094F18 		or	QWORD PTR 24[rdi], r9	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11206              		.loc 1 249 41 is_stmt 1 view .LVU3856
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11207              		.loc 1 249 25 view .LVU3857
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11208              		.loc 1 250 9 view .LVU3858
 11209              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11210              		.loc 1 250 28 is_stmt 0 view .LVU3859
 11211 3f27 C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1556
 11211      F1
 11212              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11213              		.loc 1 250 57 view .LVU3860
 11214 3f2c C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1557
GAS LISTING /tmp/ccdGK7kM.s 			page 305


 11214      C9
 11215              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11216              		.loc 1 250 17 view .LVU3861
 11217 3f31 4C09CE   		or	rsi, r9	# pattern, _486
 251:sieve_extend.c ****     } 
 11218              		.loc 1 251 9 is_stmt 1 view .LVU3862
 11219              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11220              		.loc 1 251 31 is_stmt 0 view .LVU3863
 11221 3f34 48097720 		or	QWORD PTR 32[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11222              		.loc 1 249 41 is_stmt 1 view .LVU3864
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11223              		.loc 1 249 25 view .LVU3865
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11224              		.loc 1 250 9 view .LVU3866
 11225              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11226              		.loc 1 250 28 is_stmt 0 view .LVU3867
 11227 3f38 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11227      CE
 11228              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11229              		.loc 1 250 57 view .LVU3868
 11230 3f3d C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11230      F6
 11231              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11232              		.loc 1 250 17 view .LVU3869
 11233 3f42 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 11234              		.loc 1 251 9 is_stmt 1 view .LVU3870
 11235              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11236              		.loc 1 251 31 is_stmt 0 view .LVU3871
 11237 3f45 4C094F28 		or	QWORD PTR 40[rdi], r9	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11238              		.loc 1 249 41 is_stmt 1 view .LVU3872
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11239              		.loc 1 249 25 view .LVU3873
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11240              		.loc 1 250 9 view .LVU3874
 11241              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11242              		.loc 1 250 28 is_stmt 0 view .LVU3875
 11243 3f49 C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1556
 11243      F1
 11244              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11245              		.loc 1 250 57 view .LVU3876
 11246 3f4e C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1557
 11246      C9
 11247              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11248              		.loc 1 250 17 view .LVU3877
 11249 3f53 4C09CE   		or	rsi, r9	# pattern, _486
GAS LISTING /tmp/ccdGK7kM.s 			page 306


 251:sieve_extend.c ****     } 
 11250              		.loc 1 251 9 is_stmt 1 view .LVU3878
 11251              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11252              		.loc 1 251 31 is_stmt 0 view .LVU3879
 11253 3f56 48097730 		or	QWORD PTR 48[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11254              		.loc 1 249 41 is_stmt 1 view .LVU3880
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11255              		.loc 1 249 25 view .LVU3881
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11256              		.loc 1 250 9 view .LVU3882
 11257              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11258              		.loc 1 250 28 is_stmt 0 view .LVU3883
 11259 3f5a C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1556
 11259      CE
 11260              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11261              		.loc 1 250 57 view .LVU3884
 11262 3f5f C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1557
 11262      F6
 11263              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11264              		.loc 1 250 17 view .LVU3885
 11265 3f64 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 11266              		.loc 1 251 9 is_stmt 1 view .LVU3886
 11267              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 11268              		.loc 1 251 31 is_stmt 0 view .LVU3887
 11269 3f67 4C094F38 		or	QWORD PTR 56[rdi], r9	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11270              		.loc 1 249 41 is_stmt 1 view .LVU3888
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11271              		.loc 1 249 25 view .LVU3889
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11272              		.loc 1 250 9 view .LVU3890
 11273              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11274              		.loc 1 250 28 is_stmt 0 view .LVU3891
 11275 3f6b C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1556
 11275      F1
 11276              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11277              		.loc 1 250 57 view .LVU3892
 11278 3f70 C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1557
 11278      C9
 11279              	.LVL708:
 11280              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 11281              		.loc 1 250 17 view .LVU3893
 11282 3f75 4C09CE   		or	rsi, r9	# pattern, _486
 11283              	.LVL709:
 251:sieve_extend.c ****     } 
 11284              		.loc 1 251 9 is_stmt 1 view .LVU3894
 11285              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
GAS LISTING /tmp/ccdGK7kM.s 			page 307


 251:sieve_extend.c ****     } 
 11286              		.loc 1 251 31 is_stmt 0 view .LVU3895
 11287 3f78 48097740 		or	QWORD PTR 64[rdi], rsi	# MEM[base: _1466, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11288              		.loc 1 249 41 is_stmt 1 view .LVU3896
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11289              		.loc 1 249 25 view .LVU3897
 11290 3f7c 4883C740 		add	rdi, 64	# ivtmp.537,
 11291              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11292              		.loc 1 249 5 is_stmt 0 view .LVU3898
 11293 3f80 4939FB   		cmp	r11, rdi	# _1461, ivtmp.537
 11294 3f83 0F856BFF 		jne	.L819	#,
 11294      FFFF
 11295              	.LVL710:
 11296              	.L818:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11297              		.loc 1 249 5 view .LVU3899
 11298              	.LBE550:
 253:sieve_extend.c **** }
 11299              		.loc 1 253 5 is_stmt 1 view .LVU3900
 11300              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11301              		.loc 1 253 44 is_stmt 0 view .LVU3901
 11302 3f89 C4E28BF7 		shrx	rdi, rsi, r14	# tmp681, pattern, tmp671
 11302      FE
 11303              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11304              		.loc 1 253 73 view .LVU3902
 11305 3f8e C462E9F7 		shlx	r14, rsi, rdx	# tmp682, pattern, pattern_shift_flipped
 11305      F6
 11306              	.LVL711:
 11307              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11308              		.loc 1 253 62 view .LVU3903
 11309 3f93 4909FE   		or	r14, rdi	# tmp683, tmp681
 11310              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11311              		.loc 1 253 100 view .LVU3904
 11312 3f96 4D21EE   		and	r14, r13	# tmp684, _507
 11313              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11314              		.loc 1 253 31 view .LVU3905
 11315 3f99 4C0933   		or	QWORD PTR [rbx], r14	# *_496, tmp684
 11316              	.LVL712:
 11317              	.L817:
 253:sieve_extend.c **** }
 11318              		.loc 1 253 31 view .LVU3906
 11319              	.LBE552:
 11320              	.LBE555:
 794:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11321              		.loc 1 794 9 is_stmt 1 view .LVU3907
 11322              	.LBB556:
 11323              	.LBI556:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11324              		.loc 1 110 25 view .LVU3908
 11325              	.LBB557:
GAS LISTING /tmp/ccdGK7kM.s 			page 308


 111:sieve_extend.c ****     return index;
 11326              		.loc 1 111 5 view .LVU3909
 111:sieve_extend.c ****     return index;
 11327              		.loc 1 111 11 view .LVU3910
 11328              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11329              		.loc 1 111 21 is_stmt 0 view .LVU3911
 11330 3f9c 4889C8   		mov	rax, rcx	# tmp685, index
 11331 3f9f 48C1E806 		shr	rax, 6	# tmp685,
 11332              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11333              		.loc 1 111 12 view .LVU3912
 11334 3fa3 498B14C7 		mov	rdx, QWORD PTR [r15+rax*8]	# *_337,* _30
 11335              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11336              		.loc 1 111 11 view .LVU3913
 11337 3fa7 480FA3CA 		bt	rdx, rcx	# *_337, index
 11338 3fab 0F83A700 		jnc	.L820	#,
 11338      0000
 111:sieve_extend.c ****     return index;
 11339              		.loc 1 111 58 is_stmt 1 view .LVU3914
 11340              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11341              		.loc 1 111 63 is_stmt 0 view .LVU3915
 11342 3fb1 4C8D4101 		lea	r8, 1[rcx]	# tmp831,
 11343              	.LVL713:
 11344              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11345              		.loc 1 111 21 view .LVU3916
 11346 3fb5 4C89C6   		mov	rsi, r8	# tmp690, index
 11347 3fb8 48C1EE06 		shr	rsi, 6	# tmp690,
 11348              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11349              		.loc 1 111 12 view .LVU3917
 11350 3fbc 4D8B0CF7 		mov	r9, QWORD PTR [r15+rsi*8]	# *_320, *_320
 11351              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11352              		.loc 1 111 63 view .LVU3918
 11353 3fc0 4C89C1   		mov	rcx, r8	# index, tmp831
 111:sieve_extend.c ****     return index;
 11354              		.loc 1 111 11 is_stmt 1 view .LVU3919
 11355 3fc3 4D0FA3C1 		bt	r9, r8	# *_320, index
 11356 3fc7 0F838B00 		jnc	.L820	#,
 11356      0000
 111:sieve_extend.c ****     return index;
 11357              		.loc 1 111 58 view .LVU3920
 11358              	.LVL714:
 11359              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11360              		.loc 1 111 63 is_stmt 0 view .LVU3921
 11361 3fcd 48FFC1   		inc	rcx	# index
 11362              	.LVL715:
 111:sieve_extend.c ****     return index;
 11363              		.loc 1 111 11 is_stmt 1 view .LVU3922
 11364              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11365              		.loc 1 111 21 is_stmt 0 view .LVU3923
GAS LISTING /tmp/ccdGK7kM.s 			page 309


 11366 3fd0 4889CF   		mov	rdi, rcx	# tmp1017, index
 11367 3fd3 48C1EF06 		shr	rdi, 6	# tmp1017,
 11368              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11369              		.loc 1 111 12 view .LVU3924
 11370 3fd7 4D8B34FF 		mov	r14, QWORD PTR [r15+rdi*8]	# *_320, *_320
 11371              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11372              		.loc 1 111 11 view .LVU3925
 11373 3fdb 490FA3CE 		bt	r14, rcx	# *_320, index
 11374 3fdf 7377     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11375              		.loc 1 111 58 is_stmt 1 view .LVU3926
 11376              	.LVL716:
 11377              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11378              		.loc 1 111 63 is_stmt 0 view .LVU3927
 11379 3fe1 498D4802 		lea	rcx, 2[r8]	# index,
 11380              	.LVL717:
 111:sieve_extend.c ****     return index;
 11381              		.loc 1 111 11 is_stmt 1 view .LVU3928
 11382              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11383              		.loc 1 111 21 is_stmt 0 view .LVU3929
 11384 3fe5 4889C8   		mov	rax, rcx	# tmp1021, index
 11385 3fe8 48C1E806 		shr	rax, 6	# tmp1021,
 11386              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11387              		.loc 1 111 12 view .LVU3930
 11388 3fec 498B14C7 		mov	rdx, QWORD PTR [r15+rax*8]	# *_320, *_320
 11389              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11390              		.loc 1 111 11 view .LVU3931
 11391 3ff0 480FA3CA 		bt	rdx, rcx	# *_320, index
 11392 3ff4 7362     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11393              		.loc 1 111 58 is_stmt 1 view .LVU3932
 11394              	.LVL718:
 11395              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11396              		.loc 1 111 63 is_stmt 0 view .LVU3933
 11397 3ff6 498D4803 		lea	rcx, 3[r8]	# index,
 11398              	.LVL719:
 111:sieve_extend.c ****     return index;
 11399              		.loc 1 111 11 is_stmt 1 view .LVU3934
 11400              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11401              		.loc 1 111 21 is_stmt 0 view .LVU3935
 11402 3ffa 4889CE   		mov	rsi, rcx	# tmp1025, index
 11403 3ffd 48C1EE06 		shr	rsi, 6	# tmp1025,
 11404              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11405              		.loc 1 111 12 view .LVU3936
 11406 4001 4D8B0CF7 		mov	r9, QWORD PTR [r15+rsi*8]	# *_320, *_320
 11407              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11408              		.loc 1 111 11 view .LVU3937
GAS LISTING /tmp/ccdGK7kM.s 			page 310


 11409 4005 490FA3C9 		bt	r9, rcx	# *_320, index
 11410 4009 734D     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11411              		.loc 1 111 58 is_stmt 1 view .LVU3938
 11412              	.LVL720:
 11413              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11414              		.loc 1 111 63 is_stmt 0 view .LVU3939
 11415 400b 498D4804 		lea	rcx, 4[r8]	# index,
 11416              	.LVL721:
 111:sieve_extend.c ****     return index;
 11417              		.loc 1 111 11 is_stmt 1 view .LVU3940
 11418              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11419              		.loc 1 111 21 is_stmt 0 view .LVU3941
 11420 400f 4889CF   		mov	rdi, rcx	# tmp1029, index
 11421 4012 48C1EF06 		shr	rdi, 6	# tmp1029,
 11422              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11423              		.loc 1 111 12 view .LVU3942
 11424 4016 4D8B34FF 		mov	r14, QWORD PTR [r15+rdi*8]	# *_320, *_320
 11425              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11426              		.loc 1 111 11 view .LVU3943
 11427 401a 490FA3CE 		bt	r14, rcx	# *_320, index
 11428 401e 7338     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11429              		.loc 1 111 58 is_stmt 1 view .LVU3944
 11430              	.LVL722:
 11431              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11432              		.loc 1 111 63 is_stmt 0 view .LVU3945
 11433 4020 498D4805 		lea	rcx, 5[r8]	# index,
 11434              	.LVL723:
 111:sieve_extend.c ****     return index;
 11435              		.loc 1 111 11 is_stmt 1 view .LVU3946
 11436              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11437              		.loc 1 111 21 is_stmt 0 view .LVU3947
 11438 4024 4889C8   		mov	rax, rcx	# tmp1033, index
 11439 4027 48C1E806 		shr	rax, 6	# tmp1033,
 11440              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11441              		.loc 1 111 12 view .LVU3948
 11442 402b 498B14C7 		mov	rdx, QWORD PTR [r15+rax*8]	# *_320, *_320
 11443              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11444              		.loc 1 111 11 view .LVU3949
 11445 402f 480FA3CA 		bt	rdx, rcx	# *_320, index
 11446 4033 7323     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11447              		.loc 1 111 58 is_stmt 1 view .LVU3950
 11448              	.LVL724:
 11449              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11450              		.loc 1 111 63 is_stmt 0 view .LVU3951
 11451 4035 498D4806 		lea	rcx, 6[r8]	# index,
GAS LISTING /tmp/ccdGK7kM.s 			page 311


 11452              	.LVL725:
 111:sieve_extend.c ****     return index;
 11453              		.loc 1 111 11 is_stmt 1 view .LVU3952
 11454              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11455              		.loc 1 111 21 is_stmt 0 view .LVU3953
 11456 4039 4889CE   		mov	rsi, rcx	# tmp1037, index
 11457 403c 48C1EE06 		shr	rsi, 6	# tmp1037,
 11458              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11459              		.loc 1 111 12 view .LVU3954
 11460 4040 4D8B0CF7 		mov	r9, QWORD PTR [r15+rsi*8]	# *_320, *_320
 11461              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11462              		.loc 1 111 11 view .LVU3955
 11463 4044 490FA3C9 		bt	r9, rcx	# *_320, index
 11464 4048 730E     		jnc	.L820	#,
 111:sieve_extend.c ****     return index;
 11465              		.loc 1 111 58 is_stmt 1 view .LVU3956
 11466              	.LVL726:
 11467              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11468              		.loc 1 111 63 is_stmt 0 view .LVU3957
 11469 404a 498D4807 		lea	rcx, 7[r8]	# index,
 11470              	.LVL727:
 111:sieve_extend.c ****     return index;
 11471              		.loc 1 111 11 is_stmt 1 view .LVU3958
 11472 404e E949FFFF 		jmp	.L817	#
 11472      FF
 11473              		.p2align 4,,10
 11474 4053 0F1F4400 		.p2align 3
 11474      00
 11475              	.L820:
 112:sieve_extend.c **** }
 11476              		.loc 1 112 5 view .LVU3959
 11477              	.LVL728:
 112:sieve_extend.c **** }
 11478              		.loc 1 112 5 is_stmt 0 view .LVU3960
 11479              	.LBE557:
 11480              	.LBE556:
 795:sieve_extend.c ****     }
 11481              		.loc 1 795 9 is_stmt 1 view .LVU3961
 11482              	# sieve_extend.c:795:         start = prime * prime * 2 + prime * 2;
 795:sieve_extend.c ****     }
 11483              		.loc 1 795 35 is_stmt 0 view .LVU3962
 11484 4058 4C8D4901 		lea	r9, 1[rcx]	# _413,
 11485 405c 4C8D0409 		lea	r8, [rcx+rcx]	# _953,
 11486              	.LVL729:
 11487              	# sieve_extend.c:795:         start = prime * prime * 2 + prime * 2;
 795:sieve_extend.c ****     }
 11488              		.loc 1 795 15 view .LVU3963
 11489 4060 4C89C8   		mov	rax, r9	# index, _413
 11490 4063 490FAFC0 		imul	rax, r8	# index, _953
 11491              	.LVL730:
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 11492              		.loc 1 789 11 is_stmt 1 view .LVU3964
 11493 4067 4939C2   		cmp	r10, rax	# block_stop, index
GAS LISTING /tmp/ccdGK7kM.s 			page 312


 11494 406a 0F829100 		jb	.L1380	#,
 11494      0000
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 11495              		.loc 1 790 9 view .LVU3965
 11496              	# sieve_extend.c:790:         step  = prime * 2 + 1;
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 11497              		.loc 1 790 15 is_stmt 0 view .LVU3966
 11498 4070 49FFC0   		inc	r8	# step
 11499              	.LVL731:
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11500              		.loc 1 791 9 is_stmt 1 view .LVU3967
 11501              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11502              		.loc 1 791 12 is_stmt 0 view .LVU3968
 11503 4073 4983F810 		cmp	r8, 16	# step,
 11504 4077 0F87DB00 		ja	.L812	#,
 11504      0000
 11505 407d 4889CF   		mov	rdi, rcx	# prime, index
 11506 4080 E95BFCFF 		jmp	.L813	#
 11506      FF
 11507              	.LVL732:
 11508              		.p2align 4,,10
 11509 4085 0F1F00   		.p2align 3
 11510              	.L1396:
 11511              	.LBB558:
 11512              	.LBB553:
 234:sieve_extend.c ****        return;
 11513              		.loc 1 234 8 is_stmt 1 view .LVU3969
 11514              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 11515              		.loc 1 234 67 is_stmt 0 view .LVU3970
 11516 4088 4C21EA   		and	rdx, r13	# tmp659, _507
 11517              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 11518              		.loc 1 234 28 view .LVU3971
 11519 408b 4909D6   		or	r14, rdx	# tmp660, tmp659
 11520 408e 4C8937   		mov	QWORD PTR [rdi], r14	# *_1363, tmp660
 235:sieve_extend.c ****     }
 11521              		.loc 1 235 8 is_stmt 1 view .LVU3972
 11522 4091 E906FFFF 		jmp	.L817	#
 11522      FF
 11523              	.LVL733:
 11524 4096 662E0F1F 		.p2align 4,,10
 11524      84000000 
 11524      0000
 11525              		.p2align 3
 11526              	.L857:
 235:sieve_extend.c ****     }
 11527              		.loc 1 235 8 is_stmt 0 view .LVU3973
 11528              	.LBE553:
 11529              	.LBE558:
 11530              	.LBB559:
 11531              	.LBB560:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11532              		.loc 1 306 41 is_stmt 1 view .LVU3974
 11533              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccdGK7kM.s 			page 313


 11534              		.loc 1 306 5 is_stmt 0 view .LVU3975
 11535 40a0 4939C2   		cmp	r10, rax	# block_stop, index
 11536 40a3 0F836808 		jnb	.L861	#,
 11536      0000
 11537              	.LVL734:
 11538 40a9 0F1F8000 		.p2align 4,,10
 11538      000000
 11539              		.p2align 3
 11540              	.L862:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11541              		.loc 1 306 5 view .LVU3976
 11542              	.LBE560:
 11543              	.LBE559:
 848:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11544              		.loc 1 848 9 is_stmt 1 view .LVU3977
 11545              	.LBB562:
 11546              	.LBI562:
 116:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 11547              		.loc 1 116 25 view .LVU3978
 11548              	.LBB563:
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11549              		.loc 1 119 4 view .LVU3979
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11550              		.loc 1 120 4 view .LVU3980
 11551              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11552              		.loc 1 119 23 is_stmt 0 view .LVU3981
 11553 40b0 4C89CF   		mov	rdi, r9	# index_word, _413
 11554 40b3 48C1EF06 		shr	rdi, 6	# index_word,
 11555              	.LVL735:
 11556              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 11557              		.loc 1 121 89 view .LVU3982
 11558 40b7 498B2CFF 		mov	rbp, QWORD PTR [r15+rdi*8]	# *_674, *_674
 11559              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11560              		.loc 1 120 15 view .LVU3983
 11561 40bb 4C89C8   		mov	rax, r9	# index_bit, _413
 11562 40be 83E03F   		and	eax, 63	# index_bit,
 11563              	.LVL736:
 121:sieve_extend.c ****    index += distance;
 11564              		.loc 1 121 4 is_stmt 1 view .LVU3984
 11565              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 11566              		.loc 1 121 25 is_stmt 0 view .LVU3985
 11567 40c1 4531C0   		xor	r8d, r8d	# distance
 11568              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 11569              		.loc 1 121 89 view .LVU3986
 11570 40c4 C462FBF7 		shrx	r13, rbp, rax	# tmp779, *_674, index_bit
 11570      ED
 11571              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 11572              		.loc 1 121 66 view .LVU3987
 11573 40c9 49F7D5   		not	r13	# tmp781
 11574              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
GAS LISTING /tmp/ccdGK7kM.s 			page 314


 11575              		.loc 1 121 25 view .LVU3988
 11576 40cc F34D0FBC 		tzcnt	r8, r13	# distance, tmp781
 11576      C5
 11577              	.LVL737:
 122:sieve_extend.c ****    distance += index_bit;
 11578              		.loc 1 122 4 is_stmt 1 view .LVU3989
 11579              	# sieve_extend.c:122:    index += distance;
 122:sieve_extend.c ****    distance += index_bit;
 11580              		.loc 1 122 10 is_stmt 0 view .LVU3990
 11581 40d1 4B8D0C01 		lea	rcx, [r9+r8]	# index,
 11582              	.LVL738:
 123:sieve_extend.c **** 
 11583              		.loc 1 123 4 is_stmt 1 view .LVU3991
 125:sieve_extend.c ****        index_word++;
 11584              		.loc 1 125 4 view .LVU3992
 125:sieve_extend.c ****        index_word++;
 11585              		.loc 1 125 10 view .LVU3993
 11586              	# sieve_extend.c:123:    distance += index_bit;
 123:sieve_extend.c **** 
 11587              		.loc 1 123 13 is_stmt 0 view .LVU3994
 11588 40d5 4901C0   		add	r8, rax	# distance, index_bit
 11589              	.LVL739:
 11590              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 11591              		.loc 1 121 76 view .LVU3995
 11592 40d8 488D34FD 		lea	rsi, 0[0+rdi*8]	# _673,
 11592      00000000 
 11593              	.LVL740:
 11594              	# sieve_extend.c:125:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 125:sieve_extend.c ****        index_word++;
 11595              		.loc 1 125 10 view .LVU3996
 11596 40e0 4983F840 		cmp	r8, 64	# distance,
 11597 40e4 0F841609 		je	.L1397	#,
 11597      0000
 131:sieve_extend.c **** }
 11598              		.loc 1 131 4 is_stmt 1 view .LVU3997
 11599              	.LVL741:
 131:sieve_extend.c **** }
 11600              		.loc 1 131 4 is_stmt 0 view .LVU3998
 11601              	.LBE563:
 11602              	.LBE562:
 849:sieve_extend.c ****     }
 11603              		.loc 1 849 9 is_stmt 1 view .LVU3999
 11604              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 11605              		.loc 1 849 35 is_stmt 0 view .LVU4000
 11606 40ea 4C8D4901 		lea	r9, 1[rcx]	# _413,
 11607              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 11608              		.loc 1 849 15 view .LVU4001
 11609 40ee 4C89C8   		mov	rax, r9	# tmp796, _413
 11610 40f1 480FAFC1 		imul	rax, rcx	# tmp796, index
 11611 40f5 4801C0   		add	rax, rax	# index
 11612              	.LVL742:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 11613              		.loc 1 843 11 is_stmt 1 view .LVU4002
 11614 40f8 4939C2   		cmp	r10, rax	# block_stop, index
GAS LISTING /tmp/ccdGK7kM.s 			page 315


 11615 40fb 0F83E707 		jnb	.L848	#,
 11615      0000
 11616              	.L1380:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 11617              		.loc 1 843 11 is_stmt 0 view .LVU4003
 11618 4101 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# <retval>, %sfp
 11618      30
 11619 4106 498B5308 		mov	rdx, QWORD PTR 8[r11]	# _8, sieve_90->bits
 11620              	.LVL743:
 11621              	.L823:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 11622              		.loc 1 843 11 view .LVU4004
 11623              	.LBE602:
 11624              	.LBE610:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11625              		.loc 1 914 91 is_stmt 1 view .LVU4005
 11626              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11627              		.loc 1 914 103 is_stmt 0 view .LVU4006
 11628 410a 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	# blocksize, %sfp
 11628      40
 11629 410f 48010C24 		add	QWORD PTR [rsp], rcx	# %sfp, blocksize
 11630              	.LVL744:
 11631              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11632              		.loc 1 914 128 view .LVU4007
 11633 4113 4901CA   		add	r10, rcx	# block_stop, blocksize
 11634              	.LVL745:
 11635              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11636              		.loc 1 914 103 view .LVU4008
 11637 4116 488B0424 		mov	rax, QWORD PTR [rsp]	# block_start, %sfp
 11638              	.LVL746:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11639              		.loc 1 914 63 is_stmt 1 view .LVU4009
 11640              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11641              		.loc 1 914 5 is_stmt 0 view .LVU4010
 11642 411a 4839C2   		cmp	rdx, rax	# _8, block_start
 11643 411d 0F83F5F8 		jnb	.L810	#,
 11643      FFFF
 11644              	.LBE614:
 11645              	# sieve_extend.c:921: }
 921:sieve_extend.c **** 
 11646              		.loc 1 921 1 view .LVU4011
 11647 4123 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 11647      30
 11648              	.LVL747:
 921:sieve_extend.c **** 
 11649              		.loc 1 921 1 view .LVU4012
 11650 4128 4883C458 		add	rsp, 88	#,
 11651              		.cfi_remember_state
 11652              		.cfi_def_cfa_offset 56
 11653              	.LVL748:
 921:sieve_extend.c **** 
 11654              		.loc 1 921 1 view .LVU4013
 11655 412c 5B       		pop	rbx	#
GAS LISTING /tmp/ccdGK7kM.s 			page 316


 11656              		.cfi_def_cfa_offset 48
 11657 412d 5D       		pop	rbp	#
 11658              		.cfi_def_cfa_offset 40
 11659 412e 415C     		pop	r12	#
 11660              		.cfi_def_cfa_offset 32
 11661 4130 415D     		pop	r13	#
 11662              		.cfi_def_cfa_offset 24
 11663 4132 415E     		pop	r14	#
 11664              		.cfi_def_cfa_offset 16
 11665 4134 415F     		pop	r15	#
 11666              		.cfi_def_cfa_offset 8
 11667 4136 C3       		ret	
 11668              	.LVL749:
 11669 4137 660F1F84 		.p2align 4,,10
 11669      00000000 
 11669      00
 11670              		.p2align 3
 11671              	.L868:
 11672              		.cfi_restore_state
 921:sieve_extend.c **** 
 11673              		.loc 1 921 1 view .LVU4014
 11674 4140 4489D2   		mov	edx, r10d	# tmp810, block_stop
 11675 4143 F7D2     		not	edx	# tmp810
 11676              	.LBB615:
 11677              	.LBB611:
 11678              	.LBB603:
 11679              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11680              		.loc 1 791 12 view .LVU4015
 11681 4145 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# prime, %sfp
 11681      20
 11682 414a 89542428 		mov	DWORD PTR 40[rsp], edx	# %sfp, tmp810
 11683 414e 4C89F1   		mov	rcx, r14	# index, prime
 11684 4151 4D8D4E01 		lea	r9, 1[r14]	# _413,
 11685              		.p2align 4,,10
 11686 4155 0F1F00   		.p2align 3
 11687              	.L812:
 11688              	.LVL750:
 798:sieve_extend.c ****         step  = prime * 2 + 1;
 11689              		.loc 1 798 11 is_stmt 1 view .LVU4016
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 11690              		.loc 1 799 9 view .LVU4017
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11691              		.loc 1 800 9 view .LVU4018
 11692              	# sieve_extend.c:800:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11693              		.loc 1 800 12 is_stmt 0 view .LVU4019
 11694 4158 4983F840 		cmp	r8, 64	# step,
 11695 415c 0F87E303 		ja	.L824	#,
 11695      0000
 11696              	.LBB565:
 11697              	.LBB566:
 11698              	.LBB567:
 11699              	.LBB568:
 11700              	.LBB569:
 11701              	.LBB570:
 11702              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccdGK7kM.s 			page 317


 189:sieve_extend.c ****    }
 11703              		.loc 1 189 29 view .LVU4020
 11704 4162 440FB65C 		movzx	r11d, BYTE PTR 40[rsp]	# tmp1665, %sfp
 11704      2428
 11705              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11706              		.loc 1 163 20 view .LVU4021
 11707 4168 4C89D6   		mov	rsi, r10	# range_stop_word, block_stop
 11708 416b 48C1EE06 		shr	rsi, 6	# range_stop_word,
 11709              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11710              		.loc 1 189 29 view .LVU4022
 11711 416f 48C7C5FF 		mov	rbp, -1	# tmp1664,
 11711      FFFFFF
 11712 4176 C462A3F7 		shrx	r13, rbp, r11	# _584, tmp1664, tmp1665
 11712      ED
 11713              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11714              		.loc 1 163 20 view .LVU4023
 11715 417b 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, range_stop_word
 11715      10
 11716              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11717              		.loc 1 189 29 view .LVU4024
 11718 4180 4C896C24 		mov	QWORD PTR 8[rsp], r13	# %sfp, _584
 11718      08
 11719              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11720              		.loc 1 182 41 view .LVU4025
 11721 4185 498D1CF7 		lea	rbx, [r15+rsi*8]	# range_stop_ptr,
 11722              	.LVL751:
 11723 4189 0F1F8000 		.p2align 4,,10
 11723      000000
 11724              		.p2align 3
 11725              	.L864:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11726              		.loc 1 182 41 view .LVU4026
 11727              	.LBE570:
 11728              	.LBE569:
 11729              	.LBE568:
 11730              	.LBE567:
 11731              	.LBE566:
 11732              	.LBE565:
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11733              		.loc 1 801 9 is_stmt 1 view .LVU4027
 11734              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11735              		.loc 1 801 12 is_stmt 0 view .LVU4028
 11736 4190 488B3C24 		mov	rdi, QWORD PTR [rsp]	# block_start, %sfp
 11737 4194 4939F9   		cmp	r9, rdi	# _413, block_start
 11738 4197 7712     		ja	.L825	#,
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11739              		.loc 1 801 47 is_stmt 1 view .LVU4029
 11740              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11741              		.loc 1 801 67 is_stmt 0 view .LVU4030
 11742 4199 488D040F 		lea	rax, [rdi+rcx]	# _340,
GAS LISTING /tmp/ccdGK7kM.s 			page 318


 11743              	.LVL752:
 11744              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11745              		.loc 1 801 108 view .LVU4031
 11746 419d 31D2     		xor	edx, edx	# tmp698
 11747              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11748              		.loc 1 801 75 view .LVU4032
 11749 419f 4801C1   		add	rcx, rax	# tmp696, _340
 11750              	.LVL753:
 11751              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11752              		.loc 1 801 108 view .LVU4033
 11753 41a2 49F7F0   		div	r8	# step
 11754              	.LVL754:
 11755              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11756              		.loc 1 801 53 view .LVU4034
 11757 41a5 4889C8   		mov	rax, rcx	# tmp696, tmp696
 11758 41a8 4829D0   		sub	rax, rdx	# tmp696, tmp698
 11759              	.LVL755:
 11760              	.L825:
 802:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 11761              		.loc 1 802 9 is_stmt 1 view .LVU4035
 11762              	.LBB587:
 11763              	.LBI565:
 260:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11764              		.loc 1 260 14 view .LVU4036
 11765              	.LBB585:
 261:sieve_extend.c **** 
 11766              		.loc 1 261 5 view .LVU4037
 11767              	# sieve_extend.c:261:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 261:sieve_extend.c **** 
 11768              		.loc 1 261 74 is_stmt 0 view .LVU4038
 11769 41ab 4D89C5   		mov	r13, r8	# tmp700, step
 11770 41ae 49C1E506 		sal	r13, 6	# tmp700,
 11771 41b2 31C9     		xor	ecx, ecx	# _143
 11772 41b4 4901C5   		add	r13, rax	# tmp701, index
 11773 41b7 0F92C1   		setc	cl	#, _143
 11774              	.LVL756:
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11775              		.loc 1 263 5 is_stmt 1 view .LVU4039
 11776              	# sieve_extend.c:263:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11777              		.loc 1 263 8 is_stmt 0 view .LVU4040
 11778 41ba 4D39EA   		cmp	r10, r13	# block_stop, tmp701
 11779 41bd 0F821D06 		jb	.L828	#,
 11779      0000
 11780              	.LVL757:
 11781              	.LBB579:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11782              		.loc 1 284 54 is_stmt 1 view .LVU4041
 11783              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11784              		.loc 1 284 9 is_stmt 0 view .LVU4042
 11785 41c3 4885C9   		test	rcx, rcx	# _143
 11786 41c6 0F858602 		jne	.L832	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 319


 11786      0000
 11787              	.LBB577:
 11788              	.LBB574:
 11789              	.LBB571:
 11790              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 11791              		.loc 1 165 133 view .LVU4043
 11792 41cc 4C8B7424 		mov	r14, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 11792      10
 11793              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 11794              		.loc 1 165 110 view .LVU4044
 11795 41d1 4F8D1C80 		lea	r11, [r8+r8*4]	# tmp714,
 11796              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 11797              		.loc 1 165 133 view .LVU4045
 11798 41d5 4C89F5   		mov	rbp, r14	# tmp716, range_stop_word
 11799 41d8 4C29DD   		sub	rbp, r11	# tmp716, tmp714
 11800 41db 498D2CEF 		lea	rbp, [r15+rbp*8]	# tmp718,
 11801 41df 4D39DE   		cmp	r14, r11	# range_stop_word, tmp714
 11802 41e2 4D89C6   		mov	r14, r8	# _1484, step
 11803 41e5 490F46EF 		cmovbe	rbp, r15	# _30,, fast_loop_ptr
 11804              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 11805              		.loc 1 171 17 view .LVU4046
 11806 41e9 4A8D34C5 		lea	rsi, 0[0+r8*8]	# _552,
 11806      00000000 
 11807 41f1 49C1E303 		sal	r11, 3	# tmp722,
 11808 41f5 49C1E604 		sal	r14, 4	# _1484,
 11809              	.LVL758:
 11810 41f9 0F1F8000 		.p2align 4,,10
 11810      000000
 11811              		.p2align 3
 11812              	.L841:
 171:sieve_extend.c ****        *index_ptr |= mask;
 11813              		.loc 1 171 17 view .LVU4047
 11814              	.LBE571:
 11815              	.LBE574:
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11816              		.loc 1 285 13 is_stmt 1 view .LVU4048
 11817              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11818              		.loc 1 285 32 is_stmt 0 view .LVU4049
 11819 4200 4889C2   		mov	rdx, rax	# index_word, index
 11820 4203 48C1EA06 		shr	rdx, 6	# index_word,
 11821              	.LVL759:
 286:sieve_extend.c ****             #pragma ivdep
 11822              		.loc 1 286 13 is_stmt 1 view .LVU4050
 11823              	# sieve_extend.c:286:             register bitword_t mask = SAFE_ZERO;
 286:sieve_extend.c ****             #pragma ivdep
 11824              		.loc 1 286 32 is_stmt 0 view .LVU4051
 11825 4207 31C9     		xor	ecx, ecx	# mask
 11826              	.LVL760:
 11827              	.L835:
 288:sieve_extend.c ****                 mask |= markmask(index);
 11828              		.loc 1 288 13 is_stmt 1 view .LVU4052
 289:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccdGK7kM.s 			page 320


 11829              		.loc 1 289 17 view .LVU4053
 11830              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11831              		.loc 1 289 25 is_stmt 0 view .LVU4054
 11832 4209 C4C2F9F7 		shlx	rdi, r12, rax	# tmp724, tmp821, index
 11832      FC
 11833              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11834              		.loc 1 290 23 view .LVU4055
 11835 420e 4C01C0   		add	rax, r8	# index, step
 11836              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11837              		.loc 1 289 22 view .LVU4056
 11838 4211 4809F9   		or	rcx, rdi	# mask, tmp724
 11839              	.LVL761:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11840              		.loc 1 290 17 is_stmt 1 view .LVU4057
 291:sieve_extend.c ****             // #pragma ivdep
 11841              		.loc 1 291 21 view .LVU4058
 11842              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11843              		.loc 1 291 36 is_stmt 0 view .LVU4059
 11844 4214 4889C7   		mov	rdi, rax	# tmp726, index
 11845 4217 48C1EF06 		shr	rdi, 6	# tmp726,
 11846              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11847              		.loc 1 291 13 view .LVU4060
 11848 421b 4839FA   		cmp	rdx, rdi	# index_word, tmp726
 11849 421e 0F85AC00 		jne	.L1250	#,
 11849      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 11850              		.loc 1 288 13 is_stmt 1 view .LVU4061
 289:sieve_extend.c ****                 index += step;
 11851              		.loc 1 289 17 view .LVU4062
 11852              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11853              		.loc 1 289 25 is_stmt 0 view .LVU4063
 11854 4224 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1003, tmp821, index
 11854      FC
 11855              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11856              		.loc 1 290 23 view .LVU4064
 11857 4229 4C01C0   		add	rax, r8	# index, step
 11858              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11859              		.loc 1 289 22 view .LVU4065
 11860 422c 4809F9   		or	rcx, rdi	# mask, tmp1003
 11861              	.LVL762:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11862              		.loc 1 290 17 is_stmt 1 view .LVU4066
 291:sieve_extend.c ****             // #pragma ivdep
 11863              		.loc 1 291 21 view .LVU4067
 11864              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11865              		.loc 1 291 36 is_stmt 0 view .LVU4068
 11866 422f 4889C7   		mov	rdi, rax	# tmp1004, index
 11867 4232 48C1EF06 		shr	rdi, 6	# tmp1004,
GAS LISTING /tmp/ccdGK7kM.s 			page 321


 11868              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11869              		.loc 1 291 13 view .LVU4069
 11870 4236 4839FA   		cmp	rdx, rdi	# index_word, tmp1004
 11871 4239 0F859100 		jne	.L1250	#,
 11871      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 11872              		.loc 1 288 13 is_stmt 1 view .LVU4070
 289:sieve_extend.c ****                 index += step;
 11873              		.loc 1 289 17 view .LVU4071
 11874              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11875              		.loc 1 289 25 is_stmt 0 view .LVU4072
 11876 423f C4C2F9F7 		shlx	rdi, r12, rax	# tmp1005, tmp821, index
 11876      FC
 11877              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11878              		.loc 1 290 23 view .LVU4073
 11879 4244 4C01C0   		add	rax, r8	# index, step
 11880              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11881              		.loc 1 289 22 view .LVU4074
 11882 4247 4809F9   		or	rcx, rdi	# mask, tmp1005
 11883              	.LVL763:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11884              		.loc 1 290 17 is_stmt 1 view .LVU4075
 291:sieve_extend.c ****             // #pragma ivdep
 11885              		.loc 1 291 21 view .LVU4076
 11886              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11887              		.loc 1 291 36 is_stmt 0 view .LVU4077
 11888 424a 4889C7   		mov	rdi, rax	# tmp1006, index
 11889 424d 48C1EF06 		shr	rdi, 6	# tmp1006,
 11890              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11891              		.loc 1 291 13 view .LVU4078
 11892 4251 4839FA   		cmp	rdx, rdi	# index_word, tmp1006
 11893 4254 757A     		jne	.L1250	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 11894              		.loc 1 288 13 is_stmt 1 view .LVU4079
 289:sieve_extend.c ****                 index += step;
 11895              		.loc 1 289 17 view .LVU4080
 11896              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11897              		.loc 1 289 25 is_stmt 0 view .LVU4081
 11898 4256 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1007, tmp821, index
 11898      FC
 11899              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11900              		.loc 1 290 23 view .LVU4082
 11901 425b 4C01C0   		add	rax, r8	# index, step
 11902              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11903              		.loc 1 289 22 view .LVU4083
 11904 425e 4809F9   		or	rcx, rdi	# mask, tmp1007
 11905              	.LVL764:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccdGK7kM.s 			page 322


 11906              		.loc 1 290 17 is_stmt 1 view .LVU4084
 291:sieve_extend.c ****             // #pragma ivdep
 11907              		.loc 1 291 21 view .LVU4085
 11908              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11909              		.loc 1 291 36 is_stmt 0 view .LVU4086
 11910 4261 4889C7   		mov	rdi, rax	# tmp1008, index
 11911 4264 48C1EF06 		shr	rdi, 6	# tmp1008,
 11912              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11913              		.loc 1 291 13 view .LVU4087
 11914 4268 4839FA   		cmp	rdx, rdi	# index_word, tmp1008
 11915 426b 7563     		jne	.L1250	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 11916              		.loc 1 288 13 is_stmt 1 view .LVU4088
 289:sieve_extend.c ****                 index += step;
 11917              		.loc 1 289 17 view .LVU4089
 11918              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11919              		.loc 1 289 25 is_stmt 0 view .LVU4090
 11920 426d C4C2F9F7 		shlx	rdi, r12, rax	# tmp1009, tmp821, index
 11920      FC
 11921              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11922              		.loc 1 290 23 view .LVU4091
 11923 4272 4C01C0   		add	rax, r8	# index, step
 11924              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11925              		.loc 1 289 22 view .LVU4092
 11926 4275 4809F9   		or	rcx, rdi	# mask, tmp1009
 11927              	.LVL765:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11928              		.loc 1 290 17 is_stmt 1 view .LVU4093
 291:sieve_extend.c ****             // #pragma ivdep
 11929              		.loc 1 291 21 view .LVU4094
 11930              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11931              		.loc 1 291 36 is_stmt 0 view .LVU4095
 11932 4278 4889C7   		mov	rdi, rax	# tmp1010, index
 11933 427b 48C1EF06 		shr	rdi, 6	# tmp1010,
 11934              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11935              		.loc 1 291 13 view .LVU4096
 11936 427f 4839FA   		cmp	rdx, rdi	# index_word, tmp1010
 11937 4282 754C     		jne	.L1250	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 11938              		.loc 1 288 13 is_stmt 1 view .LVU4097
 289:sieve_extend.c ****                 index += step;
 11939              		.loc 1 289 17 view .LVU4098
 11940              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11941              		.loc 1 289 25 is_stmt 0 view .LVU4099
 11942 4284 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1011, tmp821, index
 11942      FC
 11943              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11944              		.loc 1 290 23 view .LVU4100
GAS LISTING /tmp/ccdGK7kM.s 			page 323


 11945 4289 4C01C0   		add	rax, r8	# index, step
 11946              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11947              		.loc 1 289 22 view .LVU4101
 11948 428c 4809F9   		or	rcx, rdi	# mask, tmp1011
 11949              	.LVL766:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11950              		.loc 1 290 17 is_stmt 1 view .LVU4102
 291:sieve_extend.c ****             // #pragma ivdep
 11951              		.loc 1 291 21 view .LVU4103
 11952              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11953              		.loc 1 291 36 is_stmt 0 view .LVU4104
 11954 428f 4889C7   		mov	rdi, rax	# tmp1012, index
 11955 4292 48C1EF06 		shr	rdi, 6	# tmp1012,
 11956              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11957              		.loc 1 291 13 view .LVU4105
 11958 4296 4839FA   		cmp	rdx, rdi	# index_word, tmp1012
 11959 4299 7535     		jne	.L1250	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 11960              		.loc 1 288 13 is_stmt 1 view .LVU4106
 289:sieve_extend.c ****                 index += step;
 11961              		.loc 1 289 17 view .LVU4107
 11962              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11963              		.loc 1 289 25 is_stmt 0 view .LVU4108
 11964 429b C4C2F9F7 		shlx	rdi, r12, rax	# tmp1013, tmp821, index
 11964      FC
 11965              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11966              		.loc 1 290 23 view .LVU4109
 11967 42a0 4C01C0   		add	rax, r8	# index, step
 11968              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11969              		.loc 1 289 22 view .LVU4110
 11970 42a3 4809F9   		or	rcx, rdi	# mask, tmp1013
 11971              	.LVL767:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11972              		.loc 1 290 17 is_stmt 1 view .LVU4111
 291:sieve_extend.c ****             // #pragma ivdep
 11973              		.loc 1 291 21 view .LVU4112
 11974              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11975              		.loc 1 291 36 is_stmt 0 view .LVU4113
 11976 42a6 4889C7   		mov	rdi, rax	# tmp1014, index
 11977 42a9 48C1EF06 		shr	rdi, 6	# tmp1014,
 11978              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11979              		.loc 1 291 13 view .LVU4114
 11980 42ad 4839FA   		cmp	rdx, rdi	# index_word, tmp1014
 11981 42b0 751E     		jne	.L1250	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 11982              		.loc 1 288 13 is_stmt 1 view .LVU4115
 289:sieve_extend.c ****                 index += step;
 11983              		.loc 1 289 17 view .LVU4116
 11984              	# sieve_extend.c:289:                 mask |= markmask(index);
GAS LISTING /tmp/ccdGK7kM.s 			page 324


 289:sieve_extend.c ****                 index += step;
 11985              		.loc 1 289 25 is_stmt 0 view .LVU4117
 11986 42b2 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1015, tmp821, index
 11986      FC
 11987              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11988              		.loc 1 290 23 view .LVU4118
 11989 42b7 4C01C0   		add	rax, r8	# index, step
 11990              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 11991              		.loc 1 289 22 view .LVU4119
 11992 42ba 4809F9   		or	rcx, rdi	# mask, tmp1015
 11993              	.LVL768:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 11994              		.loc 1 290 17 is_stmt 1 view .LVU4120
 291:sieve_extend.c ****             // #pragma ivdep
 11995              		.loc 1 291 21 view .LVU4121
 11996              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 11997              		.loc 1 291 36 is_stmt 0 view .LVU4122
 11998 42bd 4889C7   		mov	rdi, rax	# tmp1016, index
 11999 42c0 48C1EF06 		shr	rdi, 6	# tmp1016,
 12000              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12001              		.loc 1 291 13 view .LVU4123
 12002 42c4 4839FA   		cmp	rdx, rdi	# index_word, tmp1016
 12003 42c7 0F843CFF 		je	.L835	#,
 12003      FFFF
 12004 42cd 0F1F00   		.p2align 4,,10
 12005              		.p2align 3
 12006              	.L1250:
 295:sieve_extend.c ****         }
 12007              		.loc 1 295 13 is_stmt 1 view .LVU4124
 12008              	.LVL769:
 12009              	.LBB575:
 12010              	.LBI569:
 135:sieve_extend.c **** //#if __APPLE__
 12011              		.loc 1 135 20 view .LVU4125
 12012              	.LBB572:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12013              		.loc 1 163 4 view .LVU4126
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12014              		.loc 1 164 4 view .LVU4127
 12015              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12016              		.loc 1 164 78 is_stmt 0 view .LVU4128
 12017 42d0 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 12018              	.LVL770:
 165:sieve_extend.c **** 
 12019              		.loc 1 165 4 is_stmt 1 view .LVU4129
 169:sieve_extend.c ****        *index_ptr |= mask;
 12020              		.loc 1 169 4 view .LVU4130
 169:sieve_extend.c ****        *index_ptr |= mask;
 12021              		.loc 1 169 10 view .LVU4131
 12022 42d4 4839EA   		cmp	rdx, rbp	# index_ptr, fast_loop_ptr
 12023 42d7 0F830301 		jnb	.L836	#,
 12023      0000
GAS LISTING /tmp/ccdGK7kM.s 			page 325


 169:sieve_extend.c ****        *index_ptr |= mask;
 12024              		.loc 1 169 10 is_stmt 0 view .LVU4132
 12025 42dd 4A8D3C32 		lea	rdi, [rdx+r14]	# ivtmp.517,
 12026              	.L837:
 170:sieve_extend.c ****        index_ptr+=step;
 12027              		.loc 1 170 8 is_stmt 1 view .LVU4133
 12028              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12029              		.loc 1 170 19 is_stmt 0 view .LVU4134
 12030 42e1 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12031              		.loc 1 171 8 is_stmt 1 view .LVU4135
 12032              	.LVL771:
 172:sieve_extend.c ****        index_ptr+=step;
 12033              		.loc 1 172 8 view .LVU4136
 12034              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12035              		.loc 1 172 19 is_stmt 0 view .LVU4137
 12036 42e4 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12037              		.loc 1 173 8 is_stmt 1 view .LVU4138
 12038              	.LVL772:
 174:sieve_extend.c ****        index_ptr+=step;
 12039              		.loc 1 174 8 view .LVU4139
 12040              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12041              		.loc 1 174 19 is_stmt 0 view .LVU4140
 12042 42e8 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12043              		.loc 1 175 8 is_stmt 1 view .LVU4141
 12044              	.LVL773:
 176:sieve_extend.c ****        index_ptr+=step;
 12045              		.loc 1 176 8 view .LVU4142
 12046              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12047              		.loc 1 176 19 is_stmt 0 view .LVU4143
 12048 42eb 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12049              		.loc 1 177 8 is_stmt 1 view .LVU4144
 12050              	.LVL774:
 178:sieve_extend.c ****        index_ptr+=step;
 12051              		.loc 1 178 8 view .LVU4145
 12052 42ef 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12053              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12054              		.loc 1 178 19 is_stmt 0 view .LVU4146
 12055 42f2 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12056              		.loc 1 179 8 is_stmt 1 view .LVU4147
 12057 42f6 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12058              	.LVL775:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12059              		.loc 1 169 10 view .LVU4148
 12060 42f9 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12061 42fc 0F86DE00 		jbe	.L836	#,
 12061      0000
 170:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 326


 12062              		.loc 1 170 8 view .LVU4149
 12063              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12064              		.loc 1 170 19 is_stmt 0 view .LVU4150
 12065 4302 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12066              		.loc 1 171 8 is_stmt 1 view .LVU4151
 12067              	.LVL776:
 172:sieve_extend.c ****        index_ptr+=step;
 12068              		.loc 1 172 8 view .LVU4152
 12069              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12070              		.loc 1 172 19 is_stmt 0 view .LVU4153
 12071 4305 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12072              		.loc 1 173 8 is_stmt 1 view .LVU4154
 12073              	.LVL777:
 174:sieve_extend.c ****        index_ptr+=step;
 12074              		.loc 1 174 8 view .LVU4155
 12075              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12076              		.loc 1 174 19 is_stmt 0 view .LVU4156
 12077 4309 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12078              		.loc 1 175 8 is_stmt 1 view .LVU4157
 12079              	.LVL778:
 176:sieve_extend.c ****        index_ptr+=step;
 12080              		.loc 1 176 8 view .LVU4158
 12081              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12082              		.loc 1 176 19 is_stmt 0 view .LVU4159
 12083 430c 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12084              		.loc 1 177 8 is_stmt 1 view .LVU4160
 12085              	.LVL779:
 178:sieve_extend.c ****        index_ptr+=step;
 12086              		.loc 1 178 8 view .LVU4161
 12087 4310 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12088              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12089              		.loc 1 178 19 is_stmt 0 view .LVU4162
 12090 4313 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12091              		.loc 1 179 8 is_stmt 1 view .LVU4163
 12092 4317 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12093              	.LVL780:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12094              		.loc 1 169 10 view .LVU4164
 12095 431a 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12096 431d 0F86BD00 		jbe	.L836	#,
 12096      0000
 170:sieve_extend.c ****        index_ptr+=step;
 12097              		.loc 1 170 8 view .LVU4165
 12098              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12099              		.loc 1 170 19 is_stmt 0 view .LVU4166
 12100 4323 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
GAS LISTING /tmp/ccdGK7kM.s 			page 327


 171:sieve_extend.c ****        *index_ptr |= mask;
 12101              		.loc 1 171 8 is_stmt 1 view .LVU4167
 12102              	.LVL781:
 172:sieve_extend.c ****        index_ptr+=step;
 12103              		.loc 1 172 8 view .LVU4168
 12104              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12105              		.loc 1 172 19 is_stmt 0 view .LVU4169
 12106 4326 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12107              		.loc 1 173 8 is_stmt 1 view .LVU4170
 12108              	.LVL782:
 174:sieve_extend.c ****        index_ptr+=step;
 12109              		.loc 1 174 8 view .LVU4171
 12110              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12111              		.loc 1 174 19 is_stmt 0 view .LVU4172
 12112 432a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12113              		.loc 1 175 8 is_stmt 1 view .LVU4173
 12114              	.LVL783:
 176:sieve_extend.c ****        index_ptr+=step;
 12115              		.loc 1 176 8 view .LVU4174
 12116              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12117              		.loc 1 176 19 is_stmt 0 view .LVU4175
 12118 432d 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12119              		.loc 1 177 8 is_stmt 1 view .LVU4176
 12120              	.LVL784:
 178:sieve_extend.c ****        index_ptr+=step;
 12121              		.loc 1 178 8 view .LVU4177
 12122 4331 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12123              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12124              		.loc 1 178 19 is_stmt 0 view .LVU4178
 12125 4334 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12126              		.loc 1 179 8 is_stmt 1 view .LVU4179
 12127 4338 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12128              	.LVL785:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12129              		.loc 1 169 10 view .LVU4180
 12130 433b 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12131 433e 0F869C00 		jbe	.L836	#,
 12131      0000
 170:sieve_extend.c ****        index_ptr+=step;
 12132              		.loc 1 170 8 view .LVU4181
 12133              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12134              		.loc 1 170 19 is_stmt 0 view .LVU4182
 12135 4344 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12136              		.loc 1 171 8 is_stmt 1 view .LVU4183
 12137              	.LVL786:
 172:sieve_extend.c ****        index_ptr+=step;
 12138              		.loc 1 172 8 view .LVU4184
GAS LISTING /tmp/ccdGK7kM.s 			page 328


 12139              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12140              		.loc 1 172 19 is_stmt 0 view .LVU4185
 12141 4347 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12142              		.loc 1 173 8 is_stmt 1 view .LVU4186
 12143              	.LVL787:
 174:sieve_extend.c ****        index_ptr+=step;
 12144              		.loc 1 174 8 view .LVU4187
 12145              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12146              		.loc 1 174 19 is_stmt 0 view .LVU4188
 12147 434b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12148              		.loc 1 175 8 is_stmt 1 view .LVU4189
 12149              	.LVL788:
 176:sieve_extend.c ****        index_ptr+=step;
 12150              		.loc 1 176 8 view .LVU4190
 12151              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12152              		.loc 1 176 19 is_stmt 0 view .LVU4191
 12153 434e 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12154              		.loc 1 177 8 is_stmt 1 view .LVU4192
 12155              	.LVL789:
 178:sieve_extend.c ****        index_ptr+=step;
 12156              		.loc 1 178 8 view .LVU4193
 12157 4352 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12158              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12159              		.loc 1 178 19 is_stmt 0 view .LVU4194
 12160 4355 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12161              		.loc 1 179 8 is_stmt 1 view .LVU4195
 12162 4359 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12163              	.LVL790:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12164              		.loc 1 169 10 view .LVU4196
 12165 435c 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12166 435f 767F     		jbe	.L836	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12167              		.loc 1 170 8 view .LVU4197
 12168              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12169              		.loc 1 170 19 is_stmt 0 view .LVU4198
 12170 4361 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12171              		.loc 1 171 8 is_stmt 1 view .LVU4199
 12172              	.LVL791:
 172:sieve_extend.c ****        index_ptr+=step;
 12173              		.loc 1 172 8 view .LVU4200
 12174              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12175              		.loc 1 172 19 is_stmt 0 view .LVU4201
 12176 4364 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12177              		.loc 1 173 8 is_stmt 1 view .LVU4202
GAS LISTING /tmp/ccdGK7kM.s 			page 329


 12178              	.LVL792:
 174:sieve_extend.c ****        index_ptr+=step;
 12179              		.loc 1 174 8 view .LVU4203
 12180              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12181              		.loc 1 174 19 is_stmt 0 view .LVU4204
 12182 4368 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12183              		.loc 1 175 8 is_stmt 1 view .LVU4205
 12184              	.LVL793:
 176:sieve_extend.c ****        index_ptr+=step;
 12185              		.loc 1 176 8 view .LVU4206
 12186              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12187              		.loc 1 176 19 is_stmt 0 view .LVU4207
 12188 436b 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12189              		.loc 1 177 8 is_stmt 1 view .LVU4208
 12190              	.LVL794:
 178:sieve_extend.c ****        index_ptr+=step;
 12191              		.loc 1 178 8 view .LVU4209
 12192 436f 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12193              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12194              		.loc 1 178 19 is_stmt 0 view .LVU4210
 12195 4372 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12196              		.loc 1 179 8 is_stmt 1 view .LVU4211
 12197 4376 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12198              	.LVL795:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12199              		.loc 1 169 10 view .LVU4212
 12200 4379 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12201 437c 7662     		jbe	.L836	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12202              		.loc 1 170 8 view .LVU4213
 12203              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12204              		.loc 1 170 19 is_stmt 0 view .LVU4214
 12205 437e 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12206              		.loc 1 171 8 is_stmt 1 view .LVU4215
 12207              	.LVL796:
 172:sieve_extend.c ****        index_ptr+=step;
 12208              		.loc 1 172 8 view .LVU4216
 12209              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12210              		.loc 1 172 19 is_stmt 0 view .LVU4217
 12211 4381 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12212              		.loc 1 173 8 is_stmt 1 view .LVU4218
 12213              	.LVL797:
 174:sieve_extend.c ****        index_ptr+=step;
 12214              		.loc 1 174 8 view .LVU4219
 12215              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12216              		.loc 1 174 19 is_stmt 0 view .LVU4220
GAS LISTING /tmp/ccdGK7kM.s 			page 330


 12217 4385 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12218              		.loc 1 175 8 is_stmt 1 view .LVU4221
 12219              	.LVL798:
 176:sieve_extend.c ****        index_ptr+=step;
 12220              		.loc 1 176 8 view .LVU4222
 12221              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12222              		.loc 1 176 19 is_stmt 0 view .LVU4223
 12223 4388 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12224              		.loc 1 177 8 is_stmt 1 view .LVU4224
 12225              	.LVL799:
 178:sieve_extend.c ****        index_ptr+=step;
 12226              		.loc 1 178 8 view .LVU4225
 12227 438c 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12228              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12229              		.loc 1 178 19 is_stmt 0 view .LVU4226
 12230 438f 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12231              		.loc 1 179 8 is_stmt 1 view .LVU4227
 12232 4393 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12233              	.LVL800:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12234              		.loc 1 169 10 view .LVU4228
 12235 4396 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12236 4399 7645     		jbe	.L836	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12237              		.loc 1 170 8 view .LVU4229
 12238              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12239              		.loc 1 170 19 is_stmt 0 view .LVU4230
 12240 439b 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12241              		.loc 1 171 8 is_stmt 1 view .LVU4231
 12242              	.LVL801:
 172:sieve_extend.c ****        index_ptr+=step;
 12243              		.loc 1 172 8 view .LVU4232
 12244              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12245              		.loc 1 172 19 is_stmt 0 view .LVU4233
 12246 439e 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12247              		.loc 1 173 8 is_stmt 1 view .LVU4234
 12248              	.LVL802:
 174:sieve_extend.c ****        index_ptr+=step;
 12249              		.loc 1 174 8 view .LVU4235
 12250              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12251              		.loc 1 174 19 is_stmt 0 view .LVU4236
 12252 43a2 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12253              		.loc 1 175 8 is_stmt 1 view .LVU4237
 12254              	.LVL803:
 176:sieve_extend.c ****        index_ptr+=step;
 12255              		.loc 1 176 8 view .LVU4238
GAS LISTING /tmp/ccdGK7kM.s 			page 331


 12256              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12257              		.loc 1 176 19 is_stmt 0 view .LVU4239
 12258 43a5 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12259              		.loc 1 177 8 is_stmt 1 view .LVU4240
 12260              	.LVL804:
 178:sieve_extend.c ****        index_ptr+=step;
 12261              		.loc 1 178 8 view .LVU4241
 12262 43a9 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12263              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12264              		.loc 1 178 19 is_stmt 0 view .LVU4242
 12265 43ac 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12266              		.loc 1 179 8 is_stmt 1 view .LVU4243
 12267 43b0 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12268              	.LVL805:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12269              		.loc 1 169 10 view .LVU4244
 12270 43b3 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12271 43b6 7628     		jbe	.L836	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12272              		.loc 1 170 8 view .LVU4245
 12273              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12274              		.loc 1 170 19 is_stmt 0 view .LVU4246
 12275 43b8 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_445, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 12276              		.loc 1 171 8 is_stmt 1 view .LVU4247
 12277              	.LVL806:
 172:sieve_extend.c ****        index_ptr+=step;
 12278              		.loc 1 172 8 view .LVU4248
 12279              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12280              		.loc 1 172 19 is_stmt 0 view .LVU4249
 12281 43bb 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_445, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 12282              		.loc 1 173 8 is_stmt 1 view .LVU4250
 12283              	.LVL807:
 174:sieve_extend.c ****        index_ptr+=step;
 12284              		.loc 1 174 8 view .LVU4251
 12285              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12286              		.loc 1 174 19 is_stmt 0 view .LVU4252
 12287 43bf 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1478, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 12288              		.loc 1 175 8 is_stmt 1 view .LVU4253
 12289              	.LVL808:
 176:sieve_extend.c ****        index_ptr+=step;
 12290              		.loc 1 176 8 view .LVU4254
 12291              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12292              		.loc 1 176 19 is_stmt 0 view .LVU4255
 12293 43c2 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1478, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 12294              		.loc 1 177 8 is_stmt 1 view .LVU4256
GAS LISTING /tmp/ccdGK7kM.s 			page 332


 12295              	.LVL809:
 178:sieve_extend.c ****        index_ptr+=step;
 12296              		.loc 1 178 8 view .LVU4257
 12297 43c6 4C01DF   		add	rdi, r11	# ivtmp.517, tmp722
 12298              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12299              		.loc 1 178 19 is_stmt 0 view .LVU4258
 12300 43c9 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_445, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 12301              		.loc 1 179 8 is_stmt 1 view .LVU4259
 12302 43cd 4C01DA   		add	rdx, r11	# index_ptr, tmp722
 12303              	.LVL810:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12304              		.loc 1 169 10 view .LVU4260
 12305 43d0 4839D5   		cmp	rbp, rdx	# fast_loop_ptr, index_ptr
 12306 43d3 0F8708FF 		ja	.L837	#,
 12306      FFFF
 12307 43d9 0F1F8000 		.p2align 4,,10
 12307      000000
 12308              		.p2align 3
 12309              	.L836:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12310              		.loc 1 182 4 view .LVU4261
 183:sieve_extend.c ****        *index_ptr |= mask;
 12311              		.loc 1 183 4 view .LVU4262
 183:sieve_extend.c ****        *index_ptr |= mask;
 12312              		.loc 1 183 10 view .LVU4263
 12313 43e0 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12314 43e3 765B     		jbe	.L838	#,
 12315              	.L839:
 184:sieve_extend.c ****        index_ptr+=step;
 12316              		.loc 1 184 8 view .LVU4264
 12317              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12318              		.loc 1 184 19 is_stmt 0 view .LVU4265
 12319 43e5 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12320              		.loc 1 185 8 is_stmt 1 view .LVU4266
 12321              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12322              		.loc 1 185 17 is_stmt 0 view .LVU4267
 12323 43e8 4801F2   		add	rdx, rsi	# index_ptr, _552
 12324              	.LVL811:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12325              		.loc 1 183 10 is_stmt 1 view .LVU4268
 12326 43eb 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12327 43ee 7650     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12328              		.loc 1 184 8 view .LVU4269
 12329              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12330              		.loc 1 184 19 is_stmt 0 view .LVU4270
 12331 43f0 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12332              		.loc 1 185 8 is_stmt 1 view .LVU4271
 12333              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
GAS LISTING /tmp/ccdGK7kM.s 			page 333


 12334              		.loc 1 185 17 is_stmt 0 view .LVU4272
 12335 43f3 4801F2   		add	rdx, rsi	# index_ptr, _552
 12336              	.LVL812:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12337              		.loc 1 183 10 is_stmt 1 view .LVU4273
 12338 43f6 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12339 43f9 7645     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12340              		.loc 1 184 8 view .LVU4274
 12341              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12342              		.loc 1 184 19 is_stmt 0 view .LVU4275
 12343 43fb 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12344              		.loc 1 185 8 is_stmt 1 view .LVU4276
 12345              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12346              		.loc 1 185 17 is_stmt 0 view .LVU4277
 12347 43fe 4801F2   		add	rdx, rsi	# index_ptr, _552
 12348              	.LVL813:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12349              		.loc 1 183 10 is_stmt 1 view .LVU4278
 12350 4401 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12351 4404 763A     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12352              		.loc 1 184 8 view .LVU4279
 12353              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12354              		.loc 1 184 19 is_stmt 0 view .LVU4280
 12355 4406 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12356              		.loc 1 185 8 is_stmt 1 view .LVU4281
 12357              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12358              		.loc 1 185 17 is_stmt 0 view .LVU4282
 12359 4409 4801F2   		add	rdx, rsi	# index_ptr, _552
 12360              	.LVL814:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12361              		.loc 1 183 10 is_stmt 1 view .LVU4283
 12362 440c 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12363 440f 762F     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12364              		.loc 1 184 8 view .LVU4284
 12365              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12366              		.loc 1 184 19 is_stmt 0 view .LVU4285
 12367 4411 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12368              		.loc 1 185 8 is_stmt 1 view .LVU4286
 12369              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12370              		.loc 1 185 17 is_stmt 0 view .LVU4287
 12371 4414 4801F2   		add	rdx, rsi	# index_ptr, _552
 12372              	.LVL815:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12373              		.loc 1 183 10 is_stmt 1 view .LVU4288
 12374 4417 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
GAS LISTING /tmp/ccdGK7kM.s 			page 334


 12375 441a 7624     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12376              		.loc 1 184 8 view .LVU4289
 12377              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12378              		.loc 1 184 19 is_stmt 0 view .LVU4290
 12379 441c 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12380              		.loc 1 185 8 is_stmt 1 view .LVU4291
 12381              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12382              		.loc 1 185 17 is_stmt 0 view .LVU4292
 12383 441f 4801F2   		add	rdx, rsi	# index_ptr, _552
 12384              	.LVL816:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12385              		.loc 1 183 10 is_stmt 1 view .LVU4293
 12386 4422 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12387 4425 7619     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12388              		.loc 1 184 8 view .LVU4294
 12389              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12390              		.loc 1 184 19 is_stmt 0 view .LVU4295
 12391 4427 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12392              		.loc 1 185 8 is_stmt 1 view .LVU4296
 12393              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12394              		.loc 1 185 17 is_stmt 0 view .LVU4297
 12395 442a 4801F2   		add	rdx, rsi	# index_ptr, _552
 12396              	.LVL817:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12397              		.loc 1 183 10 is_stmt 1 view .LVU4298
 12398 442d 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12399 4430 760E     		jbe	.L838	#,
 184:sieve_extend.c ****        index_ptr+=step;
 12400              		.loc 1 184 8 view .LVU4299
 12401              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12402              		.loc 1 184 19 is_stmt 0 view .LVU4300
 12403 4432 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_416, offset: 0B], mask
 185:sieve_extend.c ****    }
 12404              		.loc 1 185 8 is_stmt 1 view .LVU4301
 12405              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 12406              		.loc 1 185 17 is_stmt 0 view .LVU4302
 12407 4435 4801F2   		add	rdx, rsi	# index_ptr, _552
 12408              	.LVL818:
 183:sieve_extend.c ****        *index_ptr |= mask;
 12409              		.loc 1 183 10 is_stmt 1 view .LVU4303
 12410 4438 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12411 443b 77A8     		ja	.L839	#,
 12412 443d 0F1F00   		.p2align 4,,10
 12413              		.p2align 3
 12414              	.L838:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12415              		.loc 1 188 4 view .LVU4304
GAS LISTING /tmp/ccdGK7kM.s 			page 335


 12416              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12417              		.loc 1 188 7 is_stmt 0 view .LVU4305
 12418 4440 4839D3   		cmp	rbx, rdx	# range_stop_ptr, index_ptr
 12419 4443 0F848703 		je	.L1398	#,
 12419      0000
 12420              	.LVL819:
 12421              	.L840:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12422              		.loc 1 188 7 view .LVU4306
 12423              	.LBE572:
 12424              	.LBE575:
 12425              	.LBE577:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12426              		.loc 1 284 54 is_stmt 1 view .LVU4307
 12427              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12428              		.loc 1 284 9 is_stmt 0 view .LVU4308
 12429 4449 4939C5   		cmp	r13, rax	# tmp701, index
 12430 444c 0F83AEFD 		jnb	.L841	#,
 12430      FFFF
 12431              	.LVL820:
 12432              	.L832:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12433              		.loc 1 284 9 view .LVU4309
 12434              	.LBE579:
 12435              	.LBE585:
 12436              	.LBE587:
 803:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12437              		.loc 1 803 9 is_stmt 1 view .LVU4310
 12438              	.LBB588:
 12439              	.LBI588:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12440              		.loc 1 110 25 view .LVU4311
 12441              	.LBB589:
 111:sieve_extend.c ****     return index;
 12442              		.loc 1 111 5 view .LVU4312
 111:sieve_extend.c ****     return index;
 12443              		.loc 1 111 11 view .LVU4313
 12444              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12445              		.loc 1 111 21 is_stmt 0 view .LVU4314
 12446 4452 4D89C8   		mov	r8, r9	# tmp702, _413
 12447              	.LVL821:
 111:sieve_extend.c ****     return index;
 12448              		.loc 1 111 21 view .LVU4315
 12449 4455 49C1E806 		shr	r8, 6	# tmp702,
 12450              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12451              		.loc 1 111 12 view .LVU4316
 12452 4459 4B8B04C7 		mov	rax, QWORD PTR [r15+r8*8]	# *_58, *_58
 12453              	.LBE589:
 12454              	.LBE588:
 12455              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12456              		.loc 1 801 12 view .LVU4317
 12457 445d 4C89C9   		mov	rcx, r9	# index, _413
GAS LISTING /tmp/ccdGK7kM.s 			page 336


 12458              	.LBB591:
 12459              	.LBB590:
 12460              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12461              		.loc 1 111 11 view .LVU4318
 12462 4460 4C0FA3C8 		bt	rax, r9	# *_58, _413
 12463 4464 0F83B600 		jnc	.L831	#,
 12463      0000
 12464              	.LVL822:
 12465              	.L830:
 111:sieve_extend.c ****     return index;
 12466              		.loc 1 111 58 is_stmt 1 view .LVU4319
 12467              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12468              		.loc 1 111 63 is_stmt 0 view .LVU4320
 12469 446a 4C8D4901 		lea	r9, 1[rcx]	# tmp830,
 12470              	.LVL823:
 12471              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12472              		.loc 1 111 21 view .LVU4321
 12473 446e 4D89CD   		mov	r13, r9	# tmp729, index
 12474 4471 49C1ED06 		shr	r13, 6	# tmp729,
 12475              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12476              		.loc 1 111 12 view .LVU4322
 12477 4475 4F8B1CEF 		mov	r11, QWORD PTR [r15+r13*8]	# *_349, *_349
 12478              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12479              		.loc 1 111 63 view .LVU4323
 12480 4479 4C89C9   		mov	rcx, r9	# index, tmp830
 111:sieve_extend.c ****     return index;
 12481              		.loc 1 111 11 is_stmt 1 view .LVU4324
 12482 447c 4D0FA3CB 		bt	r11, r9	# *_349, index
 12483 4480 0F839A00 		jnc	.L831	#,
 12483      0000
 111:sieve_extend.c ****     return index;
 12484              		.loc 1 111 58 view .LVU4325
 12485              	.LVL824:
 12486              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12487              		.loc 1 111 63 is_stmt 0 view .LVU4326
 12488 4486 48FFC1   		inc	rcx	# index
 12489              	.LVL825:
 111:sieve_extend.c ****     return index;
 12490              		.loc 1 111 11 is_stmt 1 view .LVU4327
 12491              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12492              		.loc 1 111 21 is_stmt 0 view .LVU4328
 12493 4489 4889CA   		mov	rdx, rcx	# tmp955, index
 12494 448c 48C1EA06 		shr	rdx, 6	# tmp955,
 12495              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12496              		.loc 1 111 12 view .LVU4329
 12497 4490 498B3CD7 		mov	rdi, QWORD PTR [r15+rdx*8]	# *_349, *_349
 12498              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12499              		.loc 1 111 11 view .LVU4330
GAS LISTING /tmp/ccdGK7kM.s 			page 337


 12500 4494 480FA3CF 		bt	rdi, rcx	# *_349, index
 12501 4498 0F838200 		jnc	.L831	#,
 12501      0000
 111:sieve_extend.c ****     return index;
 12502              		.loc 1 111 58 is_stmt 1 view .LVU4331
 12503              	.LVL826:
 12504              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12505              		.loc 1 111 63 is_stmt 0 view .LVU4332
 12506 449e 498D4902 		lea	rcx, 2[r9]	# index,
 12507              	.LVL827:
 111:sieve_extend.c ****     return index;
 12508              		.loc 1 111 11 is_stmt 1 view .LVU4333
 12509              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12510              		.loc 1 111 21 is_stmt 0 view .LVU4334
 12511 44a2 4889CE   		mov	rsi, rcx	# tmp959, index
 12512 44a5 48C1EE06 		shr	rsi, 6	# tmp959,
 12513              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12514              		.loc 1 111 12 view .LVU4335
 12515 44a9 498B2CF7 		mov	rbp, QWORD PTR [r15+rsi*8]	# *_349, *_349
 12516              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12517              		.loc 1 111 11 view .LVU4336
 12518 44ad 480FA3CD 		bt	rbp, rcx	# *_349, index
 12519 44b1 736D     		jnc	.L831	#,
 111:sieve_extend.c ****     return index;
 12520              		.loc 1 111 58 is_stmt 1 view .LVU4337
 12521              	.LVL828:
 12522              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12523              		.loc 1 111 63 is_stmt 0 view .LVU4338
 12524 44b3 498D4903 		lea	rcx, 3[r9]	# index,
 12525              	.LVL829:
 111:sieve_extend.c ****     return index;
 12526              		.loc 1 111 11 is_stmt 1 view .LVU4339
 12527              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12528              		.loc 1 111 21 is_stmt 0 view .LVU4340
 12529 44b7 4989CE   		mov	r14, rcx	# tmp963, index
 12530 44ba 49C1EE06 		shr	r14, 6	# tmp963,
 12531              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12532              		.loc 1 111 12 view .LVU4341
 12533 44be 4F8B04F7 		mov	r8, QWORD PTR [r15+r14*8]	# *_349, *_349
 12534              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12535              		.loc 1 111 11 view .LVU4342
 12536 44c2 490FA3C8 		bt	r8, rcx	# *_349, index
 12537 44c6 7358     		jnc	.L831	#,
 111:sieve_extend.c ****     return index;
 12538              		.loc 1 111 58 is_stmt 1 view .LVU4343
 12539              	.LVL830:
 12540              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12541              		.loc 1 111 63 is_stmt 0 view .LVU4344
GAS LISTING /tmp/ccdGK7kM.s 			page 338


 12542 44c8 498D4904 		lea	rcx, 4[r9]	# index,
 12543              	.LVL831:
 111:sieve_extend.c ****     return index;
 12544              		.loc 1 111 11 is_stmt 1 view .LVU4345
 12545              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12546              		.loc 1 111 21 is_stmt 0 view .LVU4346
 12547 44cc 4889C8   		mov	rax, rcx	# tmp967, index
 12548 44cf 48C1E806 		shr	rax, 6	# tmp967,
 12549              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12550              		.loc 1 111 12 view .LVU4347
 12551 44d3 4D8B2CC7 		mov	r13, QWORD PTR [r15+rax*8]	# *_349, *_349
 12552              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12553              		.loc 1 111 11 view .LVU4348
 12554 44d7 490FA3CD 		bt	r13, rcx	# *_349, index
 12555 44db 7343     		jnc	.L831	#,
 111:sieve_extend.c ****     return index;
 12556              		.loc 1 111 58 is_stmt 1 view .LVU4349
 12557              	.LVL832:
 12558              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12559              		.loc 1 111 63 is_stmt 0 view .LVU4350
 12560 44dd 498D4905 		lea	rcx, 5[r9]	# index,
 12561              	.LVL833:
 111:sieve_extend.c ****     return index;
 12562              		.loc 1 111 11 is_stmt 1 view .LVU4351
 12563              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12564              		.loc 1 111 21 is_stmt 0 view .LVU4352
 12565 44e1 4989CB   		mov	r11, rcx	# tmp971, index
 12566 44e4 49C1EB06 		shr	r11, 6	# tmp971,
 12567              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12568              		.loc 1 111 12 view .LVU4353
 12569 44e8 4B8B14DF 		mov	rdx, QWORD PTR [r15+r11*8]	# *_349, *_349
 12570              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12571              		.loc 1 111 11 view .LVU4354
 12572 44ec 480FA3CA 		bt	rdx, rcx	# *_349, index
 12573 44f0 732E     		jnc	.L831	#,
 111:sieve_extend.c ****     return index;
 12574              		.loc 1 111 58 is_stmt 1 view .LVU4355
 12575              	.LVL834:
 12576              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12577              		.loc 1 111 63 is_stmt 0 view .LVU4356
 12578 44f2 498D4906 		lea	rcx, 6[r9]	# index,
 12579              	.LVL835:
 111:sieve_extend.c ****     return index;
 12580              		.loc 1 111 11 is_stmt 1 view .LVU4357
 12581              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12582              		.loc 1 111 21 is_stmt 0 view .LVU4358
 12583 44f6 4889CF   		mov	rdi, rcx	# tmp975, index
 12584 44f9 48C1EF06 		shr	rdi, 6	# tmp975,
GAS LISTING /tmp/ccdGK7kM.s 			page 339


 12585              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12586              		.loc 1 111 12 view .LVU4359
 12587 44fd 498B34FF 		mov	rsi, QWORD PTR [r15+rdi*8]	# *_349, *_349
 12588              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12589              		.loc 1 111 11 view .LVU4360
 12590 4501 480FA3CE 		bt	rsi, rcx	# *_349, index
 12591 4505 7319     		jnc	.L831	#,
 111:sieve_extend.c ****     return index;
 12592              		.loc 1 111 58 is_stmt 1 view .LVU4361
 12593              	.LVL836:
 12594              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12595              		.loc 1 111 63 is_stmt 0 view .LVU4362
 12596 4507 498D4907 		lea	rcx, 7[r9]	# index,
 12597              	.LVL837:
 111:sieve_extend.c ****     return index;
 12598              		.loc 1 111 11 is_stmt 1 view .LVU4363
 12599              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12600              		.loc 1 111 21 is_stmt 0 view .LVU4364
 12601 450b 4989C9   		mov	r9, rcx	# tmp979, index
 12602 450e 49C1E906 		shr	r9, 6	# tmp979,
 12603              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12604              		.loc 1 111 12 view .LVU4365
 12605 4512 4B8B2CCF 		mov	rbp, QWORD PTR [r15+r9*8]	# *_349, *_349
 12606              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12607              		.loc 1 111 11 view .LVU4366
 12608 4516 480FA3CD 		bt	rbp, rcx	# *_349, index
 12609 451a 0F824AFF 		jc	.L830	#,
 12609      FFFF
 12610              	.LVL838:
 12611              		.p2align 4,,10
 12612              		.p2align 3
 12613              	.L831:
 112:sieve_extend.c **** }
 12614              		.loc 1 112 5 is_stmt 1 view .LVU4367
 112:sieve_extend.c **** }
 12615              		.loc 1 112 5 is_stmt 0 view .LVU4368
 12616              	.LBE590:
 12617              	.LBE591:
 804:sieve_extend.c ****     }
 12618              		.loc 1 804 9 is_stmt 1 view .LVU4369
 12619              	# sieve_extend.c:804:         start = prime * prime * 2 + prime * 2;
 804:sieve_extend.c ****     }
 12620              		.loc 1 804 35 is_stmt 0 view .LVU4370
 12621 4520 4C8D4901 		lea	r9, 1[rcx]	# _413,
 12622 4524 4C8D0409 		lea	r8, [rcx+rcx]	# _939,
 12623              	.LVL839:
 12624              	# sieve_extend.c:804:         start = prime * prime * 2 + prime * 2;
 804:sieve_extend.c ****     }
 12625              		.loc 1 804 15 view .LVU4371
 12626 4528 4C89C8   		mov	rax, r9	# index, _413
 12627 452b 490FAFC0 		imul	rax, r8	# index, _939
GAS LISTING /tmp/ccdGK7kM.s 			page 340


 12628              	.LVL840:
 798:sieve_extend.c ****         step  = prime * 2 + 1;
 12629              		.loc 1 798 11 is_stmt 1 view .LVU4372
 12630 452f 4939C2   		cmp	r10, rax	# block_stop, index
 12631 4532 0F82C9FB 		jb	.L1380	#,
 12631      FFFF
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 12632              		.loc 1 799 9 view .LVU4373
 12633              	# sieve_extend.c:799:         step  = prime * 2 + 1;
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 12634              		.loc 1 799 15 is_stmt 0 view .LVU4374
 12635 4538 49FFC0   		inc	r8	# step
 12636              	.LVL841:
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12637              		.loc 1 800 9 is_stmt 1 view .LVU4375
 12638              	# sieve_extend.c:800:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12639              		.loc 1 800 12 is_stmt 0 view .LVU4376
 12640 453b 4983F840 		cmp	r8, 64	# step,
 12641 453f 0F864BFC 		jbe	.L864	#,
 12641      FFFF
 12642              	.LVL842:
 12643              	.L824:
 825:sieve_extend.c ****         step  = prime * 2 + 1;
 12644              		.loc 1 825 11 is_stmt 1 view .LVU4377
 826:sieve_extend.c ****         if unlikely(step > VECTOR_SIZE_counter*3/4) break;
 12645              		.loc 1 826 9 view .LVU4378
 827:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12646              		.loc 1 827 9 view .LVU4379
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 12647              		.loc 1 834 11 view .LVU4380
 12648              	.LBB592:
 12649              	.LBB542:
 12650              	.LBB539:
 12651              	.LBB529:
 12652              	.LBB530:
 12653              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12654              		.loc 1 189 29 is_stmt 0 view .LVU4381
 12655 4545 440FB644 		movzx	r8d, BYTE PTR 40[rsp]	# tmp1670, %sfp
 12655      2428
 12656              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12657              		.loc 1 163 20 view .LVU4382
 12658 454b 4C89D3   		mov	rbx, r10	# range_stop_word, block_stop
 12659 454e 48C1EB06 		shr	rbx, 6	# range_stop_word,
 12660              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12661              		.loc 1 189 29 view .LVU4383
 12662 4552 49C7C6FF 		mov	r14, -1	# tmp1669,
 12662      FFFFFF
 12663 4559 C442BBF7 		shrx	r13, r14, r8	# _667, tmp1669, tmp1670
 12663      EE
 12664              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12665              		.loc 1 163 20 view .LVU4384
 12666 455e 48895C24 		mov	QWORD PTR 16[rsp], rbx	# %sfp, range_stop_word
GAS LISTING /tmp/ccdGK7kM.s 			page 341


 12666      10
 12667              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12668              		.loc 1 189 29 view .LVU4385
 12669 4563 4C896C24 		mov	QWORD PTR 8[rsp], r13	# %sfp, _667
 12669      08
 12670              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12671              		.loc 1 182 41 view .LVU4386
 12672 4568 4D8D1CDF 		lea	r11, [r15+rbx*8]	# range_stop_ptr,
 12673              	.LVL843:
 12674 456c 0F1F4000 		.p2align 4,,10
 12675              		.p2align 3
 12676              	.L865:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12677              		.loc 1 182 41 view .LVU4387
 12678              	.LBE530:
 12679              	.LBE529:
 12680              	.LBE539:
 12681              	.LBE542:
 12682              	.LBE592:
 835:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12683              		.loc 1 835 9 is_stmt 1 view .LVU4388
 12684              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12685              		.loc 1 836 12 is_stmt 0 view .LVU4389
 12686 4570 488B1424 		mov	rdx, QWORD PTR [rsp]	# block_start, %sfp
 12687              	# sieve_extend.c:835:         step  = prime * 2 + 1;
 835:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12688              		.loc 1 835 15 view .LVU4390
 12689 4574 488D6C09 		lea	rbp, 1[rcx+rcx]	# step,
 12689      01
 12690              	.LVL844:
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12691              		.loc 1 836 9 is_stmt 1 view .LVU4391
 12692              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12693              		.loc 1 836 12 is_stmt 0 view .LVU4392
 12694 4579 4939D1   		cmp	r9, rdx	# _413, block_start
 12695 457c 7713     		ja	.L843	#,
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12696              		.loc 1 836 47 is_stmt 1 view .LVU4393
 12697              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12698              		.loc 1 836 67 is_stmt 0 view .LVU4394
 12699 457e 488D0411 		lea	rax, [rcx+rdx]	# _395,
 12700              	.LVL845:
 12701              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12702              		.loc 1 836 108 view .LVU4395
 12703 4582 31D2     		xor	edx, edx	# tmp738
 12704              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12705              		.loc 1 836 75 view .LVU4396
 12706 4584 488D3C08 		lea	rdi, [rax+rcx]	# tmp736,
 12707              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
GAS LISTING /tmp/ccdGK7kM.s 			page 342


 12708              		.loc 1 836 108 view .LVU4397
 12709 4588 48F7F5   		div	rbp	# step
 12710              	.LVL846:
 12711              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12712              		.loc 1 836 53 view .LVU4398
 12713 458b 4889F8   		mov	rax, rdi	# tmp736, tmp736
 12714 458e 4829D0   		sub	rax, rdx	# tmp736, tmp738
 12715              	.LVL847:
 12716              	.L843:
 837:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 12717              		.loc 1 837 9 is_stmt 1 view .LVU4399
 12718              	# sieve_extend.c:837:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 837:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 12719              		.loc 1 837 12 is_stmt 0 view .LVU4400
 12720 4591 4989ED   		mov	r13, rbp	# tmp740, step
 12721 4594 49C1E506 		sal	r13, 6	# tmp740,
 12722 4598 4901C5   		add	r13, rax	# _401, index
 12723 459b 4D39EA   		cmp	r10, r13	# block_stop, _401
 12724 459e 0F823403 		jb	.L844	#,
 12724      0000
 12725              	.LVL848:
 12726              	.LBB593:
 12727              	.LBB543:
 12728              	.LBB540:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 12729              		.loc 1 381 50 is_stmt 1 view .LVU4401
 12730              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 12731              		.loc 1 381 5 is_stmt 0 view .LVU4402
 12732 45a4 4C39E8   		cmp	rax, r13	# index, _401
 12733 45a7 0F83BC01 		jnb	.L855	#,
 12733      0000
 12734              	.LBB535:
 12735              	.LBB531:
 12736              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12737              		.loc 1 165 133 view .LVU4403
 12738 45ad 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 12738      10
 12739              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12740              		.loc 1 165 110 view .LVU4404
 12741 45b2 4C8D44AD 		lea	r8, 0[rbp+rbp*4]	# tmp750,
 12741      00
 12742              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12743              		.loc 1 165 133 view .LVU4405
 12744 45b7 4889F3   		mov	rbx, rsi	# tmp752, range_stop_word
 12745 45ba 4C29C3   		sub	rbx, r8	# tmp752, tmp750
 12746              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12747              		.loc 1 165 53 view .LVU4406
 12748 45bd 498D1CDF 		lea	rbx, [r15+rbx*8]	# tmp754,
 12749 45c1 4C39C6   		cmp	rsi, r8	# range_stop_word, tmp750
 12750 45c4 4989EE   		mov	r14, rbp	# _1504, step
 12751 45c7 490F46DF 		cmovbe	rbx, r15	# _30,, fast_loop_ptr
GAS LISTING /tmp/ccdGK7kM.s 			page 343


 12752              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 12753              		.loc 1 171 17 view .LVU4407
 12754 45cb 488D0CED 		lea	rcx, 0[0+rbp*8]	# _635,
 12754      00000000 
 12755              	.LVL849:
 171:sieve_extend.c ****        *index_ptr |= mask;
 12756              		.loc 1 171 17 view .LVU4408
 12757 45d3 49C1E003 		sal	r8, 3	# tmp758,
 12758 45d7 49C1E604 		sal	r14, 4	# _1504,
 12759 45db 0F1F4400 		.p2align 4,,10
 12759      00
 12760              		.p2align 3
 12761              	.L854:
 171:sieve_extend.c ****        *index_ptr |= mask;
 12762              		.loc 1 171 17 view .LVU4409
 12763              	.LBE531:
 12764              	.LBE535:
 382:sieve_extend.c ****     }
 12765              		.loc 1 382 9 is_stmt 1 view .LVU4410
 12766 45e0 4889C7   		mov	rdi, rax	# tmp761, index
 12767 45e3 48C1EF06 		shr	rdi, 6	# tmp761,
 12768              	.LBB536:
 12769              	.LBB532:
 12770              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12771              		.loc 1 164 78 is_stmt 0 view .LVU4411
 12772 45e7 498D14FF 		lea	rdx, [r15+rdi*8]	# index_ptr,
 12773              	.LBE532:
 12774              	.LBE536:
 12775              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 12776              		.loc 1 382 9 view .LVU4412
 12777 45eb C4C2F9F7 		shlx	rsi, r12, rax	# _620, tmp821, index
 12777      F4
 12778              	.LVL850:
 12779              	.LBB537:
 12780              	.LBI529:
 135:sieve_extend.c **** //#if __APPLE__
 12781              		.loc 1 135 20 is_stmt 1 view .LVU4413
 12782              	.LBB533:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12783              		.loc 1 163 4 view .LVU4414
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12784              		.loc 1 164 4 view .LVU4415
 165:sieve_extend.c **** 
 12785              		.loc 1 165 4 view .LVU4416
 169:sieve_extend.c ****        *index_ptr |= mask;
 12786              		.loc 1 169 4 view .LVU4417
 169:sieve_extend.c ****        *index_ptr |= mask;
 12787              		.loc 1 169 10 view .LVU4418
 12788 45f0 4839DA   		cmp	rdx, rbx	# index_ptr, fast_loop_ptr
 12789 45f3 0F83FF00 		jnb	.L849	#,
 12789      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 12790              		.loc 1 169 10 is_stmt 0 view .LVU4419
 12791 45f9 4A8D3C32 		lea	rdi, [rdx+r14]	# ivtmp.477,
GAS LISTING /tmp/ccdGK7kM.s 			page 344


 12792              	.L850:
 170:sieve_extend.c ****        index_ptr+=step;
 12793              		.loc 1 170 8 is_stmt 1 view .LVU4420
 12794              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12795              		.loc 1 170 19 is_stmt 0 view .LVU4421
 12796 45fd 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12797              		.loc 1 171 8 is_stmt 1 view .LVU4422
 12798              	.LVL851:
 172:sieve_extend.c ****        index_ptr+=step;
 12799              		.loc 1 172 8 view .LVU4423
 12800              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12801              		.loc 1 172 19 is_stmt 0 view .LVU4424
 12802 4600 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12803              		.loc 1 173 8 is_stmt 1 view .LVU4425
 12804              	.LVL852:
 174:sieve_extend.c ****        index_ptr+=step;
 12805              		.loc 1 174 8 view .LVU4426
 12806              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12807              		.loc 1 174 19 is_stmt 0 view .LVU4427
 12808 4604 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12809              		.loc 1 175 8 is_stmt 1 view .LVU4428
 12810              	.LVL853:
 176:sieve_extend.c ****        index_ptr+=step;
 12811              		.loc 1 176 8 view .LVU4429
 12812              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12813              		.loc 1 176 19 is_stmt 0 view .LVU4430
 12814 4607 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12815              		.loc 1 177 8 is_stmt 1 view .LVU4431
 12816              	.LVL854:
 178:sieve_extend.c ****        index_ptr+=step;
 12817              		.loc 1 178 8 view .LVU4432
 12818 460b 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12819              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12820              		.loc 1 178 19 is_stmt 0 view .LVU4433
 12821 460e 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12822              		.loc 1 179 8 is_stmt 1 view .LVU4434
 12823 4612 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12824              	.LVL855:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12825              		.loc 1 169 10 view .LVU4435
 12826 4615 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 12827 4618 0F86DA00 		jbe	.L849	#,
 12827      0000
 170:sieve_extend.c ****        index_ptr+=step;
 12828              		.loc 1 170 8 view .LVU4436
 12829              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccdGK7kM.s 			page 345


 12830              		.loc 1 170 19 is_stmt 0 view .LVU4437
 12831 461e 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12832              		.loc 1 171 8 is_stmt 1 view .LVU4438
 12833              	.LVL856:
 172:sieve_extend.c ****        index_ptr+=step;
 12834              		.loc 1 172 8 view .LVU4439
 12835              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12836              		.loc 1 172 19 is_stmt 0 view .LVU4440
 12837 4621 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12838              		.loc 1 173 8 is_stmt 1 view .LVU4441
 12839              	.LVL857:
 174:sieve_extend.c ****        index_ptr+=step;
 12840              		.loc 1 174 8 view .LVU4442
 12841              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12842              		.loc 1 174 19 is_stmt 0 view .LVU4443
 12843 4625 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12844              		.loc 1 175 8 is_stmt 1 view .LVU4444
 12845              	.LVL858:
 176:sieve_extend.c ****        index_ptr+=step;
 12846              		.loc 1 176 8 view .LVU4445
 12847              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12848              		.loc 1 176 19 is_stmt 0 view .LVU4446
 12849 4628 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12850              		.loc 1 177 8 is_stmt 1 view .LVU4447
 12851              	.LVL859:
 178:sieve_extend.c ****        index_ptr+=step;
 12852              		.loc 1 178 8 view .LVU4448
 12853 462c 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12854              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12855              		.loc 1 178 19 is_stmt 0 view .LVU4449
 12856 462f 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12857              		.loc 1 179 8 is_stmt 1 view .LVU4450
 12858 4633 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12859              	.LVL860:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12860              		.loc 1 169 10 view .LVU4451
 12861 4636 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 12862 4639 0F86B900 		jbe	.L849	#,
 12862      0000
 170:sieve_extend.c ****        index_ptr+=step;
 12863              		.loc 1 170 8 view .LVU4452
 12864              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12865              		.loc 1 170 19 is_stmt 0 view .LVU4453
 12866 463f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12867              		.loc 1 171 8 is_stmt 1 view .LVU4454
 12868              	.LVL861:
GAS LISTING /tmp/ccdGK7kM.s 			page 346


 172:sieve_extend.c ****        index_ptr+=step;
 12869              		.loc 1 172 8 view .LVU4455
 12870              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12871              		.loc 1 172 19 is_stmt 0 view .LVU4456
 12872 4642 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12873              		.loc 1 173 8 is_stmt 1 view .LVU4457
 12874              	.LVL862:
 174:sieve_extend.c ****        index_ptr+=step;
 12875              		.loc 1 174 8 view .LVU4458
 12876              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12877              		.loc 1 174 19 is_stmt 0 view .LVU4459
 12878 4646 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12879              		.loc 1 175 8 is_stmt 1 view .LVU4460
 12880              	.LVL863:
 176:sieve_extend.c ****        index_ptr+=step;
 12881              		.loc 1 176 8 view .LVU4461
 12882              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12883              		.loc 1 176 19 is_stmt 0 view .LVU4462
 12884 4649 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12885              		.loc 1 177 8 is_stmt 1 view .LVU4463
 12886              	.LVL864:
 178:sieve_extend.c ****        index_ptr+=step;
 12887              		.loc 1 178 8 view .LVU4464
 12888 464d 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12889              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12890              		.loc 1 178 19 is_stmt 0 view .LVU4465
 12891 4650 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12892              		.loc 1 179 8 is_stmt 1 view .LVU4466
 12893 4654 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12894              	.LVL865:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12895              		.loc 1 169 10 view .LVU4467
 12896 4657 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 12897 465a 0F869800 		jbe	.L849	#,
 12897      0000
 170:sieve_extend.c ****        index_ptr+=step;
 12898              		.loc 1 170 8 view .LVU4468
 12899              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12900              		.loc 1 170 19 is_stmt 0 view .LVU4469
 12901 4660 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12902              		.loc 1 171 8 is_stmt 1 view .LVU4470
 12903              	.LVL866:
 172:sieve_extend.c ****        index_ptr+=step;
 12904              		.loc 1 172 8 view .LVU4471
 12905              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12906              		.loc 1 172 19 is_stmt 0 view .LVU4472
GAS LISTING /tmp/ccdGK7kM.s 			page 347


 12907 4663 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12908              		.loc 1 173 8 is_stmt 1 view .LVU4473
 12909              	.LVL867:
 174:sieve_extend.c ****        index_ptr+=step;
 12910              		.loc 1 174 8 view .LVU4474
 12911              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12912              		.loc 1 174 19 is_stmt 0 view .LVU4475
 12913 4667 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12914              		.loc 1 175 8 is_stmt 1 view .LVU4476
 12915              	.LVL868:
 176:sieve_extend.c ****        index_ptr+=step;
 12916              		.loc 1 176 8 view .LVU4477
 12917              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12918              		.loc 1 176 19 is_stmt 0 view .LVU4478
 12919 466a 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12920              		.loc 1 177 8 is_stmt 1 view .LVU4479
 12921              	.LVL869:
 178:sieve_extend.c ****        index_ptr+=step;
 12922              		.loc 1 178 8 view .LVU4480
 12923 466e 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12924              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12925              		.loc 1 178 19 is_stmt 0 view .LVU4481
 12926 4671 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12927              		.loc 1 179 8 is_stmt 1 view .LVU4482
 12928 4675 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12929              	.LVL870:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12930              		.loc 1 169 10 view .LVU4483
 12931 4678 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 12932 467b 767B     		jbe	.L849	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12933              		.loc 1 170 8 view .LVU4484
 12934              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12935              		.loc 1 170 19 is_stmt 0 view .LVU4485
 12936 467d 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12937              		.loc 1 171 8 is_stmt 1 view .LVU4486
 12938              	.LVL871:
 172:sieve_extend.c ****        index_ptr+=step;
 12939              		.loc 1 172 8 view .LVU4487
 12940              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12941              		.loc 1 172 19 is_stmt 0 view .LVU4488
 12942 4680 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12943              		.loc 1 173 8 is_stmt 1 view .LVU4489
 12944              	.LVL872:
 174:sieve_extend.c ****        index_ptr+=step;
 12945              		.loc 1 174 8 view .LVU4490
GAS LISTING /tmp/ccdGK7kM.s 			page 348


 12946              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12947              		.loc 1 174 19 is_stmt 0 view .LVU4491
 12948 4684 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12949              		.loc 1 175 8 is_stmt 1 view .LVU4492
 12950              	.LVL873:
 176:sieve_extend.c ****        index_ptr+=step;
 12951              		.loc 1 176 8 view .LVU4493
 12952              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12953              		.loc 1 176 19 is_stmt 0 view .LVU4494
 12954 4687 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12955              		.loc 1 177 8 is_stmt 1 view .LVU4495
 12956              	.LVL874:
 178:sieve_extend.c ****        index_ptr+=step;
 12957              		.loc 1 178 8 view .LVU4496
 12958 468b 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12959              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12960              		.loc 1 178 19 is_stmt 0 view .LVU4497
 12961 468e 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12962              		.loc 1 179 8 is_stmt 1 view .LVU4498
 12963 4692 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12964              	.LVL875:
 169:sieve_extend.c ****        *index_ptr |= mask;
 12965              		.loc 1 169 10 view .LVU4499
 12966 4695 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 12967 4698 765E     		jbe	.L849	#,
 170:sieve_extend.c ****        index_ptr+=step;
 12968              		.loc 1 170 8 view .LVU4500
 12969              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 12970              		.loc 1 170 19 is_stmt 0 view .LVU4501
 12971 469a 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 12972              		.loc 1 171 8 is_stmt 1 view .LVU4502
 12973              	.LVL876:
 172:sieve_extend.c ****        index_ptr+=step;
 12974              		.loc 1 172 8 view .LVU4503
 12975              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 12976              		.loc 1 172 19 is_stmt 0 view .LVU4504
 12977 469d 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 12978              		.loc 1 173 8 is_stmt 1 view .LVU4505
 12979              	.LVL877:
 174:sieve_extend.c ****        index_ptr+=step;
 12980              		.loc 1 174 8 view .LVU4506
 12981              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 12982              		.loc 1 174 19 is_stmt 0 view .LVU4507
 12983 46a1 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 12984              		.loc 1 175 8 is_stmt 1 view .LVU4508
GAS LISTING /tmp/ccdGK7kM.s 			page 349


 12985              	.LVL878:
 176:sieve_extend.c ****        index_ptr+=step;
 12986              		.loc 1 176 8 view .LVU4509
 12987              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 12988              		.loc 1 176 19 is_stmt 0 view .LVU4510
 12989 46a4 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 12990              		.loc 1 177 8 is_stmt 1 view .LVU4511
 12991              	.LVL879:
 178:sieve_extend.c ****        index_ptr+=step;
 12992              		.loc 1 178 8 view .LVU4512
 12993 46a8 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 12994              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 12995              		.loc 1 178 19 is_stmt 0 view .LVU4513
 12996 46ab 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 12997              		.loc 1 179 8 is_stmt 1 view .LVU4514
 12998 46af 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 12999              	.LVL880:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13000              		.loc 1 169 10 view .LVU4515
 13001 46b2 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13002 46b5 7641     		jbe	.L849	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13003              		.loc 1 170 8 view .LVU4516
 13004              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13005              		.loc 1 170 19 is_stmt 0 view .LVU4517
 13006 46b7 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13007              		.loc 1 171 8 is_stmt 1 view .LVU4518
 13008              	.LVL881:
 172:sieve_extend.c ****        index_ptr+=step;
 13009              		.loc 1 172 8 view .LVU4519
 13010              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13011              		.loc 1 172 19 is_stmt 0 view .LVU4520
 13012 46ba 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13013              		.loc 1 173 8 is_stmt 1 view .LVU4521
 13014              	.LVL882:
 174:sieve_extend.c ****        index_ptr+=step;
 13015              		.loc 1 174 8 view .LVU4522
 13016              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13017              		.loc 1 174 19 is_stmt 0 view .LVU4523
 13018 46be 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13019              		.loc 1 175 8 is_stmt 1 view .LVU4524
 13020              	.LVL883:
 176:sieve_extend.c ****        index_ptr+=step;
 13021              		.loc 1 176 8 view .LVU4525
 13022              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13023              		.loc 1 176 19 is_stmt 0 view .LVU4526
GAS LISTING /tmp/ccdGK7kM.s 			page 350


 13024 46c1 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13025              		.loc 1 177 8 is_stmt 1 view .LVU4527
 13026              	.LVL884:
 178:sieve_extend.c ****        index_ptr+=step;
 13027              		.loc 1 178 8 view .LVU4528
 13028 46c5 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 13029              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13030              		.loc 1 178 19 is_stmt 0 view .LVU4529
 13031 46c8 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13032              		.loc 1 179 8 is_stmt 1 view .LVU4530
 13033 46cc 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 13034              	.LVL885:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13035              		.loc 1 169 10 view .LVU4531
 13036 46cf 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13037 46d2 7624     		jbe	.L849	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13038              		.loc 1 170 8 view .LVU4532
 13039              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13040              		.loc 1 170 19 is_stmt 0 view .LVU4533
 13041 46d4 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_913, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13042              		.loc 1 171 8 is_stmt 1 view .LVU4534
 13043              	.LVL886:
 172:sieve_extend.c ****        index_ptr+=step;
 13044              		.loc 1 172 8 view .LVU4535
 13045              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13046              		.loc 1 172 19 is_stmt 0 view .LVU4536
 13047 46d7 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_913, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13048              		.loc 1 173 8 is_stmt 1 view .LVU4537
 13049              	.LVL887:
 174:sieve_extend.c ****        index_ptr+=step;
 13050              		.loc 1 174 8 view .LVU4538
 13051              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13052              		.loc 1 174 19 is_stmt 0 view .LVU4539
 13053 46db 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1496, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13054              		.loc 1 175 8 is_stmt 1 view .LVU4540
 13055              	.LVL888:
 176:sieve_extend.c ****        index_ptr+=step;
 13056              		.loc 1 176 8 view .LVU4541
 13057              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13058              		.loc 1 176 19 is_stmt 0 view .LVU4542
 13059 46de 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1496, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13060              		.loc 1 177 8 is_stmt 1 view .LVU4543
 13061              	.LVL889:
 178:sieve_extend.c ****        index_ptr+=step;
 13062              		.loc 1 178 8 view .LVU4544
GAS LISTING /tmp/ccdGK7kM.s 			page 351


 13063 46e2 4C01C7   		add	rdi, r8	# ivtmp.477, tmp758
 13064              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13065              		.loc 1 178 19 is_stmt 0 view .LVU4545
 13066 46e5 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_913, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13067              		.loc 1 179 8 is_stmt 1 view .LVU4546
 13068 46e9 4C01C2   		add	rdx, r8	# index_ptr, tmp758
 13069              	.LVL890:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13070              		.loc 1 169 10 view .LVU4547
 13071 46ec 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13072 46ef 0F8708FF 		ja	.L850	#,
 13072      FFFF
 13073              		.p2align 4,,10
 13074 46f5 0F1F00   		.p2align 3
 13075              	.L849:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13076              		.loc 1 182 4 view .LVU4548
 183:sieve_extend.c ****        *index_ptr |= mask;
 13077              		.loc 1 183 4 view .LVU4549
 183:sieve_extend.c ****        *index_ptr |= mask;
 13078              		.loc 1 183 10 view .LVU4550
 13079 46f8 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13080 46fb 765B     		jbe	.L851	#,
 13081              	.L852:
 184:sieve_extend.c ****        index_ptr+=step;
 13082              		.loc 1 184 8 view .LVU4551
 13083              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13084              		.loc 1 184 19 is_stmt 0 view .LVU4552
 13085 46fd 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13086              		.loc 1 185 8 is_stmt 1 view .LVU4553
 13087              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13088              		.loc 1 185 17 is_stmt 0 view .LVU4554
 13089 4700 4801CA   		add	rdx, rcx	# index_ptr, _635
 13090              	.LVL891:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13091              		.loc 1 183 10 is_stmt 1 view .LVU4555
 13092 4703 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13093 4706 7650     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13094              		.loc 1 184 8 view .LVU4556
 13095              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13096              		.loc 1 184 19 is_stmt 0 view .LVU4557
 13097 4708 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13098              		.loc 1 185 8 is_stmt 1 view .LVU4558
 13099              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13100              		.loc 1 185 17 is_stmt 0 view .LVU4559
 13101 470b 4801CA   		add	rdx, rcx	# index_ptr, _635
 13102              	.LVL892:
 183:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccdGK7kM.s 			page 352


 13103              		.loc 1 183 10 is_stmt 1 view .LVU4560
 13104 470e 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13105 4711 7645     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13106              		.loc 1 184 8 view .LVU4561
 13107              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13108              		.loc 1 184 19 is_stmt 0 view .LVU4562
 13109 4713 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13110              		.loc 1 185 8 is_stmt 1 view .LVU4563
 13111              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13112              		.loc 1 185 17 is_stmt 0 view .LVU4564
 13113 4716 4801CA   		add	rdx, rcx	# index_ptr, _635
 13114              	.LVL893:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13115              		.loc 1 183 10 is_stmt 1 view .LVU4565
 13116 4719 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13117 471c 763A     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13118              		.loc 1 184 8 view .LVU4566
 13119              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13120              		.loc 1 184 19 is_stmt 0 view .LVU4567
 13121 471e 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13122              		.loc 1 185 8 is_stmt 1 view .LVU4568
 13123              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13124              		.loc 1 185 17 is_stmt 0 view .LVU4569
 13125 4721 4801CA   		add	rdx, rcx	# index_ptr, _635
 13126              	.LVL894:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13127              		.loc 1 183 10 is_stmt 1 view .LVU4570
 13128 4724 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13129 4727 762F     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13130              		.loc 1 184 8 view .LVU4571
 13131              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13132              		.loc 1 184 19 is_stmt 0 view .LVU4572
 13133 4729 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13134              		.loc 1 185 8 is_stmt 1 view .LVU4573
 13135              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13136              		.loc 1 185 17 is_stmt 0 view .LVU4574
 13137 472c 4801CA   		add	rdx, rcx	# index_ptr, _635
 13138              	.LVL895:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13139              		.loc 1 183 10 is_stmt 1 view .LVU4575
 13140 472f 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13141 4732 7624     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13142              		.loc 1 184 8 view .LVU4576
 13143              	# sieve_extend.c:184:        *index_ptr |= mask;
GAS LISTING /tmp/ccdGK7kM.s 			page 353


 184:sieve_extend.c ****        index_ptr+=step;
 13144              		.loc 1 184 19 is_stmt 0 view .LVU4577
 13145 4734 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13146              		.loc 1 185 8 is_stmt 1 view .LVU4578
 13147              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13148              		.loc 1 185 17 is_stmt 0 view .LVU4579
 13149 4737 4801CA   		add	rdx, rcx	# index_ptr, _635
 13150              	.LVL896:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13151              		.loc 1 183 10 is_stmt 1 view .LVU4580
 13152 473a 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13153 473d 7619     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13154              		.loc 1 184 8 view .LVU4581
 13155              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13156              		.loc 1 184 19 is_stmt 0 view .LVU4582
 13157 473f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13158              		.loc 1 185 8 is_stmt 1 view .LVU4583
 13159              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13160              		.loc 1 185 17 is_stmt 0 view .LVU4584
 13161 4742 4801CA   		add	rdx, rcx	# index_ptr, _635
 13162              	.LVL897:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13163              		.loc 1 183 10 is_stmt 1 view .LVU4585
 13164 4745 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13165 4748 760E     		jbe	.L851	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13166              		.loc 1 184 8 view .LVU4586
 13167              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13168              		.loc 1 184 19 is_stmt 0 view .LVU4587
 13169 474a 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_911, offset: 0B], _620
 185:sieve_extend.c ****    }
 13170              		.loc 1 185 8 is_stmt 1 view .LVU4588
 13171              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13172              		.loc 1 185 17 is_stmt 0 view .LVU4589
 13173 474d 4801CA   		add	rdx, rcx	# index_ptr, _635
 13174              	.LVL898:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13175              		.loc 1 183 10 is_stmt 1 view .LVU4590
 13176 4750 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13177 4753 77A8     		ja	.L852	#,
 13178              		.p2align 4,,10
 13179 4755 0F1F00   		.p2align 3
 13180              	.L851:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13181              		.loc 1 188 4 view .LVU4591
 13182              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13183              		.loc 1 188 7 is_stmt 0 view .LVU4592
 13184 4758 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
GAS LISTING /tmp/ccdGK7kM.s 			page 354


 13185 475b 7463     		je	.L1399	#,
 13186              	.LVL899:
 13187              	.L853:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13188              		.loc 1 188 7 view .LVU4593
 13189              	.LBE533:
 13190              	.LBE537:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13191              		.loc 1 381 77 is_stmt 1 view .LVU4594
 13192              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13193              		.loc 1 381 83 is_stmt 0 view .LVU4595
 13194 475d 4801E8   		add	rax, rbp	# index, step
 13195              	.LVL900:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13196              		.loc 1 381 50 is_stmt 1 view .LVU4596
 13197              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13198              		.loc 1 381 5 is_stmt 0 view .LVU4597
 13199 4760 4939C5   		cmp	r13, rax	# _401, index
 13200 4763 0F8777FE 		ja	.L854	#,
 13200      FFFF
 13201              	.L855:
 13202              	.LVL901:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13203              		.loc 1 381 5 view .LVU4598
 13204              	.LBE540:
 13205              	.LBE543:
 13206              	.LBE593:
 839:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13207              		.loc 1 839 9 is_stmt 1 view .LVU4599
 13208              	.LBB594:
 13209              	.LBI594:
 116:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 13210              		.loc 1 116 25 view .LVU4600
 13211              	.LBB595:
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13212              		.loc 1 119 4 view .LVU4601
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13213              		.loc 1 120 4 view .LVU4602
 13214              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13215              		.loc 1 119 23 is_stmt 0 view .LVU4603
 13216 4769 4C89C8   		mov	rax, r9	# index_word, _413
 13217              	.LVL902:
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13218              		.loc 1 119 23 view .LVU4604
 13219 476c 48C1E806 		shr	rax, 6	# index_word,
 13220              	.LVL903:
 13221              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13222              		.loc 1 121 89 view .LVU4605
 13223 4770 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_591, *_591
 13224              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13225              		.loc 1 120 15 view .LVU4606
 13226 4774 4C89CD   		mov	rbp, r9	# index_bit, _413
GAS LISTING /tmp/ccdGK7kM.s 			page 355


 13227              	.LVL904:
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13228              		.loc 1 120 15 view .LVU4607
 13229 4777 83E53F   		and	ebp, 63	# index_bit,
 13230              	.LVL905:
 121:sieve_extend.c ****    index += distance;
 13231              		.loc 1 121 4 is_stmt 1 view .LVU4608
 13232              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13233              		.loc 1 121 25 is_stmt 0 view .LVU4609
 13234 477a 31DB     		xor	ebx, ebx	# distance
 13235              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13236              		.loc 1 121 89 view .LVU4610
 13237 477c C4C2D3F7 		shrx	rcx, r8, rbp	# tmp743, *_591, index_bit
 13237      C8
 13238              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13239              		.loc 1 121 66 view .LVU4611
 13240 4781 48F7D1   		not	rcx	# tmp745
 13241              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13242              		.loc 1 121 25 view .LVU4612
 13243 4784 F3480FBC 		tzcnt	rbx, rcx	# distance, tmp745
 13243      D9
 13244              	.LVL906:
 122:sieve_extend.c ****    distance += index_bit;
 13245              		.loc 1 122 4 is_stmt 1 view .LVU4613
 13246              	# sieve_extend.c:122:    index += distance;
 122:sieve_extend.c ****    distance += index_bit;
 13247              		.loc 1 122 10 is_stmt 0 view .LVU4614
 13248 4789 498D0C19 		lea	rcx, [r9+rbx]	# index,
 13249              	.LVL907:
 123:sieve_extend.c **** 
 13250              		.loc 1 123 4 is_stmt 1 view .LVU4615
 125:sieve_extend.c ****        index_word++;
 13251              		.loc 1 125 4 view .LVU4616
 125:sieve_extend.c ****        index_word++;
 13252              		.loc 1 125 10 view .LVU4617
 13253              	# sieve_extend.c:123:    distance += index_bit;
 123:sieve_extend.c **** 
 13254              		.loc 1 123 13 is_stmt 0 view .LVU4618
 13255 478d 4801EB   		add	rbx, rbp	# distance, index_bit
 13256              	.LVL908:
 13257              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 13258              		.loc 1 121 76 view .LVU4619
 13259 4790 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _590,
 13259      00000000 
 13260              	# sieve_extend.c:125:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 125:sieve_extend.c ****        index_word++;
 13261              		.loc 1 125 10 view .LVU4620
 13262 4798 4883FB40 		cmp	rbx, 64	# distance,
 13263 479c 0F849E02 		je	.L1400	#,
 13263      0000
 13264              	.LVL909:
 13265              	.L1247:
GAS LISTING /tmp/ccdGK7kM.s 			page 356


 131:sieve_extend.c **** }
 13266              		.loc 1 131 4 is_stmt 1 view .LVU4621
 131:sieve_extend.c **** }
 13267              		.loc 1 131 4 is_stmt 0 view .LVU4622
 13268              	.LBE595:
 13269              	.LBE594:
 840:sieve_extend.c ****     }
 13270              		.loc 1 840 9 is_stmt 1 view .LVU4623
 13271              	# sieve_extend.c:840:         start = prime * prime * 2 + prime * 2;
 840:sieve_extend.c ****     }
 13272              		.loc 1 840 35 is_stmt 0 view .LVU4624
 13273 47a2 4C8D4901 		lea	r9, 1[rcx]	# _413,
 13274              	# sieve_extend.c:840:         start = prime * prime * 2 + prime * 2;
 840:sieve_extend.c ****     }
 13275              		.loc 1 840 15 view .LVU4625
 13276 47a6 4C89C8   		mov	rax, r9	# tmp771, _413
 13277 47a9 480FAFC1 		imul	rax, rcx	# tmp771, index
 13278              	.LVL910:
 840:sieve_extend.c ****     }
 13279              		.loc 1 840 15 view .LVU4626
 13280 47ad 4801C0   		add	rax, rax	# index
 13281              	.LVL911:
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 13282              		.loc 1 834 11 is_stmt 1 view .LVU4627
 13283 47b0 4939C2   		cmp	r10, rax	# block_stop, index
 13284 47b3 0F83B7FD 		jnb	.L865	#,
 13284      FFFF
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 13285              		.loc 1 834 11 is_stmt 0 view .LVU4628
 13286 47b9 E943F9FF 		jmp	.L1380	#
 13286      FF
 13287              	.LVL912:
 13288 47be 6690     		.p2align 4,,10
 13289              		.p2align 3
 13290              	.L1399:
 13291              	.LBB597:
 13292              	.LBB544:
 13293              	.LBB541:
 13294              	.LBB538:
 13295              	.LBB534:
 189:sieve_extend.c ****    }
 13296              		.loc 1 189 7 is_stmt 1 view .LVU4629
 13297              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13298              		.loc 1 189 27 is_stmt 0 view .LVU4630
 13299 47c0 48237424 		and	rsi, QWORD PTR 8[rsp]	# tmp763, %sfp
 13299      08
 13300              	.LVL913:
 13301              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13302              		.loc 1 189 18 view .LVU4631
 13303 47c5 490933   		or	QWORD PTR [r11], rsi	# *index_ptr_910, tmp763
 13304 47c8 EB93     		jmp	.L853	#
 13305              	.LVL914:
 13306 47ca 660F1F44 		.p2align 4,,10
 13306      0000
 13307              		.p2align 3
GAS LISTING /tmp/ccdGK7kM.s 			page 357


 13308              	.L1398:
 189:sieve_extend.c ****    }
 13309              		.loc 1 189 18 view .LVU4632
 13310              	.LBE534:
 13311              	.LBE538:
 13312              	.LBE541:
 13313              	.LBE544:
 13314              	.LBE597:
 13315              	.LBB598:
 13316              	.LBB586:
 13317              	.LBB580:
 13318              	.LBB578:
 13319              	.LBB576:
 13320              	.LBB573:
 189:sieve_extend.c ****    }
 13321              		.loc 1 189 7 is_stmt 1 view .LVU4633
 13322              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13323              		.loc 1 189 27 is_stmt 0 view .LVU4634
 13324 47d0 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp728, %sfp
 13324      08
 13325              	.LVL915:
 13326              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13327              		.loc 1 189 18 view .LVU4635
 13328 47d5 48090B   		or	QWORD PTR [rbx], rcx	# *index_ptr_917, tmp728
 13329 47d8 E96CFCFF 		jmp	.L840	#
 13329      FF
 13330              	.LVL916:
 13331 47dd 0F1F00   		.p2align 4,,10
 13332              		.p2align 3
 13333              	.L828:
 189:sieve_extend.c ****    }
 13334              		.loc 1 189 18 view .LVU4636
 13335              	.LBE573:
 13336              	.LBE576:
 13337              	.LBE578:
 13338              	.LBE580:
 13339              	.LBB581:
 13340              	.LBB582:
 13341              	.LBB583:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13342              		.loc 1 267 54 is_stmt 1 view .LVU4637
 13343              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13344              		.loc 1 267 9 is_stmt 0 view .LVU4638
 13345 47e0 4939C2   		cmp	r10, rax	# block_stop, index
 13346 47e3 0F8269FC 		jb	.L832	#,
 13346      FFFF
 13347              	.LVL917:
 13348 47e9 0F1F8000 		.p2align 4,,10
 13348      000000
 13349              		.p2align 3
 13350              	.L834:
 13351              	.LBB584:
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13352              		.loc 1 268 13 is_stmt 1 view .LVU4639
GAS LISTING /tmp/ccdGK7kM.s 			page 358


 13353              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13354              		.loc 1 268 32 is_stmt 0 view .LVU4640
 13355 47f0 4989C5   		mov	r13, rax	# index_word, index
 13356 47f3 49C1ED06 		shr	r13, 6	# index_word,
 13357              	.LVL918:
 269:sieve_extend.c ****             #pragma ivdep
 13358              		.loc 1 269 13 is_stmt 1 view .LVU4641
 13359              	# sieve_extend.c:269:             register bitword_t mask = SAFE_ZERO;
 269:sieve_extend.c ****             #pragma ivdep
 13360              		.loc 1 269 32 is_stmt 0 view .LVU4642
 13361 47f7 4531DB   		xor	r11d, r11d	# mask
 13362              	.LVL919:
 13363              	.L833:
 271:sieve_extend.c ****                 mask |= markmask(index);
 13364              		.loc 1 271 13 is_stmt 1 view .LVU4643
 272:sieve_extend.c ****                 index += step;
 13365              		.loc 1 272 17 view .LVU4644
 13366              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13367              		.loc 1 272 25 is_stmt 0 view .LVU4645
 13368 47fa C4C2F9F7 		shlx	rsi, r12, rax	# tmp708, tmp821, index
 13368      F4
 13369              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13370              		.loc 1 273 23 view .LVU4646
 13371 47ff 4C01C0   		add	rax, r8	# index, step
 13372              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13373              		.loc 1 274 36 view .LVU4647
 13374 4802 4889C5   		mov	rbp, rax	# tmp710, index
 13375 4805 48C1ED06 		shr	rbp, 6	# tmp710,
 13376              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13377              		.loc 1 272 22 view .LVU4648
 13378 4809 4909F3   		or	r11, rsi	# mask, tmp708
 13379              	.LVL920:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13380              		.loc 1 273 17 is_stmt 1 view .LVU4649
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13381              		.loc 1 274 21 view .LVU4650
 13382              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13383              		.loc 1 274 13 is_stmt 0 view .LVU4651
 13384 480c 4939ED   		cmp	r13, rbp	# index_word, tmp710
 13385 480f 0F85AB00 		jne	.L1249	#,
 13385      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 13386              		.loc 1 271 13 is_stmt 1 view .LVU4652
 272:sieve_extend.c ****                 index += step;
 13387              		.loc 1 272 17 view .LVU4653
 13388              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13389              		.loc 1 272 25 is_stmt 0 view .LVU4654
 13390 4815 C442F9F7 		shlx	r14, r12, rax	# tmp983, tmp821, index
 13390      F4
 13391              	# sieve_extend.c:273:                 index += step;
GAS LISTING /tmp/ccdGK7kM.s 			page 359


 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13392              		.loc 1 273 23 view .LVU4655
 13393 481a 4C01C0   		add	rax, r8	# index, step
 13394              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13395              		.loc 1 274 36 view .LVU4656
 13396 481d 4889C1   		mov	rcx, rax	# tmp984, index
 13397 4820 48C1E906 		shr	rcx, 6	# tmp984,
 13398              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13399              		.loc 1 272 22 view .LVU4657
 13400 4824 4D09F3   		or	r11, r14	# mask, tmp983
 13401              	.LVL921:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13402              		.loc 1 273 17 is_stmt 1 view .LVU4658
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13403              		.loc 1 274 21 view .LVU4659
 13404              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13405              		.loc 1 274 13 is_stmt 0 view .LVU4660
 13406 4827 4939CD   		cmp	r13, rcx	# index_word, tmp984
 13407 482a 0F859000 		jne	.L1249	#,
 13407      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 13408              		.loc 1 271 13 is_stmt 1 view .LVU4661
 272:sieve_extend.c ****                 index += step;
 13409              		.loc 1 272 17 view .LVU4662
 13410              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13411              		.loc 1 272 25 is_stmt 0 view .LVU4663
 13412 4830 C4C2F9F7 		shlx	rdx, r12, rax	# tmp985, tmp821, index
 13412      D4
 13413              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13414              		.loc 1 273 23 view .LVU4664
 13415 4835 4C01C0   		add	rax, r8	# index, step
 13416              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13417              		.loc 1 274 36 view .LVU4665
 13418 4838 4889C7   		mov	rdi, rax	# tmp986, index
 13419 483b 48C1EF06 		shr	rdi, 6	# tmp986,
 13420              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13421              		.loc 1 272 22 view .LVU4666
 13422 483f 4909D3   		or	r11, rdx	# mask, tmp985
 13423              	.LVL922:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13424              		.loc 1 273 17 is_stmt 1 view .LVU4667
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13425              		.loc 1 274 21 view .LVU4668
 13426              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13427              		.loc 1 274 13 is_stmt 0 view .LVU4669
 13428 4842 4939FD   		cmp	r13, rdi	# index_word, tmp986
 13429 4845 7579     		jne	.L1249	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 13430              		.loc 1 271 13 is_stmt 1 view .LVU4670
GAS LISTING /tmp/ccdGK7kM.s 			page 360


 272:sieve_extend.c ****                 index += step;
 13431              		.loc 1 272 17 view .LVU4671
 13432              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13433              		.loc 1 272 25 is_stmt 0 view .LVU4672
 13434 4847 C4C2F9F7 		shlx	rsi, r12, rax	# tmp987, tmp821, index
 13434      F4
 13435              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13436              		.loc 1 273 23 view .LVU4673
 13437 484c 4C01C0   		add	rax, r8	# index, step
 13438              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13439              		.loc 1 274 36 view .LVU4674
 13440 484f 4889C5   		mov	rbp, rax	# tmp988, index
 13441 4852 48C1ED06 		shr	rbp, 6	# tmp988,
 13442              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13443              		.loc 1 272 22 view .LVU4675
 13444 4856 4909F3   		or	r11, rsi	# mask, tmp987
 13445              	.LVL923:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13446              		.loc 1 273 17 is_stmt 1 view .LVU4676
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13447              		.loc 1 274 21 view .LVU4677
 13448              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13449              		.loc 1 274 13 is_stmt 0 view .LVU4678
 13450 4859 4939ED   		cmp	r13, rbp	# index_word, tmp988
 13451 485c 7562     		jne	.L1249	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 13452              		.loc 1 271 13 is_stmt 1 view .LVU4679
 272:sieve_extend.c ****                 index += step;
 13453              		.loc 1 272 17 view .LVU4680
 13454              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13455              		.loc 1 272 25 is_stmt 0 view .LVU4681
 13456 485e C442F9F7 		shlx	r14, r12, rax	# tmp989, tmp821, index
 13456      F4
 13457              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13458              		.loc 1 273 23 view .LVU4682
 13459 4863 4C01C0   		add	rax, r8	# index, step
 13460              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13461              		.loc 1 274 36 view .LVU4683
 13462 4866 4889C1   		mov	rcx, rax	# tmp990, index
 13463 4869 48C1E906 		shr	rcx, 6	# tmp990,
 13464              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13465              		.loc 1 272 22 view .LVU4684
 13466 486d 4D09F3   		or	r11, r14	# mask, tmp989
 13467              	.LVL924:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13468              		.loc 1 273 17 is_stmt 1 view .LVU4685
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13469              		.loc 1 274 21 view .LVU4686
GAS LISTING /tmp/ccdGK7kM.s 			page 361


 13470              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13471              		.loc 1 274 13 is_stmt 0 view .LVU4687
 13472 4870 4939CD   		cmp	r13, rcx	# index_word, tmp990
 13473 4873 754B     		jne	.L1249	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 13474              		.loc 1 271 13 is_stmt 1 view .LVU4688
 272:sieve_extend.c ****                 index += step;
 13475              		.loc 1 272 17 view .LVU4689
 13476              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13477              		.loc 1 272 25 is_stmt 0 view .LVU4690
 13478 4875 C4C2F9F7 		shlx	rdx, r12, rax	# tmp991, tmp821, index
 13478      D4
 13479              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13480              		.loc 1 273 23 view .LVU4691
 13481 487a 4C01C0   		add	rax, r8	# index, step
 13482              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13483              		.loc 1 274 36 view .LVU4692
 13484 487d 4889C7   		mov	rdi, rax	# tmp992, index
 13485 4880 48C1EF06 		shr	rdi, 6	# tmp992,
 13486              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13487              		.loc 1 272 22 view .LVU4693
 13488 4884 4909D3   		or	r11, rdx	# mask, tmp991
 13489              	.LVL925:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13490              		.loc 1 273 17 is_stmt 1 view .LVU4694
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13491              		.loc 1 274 21 view .LVU4695
 13492              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13493              		.loc 1 274 13 is_stmt 0 view .LVU4696
 13494 4887 4939FD   		cmp	r13, rdi	# index_word, tmp992
 13495 488a 7534     		jne	.L1249	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 13496              		.loc 1 271 13 is_stmt 1 view .LVU4697
 272:sieve_extend.c ****                 index += step;
 13497              		.loc 1 272 17 view .LVU4698
 13498              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13499              		.loc 1 272 25 is_stmt 0 view .LVU4699
 13500 488c C4C2F9F7 		shlx	rsi, r12, rax	# tmp993, tmp821, index
 13500      F4
 13501              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13502              		.loc 1 273 23 view .LVU4700
 13503 4891 4C01C0   		add	rax, r8	# index, step
 13504              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13505              		.loc 1 274 36 view .LVU4701
 13506 4894 4889C5   		mov	rbp, rax	# tmp994, index
 13507 4897 48C1ED06 		shr	rbp, 6	# tmp994,
 13508              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccdGK7kM.s 			page 362


 13509              		.loc 1 272 22 view .LVU4702
 13510 489b 4909F3   		or	r11, rsi	# mask, tmp993
 13511              	.LVL926:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13512              		.loc 1 273 17 is_stmt 1 view .LVU4703
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13513              		.loc 1 274 21 view .LVU4704
 13514              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13515              		.loc 1 274 13 is_stmt 0 view .LVU4705
 13516 489e 4939ED   		cmp	r13, rbp	# index_word, tmp994
 13517 48a1 751D     		jne	.L1249	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 13518              		.loc 1 271 13 is_stmt 1 view .LVU4706
 272:sieve_extend.c ****                 index += step;
 13519              		.loc 1 272 17 view .LVU4707
 13520              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13521              		.loc 1 272 25 is_stmt 0 view .LVU4708
 13522 48a3 C442F9F7 		shlx	r14, r12, rax	# tmp995, tmp821, index
 13522      F4
 13523              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13524              		.loc 1 273 23 view .LVU4709
 13525 48a8 4C01C0   		add	rax, r8	# index, step
 13526              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13527              		.loc 1 274 36 view .LVU4710
 13528 48ab 4889C1   		mov	rcx, rax	# tmp996, index
 13529 48ae 48C1E906 		shr	rcx, 6	# tmp996,
 13530              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 13531              		.loc 1 272 22 view .LVU4711
 13532 48b2 4D09F3   		or	r11, r14	# mask, tmp995
 13533              	.LVL927:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 13534              		.loc 1 273 17 is_stmt 1 view .LVU4712
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13535              		.loc 1 274 21 view .LVU4713
 13536              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 13537              		.loc 1 274 13 is_stmt 0 view .LVU4714
 13538 48b5 4939CD   		cmp	r13, rcx	# index_word, tmp996
 13539 48b8 0F843CFF 		je	.L833	#,
 13539      FFFF
 13540 48be 6690     		.p2align 4,,10
 13541              		.p2align 3
 13542              	.L1249:
 277:sieve_extend.c ****         }
 13543              		.loc 1 277 13 is_stmt 1 view .LVU4715
 13544              	# sieve_extend.c:277:             bitarray[index_word] |= mask;
 277:sieve_extend.c ****         }
 13545              		.loc 1 277 34 is_stmt 0 view .LVU4716
 13546 48c0 4F091CEF 		or	QWORD PTR [r15+r13*8], r11	# *_534, mask
 277:sieve_extend.c ****         }
 13547              		.loc 1 277 34 view .LVU4717
 13548              	.LBE584:
GAS LISTING /tmp/ccdGK7kM.s 			page 363


 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13549              		.loc 1 267 54 is_stmt 1 view .LVU4718
 13550              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13551              		.loc 1 267 9 is_stmt 0 view .LVU4719
 13552 48c4 4939C2   		cmp	r10, rax	# block_stop, index
 13553 48c7 0F8323FF 		jnb	.L834	#,
 13553      FFFF
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13554              		.loc 1 267 9 view .LVU4720
 13555 48cd E980FBFF 		jmp	.L832	#
 13555      FF
 13556              	.LVL928:
 13557              		.p2align 4,,10
 13558 48d2 660F1F44 		.p2align 3
 13558      0000
 13559              	.L844:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13560              		.loc 1 267 9 view .LVU4721
 13561              	.LBE583:
 13562              	.LBE582:
 13563              	.LBE581:
 13564              	.LBE586:
 13565              	.LBE598:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 13566              		.loc 1 843 11 is_stmt 1 view .LVU4722
 13567 48d8 4C8B1C24 		mov	r11, QWORD PTR [rsp]	# block_start, %sfp
 13568 48dc 4939C2   		cmp	r10, rax	# block_stop, index
 13569 48df 0F821CF8 		jb	.L1380	#,
 13569      FFFF
 13570              	.LVL929:
 13571              		.p2align 4,,10
 13572 48e5 0F1F00   		.p2align 3
 13573              	.L848:
 844:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13574              		.loc 1 844 9 view .LVU4723
 13575              	# sieve_extend.c:844:         step  = prime * 2 + 1;
 844:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13576              		.loc 1 844 15 is_stmt 0 view .LVU4724
 13577 48e8 488D7409 		lea	rsi, 1[rcx+rcx]	# step,
 13577      01
 13578              	.LVL930:
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13579              		.loc 1 845 9 is_stmt 1 view .LVU4725
 13580              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13581              		.loc 1 845 12 is_stmt 0 view .LVU4726
 13582 48ed 4D39D9   		cmp	r9, r11	# _413, block_start
 13583 48f0 0F87AAF7 		ja	.L857	#,
 13583      FFFF
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13584              		.loc 1 845 47 is_stmt 1 view .LVU4727
 13585              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13586              		.loc 1 845 67 is_stmt 0 view .LVU4728
 13587 48f6 4A8D0419 		lea	rax, [rcx+r11]	# _417,
 13588              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccdGK7kM.s 			page 364


 845:sieve_extend.c ****         if likely(start <= block_stop)
 13589              		.loc 1 845 108 view .LVU4729
 13590 48fa 31D2     		xor	edx, edx	# tmp775
 13591              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13592              		.loc 1 845 75 view .LVU4730
 13593 48fc 4801C1   		add	rcx, rax	# tmp773, _417
 13594              	.LVL931:
 13595              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13596              		.loc 1 845 108 view .LVU4731
 13597 48ff 48F7F6   		div	rsi	# step
 13598              	.LVL932:
 13599              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 13600              		.loc 1 845 53 view .LVU4732
 13601 4902 4889C8   		mov	rax, rcx	# tmp773, tmp773
 13602 4905 4829D0   		sub	rax, rdx	# tmp773, tmp775
 13603              	.LVL933:
 846:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 13604              		.loc 1 846 9 is_stmt 1 view .LVU4733
 13605              	# sieve_extend.c:846:         if likely(start <= block_stop)
 846:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 13606              		.loc 1 846 12 is_stmt 0 view .LVU4734
 13607 4908 4939C2   		cmp	r10, rax	# block_stop, index
 13608 490b 0F829FF7 		jb	.L862	#,
 13608      FFFF
 13609              	.LVL934:
 13610              	.L861:
 13611              	.LBB599:
 13612              	.LBB561:
 307:sieve_extend.c ****     }
 13613              		.loc 1 307 9 is_stmt 1 view .LVU4735
 13614              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13615              		.loc 1 307 36 is_stmt 0 view .LVU4736
 13616 4911 4889C7   		mov	rdi, rax	# tmp784, index
 13617              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13618              		.loc 1 307 39 view .LVU4737
 13619 4914 C4C2F9F7 		shlx	rbp, r12, rax	# tmp787, tmp821, index
 13619      EC
 13620              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13621              		.loc 1 307 36 view .LVU4738
 13622 4919 48C1EF06 		shr	rdi, 6	# tmp784,
 13623              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13624              		.loc 1 306 68 view .LVU4739
 13625 491d 4801F0   		add	rax, rsi	# index, step
 13626              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13627              		.loc 1 307 36 view .LVU4740
 13628 4920 49092CFF 		or	QWORD PTR [r15+rdi*8], rbp	# *_428, tmp787
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13629              		.loc 1 306 62 is_stmt 1 view .LVU4741
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccdGK7kM.s 			page 365


 13630              		.loc 1 306 41 view .LVU4742
 13631              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13632              		.loc 1 306 5 is_stmt 0 view .LVU4743
 13633 4924 4939C2   		cmp	r10, rax	# block_stop, index
 13634 4927 0F8283F7 		jb	.L862	#,
 13634      FFFF
 307:sieve_extend.c ****     }
 13635              		.loc 1 307 9 is_stmt 1 view .LVU4744
 13636              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13637              		.loc 1 307 36 is_stmt 0 view .LVU4745
 13638 492d 4989C5   		mov	r13, rax	# tmp915, index
 13639              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13640              		.loc 1 307 39 view .LVU4746
 13641 4930 C442F9F7 		shlx	r8, r12, rax	# tmp918, tmp821, index
 13641      C4
 13642              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13643              		.loc 1 307 36 view .LVU4747
 13644 4935 49C1ED06 		shr	r13, 6	# tmp915,
 13645              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13646              		.loc 1 306 68 view .LVU4748
 13647 4939 4801F0   		add	rax, rsi	# index, step
 13648              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13649              		.loc 1 307 36 view .LVU4749
 13650 493c 4F0904EF 		or	QWORD PTR [r15+r13*8], r8	# *_428, tmp918
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13651              		.loc 1 306 62 is_stmt 1 view .LVU4750
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13652              		.loc 1 306 41 view .LVU4751
 13653              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13654              		.loc 1 306 5 is_stmt 0 view .LVU4752
 13655 4940 4939C2   		cmp	r10, rax	# block_stop, index
 13656 4943 0F8267F7 		jb	.L862	#,
 13656      FFFF
 307:sieve_extend.c ****     }
 13657              		.loc 1 307 9 is_stmt 1 view .LVU4753
 13658              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13659              		.loc 1 307 36 is_stmt 0 view .LVU4754
 13660 4949 4889C3   		mov	rbx, rax	# tmp920, index
 13661              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13662              		.loc 1 307 39 view .LVU4755
 13663 494c C4C2F9F7 		shlx	rcx, r12, rax	# tmp923, tmp821, index
 13663      CC
 13664              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13665              		.loc 1 307 36 view .LVU4756
 13666 4951 48C1EB06 		shr	rbx, 6	# tmp920,
 13667              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccdGK7kM.s 			page 366


 13668              		.loc 1 306 68 view .LVU4757
 13669 4955 4801F0   		add	rax, rsi	# index, step
 13670              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13671              		.loc 1 307 36 view .LVU4758
 13672 4958 49090CDF 		or	QWORD PTR [r15+rbx*8], rcx	# *_428, tmp923
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13673              		.loc 1 306 62 is_stmt 1 view .LVU4759
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13674              		.loc 1 306 41 view .LVU4760
 13675              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13676              		.loc 1 306 5 is_stmt 0 view .LVU4761
 13677 495c 4939C2   		cmp	r10, rax	# block_stop, index
 13678 495f 0F824BF7 		jb	.L862	#,
 13678      FFFF
 307:sieve_extend.c ****     }
 13679              		.loc 1 307 9 is_stmt 1 view .LVU4762
 13680              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13681              		.loc 1 307 36 is_stmt 0 view .LVU4763
 13682 4965 4989C6   		mov	r14, rax	# tmp925, index
 13683              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13684              		.loc 1 307 39 view .LVU4764
 13685 4968 C4C2F9F7 		shlx	rdx, r12, rax	# tmp928, tmp821, index
 13685      D4
 13686              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13687              		.loc 1 307 36 view .LVU4765
 13688 496d 49C1EE06 		shr	r14, 6	# tmp925,
 13689              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13690              		.loc 1 306 68 view .LVU4766
 13691 4971 4801F0   		add	rax, rsi	# index, step
 13692              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13693              		.loc 1 307 36 view .LVU4767
 13694 4974 4B0914F7 		or	QWORD PTR [r15+r14*8], rdx	# *_428, tmp928
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13695              		.loc 1 306 62 is_stmt 1 view .LVU4768
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13696              		.loc 1 306 41 view .LVU4769
 13697              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13698              		.loc 1 306 5 is_stmt 0 view .LVU4770
 13699 4978 4939C2   		cmp	r10, rax	# block_stop, index
 13700 497b 0F822FF7 		jb	.L862	#,
 13700      FFFF
 307:sieve_extend.c ****     }
 13701              		.loc 1 307 9 is_stmt 1 view .LVU4771
 13702              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13703              		.loc 1 307 36 is_stmt 0 view .LVU4772
 13704 4981 4889C7   		mov	rdi, rax	# tmp930, index
 13705              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 367


 13706              		.loc 1 307 39 view .LVU4773
 13707 4984 C4C2F9F7 		shlx	rbp, r12, rax	# tmp933, tmp821, index
 13707      EC
 13708              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13709              		.loc 1 307 36 view .LVU4774
 13710 4989 48C1EF06 		shr	rdi, 6	# tmp930,
 13711              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13712              		.loc 1 306 68 view .LVU4775
 13713 498d 4801F0   		add	rax, rsi	# index, step
 13714              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13715              		.loc 1 307 36 view .LVU4776
 13716 4990 49092CFF 		or	QWORD PTR [r15+rdi*8], rbp	# *_428, tmp933
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13717              		.loc 1 306 62 is_stmt 1 view .LVU4777
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13718              		.loc 1 306 41 view .LVU4778
 13719              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13720              		.loc 1 306 5 is_stmt 0 view .LVU4779
 13721 4994 4939C2   		cmp	r10, rax	# block_stop, index
 13722 4997 0F8213F7 		jb	.L862	#,
 13722      FFFF
 307:sieve_extend.c ****     }
 13723              		.loc 1 307 9 is_stmt 1 view .LVU4780
 13724              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13725              		.loc 1 307 36 is_stmt 0 view .LVU4781
 13726 499d 4989C5   		mov	r13, rax	# tmp935, index
 13727              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13728              		.loc 1 307 39 view .LVU4782
 13729 49a0 C442F9F7 		shlx	r8, r12, rax	# tmp938, tmp821, index
 13729      C4
 13730              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13731              		.loc 1 307 36 view .LVU4783
 13732 49a5 49C1ED06 		shr	r13, 6	# tmp935,
 13733              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13734              		.loc 1 306 68 view .LVU4784
 13735 49a9 4801F0   		add	rax, rsi	# index, step
 13736              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13737              		.loc 1 307 36 view .LVU4785
 13738 49ac 4F0904EF 		or	QWORD PTR [r15+r13*8], r8	# *_428, tmp938
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13739              		.loc 1 306 62 is_stmt 1 view .LVU4786
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13740              		.loc 1 306 41 view .LVU4787
 13741              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13742              		.loc 1 306 5 is_stmt 0 view .LVU4788
 13743 49b0 4939C2   		cmp	r10, rax	# block_stop, index
 13744 49b3 0F82F7F6 		jb	.L862	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 368


 13744      FFFF
 307:sieve_extend.c ****     }
 13745              		.loc 1 307 9 is_stmt 1 view .LVU4789
 13746              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13747              		.loc 1 307 36 is_stmt 0 view .LVU4790
 13748 49b9 4889C3   		mov	rbx, rax	# tmp940, index
 13749              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13750              		.loc 1 307 39 view .LVU4791
 13751 49bc C4C2F9F7 		shlx	rcx, r12, rax	# tmp943, tmp821, index
 13751      CC
 13752              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13753              		.loc 1 307 36 view .LVU4792
 13754 49c1 48C1EB06 		shr	rbx, 6	# tmp940,
 13755              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13756              		.loc 1 306 68 view .LVU4793
 13757 49c5 4801F0   		add	rax, rsi	# index, step
 13758              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13759              		.loc 1 307 36 view .LVU4794
 13760 49c8 49090CDF 		or	QWORD PTR [r15+rbx*8], rcx	# *_428, tmp943
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13761              		.loc 1 306 62 is_stmt 1 view .LVU4795
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13762              		.loc 1 306 41 view .LVU4796
 13763              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13764              		.loc 1 306 5 is_stmt 0 view .LVU4797
 13765 49cc 4939C2   		cmp	r10, rax	# block_stop, index
 13766 49cf 0F82DBF6 		jb	.L862	#,
 13766      FFFF
 307:sieve_extend.c ****     }
 13767              		.loc 1 307 9 is_stmt 1 view .LVU4798
 13768              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13769              		.loc 1 307 36 is_stmt 0 view .LVU4799
 13770 49d5 4989C6   		mov	r14, rax	# tmp945, index
 13771              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13772              		.loc 1 307 39 view .LVU4800
 13773 49d8 C4C2F9F7 		shlx	rdx, r12, rax	# tmp948, tmp821, index
 13773      D4
 13774              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13775              		.loc 1 307 36 view .LVU4801
 13776 49dd 49C1EE06 		shr	r14, 6	# tmp945,
 13777              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13778              		.loc 1 306 68 view .LVU4802
 13779 49e1 4801F0   		add	rax, rsi	# index, step
 13780              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 13781              		.loc 1 307 36 view .LVU4803
 13782 49e4 4B0914F7 		or	QWORD PTR [r15+r14*8], rdx	# *_428, tmp948
GAS LISTING /tmp/ccdGK7kM.s 			page 369


 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13783              		.loc 1 306 62 is_stmt 1 view .LVU4804
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13784              		.loc 1 306 41 view .LVU4805
 13785              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13786              		.loc 1 306 5 is_stmt 0 view .LVU4806
 13787 49e8 4939C2   		cmp	r10, rax	# block_stop, index
 13788 49eb 0F8320FF 		jnb	.L861	#,
 13788      FFFF
 13789 49f1 E9BAF6FF 		jmp	.L862	#
 13789      FF
 13790              	.LVL935:
 13791 49f6 662E0F1F 		.p2align 4,,10
 13791      84000000 
 13791      0000
 13792              		.p2align 3
 13793              	.L1397:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13794              		.loc 1 306 5 view .LVU4807
 13795              	.LBE561:
 13796              	.LBE599:
 13797              	.LBB600:
 13798              	.LBB564:
 126:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 13799              		.loc 1 126 8 is_stmt 1 view .LVU4808
 127:sieve_extend.c ****        index += distance;
 13800              		.loc 1 127 8 view .LVU4809
 13801              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13802              		.loc 1 127 48 is_stmt 0 view .LVU4810
 13803 4a00 4D8B4C37 		mov	r9, QWORD PTR 8[r15+rsi]	# *_686, *_686
 13803      08
 13804              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13805              		.loc 1 127 17 view .LVU4811
 13806 4a05 31DB     		xor	ebx, ebx	# distance
 13807              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13808              		.loc 1 127 48 view .LVU4812
 13809 4a07 49F7D1   		not	r9	# tmp789
 13810              	.LVL936:
 128:sieve_extend.c ****    }
 13811              		.loc 1 128 8 is_stmt 1 view .LVU4813
 13812              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13813              		.loc 1 127 17 is_stmt 0 view .LVU4814
 13814 4a0a F3490FBC 		tzcnt	rbx, r9	# distance, tmp789
 13814      D9
 13815              	.LVL937:
 13816              	# sieve_extend.c:128:        index += distance;
 128:sieve_extend.c ****    }
 13817              		.loc 1 128 14 view .LVU4815
 13818 4a0f 4801D9   		add	rcx, rbx	# index, distance
 13819              	.LVL938:
 125:sieve_extend.c ****        index_word++;
 13820              		.loc 1 125 10 is_stmt 1 view .LVU4816
GAS LISTING /tmp/ccdGK7kM.s 			page 370


 131:sieve_extend.c **** }
 13821              		.loc 1 131 4 view .LVU4817
 131:sieve_extend.c **** }
 13822              		.loc 1 131 4 is_stmt 0 view .LVU4818
 13823              	.LBE564:
 13824              	.LBE600:
 849:sieve_extend.c ****     }
 13825              		.loc 1 849 9 is_stmt 1 view .LVU4819
 13826              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 13827              		.loc 1 849 35 is_stmt 0 view .LVU4820
 13828 4a12 4C8D4901 		lea	r9, 1[rcx]	# _413,
 13829              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 13830              		.loc 1 849 15 view .LVU4821
 13831 4a16 4D89CE   		mov	r14, r9	# tmp794, _413
 13832 4a19 4C0FAFF1 		imul	r14, rcx	# tmp794, index
 13833 4a1d 4B8D0436 		lea	rax, [r14+r14]	# index,
 13834              	.LVL939:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 13835              		.loc 1 843 11 is_stmt 1 view .LVU4822
 13836 4a21 4939C2   		cmp	r10, rax	# block_stop, index
 13837 4a24 0F83BEFE 		jnb	.L848	#,
 13837      FFFF
 13838 4a2a 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# <retval>, %sfp
 13838      30
 13839 4a2f 498B5308 		mov	rdx, QWORD PTR 8[r11]	# _8, sieve_90->bits
 13840 4a33 E9D2F6FF 		jmp	.L823	#
 13840      FF
 13841              	.LVL940:
 13842 4a38 0F1F8400 		.p2align 4,,10
 13842      00000000 
 13843              		.p2align 3
 13844              	.L1400:
 13845              	.LBB601:
 13846              	.LBB596:
 126:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 13847              		.loc 1 126 8 view .LVU4823
 127:sieve_extend.c ****        index += distance;
 13848              		.loc 1 127 8 view .LVU4824
 13849              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13850              		.loc 1 127 48 is_stmt 0 view .LVU4825
 13851 4a40 4F8B4C2F 		mov	r9, QWORD PTR 8[r15+r13]	# *_603, *_603
 13851      08
 13852              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13853              		.loc 1 127 17 view .LVU4826
 13854 4a45 4531F6   		xor	r14d, r14d	# distance
 13855              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 13856              		.loc 1 127 48 view .LVU4827
 13857 4a48 49F7D1   		not	r9	# tmp764
 13858              	.LVL941:
 128:sieve_extend.c ****    }
 13859              		.loc 1 128 8 is_stmt 1 view .LVU4828
 13860              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
GAS LISTING /tmp/ccdGK7kM.s 			page 371


 127:sieve_extend.c ****        index += distance;
 13861              		.loc 1 127 17 is_stmt 0 view .LVU4829
 13862 4a4b F34D0FBC 		tzcnt	r14, r9	# distance, tmp764
 13862      F1
 13863              	.LVL942:
 13864              	# sieve_extend.c:128:        index += distance;
 128:sieve_extend.c ****    }
 13865              		.loc 1 128 14 view .LVU4830
 13866 4a50 4C01F1   		add	rcx, r14	# index, distance
 13867              	.LVL943:
 125:sieve_extend.c ****        index_word++;
 13868              		.loc 1 125 10 is_stmt 1 view .LVU4831
 131:sieve_extend.c **** }
 13869              		.loc 1 131 4 view .LVU4832
 131:sieve_extend.c **** }
 13870              		.loc 1 131 4 is_stmt 0 view .LVU4833
 13871              	.LBE596:
 13872              	.LBE601:
 840:sieve_extend.c ****     }
 13873              		.loc 1 840 9 is_stmt 1 view .LVU4834
 13874 4a53 E94AFDFF 		jmp	.L1247	#
 13874      FF
 13875              	.LVL944:
 13876 4a58 0F1F8400 		.p2align 4,,10
 13876      00000000 
 13877              		.p2align 3
 13878              	.L1393:
 840:sieve_extend.c ****     }
 13879              		.loc 1 840 9 is_stmt 0 view .LVU4835
 13880              	.LBE603:
 13881              	.LBE611:
 13882              	.LBE615:
 13883              	.LBB616:
 13884              	.LBB513:
 13885              	.LBB508:
 13886              	.LBB499:
 13887              	.LBB495:
 13888              	.LBB493:
 13889              	.LBB488:
 13890              	.LBB487:
 13891              	.LBB484:
 189:sieve_extend.c ****    }
 13892              		.loc 1 189 7 is_stmt 1 view .LVU4836
 13893              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13894              		.loc 1 189 27 is_stmt 0 view .LVU4837
 13895 4a60 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp614, %sfp
 13895      28
 13896              	.LVL945:
 13897              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13898              		.loc 1 189 18 view .LVU4838
 13899 4a65 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_884, tmp614
 13900 4a68 E91CEFFF 		jmp	.L793	#
 13900      FF
 13901              	.LVL946:
 13902              	.L1388:
GAS LISTING /tmp/ccdGK7kM.s 			page 372


 189:sieve_extend.c ****    }
 13903              		.loc 1 189 18 view .LVU4839
 13904              	.LBE484:
 13905              	.LBE487:
 13906              	.LBE488:
 13907              	.LBE493:
 13908              	.LBE495:
 13909              	.LBE499:
 13910              	.LBB500:
 13911              	.LBB459:
 768:sieve_extend.c ****         return; // rapid exit for small sizes
 13912              		.loc 1 768 9 is_stmt 1 view .LVU4840
 13913 4a6d 4C89F9   		mov	rcx, r15	#, _69
 13914 4a70 4C89F2   		mov	rdx, r14	#, patternsize_bits
 13915 4a73 4C89F6   		mov	rsi, r14	#, patternsize_bits
 13916 4a76 4C89EF   		mov	rdi, r13	#, _95
 13917 4a79 E882B5FF 		call	extendSieve_smallSize	#
 13917      FF
 13918              	.LVL947:
 769:sieve_extend.c ****     }
 13919              		.loc 1 769 9 view .LVU4841
 13920 4a7e 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 13920      18
 13921 4a83 E99DE5FF 		jmp	.L770	#
 13921      FF
 13922              	.LVL948:
 13923              	.L1394:
 769:sieve_extend.c ****     }
 13924              		.loc 1 769 9 is_stmt 0 view .LVU4842
 13925              	.LBE459:
 13926              	.LBE500:
 13927              	.LBE508:
 13928              	.LBE513:
 13929              	.LBE616:
 13930              	.LBB617:
 13931              	.LBB520:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13932              		.loc 1 776 37 is_stmt 1 view .LVU4843
 13933 4a88 E843D1FF 		call	extendSieve_shiftleft	#
 13933      FF
 13934              	.LVL949:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13935              		.loc 1 776 37 is_stmt 0 view .LVU4844
 13936 4a8d E951EFFF 		jmp	.L804	#
 13936      FF
 13937              	.LVL950:
 13938              	.L1391:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13939              		.loc 1 776 37 view .LVU4845
 13940              	.LBE520:
 13941              	.LBE617:
 13942              	.LBB618:
 13943              	.LBB514:
 13944              	.LBB509:
 13945              	.LBB501:
 13946              	.LBB466:
 13947              	.LBB464:
GAS LISTING /tmp/ccdGK7kM.s 			page 373


 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 13948              		.loc 1 250 9 is_stmt 1 view .LVU4846
 13949              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 13950              		.loc 1 250 28 is_stmt 0 view .LVU4847
 13951 4a92 C4E2A3F7 		shrx	rdx, rcx, r11	# _137, pattern, _1542
 13951      D1
 13952              	.LVL951:
 13953              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 13954              		.loc 1 250 57 view .LVU4848
 13955 4a97 C4E2F9F7 		shlx	rcx, rcx, rax	# _139, pattern, _1543
 13955      C9
 13956              	.LVL952:
 13957              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 13958              		.loc 1 250 17 view .LVU4849
 13959 4a9c 4809D1   		or	rcx, rdx	# pattern, _137
 13960              	.LVL953:
 251:sieve_extend.c ****     } 
 13961              		.loc 1 251 9 is_stmt 1 view .LVU4850
 13962              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 13963              		.loc 1 251 31 is_stmt 0 view .LVU4851
 13964 4a9f 48094E08 		or	QWORD PTR 8[rsi], rcx	# MEM[base: _1448, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 13965              		.loc 1 249 41 is_stmt 1 view .LVU4852
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 13966              		.loc 1 249 25 view .LVU4853
 13967 4aa3 4883C608 		add	rsi, 8	# ivtmp.557,
 13968 4aa7 E97DE8FF 		jmp	.L1093	#
 13968      FF
 13969              	.LVL954:
 13970              	.L1383:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 13971              		.loc 1 249 25 is_stmt 0 view .LVU4854
 13972 4aac 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 13972      30
 13973              	.LVL955:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 13974              		.loc 1 249 25 view .LVU4855
 13975 4ab1 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, prime
 13975      20
 13976 4ab6 4D8B4508 		mov	r8, QWORD PTR 8[r13]	# prephitmp_1527, sieve_90->bits
 13977              	.LBE464:
 13978              	.LBE466:
 13979              	.LBE501:
 13980              	# sieve_extend.c:883:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 883:sieve_extend.c **** 
 13981              		.loc 1 883 12 view .LVU4856
 13982 4aba 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 13982      10
 13983 4abf 4C890424 		mov	QWORD PTR [rsp], r8	# %sfp, prephitmp_1527
 13984              	.LVL956:
 883:sieve_extend.c **** 
 13985              		.loc 1 883 12 view .LVU4857
 13986 4ac3 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
GAS LISTING /tmp/ccdGK7kM.s 			page 374


 13987 4ac6 E9E3EEFF 		jmp	.L769	#
 13987      FF
 13988              	.LVL957:
 13989              	.L1381:
 883:sieve_extend.c **** 
 13990              		.loc 1 883 12 view .LVU4858
 13991              	.LBE509:
 13992              	# sieve_extend.c:863:     register counter_t prime   = 0;
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 13993              		.loc 1 863 24 view .LVU4859
 13994 4acb 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 13994      20000000 
 13994      00
 13995              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 868:sieve_extend.c **** 
 13996              		.loc 1 868 18 view .LVU4860
 13997 4ad4 31D2     		xor	edx, edx	# block$pattern_size
 13998 4ad6 E9B4E9FF 		jmp	.L762	#
 13998      FF
 13999              	.LBE514:
 14000              	.LBE618:
 14001              		.cfi_endproc
 14002              	.LFE5343:
 14004 4adb 0F1F4400 		.p2align 4
 14004      00
 14006              	tune_benchmark:
 14007              	.LVL958:
 14008              	.LFB5350:
1026:sieve_extend.c **** 
1027:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 14009              		.loc 1 1027 94 is_stmt 1 view -0
 14010              		.cfi_startproc
 14011              		.loc 1 1027 94 is_stmt 0 view .LVU4862
 14012 4ae0 4154     		push	r12	#
 14013              		.cfi_def_cfa_offset 16
 14014              		.cfi_offset 12, -16
 14015              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1028:sieve_extend.c ****     counter_t passes = 0;
1029:sieve_extend.c ****     double elapsed_time = 0;
1030:sieve_extend.c ****     struct timespec start_time,end_time;
1031:sieve_extend.c ****     struct sieve_state *sieve_instance;
1032:sieve_extend.c **** 
1033:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 14016              		.loc 1 1033 44 view .LVU4863
 14017 4ae2 486BF658 		imul	rsi, rsi, 88	# tmp112, tmp147,
 14018              	.LVL959:
 14019              	# sieve_extend.c:1028:     counter_t passes = 0;
1028:sieve_extend.c ****     counter_t passes = 0;
 14020              		.loc 1 1028 15 view .LVU4864
 14021 4ae6 4531E4   		xor	r12d, r12d	# passes
 14022              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 14023              		.loc 1 1027 94 view .LVU4865
 14024 4ae9 55       		push	rbp	#
 14025              		.cfi_def_cfa_offset 24
 14026              		.cfi_offset 6, -24
 14027 4aea 53       		push	rbx	#
GAS LISTING /tmp/ccdGK7kM.s 			page 375


 14028              		.cfi_def_cfa_offset 32
 14029              		.cfi_offset 3, -32
 14030              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 14031              		.loc 1 1033 44 view .LVU4866
 14032 4aeb 488D1C37 		lea	rbx, [rdi+rsi]	# _2,
 14033              	# sieve_extend.c:1036:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1035:sieve_extend.c **** 
1036:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 14034              		.loc 1 1036 5 view .LVU4867
 14035 4aef BF010000 		mov	edi, 1	#,
 14035      00
 14036              	.LVL960:
 14037              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 14038              		.loc 1 1027 94 view .LVU4868
 14039 4af4 4883EC30 		sub	rsp, 48	#,
 14040              		.cfi_def_cfa_offset 80
 14041              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 14042              		.loc 1 1027 94 view .LVU4869
 14043 4af8 64488B04 		mov	rax, QWORD PTR fs:40	# tmp162, MEM[(<address-space-1> long unsigned int *)40B]
 14043      25280000 
 14043      00
 14044 4b01 48894424 		mov	QWORD PTR 40[rsp], rax	# D.35337, tmp162
 14044      28
 14045 4b06 31C0     		xor	eax, eax	# tmp162
1028:sieve_extend.c ****     double elapsed_time = 0;
 14046              		.loc 1 1028 5 is_stmt 1 view .LVU4870
 14047              	.LVL961:
1029:sieve_extend.c ****     struct timespec start_time,end_time;
 14048              		.loc 1 1029 5 view .LVU4871
1030:sieve_extend.c ****     struct sieve_state *sieve_instance;
 14049              		.loc 1 1030 5 view .LVU4872
1031:sieve_extend.c **** 
 14050              		.loc 1 1031 5 view .LVU4873
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14051              		.loc 1 1033 5 view .LVU4874
 14052              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1034:sieve_extend.c **** 
 14053              		.loc 1 1034 30 is_stmt 0 view .LVU4875
 14054 4b08 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 14055              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14056              		.loc 1 1033 29 view .LVU4876
 14057 4b0c 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 14058              	# sieve_extend.c:1036:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 14059              		.loc 1 1036 5 view .LVU4877
 14060 4b10 4889E6   		mov	rsi, rsp	# tmp115,
 14061              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14062              		.loc 1 1033 29 view .LVU4878
 14063 4b13 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 14063      000000
1034:sieve_extend.c **** 
 14064              		.loc 1 1034 5 is_stmt 1 view .LVU4879
 14065              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
GAS LISTING /tmp/ccdGK7kM.s 			page 376


1034:sieve_extend.c **** 
 14066              		.loc 1 1034 30 is_stmt 0 view .LVU4880
 14067 4b1a 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 14067      000000
 14068              		.loc 1 1036 5 is_stmt 1 view .LVU4881
 14069 4b21 E8000000 		call	clock_gettime@PLT	#
 14069      00
 14070              	.LVL962:
1037:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 14071              		.loc 1 1037 5 view .LVU4882
 14072              		.loc 1 1037 11 view .LVU4883
 14073 4b26 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# elapsed_time
 14074 4b2a C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 14074      38
 14075 4b2f C57B1015 		vmovsd	xmm10, QWORD PTR .LC8[rip]	# _56,
 14075      00000000 
 14076 4b37 0F879000 		ja	.L1403	#,
 14076      0000
 14077 4b3d C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 14078 4b41 EB76     		jmp	.L1402	#
 14079              	.LVL963:
 14080              		.p2align 4,,10
 14081 4b43 0F1F4400 		.p2align 3
 14081      00
 14082              	.L1406:
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14083              		.loc 1 1038 9 view .LVU4884
 14084              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 14085              		.loc 1 1038 26 is_stmt 0 view .LVU4885
 14086 4b48 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 14087 4b4c 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 14088              	# sieve_extend.c:1040:         passes++;
1039:sieve_extend.c ****         delete_sieve(sieve_instance);
1040:sieve_extend.c ****         passes++;
 14089              		.loc 1 1040 15 view .LVU4886
 14090 4b4f 49FFC4   		inc	r12	# passes
 14091              	.LVL964:
 14092              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14093              		.loc 1 1038 26 view .LVU4887
 14094 4b52 E8C9E3FF 		call	sieve	#
 14094      FF
 14095              	.LVL965:
 14096              	.LBB619:
 14097              	.LBB620:
 14098              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 14099              		.loc 1 105 5 view .LVU4888
 14100 4b57 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_35->bitarray
 14101              	.LBE620:
 14102              	.LBE619:
 14103              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14104              		.loc 1 1038 26 view .LVU4889
 14105 4b5a 4889C5   		mov	rbp, rax	# sieve_instance, tmp148
 14106              	.LVL966:
1039:sieve_extend.c ****         delete_sieve(sieve_instance);
GAS LISTING /tmp/ccdGK7kM.s 			page 377


 14107              		.loc 1 1039 9 is_stmt 1 view .LVU4890
 14108              	.LBB622:
 14109              	.LBI619:
 104:sieve_extend.c ****     free(sieve->bitarray);
 14110              		.loc 1 104 13 view .LVU4891
 14111              	.LBB621:
 105:sieve_extend.c ****     free(sieve);
 14112              		.loc 1 105 5 view .LVU4892
 14113 4b5d E8000000 		call	free@PLT	#
 14113      00
 14114              	.LVL967:
 106:sieve_extend.c **** }
 14115              		.loc 1 106 5 view .LVU4893
 14116 4b62 4889EF   		mov	rdi, rbp	#, sieve_instance
 14117 4b65 E8000000 		call	free@PLT	#
 14117      00
 14118              	.LVL968:
 106:sieve_extend.c **** }
 14119              		.loc 1 106 5 is_stmt 0 view .LVU4894
 14120              	.LBE621:
 14121              	.LBE622:
 14122              		.loc 1 1040 9 is_stmt 1 view .LVU4895
1041:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 14123              		.loc 1 1041 9 view .LVU4896
 14124 4b6a 488D7424 		lea	rsi, 16[rsp]	# tmp118,
 14124      10
 14125 4b6f BF010000 		mov	edi, 1	#,
 14125      00
 14126 4b74 E8000000 		call	clock_gettime@PLT	#
 14126      00
 14127              	.LVL969:
1042:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 14128              		.loc 1 1042 9 view .LVU4897
 14129              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14130              		.loc 1 1042 58 is_stmt 0 view .LVU4898
 14131 4b79 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 14132 4b7d C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 24[rsp]	# tmp150, tmp149, end_time.tv_nsec
 14132      542418
 14133              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14134              		.loc 1 1042 64 view .LVU4899
 14135 4b84 C4E1E32A 		vcvtsi2sd	xmm4, xmm3, QWORD PTR [rsp]	# tmp151, tmp149, start_time.tv_sec
 14135      2424
 14136              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14137              		.loc 1 1042 40 view .LVU4900
 14138 4b8a C4E1E32A 		vcvtsi2sd	xmm7, xmm3, QWORD PTR 16[rsp]	# tmp153, tmp149, end_time.tv_sec
 14138      7C2410
 14139              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14140              		.loc 1 1042 58 view .LVU4901
 14141 4b91 C5F928CA 		vmovapd	xmm1, xmm2	# tmp119, tmp150
 14142              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14143              		.loc 1 1042 104 view .LVU4902
 14144 4b95 C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 8[rsp]	# tmp152, tmp149, start_time.tv_nsec
 14144      542408
 14145 4b9c C4E2D99B 		vfmsub132sd	xmm1, xmm4, QWORD PTR .LC9[rip]	# tmp119, tmp120,
 14145      0D000000 
 14145      00
 14146 4ba5 C4E2E9BD 		vfnmadd231sd	xmm7, xmm2, QWORD PTR .LC9[rip]	# _61, tmp122,
GAS LISTING /tmp/ccdGK7kM.s 			page 378


 14146      3D000000 
 14146      00
 14147              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14148              		.loc 1 1042 22 view .LVU4903
 14149 4bae C5F358C7 		vaddsd	xmm0, xmm1, xmm7	# elapsed_time, _60, _61
 14150              	.LVL970:
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14151              		.loc 1 1037 11 is_stmt 1 view .LVU4904
 14152 4bb2 C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 14152      38
 14153 4bb7 7706     		ja	.L1418	#,
 14154              	.LVL971:
 14155              	.L1402:
 14156              	# sieve_extend.c:1037:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14157              		.loc 1 1037 79 is_stmt 0 discriminator 1 view .LVU4905
 14158 4bb9 4C396330 		cmp	QWORD PTR 48[rbx], r12	# _2->sample_max, passes
 14159 4bbd 7789     		ja	.L1406	#,
 14160              	.L1418:
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14161              		.loc 1 1037 79 discriminator 1 view .LVU4906
 14162 4bbf 4D85E4   		test	r12, r12	# passes
 14163 4bc2 7834     		js	.L1407	#,
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14164              		.loc 1 1037 79 discriminator 1 view .LVU4907
 14165 4bc4 C441E32A 		vcvtsi2sd	xmm9, xmm3, r12	# tmp156, tmp149, passes
 14165      CC
 14166              	.L1408:
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14167              		.loc 1 1037 79 discriminator 1 view .LVU4908
 14168 4bc9 C5335ED0 		vdivsd	xmm10, xmm9, xmm0	# _56, tmp129, elapsed_time
 14169              	.LVL972:
 14170              	.L1403:
1043:sieve_extend.c ****     }
1044:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 14171              		.loc 1 1044 5 is_stmt 1 view .LVU4909
 14172              	# sieve_extend.c:1044:     tuning_result[tuning_result_index].passes = passes;
 14173              		.loc 1 1044 47 is_stmt 0 view .LVU4910
 14174 4bcd 4C896340 		mov	QWORD PTR 64[rbx], r12	# _2->passes, passes
1045:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 14175              		.loc 1 1045 5 is_stmt 1 view .LVU4911
1046:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 14176              		.loc 1 1046 5 view .LVU4912
 14177              	# sieve_extend.c:1045:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
1045:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 14178              		.loc 1 1045 53 is_stmt 0 view .LVU4913
 14179 4bd1 C4417914 		vunpcklpd	xmm11, xmm0, xmm10	# tmp133, elapsed_time, _56
 14179      DA
 14180 4bd6 C578115B 		vmovups	XMMWORD PTR 72[rbx], xmm11	# MEM[(double *)_2 + 72B], tmp133
 14180      48
 14181              	# sieve_extend.c:1047: }
1047:sieve_extend.c **** }
 14182              		.loc 1 1047 1 view .LVU4914
 14183 4bdb 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp163, D.35337
 14183      28
 14184 4be0 64483304 		xor	rax, QWORD PTR fs:40	# tmp163, MEM[(<address-space-1> long unsigned int *)40B]
 14184      25280000 
GAS LISTING /tmp/ccdGK7kM.s 			page 379


 14184      00
 14185 4be9 7528     		jne	.L1419	#,
 14186 4beb 4883C430 		add	rsp, 48	#,
 14187              		.cfi_remember_state
 14188              		.cfi_def_cfa_offset 32
 14189 4bef 5B       		pop	rbx	#
 14190              		.cfi_def_cfa_offset 24
 14191 4bf0 5D       		pop	rbp	#
 14192              		.cfi_def_cfa_offset 16
 14193 4bf1 415C     		pop	r12	#
 14194              		.cfi_def_cfa_offset 8
 14195 4bf3 C3       		ret	
 14196              	.LVL973:
 14197              		.p2align 4,,10
 14198 4bf4 0F1F4000 		.p2align 3
 14199              	.L1407:
 14200              		.cfi_restore_state
 14201              		.loc 1 1047 1 view .LVU4915
 14202 4bf8 4C89E1   		mov	rcx, r12	# tmp131, passes
 14203 4bfb 4C89E7   		mov	rdi, r12	# tmp132, passes
 14204 4bfe 48D1E9   		shr	rcx	# tmp131
 14205 4c01 83E701   		and	edi, 1	# tmp132,
 14206 4c04 4809F9   		or	rcx, rdi	# tmp145, tmp132
 14207 4c07 C461E32A 		vcvtsi2sd	xmm8, xmm3, rcx	# tmp157, tmp149, tmp145
 14207      C1
 14208 4c0c C4413B58 		vaddsd	xmm9, xmm8, xmm8	# tmp129, tmp130, tmp130
 14208      C8
 14209 4c11 EBB6     		jmp	.L1408	#
 14210              	.LVL974:
 14211              	.L1419:
 14212              		.loc 1 1047 1 view .LVU4916
 14213 4c13 E8000000 		call	__stack_chk_fail@PLT	#
 14213      00
 14214              	.LVL975:
 14215              		.cfi_endproc
 14216              	.LFE5350:
 14218 4c18 0F1F8400 		.p2align 4
 14218      00000000 
 14219              		.globl	shiftvec
 14221              	shiftvec:
 14222              	.LVL976:
 14223              	.LFB5334:
 488:sieve_extend.c ****     int i = 0;
 14224              		.loc 1 488 1 is_stmt 1 view -0
 14225              		.cfi_startproc
 488:sieve_extend.c ****     int i = 0;
 14226              		.loc 1 488 1 is_stmt 0 view .LVU4918
 14227 4c20 F30F1EFA 		endbr64	
 489:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 14228              		.loc 1 489 5 is_stmt 1 view .LVU4919
 14229              	.LVL977:
 491:sieve_extend.c ****     {
 14230              		.loc 1 491 5 view .LVU4920
 491:sieve_extend.c ****     {
 14231              		.loc 1 491 12 view .LVU4921
 14232              	# sieve_extend.c:491:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 491:sieve_extend.c ****     {
GAS LISTING /tmp/ccdGK7kM.s 			page 380


 14233              		.loc 1 491 5 is_stmt 0 view .LVU4922
 14234 4c24 83FA04   		cmp	edx, 4	# size,
 14235 4c27 0F8E8A03 		jle	.L1467	#,
 14235      0000
 14236 4c2d 41BB4000 		mov	r11d, 64	# tmp134,
 14236      0000
 14237              	.LBB623:
 14238              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14239              		.loc 1 494 25 view .LVU4923
 14240 4c33 C5FE6F1E 		vmovdqu	ymm3, YMMWORD PTR [rsi]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[base
 14241 4c37 4489D8   		mov	eax, r11d	# _4, tmp134
 14242 4c3a 29C8     		sub	eax, ecx	# _4, shift
 14243 4c3c C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 14243      C0
 14244 4c41 C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 14245 4c45 C4E3FD00 		vpermq	ymm2, ymm3, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14245      D355
 14246              	.LBE623:
 14247              	.LBB624:
 14248              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14249              		.loc 1 496 34 view .LVU4924
 14250 4c4b C5EDD3E0 		vpsrlq	ymm4, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 14251              	.LBE624:
 14252              	.LBB625:
 14253              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14254              		.loc 1 494 34 view .LVU4925
 14255 4c4f C5E5F3E9 		vpsllq	ymm5, ymm3, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 14256 4c53 448D4AFB 		lea	r9d, -5[rdx]	# tmp135,
 14257 4c57 41C1E902 		shr	r9d, 2	# _80,
 14258 4c5b 4589CB   		mov	r11d, r9d	# tmp175, _80
 14259              	.LBE625:
 14260              	.LBB626:
 14261              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14262              		.loc 1 496 22 view .LVU4926
 14263 4c5e C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# vect__58.648, vect__57.643, vect__104.647
 14264 4c62 458D4101 		lea	r8d, 1[r9]	# tmp172,
 14265 4c66 4183E307 		and	r11d, 7	# tmp175,
 14266              	.LVL978:
 496:sieve_extend.c ****     }
 14267              		.loc 1 496 22 view .LVU4927
 14268              	.LBE626:
 14269              	.LBB627:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14270              		.loc 1 493 25 is_stmt 1 view .LVU4928
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14271              		.loc 1 494 13 view .LVU4929
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14272              		.loc 1 493 32 view .LVU4930
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14273              		.loc 1 493 25 view .LVU4931
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14274              		.loc 1 494 13 view .LVU4932
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccdGK7kM.s 			page 381


 14275              		.loc 1 493 32 view .LVU4933
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14276              		.loc 1 493 25 view .LVU4934
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14277              		.loc 1 494 13 view .LVU4935
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14278              		.loc 1 493 32 view .LVU4936
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14279              		.loc 1 493 25 view .LVU4937
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14280              		.loc 1 494 13 view .LVU4938
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14281              		.loc 1 493 32 view .LVU4939
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14282              		.loc 1 493 25 view .LVU4940
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14283              		.loc 1 493 25 is_stmt 0 view .LVU4941
 14284              	.LBE627:
 14285              	.LBB628:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14286              		.loc 1 495 25 is_stmt 1 view .LVU4942
 496:sieve_extend.c ****     }
 14287              		.loc 1 496 13 view .LVU4943
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14288              		.loc 1 495 32 view .LVU4944
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14289              		.loc 1 495 25 view .LVU4945
 496:sieve_extend.c ****     }
 14290              		.loc 1 496 13 view .LVU4946
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14291              		.loc 1 495 32 view .LVU4947
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14292              		.loc 1 495 25 view .LVU4948
 496:sieve_extend.c ****     }
 14293              		.loc 1 496 13 view .LVU4949
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14294              		.loc 1 495 32 view .LVU4950
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14295              		.loc 1 495 25 view .LVU4951
 496:sieve_extend.c ****     }
 14296              		.loc 1 496 13 view .LVU4952
 14297              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14298              		.loc 1 496 22 is_stmt 0 view .LVU4953
 14299 4c6a C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect__58
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14300              		.loc 1 495 32 is_stmt 1 view .LVU4954
 14301              	.LVL979:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14302              		.loc 1 495 25 view .LVU4955
 14303              	.LBE628:
 491:sieve_extend.c ****     {
 14304              		.loc 1 491 24 view .LVU4956
 491:sieve_extend.c ****     {
 14305              		.loc 1 491 12 view .LVU4957
 14306 4c6e 41BA0100 		mov	r10d, 1	# ivtmp.653,
 14306      0000
GAS LISTING /tmp/ccdGK7kM.s 			page 382


 14307 4c74 B8200000 		mov	eax, 32	# ivtmp.656,
 14307      00
 14308 4c79 4183F801 		cmp	r8d, 1	# tmp172,
 14309 4c7d 0F863902 		jbe	.L1465	#,
 14309      0000
 14310 4c83 4585DB   		test	r11d, r11d	# tmp175
 14311 4c86 0F841201 		je	.L1423	#,
 14311      0000
 14312 4c8c 4183FB01 		cmp	r11d, 1	# tmp175,
 14313 4c90 0F84DB00 		je	.L1452	#,
 14313      0000
 14314 4c96 4183FB02 		cmp	r11d, 2	# tmp175,
 14315 4c9a 0F84AE00 		je	.L1453	#,
 14315      0000
 14316 4ca0 4183FB03 		cmp	r11d, 3	# tmp175,
 14317 4ca4 0F848100 		je	.L1454	#,
 14317      0000
 14318 4caa 4183FB04 		cmp	r11d, 4	# tmp175,
 14319 4cae 7457     		je	.L1455	#,
 14320 4cb0 4183FB05 		cmp	r11d, 5	# tmp175,
 14321 4cb4 742E     		je	.L1456	#,
 14322 4cb6 4183FB06 		cmp	r11d, 6	# tmp175,
 14323 4cba 0F85CA02 		jne	.L1468	#,
 14323      0000
 14324              	.L1457:
 14325              	.LVL980:
 14326              	.LBB629:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14327              		.loc 1 493 25 view .LVU4958
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14328              		.loc 1 494 13 view .LVU4959
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14329              		.loc 1 493 32 view .LVU4960
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14330              		.loc 1 493 25 view .LVU4961
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14331              		.loc 1 494 13 view .LVU4962
 14332              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14333              		.loc 1 494 25 is_stmt 0 view .LVU4963
 14334 4cc0 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM
 14334      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14335              		.loc 1 493 32 is_stmt 1 view .LVU4964
 14336              	.LVL981:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14337              		.loc 1 493 25 view .LVU4965
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14338              		.loc 1 494 13 view .LVU4966
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14339              		.loc 1 493 32 view .LVU4967
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14340              		.loc 1 493 25 view .LVU4968
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14341              		.loc 1 494 13 view .LVU4969
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14342              		.loc 1 493 32 view .LVU4970
GAS LISTING /tmp/ccdGK7kM.s 			page 383


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14343              		.loc 1 493 25 view .LVU4971
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14344              		.loc 1 493 25 is_stmt 0 view .LVU4972
 14345              	.LBE629:
 14346              	.LBB630:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14347              		.loc 1 495 25 is_stmt 1 view .LVU4973
 496:sieve_extend.c ****     }
 14348              		.loc 1 496 13 view .LVU4974
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14349              		.loc 1 495 32 view .LVU4975
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14350              		.loc 1 495 25 view .LVU4976
 496:sieve_extend.c ****     }
 14351              		.loc 1 496 13 view .LVU4977
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14352              		.loc 1 495 32 view .LVU4978
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14353              		.loc 1 495 25 view .LVU4979
 496:sieve_extend.c ****     }
 14354              		.loc 1 496 13 view .LVU4980
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14355              		.loc 1 495 32 view .LVU4981
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14356              		.loc 1 495 25 view .LVU4982
 496:sieve_extend.c ****     }
 14357              		.loc 1 496 13 view .LVU4983
 14358 4cc5 41FFC2   		inc	r10d	# ivtmp.653
 14359              	.LBE630:
 14360              	.LBB631:
 14361              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14362              		.loc 1 494 25 is_stmt 0 view .LVU4984
 14363 4cc8 C443FD00 		vpermq	ymm13, ymm12, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14363      EC55
 14364              	.LBE631:
 14365              	.LBB632:
 14366              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14367              		.loc 1 496 34 view .LVU4985
 14368 4cce C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.643, vect__102.642, _4
 14369              	.LBE632:
 14370              	.LBB633:
 14371              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14372              		.loc 1 494 34 view .LVU4986
 14373 4cd2 C51DF3F9 		vpsllq	ymm15, ymm12, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14374              	.LBE633:
 14375              	.LBB634:
 14376              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14377              		.loc 1 496 22 view .LVU4987
 14378 4cd6 C4C10DEB 		vpor	ymm3, ymm14, ymm15	# vect__58.648, vect__57.643, vect__104.647
 14378      DF
 14379 4cdb C5FE7F1C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm3	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect
 14379      07
GAS LISTING /tmp/ccdGK7kM.s 			page 384


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14380              		.loc 1 495 32 is_stmt 1 view .LVU4988
 14381              	.LVL982:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14382              		.loc 1 495 25 view .LVU4989
 14383              	.LBE634:
 491:sieve_extend.c ****     {
 14384              		.loc 1 491 24 view .LVU4990
 491:sieve_extend.c ****     {
 14385              		.loc 1 491 12 view .LVU4991
 14386 4ce0 4883C020 		add	rax, 32	# ivtmp.656,
 14387              	.L1456:
 14388              	.LVL983:
 14389              	.LBB635:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14390              		.loc 1 493 25 view .LVU4992
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14391              		.loc 1 494 13 view .LVU4993
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14392              		.loc 1 493 32 view .LVU4994
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14393              		.loc 1 493 25 view .LVU4995
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14394              		.loc 1 494 13 view .LVU4996
 14395              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14396              		.loc 1 494 25 is_stmt 0 view .LVU4997
 14397 4ce4 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[
 14397      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14398              		.loc 1 493 32 is_stmt 1 view .LVU4998
 14399              	.LVL984:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14400              		.loc 1 493 25 view .LVU4999
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14401              		.loc 1 494 13 view .LVU5000
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14402              		.loc 1 493 32 view .LVU5001
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14403              		.loc 1 493 25 view .LVU5002
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14404              		.loc 1 494 13 view .LVU5003
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14405              		.loc 1 493 32 view .LVU5004
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14406              		.loc 1 493 25 view .LVU5005
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14407              		.loc 1 493 25 is_stmt 0 view .LVU5006
 14408              	.LBE635:
 14409              	.LBB636:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14410              		.loc 1 495 25 is_stmt 1 view .LVU5007
 496:sieve_extend.c ****     }
 14411              		.loc 1 496 13 view .LVU5008
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14412              		.loc 1 495 32 view .LVU5009
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 385


 14413              		.loc 1 495 25 view .LVU5010
 496:sieve_extend.c ****     }
 14414              		.loc 1 496 13 view .LVU5011
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14415              		.loc 1 495 32 view .LVU5012
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14416              		.loc 1 495 25 view .LVU5013
 496:sieve_extend.c ****     }
 14417              		.loc 1 496 13 view .LVU5014
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14418              		.loc 1 495 32 view .LVU5015
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14419              		.loc 1 495 25 view .LVU5016
 496:sieve_extend.c ****     }
 14420              		.loc 1 496 13 view .LVU5017
 14421 4ce9 41FFC2   		inc	r10d	# ivtmp.653
 14422              	.LBE636:
 14423              	.LBB637:
 14424              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14425              		.loc 1 494 25 is_stmt 0 view .LVU5018
 14426 4cec C4E3FD00 		vpermq	ymm2, ymm4, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14426      D455
 14427              	.LBE637:
 14428              	.LBB638:
 14429              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14430              		.loc 1 496 34 view .LVU5019
 14431 4cf2 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 14432              	.LBE638:
 14433              	.LBB639:
 14434              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14435              		.loc 1 494 34 view .LVU5020
 14436 4cf6 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 14437              	.LBE639:
 14438              	.LBB640:
 14439              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14440              		.loc 1 496 22 view .LVU5021
 14441 4cfa C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.648, vect__57.643, vect__104.647
 14442 4cfe C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect
 14442      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14443              		.loc 1 495 32 is_stmt 1 view .LVU5022
 14444              	.LVL985:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14445              		.loc 1 495 25 view .LVU5023
 14446              	.LBE640:
 491:sieve_extend.c ****     {
 14447              		.loc 1 491 24 view .LVU5024
 491:sieve_extend.c ****     {
 14448              		.loc 1 491 12 view .LVU5025
 14449 4d03 4883C020 		add	rax, 32	# ivtmp.656,
 14450              	.L1455:
 14451              	.LVL986:
 14452              	.LBB641:
GAS LISTING /tmp/ccdGK7kM.s 			page 386


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14453              		.loc 1 493 25 view .LVU5026
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14454              		.loc 1 494 13 view .LVU5027
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14455              		.loc 1 493 32 view .LVU5028
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14456              		.loc 1 493 25 view .LVU5029
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14457              		.loc 1 494 13 view .LVU5030
 14458              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14459              		.loc 1 494 25 is_stmt 0 view .LVU5031
 14460 4d07 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[
 14460      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14461              		.loc 1 493 32 is_stmt 1 view .LVU5032
 14462              	.LVL987:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14463              		.loc 1 493 25 view .LVU5033
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14464              		.loc 1 494 13 view .LVU5034
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14465              		.loc 1 493 32 view .LVU5035
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14466              		.loc 1 493 25 view .LVU5036
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14467              		.loc 1 494 13 view .LVU5037
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14468              		.loc 1 493 32 view .LVU5038
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14469              		.loc 1 493 25 view .LVU5039
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14470              		.loc 1 493 25 is_stmt 0 view .LVU5040
 14471              	.LBE641:
 14472              	.LBB642:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14473              		.loc 1 495 25 is_stmt 1 view .LVU5041
 496:sieve_extend.c ****     }
 14474              		.loc 1 496 13 view .LVU5042
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14475              		.loc 1 495 32 view .LVU5043
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14476              		.loc 1 495 25 view .LVU5044
 496:sieve_extend.c ****     }
 14477              		.loc 1 496 13 view .LVU5045
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14478              		.loc 1 495 32 view .LVU5046
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14479              		.loc 1 495 25 view .LVU5047
 496:sieve_extend.c ****     }
 14480              		.loc 1 496 13 view .LVU5048
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14481              		.loc 1 495 32 view .LVU5049
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14482              		.loc 1 495 25 view .LVU5050
 496:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 387


 14483              		.loc 1 496 13 view .LVU5051
 14484 4d0c 41FFC2   		inc	r10d	# ivtmp.653
 14485              	.LBE642:
 14486              	.LBB643:
 14487              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14488              		.loc 1 494 25 is_stmt 0 view .LVU5052
 14489 4d0f C443FD00 		vpermq	ymm9, ymm8, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14489      C855
 14490              	.LBE643:
 14491              	.LBB644:
 14492              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14493              		.loc 1 496 34 view .LVU5053
 14494 4d15 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.643, vect__102.642, _4
 14495              	.LBE644:
 14496              	.LBB645:
 14497              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14498              		.loc 1 494 34 view .LVU5054
 14499 4d19 C53DF3D9 		vpsllq	ymm11, ymm8, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14500              	.LBE645:
 14501              	.LBB646:
 14502              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14503              		.loc 1 496 22 view .LVU5055
 14504 4d1d C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.648, vect__57.643, vect__104.647
 14504      E3
 14505 4d22 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vec
 14505      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14506              		.loc 1 495 32 is_stmt 1 view .LVU5056
 14507              	.LVL988:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14508              		.loc 1 495 25 view .LVU5057
 14509              	.LBE646:
 491:sieve_extend.c ****     {
 14510              		.loc 1 491 24 view .LVU5058
 491:sieve_extend.c ****     {
 14511              		.loc 1 491 12 view .LVU5059
 14512 4d27 4883C020 		add	rax, 32	# ivtmp.656,
 14513              	.L1454:
 14514              	.LVL989:
 14515              	.LBB647:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14516              		.loc 1 493 25 view .LVU5060
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14517              		.loc 1 494 13 view .LVU5061
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14518              		.loc 1 493 32 view .LVU5062
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14519              		.loc 1 493 25 view .LVU5063
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14520              		.loc 1 494 13 view .LVU5064
 14521              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14522              		.loc 1 494 25 is_stmt 0 view .LVU5065
GAS LISTING /tmp/ccdGK7kM.s 			page 388


 14523 4d2b C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM
 14523      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14524              		.loc 1 493 32 is_stmt 1 view .LVU5066
 14525              	.LVL990:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14526              		.loc 1 493 25 view .LVU5067
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14527              		.loc 1 494 13 view .LVU5068
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14528              		.loc 1 493 32 view .LVU5069
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14529              		.loc 1 493 25 view .LVU5070
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14530              		.loc 1 494 13 view .LVU5071
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14531              		.loc 1 493 32 view .LVU5072
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14532              		.loc 1 493 25 view .LVU5073
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14533              		.loc 1 493 25 is_stmt 0 view .LVU5074
 14534              	.LBE647:
 14535              	.LBB648:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14536              		.loc 1 495 25 is_stmt 1 view .LVU5075
 496:sieve_extend.c ****     }
 14537              		.loc 1 496 13 view .LVU5076
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14538              		.loc 1 495 32 view .LVU5077
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14539              		.loc 1 495 25 view .LVU5078
 496:sieve_extend.c ****     }
 14540              		.loc 1 496 13 view .LVU5079
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14541              		.loc 1 495 32 view .LVU5080
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14542              		.loc 1 495 25 view .LVU5081
 496:sieve_extend.c ****     }
 14543              		.loc 1 496 13 view .LVU5082
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14544              		.loc 1 495 32 view .LVU5083
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14545              		.loc 1 495 25 view .LVU5084
 496:sieve_extend.c ****     }
 14546              		.loc 1 496 13 view .LVU5085
 14547 4d30 41FFC2   		inc	r10d	# ivtmp.653
 14548              	.LBE648:
 14549              	.LBB649:
 14550              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14551              		.loc 1 494 25 is_stmt 0 view .LVU5086
 14552 4d33 C443FD00 		vpermq	ymm14, ymm13, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14552      F555
 14553              	.LBE649:
 14554              	.LBB650:
 14555              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 389


 14556              		.loc 1 496 34 view .LVU5087
 14557 4d39 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.643, vect__102.642, _4
 14558              	.LBE650:
 14559              	.LBB651:
 14560              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14561              		.loc 1 494 34 view .LVU5088
 14562 4d3d C595F3D9 		vpsllq	ymm3, ymm13, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14563              	.LBE651:
 14564              	.LBB652:
 14565              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14566              		.loc 1 496 22 view .LVU5089
 14567 4d41 C585EBE3 		vpor	ymm4, ymm15, ymm3	# vect__58.648, vect__57.643, vect__104.647
 14568 4d45 C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect
 14568      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14569              		.loc 1 495 32 is_stmt 1 view .LVU5090
 14570              	.LVL991:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14571              		.loc 1 495 25 view .LVU5091
 14572              	.LBE652:
 491:sieve_extend.c ****     {
 14573              		.loc 1 491 24 view .LVU5092
 491:sieve_extend.c ****     {
 14574              		.loc 1 491 12 view .LVU5093
 14575 4d4a 4883C020 		add	rax, 32	# ivtmp.656,
 14576              	.L1453:
 14577              	.LVL992:
 14578              	.LBB653:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14579              		.loc 1 493 25 view .LVU5094
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14580              		.loc 1 494 13 view .LVU5095
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14581              		.loc 1 493 32 view .LVU5096
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14582              		.loc 1 493 25 view .LVU5097
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14583              		.loc 1 494 13 view .LVU5098
 14584              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14585              		.loc 1 494 25 is_stmt 0 view .LVU5099
 14586 4d4e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[
 14586      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14587              		.loc 1 493 32 is_stmt 1 view .LVU5100
 14588              	.LVL993:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14589              		.loc 1 493 25 view .LVU5101
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14590              		.loc 1 494 13 view .LVU5102
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14591              		.loc 1 493 32 view .LVU5103
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14592              		.loc 1 493 25 view .LVU5104
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccdGK7kM.s 			page 390


 14593              		.loc 1 494 13 view .LVU5105
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14594              		.loc 1 493 32 view .LVU5106
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14595              		.loc 1 493 25 view .LVU5107
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14596              		.loc 1 493 25 is_stmt 0 view .LVU5108
 14597              	.LBE653:
 14598              	.LBB654:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14599              		.loc 1 495 25 is_stmt 1 view .LVU5109
 496:sieve_extend.c ****     }
 14600              		.loc 1 496 13 view .LVU5110
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14601              		.loc 1 495 32 view .LVU5111
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14602              		.loc 1 495 25 view .LVU5112
 496:sieve_extend.c ****     }
 14603              		.loc 1 496 13 view .LVU5113
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14604              		.loc 1 495 32 view .LVU5114
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14605              		.loc 1 495 25 view .LVU5115
 496:sieve_extend.c ****     }
 14606              		.loc 1 496 13 view .LVU5116
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14607              		.loc 1 495 32 view .LVU5117
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14608              		.loc 1 495 25 view .LVU5118
 496:sieve_extend.c ****     }
 14609              		.loc 1 496 13 view .LVU5119
 14610 4d53 41FFC2   		inc	r10d	# ivtmp.653
 14611              	.LBE654:
 14612              	.LBB655:
 14613              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14614              		.loc 1 494 25 is_stmt 0 view .LVU5120
 14615 4d56 C4E3FD00 		vpermq	ymm2, ymm5, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14615      D555
 14616              	.LBE655:
 14617              	.LBB656:
 14618              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14619              		.loc 1 496 34 view .LVU5121
 14620 4d5c C5EDD3F0 		vpsrlq	ymm6, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 14621              	.LBE656:
 14622              	.LBB657:
 14623              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14624              		.loc 1 494 34 view .LVU5122
 14625 4d60 C5D5F3F9 		vpsllq	ymm7, ymm5, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 14626              	.LBE657:
 14627              	.LBB658:
 14628              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14629              		.loc 1 496 22 view .LVU5123
 14630 4d64 C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.648, vect__57.643, vect__104.647
GAS LISTING /tmp/ccdGK7kM.s 			page 391


 14631 4d68 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect
 14631      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14632              		.loc 1 495 32 is_stmt 1 view .LVU5124
 14633              	.LVL994:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14634              		.loc 1 495 25 view .LVU5125
 14635              	.LBE658:
 491:sieve_extend.c ****     {
 14636              		.loc 1 491 24 view .LVU5126
 491:sieve_extend.c ****     {
 14637              		.loc 1 491 12 view .LVU5127
 14638 4d6d 4883C020 		add	rax, 32	# ivtmp.656,
 14639              	.L1452:
 14640              	.LVL995:
 14641              	.LBB659:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14642              		.loc 1 493 25 view .LVU5128
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14643              		.loc 1 494 13 view .LVU5129
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14644              		.loc 1 493 32 view .LVU5130
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14645              		.loc 1 493 25 view .LVU5131
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14646              		.loc 1 494 13 view .LVU5132
 14647              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14648              		.loc 1 494 25 is_stmt 0 view .LVU5133
 14649 4d71 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[
 14649      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14650              		.loc 1 493 32 is_stmt 1 view .LVU5134
 14651              	.LVL996:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14652              		.loc 1 493 25 view .LVU5135
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14653              		.loc 1 494 13 view .LVU5136
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14654              		.loc 1 493 32 view .LVU5137
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14655              		.loc 1 493 25 view .LVU5138
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14656              		.loc 1 494 13 view .LVU5139
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14657              		.loc 1 493 32 view .LVU5140
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14658              		.loc 1 493 25 view .LVU5141
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14659              		.loc 1 493 25 is_stmt 0 view .LVU5142
 14660              	.LBE659:
 14661              	.LBB660:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14662              		.loc 1 495 25 is_stmt 1 view .LVU5143
 496:sieve_extend.c ****     }
 14663              		.loc 1 496 13 view .LVU5144
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 392


 14664              		.loc 1 495 32 view .LVU5145
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14665              		.loc 1 495 25 view .LVU5146
 496:sieve_extend.c ****     }
 14666              		.loc 1 496 13 view .LVU5147
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14667              		.loc 1 495 32 view .LVU5148
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14668              		.loc 1 495 25 view .LVU5149
 496:sieve_extend.c ****     }
 14669              		.loc 1 496 13 view .LVU5150
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14670              		.loc 1 495 32 view .LVU5151
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14671              		.loc 1 495 25 view .LVU5152
 496:sieve_extend.c ****     }
 14672              		.loc 1 496 13 view .LVU5153
 14673 4d76 41FFC2   		inc	r10d	# ivtmp.653
 14674              	.LBE660:
 14675              	.LBB661:
 14676              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14677              		.loc 1 494 25 is_stmt 0 view .LVU5154
 14678 4d79 C443FD00 		vpermq	ymm10, ymm9, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14678      D155
 14679              	.LBE661:
 14680              	.LBB662:
 14681              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14682              		.loc 1 496 34 view .LVU5155
 14683 4d7f C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.643, vect__102.642, _4
 14684              	.LBE662:
 14685              	.LBB663:
 14686              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14687              		.loc 1 494 34 view .LVU5156
 14688 4d83 C535F3E1 		vpsllq	ymm12, ymm9, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14689              	.LBE663:
 14690              	.LBB664:
 14691              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14692              		.loc 1 496 22 view .LVU5157
 14693 4d87 C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.648, vect__57.643, vect__104.647
 14693      EC
 14694 4d8c C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vec
 14694      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14695              		.loc 1 495 32 is_stmt 1 view .LVU5158
 14696              	.LVL997:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14697              		.loc 1 495 25 view .LVU5159
 14698              	.LBE664:
 491:sieve_extend.c ****     {
 14699              		.loc 1 491 24 view .LVU5160
 491:sieve_extend.c ****     {
 14700              		.loc 1 491 12 view .LVU5161
 14701 4d91 4883C020 		add	rax, 32	# ivtmp.656,
GAS LISTING /tmp/ccdGK7kM.s 			page 393


 14702 4d95 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.653
 14703 4d98 0F861E01 		jbe	.L1465	#,
 14703      0000
 14704              	.L1423:
 14705              	.LVL998:
 14706              	.LBB665:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14707              		.loc 1 493 25 view .LVU5162
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14708              		.loc 1 494 13 view .LVU5163
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14709              		.loc 1 493 32 view .LVU5164
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14710              		.loc 1 493 25 view .LVU5165
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14711              		.loc 1 494 13 view .LVU5166
 14712              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14713              		.loc 1 494 25 is_stmt 0 view .LVU5167
 14714 4d9e C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], ME
 14714      0620
 14715 4da4 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM
 14715      06
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14716              		.loc 1 493 32 is_stmt 1 view .LVU5168
 14717              	.LVL999:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14718              		.loc 1 493 25 view .LVU5169
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14719              		.loc 1 494 13 view .LVU5170
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14720              		.loc 1 493 32 view .LVU5171
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14721              		.loc 1 493 25 view .LVU5172
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14722              		.loc 1 494 13 view .LVU5173
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14723              		.loc 1 493 32 view .LVU5174
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14724              		.loc 1 493 25 view .LVU5175
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14725              		.loc 1 493 25 is_stmt 0 view .LVU5176
 14726              	.LBE665:
 14727              	.LBB666:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14728              		.loc 1 495 25 is_stmt 1 view .LVU5177
 496:sieve_extend.c ****     }
 14729              		.loc 1 496 13 view .LVU5178
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14730              		.loc 1 495 32 view .LVU5179
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14731              		.loc 1 495 25 view .LVU5180
 496:sieve_extend.c ****     }
 14732              		.loc 1 496 13 view .LVU5181
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14733              		.loc 1 495 32 view .LVU5182
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 394


 14734              		.loc 1 495 25 view .LVU5183
 496:sieve_extend.c ****     }
 14735              		.loc 1 496 13 view .LVU5184
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14736              		.loc 1 495 32 view .LVU5185
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14737              		.loc 1 495 25 view .LVU5186
 496:sieve_extend.c ****     }
 14738              		.loc 1 496 13 view .LVU5187
 14739              	.LBE666:
 14740              	.LBB667:
 14741              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14742              		.loc 1 494 25 is_stmt 0 view .LVU5188
 14743 4da9 C4E3FD00 		vpermq	ymm2, ymm6, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14743      D655
 14744              	.LBE667:
 14745              	.LBB668:
 14746              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14747              		.loc 1 496 34 view .LVU5189
 14748 4daf C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 14749              	.LBE668:
 14750              	.LBB669:
 14751              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14752              		.loc 1 494 34 view .LVU5190
 14753 4db3 C54DF3C1 		vpsllq	ymm8, ymm6, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 14754              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14755              		.loc 1 494 25 view .LVU5191
 14756 4db7 C443FD00 		vpermq	ymm15, ymm14, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14756      FE55
 14757              	.LBE669:
 14758              	.LBB670:
 14759              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14760              		.loc 1 496 22 view .LVU5192
 14761 4dbd C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.648, vect__57.643, vect__104.647
 14761      C8
 14762              	.LBE670:
 14763              	.LBB671:
 14764              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14765              		.loc 1 494 25 view .LVU5193
 14766 4dc2 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 128[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], M
 14766      06800000 
 14766      00
 14767 4dcb C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 64[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], M
 14767      0640
 14768              	.LBE671:
 14769              	.LBB672:
 14770              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14771              		.loc 1 496 34 view .LVU5194
 14772 4dd1 C585D3E0 		vpsrlq	ymm4, ymm15, xmm0	# vect__57.643, vect__102.642, _4
 14773              	.LBE672:
GAS LISTING /tmp/ccdGK7kM.s 			page 395


 14774              	.LBB673:
 14775              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14776              		.loc 1 494 34 view .LVU5195
 14777 4dd5 C58DF3D9 		vpsllq	ymm3, ymm14, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14778              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14779              		.loc 1 494 25 view .LVU5196
 14780 4dd9 C57E6F7C 		vmovdqu	ymm15, YMMWORD PTR 96[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], M
 14780      0660
 14781 4ddf C4E3FD00 		vpermq	ymm2, ymm7, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14781      D755
 14782              	.LBE673:
 14783              	.LBB674:
 14784              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14785              		.loc 1 496 34 view .LVU5197
 14786 4de5 C56DD3C0 		vpsrlq	ymm8, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 14787              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14788              		.loc 1 496 22 view .LVU5198
 14789 4de9 C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], ve
 14789      0720
 14790              	.LBE674:
 14791              	.LBB675:
 14792              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14793              		.loc 1 494 34 view .LVU5199
 14794 4def C545F3C9 		vpsllq	ymm9, ymm7, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 14795              	.LBE675:
 14796              	.LBB676:
 14797              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14798              		.loc 1 496 22 view .LVU5200
 14799 4df3 C5DDEBEB 		vpor	ymm5, ymm4, ymm3	# vect__58.648, vect__57.643, vect__104.647
 14800              	.LBE676:
 14801              	.LBB677:
 14802              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14803              		.loc 1 494 25 view .LVU5201
 14804 4df7 C443FD00 		vpermq	ymm11, ymm10, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14804      DA55
 14805 4dfd C4C3FD00 		vpermq	ymm4, ymm15, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14805      E755
 14806              	.LBE677:
 14807              	.LBB678:
 14808              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14809              		.loc 1 496 34 view .LVU5202
 14810 4e03 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.643, vect__102.642, _4
 14811              	.LBE678:
 14812              	.LBB679:
 14813              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14814              		.loc 1 494 34 view .LVU5203
 14815 4e07 C52DF3E9 		vpsllq	ymm13, ymm10, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14816              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccdGK7kM.s 			page 396


 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14817              		.loc 1 494 25 view .LVU5204
 14818 4e0b C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 160[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14818      06A00000 
 14818      00
 14819              	.LBE679:
 14820              	.LBB680:
 14821              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14822              		.loc 1 496 22 view .LVU5205
 14823 4e14 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.648, vect__57.643, vect__104.647
 14823      D1
 14824              	.LBE680:
 14825              	.LBB681:
 14826              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14827              		.loc 1 494 34 view .LVU5206
 14828 4e19 C585F3D9 		vpsllq	ymm3, ymm15, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 14829              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14830              		.loc 1 494 25 view .LVU5207
 14831 4e1d C57E6F84 		vmovdqu	ymm8, YMMWORD PTR 224[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], M
 14831      06E00000 
 14831      00
 14832              	.LBE681:
 14833              	.LBB682:
 14834              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14835              		.loc 1 496 22 view .LVU5208
 14836 4e26 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect
 14836      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14837              		.loc 1 495 32 is_stmt 1 view .LVU5209
 14838              	.LVL1000:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14839              		.loc 1 495 25 view .LVU5210
 14840              	.LBE682:
 491:sieve_extend.c ****     {
 14841              		.loc 1 491 24 view .LVU5211
 491:sieve_extend.c ****     {
 14842              		.loc 1 491 12 view .LVU5212
 14843              	.LBB683:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14844              		.loc 1 493 25 view .LVU5213
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14845              		.loc 1 494 13 view .LVU5214
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14846              		.loc 1 493 32 view .LVU5215
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14847              		.loc 1 493 25 view .LVU5216
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14848              		.loc 1 494 13 view .LVU5217
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14849              		.loc 1 493 32 view .LVU5218
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14850              		.loc 1 493 25 view .LVU5219
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccdGK7kM.s 			page 397


 14851              		.loc 1 494 13 view .LVU5220
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14852              		.loc 1 493 32 view .LVU5221
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14853              		.loc 1 493 25 view .LVU5222
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14854              		.loc 1 494 13 view .LVU5223
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14855              		.loc 1 493 32 view .LVU5224
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14856              		.loc 1 493 25 view .LVU5225
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14857              		.loc 1 493 25 is_stmt 0 view .LVU5226
 14858              	.LBE683:
 14859              	.LBB684:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14860              		.loc 1 495 25 is_stmt 1 view .LVU5227
 496:sieve_extend.c ****     }
 14861              		.loc 1 496 13 view .LVU5228
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14862              		.loc 1 495 32 view .LVU5229
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14863              		.loc 1 495 25 view .LVU5230
 496:sieve_extend.c ****     }
 14864              		.loc 1 496 13 view .LVU5231
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14865              		.loc 1 495 32 view .LVU5232
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14866              		.loc 1 495 25 view .LVU5233
 496:sieve_extend.c ****     }
 14867              		.loc 1 496 13 view .LVU5234
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14868              		.loc 1 495 32 view .LVU5235
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14869              		.loc 1 495 25 view .LVU5236
 496:sieve_extend.c ****     }
 14870              		.loc 1 496 13 view .LVU5237
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14871              		.loc 1 495 32 view .LVU5238
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14872              		.loc 1 495 25 view .LVU5239
 14873              	.LBE684:
 491:sieve_extend.c ****     {
 14874              		.loc 1 491 24 view .LVU5240
 491:sieve_extend.c ****     {
 14875              		.loc 1 491 12 view .LVU5241
 14876              	.LBB685:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14877              		.loc 1 493 25 view .LVU5242
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14878              		.loc 1 494 13 view .LVU5243
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14879              		.loc 1 493 32 view .LVU5244
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14880              		.loc 1 493 25 view .LVU5245
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14881              		.loc 1 494 13 view .LVU5246
GAS LISTING /tmp/ccdGK7kM.s 			page 398


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14882              		.loc 1 493 32 view .LVU5247
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14883              		.loc 1 493 25 view .LVU5248
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14884              		.loc 1 494 13 view .LVU5249
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14885              		.loc 1 493 32 view .LVU5250
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14886              		.loc 1 493 25 view .LVU5251
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14887              		.loc 1 494 13 view .LVU5252
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14888              		.loc 1 493 32 view .LVU5253
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14889              		.loc 1 493 25 view .LVU5254
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14890              		.loc 1 493 25 is_stmt 0 view .LVU5255
 14891              	.LBE685:
 14892              	.LBB686:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14893              		.loc 1 495 25 is_stmt 1 view .LVU5256
 496:sieve_extend.c ****     }
 14894              		.loc 1 496 13 view .LVU5257
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14895              		.loc 1 495 32 view .LVU5258
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14896              		.loc 1 495 25 view .LVU5259
 496:sieve_extend.c ****     }
 14897              		.loc 1 496 13 view .LVU5260
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14898              		.loc 1 495 32 view .LVU5261
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14899              		.loc 1 495 25 view .LVU5262
 496:sieve_extend.c ****     }
 14900              		.loc 1 496 13 view .LVU5263
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14901              		.loc 1 495 32 view .LVU5264
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14902              		.loc 1 495 25 view .LVU5265
 496:sieve_extend.c ****     }
 14903              		.loc 1 496 13 view .LVU5266
 14904              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14905              		.loc 1 496 34 is_stmt 0 view .LVU5267
 14906 4e2b C5DDD3E8 		vpsrlq	ymm5, ymm4, xmm0	# vect__57.643, vect__102.642, _4
 14907              	.LBE686:
 14908              	.LBB687:
 14909              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14910              		.loc 1 494 25 view .LVU5268
 14911 4e2f C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], M
 14911      06C00000 
 14911      00
 14912              	.LBE687:
 14913              	.LBB688:
 14914              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 399


 496:sieve_extend.c ****     }
 14915              		.loc 1 496 22 view .LVU5269
 14916 4e38 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.648, vect__57.643, vect__104.647
 14916      F5
 14917 4e3d C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.648, vect__57.643, vect__104.647
 14918              	.LBE688:
 14919              	.LBB689:
 14920              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14921              		.loc 1 494 25 view .LVU5270
 14922 4e41 C443FD00 		vpermq	ymm12, ymm11, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14922      E355
 14923 4e47 C4E3FD00 		vpermq	ymm5, ymm4, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14923      EC55
 14924 4e4d C4C3FD00 		vpermq	ymm2, ymm8, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 14924      D055
 14925              	.LBE689:
 14926              	.LBB690:
 14927              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14928              		.loc 1 496 22 view .LVU5271
 14929 4e53 C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], v
 14929      0740
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14930              		.loc 1 495 32 is_stmt 1 view .LVU5272
 14931              	.LVL1001:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14932              		.loc 1 495 25 view .LVU5273
 14933              	.LBE690:
 491:sieve_extend.c ****     {
 14934              		.loc 1 491 24 view .LVU5274
 491:sieve_extend.c ****     {
 14935              		.loc 1 491 12 view .LVU5275
 14936              	.LBB691:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14937              		.loc 1 493 25 view .LVU5276
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14938              		.loc 1 494 13 view .LVU5277
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14939              		.loc 1 493 32 view .LVU5278
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14940              		.loc 1 493 25 view .LVU5279
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14941              		.loc 1 494 13 view .LVU5280
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14942              		.loc 1 493 32 view .LVU5281
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14943              		.loc 1 493 25 view .LVU5282
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14944              		.loc 1 494 13 view .LVU5283
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14945              		.loc 1 493 32 view .LVU5284
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14946              		.loc 1 493 25 view .LVU5285
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14947              		.loc 1 494 13 view .LVU5286
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccdGK7kM.s 			page 400


 14948              		.loc 1 493 32 view .LVU5287
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14949              		.loc 1 493 25 view .LVU5288
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14950              		.loc 1 493 25 is_stmt 0 view .LVU5289
 14951              	.LBE691:
 14952              	.LBB692:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14953              		.loc 1 495 25 is_stmt 1 view .LVU5290
 496:sieve_extend.c ****     }
 14954              		.loc 1 496 13 view .LVU5291
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14955              		.loc 1 495 32 view .LVU5292
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14956              		.loc 1 495 25 view .LVU5293
 496:sieve_extend.c ****     }
 14957              		.loc 1 496 13 view .LVU5294
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14958              		.loc 1 495 32 view .LVU5295
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14959              		.loc 1 495 25 view .LVU5296
 496:sieve_extend.c ****     }
 14960              		.loc 1 496 13 view .LVU5297
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14961              		.loc 1 495 32 view .LVU5298
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14962              		.loc 1 495 25 view .LVU5299
 496:sieve_extend.c ****     }
 14963              		.loc 1 496 13 view .LVU5300
 14964              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 14965              		.loc 1 496 22 is_stmt 0 view .LVU5301
 14966 4e59 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], ve
 14966      0760
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14967              		.loc 1 495 32 is_stmt 1 view .LVU5302
 14968              	.LVL1002:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14969              		.loc 1 495 25 view .LVU5303
 14970              	.LBE692:
 491:sieve_extend.c ****     {
 14971              		.loc 1 491 24 view .LVU5304
 491:sieve_extend.c ****     {
 14972              		.loc 1 491 12 view .LVU5305
 14973              	.LBB693:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14974              		.loc 1 493 25 view .LVU5306
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14975              		.loc 1 494 13 view .LVU5307
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14976              		.loc 1 493 32 view .LVU5308
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14977              		.loc 1 493 25 view .LVU5309
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14978              		.loc 1 494 13 view .LVU5310
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14979              		.loc 1 493 32 view .LVU5311
GAS LISTING /tmp/ccdGK7kM.s 			page 401


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14980              		.loc 1 493 25 view .LVU5312
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14981              		.loc 1 494 13 view .LVU5313
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14982              		.loc 1 493 32 view .LVU5314
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14983              		.loc 1 493 25 view .LVU5315
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14984              		.loc 1 494 13 view .LVU5316
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14985              		.loc 1 493 32 view .LVU5317
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14986              		.loc 1 493 25 view .LVU5318
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14987              		.loc 1 493 25 is_stmt 0 view .LVU5319
 14988              	.LBE693:
 14989              	.LBB694:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14990              		.loc 1 495 25 is_stmt 1 view .LVU5320
 496:sieve_extend.c ****     }
 14991              		.loc 1 496 13 view .LVU5321
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14992              		.loc 1 495 32 view .LVU5322
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14993              		.loc 1 495 25 view .LVU5323
 496:sieve_extend.c ****     }
 14994              		.loc 1 496 13 view .LVU5324
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14995              		.loc 1 495 32 view .LVU5325
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14996              		.loc 1 495 25 view .LVU5326
 496:sieve_extend.c ****     }
 14997              		.loc 1 496 13 view .LVU5327
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14998              		.loc 1 495 32 view .LVU5328
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14999              		.loc 1 495 25 view .LVU5329
 496:sieve_extend.c ****     }
 15000              		.loc 1 496 13 view .LVU5330
 15001              	.LBE694:
 15002              	.LBB695:
 15003              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15004              		.loc 1 494 34 is_stmt 0 view .LVU5331
 15005 4e5f C525F3F1 		vpsllq	ymm14, ymm11, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 15006              	.LBE695:
 15007              	.LBB696:
 15008              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15009              		.loc 1 496 22 view .LVU5332
 15010 4e63 C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], 
 15010      07800000 
 15010      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15011              		.loc 1 495 32 is_stmt 1 view .LVU5333
 15012              	.LVL1003:
GAS LISTING /tmp/ccdGK7kM.s 			page 402


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15013              		.loc 1 495 25 view .LVU5334
 15014              	.LBE696:
 491:sieve_extend.c ****     {
 15015              		.loc 1 491 24 view .LVU5335
 491:sieve_extend.c ****     {
 15016              		.loc 1 491 12 view .LVU5336
 15017              	.LBB697:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15018              		.loc 1 493 25 view .LVU5337
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15019              		.loc 1 494 13 view .LVU5338
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15020              		.loc 1 493 32 view .LVU5339
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15021              		.loc 1 493 25 view .LVU5340
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15022              		.loc 1 494 13 view .LVU5341
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15023              		.loc 1 493 32 view .LVU5342
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15024              		.loc 1 493 25 view .LVU5343
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15025              		.loc 1 494 13 view .LVU5344
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15026              		.loc 1 493 32 view .LVU5345
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15027              		.loc 1 493 25 view .LVU5346
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15028              		.loc 1 494 13 view .LVU5347
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15029              		.loc 1 493 32 view .LVU5348
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15030              		.loc 1 493 25 view .LVU5349
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15031              		.loc 1 493 25 is_stmt 0 view .LVU5350
 15032              	.LBE697:
 15033              	.LBB698:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15034              		.loc 1 495 25 is_stmt 1 view .LVU5351
 496:sieve_extend.c ****     }
 15035              		.loc 1 496 13 view .LVU5352
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15036              		.loc 1 495 32 view .LVU5353
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15037              		.loc 1 495 25 view .LVU5354
 496:sieve_extend.c ****     }
 15038              		.loc 1 496 13 view .LVU5355
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15039              		.loc 1 495 32 view .LVU5356
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15040              		.loc 1 495 25 view .LVU5357
 496:sieve_extend.c ****     }
 15041              		.loc 1 496 13 view .LVU5358
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15042              		.loc 1 495 32 view .LVU5359
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 403


 15043              		.loc 1 495 25 view .LVU5360
 496:sieve_extend.c ****     }
 15044              		.loc 1 496 13 view .LVU5361
 15045              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15046              		.loc 1 496 34 is_stmt 0 view .LVU5362
 15047 4e6c C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.643, vect__102.642, _4
 15048 4e70 C5D5D3F0 		vpsrlq	ymm6, ymm5, xmm0	# vect__57.643, vect__102.642, _4
 15049              	.LBE698:
 15050              	.LBB699:
 15051              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15052              		.loc 1 494 34 view .LVU5363
 15053 4e74 C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], s
 15054              	.LBE699:
 15055              	.LBB700:
 15056              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15057              		.loc 1 496 34 view .LVU5364
 15058 4e78 C56DD3C8 		vpsrlq	ymm9, ymm2, xmm0	# vect__57.643, vect__102.642, _4
 15059              	.LBE700:
 15060              	.LBB701:
 15061              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15062              		.loc 1 494 34 view .LVU5365
 15063 4e7c C53DF3D1 		vpsllq	ymm10, ymm8, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 15064              	.LBE701:
 15065              	.LBB702:
 15066              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15067              		.loc 1 496 22 view .LVU5366
 15068 4e80 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.648, vect__57.643, vect__104.647
 15068      FE
 15069 4e85 C5CDEBFB 		vpor	ymm7, ymm6, ymm3	# vect__58.648, vect__57.643, vect__104.647
 15070 4e89 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.648, vect__57.643, vect__104.647
 15070      DA
 15071 4e8e 4183C208 		add	r10d, 8	# ivtmp.653,
 15072 4e92 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], 
 15072      07A00000 
 15072      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15073              		.loc 1 495 32 is_stmt 1 view .LVU5367
 15074              	.LVL1004:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15075              		.loc 1 495 25 view .LVU5368
 15076              	.LBE702:
 491:sieve_extend.c ****     {
 15077              		.loc 1 491 24 view .LVU5369
 491:sieve_extend.c ****     {
 15078              		.loc 1 491 12 view .LVU5370
 15079              	.LBB703:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15080              		.loc 1 493 25 view .LVU5371
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15081              		.loc 1 494 13 view .LVU5372
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15082              		.loc 1 493 32 view .LVU5373
GAS LISTING /tmp/ccdGK7kM.s 			page 404


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15083              		.loc 1 493 25 view .LVU5374
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15084              		.loc 1 494 13 view .LVU5375
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15085              		.loc 1 493 32 view .LVU5376
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15086              		.loc 1 493 25 view .LVU5377
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15087              		.loc 1 494 13 view .LVU5378
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15088              		.loc 1 493 32 view .LVU5379
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15089              		.loc 1 493 25 view .LVU5380
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15090              		.loc 1 494 13 view .LVU5381
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15091              		.loc 1 493 32 view .LVU5382
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15092              		.loc 1 493 25 view .LVU5383
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15093              		.loc 1 493 25 is_stmt 0 view .LVU5384
 15094              	.LBE703:
 15095              	.LBB704:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15096              		.loc 1 495 25 is_stmt 1 view .LVU5385
 496:sieve_extend.c ****     }
 15097              		.loc 1 496 13 view .LVU5386
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15098              		.loc 1 495 32 view .LVU5387
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15099              		.loc 1 495 25 view .LVU5388
 496:sieve_extend.c ****     }
 15100              		.loc 1 496 13 view .LVU5389
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15101              		.loc 1 495 32 view .LVU5390
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15102              		.loc 1 495 25 view .LVU5391
 496:sieve_extend.c ****     }
 15103              		.loc 1 496 13 view .LVU5392
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15104              		.loc 1 495 32 view .LVU5393
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15105              		.loc 1 495 25 view .LVU5394
 496:sieve_extend.c ****     }
 15106              		.loc 1 496 13 view .LVU5395
 15107              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15108              		.loc 1 496 22 is_stmt 0 view .LVU5396
 15109 4e9b C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], v
 15109      07C00000 
 15109      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15110              		.loc 1 495 32 is_stmt 1 view .LVU5397
 15111              	.LVL1005:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15112              		.loc 1 495 25 view .LVU5398
GAS LISTING /tmp/ccdGK7kM.s 			page 405


 15113              	.LBE704:
 491:sieve_extend.c ****     {
 15114              		.loc 1 491 24 view .LVU5399
 491:sieve_extend.c ****     {
 15115              		.loc 1 491 12 view .LVU5400
 15116              	.LBB705:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15117              		.loc 1 493 25 view .LVU5401
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15118              		.loc 1 494 13 view .LVU5402
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15119              		.loc 1 493 32 view .LVU5403
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15120              		.loc 1 493 25 view .LVU5404
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15121              		.loc 1 494 13 view .LVU5405
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15122              		.loc 1 493 32 view .LVU5406
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15123              		.loc 1 493 25 view .LVU5407
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15124              		.loc 1 494 13 view .LVU5408
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15125              		.loc 1 493 32 view .LVU5409
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15126              		.loc 1 493 25 view .LVU5410
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15127              		.loc 1 494 13 view .LVU5411
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15128              		.loc 1 493 32 view .LVU5412
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15129              		.loc 1 493 25 view .LVU5413
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15130              		.loc 1 493 25 is_stmt 0 view .LVU5414
 15131              	.LBE705:
 15132              	.LBB706:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15133              		.loc 1 495 25 is_stmt 1 view .LVU5415
 496:sieve_extend.c ****     }
 15134              		.loc 1 496 13 view .LVU5416
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15135              		.loc 1 495 32 view .LVU5417
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15136              		.loc 1 495 25 view .LVU5418
 496:sieve_extend.c ****     }
 15137              		.loc 1 496 13 view .LVU5419
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15138              		.loc 1 495 32 view .LVU5420
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15139              		.loc 1 495 25 view .LVU5421
 496:sieve_extend.c ****     }
 15140              		.loc 1 496 13 view .LVU5422
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15141              		.loc 1 495 32 view .LVU5423
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15142              		.loc 1 495 25 view .LVU5424
 496:sieve_extend.c ****     }
GAS LISTING /tmp/ccdGK7kM.s 			page 406


 15143              		.loc 1 496 13 view .LVU5425
 15144              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15145              		.loc 1 496 22 is_stmt 0 view .LVU5426
 15146 4ea4 C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], 
 15146      07E00000 
 15146      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15147              		.loc 1 495 32 is_stmt 1 view .LVU5427
 15148              	.LVL1006:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15149              		.loc 1 495 25 view .LVU5428
 15150              	.LBE706:
 491:sieve_extend.c ****     {
 15151              		.loc 1 491 24 view .LVU5429
 491:sieve_extend.c ****     {
 15152              		.loc 1 491 12 view .LVU5430
 15153 4ead 48050001 		add	rax, 256	# ivtmp.656,
 15153      0000
 15154 4eb3 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.653
 15155 4eb6 0F87E2FE 		ja	.L1423	#,
 15155      FFFF
 15156              	.L1465:
 15157 4ebc 4589CB   		mov	r11d, r9d	# _80, _80
 15158 4ebf 49FFC3   		inc	r11	# tmp144
 15159 4ec2 49C1E305 		sal	r11, 5	# _105,
 15160 4ec6 4C01DF   		add	rdi, r11	# dst, _105
 15161 4ec9 4C01DE   		add	rsi, r11	# src, _105
 15162 4ecc 428D0485 		lea	eax, 0[0+r8*4]	# tmp.626,
 15162      00000000 
 15163              	.LVL1007:
 15164              	.L1424:
 498:sieve_extend.c ****     {
 15165              		.loc 1 498 12 view .LVU5431
 15166              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 15167              		.loc 1 498 5 is_stmt 0 view .LVU5432
 15168 4ed4 39C2     		cmp	edx, eax	# size, tmp.626
 15169 4ed6 0F8EAA00 		jle	.L1466	#,
 15169      0000
 15170 4edc 448D42FF 		lea	r8d, -1[rdx]	# tmp147,
 15171 4ee0 41BA4000 		mov	r10d, 64	# tmp146,
 15171      0000
 15172 4ee6 4189D3   		mov	r11d, edx	# niters.621, size
 15173 4ee9 4129C0   		sub	r8d, eax	# tmp148, tmp.626
 15174 4eec 4129CA   		sub	r10d, ecx	# _97, shift
 15175 4eef 4129C3   		sub	r11d, eax	# niters.621, tmp.626
 15176 4ef2 4183F802 		cmp	r8d, 2	# tmp148,
 15177 4ef6 7640     		jbe	.L1425	#,
 15178              	.LVL1008:
 500:sieve_extend.c ****     }    
 15179              		.loc 1 500 9 is_stmt 1 view .LVU5433
 15180              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15181              		.loc 1 500 23 is_stmt 0 view .LVU5434
 15182 4ef8 C5FE6F0E 		vmovdqu	ymm1, YMMWORD PTR [rsi]	# tmp276, MEM[(const uint64_t *)src_30]
 15183              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/ccdGK7kM.s 			page 407


 500:sieve_extend.c ****     }    
 15184              		.loc 1 500 43 view .LVU5435
 15185 4efc C57E6F76 		vmovdqu	ymm14, YMMWORD PTR 8[rsi]	# tmp277, MEM[(const uint64_t *)src_30 + 8B]
 15185      08
 15186              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15187              		.loc 1 500 23 view .LVU5436
 15188 4f01 C5F96EC1 		vmovd	xmm0, ecx	# shift, shift
 15189              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15190              		.loc 1 500 43 view .LVU5437
 15191 4f05 C441796E 		vmovd	xmm13, r10d	# _97, _97
 15191      EA
 15192 4f0a 4589D9   		mov	r9d, r11d	# niters_vector_mult_vf.623, niters.621
 15193 4f0d 4183E1FC 		and	r9d, -4	# niters_vector_mult_vf.623,
 15194              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15195              		.loc 1 500 23 view .LVU5438
 15196 4f11 C575D3E0 		vpsrlq	ymm12, ymm1, xmm0	# vect__17.630, tmp276, shift
 15197              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15198              		.loc 1 500 43 view .LVU5439
 15199 4f15 C4410DF3 		vpsllq	ymm15, ymm14, xmm13	# vect__20.634, tmp277, _97
 15199      FD
 15200 4f1a 4589C8   		mov	r8d, r9d	# niters_vector_mult_vf.623, niters_vector_mult_vf.623
 15201 4f1d 49C1E003 		sal	r8, 3	# _129,
 15202              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15203              		.loc 1 500 32 view .LVU5440
 15204 4f21 C4C11DEB 		vpor	ymm4, ymm12, ymm15	# vect__21.635, vect__17.630, vect__20.634
 15204      E7
 15205              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15206              		.loc 1 500 14 view .LVU5441
 15207 4f26 C5FE7F27 		vmovdqu	YMMWORD PTR [rdi], ymm4	# MEM[(uint64_t *)dst_86], vect__21.635
 498:sieve_extend.c ****     {
 15208              		.loc 1 498 22 is_stmt 1 view .LVU5442
 498:sieve_extend.c ****     {
 15209              		.loc 1 498 12 view .LVU5443
 15210 4f2a 4C01C6   		add	rsi, r8	# src, _129
 15211 4f2d 4C01C7   		add	rdi, r8	# dst, _129
 15212 4f30 4401C8   		add	eax, r9d	# tmp.626, niters_vector_mult_vf.623
 15213 4f33 4539CB   		cmp	r11d, r9d	# niters.621, niters_vector_mult_vf.623
 15214 4f36 744E     		je	.L1466	#,
 15215              	.L1425:
 15216              	.LVL1009:
 500:sieve_extend.c ****     }    
 15217              		.loc 1 500 9 view .LVU5444
 15218              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15219              		.loc 1 500 35 is_stmt 0 view .LVU5445
 15220 4f38 4C8B4608 		mov	r8, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_110 + 8B]
 15221              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15222              		.loc 1 500 23 view .LVU5446
 15223 4f3c C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp157, *src_110, shift
 15223      0E
GAS LISTING /tmp/ccdGK7kM.s 			page 408


 15224              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15225              		.loc 1 500 43 view .LVU5447
 15226 4f41 C442A9F7 		shlx	r11, r8, r10	# tmp159, _57, _97
 15226      D8
 15227              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15228              		.loc 1 500 32 view .LVU5448
 15229 4f46 4D09D9   		or	r9, r11	# tmp160, tmp159
 15230 4f49 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_109, tmp160
 498:sieve_extend.c ****     {
 15231              		.loc 1 498 22 is_stmt 1 view .LVU5449
 15232              	.LVL1010:
 498:sieve_extend.c ****     {
 15233              		.loc 1 498 12 view .LVU5450
 15234              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 15235              		.loc 1 498 22 is_stmt 0 view .LVU5451
 15236 4f4c 448D4801 		lea	r9d, 1[rax]	# i,
 15237              	.LVL1011:
 15238              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 15239              		.loc 1 498 5 view .LVU5452
 15240 4f50 4439CA   		cmp	edx, r9d	# size, i
 15241 4f53 7E31     		jle	.L1466	#,
 500:sieve_extend.c ****     }    
 15242              		.loc 1 500 9 is_stmt 1 view .LVU5453
 15243              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15244              		.loc 1 500 35 is_stmt 0 view .LVU5454
 15245 4f55 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _21, MEM[(const uint64_t *)src_110 + 16B]
 15246              	.LVL1012:
 15247              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15248              		.loc 1 500 23 view .LVU5455
 15249 4f59 C442F3F7 		shrx	r8, r8, rcx	# tmp162, _57, shift
 15249      C0
 15250              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15251              		.loc 1 500 43 view .LVU5456
 15252 4f5e C442A9F7 		shlx	r11, r9, r10	# tmp163, _21, _97
 15252      D9
 15253              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 15254              		.loc 1 498 22 view .LVU5457
 15255 4f63 83C002   		add	eax, 2	# i,
 15256              	.LVL1013:
 15257              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15258              		.loc 1 500 32 view .LVU5458
 15259 4f66 4D09D8   		or	r8, r11	# tmp164, tmp163
 15260 4f69 4C894708 		mov	QWORD PTR 8[rdi], r8	# MEM[(uint64_t *)dst_109 + 8B], tmp164
 498:sieve_extend.c ****     {
 15261              		.loc 1 498 22 is_stmt 1 view .LVU5459
 15262              	.LVL1014:
 498:sieve_extend.c ****     {
 15263              		.loc 1 498 12 view .LVU5460
GAS LISTING /tmp/ccdGK7kM.s 			page 409


 15264              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 15265              		.loc 1 498 5 is_stmt 0 view .LVU5461
 15266 4f6d 39D0     		cmp	eax, edx	# i, size
 15267 4f6f 7D15     		jge	.L1466	#,
 500:sieve_extend.c ****     }    
 15268              		.loc 1 500 9 is_stmt 1 view .LVU5462
 15269              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15270              		.loc 1 500 43 is_stmt 0 view .LVU5463
 15271 4f71 488B5618 		mov	rdx, QWORD PTR 24[rsi]	# MEM[(const uint64_t *)src_110 + 24B], MEM[(const uint64_t *)src_110 +
 15272              	.LVL1015:
 15273              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15274              		.loc 1 500 23 view .LVU5464
 15275 4f75 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp168, _21, shift
 15275      C9
 15276              	.LVL1016:
 15277              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15278              		.loc 1 500 43 view .LVU5465
 15279 4f7a C4E2A9F7 		shlx	rsi, rdx, r10	# tmp166, MEM[(const uint64_t *)src_110 + 24B], _97
 15279      F2
 15280              	.LVL1017:
 15281              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 15282              		.loc 1 500 32 view .LVU5466
 15283 4f7f 4809F1   		or	rcx, rsi	# tmp169, tmp166
 15284 4f82 48894F10 		mov	QWORD PTR 16[rdi], rcx	# MEM[(uint64_t *)dst_109 + 16B], tmp169
 498:sieve_extend.c ****     {
 15285              		.loc 1 498 22 is_stmt 1 view .LVU5467
 15286              	.LVL1018:
 498:sieve_extend.c ****     {
 15287              		.loc 1 498 12 view .LVU5468
 15288              	.L1466:
 498:sieve_extend.c ****     {
 15289              		.loc 1 498 12 is_stmt 0 view .LVU5469
 15290 4f86 C5F877   		vzeroupper
 15291              	# sieve_extend.c:502: }
 502:sieve_extend.c **** 
 15292              		.loc 1 502 1 view .LVU5470
 15293 4f89 C3       		ret	
 15294              	.LVL1019:
 15295              	.L1468:
 15296              	.LBB707:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15297              		.loc 1 493 25 is_stmt 1 view .LVU5471
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15298              		.loc 1 494 13 view .LVU5472
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15299              		.loc 1 493 32 view .LVU5473
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15300              		.loc 1 493 25 view .LVU5474
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15301              		.loc 1 494 13 view .LVU5475
 15302              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccdGK7kM.s 			page 410


 15303              		.loc 1 494 25 is_stmt 0 view .LVU5476
 15304 4f8a C5FE6F7E 		vmovdqu	ymm7, YMMWORD PTR 32[rsi]	# MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], MEM[ba
 15304      20
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15305              		.loc 1 493 32 is_stmt 1 view .LVU5477
 15306              	.LVL1020:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15307              		.loc 1 493 25 view .LVU5478
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15308              		.loc 1 494 13 view .LVU5479
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15309              		.loc 1 493 32 view .LVU5480
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15310              		.loc 1 493 25 view .LVU5481
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15311              		.loc 1 494 13 view .LVU5482
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15312              		.loc 1 493 32 view .LVU5483
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15313              		.loc 1 493 25 view .LVU5484
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15314              		.loc 1 493 25 is_stmt 0 view .LVU5485
 15315              	.LBE707:
 15316              	.LBB708:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15317              		.loc 1 495 25 is_stmt 1 view .LVU5486
 496:sieve_extend.c ****     }
 15318              		.loc 1 496 13 view .LVU5487
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15319              		.loc 1 495 32 view .LVU5488
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15320              		.loc 1 495 25 view .LVU5489
 496:sieve_extend.c ****     }
 15321              		.loc 1 496 13 view .LVU5490
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15322              		.loc 1 495 32 view .LVU5491
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15323              		.loc 1 495 25 view .LVU5492
 496:sieve_extend.c ****     }
 15324              		.loc 1 496 13 view .LVU5493
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15325              		.loc 1 495 32 view .LVU5494
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15326              		.loc 1 495 25 view .LVU5495
 496:sieve_extend.c ****     }
 15327              		.loc 1 496 13 view .LVU5496
 15328 4f8f 41BA0200 		mov	r10d, 2	# ivtmp.653,
 15328      0000
 15329              	.LBE708:
 15330              	.LBB709:
 15331              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15332              		.loc 1 494 25 is_stmt 0 view .LVU5497
 15333 4f95 C463FD00 		vpermq	ymm8, ymm7, 85	# vect__102.642, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B],
 15333      C755
 15334              	.LBE709:
 15335              	.LBB710:
GAS LISTING /tmp/ccdGK7kM.s 			page 411


 15336              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15337              		.loc 1 496 34 view .LVU5498
 15338 4f9b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.643, vect__102.642, _4
 15339              	.LBE710:
 15340              	.LBB711:
 15341              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15342              		.loc 1 494 34 view .LVU5499
 15343 4f9f C545F3D1 		vpsllq	ymm10, ymm7, xmm1	# vect__104.647, MEM[base: src_35(D), index: ivtmp.656_114, offset: 0B], 
 15344 4fa3 B8400000 		mov	eax, 64	# ivtmp.656,
 15344      00
 15345              	.LBE711:
 15346              	.LBB712:
 15347              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15348              		.loc 1 496 22 view .LVU5500
 15349 4fa8 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.648, vect__57.643, vect__104.647
 15349      DA
 15350 4fad C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.656_114, offset: 0B], vect_
 15350      20
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15351              		.loc 1 495 32 is_stmt 1 view .LVU5501
 15352              	.LVL1021:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15353              		.loc 1 495 25 view .LVU5502
 15354              	.LBE712:
 491:sieve_extend.c ****     {
 15355              		.loc 1 491 24 view .LVU5503
 491:sieve_extend.c ****     {
 15356              		.loc 1 491 12 view .LVU5504
 15357 4fb2 E909FDFF 		jmp	.L1457	#
 15357      FF
 15358              	.LVL1022:
 15359              	.L1467:
 15360              	# sieve_extend.c:489:     int i = 0;
 489:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 15361              		.loc 1 489 9 is_stmt 0 view .LVU5505
 15362 4fb7 31C0     		xor	eax, eax	# tmp.626
 15363 4fb9 E916FFFF 		jmp	.L1424	#
 15363      FF
 15364              		.cfi_endproc
 15365              	.LFE5334:
 15367              		.section	.rodata.str1.8,"aMS",@progbits,1
 15368              		.align 8
 15369              	.LC10:
 15370 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 15370      6C743A20 
 15370      53696576 
 15370      6573697A 
 15370      6520256A 
 15371 0055 000000   		.align 8
 15372              	.LC11:
 15373 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 15373      616C6964 
 15373      20726573 
 15373      756C742E 
GAS LISTING /tmp/ccdGK7kM.s 			page 412


 15373      20536965 
 15374              		.section	.rodata.str1.1
 15375              	.LC12:
 15376 0023 44656570 		.string	"DeepAnalyzing"
 15376      416E616C 
 15376      797A696E 
 15376      6700
 15377              		.section	.rodata.str1.8
 15378 00bb 00000000 		.align 8
 15378      00
 15379              	.LC13:
 15380 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 15380      65722025 
 15380      6A752028 
 15380      256A7529 
 15380      20776173 
 15381              		.align 8
 15382              	.LC14:
 15383 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 15383      65722025 
 15383      6A752028 
 15383      256A7529 
 15383      20776173 
 15384              		.text
 15385 4fbe 6690     		.p2align 4
 15386              		.globl	validatePrimeCount
 15388              	validatePrimeCount:
 15389              	.LVL1023:
 15390              	.LFB5347:
 964:sieve_extend.c **** 
 15391              		.loc 1 964 76 is_stmt 1 view -0
 15392              		.cfi_startproc
 964:sieve_extend.c **** 
 15393              		.loc 1 964 76 is_stmt 0 view .LVU5507
 15394 4fc0 F30F1EFA 		endbr64	
 966:sieve_extend.c ****     counter_t valid_primes = 0;
 15395              		.loc 1 966 5 is_stmt 1 view .LVU5508
 15396              	# sieve_extend.c:964: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 964:sieve_extend.c **** 
 15397              		.loc 1 964 76 is_stmt 0 view .LVU5509
 15398 4fc4 4157     		push	r15	#
 15399              		.cfi_def_cfa_offset 16
 15400              		.cfi_offset 15, -16
 15401 4fc6 4156     		push	r14	#
 15402              		.cfi_def_cfa_offset 24
 15403              		.cfi_offset 14, -24
 15404 4fc8 4155     		push	r13	#
 15405              		.cfi_def_cfa_offset 32
 15406              		.cfi_offset 13, -32
 15407 4fca 4154     		push	r12	#
 15408              		.cfi_def_cfa_offset 40
 15409              		.cfi_offset 12, -40
 15410 4fcc 55       		push	rbp	#
 15411              		.cfi_def_cfa_offset 48
 15412              		.cfi_offset 6, -48
 15413 4fcd 4889FD   		mov	rbp, rdi	# sieve, tmp307
 15414 4fd0 53       		push	rbx	#
GAS LISTING /tmp/ccdGK7kM.s 			page 413


 15415              		.cfi_def_cfa_offset 56
 15416              		.cfi_offset 3, -56
 15417 4fd1 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 15418 4fd3 4883EC28 		sub	rsp, 40	#,
 15419              		.cfi_def_cfa_offset 96
 15420              	# sieve_extend.c:966:     counter_t primecount = count_primes(sieve);
 966:sieve_extend.c ****     counter_t valid_primes = 0;
 15421              		.loc 1 966 28 view .LVU5510
 15422 4fd7 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 15423 4fda 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 15424              	.LVL1024:
 15425              	.LBB734:
 15426              	.LBI734:
 935:sieve_extend.c ****     counter_t primeCount = 1;
 15427              		.loc 1 935 18 is_stmt 1 view .LVU5511
 15428              	.LBB735:
 15429              	.LBB736:
 937:sieve_extend.c ****     return primeCount;
 15430              		.loc 1 937 30 view .LVU5512
 15431 4fde 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 15432              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 15433              		.loc 1 937 5 is_stmt 0 view .LVU5513
 15434 4fe2 4883FF01 		cmp	rdi, 1	# _25,
 15435 4fe6 0F861705 		jbe	.L1470	#,
 15435      0000
 15436              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 15437              		.loc 1 937 20 view .LVU5514
 15438 4fec B8010000 		mov	eax, 1	# factor,
 15438      00
 15439              	.LBE736:
 15440              	# sieve_extend.c:936:     counter_t primeCount = 1;
 936:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 15441              		.loc 1 936 15 view .LVU5515
 15442 4ff1 41B80100 		mov	r8d, 1	# primeCount,
 15442      0000
 15443              	.LVL1025:
 15444 4ff7 660F1F84 		.p2align 4,,10
 15444      00000000 
 15444      00
 15445              		.p2align 3
 15446              	.L1473:
 15447              	.LBB739:
 937:sieve_extend.c ****     return primeCount;
 15448              		.loc 1 937 104 is_stmt 1 view .LVU5516
 15449              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 15450              		.loc 1 937 114 is_stmt 0 view .LVU5517
 15451 5000 49FFC0   		inc	r8	# primeCount
 15452              	.LVL1026:
 937:sieve_extend.c ****     return primeCount;
 15453              		.loc 1 937 52 is_stmt 1 view .LVU5518
 15454              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 15455              		.loc 1 937 61 is_stmt 0 view .LVU5519
 15456 5003 48FFC0   		inc	rax	# factor
GAS LISTING /tmp/ccdGK7kM.s 			page 414


 15457              	.LVL1027:
 15458              	.L1613:
 15459              	.LBB737:
 15460              	.LBI737:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 15461              		.loc 1 110 25 is_stmt 1 view .LVU5520
 15462              	.LBB738:
 111:sieve_extend.c ****     return index;
 15463              		.loc 1 111 5 view .LVU5521
 111:sieve_extend.c ****     return index;
 15464              		.loc 1 111 11 view .LVU5522
 15465              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15466              		.loc 1 111 21 is_stmt 0 view .LVU5523
 15467 5006 4889C1   		mov	rcx, rax	# tmp162, factor
 15468 5009 48C1E906 		shr	rcx, 6	# tmp162,
 15469              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15470              		.loc 1 111 12 view .LVU5524
 15471 500d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 15472              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15473              		.loc 1 111 11 view .LVU5525
 15474 5011 490FA3C3 		bt	r11, rax	# *_106, factor
 15475 5015 0F83AD00 		jnc	.L1471	#,
 15475      0000
 111:sieve_extend.c ****     return index;
 15476              		.loc 1 111 58 is_stmt 1 view .LVU5526
 15477              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15478              		.loc 1 111 63 is_stmt 0 view .LVU5527
 15479 501b 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 15480              	.LVL1028:
 15481              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15482              		.loc 1 111 21 view .LVU5528
 15483 501f 4D89E5   		mov	r13, r12	# tmp167, factor
 15484 5022 49C1ED06 		shr	r13, 6	# tmp167,
 15485              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15486              		.loc 1 111 12 view .LVU5529
 15487 5026 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 15488              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15489              		.loc 1 111 63 view .LVU5530
 15490 502a 4C89E0   		mov	rax, r12	# factor, tmp235
 111:sieve_extend.c ****     return index;
 15491              		.loc 1 111 11 is_stmt 1 view .LVU5531
 15492 502d 4D0FA3E7 		bt	r15, r12	# *_35, factor
 15493 5031 0F839100 		jnc	.L1471	#,
 15493      0000
 111:sieve_extend.c ****     return index;
 15494              		.loc 1 111 58 view .LVU5532
 15495              	.LVL1029:
 15496              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15497              		.loc 1 111 63 is_stmt 0 view .LVU5533
GAS LISTING /tmp/ccdGK7kM.s 			page 415


 15498 5037 48FFC0   		inc	rax	# factor
 15499              	.LVL1030:
 111:sieve_extend.c ****     return index;
 15500              		.loc 1 111 11 is_stmt 1 view .LVU5534
 15501              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15502              		.loc 1 111 21 is_stmt 0 view .LVU5535
 15503 503a 4989C6   		mov	r14, rax	# tmp279, factor
 15504 503d 49C1EE06 		shr	r14, 6	# tmp279,
 15505              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15506              		.loc 1 111 12 view .LVU5536
 15507 5041 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 15508              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15509              		.loc 1 111 11 view .LVU5537
 15510 5045 480FA3C6 		bt	rsi, rax	# *_35, factor
 15511 5049 737D     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15512              		.loc 1 111 58 is_stmt 1 view .LVU5538
 15513              	.LVL1031:
 15514              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15515              		.loc 1 111 63 is_stmt 0 view .LVU5539
 15516 504b 498D4424 		lea	rax, 2[r12]	# factor,
 15516      02
 15517              	.LVL1032:
 111:sieve_extend.c ****     return index;
 15518              		.loc 1 111 11 is_stmt 1 view .LVU5540
 15519              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15520              		.loc 1 111 21 is_stmt 0 view .LVU5541
 15521 5050 4989C2   		mov	r10, rax	# tmp283, factor
 15522 5053 49C1EA06 		shr	r10, 6	# tmp283,
 15523              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15524              		.loc 1 111 12 view .LVU5542
 15525 5057 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 15526              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15527              		.loc 1 111 11 view .LVU5543
 15528 505b 480FA3C1 		bt	rcx, rax	# *_35, factor
 15529 505f 7367     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15530              		.loc 1 111 58 is_stmt 1 view .LVU5544
 15531              	.LVL1033:
 15532              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15533              		.loc 1 111 63 is_stmt 0 view .LVU5545
 15534 5061 498D4424 		lea	rax, 3[r12]	# factor,
 15534      03
 15535              	.LVL1034:
 111:sieve_extend.c ****     return index;
 15536              		.loc 1 111 11 is_stmt 1 view .LVU5546
 15537              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15538              		.loc 1 111 21 is_stmt 0 view .LVU5547
GAS LISTING /tmp/ccdGK7kM.s 			page 416


 15539 5066 4989C3   		mov	r11, rax	# tmp287, factor
 15540 5069 49C1EB06 		shr	r11, 6	# tmp287,
 15541              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15542              		.loc 1 111 12 view .LVU5548
 15543 506d 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 15544              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15545              		.loc 1 111 11 view .LVU5549
 15546 5071 490FA3C5 		bt	r13, rax	# *_35, factor
 15547 5075 7351     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15548              		.loc 1 111 58 is_stmt 1 view .LVU5550
 15549              	.LVL1035:
 15550              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15551              		.loc 1 111 63 is_stmt 0 view .LVU5551
 15552 5077 498D4424 		lea	rax, 4[r12]	# factor,
 15552      04
 15553              	.LVL1036:
 111:sieve_extend.c ****     return index;
 15554              		.loc 1 111 11 is_stmt 1 view .LVU5552
 15555              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15556              		.loc 1 111 21 is_stmt 0 view .LVU5553
 15557 507c 4989C7   		mov	r15, rax	# tmp291, factor
 15558 507f 49C1EF06 		shr	r15, 6	# tmp291,
 15559              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15560              		.loc 1 111 12 view .LVU5554
 15561 5083 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 15562              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15563              		.loc 1 111 11 view .LVU5555
 15564 5087 490FA3C6 		bt	r14, rax	# *_35, factor
 15565 508b 733B     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15566              		.loc 1 111 58 is_stmt 1 view .LVU5556
 15567              	.LVL1037:
 15568              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15569              		.loc 1 111 63 is_stmt 0 view .LVU5557
 15570 508d 498D4424 		lea	rax, 5[r12]	# factor,
 15570      05
 15571              	.LVL1038:
 111:sieve_extend.c ****     return index;
 15572              		.loc 1 111 11 is_stmt 1 view .LVU5558
 15573              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15574              		.loc 1 111 21 is_stmt 0 view .LVU5559
 15575 5092 4889C6   		mov	rsi, rax	# tmp295, factor
 15576 5095 48C1EE06 		shr	rsi, 6	# tmp295,
 15577              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15578              		.loc 1 111 12 view .LVU5560
 15579 5099 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 15580              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccdGK7kM.s 			page 417


 111:sieve_extend.c ****     return index;
 15581              		.loc 1 111 11 view .LVU5561
 15582 509d 490FA3C2 		bt	r10, rax	# *_35, factor
 15583 50a1 7325     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15584              		.loc 1 111 58 is_stmt 1 view .LVU5562
 15585              	.LVL1039:
 15586              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15587              		.loc 1 111 63 is_stmt 0 view .LVU5563
 15588 50a3 498D4424 		lea	rax, 6[r12]	# factor,
 15588      06
 15589              	.LVL1040:
 111:sieve_extend.c ****     return index;
 15590              		.loc 1 111 11 is_stmt 1 view .LVU5564
 15591              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15592              		.loc 1 111 21 is_stmt 0 view .LVU5565
 15593 50a8 4889C1   		mov	rcx, rax	# tmp299, factor
 15594 50ab 48C1E906 		shr	rcx, 6	# tmp299,
 15595              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15596              		.loc 1 111 12 view .LVU5566
 15597 50af 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 15598              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15599              		.loc 1 111 11 view .LVU5567
 15600 50b3 490FA3C3 		bt	r11, rax	# *_35, factor
 15601 50b7 730F     		jnc	.L1471	#,
 111:sieve_extend.c ****     return index;
 15602              		.loc 1 111 58 is_stmt 1 view .LVU5568
 15603              	.LVL1041:
 15604              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 15605              		.loc 1 111 63 is_stmt 0 view .LVU5569
 15606 50b9 498D4424 		lea	rax, 7[r12]	# factor,
 15606      07
 15607              	.LVL1042:
 111:sieve_extend.c ****     return index;
 15608              		.loc 1 111 11 is_stmt 1 view .LVU5570
 15609 50be E943FFFF 		jmp	.L1613	#
 15609      FF
 15610              		.p2align 4,,10
 15611 50c3 0F1F4400 		.p2align 3
 15611      00
 15612              	.L1471:
 15613              	.LVL1043:
 111:sieve_extend.c ****     return index;
 15614              		.loc 1 111 11 is_stmt 0 view .LVU5571
 15615              	.LBE738:
 15616              	.LBE737:
 937:sieve_extend.c ****     return primeCount;
 15617              		.loc 1 937 30 is_stmt 1 view .LVU5572
 15618              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 15619              		.loc 1 937 5 is_stmt 0 view .LVU5573
 15620 50c8 4839C7   		cmp	rdi, rax	# _25, factor
GAS LISTING /tmp/ccdGK7kM.s 			page 418


 15621 50cb 0F872FFF 		ja	.L1473	#,
 15621      FFFF
 937:sieve_extend.c ****     return primeCount;
 15622              		.loc 1 937 5 view .LVU5574
 15623              	.LBE739:
 938:sieve_extend.c **** }
 15624              		.loc 1 938 5 is_stmt 1 view .LVU5575
 15625              	.LVL1044:
 938:sieve_extend.c **** }
 15626              		.loc 1 938 5 is_stmt 0 view .LVU5576
 15627              	.LBE735:
 15628              	.LBE734:
 967:sieve_extend.c ****     switch(sieve->size) {
 15629              		.loc 1 967 5 is_stmt 1 view .LVU5577
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15630              		.loc 1 968 5 view .LVU5578
 15631 50d1 83FB03   		cmp	ebx, 3	# option_verboselevel,
 15632 50d4 0F9FC2   		setg	dl	#, tmp172
 15633 50d7 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 15633      860100
 15634 50de 0F843806 		je	.L1474	#,
 15634      0000
 15635 50e4 0F86CA02 		jbe	.L1614	#,
 15635      0000
 15636 50ea 4981F900 		cmp	r9, 100000000	# pretmp_199,
 15636      E1F505
 15637 50f1 0F84E405 		je	.L1482	#,
 15637      0000
 15638 50f7 0F863303 		jbe	.L1615	#,
 15638      0000
 15639 50fd 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 15639      CA9A3B
 15640 5104 0F85F605 		jne	.L1480	#,
 15640      0000
 15641 510a 4981F82E 		cmp	r8, 50847534	# primeCount,
 15641      DF0703
 15642 5111 410F94C4 		sete	r12b	#, tmp189
 15643 5115 4421E2   		and	edx, r12d	# _251, tmp189
 15644 5118 4981F82E 		cmp	r8, 50847534	# primeCount,
 15644      DF0703
 15645 511f 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 15646 5123 410F95C6 		setne	r14b	#, _135
 977:sieve_extend.c ****         default:            valid_primes= 0;
 15647              		.loc 1 977 29 view .LVU5579
 15648              	.LVL1045:
 977:sieve_extend.c ****         default:            valid_primes= 0;
 15649              		.loc 1 977 54 view .LVU5580
 15650              	# sieve_extend.c:977:         case 1000000000:    valid_primes = 50847534; break;
 977:sieve_extend.c ****         default:            valid_primes= 0;
 15651              		.loc 1 977 42 is_stmt 0 view .LVU5581
 15652 5127 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 15652      03
 15653              	.LVL1046:
 15654 512c 0F1F4000 		.p2align 4,,10
 15655              		.p2align 3
 15656              	.L1487:
 981:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
GAS LISTING /tmp/ccdGK7kM.s 			page 419


 15657              		.loc 1 981 5 is_stmt 1 view .LVU5582
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15658              		.loc 1 982 5 view .LVU5583
 15659              	# sieve_extend.c:982:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15660              		.loc 1 982 8 is_stmt 0 view .LVU5584
 15661 5130 84D2     		test	dl, dl	# _251
 15662 5132 0F842204 		je	.L1488	#,
 15662      0000
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15663              		.loc 1 982 45 is_stmt 1 discriminator 1 view .LVU5585
 15664              	.LVL1047:
 15665              	.LBB741:
 15666              	.LBI741:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15667              		.loc 3 105 1 discriminator 1 view .LVU5586
 15668              	.LBB742:
 15669              		.loc 3 107 3 discriminator 1 view .LVU5587
 15670              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15671              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5588
 15672 5138 4C89CA   		mov	rdx, r9	#, pretmp_199
 15673 513b 488D3500 		lea	rsi, .LC10[rip]	#,
 15673      000000
 15674 5142 BF010000 		mov	edi, 1	#,
 15674      00
 15675 5147 31C0     		xor	eax, eax	#
 15676 5149 E8000000 		call	__printf_chk@PLT	#
 15676      00
 15677              	.LVL1048:
 15678              		.loc 3 107 10 discriminator 1 view .LVU5589
 15679              	.LBE742:
 15680              	.LBE741:
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 15681              		.loc 1 983 5 is_stmt 1 discriminator 1 view .LVU5590
 15682              	.L1489:
 987:sieve_extend.c ****     return (valid);
 15683              		.loc 1 987 5 view .LVU5591
 15684              	# sieve_extend.c:987:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
 987:sieve_extend.c ****     return (valid);
 15685              		.loc 1 987 8 is_stmt 0 view .LVU5592
 15686 514e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 15687 5151 0F8E4B02 		jle	.L1469	#,
 15687      0000
 15688 5157 4584F6   		test	r14b, r14b	# _135
 15689 515a 0F844202 		je	.L1469	#,
 15689      0000
 987:sieve_extend.c ****     return (valid);
 15690              		.loc 1 987 45 is_stmt 1 discriminator 1 view .LVU5593
 15691              	.LBB743:
 15692              	.LBI743:
 941:sieve_extend.c ****     printf("DeepAnalyzing\n");
 15693              		.loc 1 941 13 discriminator 1 view .LVU5594
 15694              	.LVL1049:
 15695              	.LBB744:
 942:sieve_extend.c ****     counter_t warn_prime = 0;
 15696              		.loc 1 942 5 discriminator 1 view .LVU5595
 15697              	.LBB745:
GAS LISTING /tmp/ccdGK7kM.s 			page 420


 15698              	.LBI745:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15699              		.loc 3 105 1 discriminator 1 view .LVU5596
 15700              	.LBB746:
 15701              		.loc 3 107 3 discriminator 1 view .LVU5597
 15702              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15703              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5598
 15704 5160 488D3D00 		lea	rdi, .LC12[rip]	#,
 15704      000000
 15705 5167 E8000000 		call	puts@PLT	#
 15705      00
 15706              	.LVL1050:
 15707              		.loc 3 107 10 discriminator 1 view .LVU5599
 15708              	.LBE746:
 15709              	.LBE745:
 943:sieve_extend.c ****     counter_t warn_nonprime = 0;
 15710              		.loc 1 943 5 is_stmt 1 discriminator 1 view .LVU5600
 944:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 15711              		.loc 1 944 5 discriminator 1 view .LVU5601
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15712              		.loc 1 945 5 discriminator 1 view .LVU5602
 15713              	.LBB747:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15714              		.loc 1 945 10 discriminator 1 view .LVU5603
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15715              		.loc 1 945 31 discriminator 1 view .LVU5604
 15716              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15717              		.loc 1 945 44 is_stmt 0 discriminator 1 view .LVU5605
 15718 516c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 15719              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15720              		.loc 1 945 5 discriminator 1 view .LVU5606
 15721 5170 4883FF01 		cmp	rdi, 1	# _137,
 15722 5174 0F862802 		jbe	.L1469	#,
 15722      0000
 15723              	.LBE747:
 15724              	# sieve_extend.c:944:     counter_t warn_nonprime = 0;
 944:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 15725              		.loc 1 944 15 view .LVU5607
 15726 517a 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 15726      08000000 
 15726      00
 15727              	.LBB769:
 15728              	.LBB748:
 15729              	.LBB749:
 15730              	.LBB750:
 15731              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15732              		.loc 3 107 10 view .LVU5608
 15733 5183 44896C24 		mov	DWORD PTR 20[rsp], r13d	# %sfp, <retval>
 15733      14
 15734              	.LBE750:
 15735              	.LBE749:
 15736              	.LBE748:
 15737              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15738              		.loc 1 945 5 view .LVU5609
GAS LISTING /tmp/ccdGK7kM.s 			page 421


 15739 5188 41BF0200 		mov	r15d, 2	# ivtmp.689,
 15739      0000
 15740 518e 41BC0300 		mov	r12d, 3	# ivtmp.687,
 15740      0000
 15741              	.LBE769:
 15742              	# sieve_extend.c:943:     counter_t warn_prime = 0;
 943:sieve_extend.c ****     counter_t warn_nonprime = 0;
 15743              		.loc 1 943 15 view .LVU5610
 15744 5194 4531C0   		xor	r8d, r8d	# warn_prime
 15745              	.LBB770:
 15746              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15747              		.loc 1 945 20 view .LVU5611
 15748 5197 41BE0100 		mov	r14d, 1	# prime,
 15748      0000
 15749              	.LBB757:
 15750              	.LBB754:
 15751              	.LBB751:
 15752              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15753              		.loc 3 107 10 view .LVU5612
 15754 519d 4989ED   		mov	r13, rbp	# sieve, sieve
 15755              	.LVL1051:
 15756              		.p2align 4,,10
 15757              		.p2align 3
 15758              	.L1499:
 15759              		.loc 3 107 10 view .LVU5613
 15760              	.LBE751:
 15761              	.LBE754:
 15762              	.LBE757:
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15763              		.loc 1 946 9 is_stmt 1 view .LVU5614
 15764              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15765              		.loc 1 946 29 is_stmt 0 view .LVU5615
 15766 51a0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 15767              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15768              		.loc 1 946 30 view .LVU5616
 15769 51a4 4C89F3   		mov	rbx, r14	# tmp198, prime
 15770 51a7 48C1EB06 		shr	rbx, 6	# tmp198,
 15771              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15772              		.loc 1 946 71 view .LVU5617
 15773 51ab 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 15773      00
 15774 51b0 C4C28BF7 		shrx	rcx, r9, r14	# tmp201, *_47, prime
 15774      C9
 15775              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15776              		.loc 1 946 12 view .LVU5618
 15777 51b5 83E101   		and	ecx, 1	# c,
 15778 51b8 0F84BA02 		je	.L1491	#,
 15778      0000
 15779              	.LVL1052:
 15780              	.LBB758:
 15781              	.LBB759:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccdGK7kM.s 			page 422


 15782              		.loc 1 955 32 is_stmt 1 view .LVU5619
 15783              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15784              		.loc 1 955 13 is_stmt 0 view .LVU5620
 15785 51be BE030000 		mov	esi, 3	# ivtmp.679,
 15785      00
 15786              	.LBE759:
 15787              	# sieve_extend.c:954:             counter_t c_prime = 0;
 954:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15788              		.loc 1 954 23 view .LVU5621
 15789 51c3 31ED     		xor	ebp, ebp	# c_prime
 15790              	.LBB760:
 15791              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15792              		.loc 1 955 13 view .LVU5622
 15793 51c5 4885FF   		test	rdi, rdi	# _137
 15794 51c8 0F84EC03 		je	.L1603	#,
 15794      0000
 15795 51ce 4989FB   		mov	r11, rdi	# tmp231, _137
 15796 51d1 4929CB   		sub	r11, rcx	# tmp231, c
 15797 51d4 4183E303 		and	r11d, 3	# tmp231,
 15798 51d8 4D89DA   		mov	r10, r11	# tmp232, tmp231
 15799 51db 0F84B700 		je	.L1492	#,
 15799      0000
 15800              	.LVL1053:
 956:sieve_extend.c ****             }
 15801              		.loc 1 956 17 is_stmt 1 view .LVU5623
 15802              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15803              		.loc 1 956 48 is_stmt 0 view .LVU5624
 15804 51e1 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 15805 51e5 4C39F8   		cmp	rax, r15	# tmp239, ivtmp.689
 15806 51e8 7411     		je	.L1544	#,
 15807              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15808              		.loc 1 956 33 view .LVU5625
 15809 51ea 31D2     		xor	edx, edx	# tmp241
 15810 51ec 4C89E0   		mov	rax, r12	# tmp242, ivtmp.687
 15811 51ef 48F7F6   		div	rsi	# ivtmp.679
 15812              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15813              		.loc 1 956 82 view .LVU5626
 15814 51f2 31ED     		xor	ebp, ebp	# c_prime
 956:sieve_extend.c ****             }
 15815              		.loc 1 956 82 view .LVU5627
 15816 51f4 4885D2   		test	rdx, rdx	# tmp241
 15817 51f7 400F94C5 		sete	bpl	#, c_prime
 15818              	.LVL1054:
 15819              	.L1544:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15820              		.loc 1 955 68 is_stmt 1 view .LVU5628
 15821              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15822              		.loc 1 955 69 is_stmt 0 view .LVU5629
 15823 51fb 48FFC1   		inc	rcx	# c
 15824              	.LVL1055:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccdGK7kM.s 			page 423


 15825              		.loc 1 955 32 is_stmt 1 view .LVU5630
 15826              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15827              		.loc 1 955 13 is_stmt 0 view .LVU5631
 15828 51fe 4839F9   		cmp	rcx, rdi	# c, _137
 15829 5201 0F877901 		ja	.L1498	#,
 15829      0000
 15830              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15831              		.loc 1 955 51 view .LVU5632
 15832 5207 4989C9   		mov	r9, rcx	# tmp244, c
 15833 520a 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 15834 520e BE050000 		mov	esi, 5	# ivtmp.679,
 15834      00
 15835              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15836              		.loc 1 955 47 view .LVU5633
 15837 5213 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.687
 15838 5216 0F876401 		ja	.L1498	#,
 15838      0000
 15839 521c 4983FA01 		cmp	r10, 1	# tmp232,
 15840 5220 7476     		je	.L1492	#,
 15841 5222 4983FA02 		cmp	r10, 2	# tmp232,
 15842 5226 7437     		je	.L1575	#,
 956:sieve_extend.c ****             }
 15843              		.loc 1 956 17 is_stmt 1 view .LVU5634
 15844              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15845              		.loc 1 956 48 is_stmt 0 view .LVU5635
 15846 5228 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 15847 522c 4C39FB   		cmp	rbx, r15	# tmp245, ivtmp.689
 15848 522f 7417     		je	.L1546	#,
 15849              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15850              		.loc 1 956 33 view .LVU5636
 15851 5231 31D2     		xor	edx, edx	# tmp247
 15852 5233 4C89E0   		mov	rax, r12	# tmp248, ivtmp.687
 15853 5236 48F7F6   		div	rsi	# ivtmp.679
 15854              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15855              		.loc 1 956 20 view .LVU5637
 15856 5239 4885D2   		test	rdx, rdx	# tmp247
 15857 523c 410F94C3 		sete	r11b	#, tmp249
 15858              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15859              		.loc 1 956 82 view .LVU5638
 15860 5240 4180FB01 		cmp	r11b, 1	# tmp249,
 15861 5244 4883DDFF 		sbb	rbp, -1	# c_prime,
 15862              	.LVL1056:
 15863              	.L1546:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15864              		.loc 1 955 68 is_stmt 1 view .LVU5639
 15865              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15866              		.loc 1 955 69 is_stmt 0 view .LVU5640
 15867 5248 48FFC1   		inc	rcx	# c
 15868              	.LVL1057:
GAS LISTING /tmp/ccdGK7kM.s 			page 424


 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15869              		.loc 1 955 32 is_stmt 1 view .LVU5641
 15870              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15871              		.loc 1 955 51 is_stmt 0 view .LVU5642
 15872 524b 4989CA   		mov	r10, rcx	# tmp250, c
 15873 524e 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 15874 5252 4883C602 		add	rsi, 2	# ivtmp.679,
 15875              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15876              		.loc 1 955 47 view .LVU5643
 15877 5256 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.687
 15878 5259 0F872101 		ja	.L1498	#,
 15878      0000
 15879              	.L1575:
 956:sieve_extend.c ****             }
 15880              		.loc 1 956 17 is_stmt 1 view .LVU5644
 15881              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15882              		.loc 1 956 48 is_stmt 0 view .LVU5645
 15883 525f 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 15884 5263 4D39F9   		cmp	r9, r15	# tmp251, ivtmp.689
 15885 5266 7415     		je	.L1549	#,
 15886              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15887              		.loc 1 956 33 view .LVU5646
 15888 5268 31D2     		xor	edx, edx	# tmp253
 15889 526a 4C89E0   		mov	rax, r12	# tmp254, ivtmp.687
 15890 526d 48F7F6   		div	rsi	# ivtmp.679
 15891              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15892              		.loc 1 956 20 view .LVU5647
 15893 5270 4885D2   		test	rdx, rdx	# tmp253
 15894 5273 0F94C3   		sete	bl	#, tmp255
 15895              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15896              		.loc 1 956 82 view .LVU5648
 15897 5276 80FB01   		cmp	bl, 1	# tmp255,
 15898 5279 4883DDFF 		sbb	rbp, -1	# c_prime,
 15899              	.LVL1058:
 15900              	.L1549:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15901              		.loc 1 955 68 is_stmt 1 view .LVU5649
 15902              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15903              		.loc 1 955 69 is_stmt 0 view .LVU5650
 15904 527d 48FFC1   		inc	rcx	# c
 15905              	.LVL1059:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15906              		.loc 1 955 32 is_stmt 1 view .LVU5651
 15907              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15908              		.loc 1 955 51 is_stmt 0 view .LVU5652
 15909 5280 4989CB   		mov	r11, rcx	# tmp256, c
 15910 5283 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 15911 5287 4883C602 		add	rsi, 2	# ivtmp.679,
 15912              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccdGK7kM.s 			page 425


 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15913              		.loc 1 955 47 view .LVU5653
 15914 528b 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.687
 15915 528e 0F87EC00 		ja	.L1498	#,
 15915      0000
 15916              	.LVL1060:
 15917              		.p2align 4,,10
 15918 5294 0F1F4000 		.p2align 3
 15919              	.L1492:
 956:sieve_extend.c ****             }
 15920              		.loc 1 956 17 is_stmt 1 view .LVU5654
 15921              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15922              		.loc 1 956 48 is_stmt 0 view .LVU5655
 15923 5298 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 15924 529c 4D39FA   		cmp	r10, r15	# tmp210, ivtmp.689
 15925 529f 7417     		je	.L1497	#,
 15926              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15927              		.loc 1 956 33 view .LVU5656
 15928 52a1 31D2     		xor	edx, edx	# tmp214
 15929 52a3 4C89E0   		mov	rax, r12	# tmp215, ivtmp.687
 15930 52a6 48F7F6   		div	rsi	# ivtmp.679
 15931              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15932              		.loc 1 956 20 view .LVU5657
 15933 52a9 4885D2   		test	rdx, rdx	# tmp214
 15934 52ac 410F94C1 		sete	r9b	#, tmp217
 15935              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15936              		.loc 1 956 82 view .LVU5658
 15937 52b0 4180F901 		cmp	r9b, 1	# tmp217,
 15938 52b4 4883DDFF 		sbb	rbp, -1	# c_prime,
 15939              	.LVL1061:
 15940              	.L1497:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15941              		.loc 1 955 68 is_stmt 1 view .LVU5659
 15942              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15943              		.loc 1 955 69 is_stmt 0 view .LVU5660
 15944 52b8 48FFC1   		inc	rcx	# tmp234
 15945              	.LVL1062:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15946              		.loc 1 955 32 is_stmt 1 view .LVU5661
 15947              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15948              		.loc 1 955 13 is_stmt 0 view .LVU5662
 15949 52bb 4839F9   		cmp	rcx, rdi	# tmp234, _137
 15950 52be 0F87BC00 		ja	.L1498	#,
 15950      0000
 15951              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15952              		.loc 1 955 51 view .LVU5663
 15953 52c4 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 15954 52c7 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 15955 52cb 4883C602 		add	rsi, 2	# tmp233,
 15956              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccdGK7kM.s 			page 426


 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15957              		.loc 1 955 47 view .LVU5664
 15958 52cf 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.687
 15959 52d2 0F87A800 		ja	.L1498	#,
 15959      0000
 956:sieve_extend.c ****             }
 15960              		.loc 1 956 17 is_stmt 1 view .LVU5665
 15961              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15962              		.loc 1 956 48 is_stmt 0 view .LVU5666
 15963 52d8 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 15964 52dc 4D39FB   		cmp	r11, r15	# tmp257, ivtmp.689
 15965 52df 7417     		je	.L1553	#,
 15966              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15967              		.loc 1 956 33 view .LVU5667
 15968 52e1 31D2     		xor	edx, edx	# tmp259
 15969 52e3 4C89E0   		mov	rax, r12	# tmp260, ivtmp.687
 15970 52e6 48F7F6   		div	rsi	# tmp233
 15971              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15972              		.loc 1 956 20 view .LVU5668
 15973 52e9 4885D2   		test	rdx, rdx	# tmp259
 15974 52ec 410F94C2 		sete	r10b	#, tmp261
 15975              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15976              		.loc 1 956 82 view .LVU5669
 15977 52f0 4180FA01 		cmp	r10b, 1	# tmp261,
 15978 52f4 4883DDFF 		sbb	rbp, -1	# c_prime,
 15979              	.LVL1063:
 15980              	.L1553:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15981              		.loc 1 955 68 is_stmt 1 view .LVU5670
 15982              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15983              		.loc 1 955 69 is_stmt 0 view .LVU5671
 15984 52f8 4C8D4901 		lea	r9, 1[rcx]	# c,
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15985              		.loc 1 955 32 is_stmt 1 view .LVU5672
 15986              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15987              		.loc 1 955 51 is_stmt 0 view .LVU5673
 15988 52fc 4D89CB   		mov	r11, r9	# tmp264, c
 15989 52ff 4D0FAFD9 		imul	r11, r9	# tmp264, c
 15990 5303 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.679,
 15991              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15992              		.loc 1 955 47 view .LVU5674
 15993 5307 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.687
 15994 530a 7774     		ja	.L1498	#,
 956:sieve_extend.c ****             }
 15995              		.loc 1 956 17 is_stmt 1 view .LVU5675
 15996              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 15997              		.loc 1 956 48 is_stmt 0 view .LVU5676
 15998 530c 4D01C9   		add	r9, r9	# tmp265
 15999 530f 4D39F9   		cmp	r9, r15	# tmp265, ivtmp.689
GAS LISTING /tmp/ccdGK7kM.s 			page 427


 16000 5312 7417     		je	.L1555	#,
 16001              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16002              		.loc 1 956 33 view .LVU5677
 16003 5314 31D2     		xor	edx, edx	# tmp267
 16004 5316 4C89E0   		mov	rax, r12	# tmp268, ivtmp.687
 16005 5319 48F7F3   		div	rbx	# ivtmp.679
 16006              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16007              		.loc 1 956 20 view .LVU5678
 16008 531c 4885D2   		test	rdx, rdx	# tmp267
 16009 531f 410F94C2 		sete	r10b	#, tmp269
 16010              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16011              		.loc 1 956 82 view .LVU5679
 16012 5323 4180FA01 		cmp	r10b, 1	# tmp269,
 16013 5327 4883DDFF 		sbb	rbp, -1	# c_prime,
 16014              	.LVL1064:
 16015              	.L1555:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16016              		.loc 1 955 68 is_stmt 1 view .LVU5680
 16017              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16018              		.loc 1 955 69 is_stmt 0 view .LVU5681
 16019 532b 4C8D4902 		lea	r9, 2[rcx]	# c,
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16020              		.loc 1 955 32 is_stmt 1 view .LVU5682
 16021              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16022              		.loc 1 955 51 is_stmt 0 view .LVU5683
 16023 532f 4D89CB   		mov	r11, r9	# tmp272, c
 16024 5332 4D0FAFD9 		imul	r11, r9	# tmp272, c
 16025 5336 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.679,
 16026              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16027              		.loc 1 955 47 view .LVU5684
 16028 533a 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.687
 16029 533d 7741     		ja	.L1498	#,
 956:sieve_extend.c ****             }
 16030              		.loc 1 956 17 is_stmt 1 view .LVU5685
 16031              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16032              		.loc 1 956 48 is_stmt 0 view .LVU5686
 16033 533f 4D01C9   		add	r9, r9	# tmp273
 16034 5342 4D39F9   		cmp	r9, r15	# tmp273, ivtmp.689
 16035 5345 7417     		je	.L1557	#,
 16036              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16037              		.loc 1 956 33 view .LVU5687
 16038 5347 31D2     		xor	edx, edx	# tmp275
 16039 5349 4C89E0   		mov	rax, r12	# tmp276, ivtmp.687
 16040 534c 48F7F3   		div	rbx	# ivtmp.679
 16041              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16042              		.loc 1 956 20 view .LVU5688
 16043 534f 4885D2   		test	rdx, rdx	# tmp275
 16044 5352 410F94C2 		sete	r10b	#, tmp277
GAS LISTING /tmp/ccdGK7kM.s 			page 428


 16045              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16046              		.loc 1 956 82 view .LVU5689
 16047 5356 4180FA01 		cmp	r10b, 1	# tmp277,
 16048 535a 4883DDFF 		sbb	rbp, -1	# c_prime,
 16049              	.LVL1065:
 16050              	.L1557:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16051              		.loc 1 955 68 is_stmt 1 view .LVU5690
 16052              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16053              		.loc 1 955 69 is_stmt 0 view .LVU5691
 16054 535e 4883C103 		add	rcx, 3	# c,
 16055              	.LVL1066:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16056              		.loc 1 955 32 is_stmt 1 view .LVU5692
 16057              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16058              		.loc 1 955 51 is_stmt 0 view .LVU5693
 16059 5362 4989C9   		mov	r9, rcx	# tmp278, c
 16060 5365 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 16061 5369 4883C606 		add	rsi, 6	# ivtmp.679,
 16062              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16063              		.loc 1 955 47 view .LVU5694
 16064 536d 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.687
 16065 5370 0F8622FF 		jbe	.L1492	#,
 16065      FFFF
 16066              	.LVL1067:
 16067 5376 662E0F1F 		.p2align 4,,10
 16067      84000000 
 16067      0000
 16068              		.p2align 3
 16069              	.L1498:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16070              		.loc 1 955 47 view .LVU5695
 16071              	.LBE760:
 958:sieve_extend.c ****         }
 16072              		.loc 1 958 13 is_stmt 1 view .LVU5696
 16073              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16074              		.loc 1 958 16 is_stmt 0 view .LVU5697
 16075 5380 4885ED   		test	rbp, rbp	# c_prime
 16076 5383 0F841802 		je	.L1616	#,
 16076      0000
 16077              	.LVL1068:
 16078              	.L1495:
 958:sieve_extend.c ****         }
 16079              		.loc 1 958 16 view .LVU5698
 16080              	.LBE758:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16081              		.loc 1 945 52 is_stmt 1 view .LVU5699
 16082              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16083              		.loc 1 945 57 is_stmt 0 view .LVU5700
 16084 5389 49FFC6   		inc	r14	# prime
 16085              	.LVL1069:
GAS LISTING /tmp/ccdGK7kM.s 			page 429


 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16086              		.loc 1 945 31 is_stmt 1 view .LVU5701
 16087 538c 4983C402 		add	r12, 2	# ivtmp.687,
 16088 5390 4983C702 		add	r15, 2	# ivtmp.689,
 16089              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16090              		.loc 1 945 5 is_stmt 0 view .LVU5702
 16091 5394 4939FE   		cmp	r14, rdi	# prime, _137
 16092 5397 0F8203FE 		jb	.L1499	#,
 16092      FFFF
 16093              	.LVL1070:
 16094              	.L1605:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16095              		.loc 1 945 5 view .LVU5703
 16096 539d 448B6C24 		mov	r13d, DWORD PTR 20[rsp]	# <retval>, %sfp
 16096      14
 16097              	.LVL1071:
 16098              	.L1469:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16099              		.loc 1 945 5 view .LVU5704
 16100              	.LBE770:
 16101              	.LBE744:
 16102              	.LBE743:
 16103              	# sieve_extend.c:989: }
 989:sieve_extend.c **** 
 16104              		.loc 1 989 1 view .LVU5705
 16105 53a2 4883C428 		add	rsp, 40	#,
 16106              		.cfi_remember_state
 16107              		.cfi_def_cfa_offset 56
 16108 53a6 5B       		pop	rbx	#
 16109              		.cfi_def_cfa_offset 48
 16110 53a7 5D       		pop	rbp	#
 16111              		.cfi_def_cfa_offset 40
 16112 53a8 415C     		pop	r12	#
 16113              		.cfi_def_cfa_offset 32
 16114 53aa 4489E8   		mov	eax, r13d	#, <retval>
 16115 53ad 415D     		pop	r13	#
 16116              		.cfi_def_cfa_offset 24
 16117 53af 415E     		pop	r14	#
 16118              		.cfi_def_cfa_offset 16
 16119 53b1 415F     		pop	r15	#
 16120              		.cfi_def_cfa_offset 8
 16121 53b3 C3       		ret	
 16122              	.LVL1072:
 16123              	.L1614:
 16124              		.cfi_restore_state
 16125              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16126              		.loc 1 968 5 view .LVU5706
 16127 53b4 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 16127      030000
 16128 53bb 0F84F302 		je	.L1476	#,
 16128      0000
 16129 53c1 7633     		jbe	.L1617	#,
 16130 53c3 4981F910 		cmp	r9, 10000	# pretmp_199,
 16130      270000
 16131 53ca 0F853003 		jne	.L1480	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 430


 16131      0000
 16132 53d0 4981F8CD 		cmp	r8, 1229	# primeCount,
 16132      040000
 16133 53d7 400F94C6 		sete	sil	#, tmp179
 16134 53db 21F2     		and	edx, esi	# _251, tmp179
 16135 53dd 4981F8CD 		cmp	r8, 1229	# primeCount,
 16135      040000
 16136 53e4 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 16137 53e8 410F95C6 		setne	r14b	#, _135
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16138              		.loc 1 972 29 is_stmt 1 view .LVU5707
 16139              	.LVL1073:
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16140              		.loc 1 972 54 view .LVU5708
 16141              	# sieve_extend.c:972:         case 10000:         valid_primes = 1229;     break;
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16142              		.loc 1 972 42 is_stmt 0 view .LVU5709
 16143 53ec B9CD0400 		mov	ecx, 1229	# valid_primes,
 16143      00
 16144              	# sieve_extend.c:972:         case 10000:         valid_primes = 1229;     break;
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16145              		.loc 1 972 9 view .LVU5710
 16146 53f1 E93AFDFF 		jmp	.L1487	#
 16146      FF
 16147              	.LVL1074:
 16148              	.L1617:
 16149              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16150              		.loc 1 968 5 view .LVU5711
 16151 53f6 4983F90A 		cmp	r9, 10	# pretmp_199,
 16152 53fa 0F842702 		je	.L1478	#,
 16152      0000
 16153 5400 4983F964 		cmp	r9, 100	# pretmp_199,
 16154 5404 0F85F602 		jne	.L1480	#,
 16154      0000
 16155 540a 4983F819 		cmp	r8, 25	# primeCount,
 16156 540e 0F94C1   		sete	cl	#, tmp173
 16157 5411 21CA     		and	edx, ecx	# _251, tmp173
 16158 5413 4983F819 		cmp	r8, 25	# primeCount,
 16159 5417 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 16160 541b 410F95C6 		setne	r14b	#, _135
 16161              	# sieve_extend.c:970:         case 100:           valid_primes = 25;       break;
 970:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 16162              		.loc 1 970 42 view .LVU5712
 16163 541f B9190000 		mov	ecx, 25	# valid_primes,
 16163      00
 16164 5424 E907FDFF 		jmp	.L1487	#
 16164      FF
 16165 5429 0F1F8000 		.p2align 4,,10
 16165      000000
 16166              		.p2align 3
 16167              	.L1615:
 16168              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16169              		.loc 1 968 5 view .LVU5713
 16170 5430 4981F940 		cmp	r9, 1000000	# pretmp_199,
 16170      420F00
GAS LISTING /tmp/ccdGK7kM.s 			page 431


 16171 5437 0F84C301 		je	.L1484	#,
 16171      0000
 16172 543d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 16172      969800
 16173 5444 0F85B602 		jne	.L1480	#,
 16173      0000
 16174 544a 4981F803 		cmp	r8, 664579	# primeCount,
 16174      240A00
 16175 5451 410F94C7 		sete	r15b	#, tmp185
 16176 5455 4421FA   		and	edx, r15d	# _251, tmp185
 16177 5458 4981F803 		cmp	r8, 664579	# primeCount,
 16177      240A00
 16178 545f 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 16179 5463 410F95C6 		setne	r14b	#, _135
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16180              		.loc 1 975 29 is_stmt 1 view .LVU5714
 16181              	.LVL1075:
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16182              		.loc 1 975 54 view .LVU5715
 16183              	# sieve_extend.c:975:         case 10000000:      valid_primes = 664579;   break;
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16184              		.loc 1 975 42 is_stmt 0 view .LVU5716
 16185 5467 B903240A 		mov	ecx, 664579	# valid_primes,
 16185      00
 16186              	# sieve_extend.c:975:         case 10000000:      valid_primes = 664579;   break;
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16187              		.loc 1 975 9 view .LVU5717
 16188 546c E9BFFCFF 		jmp	.L1487	#
 16188      FF
 16189              	.LVL1076:
 16190              		.p2align 4,,10
 16191 5471 0F1F8000 		.p2align 3
 16191      000000
 16192              	.L1491:
 16193              	.LBB775:
 16194              	.LBB773:
 16195              	.LBB771:
 16196              	.LBB767:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16197              		.loc 1 947 32 is_stmt 1 view .LVU5718
 16198              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16199              		.loc 1 947 13 is_stmt 0 view .LVU5719
 16200 5478 4885FF   		test	rdi, rdi	# _137
 16201 547b 0F841CFF 		je	.L1605	#,
 16201      FFFF
 16202              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16203              		.loc 1 947 27 view .LVU5720
 16204 5481 BB010000 		mov	ebx, 1	# c,
 16204      00
 16205 5486 EB27     		jmp	.L1496	#
 16206              	.LVL1077:
 16207 5488 0F1F8400 		.p2align 4,,10
 16207      00000000 
 16208              		.p2align 3
 16209              	.L1505:
GAS LISTING /tmp/ccdGK7kM.s 			page 432


 16210              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 16211              		.loc 1 949 35 view .LVU5721
 16212 5490 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 16213              	.LVL1078:
 16214              	.L1494:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16215              		.loc 1 947 68 is_stmt 1 view .LVU5722
 16216              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16217              		.loc 1 947 69 is_stmt 0 view .LVU5723
 16218 5493 48FFC3   		inc	rbx	# c
 16219              	.LVL1079:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16220              		.loc 1 947 32 is_stmt 1 view .LVU5724
 16221              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16222              		.loc 1 947 13 is_stmt 0 view .LVU5725
 16223 5496 4839FB   		cmp	rbx, rdi	# c, _137
 16224 5499 0F87EAFE 		ja	.L1495	#,
 16224      FFFF
 16225              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16226              		.loc 1 947 51 view .LVU5726
 16227 549f 4989DB   		mov	r11, rbx	# tmp209, c
 16228 54a2 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 16229              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16230              		.loc 1 947 47 view .LVU5727
 16231 54a6 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.687
 16232 54a9 0F87DAFE 		ja	.L1495	#,
 16232      FFFF
 16233              	.LVL1080:
 16234              	.L1496:
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16235              		.loc 1 948 17 is_stmt 1 view .LVU5728
 16236 54af 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 16237              	# sieve_extend.c:948:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16238              		.loc 1 948 39 is_stmt 0 view .LVU5729
 16239 54b3 488D7501 		lea	rsi, 1[rbp]	# _55,
 16240 54b7 4C89E0   		mov	rax, r12	# tmp203, ivtmp.687
 16241 54ba 31D2     		xor	edx, edx	# tmp204
 16242 54bc 48F7F6   		div	rsi	# _55
 16243              	# sieve_extend.c:948:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16244              		.loc 1 948 48 view .LVU5730
 16245 54bf 4885D2   		test	rdx, rdx	# tmp204
 16246 54c2 75CF     		jne	.L1494	#,
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16247              		.loc 1 948 48 view .LVU5731
 16248 54c4 4939EF   		cmp	r15, rbp	# ivtmp.689, _216
 16249 54c7 74CA     		je	.L1494	#,
 949:sieve_extend.c ****                 }
 16250              		.loc 1 949 21 is_stmt 1 view .LVU5732
 16251              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
GAS LISTING /tmp/ccdGK7kM.s 			page 433


 16252              		.loc 1 949 35 is_stmt 0 view .LVU5733
 16253 54c9 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 16254              	.LVL1081:
 16255              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 16256              		.loc 1 949 24 view .LVU5734
 16257 54cd 4983F81D 		cmp	r8, 29	# warn_prime,
 16258 54d1 77BD     		ja	.L1505	#,
 949:sieve_extend.c ****                 }
 16259              		.loc 1 949 44 is_stmt 1 view .LVU5735
 16260              	.LVL1082:
 16261              	.LBB755:
 16262              	.LBI749:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16263              		.loc 3 105 1 view .LVU5736
 16264              	.LBB752:
 16265              		.loc 3 107 3 view .LVU5737
 16266              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16267              		.loc 3 107 10 is_stmt 0 view .LVU5738
 16268 54d3 4883EC08 		sub	rsp, 8	#,
 16269              		.cfi_def_cfa_offset 104
 16270 54d7 4154     		push	r12	# ivtmp.687
 16271              		.cfi_def_cfa_offset 112
 16272 54d9 4989F0   		mov	r8, rsi	#, _55
 16273 54dc 4989C1   		mov	r9, rax	#, tmp203
 16274 54df 4C89E2   		mov	rdx, r12	#, ivtmp.687
 16275 54e2 BF010000 		mov	edi, 1	#,
 16275      00
 16276 54e7 4C89F1   		mov	rcx, r14	#, prime
 16277 54ea 488D3500 		lea	rsi, .LC13[rip]	#,
 16277      000000
 16278 54f1 31C0     		xor	eax, eax	#
 16279 54f3 E8000000 		call	__printf_chk@PLT	#
 16279      00
 16280              	.LVL1083:
 16281 54f8 58       		pop	rax	#
 16282              		.cfi_def_cfa_offset 104
 16283 54f9 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 16284 54fd 5A       		pop	rdx	#
 16285              		.cfi_def_cfa_offset 96
 16286              	.LBE752:
 16287              	.LBE755:
 16288              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 16289              		.loc 1 949 35 view .LVU5739
 16290 54fe 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 16291              	.LBB756:
 16292              	.LBB753:
 16293              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16294              		.loc 3 107 10 view .LVU5740
 16295 5501 EB90     		jmp	.L1494	#
 16296              	.LVL1084:
 16297              	.L1470:
 16298              		.loc 3 107 10 view .LVU5741
 16299              	.LBE753:
 16300              	.LBE756:
 16301              	.LBE767:
GAS LISTING /tmp/ccdGK7kM.s 			page 434


 16302              	.LBE771:
 16303              	.LBE773:
 16304              	.LBE775:
 16305              	.LBB776:
 16306              	.LBB740:
 938:sieve_extend.c **** }
 16307              		.loc 1 938 5 is_stmt 1 view .LVU5742
 938:sieve_extend.c **** }
 16308              		.loc 1 938 5 is_stmt 0 view .LVU5743
 16309              	.LBE740:
 16310              	.LBE776:
 967:sieve_extend.c ****     switch(sieve->size) {
 16311              		.loc 1 967 5 is_stmt 1 view .LVU5744
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16312              		.loc 1 968 5 view .LVU5745
 16313 5503 41BE0100 		mov	r14d, 1	# _135,
 16313      0000
 16314 5509 41B80100 		mov	r8d, 1	# primeCount,
 16314      0000
 16315 550f 4531ED   		xor	r13d, r13d	# <retval>
 16316 5512 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 16316      860100
 16317 5519 0F842302 		je	.L1508	#,
 16317      0000
 16318 551f 0F872301 		ja	.L1500	#,
 16318      0000
 16319 5525 B9190000 		mov	ecx, 25	# valid_primes,
 16319      00
 16320 552a 4983F964 		cmp	r9, 100	# pretmp_199,
 16321 552e 742A     		je	.L1488	#,
 16322 5530 0F864001 		jbe	.L1618	#,
 16322      0000
 16323              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16324              		.loc 1 971 42 is_stmt 0 view .LVU5746
 16325 5536 B9A80000 		mov	ecx, 168	# valid_primes,
 16325      00
 16326              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16327              		.loc 1 968 5 view .LVU5747
 16328 553b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 16328      030000
 16329 5542 7416     		je	.L1488	#,
 16330 5544 4981F910 		cmp	r9, 10000	# pretmp_199,
 16330      270000
 16331 554b B9CD0400 		mov	ecx, 1229	# tmp223,
 16331      00
 16332 5550 41BA0000 		mov	r10d, 0	# tmp224,
 16332      0000
 16333 5556 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 16334              	.LVL1085:
 16335              	.L1488:
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16336              		.loc 1 983 5 is_stmt 1 view .LVU5748
 16337              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16338              		.loc 1 983 39 is_stmt 0 view .LVU5749
GAS LISTING /tmp/ccdGK7kM.s 			page 435


 16339 555a 85DB     		test	ebx, ebx	# option_verboselevel
 16340 555c 410F9FC4 		setg	r12b	#, tmp194
 16341              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16342              		.loc 1 983 8 view .LVU5750
 16343 5560 4520F4   		and	r12b, r14b	# _7, _135
 16344 5563 0F84E5FB 		je	.L1489	#,
 16344      FFFF
 984:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 16345              		.loc 1 984 9 is_stmt 1 view .LVU5751
 16346              	.LVL1086:
 16347              	.LBB777:
 16348              	.LBI777:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16349              		.loc 3 105 1 view .LVU5752
 16350              	.LBB778:
 16351              		.loc 3 107 3 view .LVU5753
 16352              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16353              		.loc 3 107 10 is_stmt 0 view .LVU5754
 16354 5569 31C0     		xor	eax, eax	#
 16355 556b 4C89CA   		mov	rdx, r9	#, pretmp_199
 16356 556e 488D3500 		lea	rsi, .LC11[rip]	#,
 16356      000000
 16357 5575 BF010000 		mov	edi, 1	#,
 16357      00
 16358 557a E8000000 		call	__printf_chk@PLT	#
 16358      00
 16359              	.LVL1087:
 16360              		.loc 3 107 10 view .LVU5755
 16361              	.LBE778:
 16362              	.LBE777:
 985:sieve_extend.c ****     }
 16363              		.loc 1 985 9 is_stmt 1 view .LVU5756
 16364              	# sieve_extend.c:985:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 985:sieve_extend.c ****     }
 16365              		.loc 1 985 12 is_stmt 0 view .LVU5757
 16366 557f 83FB01   		cmp	ebx, 1	# option_verboselevel,
 16367 5582 0F841AFE 		je	.L1469	#,
 16367      FFFF
 985:sieve_extend.c ****     }
 16368              		.loc 1 985 49 is_stmt 1 discriminator 1 view .LVU5758
 16369 5588 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 16370 558c BA640000 		mov	edx, 100	#,
 16370      00
 16371 5591 4889EF   		mov	rdi, rbp	#, sieve
 16372 5594 E8E7D7FF 		call	show_primes.isra.0	#
 16372      FF
 16373              	.LVL1088:
 16374              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16375              		.loc 1 983 9 is_stmt 0 discriminator 1 view .LVU5759
 16376 5599 4589E6   		mov	r14d, r12d	# _135, _7
 16377 559c E9ADFBFF 		jmp	.L1489	#
 16377      FF
 16378              	.LVL1089:
 16379              	.L1616:
 16380              	.LBB779:
GAS LISTING /tmp/ccdGK7kM.s 			page 436


 16381              	.LBB774:
 16382              	.LBB772:
 16383              	.LBB768:
 16384              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16385              		.loc 1 958 44 view .LVU5760
 16386 55a1 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 16386      08
 16387 55a6 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 16388              	.LVL1090:
 16389              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16390              		.loc 1 958 28 view .LVU5761
 16391 55aa 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 16392 55ae 761D     		jbe	.L1503	#,
 16393              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16394              		.loc 1 958 44 view .LVU5762
 16395 55b0 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 16395      08
 16396 55b5 E9CFFDFF 		jmp	.L1495	#
 16396      FF
 16397              	.LVL1091:
 16398              	.L1603:
 958:sieve_extend.c ****         }
 16399              		.loc 1 958 44 view .LVU5763
 16400 55ba 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 16400      08
 16401 55bf 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 16402              	.LVL1092:
 16403              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16404              		.loc 1 958 28 view .LVU5764
 16405 55c3 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 16406 55c7 0F87D0FD 		ja	.L1605	#,
 16406      FFFF
 16407              	.LVL1093:
 16408              	.L1503:
 16409              	.LBB761:
 16410              	.LBB762:
 16411              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16412              		.loc 3 107 10 view .LVU5765
 16413 55cd BF010000 		mov	edi, 1	#,
 16413      00
 16414              	.LBE762:
 16415              	.LBE761:
 16416              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 16417              		.loc 1 958 53 view .LVU5766
 16418 55d2 4B8D5436 		lea	rdx, 1[r14+r14]	# tmp220,
 16418      01
 16419              	.LBB765:
 16420              	.LBB763:
 16421              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16422              		.loc 3 107 10 view .LVU5767
 16423 55d7 4C89F1   		mov	rcx, r14	#, prime
 16424 55da 488D3500 		lea	rsi, .LC14[rip]	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 437


 16424      000000
 16425 55e1 31C0     		xor	eax, eax	#
 16426 55e3 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, warn_prime
 16426      18
 16427              	.LBE763:
 16428              	.LBE765:
 958:sieve_extend.c ****         }
 16429              		.loc 1 958 53 is_stmt 1 view .LVU5768
 16430              	.LVL1094:
 16431              	.LBB766:
 16432              	.LBI761:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16433              		.loc 3 105 1 view .LVU5769
 16434              	.LBB764:
 16435              		.loc 3 107 3 view .LVU5770
 16436              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16437              		.loc 3 107 10 is_stmt 0 view .LVU5771
 16438 55e8 E8000000 		call	__printf_chk@PLT	#
 16438      00
 16439              	.LVL1095:
 16440              		.loc 3 107 10 view .LVU5772
 16441 55ed 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 16441      08
 16442 55f2 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 16443 55f6 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# warn_prime, %sfp
 16443      18
 16444 55fb E989FDFF 		jmp	.L1495	#
 16444      FF
 16445              	.LVL1096:
 16446              	.L1484:
 16447              		.loc 3 107 10 view .LVU5773
 16448 5600 4981F8A2 		cmp	r8, 78498	# primeCount,
 16448      320100
 16449 5607 410F94C5 		sete	r13b	#, tmp183
 16450 560b 4421EA   		and	edx, r13d	# _251, tmp183
 16451 560e 4981F8A2 		cmp	r8, 78498	# primeCount,
 16451      320100
 16452 5615 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 16453 5619 410F95C6 		setne	r14b	#, _135
 16454              	.LBE764:
 16455              	.LBE766:
 16456              	.LBE768:
 16457              	.LBE772:
 16458              	.LBE774:
 16459              	.LBE779:
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16460              		.loc 1 974 29 is_stmt 1 view .LVU5774
 16461              	.LVL1097:
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16462              		.loc 1 974 54 view .LVU5775
 16463              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16464              		.loc 1 974 42 is_stmt 0 view .LVU5776
 16465 561d B9A23201 		mov	ecx, 78498	# valid_primes,
 16465      00
 16466              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
GAS LISTING /tmp/ccdGK7kM.s 			page 438


 16467              		.loc 1 974 9 view .LVU5777
 16468 5622 E909FBFF 		jmp	.L1487	#
 16468      FF
 16469              	.LVL1098:
 16470              	.L1478:
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16471              		.loc 1 974 9 view .LVU5778
 16472 5627 4983F804 		cmp	r8, 4	# primeCount,
 16473 562b 410F94C2 		sete	r10b	#, tmp175
 16474 562f 4421D2   		and	edx, r10d	# _251, tmp175
 16475 5632 4983F804 		cmp	r8, 4	# primeCount,
 16476 5636 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 16477 563a 410F95C6 		setne	r14b	#, _135
 16478              	# sieve_extend.c:969:         case 10:            valid_primes = 4;        break;
 969:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 16479              		.loc 1 969 42 view .LVU5779
 16480 563e B9040000 		mov	ecx, 4	# valid_primes,
 16480      00
 16481 5643 E9E8FAFF 		jmp	.L1487	#
 16481      FF
 16482              	.LVL1099:
 16483              	.L1500:
 16484              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16485              		.loc 1 976 42 view .LVU5780
 16486 5648 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 16486      00
 16487              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16488              		.loc 1 968 5 view .LVU5781
 16489 564d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 16489      E1F505
 16490 5654 0F8400FF 		je	.L1488	#,
 16490      FFFF
 16491 565a 762C     		jbe	.L1619	#,
 16492 565c 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 16492      CA9A3B
 16493 5663 B92EDF07 		mov	ecx, 50847534	# tmp227,
 16493      03
 16494 5668 B8000000 		mov	eax, 0	# tmp228,
 16494      00
 16495 566d 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 16496 5671 E9E4FEFF 		jmp	.L1488	#
 16496      FF
 16497              	.L1618:
 16498 5676 31C9     		xor	ecx, ecx	# valid_primes
 16499 5678 4983F90A 		cmp	r9, 10	# pretmp_199,
 16500 567c 0F94C1   		sete	cl	#, valid_primes
 16501 567f 48C1E102 		sal	rcx, 2	# valid_primes,
 16502 5683 E9D2FEFF 		jmp	.L1488	#
 16502      FF
 16503              	.L1619:
 16504              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16505              		.loc 1 974 42 view .LVU5782
 16506 5688 B9A23201 		mov	ecx, 78498	# valid_primes,
 16506      00
GAS LISTING /tmp/ccdGK7kM.s 			page 439


 16507              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16508              		.loc 1 968 5 view .LVU5783
 16509 568d 4981F940 		cmp	r9, 1000000	# pretmp_199,
 16509      420F00
 16510 5694 0F84C0FE 		je	.L1488	#,
 16510      FFFF
 16511 569a 4981F980 		cmp	r9, 10000000	# pretmp_199,
 16511      969800
 16512 56a1 B903240A 		mov	ecx, 664579	# tmp225,
 16512      00
 16513 56a6 BE000000 		mov	esi, 0	# tmp226,
 16513      00
 16514 56ab 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 16515 56af E9A6FEFF 		jmp	.L1488	#
 16515      FF
 16516              	.LVL1100:
 16517              	.L1476:
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16518              		.loc 1 968 5 view .LVU5784
 16519 56b4 4981F8A8 		cmp	r8, 168	# primeCount,
 16519      000000
 16520 56bb 410F94C6 		sete	r14b	#, tmp177
 16521 56bf 4421F2   		and	edx, r14d	# _251, tmp177
 16522 56c2 4981F8A8 		cmp	r8, 168	# primeCount,
 16522      000000
 16523 56c9 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 16524              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16525              		.loc 1 971 42 view .LVU5785
 16526 56cd B9A80000 		mov	ecx, 168	# valid_primes,
 16526      00
 16527 56d2 410F95C6 		setne	r14b	#, _135
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16528              		.loc 1 971 29 is_stmt 1 view .LVU5786
 16529              	.LVL1101:
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16530              		.loc 1 971 54 view .LVU5787
 16531              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16532              		.loc 1 971 9 is_stmt 0 view .LVU5788
 16533 56d6 E955FAFF 		jmp	.L1487	#
 16533      FF
 16534              	.LVL1102:
 16535              	.L1482:
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16536              		.loc 1 971 9 view .LVU5789
 16537 56db 4981F8AF 		cmp	r8, 5761455	# primeCount,
 16537      E95700
 16538 56e2 0F94C0   		sete	al	#, tmp187
 16539 56e5 21C2     		and	edx, eax	# _251, tmp187
 16540 56e7 4981F8AF 		cmp	r8, 5761455	# primeCount,
 16540      E95700
 16541 56ee 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 16542 56f2 410F95C6 		setne	r14b	#, _135
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16543              		.loc 1 976 29 is_stmt 1 view .LVU5790
GAS LISTING /tmp/ccdGK7kM.s 			page 440


 16544              	.LVL1103:
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16545              		.loc 1 976 54 view .LVU5791
 16546              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16547              		.loc 1 976 42 is_stmt 0 view .LVU5792
 16548 56f6 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 16548      00
 16549              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16550              		.loc 1 976 9 view .LVU5793
 16551 56fb E930FAFF 		jmp	.L1487	#
 16551      FF
 16552              	.LVL1104:
 16553              	.L1480:
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16554              		.loc 1 976 9 view .LVU5794
 16555 5700 4D85C0   		test	r8, r8	# primeCount
 16556 5703 410F94C3 		sete	r11b	#, tmp191
 16557 5707 4421DA   		and	edx, r11d	# _251, tmp191
 16558 570a 4D85C0   		test	r8, r8	# primeCount
 16559 570d 410F95C6 		setne	r14b	#, _135
 978:sieve_extend.c ****     }
 16560              		.loc 1 978 29 is_stmt 1 view .LVU5795
 978:sieve_extend.c ****     }
 16561              		.loc 1 978 29 is_stmt 0 view .LVU5796
 16562 5711 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 16563              	# sieve_extend.c:978:         default:            valid_primes= 0;
 978:sieve_extend.c ****     }
 16564              		.loc 1 978 41 view .LVU5797
 16565 5715 31C9     		xor	ecx, ecx	# valid_primes
 16566 5717 E914FAFF 		jmp	.L1487	#
 16566      FF
 16567              	.L1474:
 978:sieve_extend.c ****     }
 16568              		.loc 1 978 41 view .LVU5798
 16569 571c 4981F878 		cmp	r8, 9592	# primeCount,
 16569      250000
 16570 5723 400F94C7 		sete	dil	#, tmp181
 16571 5727 21FA     		and	edx, edi	# _251, tmp181
 16572 5729 4981F878 		cmp	r8, 9592	# primeCount,
 16572      250000
 16573 5730 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 16574 5734 410F95C6 		setne	r14b	#, _135
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16575              		.loc 1 973 29 is_stmt 1 view .LVU5799
 16576              	.LVL1105:
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16577              		.loc 1 973 54 view .LVU5800
 16578              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16579              		.loc 1 973 42 is_stmt 0 view .LVU5801
 16580 5738 B9782500 		mov	ecx, 9592	# valid_primes,
 16580      00
 16581              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16582              		.loc 1 973 9 view .LVU5802
GAS LISTING /tmp/ccdGK7kM.s 			page 441


 16583 573d E9EEF9FF 		jmp	.L1487	#
 16583      FF
 16584              	.LVL1106:
 16585              	.L1508:
 16586              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16587              		.loc 1 973 42 view .LVU5803
 16588 5742 B9782500 		mov	ecx, 9592	# valid_primes,
 16588      00
 16589 5747 E90EFEFF 		jmp	.L1488	#
 16589      FF
 16590              		.cfi_endproc
 16591              	.LFE5347:
 16593              		.section	.rodata.str1.8
 16594 0145 000000   		.align 8
 16595              	.LC15:
 16596 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 16596      653A2025 
 16596      73205B6F 
 16596      7074696F 
 16596      6E735D20 
 16597              		.section	.rodata.str1.1
 16598              	.LC16:
 16599 0031 4F707469 		.string	"Options:\n"
 16599      6F6E733A 
 16599      0A00
 16600              		.section	.rodata.str1.8
 16601 0167 00       		.align 8
 16602              	.LC17:
 16603 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 16603      76657262 
 16603      6F736520 
 16603      3C6C6576 
 16603      656C3E20 
 16604 01a3 00000000 		.align 8
 16604      00
 16605              	.LC18:
 16606 01a8 20202020 		.string	"                     1 - show phase progress\n"
 16606      20202020 
 16606      20202020 
 16606      20202020 
 16606      20202020 
 16607 01d6 0000     		.align 8
 16608              	.LC19:
 16609 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 16609      20202020 
 16609      20202020 
 16609      20202020 
 16609      20202020 
 16610 0219 00000000 		.align 8
 16610      000000
 16611              	.LC20:
 16612 0220 20202020 		.string	"                     3 - show actual work\n"
 16612      20202020 
 16612      20202020 
 16612      20202020 
 16612      20202020 
GAS LISTING /tmp/ccdGK7kM.s 			page 442


 16613 024b 00000000 		.align 8
 16613      00
 16614              	.LC21:
 16615 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 16615      63686563 
 16615      6B202020 
 16615      20202020 
 16615      20202020 
 16616 028d 000000   		.align 8
 16617              	.LC22:
 16618 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 16618      73686F77 
 16618      203C6D61 
 16618      78696D75 
 16618      6D3E2020 
 16619 02ce 0000     		.align 8
 16620              	.LC23:
 16621 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 16621      74756E65 
 16621      20203C6C 
 16621      6576656C 
 16621      3E202020 
 16622 031d 000000   		.align 8
 16623              	.LC24:
 16624 0320 20202020 		.string	"                     1 - fast tuning\n"
 16624      20202020 
 16624      20202020 
 16624      20202020 
 16624      20202020 
 16625 0346 0000     		.align 8
 16626              	.LC25:
 16627 0348 20202020 		.string	"                     2 - refined tuning\n"
 16627      20202020 
 16627      20202020 
 16627      20202020 
 16627      20202020 
 16628 0371 00000000 		.align 8
 16628      000000
 16629              	.LC26:
 16630 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 16630      20202020 
 16630      20202020 
 16630      20202020 
 16630      20202020 
 16631              		.text
 16632 574c 0F1F4000 		.p2align 4
 16633              		.globl	usage
 16635              	usage:
 16636              	.LVL1107:
 16637              	.LFB5348:
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16638              		.loc 1 991 24 is_stmt 1 view -0
 16639              		.cfi_startproc
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16640              		.loc 1 991 24 is_stmt 0 view .LVU5805
 16641 5750 F30F1EFA 		endbr64	
 16642 5754 50       		push	rax	#
GAS LISTING /tmp/ccdGK7kM.s 			page 443


 16643              		.cfi_def_cfa_offset 16
 16644 5755 58       		pop	rax	#
 16645              		.cfi_def_cfa_offset 8
 992:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 16646              		.loc 1 992 5 is_stmt 1 view .LVU5806
 16647              	.LVL1108:
 16648              	.LBB780:
 16649              	.LBI780:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16650              		.loc 3 98 1 view .LVU5807
 16651              	.LBB781:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16652              		.loc 3 100 3 view .LVU5808
 16653              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16654              		.loc 3 100 10 is_stmt 0 view .LVU5809
 16655 5756 488D1500 		lea	rdx, .LC15[rip]	#,
 16655      000000
 16656 575d BE010000 		mov	esi, 1	#,
 16656      00
 16657 5762 31C0     		xor	eax, eax	#
 16658              	.LBE781:
 16659              	.LBE780:
 16660              	# sieve_extend.c:991: void usage(char *name) {
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16661              		.loc 1 991 24 view .LVU5810
 16662 5764 4883EC08 		sub	rsp, 8	#,
 16663              		.cfi_def_cfa_offset 16
 16664              	# sieve_extend.c:991: void usage(char *name) {
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16665              		.loc 1 991 24 view .LVU5811
 16666 5768 4889F9   		mov	rcx, rdi	# name, tmp107
 16667              	.LBB783:
 16668              	.LBB782:
 16669              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16670              		.loc 3 100 10 view .LVU5812
 16671 576b 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 16671      000000
 16672              	.LVL1109:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16673              		.loc 3 100 10 view .LVU5813
 16674 5772 E8000000 		call	__fprintf_chk@PLT	#
 16674      00
 16675              	.LVL1110:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16676              		.loc 3 100 10 view .LVU5814
 16677              	.LBE782:
 16678              	.LBE783:
 993:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 16679              		.loc 1 993 5 is_stmt 1 view .LVU5815
 16680              	.LBB784:
 16681              	.LBI784:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16682              		.loc 3 98 1 view .LVU5816
 16683              	.LBB785:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccdGK7kM.s 			page 444


 16684              		.loc 3 100 3 view .LVU5817
 16685              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16686              		.loc 3 100 10 is_stmt 0 view .LVU5818
 16687 5777 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16687      000000
 16688 577e BA090000 		mov	edx, 9	#,
 16688      00
 16689 5783 BE010000 		mov	esi, 1	#,
 16689      00
 16690 5788 488D3D00 		lea	rdi, .LC16[rip]	#,
 16690      000000
 16691 578f E8000000 		call	fwrite@PLT	#
 16691      00
 16692              	.LVL1111:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16693              		.loc 3 100 10 view .LVU5819
 16694              	.LBE785:
 16695              	.LBE784:
 994:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 16696              		.loc 1 994 5 is_stmt 1 view .LVU5820
 16697              	.LBB786:
 16698              	.LBI786:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16699              		.loc 3 98 1 view .LVU5821
 16700              	.LBB787:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16701              		.loc 3 100 3 view .LVU5822
 16702              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16703              		.loc 3 100 10 is_stmt 0 view .LVU5823
 16704 5794 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16704      000000
 16705 579b BA3A0000 		mov	edx, 58	#,
 16705      00
 16706 57a0 BE010000 		mov	esi, 1	#,
 16706      00
 16707 57a5 488D3D00 		lea	rdi, .LC17[rip]	#,
 16707      000000
 16708 57ac E8000000 		call	fwrite@PLT	#
 16708      00
 16709              	.LVL1112:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16710              		.loc 3 100 10 view .LVU5824
 16711              	.LBE787:
 16712              	.LBE786:
 995:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 16713              		.loc 1 995 5 is_stmt 1 view .LVU5825
 16714              	.LBB788:
 16715              	.LBI788:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16716              		.loc 3 98 1 view .LVU5826
 16717              	.LBB789:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16718              		.loc 3 100 3 view .LVU5827
 16719              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccdGK7kM.s 			page 445


 16720              		.loc 3 100 10 is_stmt 0 view .LVU5828
 16721 57b1 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16721      000000
 16722 57b8 BA2D0000 		mov	edx, 45	#,
 16722      00
 16723 57bd BE010000 		mov	esi, 1	#,
 16723      00
 16724 57c2 488D3D00 		lea	rdi, .LC18[rip]	#,
 16724      000000
 16725 57c9 E8000000 		call	fwrite@PLT	#
 16725      00
 16726              	.LVL1113:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16727              		.loc 3 100 10 view .LVU5829
 16728              	.LBE789:
 16729              	.LBE788:
 996:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 16730              		.loc 1 996 5 is_stmt 1 view .LVU5830
 16731              	.LBB790:
 16732              	.LBI790:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16733              		.loc 3 98 1 view .LVU5831
 16734              	.LBB791:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16735              		.loc 3 100 3 view .LVU5832
 16736              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16737              		.loc 3 100 10 is_stmt 0 view .LVU5833
 16738 57ce 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16738      000000
 16739 57d5 BA400000 		mov	edx, 64	#,
 16739      00
 16740 57da BE010000 		mov	esi, 1	#,
 16740      00
 16741 57df 488D3D00 		lea	rdi, .LC19[rip]	#,
 16741      000000
 16742 57e6 E8000000 		call	fwrite@PLT	#
 16742      00
 16743              	.LVL1114:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16744              		.loc 3 100 10 view .LVU5834
 16745              	.LBE791:
 16746              	.LBE790:
 997:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 16747              		.loc 1 997 5 is_stmt 1 view .LVU5835
 16748              	.LBB792:
 16749              	.LBI792:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16750              		.loc 3 98 1 view .LVU5836
 16751              	.LBB793:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16752              		.loc 3 100 3 view .LVU5837
 16753              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16754              		.loc 3 100 10 is_stmt 0 view .LVU5838
 16755 57eb 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16755      000000
GAS LISTING /tmp/ccdGK7kM.s 			page 446


 16756 57f2 BA2A0000 		mov	edx, 42	#,
 16756      00
 16757 57f7 BE010000 		mov	esi, 1	#,
 16757      00
 16758 57fc 488D3D00 		lea	rdi, .LC20[rip]	#,
 16758      000000
 16759 5803 E8000000 		call	fwrite@PLT	#
 16759      00
 16760              	.LVL1115:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16761              		.loc 3 100 10 view .LVU5839
 16762              	.LBE793:
 16763              	.LBE792:
 998:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 16764              		.loc 1 998 5 is_stmt 1 view .LVU5840
 16765              	.LBB794:
 16766              	.LBI794:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16767              		.loc 3 98 1 view .LVU5841
 16768              	.LBB795:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16769              		.loc 3 100 3 view .LVU5842
 16770              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16771              		.loc 3 100 10 is_stmt 0 view .LVU5843
 16772 5808 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16772      000000
 16773 580f BA3C0000 		mov	edx, 60	#,
 16773      00
 16774 5814 BE010000 		mov	esi, 1	#,
 16774      00
 16775 5819 488D3D00 		lea	rdi, .LC21[rip]	#,
 16775      000000
 16776 5820 E8000000 		call	fwrite@PLT	#
 16776      00
 16777              	.LVL1116:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16778              		.loc 3 100 10 view .LVU5844
 16779              	.LBE795:
 16780              	.LBE794:
 999:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 16781              		.loc 1 999 5 is_stmt 1 view .LVU5845
 16782              	.LBB796:
 16783              	.LBI796:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16784              		.loc 3 98 1 view .LVU5846
 16785              	.LBB797:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16786              		.loc 3 100 3 view .LVU5847
 16787              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16788              		.loc 3 100 10 is_stmt 0 view .LVU5848
 16789 5825 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16789      000000
 16790 582c BA3D0000 		mov	edx, 61	#,
 16790      00
 16791 5831 BE010000 		mov	esi, 1	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 447


 16791      00
 16792 5836 488D3D00 		lea	rdi, .LC22[rip]	#,
 16792      000000
 16793 583d E8000000 		call	fwrite@PLT	#
 16793      00
 16794              	.LVL1117:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16795              		.loc 3 100 10 view .LVU5849
 16796              	.LBE797:
 16797              	.LBE796:
1000:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 16798              		.loc 1 1000 5 is_stmt 1 view .LVU5850
 16799              	.LBB798:
 16800              	.LBI798:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16801              		.loc 3 98 1 view .LVU5851
 16802              	.LBB799:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16803              		.loc 3 100 3 view .LVU5852
 16804              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16805              		.loc 3 100 10 is_stmt 0 view .LVU5853
 16806 5842 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16806      000000
 16807 5849 BA4C0000 		mov	edx, 76	#,
 16807      00
 16808 584e BE010000 		mov	esi, 1	#,
 16808      00
 16809 5853 488D3D00 		lea	rdi, .LC23[rip]	#,
 16809      000000
 16810 585a E8000000 		call	fwrite@PLT	#
 16810      00
 16811              	.LVL1118:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16812              		.loc 3 100 10 view .LVU5854
 16813              	.LBE799:
 16814              	.LBE798:
1001:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 16815              		.loc 1 1001 5 is_stmt 1 view .LVU5855
 16816              	.LBB800:
 16817              	.LBI800:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16818              		.loc 3 98 1 view .LVU5856
 16819              	.LBB801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16820              		.loc 3 100 3 view .LVU5857
 16821              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16822              		.loc 3 100 10 is_stmt 0 view .LVU5858
 16823 585f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16823      000000
 16824 5866 BA250000 		mov	edx, 37	#,
 16824      00
 16825 586b BE010000 		mov	esi, 1	#,
 16825      00
 16826 5870 488D3D00 		lea	rdi, .LC24[rip]	#,
 16826      000000
GAS LISTING /tmp/ccdGK7kM.s 			page 448


 16827 5877 E8000000 		call	fwrite@PLT	#
 16827      00
 16828              	.LVL1119:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16829              		.loc 3 100 10 view .LVU5859
 16830              	.LBE801:
 16831              	.LBE800:
1002:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 16832              		.loc 1 1002 5 is_stmt 1 view .LVU5860
 16833              	.LBB802:
 16834              	.LBI802:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16835              		.loc 3 98 1 view .LVU5861
 16836              	.LBB803:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16837              		.loc 3 100 3 view .LVU5862
 16838              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16839              		.loc 3 100 10 is_stmt 0 view .LVU5863
 16840 587c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16840      000000
 16841 5883 BA280000 		mov	edx, 40	#,
 16841      00
 16842 5888 BE010000 		mov	esi, 1	#,
 16842      00
 16843 588d 488D3D00 		lea	rdi, .LC25[rip]	#,
 16843      000000
 16844 5894 E8000000 		call	fwrite@PLT	#
 16844      00
 16845              	.LVL1120:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16846              		.loc 3 100 10 view .LVU5864
 16847              	.LBE803:
 16848              	.LBE802:
1003:sieve_extend.c ****     exit(1);
 16849              		.loc 1 1003 5 is_stmt 1 view .LVU5865
 16850              	.LBB804:
 16851              	.LBI804:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16852              		.loc 3 98 1 view .LVU5866
 16853              	.LBB805:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16854              		.loc 3 100 3 view .LVU5867
 16855              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16856              		.loc 3 100 10 is_stmt 0 view .LVU5868
 16857 5899 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16857      000000
 16858 58a0 488D3D00 		lea	rdi, .LC26[rip]	#,
 16858      000000
 16859 58a7 BA350000 		mov	edx, 53	#,
 16859      00
 16860 58ac BE010000 		mov	esi, 1	#,
 16860      00
 16861 58b1 E8000000 		call	fwrite@PLT	#
 16861      00
 16862              	.LVL1121:
GAS LISTING /tmp/ccdGK7kM.s 			page 449


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16863              		.loc 3 100 10 view .LVU5869
 16864              	.LBE805:
 16865              	.LBE804:
1004:sieve_extend.c **** }
 16866              		.loc 1 1004 5 is_stmt 1 view .LVU5870
 16867 58b6 BF010000 		mov	edi, 1	#,
 16867      00
 16868 58bb E8000000 		call	exit@PLT	#
 16868      00
 16869              	.LVL1122:
 16870              		.cfi_endproc
 16871              	.LFE5348:
 16873              		.section	.rodata.str1.1
 16874              	.LC28:
 16875 003b 56616C69 		.string	"Validating... "
 16875      64617469 
 16875      6E672E2E 
 16875      2E2000
 16876              	.LC29:
 16877 004a 2D2D6865 		.string	"--help"
 16877      6C7000
 16878              	.LC30:
 16879 0051 2D2D7665 		.string	"--verbose"
 16879      72626F73 
 16879      6500
 16880              	.LC31:
 16881 005b 4E6F2076 		.string	"No verbose level specified\n"
 16881      6572626F 
 16881      7365206C 
 16881      6576656C 
 16881      20737065 
 16882              	.LC32:
 16883 0077 256400   		.string	"%d"
 16884              		.section	.rodata.str1.8
 16885 03ae 0000     		.align 8
 16886              	.LC33:
 16887 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 16887      723A2049 
 16887      6E76616C 
 16887      6964206D 
 16887      65617375 
 16888              		.section	.rodata.str1.1
 16889              	.LC34:
 16890 007a 56657262 		.string	"Verbose level set to %d\n"
 16890      6F736520 
 16890      6C657665 
 16890      6C207365 
 16890      7420746F 
 16891              	.LC35:
 16892 0093 2D2D6368 		.string	"--check"
 16892      65636B00 
 16893              	.LC36:
 16894 009b 2D2D7475 		.string	"--tune"
 16894      6E6500
 16895              	.LC37:
 16896 00a2 4E6F2074 		.string	"No tune level specified\n"
GAS LISTING /tmp/ccdGK7kM.s 			page 450


 16896      756E6520 
 16896      6C657665 
 16896      6C207370 
 16896      65636966 
 16897              		.section	.rodata.str1.8
 16898 03d5 000000   		.align 8
 16899              	.LC38:
 16900 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 16900      723A2049 
 16900      6E76616C 
 16900      69642074 
 16900      756E6520 
 16901              		.section	.rodata.str1.1
 16902              	.LC39:
 16903 00bb 54756E65 		.string	"Tune level set to %d\n"
 16903      206C6576 
 16903      656C2073 
 16903      65742074 
 16903      6F202564 
 16904              	.LC40:
 16905 00d1 2D2D7368 		.string	"--show"
 16905      6F7700
 16906              	.LC41:
 16907 00d8 4E6F2073 		.string	"No show maximum specified\n"
 16907      686F7720 
 16907      6D617869 
 16907      6D756D20 
 16907      73706563 
 16908              	.LC42:
 16909 00f3 256A7500 		.string	"%ju"
 16910              		.section	.rodata.str1.8
 16911 03f7 00       		.align 8
 16912              	.LC43:
 16913 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 16913      723A2049 
 16913      6E76616C 
 16913      69642073 
 16913      686F7720 
 16914              		.section	.rodata.str1.1
 16915              	.LC44:
 16916 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 16916      206D6178 
 16916      696D756D 
 16916      20736574 
 16916      20746F20 
 16917              	.LC45:
 16918 0110 496E7661 		.string	"Invalid size %s\n"
 16918      6C696420 
 16918      73697A65 
 16918      2025730A 
 16918      00
 16919              	.LC46:
 16920 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 16920      6865636B 
 16920      696E6720 
 16920      73697A65 
 16920      20256A75 
GAS LISTING /tmp/ccdGK7kM.s 			page 451


 16921              	.LC47:
 16922 013a 2E626C6F 		.string	".blocksize %ju-"
 16922      636B7369 
 16922      7A652025 
 16922      6A752D00 
 16923              	.LC48:
 16924 014a 76616C69 		.string	"valid;"
 16924      643B00
 16925              	.LC49:
 16926 0151 2E2E2E56 		.string	"...Valid algorithm"
 16926      616C6964 
 16926      20616C67 
 16926      6F726974 
 16926      686D00
 16927              	.LC50:
 16928 0164 54756E69 		.string	"Tuning..."
 16928      6E672E2E 
 16928      2E00
 16929              		.section	.rodata.str1.8
 16930 0419 00000000 		.align 8
 16930      000000
 16931              	.LC51:
 16932 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 16932      626C6F63 
 16932      6B73697A 
 16932      655F6269 
 16932      74732025 
 16933 04a7 00       		.align 8
 16934              	.LC52:
 16935 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 16935      6C6F636B 
 16935      73697A65 
 16935      5F626974 
 16935      73202531 
 16936 052e 0000     		.align 8
 16937              	.LC53:
 16938 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 16938      72657375 
 16938      6C74732E 
 16938      20496E69 
 16938      74616C20 
 16939              		.section	.rodata.str1.1
 16940              	.LC54:
 16941 016e 42657374 		.string	"Best options"
 16941      206F7074 
 16941      696F6E73 
 16941      00
 16942              		.section	.rodata.str1.8
 16943 0582 00000000 		.align 8
 16943      0000
 16944              	.LC55:
 16945 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 16945      2920626C 
 16945      6F636B73 
 16945      697A655F 
 16945      62697473 
 16946 0611 00000000 		.align 8
GAS LISTING /tmp/ccdGK7kM.s 			page 452


 16946      000000
 16947              	.LC56:
 16948 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 16948      74207265 
 16948      73756C74 
 16948      3A20626C 
 16948      6F636B73 
 16949              		.align 8
 16950              	.LC57:
 16951 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
 16951      686D6172 
 16951      6B696E67 
 16951      2E2E2E20 
 16951      77697468 
 16952 06c3 00000000 		.align 8
 16952      00
 16953              	.LC59:
 16954 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 16954      65727661 
 16954      6E64616D 
 16954      5F657874 
 16954      656E643B 
 16955 070a 00000000 		.align 8
 16955      0000
 16956              	.LC60:
 16957 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 16957      6573202D 
 16957      20706572 
 16957      20352073 
 16957      65636F6E 
 16958              		.section	.rodata.str1.1
 16959              	.LC61:
 16960 017b 53686F77 		.string	"Show result set:"
 16960      20726573 
 16960      756C7420 
 16960      7365743A 
 16960      00
 16961              		.section	.text.startup,"ax",@progbits
 16962              		.p2align 4
 16963              		.globl	main
 16965              	main:
 16966              	.LVL1123:
 16967              	.LFB5352:
1048:sieve_extend.c **** 
1049:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1050:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1051:sieve_extend.c **** 
1052:sieve_extend.c ****     double best_avg = 0;
1053:sieve_extend.c ****     best_blocksize_bits = 0;
1054:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1055:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1056:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1057:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1058:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1059:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1060:sieve_extend.c ****     double sample_duration = default_sample_duration;
1061:sieve_extend.c **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 453


1062:sieve_extend.c ****     // determines the size of the resultset
1063:sieve_extend.c ****     switch (tune_level) {
1064:sieve_extend.c ****         case 1:
1065:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1066:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1067:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1068:sieve_extend.c ****             sample_max = 4;
1069:sieve_extend.c ****             sample_duration = 0.1;
1070:sieve_extend.c ****             break;
1071:sieve_extend.c ****         case 2:
1072:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1073:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1074:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1075:sieve_extend.c ****             sample_max = 4;
1076:sieve_extend.c ****             sample_duration = 0.2;
1077:sieve_extend.c ****             break;
1078:sieve_extend.c ****         case 3:
1079:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1080:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1081:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1082:sieve_extend.c ****             sample_max = 4;
1083:sieve_extend.c ****             sample_duration = 0.4;
1084:sieve_extend.c ****             break;
1085:sieve_extend.c ****     }
1086:sieve_extend.c ****     
1087:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1088:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1089:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1090:sieve_extend.c ****     counter_t tuning_results=0;
1091:sieve_extend.c ****     counter_t tuning_result_index=0;
1092:sieve_extend.c ****     
1093:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1094:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1095:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1096:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
1097:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1098:sieve_extend.c **** 
1099:sieve_extend.c ****                     // set variables
1100:sieve_extend.c ****                     tuning_results++;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1108:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1109:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1110:sieve_extend.c **** 
1111:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1112:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1113:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1114:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1115:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1116:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1117:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1118:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
GAS LISTING /tmp/ccdGK7kM.s 			page 454


1119:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1120:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1121:sieve_extend.c ****                     }
1122:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1123:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1124:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1125:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1126:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1127:sieve_extend.c ****                     tuning_result_index++;
1128:sieve_extend.c ****                 }
1129:sieve_extend.c ****             }
1130:sieve_extend.c ****         }
1131:sieve_extend.c ****     }
1132:sieve_extend.c ****     if (option_verboselevel >= 2) {
1133:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1134:sieve_extend.c ****         printf("Best options\n");
1135:sieve_extend.c ****     }
1136:sieve_extend.c ****     counter_t step=0;
1137:sieve_extend.c ****     while (tuning_results>4) {
1138:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1139:sieve_extend.c ****         step++;
1140:sieve_extend.c ****         if (option_verboselevel >= 2) {
1141:sieve_extend.c ****             tuning_result_index = 0;
1142:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1143:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1144:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1145:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1146:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1147:sieve_extend.c ****             if (option_verboselevel >= 3) {
1148:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1149:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1150:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1151:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1152:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1153:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1154:sieve_extend.c ****                 }
1155:sieve_extend.c ****             }
1156:sieve_extend.c ****         }
1157:sieve_extend.c **** 
1158:sieve_extend.c ****         tuning_results = tuning_results / 2;
1159:sieve_extend.c **** 
1160:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1161:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1162:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1163:sieve_extend.c ****         }
1164:sieve_extend.c ****         
1165:sieve_extend.c ****     }
1166:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1167:sieve_extend.c ****     if (option_verboselevel >= 1) {
1168:sieve_extend.c ****         tuning_result_index = 0;
1169:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1170:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1171:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1172:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1173:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1174:sieve_extend.c ****     }
1175:sieve_extend.c **** 
GAS LISTING /tmp/ccdGK7kM.s 			page 455


1176:sieve_extend.c ****     free(tuning_result);
1177:sieve_extend.c ****     return best_result;
1178:sieve_extend.c **** }
1179:sieve_extend.c **** 
1180:sieve_extend.c **** int main(int argc, char *argv[]) {
 16968              		.loc 1 1180 34 view -0
 16969              		.cfi_startproc
 16970              		.loc 1 1180 34 is_stmt 0 view .LVU5872
 16971 0000 F30F1EFA 		endbr64	
 16972 0004 4157     		push	r15	#
 16973              		.cfi_def_cfa_offset 16
 16974              		.cfi_offset 15, -16
 16975 0006 4156     		push	r14	#
 16976              		.cfi_def_cfa_offset 24
 16977              		.cfi_offset 14, -24
 16978 0008 4155     		push	r13	#
 16979              		.cfi_def_cfa_offset 32
 16980              		.cfi_offset 13, -32
 16981 000a 4154     		push	r12	#
 16982              		.cfi_def_cfa_offset 40
 16983              		.cfi_offset 12, -40
 16984 000c 55       		push	rbp	#
 16985              		.cfi_def_cfa_offset 48
 16986              		.cfi_offset 6, -48
 16987 000d 53       		push	rbx	#
 16988              		.cfi_def_cfa_offset 56
 16989              		.cfi_offset 3, -56
 16990 000e 4881ECB8 		sub	rsp, 184	#,
 16990      000000
 16991              		.cfi_def_cfa_offset 240
 16992              	# sieve_extend.c:1180: int main(int argc, char *argv[]) {
 16993              		.loc 1 1180 34 view .LVU5873
 16994 0015 64488B04 		mov	rax, QWORD PTR fs:40	# tmp525, MEM[(<address-space-1> long unsigned int *)40B]
 16994      25280000 
 16994      00
 16995 001e 48898424 		mov	QWORD PTR 168[rsp], rax	# D.35606, tmp525
 16995      A8000000 
 16996 0026 31C0     		xor	eax, eax	# tmp525
1181:sieve_extend.c **** 
1182:sieve_extend.c ****     
1183:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 16997              		.loc 1 1183 5 is_stmt 1 view .LVU5874
 16998              	# sieve_extend.c:1183:     counter_t option_maxFactor  = default_sieve_limit;
 16999              		.loc 1 1183 15 is_stmt 0 view .LVU5875
 17000 0028 48C74424 		mov	QWORD PTR 112[rsp], 1000000	# option_maxFactor,
 17000      7040420F 
 17000      00
1184:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17001              		.loc 1 1184 5 is_stmt 1 view .LVU5876
 17002              	# sieve_extend.c:1184:     counter_t option_showMaxFactor = default_showMaxFactor;
 17003              		.loc 1 1184 15 is_stmt 0 view .LVU5877
 17004 0031 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 17004      78000000 
 17004      00
1185:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17005              		.loc 1 1185 5 is_stmt 1 view .LVU5878
 17006              	# sieve_extend.c:1185:     int option_verboselevel = default_verbose_level;
GAS LISTING /tmp/ccdGK7kM.s 			page 456


 17007              		.loc 1 1185 9 is_stmt 0 view .LVU5879
 17008 003a C7442468 		mov	DWORD PTR 104[rsp], 2	# option_verboselevel,
 17008      02000000 
1186:sieve_extend.c ****     int option_check = default_check_level;
 17009              		.loc 1 1186 5 is_stmt 1 view .LVU5880
 17010              	.LVL1124:
1187:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 17011              		.loc 1 1187 5 view .LVU5881
 17012              	# sieve_extend.c:1187:     int option_tunelevel = default_tune_level;
 17013              		.loc 1 1187 9 is_stmt 0 view .LVU5882
 17014 0042 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 17014      00000000 
1188:sieve_extend.c **** 
1189:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 17015              		.loc 1 1189 5 is_stmt 1 view .LVU5883
 17016              	.LBB891:
 17017              		.loc 1 1189 10 view .LVU5884
 17018              	.LVL1125:
 17019              		.loc 1 1189 21 view .LVU5885
 17020              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
 17021              		.loc 1 1189 5 is_stmt 0 view .LVU5886
 17022 004a 83FF01   		cmp	edi, 1	# argc,
 17023 004d 0F8EC804 		jle	.L1639	#,
 17023      0000
 17024 0053 89FD     		mov	ebp, edi	# argc, tmp468
 17025 0055 4989F4   		mov	r12, rsi	# argv, tmp469
 17026              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
 17027              		.loc 1 1189 14 view .LVU5887
 17028 0058 BB010000 		mov	ebx, 1	# arg,
 17028      00
 17029 005d 4C8D2D00 		lea	r13, .LC29[rip]	# tmp407,
 17029      000000
 17030              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
1190:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1191:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17031              		.loc 1 1191 18 view .LVU5888
 17032 0064 4C8D3500 		lea	r14, .LC30[rip]	# tmp423,
 17032      000000
 17033 006b EB5B     		jmp	.L1623	#
 17034              	.LVL1126:
 17035 006d 0F1F00   		.p2align 4,,10
 17036              		.p2align 3
 17037              	.L1755:
1192:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17038              		.loc 1 1192 13 is_stmt 1 view .LVU5889
 17039              	# sieve_extend.c:1192:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 17040              		.loc 1 1192 16 is_stmt 0 view .LVU5890
 17041 0070 FFC3     		inc	ebx	# arg
 17042              	.LVL1127:
 17043              		.loc 1 1192 16 view .LVU5891
 17044 0072 39DD     		cmp	ebp, ebx	# argc, arg
 17045 0074 0F8EC10C 		jle	.L1753	#,
 17045      0000
1193:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17046              		.loc 1 1193 13 is_stmt 1 view .LVU5892
 17047              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17048              		.loc 1 1193 28 is_stmt 0 view .LVU5893
GAS LISTING /tmp/ccdGK7kM.s 			page 457


 17049 007a 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 17049      08
 17050              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17051              		.loc 1 1193 17 view .LVU5894
 17052 007f 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 17053 0082 31C0     		xor	eax, eax	#
 17054 0084 488D5424 		lea	rdx, 104[rsp]	# tmp285,
 17054      68
 17055 0089 488D3500 		lea	rsi, .LC32[rip]	#,
 17055      000000
 17056 0090 E8000000 		call	__isoc99_sscanf@PLT	#
 17056      00
 17057              	.LVL1128:
 17058              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17059              		.loc 1 1193 16 view .LVU5895
 17060 0095 83F801   		cmp	eax, 1	# tmp470,
 17061 0098 0F859504 		jne	.L1628	#,
 17061      0000
 17062              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17063              		.loc 1 1193 91 discriminator 1 view .LVU5896
 17064 009e 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.16_19, option_verboselevel
 17065              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17066              		.loc 1 1193 68 discriminator 1 view .LVU5897
 17067 00a2 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 17068 00a5 0F8F8804 		jg	.L1628	#,
 17068      0000
1194:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1195:sieve_extend.c ****             }
1196:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 17069              		.loc 1 1196 13 is_stmt 1 view .LVU5898
 17070              	.LVL1129:
 17071              	.LBB892:
 17072              	.LBI892:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17073              		.loc 3 105 1 view .LVU5899
 17074              	.LBB893:
 17075              		.loc 3 107 3 view .LVU5900
 17076              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17077              		.loc 3 107 10 is_stmt 0 view .LVU5901
 17078 00ab 488D3500 		lea	rsi, .LC34[rip]	#,
 17078      000000
 17079 00b2 BF010000 		mov	edi, 1	#,
 17079      00
 17080 00b7 31C0     		xor	eax, eax	#
 17081 00b9 E8000000 		call	__printf_chk@PLT	#
 17081      00
 17082              	.LVL1130:
 17083              	.L1630:
 17084              		.loc 3 107 10 view .LVU5902
 17085              	.LBE893:
 17086              	.LBE892:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17087              		.loc 1 1189 33 is_stmt 1 discriminator 2 view .LVU5903
 17088              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17089              		.loc 1 1189 36 is_stmt 0 discriminator 2 view .LVU5904
 17090 00be FFC3     		inc	ebx	# arg
GAS LISTING /tmp/ccdGK7kM.s 			page 458


 17091              	.LVL1131:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17092              		.loc 1 1189 21 is_stmt 1 discriminator 2 view .LVU5905
 17093              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17094              		.loc 1 1189 5 is_stmt 0 discriminator 2 view .LVU5906
 17095 00c0 39DD     		cmp	ebp, ebx	# argc, arg
 17096 00c2 0F8EE800 		jle	.L1754	#,
 17096      0000
 17097              	.LVL1132:
 17098              	.L1623:
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17099              		.loc 1 1190 9 is_stmt 1 view .LVU5907
 17100              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17101              		.loc 1 1190 24 is_stmt 0 view .LVU5908
 17102 00c8 4863C3   		movsx	rax, ebx	# arg, arg
 17103 00cb 48C1E003 		sal	rax, 3	# _2,
 17104 00cf 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 17105              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17106              		.loc 1 1190 13 view .LVU5909
 17107 00d3 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 17108 00d6 41B90700 		mov	r9d, 7	# tmp274,
 17108      0000
 17109 00dc 4C89C6   		mov	rsi, r8	# _4, _4
 17110 00df 4C89EF   		mov	rdi, r13	# tmp273, tmp407
 17111 00e2 4C89C9   		mov	rcx, r9	# tmp434, tmp274
 17112 00e5 F3A6     		repz cmpsb
 17113 00e7 0F97C2   		seta	dl	#, tmp275
 17114 00ea 80DA00   		sbb	dl, 0	# _5
 17115              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17116              		.loc 1 1190 12 view .LVU5910
 17117 00ed 84D2     		test	dl, dl	# _5
 17118 00ef 0F845B04 		je	.L1751	#,
 17118      0000
1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17119              		.loc 1 1191 14 is_stmt 1 view .LVU5911
 17120              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17121              		.loc 1 1191 18 is_stmt 0 view .LVU5912
 17122 00f5 B90A0000 		mov	ecx, 10	# tmp280,
 17122      00
 17123 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 17124 00fd 4C89F7   		mov	rdi, r14	# tmp279, tmp423
 17125 0100 F3A6     		repz cmpsb
 17126 0102 410F97C2 		seta	r10b	#, tmp281
 17127 0106 4180DA00 		sbb	r10b, 0	# _11
 17128              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17129              		.loc 1 1191 17 view .LVU5913
 17130 010a 4584D2   		test	r10b, r10b	# _11
 17131 010d 0F845DFF 		je	.L1755	#,
 17131      FFFF
1197:sieve_extend.c ****         } 
1198:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
GAS LISTING /tmp/ccdGK7kM.s 			page 459


 17132              		.loc 1 1198 14 is_stmt 1 view .LVU5914
 17133              	# sieve_extend.c:1198:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17134              		.loc 1 1198 18 is_stmt 0 view .LVU5915
 17135 0113 B9080000 		mov	ecx, 8	# tmp290,
 17135      00
 17136 0118 4C89C6   		mov	rsi, r8	# _4, _4
 17137 011b 488D3D00 		lea	rdi, .LC35[rip]	# tmp289,
 17137      000000
 17138 0122 F3A6     		repz cmpsb
 17139 0124 410F97C3 		seta	r11b	#, tmp291
 17140 0128 4180DB00 		sbb	r11b, 0	# _23
 17141              	# sieve_extend.c:1198:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17142              		.loc 1 1198 17 view .LVU5916
 17143 012c 4584DB   		test	r11b, r11b	# _23
 17144 012f 748D     		je	.L1630	#,
1199:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17145              		.loc 1 1199 14 is_stmt 1 view .LVU5917
 17146              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17147              		.loc 1 1199 18 is_stmt 0 view .LVU5918
 17148 0131 4C89C6   		mov	rsi, r8	# _4, _4
 17149 0134 488D3D00 		lea	rdi, .LC36[rip]	# tmp295,
 17149      000000
 17150 013b 4C89C9   		mov	rcx, r9	# tmp440, tmp274
 17151 013e F3A6     		repz cmpsb
 17152 0140 0F97C2   		seta	dl	#, tmp297
 17153 0143 80DA00   		sbb	dl, 0	# _24
 17154              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17155              		.loc 1 1199 17 view .LVU5919
 17156 0146 84D2     		test	dl, dl	# _24
 17157 0148 0F853201 		jne	.L1631	#,
 17157      0000
 17158              		.loc 1 1199 52 is_stmt 1 discriminator 1 view .LVU5920
 17159              	# sieve_extend.c:1200:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
1200:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 17160              		.loc 1 1200 16 is_stmt 0 discriminator 1 view .LVU5921
 17161 014e FFC3     		inc	ebx	# arg
 17162              	.LVL1133:
 17163              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
1199:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17164              		.loc 1 1199 68 discriminator 1 view .LVU5922
 17165 0150 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 17165      00000000 
 17166              		.loc 1 1200 13 is_stmt 1 discriminator 1 view .LVU5923
 17167              	.LVL1134:
 17168              	# sieve_extend.c:1200:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 17169              		.loc 1 1200 16 is_stmt 0 discriminator 1 view .LVU5924
 17170 0158 39DD     		cmp	ebp, ebx	# argc, arg
 17171 015a 0F8E1B0C 		jle	.L1756	#,
 17171      0000
1201:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17172              		.loc 1 1201 13 is_stmt 1 view .LVU5925
 17173              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17174              		.loc 1 1201 28 is_stmt 0 view .LVU5926
 17175 0160 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 17175      08
 17176              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17177              		.loc 1 1201 17 view .LVU5927
GAS LISTING /tmp/ccdGK7kM.s 			page 460


 17178 0165 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 17179 0168 31C0     		xor	eax, eax	#
 17180 016a 488D5424 		lea	rdx, 108[rsp]	# tmp301,
 17180      6C
 17181 016f 488D3500 		lea	rsi, .LC32[rip]	#,
 17181      000000
 17182 0176 E8000000 		call	__isoc99_sscanf@PLT	#
 17182      00
 17183              	.LVL1135:
 17184              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17185              		.loc 1 1201 16 view .LVU5928
 17186 017b 83F801   		cmp	eax, 1	# tmp471,
 17187 017e 0F85D90B 		jne	.L1633	#,
 17187      0000
 17188              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17189              		.loc 1 1201 85 discriminator 1 view .LVU5929
 17190 0184 8B54246C 		mov	edx, DWORD PTR 108[rsp]	# option_tunelevel.20_32, option_tunelevel
 17191              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17192              		.loc 1 1201 65 discriminator 1 view .LVU5930
 17193 0188 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 17194 018b 0F8FCC0B 		jg	.L1633	#,
 17194      0000
1202:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1203:sieve_extend.c ****             }
1204:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 17195              		.loc 1 1204 13 is_stmt 1 view .LVU5931
 17196              	.LVL1136:
 17197              	.LBB894:
 17198              	.LBI894:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17199              		.loc 3 105 1 view .LVU5932
 17200              	.LBB895:
 17201              		.loc 3 107 3 view .LVU5933
 17202              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17203              		.loc 3 107 10 is_stmt 0 view .LVU5934
 17204 0191 488D3500 		lea	rsi, .LC39[rip]	#,
 17204      000000
 17205 0198 BF010000 		mov	edi, 1	#,
 17205      00
 17206 019d 31C0     		xor	eax, eax	#
 17207              	.LBE895:
 17208              	.LBE894:
 17209              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17210              		.loc 1 1189 36 view .LVU5935
 17211 019f FFC3     		inc	ebx	# arg
 17212              	.LVL1137:
 17213              	.LBB897:
 17214              	.LBB896:
 17215              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17216              		.loc 3 107 10 view .LVU5936
 17217 01a1 E8000000 		call	__printf_chk@PLT	#
 17217      00
 17218              	.LVL1138:
 17219              		.loc 3 107 10 view .LVU5937
 17220              	.LBE896:
 17221              	.LBE897:
GAS LISTING /tmp/ccdGK7kM.s 			page 461


1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17222              		.loc 1 1189 33 is_stmt 1 view .LVU5938
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17223              		.loc 1 1189 21 view .LVU5939
 17224              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17225              		.loc 1 1189 5 is_stmt 0 view .LVU5940
 17226 01a6 39DD     		cmp	ebp, ebx	# argc, arg
 17227 01a8 0F8F1AFF 		jg	.L1623	#,
 17227      FFFF
 17228 01ae 6690     		.p2align 4,,10
 17229              		.p2align 3
 17230              	.L1754:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17231              		.loc 1 1189 5 view .LVU5941
 17232              	.LBE891:
1205:sieve_extend.c ****         }
1206:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1207:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1208:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1209:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1210:sieve_extend.c ****             }
1211:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1212:sieve_extend.c ****         }
1213:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1214:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1215:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1216:sieve_extend.c ****         }
1217:sieve_extend.c ****     }
1218:sieve_extend.c **** 
1219:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 17233              		.loc 1 1219 5 is_stmt 1 view .LVU5942
1220:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1221:sieve_extend.c ****         printf("\nResult set:\n");
1222:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1223:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1224:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1225:sieve_extend.c ****         else printf("The sieve is VALID\n");
1226:sieve_extend.c ****         delete_sieve(sieve_instance);
1227:sieve_extend.c ****         exit(0);
1228:sieve_extend.c ****     }
1229:sieve_extend.c **** 
1230:sieve_extend.c ****     struct timespec start_time,end_time;
 17234              		.loc 1 1230 5 view .LVU5943
1231:sieve_extend.c **** 
1232:sieve_extend.c ****     if (option_check) {
 17235              		.loc 1 1232 5 view .LVU5944
1233:sieve_extend.c ****         // Count the number of primes and validate the result
1234:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 17236              		.loc 1 1234 9 view .LVU5945
 17237              	# sieve_extend.c:1234:         if (option_verboselevel >= 1) printf("Validating... ");
 17238              		.loc 1 1234 12 is_stmt 0 view .LVU5946
 17239 01b0 8B6C2468 		mov	ebp, DWORD PTR 104[rsp]	#, option_verboselevel
 17240              	.LVL1139:
 17241              		.loc 1 1234 12 view .LVU5947
 17242 01b4 85ED     		test	ebp, ebp	#
 17243 01b6 0F8F5F03 		jg	.L1639	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 462


 17243      0000
 17244              	.LVL1140:
 17245              	.L1624:
1235:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17246              		.loc 1 1235 9 is_stmt 1 view .LVU5948
 17247              	# sieve_extend.c:1235:         if (option_verboselevel >= 2) printf("\n");
 17248              		.loc 1 1235 12 is_stmt 0 view .LVU5949
 17249 01bc 837C2468 		cmp	DWORD PTR 104[rsp], 1	# option_verboselevel,
 17249      01
 17250 01c1 7E0A     		jle	.L1640	#,
 17251              		.loc 1 1235 39 is_stmt 1 view .LVU5950
 17252              	.LVL1141:
 17253              	.LBB916:
 17254              	.LBI916:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17255              		.loc 3 105 1 view .LVU5951
 17256              	.LBB917:
 17257              		.loc 3 107 3 view .LVU5952
 17258              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17259              		.loc 3 107 10 is_stmt 0 view .LVU5953
 17260 01c3 BF0A0000 		mov	edi, 10	#,
 17260      00
 17261 01c8 E8000000 		call	putchar@PLT	#
 17261      00
 17262              	.LVL1142:
 17263              	.L1640:
 17264              		.loc 3 107 10 view .LVU5954
 17265              	.LBE917:
 17266              	.LBE916:
 17267              	.LBB918:
 17268              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17269              		.loc 1 1189 14 view .LVU5955
 17270 01cd C7042407 		mov	DWORD PTR [rsp], 7	# %sfp,
 17270      000000
 17271 01d4 41BC6400 		mov	r12d, 100	# sieveSize_check,
 17271      0000
 17272              	.LBE918:
 17273              	.LBB919:
 17274              	.LBB920:
 17275              	.LBB921:
 17276              	.LBB922:
 17277              	.LBB923:
 17278              	.LBB924:
 17279              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17280              		.loc 3 107 10 view .LVU5956
 17281 01da 4C8D2D00 		lea	r13, .LC47[rip]	# tmp422,
 17281      000000
 17282              	.L1647:
 17283              	.LVL1143:
 17284              		.loc 3 107 10 view .LVU5957
 17285              	.LBE924:
 17286              	.LBE923:
 17287              	.LBE922:
 17288              	.LBE921:
1236:sieve_extend.c **** 
1237:sieve_extend.c ****         // validate algorithm - run one time for all sizes
GAS LISTING /tmp/ccdGK7kM.s 			page 463


1238:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1239:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17289              		.loc 1 1239 13 is_stmt 1 view .LVU5958
 17290              	# sieve_extend.c:1239:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17291              		.loc 1 1239 37 is_stmt 0 view .LVU5959
 17292 01e1 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 17293              	# sieve_extend.c:1239:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17294              		.loc 1 1239 16 view .LVU5960
 17295 01e5 83F801   		cmp	eax, 1	# prephitmp_382,
 17296 01e8 7E1A     		jle	.L1641	#,
 17297              		.loc 1 1239 43 is_stmt 1 view .LVU5961
 17298              	.LVL1144:
 17299              	.LBB937:
 17300              	.LBI937:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17301              		.loc 3 105 1 view .LVU5962
 17302              	.LBB938:
 17303              		.loc 3 107 3 view .LVU5963
 17304              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17305              		.loc 3 107 10 is_stmt 0 view .LVU5964
 17306 01ea 4C89E2   		mov	rdx, r12	#, sieveSize_check
 17307 01ed 488D3500 		lea	rsi, .LC46[rip]	#,
 17307      000000
 17308 01f4 BF010000 		mov	edi, 1	#,
 17308      00
 17309 01f9 31C0     		xor	eax, eax	#
 17310 01fb E8000000 		call	__printf_chk@PLT	#
 17310      00
 17311              	.LVL1145:
 17312 0200 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 17313              	.LVL1146:
 17314              	.L1641:
 17315              		.loc 3 107 10 view .LVU5965
 17316              	.LBE938:
 17317              	.LBE937:
 17318              	.LBE920:
 17319              	.LBE919:
 17320              	.LBB947:
 17321              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17322              		.loc 1 1189 14 view .LVU5966
 17323 0204 BB050000 		mov	ebx, 5	# ivtmp_213,
 17323      00
 17324 0209 41BE0004 		mov	r14d, 1024	# blocksize_bits,
 17324      0000
 17325 020f EB56     		jmp	.L1645	#
 17326              	.LVL1147:
 17327              		.p2align 4,,10
 17328 0211 0F1F8000 		.p2align 3
 17328      000000
 17329              	.L1642:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17330              		.loc 1 1189 14 view .LVU5967
 17331              	.LBE947:
 17332              	.LBB948:
 17333              	.LBB944:
 17334              	.LBB939:
GAS LISTING /tmp/ccdGK7kM.s 			page 464


 17335              	.LBB933:
1240:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1241:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1242:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1243:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17336              		.loc 1 1243 17 is_stmt 1 view .LVU5968
 17337              	# sieve_extend.c:1243:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 17338              		.loc 1 1243 40 is_stmt 0 view .LVU5969
 17339 0218 4C89F6   		mov	rsi, r14	#, blocksize_bits
 17340 021b 4C89E7   		mov	rdi, r12	#, sieveSize_check
 17341 021e E8000000 		call	sieve	#
 17341      00
 17342              	.LVL1148:
 17343              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1244:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 17344              		.loc 1 1244 29 view .LVU5970
 17345 0223 8B742468 		mov	esi, DWORD PTR 104[rsp]	#, option_verboselevel
 17346              	# sieve_extend.c:1243:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1243:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 17347              		.loc 1 1243 40 view .LVU5971
 17348 0227 4889C5   		mov	rbp, rax	# sieve_instance_check, tmp474
 17349              	.LVL1149:
 17350              		.loc 1 1244 17 is_stmt 1 view .LVU5972
 17351              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 17352              		.loc 1 1244 29 is_stmt 0 view .LVU5973
 17353 022a 4889C7   		mov	rdi, rax	#, sieve_instance_check
 17354 022d E8000000 		call	validatePrimeCount	#
 17354      00
 17355              	.LVL1150:
 17356              	.LBB926:
 17357              	.LBB927:
 17358              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 17359              		.loc 1 105 5 view .LVU5974
 17360 0232 488B7D00 		mov	rdi, QWORD PTR 0[rbp]	#, sieve_instance_check_126->bitarray
 17361              	.LBE927:
 17362              	.LBE926:
 17363              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 17364              		.loc 1 1244 29 view .LVU5975
 17365 0236 4189C7   		mov	r15d, eax	# valid, tmp475
 17366              	.LVL1151:
1245:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 17367              		.loc 1 1245 17 is_stmt 1 view .LVU5976
 17368              	.LBB929:
 17369              	.LBI926:
 104:sieve_extend.c ****     free(sieve->bitarray);
 17370              		.loc 1 104 13 view .LVU5977
 17371              	.LBB928:
 105:sieve_extend.c ****     free(sieve);
 17372              		.loc 1 105 5 view .LVU5978
 17373 0239 E8000000 		call	free@PLT	#
 17373      00
 17374              	.LVL1152:
 106:sieve_extend.c **** }
 17375              		.loc 1 106 5 view .LVU5979
 17376 023e 4889EF   		mov	rdi, rbp	#, sieve_instance_check
 17377 0241 E8000000 		call	free@PLT	#
GAS LISTING /tmp/ccdGK7kM.s 			page 465


 17377      00
 17378              	.LVL1153:
 106:sieve_extend.c **** }
 17379              		.loc 1 106 5 is_stmt 0 view .LVU5980
 17380              	.LBE928:
 17381              	.LBE929:
1246:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 17382              		.loc 1 1246 17 is_stmt 1 view .LVU5981
 17383              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17384              		.loc 1 1246 20 is_stmt 0 view .LVU5982
 17385 0246 4585FF   		test	r15d, r15d	# valid
 17386 0249 0F84A102 		je	.L1681	#,
 17386      0000
 17387              		.loc 1 1246 44 is_stmt 1 discriminator 2 view .LVU5983
 17388              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17389              		.loc 1 1246 68 is_stmt 0 discriminator 2 view .LVU5984
 17390 024f 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 17391              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17392              		.loc 1 1246 47 discriminator 2 view .LVU5985
 17393 0253 83F802   		cmp	eax, 2	# prephitmp_382,
 17394 0256 0F8FD400 		jg	.L1757	#,
 17394      0000
 17395              	.LBE933:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17396              		.loc 1 1241 75 is_stmt 1 discriminator 2 view .LVU5986
 17397              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17398              		.loc 1 1241 90 is_stmt 0 discriminator 2 view .LVU5987
 17399 025c 4D01F6   		add	r14, r14	# blocksize_bits
 17400              	.LVL1154:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17401              		.loc 1 1241 49 is_stmt 1 discriminator 2 view .LVU5988
 17402              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17403              		.loc 1 1241 13 is_stmt 0 discriminator 2 view .LVU5989
 17404 025f FFCB     		dec	ebx	# ivtmp_213
 17405 0261 0F84EB00 		je	.L1758	#,
 17405      0000
 17406              	.LVL1155:
 17407              	.L1645:
 17408              	.LBB934:
1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17409              		.loc 1 1242 17 is_stmt 1 view .LVU5990
 17410              	# sieve_extend.c:1242:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17411              		.loc 1 1242 20 is_stmt 0 view .LVU5991
 17412 0267 83F802   		cmp	eax, 2	# prephitmp_382,
 17413 026a 7EAC     		jle	.L1642	#,
1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17414              		.loc 1 1242 47 is_stmt 1 view .LVU5992
 17415              	.LVL1156:
 17416              	.LBB930:
 17417              	.LBI923:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17418              		.loc 3 105 1 view .LVU5993
 17419              	.LBB925:
 17420              		.loc 3 107 3 view .LVU5994
GAS LISTING /tmp/ccdGK7kM.s 			page 466


 17421              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17422              		.loc 3 107 10 is_stmt 0 view .LVU5995
 17423 026c 4C89F2   		mov	rdx, r14	#, blocksize_bits
 17424 026f 4C89EE   		mov	rsi, r13	#, tmp422
 17425 0272 BF010000 		mov	edi, 1	#,
 17425      00
 17426 0277 31C0     		xor	eax, eax	#
 17427 0279 E8000000 		call	__printf_chk@PLT	#
 17427      00
 17428              	.LVL1157:
 17429 027e EB98     		jmp	.L1642	#
 17430              	.LVL1158:
 17431              		.p2align 4,,10
 17432              		.p2align 3
 17433              	.L1631:
 17434              		.loc 3 107 10 view .LVU5996
 17435              	.LBE925:
 17436              	.LBE930:
 17437              	.LBE934:
 17438              	.LBE939:
 17439              	.LBE944:
 17440              	.LBE948:
 17441              	.LBB949:
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17442              		.loc 1 1206 14 is_stmt 1 view .LVU5997
 17443              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17444              		.loc 1 1206 18 is_stmt 0 view .LVU5998
 17445 0280 4C89C9   		mov	rcx, r9	# tmp274, tmp274
 17446 0283 4C89C6   		mov	rsi, r8	# _4, _4
 17447 0286 488D3D00 		lea	rdi, .LC40[rip]	# tmp305,
 17447      000000
 17448 028d F3A6     		repz cmpsb
 17449 028f 410F97C1 		seta	r9b	#, tmp307
 17450 0293 4180D900 		sbb	r9b, 0	# _36
 17451              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17452              		.loc 1 1206 17 view .LVU5999
 17453 0297 4584C9   		test	r9b, r9b	# _36
 17454 029a 7564     		jne	.L1635	#,
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17455              		.loc 1 1206 52 is_stmt 1 discriminator 1 view .LVU6000
 17456              	# sieve_extend.c:1207:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17457              		.loc 1 1207 16 is_stmt 0 discriminator 1 view .LVU6001
 17458 029c FFC3     		inc	ebx	# arg
 17459              	.LVL1159:
 17460              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17461              		.loc 1 1206 72 discriminator 1 view .LVU6002
 17462 029e 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 17462      78000000 
 17462      00
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17463              		.loc 1 1207 13 is_stmt 1 discriminator 1 view .LVU6003
 17464              	.LVL1160:
 17465              	# sieve_extend.c:1207:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
GAS LISTING /tmp/ccdGK7kM.s 			page 467


1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17466              		.loc 1 1207 16 is_stmt 0 discriminator 1 view .LVU6004
 17467 02a7 39DD     		cmp	ebp, ebx	# argc, arg
 17468 02a9 0F8EF70A 		jle	.L1759	#,
 17468      0000
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17469              		.loc 1 1208 13 is_stmt 1 view .LVU6005
 17470              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17471              		.loc 1 1208 28 is_stmt 0 view .LVU6006
 17472 02af 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 17472      08
 17473              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17474              		.loc 1 1208 17 view .LVU6007
 17475 02b4 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 17476 02b7 31C0     		xor	eax, eax	#
 17477 02b9 488D5424 		lea	rdx, 120[rsp]	# tmp311,
 17477      78
 17478 02be 488D3500 		lea	rsi, .LC42[rip]	#,
 17478      000000
 17479 02c5 E8000000 		call	__isoc99_sscanf@PLT	#
 17479      00
 17480              	.LVL1161:
 17481              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17482              		.loc 1 1208 16 view .LVU6008
 17483 02ca 83F801   		cmp	eax, 1	# tmp472,
 17484 02cd 0F85990A 		jne	.L1637	#,
 17484      0000
 17485              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17486              		.loc 1 1208 106 discriminator 1 view .LVU6009
 17487 02d3 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 17487      78
 17488              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17489              		.loc 1 1208 82 discriminator 1 view .LVU6010
 17490 02d8 483B5424 		cmp	rdx, QWORD PTR 112[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 17490      70
 17491 02dd 0F87890A 		ja	.L1637	#,
 17491      0000
1211:sieve_extend.c ****         }
 17492              		.loc 1 1211 13 is_stmt 1 view .LVU6011
 17493              	.LVL1162:
 17494              	.LBB898:
 17495              	.LBI898:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17496              		.loc 3 105 1 view .LVU6012
 17497              	.LBB899:
 17498              		.loc 3 107 3 view .LVU6013
 17499              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17500              		.loc 3 107 10 is_stmt 0 view .LVU6014
 17501 02e3 488D3500 		lea	rsi, .LC44[rip]	#,
 17501      000000
 17502 02ea BF010000 		mov	edi, 1	#,
 17502      00
GAS LISTING /tmp/ccdGK7kM.s 			page 468


 17503 02ef 31C0     		xor	eax, eax	#
 17504 02f1 E8000000 		call	__printf_chk@PLT	#
 17504      00
 17505              	.LVL1163:
 17506 02f6 E9C3FDFF 		jmp	.L1630	#
 17506      FF
 17507              	.LVL1164:
 17508 02fb 0F1F4400 		.p2align 4,,10
 17508      00
 17509              		.p2align 3
 17510              	.L1635:
 17511              		.loc 3 107 10 view .LVU6015
 17512              	.LBE899:
 17513              	.LBE898:
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17514              		.loc 1 1213 14 is_stmt 1 view .LVU6016
 17515              	# sieve_extend.c:1213:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17516              		.loc 1 1213 18 is_stmt 0 view .LVU6017
 17517 0300 31C0     		xor	eax, eax	#
 17518 0302 488D5424 		lea	rdx, 112[rsp]	# tmp313,
 17518      70
 17519 0307 488D3500 		lea	rsi, .LC42[rip]	#,
 17519      000000
 17520 030e 4C89C7   		mov	rdi, r8	#, _4
 17521 0311 E8000000 		call	__isoc99_sscanf@PLT	#
 17521      00
 17522              	.LVL1165:
 17523              	# sieve_extend.c:1213:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17524              		.loc 1 1213 17 view .LVU6018
 17525 0316 83F801   		cmp	eax, 1	# tmp473,
 17526 0319 0F849FFD 		je	.L1630	#,
 17526      FFFF
1214:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 17527              		.loc 1 1214 13 is_stmt 1 view .LVU6019
 17528              	.LVL1166:
 17529              	.LBB900:
 17530              	.LBI900:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17531              		.loc 3 98 1 view .LVU6020
 17532              	.LBB901:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17533              		.loc 3 100 3 view .LVU6021
 17534              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17535              		.loc 3 100 10 is_stmt 0 view .LVU6022
 17536 031f 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 17537 0322 488D1500 		lea	rdx, .LC45[rip]	#,
 17537      000000
 17538 0329 E90F0200 		jmp	.L1750	#
 17538      00
 17539              	.LVL1167:
 17540 032e 6690     		.p2align 4,,10
 17541              		.p2align 3
 17542              	.L1757:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccdGK7kM.s 			page 469


 17543              		.loc 3 100 10 view .LVU6023
 17544              	.LBE901:
 17545              	.LBE900:
 17546              	.LBE949:
 17547              	.LBB950:
 17548              	.LBB945:
 17549              	.LBB940:
 17550              	.LBB935:
 17551              		.loc 1 1246 74 is_stmt 1 view .LVU6024
 17552              	.LBB931:
 17553              	.LBI931:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17554              		.loc 3 105 1 view .LVU6025
 17555              	.LBB932:
 17556              		.loc 3 107 3 view .LVU6026
 17557              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17558              		.loc 3 107 10 is_stmt 0 view .LVU6027
 17559 0330 488D3500 		lea	rsi, .LC48[rip]	#,
 17559      000000
 17560 0337 BF010000 		mov	edi, 1	#,
 17560      00
 17561 033c 31C0     		xor	eax, eax	#
 17562 033e E8000000 		call	__printf_chk@PLT	#
 17562      00
 17563              	.LVL1168:
 17564              	.LBE932:
 17565              	.LBE931:
 17566              	.LBE935:
 17567              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17568              		.loc 1 1241 90 view .LVU6028
 17569 0343 4D01F6   		add	r14, r14	# blocksize_bits
 17570              	.LVL1169:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17571              		.loc 1 1241 90 view .LVU6029
 17572 0346 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 17573              	.LVL1170:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17574              		.loc 1 1241 75 is_stmt 1 view .LVU6030
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17575              		.loc 1 1241 49 view .LVU6031
 17576              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17577              		.loc 1 1241 13 is_stmt 0 view .LVU6032
 17578 034a FFCB     		dec	ebx	# ivtmp_213
 17579 034c 0F8515FF 		jne	.L1645	#,
 17579      FFFF
 17580              	.L1758:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17581              		.loc 1 1241 13 view .LVU6033
 17582              	.LBE940:
1247:sieve_extend.c ****             }
1248:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 17583              		.loc 1 1248 13 is_stmt 1 view .LVU6034
 17584              	# sieve_extend.c:1248:             if (option_verboselevel >= 2) printf("\n");
 17585              		.loc 1 1248 16 is_stmt 0 view .LVU6035
 17586 0352 83F801   		cmp	eax, 1	# prephitmp_382,
GAS LISTING /tmp/ccdGK7kM.s 			page 470


 17587 0355 7E0A     		jle	.L1646	#,
 17588              		.loc 1 1248 43 is_stmt 1 view .LVU6036
 17589              	.LVL1171:
 17590              	.LBB941:
 17591              	.LBI941:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17592              		.loc 3 105 1 view .LVU6037
 17593              	.LBB942:
 17594              		.loc 3 107 3 view .LVU6038
 17595              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17596              		.loc 3 107 10 is_stmt 0 view .LVU6039
 17597 0357 BF0A0000 		mov	edi, 10	#,
 17597      00
 17598 035c E8000000 		call	putchar@PLT	#
 17598      00
 17599              	.LVL1172:
 17600              	.L1646:
 17601              		.loc 3 107 10 view .LVU6040
 17602              	.LBE942:
 17603              	.LBE941:
 17604              	.LBE945:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17605              		.loc 1 1238 77 is_stmt 1 discriminator 2 view .LVU6041
 17606              	# sieve_extend.c:1238:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17607              		.loc 1 1238 93 is_stmt 0 discriminator 2 view .LVU6042
 17608 0361 4F8D24A4 		lea	r12, [r12+r12*4]	# tmp319,
 17609              	.LVL1173:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17610              		.loc 1 1238 93 discriminator 2 view .LVU6043
 17611 0365 4D01E4   		add	r12, r12	# sieveSize_check
 17612              	.LVL1174:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17613              		.loc 1 1238 47 is_stmt 1 discriminator 2 view .LVU6044
 17614              	# sieve_extend.c:1238:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17615              		.loc 1 1238 9 is_stmt 0 discriminator 2 view .LVU6045
 17616 0368 FF0C24   		dec	DWORD PTR [rsp]	# %sfp
 17617 036b 0F8570FE 		jne	.L1647	#,
 17617      FFFF
 17618              	.LBE950:
1249:sieve_extend.c ****         }
1250:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17619              		.loc 1 1250 9 is_stmt 1 view .LVU6046
 17620              	# sieve_extend.c:1250:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17621              		.loc 1 1250 12 is_stmt 0 view .LVU6047
 17622 0371 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 17622      00
 17623 0376 0F8FF807 		jg	.L1760	#,
 17623      0000
1251:sieve_extend.c ****     }
1252:sieve_extend.c ****     
1253:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17624              		.loc 1 1253 5 is_stmt 1 view .LVU6048
 17625              	.LVL1175:
1254:sieve_extend.c ****     if (option_tunelevel) {
 17626              		.loc 1 1254 5 view .LVU6049
GAS LISTING /tmp/ccdGK7kM.s 			page 471


 17627              	# sieve_extend.c:1254:     if (option_tunelevel) {
 17628              		.loc 1 1254 9 is_stmt 0 view .LVU6050
 17629 037c 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_342, option_tunelevel
 17629      6C
 17630              	# sieve_extend.c:1253:     counter_t best_blocksize_bits = default_blocksize;
1253:sieve_extend.c ****     if (option_tunelevel) {
 17631              		.loc 1 1253 15 view .LVU6051
 17632 0381 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 17632      0300
 17633              	.LVL1176:
 17634              	# sieve_extend.c:1254:     if (option_tunelevel) {
 17635              		.loc 1 1254 8 view .LVU6052
 17636 0387 4585C0   		test	r8d, r8d	# option_tunelevel.40_342
 17637 038a 0F856102 		jne	.L1761	#,
 17637      0000
 17638              	.LVL1177:
 17639              	.L1674:
 17640              	.LBB951:
1255:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1256:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1257:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1258:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1259:sieve_extend.c ****     }
1260:sieve_extend.c **** 
1261:sieve_extend.c ****     double max_time = default_sieve_duration;
1262:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1263:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1264:sieve_extend.c ****         counter_t passes = 0;
 17641              		.loc 1 1264 9 is_stmt 1 view .LVU6053
1265:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17642              		.loc 1 1265 9 view .LVU6054
1266:sieve_extend.c ****         double elapsed_time = 0;
 17643              		.loc 1 1266 9 view .LVU6055
1267:sieve_extend.c ****         struct sieve_state *sieve_instance;
 17644              		.loc 1 1267 9 view .LVU6056
1268:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 17645              		.loc 1 1268 9 view .LVU6057
 17646 0390 488DB424 		lea	rsi, 128[rsp]	# tmp382,
 17646      80000000 
 17647 0398 BF010000 		mov	edi, 1	#,
 17647      00
 17648 039d E8000000 		call	clock_gettime@PLT	#
 17648      00
 17649              	.LVL1178:
1269:sieve_extend.c ****         while (elapsed_time <= max_time) {
 17650              		.loc 1 1269 9 view .LVU6058
 17651              		.loc 1 1269 15 view .LVU6059
 17652              	# sieve_extend.c:1264:         counter_t passes = 0;
1264:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17653              		.loc 1 1264 19 is_stmt 0 view .LVU6060
 17654 03a2 4531F6   		xor	r14d, r14d	# passes
 17655 03a5 488D9C24 		lea	rbx, 144[rsp]	# tmp409,
 17655      90000000 
 17656              	.LVL1179:
 17657              	.L1675:
1270:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17658              		.loc 1 1270 13 is_stmt 1 view .LVU6061
GAS LISTING /tmp/ccdGK7kM.s 			page 472


 17659              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 17660              		.loc 1 1270 30 is_stmt 0 view .LVU6062
 17661 03ad 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 17661      70
 17662 03b2 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 17663 03b5 E8000000 		call	sieve	#
 17663      00
 17664              	.LVL1180:
 17665              	.LBB952:
 17666              	.LBB953:
 17667              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 17668              		.loc 1 105 5 view .LVU6063
 17669 03ba 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 17670              	.LBE953:
 17671              	.LBE952:
 17672              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 17673              		.loc 1 1270 30 view .LVU6064
 17674 03bd 4989C4   		mov	r12, rax	# sieve_instance, tmp477
 17675              	.LVL1181:
1271:sieve_extend.c ****             delete_sieve(sieve_instance);
 17676              		.loc 1 1271 13 is_stmt 1 view .LVU6065
 17677              	.LBB957:
 17678              	.LBI952:
 104:sieve_extend.c ****     free(sieve->bitarray);
 17679              		.loc 1 104 13 view .LVU6066
 17680              	.LBB954:
 105:sieve_extend.c ****     free(sieve);
 17681              		.loc 1 105 5 view .LVU6067
 17682 03c0 E8000000 		call	free@PLT	#
 17682      00
 17683              	.LVL1182:
 106:sieve_extend.c **** }
 17684              		.loc 1 106 5 view .LVU6068
 17685 03c5 4C89E7   		mov	rdi, r12	#, sieve_instance
 17686 03c8 E8000000 		call	free@PLT	#
 17686      00
 17687              	.LVL1183:
 106:sieve_extend.c **** }
 17688              		.loc 1 106 5 is_stmt 0 view .LVU6069
 17689              	.LBE954:
 17690              	.LBE957:
1272:sieve_extend.c ****             passes++;
 17691              		.loc 1 1272 13 is_stmt 1 view .LVU6070
 17692              	# sieve_extend.c:1273:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1273:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17693              		.loc 1 1273 13 is_stmt 0 view .LVU6071
 17694 03cd 4889DE   		mov	rsi, rbx	#, tmp409
 17695 03d0 BF010000 		mov	edi, 1	#,
 17695      00
 17696 03d5 E8000000 		call	clock_gettime@PLT	#
 17696      00
 17697              	.LVL1184:
 17698              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
1274:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17699              		.loc 1 1274 62 view .LVU6072
 17700 03da C5E857D2 		vxorps	xmm2, xmm2, xmm2	# tmp480
GAS LISTING /tmp/ccdGK7kM.s 			page 473


 17701 03de C4E1EB2A 		vcvtsi2sd	xmm1, xmm2, QWORD PTR 152[rsp]	# tmp481, tmp480, end_time.tv_nsec
 17701      8C249800 
 17701      0000
 17702              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17703              		.loc 1 1274 68 view .LVU6073
 17704 03e8 C4E1EB2A 		vcvtsi2sd	xmm5, xmm2, QWORD PTR 128[rsp]	# tmp482, tmp480, start_time.tv_sec
 17704      AC248000 
 17704      0000
 17705              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17706              		.loc 1 1274 108 view .LVU6074
 17707 03f2 C4E1EB2A 		vcvtsi2sd	xmm3, xmm2, QWORD PTR 136[rsp]	# tmp483, tmp480, start_time.tv_nsec
 17707      9C248800 
 17707      0000
 17708              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17709              		.loc 1 1274 44 view .LVU6075
 17710 03fc C461EB2A 		vcvtsi2sd	xmm9, xmm2, QWORD PTR 144[rsp]	# tmp484, tmp480, end_time.tv_sec
 17710      8C249000 
 17710      0000
 17711              	# sieve_extend.c:1269:         while (elapsed_time <= max_time) {
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17712              		.loc 1 1269 15 view .LVU6076
 17713 0406 C57B1015 		vmovsd	xmm10, QWORD PTR .LC58[rip]	# tmp573,
 17713      00000000 
 17714 040e C4E2F1BB 		vfmsub231sd	xmm5, xmm1, QWORD PTR .LC9[rip]	# _285, tmp385,
 17714      2D000000 
 17714      00
 17715              	# sieve_extend.c:1272:             passes++;
1272:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17716              		.loc 1 1272 19 view .LVU6077
 17717 0417 49FFC6   		inc	r14	# passes
 17718              	.LVL1185:
1273:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17719              		.loc 1 1273 13 is_stmt 1 view .LVU6078
 17720              		.loc 1 1274 13 view .LVU6079
 17721 041a C462E1BD 		vfnmadd231sd	xmm9, xmm3, QWORD PTR .LC9[rip]	# _286, tmp388,
 17721      0D000000 
 17721      00
 17722              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17723              		.loc 1 1274 26 is_stmt 0 view .LVU6080
 17724 0423 C4C15358 		vaddsd	xmm0, xmm5, xmm9	# elapsed_time, _285, _286
 17724      C1
 17725              	.LVL1186:
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17726              		.loc 1 1269 15 is_stmt 1 view .LVU6081
 17727 0428 C5792FD0 		vcomisd	xmm10, xmm0	# tmp573, elapsed_time
 17728 042c 0F828600 		jb	.L1747	#,
 17728      0000
 17729              	.LVL1187:
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 17730              		.loc 1 1270 13 view .LVU6082
 17731              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 17732              		.loc 1 1270 30 is_stmt 0 view .LVU6083
 17733 0432 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 17733      70
 17734 0437 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 17735 043a E8000000 		call	sieve	#
GAS LISTING /tmp/ccdGK7kM.s 			page 474


 17735      00
 17736              	.LVL1188:
 17737              	.LBB958:
 17738              	.LBB955:
 17739              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 17740              		.loc 1 105 5 view .LVU6084
 17741 043f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 17742              	.LBE955:
 17743              	.LBE958:
 17744              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 17745              		.loc 1 1270 30 view .LVU6085
 17746 0442 4889C5   		mov	rbp, rax	# sieve_instance, tmp479
1271:sieve_extend.c ****             passes++;
 17747              		.loc 1 1271 13 is_stmt 1 view .LVU6086
 17748              	.LVL1189:
 17749              	.LBB959:
 104:sieve_extend.c ****     free(sieve->bitarray);
 17750              		.loc 1 104 13 view .LVU6087
 17751              	.LBB956:
 105:sieve_extend.c ****     free(sieve);
 17752              		.loc 1 105 5 view .LVU6088
 17753 0445 E8000000 		call	free@PLT	#
 17753      00
 17754              	.LVL1190:
 106:sieve_extend.c **** }
 17755              		.loc 1 106 5 view .LVU6089
 17756 044a 4889EF   		mov	rdi, rbp	#, sieve_instance
 17757 044d E8000000 		call	free@PLT	#
 17757      00
 17758              	.LVL1191:
 106:sieve_extend.c **** }
 17759              		.loc 1 106 5 is_stmt 0 view .LVU6090
 17760              	.LBE956:
 17761              	.LBE959:
1272:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17762              		.loc 1 1272 13 is_stmt 1 view .LVU6091
 17763              	# sieve_extend.c:1273:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1273:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17764              		.loc 1 1273 13 is_stmt 0 view .LVU6092
 17765 0452 4889DE   		mov	rsi, rbx	#, tmp409
 17766 0455 BF010000 		mov	edi, 1	#,
 17766      00
 17767 045a E8000000 		call	clock_gettime@PLT	#
 17767      00
 17768              	.LVL1192:
 17769              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17770              		.loc 1 1274 62 view .LVU6093
 17771 045f C4412057 		vxorps	xmm11, xmm11, xmm11	# tmp480
 17771      DB
 17772 0464 C4E1A32A 		vcvtsi2sd	xmm1, xmm11, QWORD PTR 152[rsp]	# tmp489, tmp480, end_time.tv_nsec
 17772      8C249800 
 17772      0000
 17773              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17774              		.loc 1 1274 68 view .LVU6094
 17775 046e C461A32A 		vcvtsi2sd	xmm13, xmm11, QWORD PTR 128[rsp]	# tmp490, tmp480, start_time.tv_sec
GAS LISTING /tmp/ccdGK7kM.s 			page 475


 17775      AC248000 
 17775      0000
 17776              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17777              		.loc 1 1274 108 view .LVU6095
 17778 0478 C4E1A32A 		vcvtsi2sd	xmm3, xmm11, QWORD PTR 136[rsp]	# tmp491, tmp480, start_time.tv_nsec
 17778      9C248800 
 17778      0000
 17779              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17780              		.loc 1 1274 44 view .LVU6096
 17781 0482 C461A32A 		vcvtsi2sd	xmm15, xmm11, QWORD PTR 144[rsp]	# tmp492, tmp480, end_time.tv_sec
 17781      BC249000 
 17781      0000
 17782              	# sieve_extend.c:1269:         while (elapsed_time <= max_time) {
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17783              		.loc 1 1269 15 view .LVU6097
 17784 048c C5FB1035 		vmovsd	xmm6, QWORD PTR .LC58[rip]	# tmp580,
 17784      00000000 
 17785 0494 C462F1BB 		vfmsub231sd	xmm13, xmm1, QWORD PTR .LC9[rip]	# _285, tmp462,
 17785      2D000000 
 17785      00
 17786              	# sieve_extend.c:1272:             passes++;
1272:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17787              		.loc 1 1272 19 view .LVU6098
 17788 049d 49FFC6   		inc	r14	# passes
 17789              	.LVL1193:
1273:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17790              		.loc 1 1273 13 is_stmt 1 view .LVU6099
 17791              		.loc 1 1274 13 view .LVU6100
 17792 04a0 C462E1BD 		vfnmadd231sd	xmm15, xmm3, QWORD PTR .LC9[rip]	# _286, tmp465,
 17792      3D000000 
 17792      00
 17793              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17794              		.loc 1 1274 26 is_stmt 0 view .LVU6101
 17795 04a9 C4C11358 		vaddsd	xmm0, xmm13, xmm15	# elapsed_time, _285, _286
 17795      C7
 17796              	.LVL1194:
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17797              		.loc 1 1269 15 is_stmt 1 view .LVU6102
 17798 04ae C5F92FF0 		vcomisd	xmm6, xmm0	# tmp580, elapsed_time
 17799 04b2 0F83F5FE 		jnb	.L1675	#,
 17799      FFFF
 17800              	.L1747:
1275:sieve_extend.c ****         }
1276:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 17801              		.loc 1 1276 9 view .LVU6103
 17802              	.LVL1195:
 17803              	.LBB960:
 17804              	.LBI960:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17805              		.loc 3 105 1 view .LVU6104
 17806              	.LBB961:
 17807              		.loc 3 107 3 view .LVU6105
 17808              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17809              		.loc 3 107 10 is_stmt 0 view .LVU6106
 17810 04b8 4C89F2   		mov	rdx, r14	#, passes
 17811 04bb 488D3500 		lea	rsi, .LC59[rip]	#,
 17811      000000
GAS LISTING /tmp/ccdGK7kM.s 			page 476


 17812 04c2 BF010000 		mov	edi, 1	#,
 17812      00
 17813 04c7 B8010000 		mov	eax, 1	#,
 17813      00
 17814 04cc C5FB1104 		vmovsd	QWORD PTR [rsp], xmm0	# %sfp, elapsed_time
 17814      24
 17815 04d1 E8000000 		call	__printf_chk@PLT	#
 17815      00
 17816              	.LVL1196:
 17817              		.loc 3 107 10 view .LVU6107
 17818              	.LBE961:
 17819              	.LBE960:
1277:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 17820              		.loc 1 1277 9 is_stmt 1 view .LVU6108
 17821              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 17822              		.loc 1 1277 12 is_stmt 0 view .LVU6109
 17823 04d6 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 17823      00
 17824 04db 0F8FC400 		jg	.L1762	#,
 17824      0000
 17825              	.LVL1197:
 17826              	.L1673:
 17827              		.loc 1 1277 12 view .LVU6110
 17828              	.LBE951:
1278:sieve_extend.c ****     }
1279:sieve_extend.c ****     
1280:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 17829              		.loc 1 1280 5 is_stmt 1 view .LVU6111
 17830              	# sieve_extend.c:1280:     if (option_showMaxFactor > 0) {
 17831              		.loc 1 1280 8 is_stmt 0 view .LVU6112
 17832 04e1 48837C24 		cmp	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 17832      7800
 17833 04e7 7570     		jne	.L1763	#,
 17834 04e9 0F1F8000 		.p2align 4,,10
 17834      000000
 17835              		.p2align 3
 17836              	.L1681:
 17837              	.LBB970:
 17838              	.LBB946:
 17839              	.LBB943:
 17840              	.LBB936:
1246:sieve_extend.c ****             }
 17841              		.loc 1 1246 29 is_stmt 1 discriminator 1 view .LVU6113
 17842              	.LBE936:
 17843              	.LBE943:
 17844              	.LBE946:
 17845              	.LBE970:
 17846              	# sieve_extend.c:1287: }
1281:sieve_extend.c ****         printf("Show result set:\n");
1282:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1283:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1284:sieve_extend.c ****         delete_sieve(sieve_instance);
1285:sieve_extend.c ****         printf("\n");
1286:sieve_extend.c ****     }
1287:sieve_extend.c **** }
 17847              		.loc 1 1287 1 is_stmt 0 discriminator 1 view .LVU6114
 17848 04f0 488B8424 		mov	rax, QWORD PTR 168[rsp]	# tmp526, D.35606
GAS LISTING /tmp/ccdGK7kM.s 			page 477


 17848      A8000000 
 17849 04f8 64483304 		xor	rax, QWORD PTR fs:40	# tmp526, MEM[(<address-space-1> long unsigned int *)40B]
 17849      25280000 
 17849      00
 17850 0501 0F859A08 		jne	.L1764	#,
 17850      0000
 17851              	# sieve_extend.c:1287: }
 17852              		.loc 1 1287 1 view .LVU6115
 17853 0507 4881C4B8 		add	rsp, 184	#,
 17853      000000
 17854              		.cfi_remember_state
 17855              		.cfi_def_cfa_offset 56
 17856 050e 5B       		pop	rbx	#
 17857              		.cfi_def_cfa_offset 48
 17858 050f 5D       		pop	rbp	#
 17859              		.cfi_def_cfa_offset 40
 17860 0510 415C     		pop	r12	#
 17861              		.cfi_def_cfa_offset 32
 17862 0512 415D     		pop	r13	#
 17863              		.cfi_def_cfa_offset 24
 17864 0514 415E     		pop	r14	#
 17865              		.cfi_def_cfa_offset 16
 17866 0516 31C0     		xor	eax, eax	#
 17867 0518 415F     		pop	r15	#
 17868              		.cfi_def_cfa_offset 8
 17869 051a C3       		ret	
 17870              	.L1639:
 17871              		.cfi_restore_state
1234:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17872              		.loc 1 1234 39 is_stmt 1 view .LVU6116
 17873              	.LVL1198:
 17874              	.LBB971:
 17875              	.LBI971:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17876              		.loc 3 105 1 view .LVU6117
 17877              	.LBB972:
 17878              		.loc 3 107 3 view .LVU6118
 17879              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17880              		.loc 3 107 10 is_stmt 0 view .LVU6119
 17881 051b 488D3500 		lea	rsi, .LC28[rip]	#,
 17881      000000
 17882 0522 BF010000 		mov	edi, 1	#,
 17882      00
 17883 0527 31C0     		xor	eax, eax	#
 17884 0529 E8000000 		call	__printf_chk@PLT	#
 17884      00
 17885              	.LVL1199:
 17886 052e E989FCFF 		jmp	.L1624	#
 17886      FF
 17887              	.LVL1200:
 17888              	.L1628:
 17889              		.loc 3 107 10 view .LVU6120
 17890              	.LBE972:
 17891              	.LBE971:
 17892              	.LBB973:
1194:sieve_extend.c ****             }
 17893              		.loc 1 1194 17 is_stmt 1 view .LVU6121
GAS LISTING /tmp/ccdGK7kM.s 			page 478


 17894              	.LBB902:
 17895              	.LBI902:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17896              		.loc 3 98 1 view .LVU6122
 17897              	.LBB903:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17898              		.loc 3 100 3 view .LVU6123
 17899              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17900              		.loc 3 100 10 is_stmt 0 view .LVU6124
 17901 0533 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 17902 0536 488D1500 		lea	rdx, .LC33[rip]	#,
 17902      000000
 17903              	.LVL1201:
 17904              	.L1750:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17905              		.loc 3 100 10 view .LVU6125
 17906              	.LBE903:
 17907              	.LBE902:
 17908              	.LBB904:
 17909              	.LBB905:
 17910 053d 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 17910      000000
 17911 0544 BE010000 		mov	esi, 1	#,
 17911      00
 17912 0549 31C0     		xor	eax, eax	#
 17913 054b E8000000 		call	__fprintf_chk@PLT	#
 17913      00
 17914              	.LVL1202:
 17915              	.L1751:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17916              		.loc 3 100 10 view .LVU6126
 17917              	.LBE905:
 17918              	.LBE904:
1202:sieve_extend.c ****             }
 17919              		.loc 1 1202 80 is_stmt 1 view .LVU6127
 17920 0550 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 17921 0554 E8000000 		call	usage	#
 17921      00
 17922              	.LVL1203:
 17923              	.L1763:
1202:sieve_extend.c ****             }
 17924              		.loc 1 1202 80 is_stmt 0 view .LVU6128
 17925              	.LBE973:
 17926              	.LBB974:
1281:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 17927              		.loc 1 1281 9 is_stmt 1 view .LVU6129
 17928              	.LBB975:
 17929              	.LBI975:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17930              		.loc 3 105 1 view .LVU6130
 17931              	.LBB976:
 17932              		.loc 3 107 3 view .LVU6131
 17933              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17934              		.loc 3 107 10 is_stmt 0 view .LVU6132
 17935 0559 488D3D00 		lea	rdi, .LC61[rip]	#,
 17935      000000
GAS LISTING /tmp/ccdGK7kM.s 			page 479


 17936 0560 E8000000 		call	puts@PLT	#
 17936      00
 17937              	.LVL1204:
 17938              		.loc 3 107 10 view .LVU6133
 17939              	.LBE976:
 17940              	.LBE975:
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17941              		.loc 1 1282 9 is_stmt 1 view .LVU6134
 17942              	# sieve_extend.c:1282:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17943              		.loc 1 1282 46 is_stmt 0 view .LVU6135
 17944 0565 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	# option_maxFactor.50_91, option_maxFactor
 17944      70
 17945 056a 4889FE   		mov	rsi, rdi	#, option_maxFactor.50_91
 17946 056d E8000000 		call	sieve	#
 17946      00
 17947              	.LVL1205:
 17948              	# sieve_extend.c:1283:         show_primes(sieve_instance, option_showMaxFactor);
1283:sieve_extend.c ****         delete_sieve(sieve_instance);
 17949              		.loc 1 1283 9 view .LVU6136
 17950 0572 488B5424 		mov	rdx, QWORD PTR 120[rsp]	#, option_showMaxFactor
 17950      78
 17951              	# sieve_extend.c:1282:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17952              		.loc 1 1282 46 view .LVU6137
 17953 0577 4989C7   		mov	r15, rax	# sieve_instance, tmp478
 17954              	.LVL1206:
1283:sieve_extend.c ****         delete_sieve(sieve_instance);
 17955              		.loc 1 1283 9 is_stmt 1 view .LVU6138
 17956 057a 488D7008 		lea	rsi, 8[rax]	# tmp404,
 17957 057e 4889C7   		mov	rdi, rax	#, sieve_instance
 17958 0581 E8000000 		call	show_primes.isra.0	#
 17958      00
 17959              	.LVL1207:
1284:sieve_extend.c ****         printf("\n");
 17960              		.loc 1 1284 9 view .LVU6139
 17961              	.LBB977:
 17962              	.LBI977:
 104:sieve_extend.c ****     free(sieve->bitarray);
 17963              		.loc 1 104 13 view .LVU6140
 17964              	.LBB978:
 105:sieve_extend.c ****     free(sieve);
 17965              		.loc 1 105 5 view .LVU6141
 17966 0586 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_148->bitarray
 17967 0589 E8000000 		call	free@PLT	#
 17967      00
 17968              	.LVL1208:
 106:sieve_extend.c **** }
 17969              		.loc 1 106 5 view .LVU6142
 17970 058e 4C89FF   		mov	rdi, r15	#, sieve_instance
 17971 0591 E8000000 		call	free@PLT	#
 17971      00
 17972              	.LVL1209:
 106:sieve_extend.c **** }
 17973              		.loc 1 106 5 is_stmt 0 view .LVU6143
 17974              	.LBE978:
 17975              	.LBE977:
GAS LISTING /tmp/ccdGK7kM.s 			page 480


1285:sieve_extend.c ****     }
 17976              		.loc 1 1285 9 is_stmt 1 view .LVU6144
 17977              	.LBB979:
 17978              	.LBI979:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17979              		.loc 3 105 1 view .LVU6145
 17980              	.LBB980:
 17981              		.loc 3 107 3 view .LVU6146
 17982              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17983              		.loc 3 107 10 is_stmt 0 view .LVU6147
 17984 0596 BF0A0000 		mov	edi, 10	#,
 17984      00
 17985 059b E8000000 		call	putchar@PLT	#
 17985      00
 17986              	.LVL1210:
 17987 05a0 E94BFFFF 		jmp	.L1681	#
 17987      FF
 17988              	.LVL1211:
 17989              	.L1762:
 17990              		.loc 3 107 10 view .LVU6148
 17991              	.LBE980:
 17992              	.LBE979:
 17993              	.LBE974:
 17994              	.LBB981:
1277:sieve_extend.c ****     }
 17995              		.loc 1 1277 39 is_stmt 1 discriminator 1 view .LVU6149
 17996              	.LBB962:
 17997              	.LBI962:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17998              		.loc 3 105 1 discriminator 1 view .LVU6150
 17999              	.LBB963:
 18000              		.loc 3 107 3 discriminator 1 view .LVU6151
 18001              	.LBE963:
 18002              	.LBE962:
 18003              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 18004              		.loc 1 1277 39 is_stmt 0 discriminator 1 view .LVU6152
 18005 05a5 4D85F6   		test	r14, r14	# passes
 18006 05a8 C5FB103C 		vmovsd	xmm7, QWORD PTR [rsp]	# elapsed_time, %sfp
 18006      24
 18007 05ad C5F857C0 		vxorps	xmm0, xmm0, xmm0	# tmp480
 18008 05b1 0F881907 		js	.L1677	#,
 18008      0000
 18009 05b7 C4C1FB2A 		vcvtsi2sd	xmm2, xmm0, r14	# tmp485, tmp480, passes
 18009      D6
 18010              	.L1678:
 18011              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 18012              		.loc 1 1277 95 discriminator 1 view .LVU6153
 18013 05bc 4B8D14B6 		lea	rdx, [r14+r14*4]	# tmp397,
 18014              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 18015              		.loc 1 1277 39 discriminator 1 view .LVU6154
 18016 05c0 C5EB5ECF 		vdivsd	xmm1, xmm2, xmm7	# tmp396, tmp392, elapsed_time
 18017 05c4 4885D2   		test	rdx, rdx	# tmp397
 18018 05c7 0F88E906 		js	.L1679	#,
 18018      0000
GAS LISTING /tmp/ccdGK7kM.s 			page 481


 18019 05cd C461FB2A 		vcvtsi2sd	xmm8, xmm0, rdx	# tmp487, tmp480, tmp397
 18019      C2
 18020              	.L1680:
 18021              	.LBB966:
 18022              	.LBB964:
 18023              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18024              		.loc 3 107 10 discriminator 1 view .LVU6155
 18025 05d2 488D3500 		lea	rsi, .LC60[rip]	#,
 18025      000000
 18026 05d9 BF010000 		mov	edi, 1	#,
 18026      00
 18027 05de B8020000 		mov	eax, 2	#,
 18027      00
 18028              	.LBE964:
 18029              	.LBE966:
 18030              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 18031              		.loc 1 1277 39 discriminator 1 view .LVU6156
 18032 05e3 C5BB5EC7 		vdivsd	xmm0, xmm8, xmm7	# tmp402, tmp398, elapsed_time
 18033              	.LBB967:
 18034              	.LBB965:
 18035              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18036              		.loc 3 107 10 discriminator 1 view .LVU6157
 18037 05e7 E8000000 		call	__printf_chk@PLT	#
 18037      00
 18038              	.LVL1212:
 18039 05ec E9F0FEFF 		jmp	.L1673	#
 18039      FF
 18040              	.LVL1213:
 18041              	.L1761:
 18042              		.loc 3 107 10 discriminator 1 view .LVU6158
 18043              	.LBE965:
 18044              	.LBE967:
 18045              	.LBE981:
 18046              	.LBB982:
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18047              		.loc 1 1255 9 is_stmt 1 view .LVU6159
 18048              	# sieve_extend.c:1255:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18049              		.loc 1 1255 44 is_stmt 0 view .LVU6160
 18050 05f1 448B5424 		mov	r10d, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 18050      68
 18051 05f6 4C8B5C24 		mov	r11, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 18051      70
 18052 05fb 41FFC8   		dec	r8d	#
 18053 05fe 44895424 		mov	DWORD PTR 80[rsp], r10d	# %sfp, option_verboselevel.41_63
 18053      50
 18054 0603 4C895C24 		mov	QWORD PTR 72[rsp], r11	# %sfp, option_maxFactor.42_64
 18054      48
 18055              	.LVL1214:
 18056              	.LBB983:
 18057              	.LBI983:
1049:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18058              		.loc 1 1049 27 is_stmt 1 view .LVU6161
 18059              	.LBB984:
1050:sieve_extend.c **** 
 18060              		.loc 1 1050 5 view .LVU6162
GAS LISTING /tmp/ccdGK7kM.s 			page 482


1052:sieve_extend.c ****     best_blocksize_bits = 0;
 18061              		.loc 1 1052 5 view .LVU6163
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18062              		.loc 1 1053 5 view .LVU6164
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18063              		.loc 1 1054 5 view .LVU6165
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18064              		.loc 1 1055 5 view .LVU6166
1056:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18065              		.loc 1 1056 5 view .LVU6167
1057:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18066              		.loc 1 1057 5 view .LVU6168
1058:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18067              		.loc 1 1058 5 view .LVU6169
1059:sieve_extend.c ****     double sample_duration = default_sample_duration;
 18068              		.loc 1 1059 5 view .LVU6170
1060:sieve_extend.c **** 
 18069              		.loc 1 1060 5 view .LVU6171
1063:sieve_extend.c ****         case 1:
 18070              		.loc 1 1063 5 view .LVU6172
 18071 0608 4183F802 		cmp	r8d, 2	# _209,
 18072 060c 0F862D06 		jbe	.L1682	#,
 18072      0000
 18073 0612 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC27[rip]	# sample_duration,
 18073      00000000 
 18074 061a 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 18074      30050000 
 18074      00
 18075 0623 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 18075      38800000 
 18075      00
 18076 062c 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 18076      58040000 
 18076      00
 18077 0635 C5FB1174 		vmovsd	QWORD PTR 64[rsp], xmm6	# %sfp, sample_duration
 18077      2440
 18078              	.LVL1215:
 18079              	.L1652:
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18080              		.loc 1 1088 5 view .LVU6173
 18081              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18082              		.loc 1 1088 33 is_stmt 0 view .LVU6174
 18083 063b B8400000 		mov	eax, 64	# tmp330,
 18083      00
 18084 0640 31D2     		xor	edx, edx	# tmp329
 18085 0642 48F77424 		div	QWORD PTR 88[rsp]	# %sfp
 18085      58
 18086              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18087              		.loc 1 1088 194 view .LVU6175
 18088 0647 31D2     		xor	edx, edx	# tmp337
 18089              	# sieve_extend.c:1090:     counter_t tuning_results=0;
1090:sieve_extend.c ****     counter_t tuning_result_index=0;
 18090              		.loc 1 1090 15 view .LVU6176
 18091 0649 4531F6   		xor	r14d, r14d	# tuning_results
 18092              	.LBB985:
GAS LISTING /tmp/ccdGK7kM.s 			page 483


 18093              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18094              		.loc 1 1093 20 view .LVU6177
 18095 064c 4531ED   		xor	r13d, r13d	# smallstep_faster
 18096              	.LBE985:
 18097              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18098              		.loc 1 1088 83 view .LVU6178
 18099 064f 488D7801 		lea	rdi, 1[rax]	# _223,
 18100              	.LVL1216:
1089:sieve_extend.c ****     counter_t tuning_results=0;
 18101              		.loc 1 1089 5 is_stmt 1 view .LVU6179
 18102              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18103              		.loc 1 1088 194 is_stmt 0 view .LVU6180
 18104 0653 B8001000 		mov	eax, 4096	# tmp338,
 18104      00
 18105 0658 48F77424 		div	QWORD PTR 56[rsp]	# %sfp
 18105      38
 18106              	# sieve_extend.c:1089:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1089:sieve_extend.c ****     counter_t tuning_results=0;
 18107              		.loc 1 1089 41 view .LVU6181
 18108 065d 480FAFC7 		imul	rax, rdi	# tmp343, _223
 18109 0661 480FAFF8 		imul	rdi, rax	# tmp344, tmp343
 18110              	.LVL1217:
1089:sieve_extend.c ****     counter_t tuning_results=0;
 18111              		.loc 1 1089 41 view .LVU6182
 18112 0665 48C1E708 		sal	rdi, 8	# tmp345,
 18113 0669 E8000000 		call	malloc@PLT	#
 18113      00
 18114              	.LVL1218:
1090:sieve_extend.c ****     counter_t tuning_result_index=0;
 18115              		.loc 1 1090 5 is_stmt 1 view .LVU6183
1091:sieve_extend.c ****     
 18116              		.loc 1 1091 5 view .LVU6184
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18117              		.loc 1 1093 5 view .LVU6185
 18118              	.LBB998:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18119              		.loc 1 1093 10 view .LVU6186
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18120              		.loc 1 1093 42 view .LVU6187
 18121 066e 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, tuning_result
 18121      10
 18122              	.LBE998:
 18123              	# sieve_extend.c:1055:     counter_t best_mediumstep_faster = 0;
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18124              		.loc 1 1055 15 is_stmt 0 view .LVU6188
 18125 0673 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 18125      28000000 
 18125      00
 18126              	# sieve_extend.c:1054:     counter_t best_smallstep_faster = 0;
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18127              		.loc 1 1054 15 view .LVU6189
 18128 067c 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 18128      20000000 
 18128      00
GAS LISTING /tmp/ccdGK7kM.s 			page 484


 18129              	# sieve_extend.c:1053:     best_blocksize_bits = 0;
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18130              		.loc 1 1053 25 view .LVU6190
 18131 0685 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 18131      18000000 
 18131      00
 18132              	# sieve_extend.c:1052:     double best_avg = 0;
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 18133              		.loc 1 1052 12 view .LVU6191
 18134 068e C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 18135 0692 C5FB110C 		vmovsd	QWORD PTR [rsp], xmm1	# %sfp, best_avg
 18135      24
 18136              	.LVL1219:
 18137              	.L1654:
 18138              	.LBB999:
 18139              	.LBB986:
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18140              		.loc 1 1094 62 is_stmt 1 view .LVU6192
 18141              	.LBB987:
 18142              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18143              		.loc 1 1095 28 is_stmt 0 view .LVU6193
 18144 0697 4D89EC   		mov	r12, r13	# mediumstep_faster, smallstep_faster
 18145              	.LVL1220:
 18146 069a 660F1F44 		.p2align 4,,10
 18146      0000
 18147              		.p2align 3
 18148              	.L1664:
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18149              		.loc 1 1095 46 is_stmt 1 view .LVU6194
 18150              	.LBB988:
 18151              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18152              		.loc 1 1096 32 is_stmt 0 view .LVU6195
 18153 06a0 C7442454 		mov	DWORD PTR 84[rsp], 6	# %sfp,
 18153      06000000 
 18154              	.LBE988:
 18155              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18156              		.loc 1 1095 28 view .LVU6196
 18157 06a8 48C74424 		mov	QWORD PTR 8[rsp], 256	# %sfp,
 18157      08000100 
 18157      00
 18158              	.LVL1221:
 18159              		.p2align 4,,10
 18160 06b1 0F1F8000 		.p2align 3
 18160      000000
 18161              	.L1662:
 18162              	.LBB997:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18163              		.loc 1 1096 45 is_stmt 1 view .LVU6197
 18164 06b8 4D6BC658 		imul	r8, r14, 88	# tmp360, tuning_results,
 18165              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18166              		.loc 1 1096 130 is_stmt 0 view .LVU6198
 18167 06bc 488B5C24 		mov	rbx, QWORD PTR 8[rsp]	# ivtmp.730, %sfp
 18167      08
GAS LISTING /tmp/ccdGK7kM.s 			page 485


 18168 06c1 4C8B7C24 		mov	r15, QWORD PTR 16[rsp]	# tuning_result, %sfp
 18168      10
 18169 06c6 48C1E30D 		sal	rbx, 13	# ivtmp.730,
 18170 06ca 4F8D3C07 		lea	r15, [r15+r8]	# ivtmp.729,
 18171              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18172              		.loc 1 1096 32 view .LVU6199
 18173 06ce 31ED     		xor	ebp, ebp	# free_bits
 18174 06d0 EB41     		jmp	.L1660	#
 18175              	.LVL1222:
 18176              		.p2align 4,,10
 18177 06d2 660F1F44 		.p2align 3
 18177      0000
 18178              	.L1657:
 18179              	.LBB989:
1112:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 18180              		.loc 1 1112 25 is_stmt 1 view .LVU6200
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 18181              		.loc 1 1113 25 view .LVU6201
1114:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 18182              		.loc 1 1114 25 view .LVU6202
1115:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 18183              		.loc 1 1115 25 view .LVU6203
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18184              		.loc 1 1116 25 view .LVU6204
 18185              	# sieve_extend.c:1116:                         if (option_verboselevel >=2) printf(".(>)blocksize_b
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18186              		.loc 1 1116 28 is_stmt 0 view .LVU6205
 18187 06d8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 18187      01
 18188 06dd 0F8FE500 		jg	.L1765	#,
 18188      0000
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18189              		.loc 1 1116 28 view .LVU6206
 18190 06e3 4C896424 		mov	QWORD PTR 40[rsp], r12	# %sfp, mediumstep_faster
 18190      28
 18191 06e8 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
 18191      20
 18192              	# sieve_extend.c:1113:                         best_blocksize_bits = blocksize_bits;
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 18193              		.loc 1 1113 45 view .LVU6207
 18194 06ed 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.730
 18194      18
 18195              	# sieve_extend.c:1112:                         best_avg = tuning_result[tuning_result_index].avg;
1112:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 18196              		.loc 1 1112 34 view .LVU6208
 18197 06f2 C5FB1114 		vmovsd	QWORD PTR [rsp], xmm2	# %sfp, _242
 18197      24
 18198              	.LVL1223:
 18199              	.L1655:
1127:sieve_extend.c ****                 }
 18200              		.loc 1 1127 21 is_stmt 1 view .LVU6209
1127:sieve_extend.c ****                 }
 18201              		.loc 1 1127 21 is_stmt 0 view .LVU6210
 18202              	.LBE989:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18203              		.loc 1 1096 137 is_stmt 1 view .LVU6211
GAS LISTING /tmp/ccdGK7kM.s 			page 486


 18204              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18205              		.loc 1 1096 147 is_stmt 0 view .LVU6212
 18206 06f7 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# freebits_steps, %sfp
 18206      38
 18207 06fc 4983C758 		add	r15, 88	# ivtmp.729,
 18208 0700 4801F5   		add	rbp, rsi	# free_bits, freebits_steps
 18209              	.LVL1224:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18210              		.loc 1 1096 45 is_stmt 1 view .LVU6213
 18211 0703 4829F3   		sub	rbx, rsi	# ivtmp.730, freebits_steps
 18212              	.LVL1225:
 18213              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18214              		.loc 1 1096 17 is_stmt 0 view .LVU6214
 18215 0706 4881FDFF 		cmp	rbp, 4095	# free_bits,
 18215      0F0000
 18216 070d 0F871D01 		ja	.L1656	#,
 18216      0000
 18217              	.LVL1226:
 18218              	.L1660:
 18219              	.LBB996:
1097:sieve_extend.c **** 
 18220              		.loc 1 1097 21 is_stmt 1 view .LVU6215
1100:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 18221              		.loc 1 1100 21 view .LVU6216
 18222              	# sieve_extend.c:1104:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 18223              		.loc 1 1104 69 is_stmt 0 view .LVU6217
 18224 0713 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# blocksize_kb, %sfp
 18224      08
 18225              	# sieve_extend.c:1101:                     tuning_result[tuning_result_index].maxints = maxints;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 18226              		.loc 1 1101 64 view .LVU6218
 18227 0718 4C8B5424 		mov	r10, QWORD PTR 72[rsp]	# option_maxFactor.42_64, %sfp
 18227      48
 18228              	# sieve_extend.c:1103:                     tuning_result[tuning_result_index].sample_max = sample_m
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18229              		.loc 1 1103 67 view .LVU6219
 18230 071d 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# sample_max, %sfp
 18230      30
 18231              	# sieve_extend.c:1104:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 18232              		.loc 1 1104 69 view .LVU6220
 18233 0722 49897F10 		mov	QWORD PTR 16[r15], rdi	# MEM[base: _300, offset: 16B], blocksize_kb
 18234              	# sieve_extend.c:1102:                     tuning_result[tuning_result_index].sample_duration = sam
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 18235              		.loc 1 1102 72 view .LVU6221
 18236 0726 C5FB1064 		vmovsd	xmm4, QWORD PTR 64[rsp]	# sample_duration, %sfp
 18236      2440
 18237              	# sieve_extend.c:1101:                     tuning_result[tuning_result_index].maxints = maxints;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 18238              		.loc 1 1101 64 view .LVU6222
 18239 072c 4D8917   		mov	QWORD PTR [r15], r10	# MEM[base: _300, offset: 0B], option_maxFactor.42_64
 18240              	# sieve_extend.c:1103:                     tuning_result[tuning_result_index].sample_max = sample_m
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18241              		.loc 1 1103 67 view .LVU6223
GAS LISTING /tmp/ccdGK7kM.s 			page 487


 18242 072f 4D895F30 		mov	QWORD PTR 48[r15], r11	# MEM[base: _300, offset: 48B], sample_max
 18243              	# sieve_extend.c:1105:                     tuning_result[tuning_result_index].free_bits = free_bits
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18244              		.loc 1 1105 66 view .LVU6224
 18245 0733 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _300, offset: 24B], free_bits
 18246              	# sieve_extend.c:1106:                     tuning_result[tuning_result_index].blocksize_bits = bloc
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18247              		.loc 1 1106 71 view .LVU6225
 18248 0737 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _300, offset: 8B], ivtmp.730
 18249              	# sieve_extend.c:1107:                     tuning_result[tuning_result_index].smallstep_faster = sm
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18250              		.loc 1 1107 73 view .LVU6226
 18251 073b 4D896F20 		mov	QWORD PTR 32[r15], r13	# MEM[base: _300, offset: 32B], smallstep_faster
 18252              	# sieve_extend.c:1108:                     tuning_result[tuning_result_index].mediumstep_faster = m
1108:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 18253              		.loc 1 1108 74 view .LVU6227
 18254 073f 4D896728 		mov	QWORD PTR 40[r15], r12	# MEM[base: _300, offset: 40B], mediumstep_faster
 18255              	# sieve_extend.c:1109:                     tune_benchmark(tuning_result, tuning_result_index);
1109:sieve_extend.c **** 
 18256              		.loc 1 1109 21 view .LVU6228
 18257 0743 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	#, %sfp
 18257      10
 18258 0748 4C89F6   		mov	rsi, r14	# tuning_results, tuning_results
 18259              	# sieve_extend.c:1102:                     tuning_result[tuning_result_index].sample_duration = sam
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 18260              		.loc 1 1102 72 view .LVU6229
 18261 074b C4C17B11 		vmovsd	QWORD PTR 56[r15], xmm4	# MEM[base: _300, offset: 56B], sample_duration
 18261      6738
 18262              	# sieve_extend.c:1109:                     tune_benchmark(tuning_result, tuning_result_index);
1109:sieve_extend.c **** 
 18263              		.loc 1 1109 21 view .LVU6230
 18264 0751 E8000000 		call	tune_benchmark	#
 18264      00
 18265              	.LVL1227:
 18266              	# sieve_extend.c:1111:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 18267              		.loc 1 1111 60 view .LVU6231
 18268 0756 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	# _242, MEM[base: _300, offset: 80B]
 18268      5750
 18269              	# sieve_extend.c:1100:                     tuning_results++;
1100:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 18270              		.loc 1 1100 35 view .LVU6232
 18271 075c 49FFC6   		inc	r14	# tuning_results
 18272              	.LVL1228:
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 18273              		.loc 1 1101 21 is_stmt 1 view .LVU6233
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 18274              		.loc 1 1102 21 view .LVU6234
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18275              		.loc 1 1103 21 view .LVU6235
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 18276              		.loc 1 1104 21 view .LVU6236
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18277              		.loc 1 1105 21 view .LVU6237
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18278              		.loc 1 1106 21 view .LVU6238
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
GAS LISTING /tmp/ccdGK7kM.s 			page 488


 18279              		.loc 1 1107 21 view .LVU6239
1108:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 18280              		.loc 1 1108 21 view .LVU6240
1109:sieve_extend.c **** 
 18281              		.loc 1 1109 21 view .LVU6241
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 18282              		.loc 1 1111 21 view .LVU6242
 18283              	# sieve_extend.c:1111:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 18284              		.loc 1 1111 24 is_stmt 0 view .LVU6243
 18285 075f C5F92F14 		vcomisd	xmm2, QWORD PTR [rsp]	# _242, %sfp
 18285      24
 18286 0764 0F876EFF 		ja	.L1657	#,
 18286      FFFF
 18287              	.L1658:
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18288              		.loc 1 1122 21 is_stmt 1 view .LVU6244
 18289              	# sieve_extend.c:1122:                     if (option_verboselevel >= 3) printf("...blocksize_bits 
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18290              		.loc 1 1122 24 is_stmt 0 view .LVU6245
 18291 076a 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 18291      02
 18292 076f 7E86     		jle	.L1655	#,
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18293              		.loc 1 1122 51 is_stmt 1 view .LVU6246
 18294              	.LVL1229:
 18295              	.LBB990:
 18296              	.LBI990:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18297              		.loc 3 105 1 view .LVU6247
 18298              	.LBB991:
 18299              		.loc 3 107 3 view .LVU6248
 18300              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18301              		.loc 3 107 10 is_stmt 0 view .LVU6249
 18302 0771 4883EC08 		sub	rsp, 8	#,
 18303              		.cfi_def_cfa_offset 248
 18304              	.LVL1230:
 18305              		.loc 3 107 10 view .LVU6250
 18306 0775 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 18306      4748
 18307 077b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 18308 077f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 18309 0783 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
 18310              		.cfi_def_cfa_offset 256
 18311 0787 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, MEM[base: _300, offset: 80B]
 18311      5750
 18312 078d C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 18312      4F38
 18313 0793 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 18314              		.cfi_def_cfa_offset 264
 18315 0797 488D3500 		lea	rsi, .LC52[rip]	#,
 18315      000000
 18316 079e BF010000 		mov	edi, 1	#,
 18316      00
 18317 07a3 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 18318              		.cfi_def_cfa_offset 272
 18319 07a7 B8030000 		mov	eax, 3	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 489


 18319      00
 18320 07ac 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 18321 07b0 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 18322 07b4 E8000000 		call	__printf_chk@PLT	#
 18322      00
 18323              	.LVL1231:
 18324 07b9 4883C420 		add	rsp, 32	#,
 18325              		.cfi_def_cfa_offset 240
 18326              	.LVL1232:
 18327              		.loc 3 107 10 view .LVU6251
 18328 07bd E935FFFF 		jmp	.L1655	#
 18328      FF
 18329              	.LVL1233:
 18330              		.p2align 4,,10
 18331 07c2 660F1F44 		.p2align 3
 18331      0000
 18332              	.L1765:
 18333              		.loc 3 107 10 view .LVU6252
 18334              	.LBE991:
 18335              	.LBE990:
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 18336              		.loc 1 1116 54 is_stmt 1 view .LVU6253
 18337              	.LBB992:
 18338              	.LBI992:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18339              		.loc 3 105 1 view .LVU6254
 18340              	.LBB993:
 18341              		.loc 3 107 3 view .LVU6255
 18342              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18343              		.loc 3 107 10 is_stmt 0 view .LVU6256
 18344 07c8 4883EC08 		sub	rsp, 8	#,
 18345              		.cfi_def_cfa_offset 248
 18346 07cc C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 18346      4748
 18347 07d2 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 18348 07d6 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 18349 07da 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
 18350              		.cfi_def_cfa_offset 256
 18351 07de C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 18351      4F38
 18352 07e4 488D3500 		lea	rsi, .LC51[rip]	#,
 18352      000000
 18353 07eb 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 18354              		.cfi_def_cfa_offset 264
 18355 07ef BF010000 		mov	edi, 1	#,
 18355      00
 18356 07f4 B8030000 		mov	eax, 3	#,
 18356      00
 18357 07f9 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 18358              		.cfi_def_cfa_offset 272
 18359 07fd 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 18360 0801 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 18361 0805 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 18361      2420
 18362 080b E8000000 		call	__printf_chk@PLT	#
 18362      00
 18363              	.LVL1234:
GAS LISTING /tmp/ccdGK7kM.s 			page 490


 18364              		.loc 3 107 10 view .LVU6257
 18365 0810 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, mediumstep_faster
 18365      48
 18366 0815 4883C420 		add	rsp, 32	#,
 18367              		.cfi_def_cfa_offset 240
 18368              	.LVL1235:
 18369              		.loc 3 107 10 view .LVU6258
 18370 0819 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
 18370      20
 18371              	.LBE993:
 18372              	.LBE992:
 18373              	# sieve_extend.c:1113:                         best_blocksize_bits = blocksize_bits;
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 18374              		.loc 1 1113 45 view .LVU6259
 18375 081e 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.730
 18375      18
 18376              	.LBB995:
 18377              	.LBB994:
 18378              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18379              		.loc 3 107 10 view .LVU6260
 18380 0823 E942FFFF 		jmp	.L1658	#
 18380      FF
 18381              	.LVL1236:
 18382 0828 0F1F8400 		.p2align 4,,10
 18382      00000000 
 18383              		.p2align 3
 18384              	.L1656:
 18385              		.loc 3 107 10 view .LVU6261
 18386              	.LBE994:
 18387              	.LBE995:
 18388              	.LBE996:
 18389              	.LBE997:
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18390              		.loc 1 1095 63 is_stmt 1 view .LVU6262
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18391              		.loc 1 1095 46 view .LVU6263
 18392              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18393              		.loc 1 1095 76 is_stmt 0 view .LVU6264
 18394 0830 48D16C24 		shr	QWORD PTR 8[rsp]	# %sfp
 18394      08
 18395              	.LVL1237:
 18396              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 18397              		.loc 1 1095 13 view .LVU6265
 18398 0835 FF4C2454 		dec	DWORD PTR 84[rsp]	# %sfp
 18399 0839 0F8579FE 		jne	.L1662	#,
 18399      FFFF
 18400              	.LBE987:
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18401              		.loc 1 1094 94 is_stmt 1 view .LVU6266
 18402              	# sieve_extend.c:1094:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18403              		.loc 1 1094 112 is_stmt 0 view .LVU6267
 18404 083f 4C036424 		add	r12, QWORD PTR 88[rsp]	# mediumstep_faster, %sfp
 18404      58
 18405              	.LVL1238:
GAS LISTING /tmp/ccdGK7kM.s 			page 491


1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18406              		.loc 1 1094 62 is_stmt 1 view .LVU6268
 18407              	# sieve_extend.c:1094:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18408              		.loc 1 1094 9 is_stmt 0 view .LVU6269
 18409 0844 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 18410 0848 0F8652FE 		jbe	.L1664	#,
 18410      FFFF
 18411              	.LBE986:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18412              		.loc 1 1093 75 is_stmt 1 view .LVU6270
 18413              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18414              		.loc 1 1093 92 is_stmt 0 view .LVU6271
 18415 084e 4C036C24 		add	r13, QWORD PTR 88[rsp]	# smallstep_faster, %sfp
 18415      58
 18416              	.LVL1239:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18417              		.loc 1 1093 42 is_stmt 1 view .LVU6272
 18418              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18419              		.loc 1 1093 5 is_stmt 0 view .LVU6273
 18420 0853 4983FD20 		cmp	r13, 32	# smallstep_faster,
 18421 0857 0F863AFE 		jbe	.L1654	#,
 18421      FFFF
 18422              	.LBE999:
 18423              	# sieve_extend.c:1132:     if (option_verboselevel >= 2) {
1132:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18424              		.loc 1 1132 8 view .LVU6274
 18425 085d 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 18425      01
 18426 0862 4D89F7   		mov	r15, r14	# tuning_results, tuning_results
 18427 0865 4C8B7424 		mov	r14, QWORD PTR 16[rsp]	# tuning_result, %sfp
 18427      10
 18428              	.LVL1240:
1132:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18429              		.loc 1 1132 5 is_stmt 1 view .LVU6275
 18430              	# sieve_extend.c:1132:     if (option_verboselevel >= 2) {
1132:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18431              		.loc 1 1132 8 is_stmt 0 view .LVU6276
 18432 086a 7E31     		jle	.L1665	#,
1133:sieve_extend.c ****         printf("Best options\n");
 18433              		.loc 1 1133 9 is_stmt 1 view .LVU6277
 18434              	.LVL1241:
 18435              	.LBB1000:
 18436              	.LBI1000:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18437              		.loc 3 105 1 view .LVU6278
 18438              	.LBB1001:
 18439              		.loc 3 107 3 view .LVU6279
 18440              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18441              		.loc 3 107 10 is_stmt 0 view .LVU6280
 18442 086c 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	#, %sfp
 18442      28
 18443 0871 4C8B4424 		mov	r8, QWORD PTR 32[rsp]	#, %sfp
 18443      20
 18444 0876 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	#, %sfp
GAS LISTING /tmp/ccdGK7kM.s 			page 492


 18444      18
 18445 087b BF010000 		mov	edi, 1	#,
 18445      00
 18446 0880 4C89FA   		mov	rdx, r15	#, tuning_results
 18447 0883 488D3500 		lea	rsi, .LC53[rip]	#,
 18447      000000
 18448 088a 31C0     		xor	eax, eax	#
 18449 088c E8000000 		call	__printf_chk@PLT	#
 18449      00
 18450              	.LVL1242:
 18451              		.loc 3 107 10 view .LVU6281
 18452              	.LBE1001:
 18453              	.LBE1000:
1134:sieve_extend.c ****     }
 18454              		.loc 1 1134 9 is_stmt 1 view .LVU6282
 18455              	.LBB1002:
 18456              	.LBI1002:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18457              		.loc 3 105 1 view .LVU6283
 18458              	.LBB1003:
 18459              		.loc 3 107 3 view .LVU6284
 18460              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18461              		.loc 3 107 10 is_stmt 0 view .LVU6285
 18462 0891 488D3D00 		lea	rdi, .LC54[rip]	#,
 18462      000000
 18463 0898 E8000000 		call	puts@PLT	#
 18463      00
 18464              	.LVL1243:
 18465              	.L1665:
 18466              		.loc 3 107 10 view .LVU6286
 18467              	.LBE1003:
 18468              	.LBE1002:
 18469              	.LBB1004:
 18470              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18471              		.loc 1 1148 75 view .LVU6287
 18472 089d 4C8B6424 		mov	r12, QWORD PTR 48[rsp]	# sample_max, %sfp
 18472      30
 18473              	.LVL1244:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18474              		.loc 1 1148 75 view .LVU6288
 18475              	.LBE1004:
 18476              	.LBB1009:
 18477              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18478              		.loc 1 1160 24 view .LVU6289
 18479 08a2 31DB     		xor	ebx, ebx	# step
 18480              	.LVL1245:
 18481              	.L1670:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18482              		.loc 1 1160 24 view .LVU6290
 18483              	.LBE1009:
1137:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 18484              		.loc 1 1137 11 is_stmt 1 view .LVU6291
 18485 08a4 4983FF04 		cmp	r15, 4	# tuning_results,
 18486 08a8 0F861A03 		jbe	.L1766	#,
 18486      0000
GAS LISTING /tmp/ccdGK7kM.s 			page 493


1138:sieve_extend.c ****         step++;
 18487              		.loc 1 1138 9 view .LVU6292
 18488 08ae 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 18488      000000
 18489 08b5 BA580000 		mov	edx, 88	#,
 18489      00
 18490 08ba 4C89FE   		mov	rsi, r15	#, tuning_results
 18491 08bd 4C89F7   		mov	rdi, r14	#, tuning_result
 18492 08c0 E8000000 		call	qsort@PLT	#
 18492      00
 18493              	.LVL1246:
1139:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18494              		.loc 1 1139 9 view .LVU6293
 18495              	# sieve_extend.c:1139:         step++;
1139:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18496              		.loc 1 1139 13 is_stmt 0 view .LVU6294
 18497 08c5 48FFC3   		inc	rbx	# step
 18498              	.LVL1247:
1140:sieve_extend.c ****             tuning_result_index = 0;
 18499              		.loc 1 1140 9 is_stmt 1 view .LVU6295
 18500              	# sieve_extend.c:1140:         if (option_verboselevel >= 2) {
1140:sieve_extend.c ****             tuning_result_index = 0;
 18501              		.loc 1 1140 12 is_stmt 0 view .LVU6296
 18502 08c8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 18502      01
 18503 08cd 0F8FE201 		jg	.L1666	#,
 18503      0000
 18504              	.L1668:
1158:sieve_extend.c **** 
 18505              		.loc 1 1158 9 is_stmt 1 view .LVU6297
 18506              	# sieve_extend.c:1158:         tuning_results = tuning_results / 2;
1158:sieve_extend.c **** 
 18507              		.loc 1 1158 24 is_stmt 0 view .LVU6298
 18508 08d3 49D1EF   		shr	r15	# tuning_results
 18509              	.LVL1248:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18510              		.loc 1 1160 9 is_stmt 1 view .LVU6299
 18511              	.LBB1010:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18512              		.loc 1 1160 14 view .LVU6300
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18513              		.loc 1 1160 29 view .LVU6301
 18514 08d6 4D89FA   		mov	r10, r15	# tmp431, tuning_results
 18515 08d9 498D6E30 		lea	rbp, 48[r14]	# ivtmp.711,
 18516              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18517              		.loc 1 1160 24 is_stmt 0 view .LVU6302
 18518 08dd 4531ED   		xor	r13d, r13d	# i
 18519 08e0 4183E207 		and	r10d, 7	# tmp431,
 18520 08e4 0F84D400 		je	.L1667	#,
 18520      0000
 18521 08ea 4983FA01 		cmp	r10, 1	# tmp431,
 18522 08ee 0F84AB00 		je	.L1725	#,
 18522      0000
 18523 08f4 4983FA02 		cmp	r10, 2	# tmp431,
 18524 08f8 0F848B00 		je	.L1726	#,
 18524      0000
GAS LISTING /tmp/ccdGK7kM.s 			page 494


 18525 08fe 4983FA03 		cmp	r10, 3	# tmp431,
 18526 0902 746F     		je	.L1727	#,
 18527 0904 4983FA04 		cmp	r10, 4	# tmp431,
 18528 0908 7453     		je	.L1728	#,
 18529 090a 4983FA05 		cmp	r10, 5	# tmp431,
 18530 090e 7437     		je	.L1729	#,
 18531 0910 4983FA06 		cmp	r10, 6	# tmp431,
 18532 0914 741B     		je	.L1730	#,
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18533              		.loc 1 1161 13 is_stmt 1 view .LVU6303
 18534 0916 31F6     		xor	esi, esi	#
 18535 0918 4C89F7   		mov	rdi, r14	#, tuning_result
 18536 091b E8000000 		call	tune_benchmark	#
 18536      00
 18537              	.LVL1249:
1162:sieve_extend.c ****         }
 18538              		.loc 1 1162 13 view .LVU6304
 18539              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18540              		.loc 1 1160 48 is_stmt 0 view .LVU6305
 18541 0920 41BD0100 		mov	r13d, 1	# i,
 18541      0000
 18542              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18543              		.loc 1 1162 41 view .LVU6306
 18544 0926 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18545              		.loc 1 1160 47 is_stmt 1 view .LVU6307
 18546              	.LVL1250:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18547              		.loc 1 1160 29 view .LVU6308
 18548 092a 498DAE88 		lea	rbp, 136[r14]	# ivtmp.711,
 18548      000000
 18549              	.L1730:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18550              		.loc 1 1161 13 view .LVU6309
 18551 0931 4C89EE   		mov	rsi, r13	#, i
 18552 0934 4C89F7   		mov	rdi, r14	#, tuning_result
 18553 0937 E8000000 		call	tune_benchmark	#
 18553      00
 18554              	.LVL1251:
1162:sieve_extend.c ****         }
 18555              		.loc 1 1162 13 view .LVU6310
 18556              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18557              		.loc 1 1160 48 is_stmt 0 view .LVU6311
 18558 093c 49FFC5   		inc	r13	# i
 18559              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18560              		.loc 1 1162 41 view .LVU6312
 18561 093f 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18562              		.loc 1 1160 47 is_stmt 1 view .LVU6313
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18563              		.loc 1 1160 29 view .LVU6314
 18564 0943 4883C558 		add	rbp, 88	# ivtmp.711,
 18565              	.L1729:
GAS LISTING /tmp/ccdGK7kM.s 			page 495


1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18566              		.loc 1 1161 13 view .LVU6315
 18567 0947 4C89EE   		mov	rsi, r13	#, i
 18568 094a 4C89F7   		mov	rdi, r14	#, tuning_result
 18569 094d E8000000 		call	tune_benchmark	#
 18569      00
 18570              	.LVL1252:
1162:sieve_extend.c ****         }
 18571              		.loc 1 1162 13 view .LVU6316
 18572              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18573              		.loc 1 1160 48 is_stmt 0 view .LVU6317
 18574 0952 49FFC5   		inc	r13	# i
 18575              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18576              		.loc 1 1162 41 view .LVU6318
 18577 0955 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18578              		.loc 1 1160 47 is_stmt 1 view .LVU6319
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18579              		.loc 1 1160 29 view .LVU6320
 18580 0959 4883C558 		add	rbp, 88	# ivtmp.711,
 18581              	.L1728:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18582              		.loc 1 1161 13 view .LVU6321
 18583 095d 4C89EE   		mov	rsi, r13	#, i
 18584 0960 4C89F7   		mov	rdi, r14	#, tuning_result
 18585 0963 E8000000 		call	tune_benchmark	#
 18585      00
 18586              	.LVL1253:
1162:sieve_extend.c ****         }
 18587              		.loc 1 1162 13 view .LVU6322
 18588              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18589              		.loc 1 1160 48 is_stmt 0 view .LVU6323
 18590 0968 49FFC5   		inc	r13	# i
 18591              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18592              		.loc 1 1162 41 view .LVU6324
 18593 096b 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18594              		.loc 1 1160 47 is_stmt 1 view .LVU6325
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18595              		.loc 1 1160 29 view .LVU6326
 18596 096f 4883C558 		add	rbp, 88	# ivtmp.711,
 18597              	.L1727:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18598              		.loc 1 1161 13 view .LVU6327
 18599 0973 4C89EE   		mov	rsi, r13	#, i
 18600 0976 4C89F7   		mov	rdi, r14	#, tuning_result
 18601 0979 E8000000 		call	tune_benchmark	#
 18601      00
 18602              	.LVL1254:
1162:sieve_extend.c ****         }
 18603              		.loc 1 1162 13 view .LVU6328
 18604              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccdGK7kM.s 			page 496


 18605              		.loc 1 1160 48 is_stmt 0 view .LVU6329
 18606 097e 49FFC5   		inc	r13	# i
 18607              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18608              		.loc 1 1162 41 view .LVU6330
 18609 0981 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18610              		.loc 1 1160 47 is_stmt 1 view .LVU6331
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18611              		.loc 1 1160 29 view .LVU6332
 18612 0985 4883C558 		add	rbp, 88	# ivtmp.711,
 18613              	.L1726:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18614              		.loc 1 1161 13 view .LVU6333
 18615 0989 4C89EE   		mov	rsi, r13	#, i
 18616 098c 4C89F7   		mov	rdi, r14	#, tuning_result
 18617 098f E8000000 		call	tune_benchmark	#
 18617      00
 18618              	.LVL1255:
1162:sieve_extend.c ****         }
 18619              		.loc 1 1162 13 view .LVU6334
 18620              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18621              		.loc 1 1160 48 is_stmt 0 view .LVU6335
 18622 0994 49FFC5   		inc	r13	# i
 18623              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18624              		.loc 1 1162 41 view .LVU6336
 18625 0997 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18626              		.loc 1 1160 47 is_stmt 1 view .LVU6337
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18627              		.loc 1 1160 29 view .LVU6338
 18628 099b 4883C558 		add	rbp, 88	# ivtmp.711,
 18629              	.L1725:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18630              		.loc 1 1161 13 view .LVU6339
 18631 099f 4C89EE   		mov	rsi, r13	#, i
 18632 09a2 4C89F7   		mov	rdi, r14	#, tuning_result
 18633              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18634              		.loc 1 1160 48 is_stmt 0 view .LVU6340
 18635 09a5 49FFC5   		inc	r13	# i
 18636              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18637              		.loc 1 1161 13 view .LVU6341
 18638 09a8 E8000000 		call	tune_benchmark	#
 18638      00
 18639              	.LVL1256:
1162:sieve_extend.c ****         }
 18640              		.loc 1 1162 13 is_stmt 1 view .LVU6342
 18641              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18642              		.loc 1 1162 41 is_stmt 0 view .LVU6343
 18643 09ad 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18644              		.loc 1 1160 47 is_stmt 1 view .LVU6344
GAS LISTING /tmp/ccdGK7kM.s 			page 497


1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18645              		.loc 1 1160 29 view .LVU6345
 18646 09b1 4883C558 		add	rbp, 88	# ivtmp.711,
 18647              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18648              		.loc 1 1160 9 is_stmt 0 view .LVU6346
 18649 09b5 4D39EF   		cmp	r15, r13	# tuning_results, i
 18650 09b8 0F84E6FE 		je	.L1670	#,
 18650      FFFF
 18651              	.L1667:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18652              		.loc 1 1161 13 is_stmt 1 view .LVU6347
 18653 09be 4C89EE   		mov	rsi, r13	#, i
 18654 09c1 4C89F7   		mov	rdi, r14	#, tuning_result
 18655 09c4 E8000000 		call	tune_benchmark	#
 18655      00
 18656              	.LVL1257:
1162:sieve_extend.c ****         }
 18657              		.loc 1 1162 13 view .LVU6348
 18658              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18659              		.loc 1 1162 41 is_stmt 0 view .LVU6349
 18660 09c9 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18661              		.loc 1 1160 47 is_stmt 1 view .LVU6350
 18662 09cd 4C8D5D58 		lea	r11, 88[rbp]	# tmp433,
 18663              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18664              		.loc 1 1160 48 is_stmt 0 view .LVU6351
 18665 09d1 498D7501 		lea	rsi, 1[r13]	# tmp432,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18666              		.loc 1 1160 29 is_stmt 1 view .LVU6352
 18667              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18668              		.loc 1 1161 13 is_stmt 0 view .LVU6353
 18669 09d5 4C89F7   		mov	rdi, r14	#, tuning_result
 18670 09d8 4C891C24 		mov	QWORD PTR [rsp], r11	# %sfp, tmp433
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18671              		.loc 1 1161 13 is_stmt 1 view .LVU6354
 18672 09dc E8000000 		call	tune_benchmark	#
 18672      00
 18673              	.LVL1258:
1162:sieve_extend.c ****         }
 18674              		.loc 1 1162 13 view .LVU6355
 18675              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18676              		.loc 1 1162 41 is_stmt 0 view .LVU6356
 18677 09e1 488B3C24 		mov	rdi, QWORD PTR [rsp]	# tmp433, %sfp
 18678 09e5 488D8DB0 		lea	rcx, 176[rbp]	# ivtmp.711,
 18678      000000
 18679 09ec 4C0127   		add	QWORD PTR [rdi], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18680              		.loc 1 1160 47 is_stmt 1 view .LVU6357
 18681              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18682              		.loc 1 1160 48 is_stmt 0 view .LVU6358
 18683 09ef 498D7502 		lea	rsi, 2[r13]	# i,
GAS LISTING /tmp/ccdGK7kM.s 			page 498


1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18684              		.loc 1 1160 29 is_stmt 1 view .LVU6359
 18685              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18686              		.loc 1 1161 13 is_stmt 0 view .LVU6360
 18687 09f3 4C89F7   		mov	rdi, r14	#, tuning_result
 18688 09f6 48890C24 		mov	QWORD PTR [rsp], rcx	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18689              		.loc 1 1161 13 is_stmt 1 view .LVU6361
 18690 09fa E8000000 		call	tune_benchmark	#
 18690      00
 18691              	.LVL1259:
1162:sieve_extend.c ****         }
 18692              		.loc 1 1162 13 view .LVU6362
 18693              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18694              		.loc 1 1162 41 is_stmt 0 view .LVU6363
 18695 09ff 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18696 0a03 4C8D8D08 		lea	r9, 264[rbp]	# ivtmp.711,
 18696      010000
 18697 0a0a 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18698              		.loc 1 1160 47 is_stmt 1 view .LVU6364
 18699              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18700              		.loc 1 1161 13 is_stmt 0 view .LVU6365
 18701 0a0d 4C89F7   		mov	rdi, r14	#, tuning_result
 18702              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18703              		.loc 1 1160 48 view .LVU6366
 18704 0a10 498D7503 		lea	rsi, 3[r13]	# i,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18705              		.loc 1 1160 29 is_stmt 1 view .LVU6367
 18706 0a14 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18707              		.loc 1 1161 13 view .LVU6368
 18708 0a18 E8000000 		call	tune_benchmark	#
 18708      00
 18709              	.LVL1260:
1162:sieve_extend.c ****         }
 18710              		.loc 1 1162 13 view .LVU6369
 18711              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18712              		.loc 1 1162 41 is_stmt 0 view .LVU6370
 18713 0a1d 488B1424 		mov	rdx, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18714 0a21 488D8560 		lea	rax, 352[rbp]	# ivtmp.711,
 18714      010000
 18715 0a28 4C0122   		add	QWORD PTR [rdx], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18716              		.loc 1 1160 47 is_stmt 1 view .LVU6371
 18717              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18718              		.loc 1 1160 48 is_stmt 0 view .LVU6372
 18719 0a2b 498D7504 		lea	rsi, 4[r13]	# i,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18720              		.loc 1 1160 29 is_stmt 1 view .LVU6373
 18721              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccdGK7kM.s 			page 499


1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18722              		.loc 1 1161 13 is_stmt 0 view .LVU6374
 18723 0a2f 4C89F7   		mov	rdi, r14	#, tuning_result
 18724 0a32 48890424 		mov	QWORD PTR [rsp], rax	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18725              		.loc 1 1161 13 is_stmt 1 view .LVU6375
 18726 0a36 E8000000 		call	tune_benchmark	#
 18726      00
 18727              	.LVL1261:
1162:sieve_extend.c ****         }
 18728              		.loc 1 1162 13 view .LVU6376
 18729              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18730              		.loc 1 1162 41 is_stmt 0 view .LVU6377
 18731 0a3b 4C8B0424 		mov	r8, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18732 0a3f 4C8D95B8 		lea	r10, 440[rbp]	# ivtmp.711,
 18732      010000
 18733 0a46 4D0120   		add	QWORD PTR [r8], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18734              		.loc 1 1160 47 is_stmt 1 view .LVU6378
 18735              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18736              		.loc 1 1160 48 is_stmt 0 view .LVU6379
 18737 0a49 498D7505 		lea	rsi, 5[r13]	# i,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18738              		.loc 1 1160 29 is_stmt 1 view .LVU6380
 18739              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18740              		.loc 1 1161 13 is_stmt 0 view .LVU6381
 18741 0a4d 4C89F7   		mov	rdi, r14	#, tuning_result
 18742 0a50 4C891424 		mov	QWORD PTR [rsp], r10	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18743              		.loc 1 1161 13 is_stmt 1 view .LVU6382
 18744 0a54 E8000000 		call	tune_benchmark	#
 18744      00
 18745              	.LVL1262:
1162:sieve_extend.c ****         }
 18746              		.loc 1 1162 13 view .LVU6383
 18747              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18748              		.loc 1 1162 41 is_stmt 0 view .LVU6384
 18749 0a59 4C8B1C24 		mov	r11, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18750 0a5d 488DBD10 		lea	rdi, 528[rbp]	# ivtmp.711,
 18750      020000
 18751 0a64 4D0123   		add	QWORD PTR [r11], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18752              		.loc 1 1160 47 is_stmt 1 view .LVU6385
 18753              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18754              		.loc 1 1160 48 is_stmt 0 view .LVU6386
 18755 0a67 498D7506 		lea	rsi, 6[r13]	# i,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18756              		.loc 1 1160 29 is_stmt 1 view .LVU6387
 18757 0a6b 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18758              		.loc 1 1161 13 view .LVU6388
 18759 0a6f 4C89F7   		mov	rdi, r14	#, tuning_result
GAS LISTING /tmp/ccdGK7kM.s 			page 500


 18760 0a72 E8000000 		call	tune_benchmark	#
 18760      00
 18761              	.LVL1263:
1162:sieve_extend.c ****         }
 18762              		.loc 1 1162 13 view .LVU6389
 18763              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18764              		.loc 1 1162 41 is_stmt 0 view .LVU6390
 18765 0a77 488B0C24 		mov	rcx, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18766              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18767              		.loc 1 1160 48 view .LVU6391
 18768 0a7b 498D7507 		lea	rsi, 7[r13]	# i,
 18769              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18770              		.loc 1 1162 41 view .LVU6392
 18771 0a7f 4C0121   		add	QWORD PTR [rcx], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18772              		.loc 1 1160 47 is_stmt 1 view .LVU6393
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18773              		.loc 1 1160 29 view .LVU6394
 18774 0a82 4C8D8D68 		lea	r9, 616[rbp]	# ivtmp.711,
 18774      020000
 18775              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18776              		.loc 1 1161 13 is_stmt 0 view .LVU6395
 18777 0a89 4C89F7   		mov	rdi, r14	#, tuning_result
 18778 0a8c 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.711
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18779              		.loc 1 1161 13 is_stmt 1 view .LVU6396
 18780 0a90 E8000000 		call	tune_benchmark	#
 18780      00
 18781              	.LVL1264:
1162:sieve_extend.c ****         }
 18782              		.loc 1 1162 13 view .LVU6397
 18783              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18784              		.loc 1 1162 41 is_stmt 0 view .LVU6398
 18785 0a95 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.711, %sfp
 18786              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18787              		.loc 1 1160 48 view .LVU6399
 18788 0a99 4983C508 		add	r13, 8	# i,
 18789              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 18790              		.loc 1 1162 41 view .LVU6400
 18791 0a9d 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18792              		.loc 1 1160 47 is_stmt 1 view .LVU6401
 18793              	.LVL1265:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18794              		.loc 1 1160 29 view .LVU6402
 18795 0aa0 4881C5C0 		add	rbp, 704	# ivtmp.711,
 18795      020000
 18796              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18797              		.loc 1 1160 9 is_stmt 0 view .LVU6403
GAS LISTING /tmp/ccdGK7kM.s 			page 501


 18798 0aa7 4D39EF   		cmp	r15, r13	# tuning_results, i
 18799 0aaa 0F850EFF 		jne	.L1667	#,
 18799      FFFF
 18800 0ab0 E9EFFDFF 		jmp	.L1670	#
 18800      FF
 18801              	.LVL1266:
 18802              	.L1666:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18803              		.loc 1 1160 9 view .LVU6404
 18804              	.LBE1010:
1141:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 18805              		.loc 1 1141 13 is_stmt 1 view .LVU6405
1142:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 18806              		.loc 1 1142 13 view .LVU6406
 18807              	.LBB1011:
 18808              	.LBI1011:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18809              		.loc 3 105 1 view .LVU6407
 18810              	.LBB1012:
 18811              		.loc 3 107 3 view .LVU6408
 18812              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18813              		.loc 3 107 10 is_stmt 0 view .LVU6409
 18814 0ab5 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# tuning_result_229->elapsed_time, tuning_result_229->elapsed_time
 18814      4648
 18815 0abb 498B4E08 		mov	rcx, QWORD PTR 8[r14]	# tuning_result_229->blocksize_bits, tuning_result_229->blocksize_bits
 18816 0abf 41FF7630 		push	QWORD PTR 48[r14]	# tuning_result_229->sample_max
 18817              		.cfi_def_cfa_offset 248
 18818 0ac3 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, tuning_result_229->avg
 18818      5650
 18819 0ac9 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, tuning_result_229->sample_duration
 18819      4E38
 18820 0acf 41FF7640 		push	QWORD PTR 64[r14]	# tuning_result_229->passes
 18821              		.cfi_def_cfa_offset 256
 18822 0ad3 4889DA   		mov	rdx, rbx	#, step
 18823 0ad6 488D3500 		lea	rsi, .LC55[rip]	#,
 18823      000000
 18824 0add 41FF7628 		push	QWORD PTR 40[r14]	# tuning_result_229->mediumstep_faster
 18825              		.cfi_def_cfa_offset 264
 18826 0ae1 BF010000 		mov	edi, 1	#,
 18826      00
 18827 0ae6 B8030000 		mov	eax, 3	#,
 18827      00
 18828 0aeb 41FF7620 		push	QWORD PTR 32[r14]	# tuning_result_229->smallstep_faster
 18829              		.cfi_def_cfa_offset 272
 18830 0aef 4D8B4E18 		mov	r9, QWORD PTR 24[r14]	#, tuning_result_229->free_bits
 18831 0af3 4D8B4610 		mov	r8, QWORD PTR 16[r14]	#, tuning_result_229->blocksize_kb
 18832 0af7 E8000000 		call	__printf_chk@PLT	#
 18832      00
 18833              	.LVL1267:
 18834              		.loc 3 107 10 view .LVU6410
 18835              	.LBE1012:
 18836              	.LBE1011:
1147:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18837              		.loc 1 1147 13 is_stmt 1 view .LVU6411
 18838              	# sieve_extend.c:1147:             if (option_verboselevel >= 3) {
1147:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18839              		.loc 1 1147 16 is_stmt 0 view .LVU6412
GAS LISTING /tmp/ccdGK7kM.s 			page 502


 18840 0afc 4883C420 		add	rsp, 32	#,
 18841              		.cfi_def_cfa_offset 240
 18842 0b00 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 18842      02
 18843 0b05 0F84C8FD 		je	.L1668	#,
 18843      FFFF
 18844 0b0b 498D6E08 		lea	rbp, 8[r14]	# ivtmp.717,
 18845              	.LBB1013:
 18846              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18847              		.loc 1 1148 32 view .LVU6413
 18848 0b0f 4531ED   		xor	r13d, r13d	# tuning_result_index
 18849              	.L1669:
 18850              	.LVL1268:
1149:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 18851              		.loc 1 1149 21 is_stmt 1 view .LVU6414
 18852              	.LBB1005:
 18853              	.LBI1005:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18854              		.loc 3 105 1 view .LVU6415
 18855              	.LBB1006:
 18856              		.loc 3 107 3 view .LVU6416
 18857              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18858              		.loc 3 107 10 is_stmt 0 view .LVU6417
 18859 0b12 C5FB1045 		vmovsd	xmm0, QWORD PTR 64[rbp]	# MEM[base: _60, offset: 64B], MEM[base: _60, offset: 64B]
 18859      40
 18860 0b17 488B4D08 		mov	rcx, QWORD PTR 8[rbp]	# MEM[base: _60, offset: 8B], MEM[base: _60, offset: 8B]
 18861 0b1b 56       		push	rsi	#
 18862              		.cfi_def_cfa_offset 248
 18863 0b1c BF010000 		mov	edi, 1	#,
 18863      00
 18864 0b21 488D3500 		lea	rsi, .LC52[rip]	#,
 18864      000000
 18865 0b28 FF7528   		push	QWORD PTR 40[rbp]	# MEM[base: _60, offset: 40B]
 18866              		.cfi_def_cfa_offset 256
 18867 0b2b C5FB1055 		vmovsd	xmm2, QWORD PTR 72[rbp]	#, MEM[base: _60, offset: 72B]
 18867      48
 18868 0b30 C5FB104D 		vmovsd	xmm1, QWORD PTR 48[rbp]	#, MEM[base: _60, offset: 48B]
 18868      30
 18869 0b35 FF7538   		push	QWORD PTR 56[rbp]	# MEM[base: _60, offset: 56B]
 18870              		.cfi_def_cfa_offset 264
 18871 0b38 B8030000 		mov	eax, 3	#,
 18871      00
 18872              	.LBE1006:
 18873              	.LBE1005:
 18874              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18875              		.loc 1 1148 118 view .LVU6418
 18876 0b3d 49FFC5   		inc	r13	# tuning_result_index
 18877              	.LVL1269:
 18878              	.LBB1008:
 18879              	.LBB1007:
 18880              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18881              		.loc 3 107 10 view .LVU6419
 18882 0b40 FF7520   		push	QWORD PTR 32[rbp]	# MEM[base: _60, offset: 32B]
 18883              		.cfi_def_cfa_offset 272
 18884 0b43 4883C558 		add	rbp, 88	# ivtmp.717,
GAS LISTING /tmp/ccdGK7kM.s 			page 503


 18885 0b47 4C8B45B8 		mov	r8, QWORD PTR -72[rbp]	#, MEM[base: _60, offset: 16B]
 18886 0b4b 4C8B4DC0 		mov	r9, QWORD PTR -64[rbp]	#, MEM[base: _60, offset: 24B]
 18887 0b4f 488B55A8 		mov	rdx, QWORD PTR -88[rbp]	#, MEM[base: _60, offset: 0B]
 18888 0b53 E8000000 		call	__printf_chk@PLT	#
 18888      00
 18889              	.LVL1270:
 18890              		.loc 3 107 10 view .LVU6420
 18891              	.LBE1007:
 18892              	.LBE1008:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18893              		.loc 1 1148 99 is_stmt 1 view .LVU6421
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18894              		.loc 1 1148 55 view .LVU6422
 18895              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18896              		.loc 1 1148 75 is_stmt 0 view .LVU6423
 18897 0b58 4883C420 		add	rsp, 32	#,
 18898              		.cfi_def_cfa_offset 240
 18899 0b5c 41B80A00 		mov	r8d, 10	# tmp373,
 18899      0000
 18900 0b62 4983FF0A 		cmp	r15, 10	# tuning_results,
 18901 0b66 4D0F46C7 		cmovbe	r8, r15	# tuning_results,, tmp373
 18902              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18903              		.loc 1 1148 17 view .LVU6424
 18904 0b6a 4D39C5   		cmp	r13, r8	# tuning_result_index, tmp373
 18905 0b6d 72A3     		jb	.L1669	#,
 18906 0b6f E95FFDFF 		jmp	.L1668	#
 18906      FF
 18907              	.LVL1271:
 18908              	.L1760:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 18909              		.loc 1 1148 17 view .LVU6425
 18910              	.LBE1013:
 18911              	.LBE984:
 18912              	.LBE983:
 18913              	.LBE982:
1250:sieve_extend.c ****     }
 18914              		.loc 1 1250 39 is_stmt 1 view .LVU6426
 18915              	.LBB1028:
 18916              	.LBI1028:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18917              		.loc 3 105 1 view .LVU6427
 18918              	.LBB1029:
 18919              		.loc 3 107 3 view .LVU6428
 18920              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18921              		.loc 3 107 10 is_stmt 0 view .LVU6429
 18922 0b74 488D3D00 		lea	rdi, .LC49[rip]	#,
 18922      000000
 18923 0b7b E8000000 		call	puts@PLT	#
 18923      00
 18924              	.LVL1272:
 18925              		.loc 3 107 10 view .LVU6430
 18926              	.LBE1029:
 18927              	.LBE1028:
1253:sieve_extend.c ****     if (option_tunelevel) {
 18928              		.loc 1 1253 5 is_stmt 1 view .LVU6431
GAS LISTING /tmp/ccdGK7kM.s 			page 504


1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18929              		.loc 1 1254 5 view .LVU6432
 18930              	# sieve_extend.c:1254:     if (option_tunelevel) {
1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18931              		.loc 1 1254 9 is_stmt 0 view .LVU6433
 18932 0b80 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_62, option_tunelevel
 18932      6C
 18933              	# sieve_extend.c:1253:     counter_t best_blocksize_bits = default_blocksize;
1253:sieve_extend.c ****     if (option_tunelevel) {
 18934              		.loc 1 1253 15 view .LVU6434
 18935 0b85 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 18935      0300
 18936              	.LVL1273:
 18937              	# sieve_extend.c:1254:     if (option_tunelevel) {
1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18938              		.loc 1 1254 8 view .LVU6435
 18939 0b8b 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 18940 0b8e 0F855A01 		jne	.L1767	#,
 18940      0000
 18941              	.LVL1274:
 18942              	.L1649:
 18943              	.LBB1030:
1263:sieve_extend.c ****         counter_t passes = 0;
 18944              		.loc 1 1263 9 is_stmt 1 view .LVU6436
 18945              	# sieve_extend.c:1263:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1263:sieve_extend.c ****         counter_t passes = 0;
 18946              		.loc 1 1263 12 is_stmt 0 view .LVU6437
 18947 0b94 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 18947      00
 18948 0b99 0F8EF1F7 		jle	.L1674	#,
 18948      FFFF
1263:sieve_extend.c ****         counter_t passes = 0;
 18949              		.loc 1 1263 39 is_stmt 1 discriminator 1 view .LVU6438
 18950              	.LVL1275:
 18951              	.LBB968:
 18952              	.LBI968:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18953              		.loc 3 105 1 discriminator 1 view .LVU6439
 18954              	.LBB969:
 18955              		.loc 3 107 3 discriminator 1 view .LVU6440
 18956              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18957              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6441
 18958 0b9f 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 18958      000000
 18959 0ba6 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 18959      000000
 18960 0bad 4C89FA   		mov	rdx, r15	#, best_result$blocksize_bits
 18961 0bb0 488D3500 		lea	rsi, .LC57[rip]	#,
 18961      000000
 18962 0bb7 BF010000 		mov	edi, 1	#,
 18962      00
 18963 0bbc 31C0     		xor	eax, eax	#
 18964 0bbe E8000000 		call	__printf_chk@PLT	#
 18964      00
 18965              	.LVL1276:
 18966 0bc3 E9C8F7FF 		jmp	.L1674	#
 18966      FF
GAS LISTING /tmp/ccdGK7kM.s 			page 505


 18967              	.LVL1277:
 18968              	.L1766:
 18969              		.loc 3 107 10 discriminator 1 view .LVU6442
 18970              	.LBE969:
 18971              	.LBE968:
 18972              	.LBE1030:
 18973              	.LBB1031:
 18974              	.LBB1025:
 18975              	.LBB1022:
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18976              		.loc 1 1166 5 is_stmt 1 view .LVU6443
 18977              	# sieve_extend.c:1167:     if (option_verboselevel >= 1) {
1167:sieve_extend.c ****         tuning_result_index = 0;
 18978              		.loc 1 1167 8 is_stmt 0 view .LVU6444
 18979 0bc8 837C2450 		cmp	DWORD PTR 80[rsp], 0	# %sfp,
 18979      00
 18980              	# sieve_extend.c:1166:     tuning_result_type best_result = tuning_result[0];
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18981              		.loc 1 1166 24 view .LVU6445
 18982 0bcd 4D8B7E08 		mov	r15, QWORD PTR 8[r14]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 18983              	.LVL1278:
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18984              		.loc 1 1166 24 view .LVU6446
 18985 0bd1 498B6E20 		mov	rbp, QWORD PTR 32[r14]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 18986 0bd5 4D8B6E28 		mov	r13, QWORD PTR 40[r14]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
1167:sieve_extend.c ****         tuning_result_index = 0;
 18987              		.loc 1 1167 5 is_stmt 1 view .LVU6447
 18988              	# sieve_extend.c:1167:     if (option_verboselevel >= 1) {
1167:sieve_extend.c ****         tuning_result_index = 0;
 18989              		.loc 1 1167 8 is_stmt 0 view .LVU6448
 18990 0bd9 7E40     		jle	.L1672	#,
1168:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 18991              		.loc 1 1168 9 is_stmt 1 view .LVU6449
 18992              	.LVL1279:
1169:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 18993              		.loc 1 1169 9 view .LVU6450
 18994              	.LBB1014:
 18995              	.LBI1014:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18996              		.loc 3 105 1 view .LVU6451
 18997              	.LBB1015:
 18998              		.loc 3 107 3 view .LVU6452
 18999              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19000              		.loc 3 107 10 is_stmt 0 view .LVU6453
 19001 0bdb 498B5610 		mov	rdx, QWORD PTR 16[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 16B], MEM[(struc
 19002 0bdf C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 72B], MEM[(s
 19002      4648
 19003 0be5 498B4E18 		mov	rcx, QWORD PTR 24[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 24B], MEM[(struc
 19004 0be9 41FF7630 		push	QWORD PTR 48[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 48B]
 19005              		.cfi_def_cfa_offset 248
 19006              	.LVL1280:
 19007              		.loc 3 107 10 view .LVU6454
 19008 0bed 4D89E9   		mov	r9, r13	#, best_result$mediumstep_faster
 19009 0bf0 4989E8   		mov	r8, rbp	#, best_result$smallstep_faster
 19010 0bf3 41FF7640 		push	QWORD PTR 64[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 64B]
 19011              		.cfi_def_cfa_offset 256
 19012 0bf7 488D3500 		lea	rsi, .LC56[rip]	#,
GAS LISTING /tmp/ccdGK7kM.s 			page 506


 19012      000000
 19013 0bfe BF010000 		mov	edi, 1	#,
 19013      00
 19014 0c03 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 80B]
 19014      5650
 19015 0c09 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 56B]
 19015      4E38
 19016 0c0f B8030000 		mov	eax, 3	#,
 19016      00
 19017 0c14 E8000000 		call	__printf_chk@PLT	#
 19017      00
 19018              	.LVL1281:
 19019              		.loc 3 107 10 view .LVU6455
 19020 0c19 58       		pop	rax	#
 19021              		.cfi_def_cfa_offset 248
 19022 0c1a 5A       		pop	rdx	#
 19023              		.cfi_def_cfa_offset 240
 19024              	.LVL1282:
 19025              	.L1672:
 19026              		.loc 3 107 10 view .LVU6456
 19027              	.LBE1015:
 19028              	.LBE1014:
1176:sieve_extend.c ****     return best_result;
 19029              		.loc 1 1176 5 is_stmt 1 view .LVU6457
 19030 0c1b 4C89F7   		mov	rdi, r14	#, tuning_result
 19031 0c1e E8000000 		call	free@PLT	#
 19031      00
 19032              	.LVL1283:
1177:sieve_extend.c **** }
 19033              		.loc 1 1177 5 view .LVU6458
1177:sieve_extend.c **** }
 19034              		.loc 1 1177 5 is_stmt 0 view .LVU6459
 19035              	.LBE1022:
 19036              	.LBE1025:
1256:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19037              		.loc 1 1256 9 is_stmt 1 view .LVU6460
 19038              	# sieve_extend.c:1256:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1256:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19039              		.loc 1 1256 33 is_stmt 0 view .LVU6461
 19040 0c23 48892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rbp	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 19040      000000
1257:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19041              		.loc 1 1257 9 is_stmt 1 view .LVU6462
 19042              	# sieve_extend.c:1257:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1257:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19043              		.loc 1 1257 34 is_stmt 0 view .LVU6463
 19044 0c2a 4C892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], r13	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 19044      000000
1258:sieve_extend.c ****     }
 19045              		.loc 1 1258 9 is_stmt 1 view .LVU6464
 19046              	.LVL1284:
1258:sieve_extend.c ****     }
 19047              		.loc 1 1258 9 is_stmt 0 view .LVU6465
 19048              	.LBE1031:
1261:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 19049              		.loc 1 1261 5 is_stmt 1 view .LVU6466
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
GAS LISTING /tmp/ccdGK7kM.s 			page 507


 19050              		.loc 1 1262 5 view .LVU6467
 19051              	# sieve_extend.c:1262:     if (best_blocksize_bits > 0) {
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 19052              		.loc 1 1262 8 is_stmt 0 view .LVU6468
 19053 0c31 4D85FF   		test	r15, r15	# best_result$blocksize_bits
 19054 0c34 0F84A7F8 		je	.L1673	#,
 19054      FFFF
 19055 0c3a E955FFFF 		jmp	.L1649	#
 19055      FF
 19056              	.LVL1285:
 19057              	.L1682:
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 19058              		.loc 1 1262 8 view .LVU6469
 19059 0c3f 488D3D00 		lea	rdi, CSWTCH.107[rip]	# tmp321,
 19059      000000
 19060 0c46 4C8D0D00 		lea	r9, CSWTCH.108[rip]	# tmp323,
 19060      000000
 19061 0c4d 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.107
 19062 0c51 4F8B2CC1 		mov	r13, QWORD PTR [r9+r8*8]	# freebits_steps, CSWTCH.108
 19063 0c55 488D1D00 		lea	rbx, CSWTCH.109[rip]	# tmp325,
 19063      000000
 19064 0c5c C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.109
 19064      3CC3
 19065 0c62 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, smallstep_faster_steps
 19065      58
 19066 0c67 4C896C24 		mov	QWORD PTR 56[rsp], r13	# %sfp, freebits_steps
 19066      38
 19067              	.LBB1032:
 19068              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19069              		.loc 1 1189 14 view .LVU6470
 19070 0c6c 48C74424 		mov	QWORD PTR 48[rsp], 4	# %sfp,
 19070      30040000 
 19070      00
 19071 0c75 C5FB117C 		vmovsd	QWORD PTR 64[rsp], xmm7	# %sfp, sample_duration
 19071      2440
 19072              	.L1650:
 19073              	.LVL1286:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19074              		.loc 1 1189 14 view .LVU6471
 19075              	.LBE1032:
 19076              	.LBB1033:
 19077              	.LBB1026:
 19078              	.LBB1023:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19079              		.loc 1 1087 5 is_stmt 1 view .LVU6472
 19080              	# sieve_extend.c:1087:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19081              		.loc 1 1087 8 is_stmt 0 view .LVU6473
 19082 0c7b 448B7424 		mov	r14d, DWORD PTR 80[rsp]	# option_verboselevel.41_63, %sfp
 19082      50
 19083              	.LVL1287:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19084              		.loc 1 1087 8 view .LVU6474
 19085 0c80 4585F6   		test	r14d, r14d	# option_verboselevel.41_63
 19086 0c83 0F8EB2F9 		jle	.L1652	#,
 19086      FFFF
GAS LISTING /tmp/ccdGK7kM.s 			page 508


1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19087              		.loc 1 1087 35 is_stmt 1 view .LVU6475
 19088              	.LVL1288:
 19089              	.LBB1016:
 19090              	.LBI1016:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19091              		.loc 3 105 1 view .LVU6476
 19092              	.LBB1017:
 19093              		.loc 3 107 3 view .LVU6477
 19094              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19095              		.loc 3 107 10 is_stmt 0 view .LVU6478
 19096 0c89 31C0     		xor	eax, eax	#
 19097 0c8b 488D3500 		lea	rsi, .LC50[rip]	#,
 19097      000000
 19098 0c92 BF010000 		mov	edi, 1	#,
 19098      00
 19099              	.LBE1017:
 19100              	.LBE1016:
 19101              	# sieve_extend.c:1087:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19102              		.loc 1 1087 59 view .LVU6479
 19103 0c97 4489F3   		mov	ebx, r14d	# option_verboselevel.41_63, option_verboselevel.41_63
 19104              	.LBB1019:
 19105              	.LBB1018:
 19106              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19107              		.loc 3 107 10 view .LVU6480
 19108 0c9a E8000000 		call	__printf_chk@PLT	#
 19108      00
 19109              	.LVL1289:
 19110              		.loc 3 107 10 view .LVU6481
 19111              	.LBE1018:
 19112              	.LBE1019:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19113              		.loc 1 1087 56 is_stmt 1 view .LVU6482
 19114              	# sieve_extend.c:1087:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19115              		.loc 1 1087 59 is_stmt 0 view .LVU6483
 19116 0c9f FFCB     		dec	ebx	# option_verboselevel.41_63
 19117 0ca1 0F8494F9 		je	.L1652	#,
 19117      FFFF
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19118              		.loc 1 1087 86 is_stmt 1 view .LVU6484
 19119              	.LVL1290:
 19120              	.LBB1020:
 19121              	.LBI1020:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19122              		.loc 3 105 1 view .LVU6485
 19123              	.LBB1021:
 19124              		.loc 3 107 3 view .LVU6486
 19125              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19126              		.loc 3 107 10 is_stmt 0 view .LVU6487
 19127 0ca7 BF0A0000 		mov	edi, 10	#,
 19127      00
 19128 0cac E8000000 		call	putchar@PLT	#
 19128      00
 19129              	.LVL1291:
 19130 0cb1 E985F9FF 		jmp	.L1652	#
GAS LISTING /tmp/ccdGK7kM.s 			page 509


 19130      FF
 19131              	.LVL1292:
 19132              	.L1679:
 19133              		.loc 3 107 10 view .LVU6488
 19134              	.LBE1021:
 19135              	.LBE1020:
 19136              	.LBE1023:
 19137              	.LBE1026:
 19138              	.LBE1033:
 19139              	.LBB1034:
 19140              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 19141              		.loc 1 1277 39 discriminator 1 view .LVU6489
 19142 0cb6 4889D0   		mov	rax, rdx	# tmp400, tmp397
 19143 0cb9 48D1E8   		shr	rax	# tmp400
 19144 0cbc 83E201   		and	edx, 1	# tmp401,
 19145 0cbf 4809D0   		or	rax, rdx	# tmp459, tmp401
 19146 0cc2 C4E1FB2A 		vcvtsi2sd	xmm5, xmm0, rax	# tmp488, tmp480, tmp459
 19146      E8
 19147 0cc7 C55358C5 		vaddsd	xmm8, xmm5, xmm5	# tmp398, tmp399, tmp399
 19148 0ccb E902F9FF 		jmp	.L1680	#
 19148      FF
 19149              	.L1677:
1277:sieve_extend.c ****     }
 19150              		.loc 1 1277 39 discriminator 1 view .LVU6490
 19151 0cd0 4C89F1   		mov	rcx, r14	# tmp394, passes
 19152 0cd3 4D89F1   		mov	r9, r14	# tmp395, passes
 19153 0cd6 48D1E9   		shr	rcx	# tmp394
 19154 0cd9 4183E101 		and	r9d, 1	# tmp395,
 19155 0cdd 4C09C9   		or	rcx, r9	# tmp458, tmp395
 19156 0ce0 C4E1FB2A 		vcvtsi2sd	xmm4, xmm0, rcx	# tmp486, tmp480, tmp458
 19156      E1
 19157 0ce5 C5DB58D4 		vaddsd	xmm2, xmm4, xmm4	# tmp392, tmp393, tmp393
 19158 0ce9 E9CEF8FF 		jmp	.L1678	#
 19158      FF
 19159              	.LVL1293:
 19160              	.L1767:
1277:sieve_extend.c ****     }
 19161              		.loc 1 1277 39 discriminator 1 view .LVU6491
 19162              	.LBE1034:
 19163              	.LBB1035:
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19164              		.loc 1 1255 9 is_stmt 1 view .LVU6492
 19165              	# sieve_extend.c:1255:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19166              		.loc 1 1255 44 is_stmt 0 view .LVU6493
 19167 0cee 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 19168 0cf2 488B7424 		mov	rsi, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 19168      70
 19169 0cf7 41FFC8   		dec	r8d	#
 19170 0cfa 89542450 		mov	DWORD PTR 80[rsp], edx	# %sfp, option_verboselevel.41_63
 19171 0cfe 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, option_maxFactor.42_64
 19171      48
 19172              	.LVL1294:
 19173              	.LBB1027:
1049:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19174              		.loc 1 1049 27 is_stmt 1 view .LVU6494
GAS LISTING /tmp/ccdGK7kM.s 			page 510


 19175              	.LBB1024:
1050:sieve_extend.c **** 
 19176              		.loc 1 1050 5 view .LVU6495
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 19177              		.loc 1 1052 5 view .LVU6496
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19178              		.loc 1 1053 5 view .LVU6497
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19179              		.loc 1 1054 5 view .LVU6498
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19180              		.loc 1 1055 5 view .LVU6499
1056:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19181              		.loc 1 1056 5 view .LVU6500
1057:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19182              		.loc 1 1057 5 view .LVU6501
1058:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19183              		.loc 1 1058 5 view .LVU6502
1059:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19184              		.loc 1 1059 5 view .LVU6503
1060:sieve_extend.c **** 
 19185              		.loc 1 1060 5 view .LVU6504
1063:sieve_extend.c ****         case 1:
 19186              		.loc 1 1063 5 view .LVU6505
 19187 0d03 4183F802 		cmp	r8d, 2	# _209,
 19188 0d07 0F8632FF 		jbe	.L1682	#,
 19188      FFFF
 19189 0d0d C5FB1005 		vmovsd	xmm0, QWORD PTR .LC27[rip]	# sample_duration,
 19189      00000000 
 19190 0d15 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 19190      30050000 
 19190      00
 19191 0d1e 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 19191      38800000 
 19191      00
 19192 0d27 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 19192      58040000 
 19192      00
 19193 0d30 C5FB1144 		vmovsd	QWORD PTR 64[rsp], xmm0	# %sfp, sample_duration
 19193      2440
 19194 0d36 E940FFFF 		jmp	.L1650	#
 19194      FF
 19195              	.LVL1295:
 19196              	.L1753:
1063:sieve_extend.c ****         case 1:
 19197              		.loc 1 1063 5 is_stmt 0 view .LVU6506
 19198              	.LBE1024:
 19199              	.LBE1027:
 19200              	.LBE1035:
 19201              	.LBB1036:
1192:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19202              		.loc 1 1192 34 is_stmt 1 discriminator 1 view .LVU6507
 19203              	.LBB907:
 19204              	.LBI907:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19205              		.loc 3 98 1 discriminator 1 view .LVU6508
 19206              	.LBB908:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccdGK7kM.s 			page 511


 19207              		.loc 3 100 3 discriminator 1 view .LVU6509
 19208              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19209              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6510
 19210 0d3b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19210      000000
 19211 0d42 BA1B0000 		mov	edx, 27	#,
 19211      00
 19212 0d47 BE010000 		mov	esi, 1	#,
 19212      00
 19213 0d4c 488D3D00 		lea	rdi, .LC31[rip]	#,
 19213      000000
 19214 0d53 E8000000 		call	fwrite@PLT	#
 19214      00
 19215              	.LVL1296:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19216              		.loc 3 100 10 discriminator 1 view .LVU6511
 19217              	.LBE908:
 19218              	.LBE907:
1192:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19219              		.loc 1 1192 83 is_stmt 1 discriminator 1 view .LVU6512
 19220 0d58 E9F3F7FF 		jmp	.L1751	#
 19220      FF
 19221              	.L1633:
1202:sieve_extend.c ****             }
 19222              		.loc 1 1202 17 view .LVU6513
 19223              	.LVL1297:
 19224              	.LBB909:
 19225              	.LBI904:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19226              		.loc 3 98 1 view .LVU6514
 19227              	.LBB906:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19228              		.loc 3 100 3 view .LVU6515
 19229              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19230              		.loc 3 100 10 is_stmt 0 view .LVU6516
 19231 0d5d 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 19232 0d60 488D1500 		lea	rdx, .LC38[rip]	#,
 19232      000000
 19233 0d67 E9D1F7FF 		jmp	.L1750	#
 19233      FF
 19234              	.LVL1298:
 19235              	.L1637:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19236              		.loc 3 100 10 view .LVU6517
 19237              	.LBE906:
 19238              	.LBE909:
1209:sieve_extend.c ****             }
 19239              		.loc 1 1209 17 is_stmt 1 view .LVU6518
 19240              	.LBB910:
 19241              	.LBI910:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19242              		.loc 3 98 1 view .LVU6519
 19243              	.LBB911:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19244              		.loc 3 100 3 view .LVU6520
GAS LISTING /tmp/ccdGK7kM.s 			page 512


 19245              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19246              		.loc 3 100 10 is_stmt 0 view .LVU6521
 19247 0d6c 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 19248 0d6f 488D1500 		lea	rdx, .LC43[rip]	#,
 19248      000000
 19249 0d76 E9C2F7FF 		jmp	.L1750	#
 19249      FF
 19250              	.LVL1299:
 19251              	.L1756:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19252              		.loc 3 100 10 view .LVU6522
 19253              	.LBE911:
 19254              	.LBE910:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19255              		.loc 1 1200 34 is_stmt 1 discriminator 1 view .LVU6523
 19256              	.LBB912:
 19257              	.LBI912:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19258              		.loc 3 98 1 discriminator 1 view .LVU6524
 19259              	.LBB913:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19260              		.loc 3 100 3 discriminator 1 view .LVU6525
 19261              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19262              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6526
 19263 0d7b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19263      000000
 19264 0d82 488D3D00 		lea	rdi, .LC37[rip]	#,
 19264      000000
 19265 0d89 BA180000 		mov	edx, 24	#,
 19265      00
 19266 0d8e BE010000 		mov	esi, 1	#,
 19266      00
 19267 0d93 E8000000 		call	fwrite@PLT	#
 19267      00
 19268              	.LVL1300:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19269              		.loc 3 100 10 discriminator 1 view .LVU6527
 19270              	.LBE913:
 19271              	.LBE912:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19272              		.loc 1 1200 80 is_stmt 1 discriminator 1 view .LVU6528
 19273 0d98 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 19274 0d9c E8000000 		call	usage	#
 19274      00
 19275              	.LVL1301:
 19276              	.L1764:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19277              		.loc 1 1200 80 is_stmt 0 discriminator 1 view .LVU6529
 19278              	.LBE1036:
 19279              	# sieve_extend.c:1287: }
 19280              		.loc 1 1287 1 view .LVU6530
 19281 0da1 E8000000 		call	__stack_chk_fail@PLT	#
 19281      00
 19282              	.LVL1302:
 19283              	.L1759:
GAS LISTING /tmp/ccdGK7kM.s 			page 513


 19284              	.LBB1037:
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19285              		.loc 1 1207 34 is_stmt 1 discriminator 1 view .LVU6531
 19286              	.LBB914:
 19287              	.LBI914:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19288              		.loc 3 98 1 discriminator 1 view .LVU6532
 19289              	.LBB915:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19290              		.loc 3 100 3 discriminator 1 view .LVU6533
 19291              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19292              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6534
 19293 0da6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19293      000000
 19294 0dad 488D3D00 		lea	rdi, .LC41[rip]	#,
 19294      000000
 19295 0db4 BA1A0000 		mov	edx, 26	#,
 19295      00
 19296 0db9 BE010000 		mov	esi, 1	#,
 19296      00
 19297 0dbe E8000000 		call	fwrite@PLT	#
 19297      00
 19298              	.LVL1303:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19299              		.loc 3 100 10 discriminator 1 view .LVU6535
 19300              	.LBE915:
 19301              	.LBE914:
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19302              		.loc 1 1207 82 is_stmt 1 discriminator 1 view .LVU6536
 19303 0dc3 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 19304 0dc7 E8000000 		call	usage	#
 19304      00
 19305              	.LVL1304:
 19306              	.LBE1037:
 19307              		.cfi_endproc
 19308              	.LFE5352:
 19310              		.section	.rodata
 19311              		.align 16
 19314              	CSWTCH.109:
 19315 0000 9A999999 		.long	2576980378
 19316 0004 9999B93F 		.long	1069128089
 19317 0008 9A999999 		.long	2576980378
 19318 000c 9999C93F 		.long	1070176665
 19319 0010 9A999999 		.long	2576980378
 19320 0014 9999D93F 		.long	1071225241
 19321 0018 00000000 		.align 16
 19321      00000000 
 19324              	CSWTCH.108:
 19325 0020 00080000 		.quad	2048
 19325      00000000 
 19326 0028 00040000 		.quad	1024
 19326      00000000 
 19327 0030 40000000 		.quad	64
 19327      00000000 
 19328 0038 00000000 		.align 16
 19328      00000000 
GAS LISTING /tmp/ccdGK7kM.s 			page 514


 19331              	CSWTCH.107:
 19332 0040 10000000 		.quad	16
 19332      00000000 
 19333 0048 08000000 		.quad	8
 19333      00000000 
 19334 0050 04000000 		.quad	4
 19334      00000000 
 19335              		.globl	debug_hitpoint
 19336              		.bss
 19337              		.align 32
 19340              	debug_hitpoint:
 19341 0000 00000000 		.zero	40
 19341      00000000 
 19341      00000000 
 19341      00000000 
 19341      00000000 
 19342              		.globl	global_MEDIUMSTEP_FASTER
 19343              		.data
 19344              		.align 8
 19347              	global_MEDIUMSTEP_FASTER:
 19348 0000 40000000 		.quad	64
 19348      00000000 
 19349              		.globl	global_SMALLSTEP_FASTER
 19350              		.align 8
 19353              	global_SMALLSTEP_FASTER:
 19354 0008 40000000 		.quad	64
 19354      00000000 
 19355              		.section	.rodata.cst32,"aM",@progbits,32
 19356              		.align 32
 19357              	.LC0:
 19358 0000 00000000 		.quad	0
 19358      00000000 
 19359 0008 01000000 		.quad	1
 19359      00000000 
 19360 0010 02000000 		.quad	2
 19360      00000000 
 19361 0018 03000000 		.quad	3
 19361      00000000 
 19362              		.align 32
 19363              	.LC1:
 19364 0020 08000000 		.quad	8
 19364      00000000 
 19365 0028 08000000 		.quad	8
 19365      00000000 
 19366 0030 08000000 		.quad	8
 19366      00000000 
 19367 0038 08000000 		.quad	8
 19367      00000000 
 19368              		.align 32
 19369              	.LC2:
 19370 0040 04000000 		.quad	4
 19370      00000000 
 19371 0048 04000000 		.quad	4
 19371      00000000 
 19372 0050 04000000 		.quad	4
 19372      00000000 
 19373 0058 04000000 		.quad	4
GAS LISTING /tmp/ccdGK7kM.s 			page 515


 19373      00000000 
 19374              		.align 32
 19375              	.LC3:
 19376 0060 3F000000 		.long	63
 19377 0064 3F000000 		.long	63
 19378 0068 3F000000 		.long	63
 19379 006c 3F000000 		.long	63
 19380 0070 3F000000 		.long	63
 19381 0074 3F000000 		.long	63
 19382 0078 3F000000 		.long	63
 19383 007c 3F000000 		.long	63
 19384              		.section	.rodata.cst8,"aM",@progbits,8
 19385              		.align 8
 19386              	.LC8:
 19387 0000 00000000 		.long	0
 19388 0004 0000F87F 		.long	2146959360
 19389              		.align 8
 19390              	.LC9:
 19391 0008 95D626E8 		.long	3894859413
 19392 000c 0B2E113E 		.long	1041313291
 19393              		.align 8
 19394              	.LC27:
 19395 0010 9A999999 		.long	2576980378
 19396 0014 9999B93F 		.long	1069128089
 19397              		.align 8
 19398              	.LC58:
 19399 0018 00000000 		.long	0
 19400 001c 00001440 		.long	1075052544
 19401              		.text
 19402              	.Letext0:
 19403              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 19404              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19405              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 19406              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 19407              		.file 8 "/usr/include/stdio.h"
 19408              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19409              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 19410              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 19411              		.file 12 "/usr/include/stdint.h"
 19412              		.file 13 "/usr/include/time.h"
 19413              		.file 14 "/usr/include/math.h"
 19414              		.file 15 "/usr/include/stdlib.h"
 19415              		.file 16 "<built-in>"
 45369              		.section	.note.gnu.property,"a"
 45370              		.align 8
 45371 0000 04000000 		.long	 1f - 0f
 45372 0004 10000000 		.long	 4f - 1f
 45373 0008 05000000 		.long	 5
 45374              	0:
 45375 000c 474E5500 		.string	 "GNU"
 45376              	1:
 45377              		.align 8
 45378 0010 020000C0 		.long	 0xc0000002
 45379 0014 04000000 		.long	 3f - 2f
 45380              	2:
 45381 0018 03000000 		.long	 0x3
 45382              	3:
GAS LISTING /tmp/ccdGK7kM.s 			page 516


 45383 001c 00000000 		.align 8
 45384              	4:
GAS LISTING /tmp/ccdGK7kM.s 			page 517


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccdGK7kM.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccdGK7kM.s:19357  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccdGK7kM.s:19363  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccdGK7kM.s:19369  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccdGK7kM.s:19375  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccdGK7kM.s:921    .text:0000000000000530 extendSieve_shiftright_ivdep
     /tmp/ccdGK7kM.s:2737   .text:0000000000001180 compare_tuning_result
     /tmp/ccdGK7kM.s:2763   .text:00000000000011a0 setBitsTrue_largeRange_vector
     /tmp/ccdGK7kM.s:3779   .text:00000000000016d0 extendSieve_aligned
     /tmp/ccdGK7kM.s:4578   .text:0000000000001bd0 extendSieve_shiftleft
     /tmp/ccdGK7kM.s:7268   .text:0000000000002d80 show_primes.isra.0
     /tmp/ccdGK7kM.s:7263   .rodata.str1.1:0000000000000006 .LC6
     /tmp/ccdGK7kM.s:7261   .rodata.str1.1:0000000000000000 .LC5
     /tmp/ccdGK7kM.s:7669   .text:0000000000002f20 sieve
     /tmp/ccdGK7kM.s:14006  .text:0000000000004ae0 tune_benchmark
     /tmp/ccdGK7kM.s:19353  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccdGK7kM.s:19347  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccdGK7kM.s:19386  .rodata.cst8:0000000000000000 .LC8
     /tmp/ccdGK7kM.s:19390  .rodata.cst8:0000000000000008 .LC9
     /tmp/ccdGK7kM.s:14221  .text:0000000000004c20 shiftvec
     /tmp/ccdGK7kM.s:15388  .text:0000000000004fc0 validatePrimeCount
     /tmp/ccdGK7kM.s:15369  .rodata.str1.8:0000000000000000 .LC10
     /tmp/ccdGK7kM.s:15375  .rodata.str1.1:0000000000000023 .LC12
     /tmp/ccdGK7kM.s:15379  .rodata.str1.8:00000000000000c0 .LC13
     /tmp/ccdGK7kM.s:15372  .rodata.str1.8:0000000000000058 .LC11
     /tmp/ccdGK7kM.s:15382  .rodata.str1.8:00000000000000f8 .LC14
     /tmp/ccdGK7kM.s:16635  .text:0000000000005750 usage
     /tmp/ccdGK7kM.s:16595  .rodata.str1.8:0000000000000148 .LC15
     /tmp/ccdGK7kM.s:16598  .rodata.str1.1:0000000000000031 .LC16
     /tmp/ccdGK7kM.s:16602  .rodata.str1.8:0000000000000168 .LC17
     /tmp/ccdGK7kM.s:16605  .rodata.str1.8:00000000000001a8 .LC18
     /tmp/ccdGK7kM.s:16608  .rodata.str1.8:00000000000001d8 .LC19
     /tmp/ccdGK7kM.s:16611  .rodata.str1.8:0000000000000220 .LC20
     /tmp/ccdGK7kM.s:16614  .rodata.str1.8:0000000000000250 .LC21
     /tmp/ccdGK7kM.s:16617  .rodata.str1.8:0000000000000290 .LC22
     /tmp/ccdGK7kM.s:16620  .rodata.str1.8:00000000000002d0 .LC23
     /tmp/ccdGK7kM.s:16623  .rodata.str1.8:0000000000000320 .LC24
     /tmp/ccdGK7kM.s:16626  .rodata.str1.8:0000000000000348 .LC25
     /tmp/ccdGK7kM.s:16629  .rodata.str1.8:0000000000000378 .LC26
     /tmp/ccdGK7kM.s:16965  .text.startup:0000000000000000 main
     /tmp/ccdGK7kM.s:16876  .rodata.str1.1:000000000000004a .LC29
     /tmp/ccdGK7kM.s:16878  .rodata.str1.1:0000000000000051 .LC30
     /tmp/ccdGK7kM.s:16882  .rodata.str1.1:0000000000000077 .LC32
     /tmp/ccdGK7kM.s:16889  .rodata.str1.1:000000000000007a .LC34
     /tmp/ccdGK7kM.s:16891  .rodata.str1.1:0000000000000093 .LC35
     /tmp/ccdGK7kM.s:16893  .rodata.str1.1:000000000000009b .LC36
     /tmp/ccdGK7kM.s:16902  .rodata.str1.1:00000000000000bb .LC39
     /tmp/ccdGK7kM.s:16921  .rodata.str1.1:000000000000013a .LC47
     /tmp/ccdGK7kM.s:16919  .rodata.str1.1:0000000000000121 .LC46
     /tmp/ccdGK7kM.s:16904  .rodata.str1.1:00000000000000d1 .LC40
     /tmp/ccdGK7kM.s:16908  .rodata.str1.1:00000000000000f3 .LC42
     /tmp/ccdGK7kM.s:16915  .rodata.str1.1:00000000000000f7 .LC44
     /tmp/ccdGK7kM.s:16917  .rodata.str1.1:0000000000000110 .LC45
     /tmp/ccdGK7kM.s:16923  .rodata.str1.1:000000000000014a .LC48
     /tmp/ccdGK7kM.s:19398  .rodata.cst8:0000000000000018 .LC58
GAS LISTING /tmp/ccdGK7kM.s 			page 518


     /tmp/ccdGK7kM.s:16953  .rodata.str1.8:00000000000006c8 .LC59
     /tmp/ccdGK7kM.s:16874  .rodata.str1.1:000000000000003b .LC28
     /tmp/ccdGK7kM.s:16886  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/ccdGK7kM.s:16959  .rodata.str1.1:000000000000017b .LC61
     /tmp/ccdGK7kM.s:16956  .rodata.str1.8:0000000000000710 .LC60
     /tmp/ccdGK7kM.s:19394  .rodata.cst8:0000000000000010 .LC27
     /tmp/ccdGK7kM.s:16934  .rodata.str1.8:00000000000004a8 .LC52
     /tmp/ccdGK7kM.s:16931  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccdGK7kM.s:16937  .rodata.str1.8:0000000000000530 .LC53
     /tmp/ccdGK7kM.s:16940  .rodata.str1.1:000000000000016e .LC54
     /tmp/ccdGK7kM.s:16944  .rodata.str1.8:0000000000000588 .LC55
     /tmp/ccdGK7kM.s:16925  .rodata.str1.1:0000000000000151 .LC49
     /tmp/ccdGK7kM.s:16950  .rodata.str1.8:0000000000000690 .LC57
     /tmp/ccdGK7kM.s:16947  .rodata.str1.8:0000000000000618 .LC56
     /tmp/ccdGK7kM.s:19331  .rodata:0000000000000040 CSWTCH.107
     /tmp/ccdGK7kM.s:19324  .rodata:0000000000000020 CSWTCH.108
     /tmp/ccdGK7kM.s:19314  .rodata:0000000000000000 CSWTCH.109
     /tmp/ccdGK7kM.s:16927  .rodata.str1.1:0000000000000164 .LC50
     /tmp/ccdGK7kM.s:16880  .rodata.str1.1:000000000000005b .LC31
     /tmp/ccdGK7kM.s:16899  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/ccdGK7kM.s:16912  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/ccdGK7kM.s:16895  .rodata.str1.1:00000000000000a2 .LC37
     /tmp/ccdGK7kM.s:16906  .rodata.str1.1:00000000000000d8 .LC41
     /tmp/ccdGK7kM.s:19340  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
