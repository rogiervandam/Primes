GAS LISTING /tmp/ccH5HMHD.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccH5HMHD.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB64:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 2
  18:sieve_extend.c **** #define default_tune_level 1
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 3


  27:sieve_extend.c **** // calculate the rest dynamically
  28:sieve_extend.c **** #define counter_t TYPE
  29:sieve_extend.c **** #define bitshift_t TYPE
  30:sieve_extend.c **** #define bitword_t uint64_t
  31:sieve_extend.c **** 
  32:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  33:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  34:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  35:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  36:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  37:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  38:sieve_extend.c **** 
  39:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  40:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  41:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  42:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  44:sieve_extend.c **** 
  45:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  46:sieve_extend.c **** 
  47:sieve_extend.c **** // globals for tuning
  48:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  49:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 16;
  50:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  51:sieve_extend.c **** 
  52:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  53:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  54:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  55:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  56:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  57:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  58:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  59:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)96)
  60:sieve_extend.c **** 
  61:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  62:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  63:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  64:sieve_extend.c **** 
  65:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  66:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  67:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  68:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)VECTORMASK)
  69:sieve_extend.c **** 
  70:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  71:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  72:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  73:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  74:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  75:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  76:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  77:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  78:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  79:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  80:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  81:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  82:sieve_extend.c **** #define real(bit) (bit*2+1)
  83:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 4


  84:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  85:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  86:sieve_extend.c **** 
  87:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  88:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  89:sieve_extend.c **** 
  90:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  91:sieve_extend.c **** 
  92:sieve_extend.c **** struct sieve_state {
  93:sieve_extend.c ****     bitword_t* bitarray;
  94:sieve_extend.c ****     counter_t  bits;
  95:sieve_extend.c ****     counter_t  size;
  96:sieve_extend.c **** };
  97:sieve_extend.c **** 
  98:sieve_extend.c **** #include "debugtools.h"
  99:sieve_extend.c **** 
 100:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 101:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 102:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 103:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 105:sieve_extend.c **** 
 106:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 109:sieve_extend.c **** 
 110:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 111:sieve_extend.c ****     // it gave weird malloc problems at this point
 112:sieve_extend.c ****     return sieve;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 116:sieve_extend.c ****     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 118:sieve_extend.c **** }
 119:sieve_extend.c **** 
 120:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 121:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 124:sieve_extend.c **** }
 125:sieve_extend.c **** 
 126:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 127:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 129:sieve_extend.c **** 
 130:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 133:sieve_extend.c ****    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 135:sieve_extend.c **** 
 136:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 137:sieve_extend.c ****        index_word++;
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 140:sieve_extend.c ****    }
GAS LISTING /tmp/ccH5HMHD.s 			page 5


 141:sieve_extend.c **** 
 142:sieve_extend.c ****    return index;
 143:sieve_extend.c **** }
 144:sieve_extend.c **** 
 145:sieve_extend.c **** 
 146:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 147:sieve_extend.c **** //#if __APPLE__
 148:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 149:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 150:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 151:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 152:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 153:sieve_extend.c **** //
 154:sieve_extend.c **** //   #pragma ivdep
 155:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 156:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 157:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 158:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 159:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 160:sieve_extend.c **** //   }
 161:sieve_extend.c **** //
 162:sieve_extend.c **** //   #pragma ivdep
 163:sieve_extend.c **** //   while (index_word < range_stop_word) {
 164:sieve_extend.c **** //       bitarray[index_word] |= mask;
 165:sieve_extend.c **** //       index_word += step;
 166:sieve_extend.c **** //   }
 167:sieve_extend.c **** //
 168:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 169:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 170:sieve_extend.c **** //   }
 171:sieve_extend.c **** //#endif
 172:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 173:sieve_extend.c **** //#if __linux__
 174:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 177:sieve_extend.c **** 
 178:sieve_extend.c ****   #pragma unroll
 179:sieve_extend.c ****    #pragma ivdep
 180:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 181:sieve_extend.c ****        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 185:sieve_extend.c ****        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 187:sieve_extend.c ****        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 189:sieve_extend.c ****        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 191:sieve_extend.c ****    }
 192:sieve_extend.c **** 
 193:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 195:sieve_extend.c ****        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 197:sieve_extend.c ****    }
GAS LISTING /tmp/ccH5HMHD.s 			page 6


 198:sieve_extend.c **** 
 199:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 202:sieve_extend.c **** 
 203:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 204:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 205:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 206:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 207:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 208:sieve_extend.c **** 
 209:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 210:sieve_extend.c **** 
 211:sieve_extend.c **** //     #pragma unroll 1
 212:sieve_extend.c **** //    #pragma ivdep
 213:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 214:sieve_extend.c **** //        *(index_ptr) |= mask;
 215:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 216:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 217:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 218:sieve_extend.c **** //        index_ptr += 4*step;
 219:sieve_extend.c **** //    }
 220:sieve_extend.c **** 
 221:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 222:sieve_extend.c **** //        *index_ptr |= mask;
 223:sieve_extend.c **** //        index_ptr+=step;
 224:sieve_extend.c **** //    }
 225:sieve_extend.c **** 
 226:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 227:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 228:sieve_extend.c **** //    }
 229:sieve_extend.c **** //#endif
 230:sieve_extend.c **** }
 231:sieve_extend.c **** 
 232:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 233:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 234:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 235:sieve_extend.c **** 
 236:sieve_extend.c ****     // build the pattern in a word
 237:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 241:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 242:sieve_extend.c ****     
 243:sieve_extend.c ****     // initialize loop variables and stop if this is it
 244:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 249:sieve_extend.c ****        return;
 250:sieve_extend.c ****     }
 251:sieve_extend.c ****     
 252:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 254:sieve_extend.c ****    // from now on, we are before range_stop_word
GAS LISTING /tmp/ccH5HMHD.s 			page 7


 255:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 256:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 260:sieve_extend.c ****    #pragma unroll
 261:sieve_extend.c ****    #pragma ivdep
 262:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 265:sieve_extend.c **** 
 266:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 267:sieve_extend.c ****    }
 268:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 270:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 271:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 272:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 273:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 274:sieve_extend.c **** //             printWord(pattern); printf("\n");
 275:sieve_extend.c **** //             exit(0);
 276:sieve_extend.c **** //         }
 277:sieve_extend.c **** //    }
 278:sieve_extend.c **** 
 279:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 280:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 281:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 282:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 283:sieve_extend.c ****     // #pragma unroll
 284:sieve_extend.c ****     // #pragma ivdep
 285:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 286:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 287:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 288:sieve_extend.c ****     // }
 289:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 290:sieve_extend.c **** }
 291:sieve_extend.c **** 
 292:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 293:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 294:sieve_extend.c **** // This is especially true for small steps over long ranges
 295:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 296:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 298:sieve_extend.c **** 
 299:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 301:sieve_extend.c **** 
 302:sieve_extend.c ****         #pragma ivdep
 303:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 307:sieve_extend.c ****             do {
 308:sieve_extend.c ****                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccH5HMHD.s 			page 8


 312:sieve_extend.c ****             //     mask |= markmask(index);
 313:sieve_extend.c ****             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 315:sieve_extend.c ****     }
 316:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 317:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 318:sieve_extend.c ****         
 319:sieve_extend.c ****         #pragma ivdep
 320:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 324:sieve_extend.c ****             do {
 325:sieve_extend.c ****                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 329:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 330:sieve_extend.c ****             //     mask |= markmask(index);
 331:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 332:sieve_extend.c ****         }
 333:sieve_extend.c ****     }
 334:sieve_extend.c **** }
 335:sieve_extend.c **** 
 336:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 337:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 338:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 339:sieve_extend.c ****     
 340:sieve_extend.c ****     #pragma unroll
 341:sieve_extend.c ****     #pragma ivdep
 342:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 345:sieve_extend.c **** 
 346:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 347:sieve_extend.c **** //    #pragma unroll
 348:sieve_extend.c **** //     #pragma ivdep
 349:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 350:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 351:sieve_extend.c **** //     }
 352:sieve_extend.c **** }
 353:sieve_extend.c **** 
 354:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 355:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 356:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 357:sieve_extend.c **** 
 358:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 359:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 360:sieve_extend.c ****     
 361:sieve_extend.c ****     while (1) {
 362:sieve_extend.c ****         if (index1_word == index2_word) {
 363:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 364:sieve_extend.c ****             counter_t index_word = index1_word;
 365:sieve_extend.c ****             do {
 366:sieve_extend.c ****                 mask |= markmask(index1);
 367:sieve_extend.c ****                 index1 += step1;
 368:sieve_extend.c ****                 index1_word = wordindex(index1);
GAS LISTING /tmp/ccH5HMHD.s 			page 9


 369:sieve_extend.c ****             } while (index1_word == index_word);
 370:sieve_extend.c ****             do {
 371:sieve_extend.c ****                 mask |= markmask(index2);
 372:sieve_extend.c ****                 index2 += step2;
 373:sieve_extend.c ****                 index2_word = wordindex(index2);
 374:sieve_extend.c ****             } while (index2_word == index_word);
 375:sieve_extend.c ****             bitarray[index_word] |= mask;
 376:sieve_extend.c ****         }
 377:sieve_extend.c **** 
 378:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 379:sieve_extend.c ****         if (index2 > range_stop) {
 380:sieve_extend.c ****             while (index1 <= range_stop) {
 381:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 382:sieve_extend.c ****                 index1 += step1;
 383:sieve_extend.c ****             }
 384:sieve_extend.c ****             return;
 385:sieve_extend.c ****         }
 386:sieve_extend.c **** 
 387:sieve_extend.c ****         if (index1 > range_stop) {
 388:sieve_extend.c ****             while (index2 <= range_stop) {
 389:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 390:sieve_extend.c ****                 index2 += step2;
 391:sieve_extend.c ****             }
 392:sieve_extend.c ****             return;
 393:sieve_extend.c ****         }
 394:sieve_extend.c **** 
 395:sieve_extend.c ****         while (index1_word < index2_word) {
 396:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 397:sieve_extend.c ****             index1 += step1;
 398:sieve_extend.c ****             index1_word = wordindex(index1);
 399:sieve_extend.c ****         }
 400:sieve_extend.c ****         
 401:sieve_extend.c ****         while (index2_word < index1_word){
 402:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 403:sieve_extend.c ****             index2 += step2;
 404:sieve_extend.c ****             index2_word = wordindex(index2);
 405:sieve_extend.c ****         }
 406:sieve_extend.c **** 
 407:sieve_extend.c ****     }
 408:sieve_extend.c **** }
 409:sieve_extend.c **** 
 410:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 411:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 413:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 414:sieve_extend.c **** 
 415:sieve_extend.c **** //    #pragma unroll
 416:sieve_extend.c ****     #pragma ivdep
 417:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 419:sieve_extend.c ****     }
 420:sieve_extend.c **** }
 421:sieve_extend.c **** 
 422:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 424:sieve_extend.c **** 
 425:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
GAS LISTING /tmp/ccH5HMHD.s 			page 10


 426:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 427:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 428:sieve_extend.c ****     // }
 429:sieve_extend.c ****     // return;
 430:sieve_extend.c **** 
 431:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 432:sieve_extend.c ****     
 433:sieve_extend.c ****     // find out where the first complete vector is
 434:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 435:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 436:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 437:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 438:sieve_extend.c ****             #pragma ivdep unroll
 439:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 440:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 441:sieve_extend.c ****             return;                 
 442:sieve_extend.c ****         }
 443:sieve_extend.c **** 
 444:sieve_extend.c ****         register counter_t index = range_start; // outside to later adjust range_start
 445:sieve_extend.c ****         #pragma ivdep unroll
 446:sieve_extend.c ****         for (; index < range_start_atvector; index += step) {
 447:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 448:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 449:sieve_extend.c ****             do {
 450:sieve_extend.c ****                 mask |= markmask(index);
 451:sieve_extend.c ****                 index += step;
 452:sieve_extend.c ****             } while (wordindex(index) == index_word);
 453:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 454:sieve_extend.c ****         }
 455:sieve_extend.c ****         range_start = index;
 456:sieve_extend.c ****     }
 457:sieve_extend.c ****     
 458:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 459:sieve_extend.c ****     
 460:sieve_extend.c ****     #pragma ivdep unroll
 461:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 462:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 463:sieve_extend.c ****         register bitvector_t quadmask = { };
 464:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 465:sieve_extend.c ****         
 466:sieve_extend.c ****         // build a quadmask
 467:sieve_extend.c ****         do {
 468:sieve_extend.c ****             quadmask[word] |= markmask(index);
 469:sieve_extend.c ****             index += step;
 470:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 471:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 472:sieve_extend.c ****         
 473:sieve_extend.c ****         // use mask on all n*step multiples
 474:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 475:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 476:sieve_extend.c **** 
 477:sieve_extend.c ****         #pragma ivdep unroll
 478:sieve_extend.c ****         for(; current_vector+4*step <= range_stop_vector; current_vector += 4*step) {
 479:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 482:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 11


 483:sieve_extend.c ****         }
 484:sieve_extend.c **** 
 485:sieve_extend.c ****         #pragma ivdep unroll
 486:sieve_extend.c ****         for(; current_vector <= range_stop_vector; current_vector += step) {
 487:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 488:sieve_extend.c ****         }
 489:sieve_extend.c ****         
 490:sieve_extend.c ****         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 491:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 492:sieve_extend.c ****         if (index_word <= range_stop_word) {
 493:sieve_extend.c ****             #pragma ivdep
 494:sieve_extend.c ****             for (word =0; word < VECTOR_ELEMENTS; word++) {
 495:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 496:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 497:sieve_extend.c ****             }
 498:sieve_extend.c ****         }
 499:sieve_extend.c ****     }
 500:sieve_extend.c **** }
 501:sieve_extend.c **** 
 502:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 502 153 view -0
  91              		.cfi_startproc
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 503 5 view .LVU1
 504:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 505:sieve_extend.c **** 
 506:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 506 5 view .LVU2
 507:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 507 5 view .LVU3
  95              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 502 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:506:     const counter_t source_word = wordindex(source_start);
 506:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 506 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 502 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 507 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 502 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:506:     const counter_t source_word = wordindex(source_start);
 506:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 506 21 view .LVU9
GAS LISTING /tmp/ccH5HMHD.s 			page 12


 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 507 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 502 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 507 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 507 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 502 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 507 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 507 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 502 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 507 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 502 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 507 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 507 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 507 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
GAS LISTING /tmp/ccH5HMHD.s 			page 13


 165      D1
 166              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 507 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 502 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 507 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 508 5 is_stmt 1 view .LVU26
 177              	.LBB315:
 178              		.loc 1 508 10 view .LVU27
 179              		.loc 1 508 54 view .LVU28
 180              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 508 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 509:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 509 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 508 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 192              		.loc 1 509 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 195              		.loc 1 509 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 508 90 is_stmt 1 discriminator 3 view .LVU34
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 508 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 508 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 509 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 508 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 209              		.loc 1 509 29 view .LVU39
GAS LISTING /tmp/ccH5HMHD.s 			page 14


 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 212              		.loc 1 509 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 508 90 is_stmt 1 view .LVU41
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 508 54 view .LVU42
 217              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 508 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 509 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 508 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 226              		.loc 1 509 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 229              		.loc 1 509 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 508 90 is_stmt 1 view .LVU48
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 508 54 view .LVU49
 234              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 508 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 509 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 508 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 243              		.loc 1 509 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 508 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 249              		.loc 1 509 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccH5HMHD.s 			page 15


 252              		.loc 1 508 90 is_stmt 1 view .LVU56
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 508 54 view .LVU57
 254              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 508 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 509 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 508 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 263              		.loc 1 509 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 508 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 269              		.loc 1 509 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 508 90 is_stmt 1 view .LVU64
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 508 54 view .LVU65
 274              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 508 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 509 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 508 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 283              		.loc 1 509 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 508 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 289              		.loc 1 509 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 508 90 is_stmt 1 view .LVU72
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 508 54 view .LVU73
 294              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccH5HMHD.s 			page 16


 295              		.loc 1 508 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 509 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 508 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 303              		.loc 1 509 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 508 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 309              		.loc 1 509 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 508 90 is_stmt 1 view .LVU80
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 508 54 view .LVU81
 314              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 508 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 509 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 508 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 323              		.loc 1 509 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 326              		.loc 1 509 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 508 90 is_stmt 1 view .LVU87
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 508 54 view .LVU88
 331              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 508 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
GAS LISTING /tmp/ccH5HMHD.s 			page 17


 337              		.p2align 3
 338              	.L2:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 508 5 view .LVU90
 340              	.LBE315:
 510:sieve_extend.c **** 
 511:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 511 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:511:     const counter_t destination_start = source_start + size;
 343              		.loc 1 511 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 512 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:513:     counter_t destination_stop_word = wordindex(destination_stop);
 513:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 513 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:512:     counter_t destination_start_word = wordindex(destination_start);
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 512 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 512 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 513 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:513:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 513 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 514:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 514 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 514 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:514:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 514 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 515:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 516:sieve_extend.c ****         return;
 517:sieve_extend.c ****     }
 518:sieve_extend.c **** 
 519:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
GAS LISTING /tmp/ccH5HMHD.s 			page 18


 376              		.loc 1 519 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:519:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 519 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:522:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 520:sieve_extend.c **** 
 521:sieve_extend.c ****     // TODO: refactor according to smallstep
 522:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 522 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:519:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 519:sieve_extend.c **** 
 384              		.loc 1 519 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 522 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:522:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 522 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.140,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 523:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 523 5 is_stmt 1 view .LVU108
 524:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 524 5 view .LVU109
 525:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 525 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:525:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 525 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:524:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 524:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 524 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:525:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 525 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 526:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 526 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:523:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 523 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:524:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 524:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 524 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 524:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
GAS LISTING /tmp/ccH5HMHD.s 			page 19


 419              		.loc 1 524 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.141,
 421              	# sieve_extend.c:526:     destination_start_word++;
 422              		.loc 1 526 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 527:sieve_extend.c ****     
 528:sieve_extend.c ****     #pragma unroll
 529:sieve_extend.c ****     #pragma ivdep
 530:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 530 5 is_stmt 1 view .LVU119
 426              	.LBB316:
 427              		.loc 1 530 10 view .LVU120
 428              		.loc 1 530 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.139,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE316:
 433              	# sieve_extend.c:523:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 523 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 523 31 view .LVU123
 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.141
 442 01b3 0F84F404 		je	.L12	#,
 442      0000
 443              	.LBB317:
 531:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 531 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 531 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 531 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 531 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 454      F8
 455              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 531 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 530 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 530 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.141,
GAS LISTING /tmp/ccH5HMHD.s 			page 20


 463              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 530 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 531 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 531 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 531 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 531 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 531 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 531 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 531 55 view .LVU138
 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 485      F8
 486              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 531 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 489      10
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 530 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 530 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.141,
 494              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 530 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 531 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 500              		.loc 1 531 81 is_stmt 0 view .LVU144
 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 531 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 531 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 531 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
GAS LISTING /tmp/ccH5HMHD.s 			page 21


 511              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 531 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 531 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 531 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 530 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 530 25 view .LVU152
 524              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 530 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 529              		.loc 1 530 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.142, prolog_loop_niters.141
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.143, niters.142
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.143,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.161,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.146, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 543      D4
 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
GAS LISTING /tmp/ccH5HMHD.s 			page 22


 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 530 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.146, vect_vec_iv_.146
 553 029e 4883C640 		add	rsi, 64	# ivtmp.161,
 554              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 531 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 557      F0
 558              		.loc 1 531 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 531 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.146, vect_vec_iv_.146,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.146, vect_vec_iv_.146,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.148, vect_cst__146, tmp542
 566      E1
 567              	.LVL32:
 568              		.loc 1 531 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 570              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 531 99 view .LVU160
 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.150, vect__47.149, tmp498
 572      C5
 573              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 531 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.151, vect_cst__152, vect__48.150
 576              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 531 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.150
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.151
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 581      DA
 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.151
 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.150
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.152, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.154, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
GAS LISTING /tmp/ccH5HMHD.s 			page 23


 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 588      DB
 589              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 531 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.156
 591      C0
 592              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 531 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 594      CB
 595              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 531 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.156
 597      E0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 530 40 is_stmt 1 view .LVU166
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 530 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
 604              	.L9:
 605              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 608      E0
 609              		.loc 1 531 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.146, vect_vec_iv_.146,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.146, vect_vec_iv_.146,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.161,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.148, vect_cst__146, tmp400
 618      DB
 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 620              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 531 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.150, vect__47.149, tmp498
 622      FD
 623              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 531 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.151, vect_cst__152, vect__48.150
 625      CF
 626              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 531 116 discriminator 3 view .LVU173
GAS LISTING /tmp/ccH5HMHD.s 			page 24


 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.150
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.151
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.151
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.150
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.152, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.154, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 638      C2
 639              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 531 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.156
 641      80
 642              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 643              		.loc 1 531 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 645              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 531 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 648              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 531 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.146, vect_vec_iv_.146,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 652      F0
 653              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 531 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.156
 655      A0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 530 40 is_stmt 1 discriminator 3 view .LVU179
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 530 25 discriminator 3 view .LVU180
 658              		.loc 1 531 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.146, vect_vec_iv_.146,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.148, vect_cst__146, tmp517
GAS LISTING /tmp/ccH5HMHD.s 			page 25


 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 666              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 531 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.150, vect__47.149, tmp498
 668      CD
 669              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 531 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.151, vect_cst__152, vect__48.150
 671      E1
 672              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 531 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.150
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.151
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.151
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.150
 680      C901
 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.152, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.154, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 684      F9
 685              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 531 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.156
 687      C0
 688              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 531 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 690      D7
 691              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 531 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.156
 693      E0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 530 40 is_stmt 1 discriminator 3 view .LVU189
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 530 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.144, niters.142
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.144,
 701 0442 4901F6   		add	r14, rsi	# tmp.145, niters_vector_mult_vf.144
GAS LISTING /tmp/ccH5HMHD.s 			page 26


 702 0445 4939F5   		cmp	r13, rsi	# niters.142, niters_vector_mult_vf.144
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 531 9 view .LVU191
 708              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 531 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 531 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 531 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.145
 717              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 531 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 531 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 531 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
 726              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 727              		.loc 1 531 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 531 72 view .LVU199
 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 530 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 531 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 531 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 530 40 is_stmt 1 view .LVU203
 743              	.LVL34:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 530 25 view .LVU204
 745              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 530 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 531 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccH5HMHD.s 			page 27


 751              		.loc 1 531 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 531 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 531 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 531 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 531 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 531 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 531 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 531 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
 775              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 776              		.loc 1 531 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 531 116 view .LVU216
 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 530 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 530 25 view .LVU218
 786              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 530 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 531 9 is_stmt 1 view .LVU220
 791              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 792              		.loc 1 531 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 531 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 531 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 531 17 view .LVU224
GAS LISTING /tmp/ccH5HMHD.s 			page 28


 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 531 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 531 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 531 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 531 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 531 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 531 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 530 40 is_stmt 1 view .LVU231
 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 825              	.LVL38:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 530 25 view .LVU232
 827              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 828              		.loc 1 530 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 531 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 531 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 531 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 531 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 842              		.loc 1 531 17 view .LVU238
 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 531 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 531 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 531 127 view .LVU241
GAS LISTING /tmp/ccH5HMHD.s 			page 29


 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 531 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 531 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 531 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 530 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 530 25 view .LVU246
 868              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 530 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
 872              		.loc 1 531 9 is_stmt 1 view .LVU248
 873              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 531 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 531 72 view .LVU250
 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 531 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 531 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 531 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 531 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 893              		.loc 1 531 127 view .LVU255
 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 531 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 531 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccH5HMHD.s 			page 30


 902              		.loc 1 531 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 530 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 530 25 view .LVU260
 909              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 530 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 531 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 531 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 531 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 531 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 923              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 924              		.loc 1 531 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 531 81 view .LVU267
 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 531 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 531 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 531 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 531 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
 942              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 943              		.loc 1 531 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 530 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 530 25 view .LVU274
 950              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
GAS LISTING /tmp/ccH5HMHD.s 			page 31


 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 530 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 531 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 531 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 531 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 531 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 531 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 531 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 531 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
 974              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 975              		.loc 1 531 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 531 72 view .LVU284
 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 531 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 531 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 530 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 530 25 view .LVU288
 991              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 530 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 531 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 531 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccH5HMHD.s 			page 32


 1000              		.loc 1 531 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 531 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 531 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 531 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 531 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 531 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 531 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 531 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1023      E8
 1024              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 531 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1028              		.loc 1 530 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 530 25 view .LVU302
 1032              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 530 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 531 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 531 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1040              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1041              		.loc 1 531 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 531 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 531 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccH5HMHD.s 			page 33


 1051              		.loc 1 531 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 531 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 531 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 531 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 531 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 531 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 530 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1072              		.loc 1 530 25 view .LVU316
 1073              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 530 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
 1077              		.loc 1 531 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 531 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 531 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 531 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 530 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1091              		.loc 1 531 17 view .LVU323
 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 531 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 531 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 531 127 view .LVU326
GAS LISTING /tmp/ccH5HMHD.s 			page 34


 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 531 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 531 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 531 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 530 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 531 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 530 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 530 25 view .LVU333
 1121              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 530 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 531 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 531 81 is_stmt 0 view .LVU336
 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 531 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 531 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 531 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 531 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1142              	.LVL55:
 1143              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 531 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 531 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccH5HMHD.s 			page 35


 1151              		.loc 1 531 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 530 40 is_stmt 1 view .LVU344
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 530 25 view .LVU345
 1156              	.L10:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 530 25 is_stmt 0 view .LVU346
 1158              	.LBE317:
 532:sieve_extend.c ****     }
 533:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 533 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:533:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 533 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:534: }
 534:sieve_extend.c **** }
 1164              		.loc 1 534 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 534 1 view .LVU350
 1170 0683 415D     		pop	r13	#
 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 515:sieve_extend.c ****         return;
 1182              		.loc 1 515 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:515:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 515:sieve_extend.c ****         return;
 1184              		.loc 1 515 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:515:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 515:sieve_extend.c ****         return;
 1187              		.loc 1 515 42 view .LVU353
 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 516:sieve_extend.c ****     }
 1190              		.loc 1 516 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:534: }
 1192              		.loc 1 534 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
GAS LISTING /tmp/ccH5HMHD.s 			page 36


 1197              		.loc 1 534 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 534 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB318:
 1214              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 530 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.145
 1220              		.p2align 4,,2
 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE318:
 1223              		.cfi_endproc
 1224              	.LFE64:
 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB69:
 535:sieve_extend.c **** 
 536:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 537:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 538:sieve_extend.c **** 
 539:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 540:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 541:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 542:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 543:sieve_extend.c ****     
 544:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 545:sieve_extend.c **** 
 546:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 547:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 548:sieve_extend.c ****         copy_word += size;
 549:sieve_extend.c ****     }
 550:sieve_extend.c **** 
 551:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 552:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 553:sieve_extend.c ****         source_word++;
 554:sieve_extend.c ****         copy_word++;
 555:sieve_extend.c ****     }
 556:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 37


 557:sieve_extend.c **** }
 558:sieve_extend.c **** 
 559:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 560:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 561:sieve_extend.c **** 
 562:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 563:sieve_extend.c **** {
 564:sieve_extend.c ****     int i = 0;
 565:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 566:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 567:sieve_extend.c ****     {
 568:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 569:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 570:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 571:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 572:sieve_extend.c ****     }
 573:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 574:sieve_extend.c ****     {
 575:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 576:sieve_extend.c ****     }    
 577:sieve_extend.c **** }
 578:sieve_extend.c **** 
 579:sieve_extend.c **** #define forward_distance 3
 580:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 581:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 582:sieve_extend.c ****    
 583:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 584:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 585:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 586:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 587:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 588:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 589:sieve_extend.c **** 
 590:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 591:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 592:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 593:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 594:sieve_extend.c ****         return; // rapid exit for one word variant
 595:sieve_extend.c ****     }
 596:sieve_extend.c **** 
 597:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 598:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 599:sieve_extend.c ****                                 & keepmask(copy_start);
 600:sieve_extend.c **** 
 601:sieve_extend.c ****     copy_word++;
 602:sieve_extend.c **** 
 603:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 604:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 605:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 606:sieve_extend.c ****         
 607:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 608:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 609:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 610:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 611:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 612:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 613:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 38


 614:sieve_extend.c ****         #pragma ivdep 
 615:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 616:sieve_extend.c ****             #pragma ivdep
 617:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 618:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 619:sieve_extend.c ****             #pragma ivdep
 620:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 621:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 622:sieve_extend.c ****         }
 623:sieve_extend.c **** 
 624:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 625:sieve_extend.c ****         #pragma ivdep 
 626:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 627:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 628:sieve_extend.c **** 
 629:sieve_extend.c ****         // #pragma GCC ivdep
 630:sieve_extend.c ****         // for (; i <= size_word; i++) 
 631:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 632:sieve_extend.c ****     }
 633:sieve_extend.c ****     else {
 634:sieve_extend.c ****         register counter_t i = 0;
 635:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 636:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 637:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 638:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 639:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 640:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 641:sieve_extend.c ****     }
 642:sieve_extend.c **** 
 643:sieve_extend.c ****     // for (; i <= size_word; i++) 
 644:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 645:sieve_extend.c **** 
 646:sieve_extend.c ****     // for (; i <= size_word; i++) 
 647:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 648:sieve_extend.c **** 
 649:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 650:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 651:sieve_extend.c **** }
 652:sieve_extend.c **** 
 653:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 654:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 655:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 656:sieve_extend.c ****     counter_t distance = 0;
 657:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 658:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 659:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 660:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 661:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 662:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 663:sieve_extend.c ****         copy_word += 2;
 664:sieve_extend.c ****         source_word += 2;
 665:sieve_extend.c ****         distance += 2;
 666:sieve_extend.c ****     }
 667:sieve_extend.c ****     return distance;
 668:sieve_extend.c **** }
 669:sieve_extend.c **** 
 670:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
GAS LISTING /tmp/ccH5HMHD.s 			page 39


 671:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 672:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 673:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 674:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 675:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 676:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 677:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 678:sieve_extend.c **** //
 679:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 680:sieve_extend.c **** //    copy_ptr++;
 681:sieve_extend.c **** //    source_ptr++;
 682:sieve_extend.c **** //
 683:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 684:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 685:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 686:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 687:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 688:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 689:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 690:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 691:sieve_extend.c **** //
 692:sieve_extend.c **** //        copy_ptr+=3;
 693:sieve_extend.c **** //        source_ptr+=3;
 694:sieve_extend.c **** //    }
 695:sieve_extend.c **** //
 696:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 697:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 698:sieve_extend.c **** //        source_ptr++;
 699:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 700:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 701:sieve_extend.c **** //        copy_ptr++;
 702:sieve_extend.c **** //    }
 703:sieve_extend.c **** //
 704:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 705:sieve_extend.c **** //
 706:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 707:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 708:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 709:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 710:sieve_extend.c **** //         copy_ptr += size;
 711:sieve_extend.c **** //     }
 712:sieve_extend.c **** //
 713:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 714:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 715:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 716:sieve_extend.c **** //        copy_ptr++;
 717:sieve_extend.c **** //        source_ptr++;
 718:sieve_extend.c **** //    }
 719:sieve_extend.c **** //
 720:sieve_extend.c **** //}
 721:sieve_extend.c **** 
 722:sieve_extend.c **** 
 723:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 723 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 724:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 724 5 view .LVU360
GAS LISTING /tmp/ccH5HMHD.s 			page 40


 725:sieve_extend.c ****    
 726:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 726 5 view .LVU361
 1235              	# sieve_extend.c:723: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 723 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:727:     const counter_t copy_start = source_start + size;
 727:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 727 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:726:     const counter_t destination_stop_word = wordindex(destination_stop);
 726:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 726 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:723: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 723 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 728 39 view .LVU366
 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
 1253              	# sieve_extend.c:723: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 723 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:731:     register counter_t copy_word = wordindex(copy_start);
 729:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 730:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 731:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 731 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 728 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:723: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 723 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:726:     const counter_t destination_stop_word = wordindex(destination_stop);
 726:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1266              		.loc 1 726 21 view .LVU371
 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 728 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:723: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 723 149 view .LVU373
GAS LISTING /tmp/ccH5HMHD.s 			page 41


 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 723 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 727:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 727 5 is_stmt 1 view .LVU375
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 728 5 view .LVU376
 1291              	# sieve_extend.c:726:     const counter_t destination_stop_word = wordindex(destination_stop);
 726:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 726 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
 1294              	.LVL65:
 1295              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 728 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:730:     register counter_t source_word = wordindex(source_start);
 730:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 730 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 728 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 729 5 is_stmt 1 view .LVU381
 730:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 730 5 view .LVU382
 1308              		.loc 1 731 5 view .LVU383
 732:sieve_extend.c **** 
 733:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1309              		.loc 1 733 5 view .LVU384
 1310              	# sieve_extend.c:728:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 728 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 728 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
GAS LISTING /tmp/ccH5HMHD.s 			page 42


 1316              	# sieve_extend.c:729:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 729 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 729 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 729 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:733:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 733 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
 1337              		.loc 1 733 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 734:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 735:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 736:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 737:sieve_extend.c ****         return; // rapid exit for one word variant
 738:sieve_extend.c ****     }
 739:sieve_extend.c **** 
 740:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 740 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:742:                                 & keepmask(copy_start);
 741:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 742:sieve_extend.c ****                                 & keepmask(copy_start);
 1342              		.loc 1 742 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:744:     copy_word++;
 743:sieve_extend.c **** 
 744:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 744 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:740:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 740:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 740 25 view .LVU395
GAS LISTING /tmp/ccH5HMHD.s 			page 43


 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:748:     if (size >= WORD_SIZE_counter) {
 745:sieve_extend.c **** 
 746:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 747:sieve_extend.c **** 
 748:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 748 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:740:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 740:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 740 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 744:sieve_extend.c **** 
 1356              		.loc 1 744 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 746:sieve_extend.c **** 
 1358              		.loc 1 746 5 view .LVU399
 1359              		.loc 1 748 5 view .LVU400
 1360              	# sieve_extend.c:748:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 748 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 749:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 750:sieve_extend.c **** 
 751:sieve_extend.c ****         #pragma unroll
 752:sieve_extend.c ****         #pragma ivdep
 753:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 754:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 755:sieve_extend.c ****         }
 756:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 757:sieve_extend.c ****     }
 758:sieve_extend.c **** 
 759:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 759 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 759 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 759 5 discriminator 1 view .LVU404
 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
GAS LISTING /tmp/ccH5HMHD.s 			page 44


 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.171
 1397 07fa 4801FA   		add	rdx, rdi	# vectp.172, bitarray
 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.173,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
 760:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 760 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 760 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 760 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 760 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 760 54 view .LVU409
 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1414      1CF7
 1415              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 760 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 760 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccH5HMHD.s 			page 45


 1422              		.loc 1 759 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 759 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.173,
 1426              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 760 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 760 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 760 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 760 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 760 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 760 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 760 99 view .LVU420
 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 760 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1448      E3
 1449              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 760 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.173,
 1453              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 759 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 760 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 759 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1461              		.loc 1 759 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 760 9 view .LVU427
 1464              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 760 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 760 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
GAS LISTING /tmp/ccH5HMHD.s 			page 46


 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 760 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 760 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 760 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 760 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 759 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 759 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1491              	.LVL78:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 759 12 is_stmt 1 view .LVU436
 1493              	.L67:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 759 12 is_stmt 0 view .LVU437
 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.173
 1496 0897 4929D1   		sub	r9, rdx	# niters.174, prolog_loop_niters.173
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.184,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.175, niters.174
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.175,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.173
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.173
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:744:     copy_word++;
 744:sieve_extend.c **** 
 1505              		.loc 1 744 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.222
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.180,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.189,
 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 47


 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 760 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 760 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.180_10, index: ivtmp.222_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.222,
 1531      00
 1532              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 760 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.184_17, index: ivtmp.222_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 760 54 view .LVU442
 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1085, _184
 1538              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 760 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.186, tmp1086, _182
 1541              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 760 72 view .LVU444
 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.187, vect__62.182, vect__67.186
 1544              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 760 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], vect
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 759 48 is_stmt 1 view .LVU446
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 759 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 760 9 view .LVU448
 1551              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 760 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1553      16
 1554              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 760 99 view .LVU450
 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1556      0C10
 1557              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 760 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1087, _184
 1560              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 760 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.186, tmp1088, _182
 1563              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 760 72 view .LVU453
GAS LISTING /tmp/ccH5HMHD.s 			page 48


 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.187, vect__62.182, vect__67.186
 1565      DA
 1566              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 760 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1568      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 759 48 is_stmt 1 view .LVU455
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 759 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.222,
 1572              	.L195:
 1573              		.loc 1 760 9 view .LVU457
 1574              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 760 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1576      16
 1577              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 760 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1579      3410
 1580              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 760 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.182, tmp1089, _184
 1583              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 760 99 view .LVU461
 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.186, tmp1090, _182
 1586              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 760 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.187, vect__62.182, vect__67.186
 1588      F7
 1589              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 760 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1591      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 759 48 is_stmt 1 view .LVU464
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 759 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.222,
 1595              	.L194:
 1596              		.loc 1 760 9 view .LVU466
 1597              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 760 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1599      16
 1600              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 760 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1602      1C10
 1603              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 760 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.182, tmp1091, _184
 1606              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 760 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.186, tmp1092, _182
 1609              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccH5HMHD.s 			page 49


 1610              		.loc 1 760 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1612              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 760 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1614      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 759 48 is_stmt 1 view .LVU473
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 759 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.222,
 1618              	.L193:
 1619              		.loc 1 760 9 view .LVU475
 1620              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 760 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1622      16
 1623              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 760 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1625      1410
 1626              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 760 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.182, tmp1093, _184
 1629              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 760 99 view .LVU479
 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.186, tmp1094, _182
 1632              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 760 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.187, vect__62.182, vect__67.186
 1634      E3
 1635              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 760 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1637      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 759 48 is_stmt 1 view .LVU482
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 759 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.222,
 1641              	.L192:
 1642              		.loc 1 760 9 view .LVU484
 1643              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 760 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1645      16
 1646              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 760 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1648      3C10
 1649              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 760 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.182, tmp1095, _184
 1652              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 760 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.186, tmp1096, _182
 1655              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccH5HMHD.s 			page 50


 1656              		.loc 1 760 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.187, vect__62.182, vect__67.186
 1658              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 760 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1660      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 759 48 is_stmt 1 view .LVU491
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 759 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.222,
 1664              	.L191:
 1665              		.loc 1 760 9 view .LVU493
 1666              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 760 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1668      16
 1669              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 760 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1671      1C10
 1672              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 760 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.182, tmp1097, _184
 1675              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 760 99 view .LVU497
 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.186, tmp1098, _182
 1678              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 760 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.187, vect__62.182, vect__67.186
 1681              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1682              		.loc 1 760 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1683      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 759 48 is_stmt 1 view .LVU500
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 759 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.222,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 760 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU503
 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1693      16
 1694              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 760 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1696      1C10
 1697              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 760 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.182, tmp1015, _184
 1700              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 760 99 discriminator 2 view .LVU506
GAS LISTING /tmp/ccH5HMHD.s 			page 51


 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.186, tmp1016, _182
 1703              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 760 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.187, vect__62.182, vect__67.186
 1705      EC
 1706              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 760 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1708      11
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU509
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 759 12 discriminator 2 view .LVU510
 1711              		.loc 1 760 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1714      1620
 1715              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 760 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1717      741020
 1718              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 760 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.182, tmp1017, _184
 1721              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 760 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.186, tmp1018, _182
 1724              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 760 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.187, vect__62.182, vect__67.186
 1727              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 760 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1729      1120
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU518
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 759 12 discriminator 2 view .LVU519
 1732              		.loc 1 760 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.180_10, index: ivtmp.222_467, off
 1735      1640
 1736              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 760 99 discriminator 2 view .LVU522
 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1738      5C1040
 1739              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 760 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.182, tmp1019, _184
 1742              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 760 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.186, tmp1020, _182
 1745              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 760 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.187, vect__62.182, vect__67.186
GAS LISTING /tmp/ccH5HMHD.s 			page 52


 1747      C8
 1748              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 760 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1750      1140
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU527
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 759 12 discriminator 2 view .LVU528
 1753              		.loc 1 760 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1756      1660
 1757              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 760 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1759      641060
 1760              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 760 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.182, tmp1021, _184
 1763              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 760 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.186, tmp1022, _182
 1766              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1767              		.loc 1 760 72 discriminator 2 view .LVU534
 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.187, vect__62.182, vect__67.186
 1768      F5
 1769              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 760 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1771      1160
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU536
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 759 12 discriminator 2 view .LVU537
 1774              		.loc 1 760 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 760 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1780      94108000 
 1780      0000
 1781              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 760 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.182, tmp1023, _184
 1784              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 760 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.186, tmp1024, _182
 1787              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 760 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.187, vect__62.182, vect__67.186
 1790              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccH5HMHD.s 			page 53


 1791              		.loc 1 760 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1792      11800000 
 1792      00
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU545
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 759 12 discriminator 2 view .LVU546
 1795              		.loc 1 760 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 760 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 760 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1025, _184
 1805              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 760 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.186, tmp1026, _182
 1808              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1809              		.loc 1 760 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.187, vect__62.182, vect__67.186
 1810      D1
 1811              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 760 29 discriminator 2 view .LVU553
 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1813      11A00000 
 1813      00
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU554
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 759 12 discriminator 2 view .LVU555
 1816              		.loc 1 760 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 760 99 discriminator 2 view .LVU558
 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.184_17, index: ivtmp.222_467, of
 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 760 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.182, tmp1027, _184
 1826              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 760 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.186, tmp1028, _182
 1829              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 760 72 discriminator 2 view .LVU561
GAS LISTING /tmp/ccH5HMHD.s 			page 54


 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.187, vect__62.182, vect__67.186
 1831      FE
 1832              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 760 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1834      11C00000 
 1834      00
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU563
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 759 12 discriminator 2 view .LVU564
 1837              		.loc 1 760 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 760 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 760 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 760 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1029, _184
 1847              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 760 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.186, tmp1030, _182
 1850              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 760 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1853              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 760 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1855      11E00000 
 1855      00
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 759 48 is_stmt 1 discriminator 2 view .LVU572
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 759 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.222,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.176,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.177, niters_vector_mult_vf.176
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.176
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 760 9 view .LVU574
GAS LISTING /tmp/ccH5HMHD.s 			page 55


 1871              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 759 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 759 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 760 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 760 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 760 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 760 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1890              		.loc 1 760 72 view .LVU581
 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 759 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 759 12 view .LVU583
 1895              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 759 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 760 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 759 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 760 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1905      4CCF08
 1906              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 760 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 760 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 760 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
GAS LISTING /tmp/ccH5HMHD.s 			page 56


 1915              	.LVL81:
 1916              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 760 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 759 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 759 12 view .LVU593
 1923              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 759 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 760 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 760 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 760 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1935              	.LVL84:
 1936              		.loc 1 760 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 760 72 view .LVU599
 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 759 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 759 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 759 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
 1950      00
 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 761:sieve_extend.c ****     }
 762:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 762 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:762:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 762 25 is_stmt 0 view .LVU604
GAS LISTING /tmp/ccH5HMHD.s 			page 57


 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:764: }
 763:sieve_extend.c **** 
 764:sieve_extend.c **** }
 1960              		.loc 1 764 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB319:
 749:sieve_extend.c **** 
 1977              		.loc 1 749 9 is_stmt 1 view .LVU606
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 753 9 view .LVU607
 1979              	.LBB320:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 753 14 view .LVU608
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 753 40 view .LVU609
 1982              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 753 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 753 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
GAS LISTING /tmp/ccH5HMHD.s 			page 58


 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 753 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.192,
 2020 0c56 7468     		je	.L58	#,
 754:sieve_extend.c ****         }
 2021              		.loc 1 754 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2023              		.loc 1 754 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
 2026              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2027              		.loc 1 754 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2031              		.loc 1 754 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.192,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 753 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2037              		.loc 1 753 40 view .LVU618
 2038              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 753 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 754:sieve_extend.c ****         }
 2042              		.loc 1 754 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccH5HMHD.s 			page 59


 754:sieve_extend.c ****         }
 2044              		.loc 1 754 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2047              		.loc 1 754 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2050              		.loc 1 754 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.192,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 753 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 753 40 view .LVU625
 2057              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 753 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
 2059      0000
 2060 0c9c 7522     		jne	.L58	#,
 754:sieve_extend.c ****         }
 2061              		.loc 1 754 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2063              		.loc 1 754 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2066              		.loc 1 754 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2069              		.loc 1 754 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2073              		.loc 1 754 80 view .LVU631
 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 753 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2079              		.loc 1 754 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
GAS LISTING /tmp/ccH5HMHD.s 			page 60


 2080      18
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 753 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 753 40 view .LVU635
 2084              	.L58:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 753 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.193, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.198,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.192
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.202,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.193, prolog_loop_niters.192
 2093              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 753 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.241
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.194, niters.193
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.194,
 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.207,
 2100 0ced 49C1E505 		sal	r13, 5	# bnd.194,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
 2116 0d31 742D     		je	.L183	#,
 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 754:sieve_extend.c ****         }
 2120              		.loc 1 754 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2122              		.loc 1 754 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.198_325, index: ivtmp.241_483, off
GAS LISTING /tmp/ccH5HMHD.s 			page 61


 2123      2412
 2124              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2125              		.loc 1 754 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2126      3413
 2127              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2128              		.loc 1 754 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp1073, _184
 2130              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2131              		.loc 1 754 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.204, tmp1074, _182
 2133              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2134              		.loc 1 754 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.205, vect__49.200, vect__54.204
 2135      F7
 2136              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2137              		.loc 1 754 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2138      3411
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2139              		.loc 1 753 58 is_stmt 1 view .LVU645
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 753 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.241,
 2142              	.L183:
 754:sieve_extend.c ****         }
 2143              		.loc 1 754 13 view .LVU647
 2144              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2145              		.loc 1 754 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2146      1412
 2147              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2148              		.loc 1 754 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2149      2413
 2150              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2151              		.loc 1 754 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.200, tmp1075, _184
 2153              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2154              		.loc 1 754 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.204, tmp1076, _182
 2156              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2157              		.loc 1 754 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.205, vect__49.200, vect__54.204
 2159              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2160              		.loc 1 754 35 view .LVU653
GAS LISTING /tmp/ccH5HMHD.s 			page 62


 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2161      0411
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 753 58 is_stmt 1 view .LVU654
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 753 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.241,
 2165              	.L182:
 754:sieve_extend.c ****         }
 2166              		.loc 1 754 13 view .LVU656
 2167              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2168              		.loc 1 754 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2169      0C12
 2170              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2171              		.loc 1 754 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2172      1C13
 2173              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2174              		.loc 1 754 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.200, tmp1077, _184
 2176              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2177              		.loc 1 754 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.204, tmp1078, _182
 2179              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2180              		.loc 1 754 80 view .LVU661
 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2181      E3
 2182              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2183              		.loc 1 754 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2184      2411
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 753 58 is_stmt 1 view .LVU663
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 753 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.241,
 2188              	.L181:
 754:sieve_extend.c ****         }
 2189              		.loc 1 754 13 view .LVU665
 2190              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2191              		.loc 1 754 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2192      2C12
 2193              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2194              		.loc 1 754 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2195      3C13
 2196              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccH5HMHD.s 			page 63


 754:sieve_extend.c ****         }
 2197              		.loc 1 754 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.200, tmp1079, _184
 2199              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2200              		.loc 1 754 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.204, tmp1080, _182
 2202              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2203              		.loc 1 754 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.205, vect__49.200, vect__54.204
 2205              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2206              		.loc 1 754 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2207      1411
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 753 58 is_stmt 1 view .LVU672
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 753 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.241,
 2211              	.L180:
 754:sieve_extend.c ****         }
 2212              		.loc 1 754 13 view .LVU674
 2213              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2214              		.loc 1 754 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2215      3C12
 2216              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2217              		.loc 1 754 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2218      2C13
 2219              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2220              		.loc 1 754 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.200, tmp1081, _184
 2222              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2223              		.loc 1 754 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.204, tmp1082, _182
 2225              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2226              		.loc 1 754 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.205, vect__49.200, vect__54.204
 2227      C8
 2228              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2229              		.loc 1 754 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2230      0C11
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 753 58 is_stmt 1 view .LVU681
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 753 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.241,
GAS LISTING /tmp/ccH5HMHD.s 			page 64


 2234              	.L179:
 754:sieve_extend.c ****         }
 2235              		.loc 1 754 13 view .LVU683
 2236              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2237              		.loc 1 754 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2238      1412
 2239              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2240              		.loc 1 754 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2241      1C13
 2242              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2243              		.loc 1 754 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.200, tmp1083, _184
 2245              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2246              		.loc 1 754 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.204, tmp1084, _182
 2248              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2249              		.loc 1 754 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.205, vect__49.200, vect__54.204
 2250      EC
 2251              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2252              		.loc 1 754 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2253      2C11
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 753 58 is_stmt 1 view .LVU690
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 753 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.241,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 754:sieve_extend.c ****         }
 2260              		.loc 1 754 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2262              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2263      3412
 2264              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2265              		.loc 1 754 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.202_332, index: ivtmp.241_483, offse
 2266      3413
 2267              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2268              		.loc 1 754 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.200, tmp980, _184
 2270              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccH5HMHD.s 			page 65


 754:sieve_extend.c ****         }
 2271              		.loc 1 754 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.204, tmp981, _182
 2273              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2274              		.loc 1 754 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.205, vect__49.200, vect__54.204
 2276              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2277              		.loc 1 754 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2278      3C11
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU699
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 753 40 discriminator 3 view .LVU700
 754:sieve_extend.c ****         }
 2281              		.loc 1 754 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2283              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2284      641220
 2285              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2286              		.loc 1 754 109 discriminator 3 view .LVU703
 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2287      6C1320
 2288              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2289              		.loc 1 754 62 discriminator 3 view .LVU704
 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.200, tmp982, _184
 2291              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2292              		.loc 1 754 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.204, tmp983, _182
 2294              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2295              		.loc 1 754 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.205, vect__49.200, vect__54.204
 2296      D1
 2297              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2298              		.loc 1 754 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2299      541120
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2300              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU708
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 753 40 discriminator 3 view .LVU709
 754:sieve_extend.c ****         }
 2302              		.loc 1 754 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2304              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2305      5C1240
GAS LISTING /tmp/ccH5HMHD.s 			page 66


 2306              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2307              		.loc 1 754 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2308      5C1340
 2309              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2310              		.loc 1 754 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.200, tmp984, _184
 2312              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2313              		.loc 1 754 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.204, tmp985, _182
 2315              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2316              		.loc 1 754 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.205, vect__49.200, vect__54.204
 2317      F5
 2318              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2319              		.loc 1 754 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2320      741140
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU717
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2322              		.loc 1 753 40 discriminator 3 view .LVU718
 754:sieve_extend.c ****         }
 2323              		.loc 1 754 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2325              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2326      7C1260
 2327              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2328              		.loc 1 754 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2329      541360
 2330              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2331              		.loc 1 754 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.200, tmp986, _184
 2333              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2334              		.loc 1 754 109 discriminator 3 view .LVU723
 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.204, tmp987, _182
 2336              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2337              		.loc 1 754 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.205, vect__49.200, vect__54.204
 2339              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2340              		.loc 1 754 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B],
 2341      641160
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccH5HMHD.s 			page 67


 2342              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU726
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 753 40 discriminator 3 view .LVU727
 754:sieve_extend.c ****         }
 2344              		.loc 1 754 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2346              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2349              		.loc 1 754 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2352              		.loc 1 754 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.200, tmp988, _184
 2354              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2355              		.loc 1 754 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.204, tmp989, _182
 2357              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2358              		.loc 1 754 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.205, vect__49.200, vect__54.204
 2359      DA
 2360              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2361              		.loc 1 754 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2362      9C118000 
 2362      0000
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU735
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 753 40 discriminator 3 view .LVU736
 754:sieve_extend.c ****         }
 2365              		.loc 1 754 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2367              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.198_325, index: ivtmp.241_483, o
 2368      A412A000 
 2368      0000
 2369              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2370              		.loc 1 754 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2373              		.loc 1 754 62 discriminator 3 view .LVU740
GAS LISTING /tmp/ccH5HMHD.s 			page 68


 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp990, _184
 2375              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2376              		.loc 1 754 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.204, tmp991, _182
 2378              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2379              		.loc 1 754 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.205, vect__49.200, vect__54.204
 2380      FE
 2381              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2382              		.loc 1 754 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2383      BC11A000 
 2383      0000
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU744
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 753 40 discriminator 3 view .LVU745
 754:sieve_extend.c ****         }
 2386              		.loc 1 754 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2388              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU747
 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2391              		.loc 1 754 109 discriminator 3 view .LVU748
 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2394              		.loc 1 754 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.200, tmp992, _184
 2396              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2397              		.loc 1 754 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.204, tmp993, _182
 2399              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2400              		.loc 1 754 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.205, vect__49.200, vect__54.204
 2402              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2403              		.loc 1 754 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2404      8411C000 
 2404      0000
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU753
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 753 40 discriminator 3 view .LVU754
 754:sieve_extend.c ****         }
GAS LISTING /tmp/ccH5HMHD.s 			page 69


 2407              		.loc 1 754 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2409              		.loc 1 754 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2412              		.loc 1 754 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.202_332, index: ivtmp.241_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2415              		.loc 1 754 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.200, tmp994, _184
 2417              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2418              		.loc 1 754 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.204, tmp995, _182
 2420              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2421              		.loc 1 754 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2422      E3
 2423              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2424              		.loc 1 754 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2425      A411E000 
 2425      0000
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 753 58 is_stmt 1 discriminator 3 view .LVU762
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 753 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.241,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.195, niters.193
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.195,
 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.193, niters_vector_mult_vf.195
 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.196,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 754:sieve_extend.c ****         }
 2440              		.loc 1 754 13 view .LVU764
 2441              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2442              		.loc 1 754 58 is_stmt 0 view .LVU765
GAS LISTING /tmp/ccH5HMHD.s 			page 70


 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2445              		.loc 1 754 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2448              		.loc 1 754 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2451              		.loc 1 754 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2454              		.loc 1 754 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2457              		.loc 1 754 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2460              		.loc 1 753 58 is_stmt 1 view .LVU771
 2461              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 753 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
 2464              	.LVL93:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 753 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 753 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 754:sieve_extend.c ****         }
 2470              		.loc 1 754 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2472              		.loc 1 754 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2474              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 753 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2478              		.loc 1 754 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2481              		.loc 1 754 21 view .LVU779
GAS LISTING /tmp/ccH5HMHD.s 			page 71


 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2485              		.loc 1 754 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2488              		.loc 1 754 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2491              		.loc 1 754 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 753 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2497              		.loc 1 754 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2499              		.loc 1 753 58 is_stmt 1 view .LVU785
 2500              	.LVL95:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 753 40 view .LVU786
 2502              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 753 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 754:sieve_extend.c ****         }
 2505              		.loc 1 754 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2507              		.loc 1 754 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2510              		.loc 1 754 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2513              		.loc 1 754 109 view .LVU791
 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2517              		.loc 1 754 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
GAS LISTING /tmp/ccH5HMHD.s 			page 72


 2521              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2522              		.loc 1 754 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 753 58 is_stmt 1 view .LVU794
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 753 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 753 40 is_stmt 0 view .LVU796
 2530              	.LBE320:
 756:sieve_extend.c ****     }
 2531              		.loc 1 756 9 is_stmt 1 view .LVU797
 756:sieve_extend.c ****     }
 2532              		.loc 1 756 39 view .LVU798
 2533              	.LVL98:
 756:sieve_extend.c ****     }
 2534              		.loc 1 756 39 is_stmt 0 view .LVU799
 2535              	.LBE319:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 759 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2537      F8
 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB322:
 2541              	# sieve_extend.c:756:         source_word += loop_distance; copy_word+= loop_distance;
 756:sieve_extend.c ****     }
 2542              		.loc 1 756 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 756:sieve_extend.c ****     }
 2548              		.loc 1 756 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.214, bitarray
 2551              	.LBE322:
 2552              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2553              		.loc 1 760 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2557              		.loc 1 760 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
GAS LISTING /tmp/ccH5HMHD.s 			page 73


 2558      24F0
 2559              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 759 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2564              		.loc 1 760 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2568              		.loc 1 760 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 760:sieve_extend.c ****     }
 2573              		.loc 1 760 9 is_stmt 1 view .LVU808
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 759 48 view .LVU809
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 759 12 view .LVU810
 2576              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 759 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.214,
 2580 103f 0F8266FB 		jb	.L73	#,
 2580      FFFF
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 759 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 760:sieve_extend.c ****     }
 2596              		.loc 1 760 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2598              		.loc 1 760 54 is_stmt 0 view .LVU814
GAS LISTING /tmp/ccH5HMHD.s 			page 74


 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2601              		.loc 1 760 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2605              		.loc 1 760 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2609              		.loc 1 760 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.214,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 759 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2615              		.loc 1 759 57 is_stmt 0 view .LVU819
 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 759 12 is_stmt 1 view .LVU820
 2618              	.L203:
 760:sieve_extend.c ****     }
 2619              		.loc 1 760 9 view .LVU821
 2620              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2621              		.loc 1 760 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2625              		.loc 1 760 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 760:sieve_extend.c ****     }
 2628              		.loc 1 760 54 view .LVU824
 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2631              		.loc 1 760 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.214,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 759 48 is_stmt 1 view .LVU826
GAS LISTING /tmp/ccH5HMHD.s 			page 75


 2636              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 759 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 759 12 is_stmt 1 view .LVU828
 2640              	.L202:
 760:sieve_extend.c ****     }
 2641              		.loc 1 760 9 view .LVU829
 2642              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2643              		.loc 1 760 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2647              		.loc 1 760 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2651              		.loc 1 760 72 view .LVU832
 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.214,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 759 48 is_stmt 1 view .LVU833
 2656              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 759 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 759 12 is_stmt 1 view .LVU835
 2660              	.L201:
 760:sieve_extend.c ****     }
 2661              		.loc 1 760 9 view .LVU836
 2662              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2663              		.loc 1 760 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2665      5608
 2666              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2667              		.loc 1 760 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2671              		.loc 1 760 72 view .LVU839
GAS LISTING /tmp/ccH5HMHD.s 			page 76


 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.214,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 759 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 759 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 759 12 is_stmt 1 view .LVU842
 2680              	.L200:
 760:sieve_extend.c ****     }
 2681              		.loc 1 760 9 view .LVU843
 2682              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2683              		.loc 1 760 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2687              		.loc 1 760 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2688      24F0
 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2691              		.loc 1 760 72 view .LVU846
 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.214,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 759 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 759 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 759 12 is_stmt 1 view .LVU849
 2700              	.L199:
 760:sieve_extend.c ****     }
 2701              		.loc 1 760 9 view .LVU850
 2702              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2703              		.loc 1 760 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2707              		.loc 1 760 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
GAS LISTING /tmp/ccH5HMHD.s 			page 77


 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2711              		.loc 1 760 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.214,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 759 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 759 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 759 12 is_stmt 1 view .LVU856
 2720              	.L198:
 760:sieve_extend.c ****     }
 2721              		.loc 1 760 9 view .LVU857
 2722              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2723              		.loc 1 760 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2725      7608
 2726              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2727              		.loc 1 760 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2731              		.loc 1 760 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.214,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 759 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 759 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2739              		.loc 1 759 12 is_stmt 1 view .LVU863
 2740              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 759 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 759 5 view .LVU865
GAS LISTING /tmp/ccH5HMHD.s 			page 78


 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 760:sieve_extend.c ****     }
 2749              		.loc 1 760 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2751              		.loc 1 760 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2754              		.loc 1 760 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2757              		.loc 1 760 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.214,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 759 48 is_stmt 1 view .LVU870
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 759 12 view .LVU871
 760:sieve_extend.c ****     }
 2763              		.loc 1 760 9 view .LVU872
 2764              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2765              		.loc 1 760 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2766      4EC8
 2767              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2768              		.loc 1 760 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2771              		.loc 1 760 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 759 48 is_stmt 1 view .LVU876
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2775              		.loc 1 759 12 view .LVU877
 760:sieve_extend.c ****     }
 2776              		.loc 1 760 9 view .LVU878
 2777              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2778              		.loc 1 760 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2781              		.loc 1 760 99 view .LVU880
GAS LISTING /tmp/ccH5HMHD.s 			page 79


 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2784              		.loc 1 760 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 759 48 is_stmt 1 view .LVU882
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 759 12 view .LVU883
 760:sieve_extend.c ****     }
 2789              		.loc 1 760 9 view .LVU884
 2790              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2791              		.loc 1 760 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2794              		.loc 1 760 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2797              		.loc 1 760 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2800              		.loc 1 759 48 is_stmt 1 view .LVU888
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 759 12 view .LVU889
 760:sieve_extend.c ****     }
 2802              		.loc 1 760 9 view .LVU890
 2803              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2804              		.loc 1 760 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2807              		.loc 1 760 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
 2809              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2810              		.loc 1 760 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 759 48 is_stmt 1 view .LVU894
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 759 12 view .LVU895
 760:sieve_extend.c ****     }
GAS LISTING /tmp/ccH5HMHD.s 			page 80


 2815              		.loc 1 760 9 view .LVU896
 2816              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2817              		.loc 1 760 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2820              		.loc 1 760 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2823              		.loc 1 760 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 759 48 is_stmt 1 view .LVU900
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 759 12 view .LVU901
 760:sieve_extend.c ****     }
 2828              		.loc 1 760 9 view .LVU902
 2829              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2830              		.loc 1 760 99 is_stmt 0 view .LVU903
 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2833              		.loc 1 760 54 view .LVU904
 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2836              		.loc 1 760 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 759 48 is_stmt 1 view .LVU906
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 759 12 view .LVU907
 760:sieve_extend.c ****     }
 2841              		.loc 1 760 9 view .LVU908
 2842              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2843              		.loc 1 760 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
 2846              		.loc 1 760 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:760:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 760:sieve_extend.c ****     }
GAS LISTING /tmp/ccH5HMHD.s 			page 81


 2849              		.loc 1 760 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 759 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 759 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 759 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:759:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 759:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 759 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
 2865              	.L260:
 734:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 734 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:734:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 734:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 734 29 is_stmt 0 view .LVU917
 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:736:                                 & keepmask(copy_start) & chopmask(destination
 736:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 736 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:734:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 734:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 734 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 737:sieve_extend.c ****     }
 2879              		.loc 1 737 9 is_stmt 1 view .LVU920
 2880              	# sieve_extend.c:764: }
 2881              		.loc 1 764 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 764 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
GAS LISTING /tmp/ccH5HMHD.s 			page 82


 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 764 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 764 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
 2913              	# sieve_extend.c:730:     register counter_t source_word = wordindex(source_start);
 730:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 730 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:744:     copy_word++;
 744:sieve_extend.c **** 
 2917              		.loc 1 744 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 744:sieve_extend.c **** 
 2923              		.loc 1 744 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB323:
 2926              	.LBB321:
 2927              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2928              		.loc 1 754 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.232
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
GAS LISTING /tmp/ccH5HMHD.s 			page 83


 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 754:sieve_extend.c ****         }
 2952              		.loc 1 754 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2954              		.loc 1 754 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2956      2B
 2957              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2958              		.loc 1 754 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2962              		.loc 1 754 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 753 58 is_stmt 1 view .LVU933
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 753 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.232,
 2968              	.L190:
 754:sieve_extend.c ****         }
 2969              		.loc 1 754 13 view .LVU935
 2970              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2971              		.loc 1 754 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 754:sieve_extend.c ****         }
 2974              		.loc 1 754 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
GAS LISTING /tmp/ccH5HMHD.s 			page 84


 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2978              		.loc 1 754 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2982              		.loc 1 754 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 753 58 is_stmt 1 view .LVU940
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 753 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.232,
 2988              	.L189:
 754:sieve_extend.c ****         }
 2989              		.loc 1 754 13 view .LVU942
 2990              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2991              		.loc 1 754 62 is_stmt 0 view .LVU943
 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2995              		.loc 1 754 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 2999              		.loc 1 754 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 753 58 is_stmt 1 view .LVU946
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3003              		.loc 1 753 40 view .LVU947
 3004 1354 4983C308 		add	r11, 8	# ivtmp.232,
 3005              	.L188:
 754:sieve_extend.c ****         }
 3006              		.loc 1 754 13 view .LVU948
 3007              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3008              		.loc 1 754 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
GAS LISTING /tmp/ccH5HMHD.s 			page 85


 3010      33
 3011              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3012              		.loc 1 754 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3016              		.loc 1 754 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 753 58 is_stmt 1 view .LVU952
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 753 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.232,
 3022              	.L187:
 754:sieve_extend.c ****         }
 3023              		.loc 1 754 13 view .LVU954
 3024              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3025              		.loc 1 754 62 is_stmt 0 view .LVU955
 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3029              		.loc 1 754 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3033              		.loc 1 754 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 753 58 is_stmt 1 view .LVU958
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 753 40 view .LVU959
 3038 1397 4983C308 		add	r11, 8	# ivtmp.232,
 3039              	.L186:
 754:sieve_extend.c ****         }
 3040              		.loc 1 754 13 view .LVU960
 3041              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3042              		.loc 1 754 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
GAS LISTING /tmp/ccH5HMHD.s 			page 86


 3045              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3046              		.loc 1 754 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3050              		.loc 1 754 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 753 58 is_stmt 1 view .LVU964
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 753 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.232,
 3056              	.L185:
 754:sieve_extend.c ****         }
 3057              		.loc 1 754 13 view .LVU966
 3058              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3059              		.loc 1 754 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3060      24F0
 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3063              		.loc 1 754 109 view .LVU968
 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3067              		.loc 1 754 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 753 58 is_stmt 1 view .LVU970
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 753 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.232,
 3073              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 753 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 753 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
GAS LISTING /tmp/ccH5HMHD.s 			page 87


 3080      F0
 3081              	.L64:
 754:sieve_extend.c ****         }
 3082              		.loc 1 754 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3084              		.loc 1 754 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3087              		.loc 1 754 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3090              		.loc 1 754 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 753 58 is_stmt 1 view .LVU978
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 753 40 view .LVU979
 754:sieve_extend.c ****         }
 3096              		.loc 1 754 13 view .LVU980
 3097              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3098              		.loc 1 754 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3099      4B08
 3100              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3101              		.loc 1 754 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3104              		.loc 1 754 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.232,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.232,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3109              		.loc 1 753 58 is_stmt 1 view .LVU984
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 753 40 view .LVU985
 754:sieve_extend.c ****         }
 3111              		.loc 1 754 13 view .LVU986
 3112              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3113              		.loc 1 754 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccH5HMHD.s 			page 88


 754:sieve_extend.c ****         }
 3116              		.loc 1 754 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3119              		.loc 1 754 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 753 58 is_stmt 1 view .LVU990
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 753 40 view .LVU991
 754:sieve_extend.c ****         }
 3124              		.loc 1 754 13 view .LVU992
 3125              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3126              		.loc 1 754 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3129              		.loc 1 754 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3130      5D08
 3131              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3132              		.loc 1 754 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.232,
 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.232,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 753 58 is_stmt 1 view .LVU996
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 753 40 view .LVU997
 754:sieve_extend.c ****         }
 3139              		.loc 1 754 13 view .LVU998
 3140              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3141              		.loc 1 754 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3144              		.loc 1 754 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3147              		.loc 1 754 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccH5HMHD.s 			page 89


 3150              		.loc 1 753 58 is_stmt 1 view .LVU1002
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 753 40 view .LVU1003
 754:sieve_extend.c ****         }
 3152              		.loc 1 754 13 view .LVU1004
 3153              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3154              		.loc 1 754 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3157              		.loc 1 754 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3160              		.loc 1 754 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.232,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.232,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 753 58 is_stmt 1 view .LVU1008
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3166              		.loc 1 753 40 view .LVU1009
 754:sieve_extend.c ****         }
 3167              		.loc 1 754 13 view .LVU1010
 3168              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3169              		.loc 1 754 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3172              		.loc 1 754 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3175              		.loc 1 754 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3178              		.loc 1 753 58 is_stmt 1 view .LVU1014
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 753 40 view .LVU1015
 754:sieve_extend.c ****         }
 3180              		.loc 1 754 13 view .LVU1016
 3181              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3182              		.loc 1 754 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccH5HMHD.s 			page 90


 754:sieve_extend.c ****         }
 3185              		.loc 1 754 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3188              		.loc 1 754 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 753 58 is_stmt 1 view .LVU1020
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 753 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.232,
 3194              	# sieve_extend.c:753:         for (register counter_t i = 0; i <loop_distance; i++) {
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 753 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
 754:sieve_extend.c ****         }
 3201              		.loc 1 754 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3203              		.loc 1 754 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.198_325, index: ivtmp.241_483, offset: 
 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.241,
 3205      00
 3206              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3207              		.loc 1 754 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.202_332, index: ivtmp.241_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3210              		.loc 1 754 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.200, tmp1071, _184
 3212              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3213              		.loc 1 754 109 view .LVU1027
 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.204, tmp1072, _182
 3215              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3216              		.loc 1 754 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.205, vect__49.200, vect__54.204
 3217      DA
 3218              	# sieve_extend.c:754:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 754:sieve_extend.c ****         }
 3219              		.loc 1 754 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], vect
 3220      19
GAS LISTING /tmp/ccH5HMHD.s 			page 91


 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 753 58 is_stmt 1 view .LVU1030
 753:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 753 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE321:
 3225              	.LBE323:
 3226              		.cfi_endproc
 3227              	.LFE69:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB81:
 765:sieve_extend.c **** 
 766:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 767:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 768:sieve_extend.c ****    
 769:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 770:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 771:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 772:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 773:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 774:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 777:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 778:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 779:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 780:sieve_extend.c ****         return; // rapid exit for one word variant
 781:sieve_extend.c ****     }
 782:sieve_extend.c **** 
 783:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 784:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 785:sieve_extend.c ****                                 & keepmask(copy_start);
 786:sieve_extend.c ****     
 787:sieve_extend.c ****     copy_word++;
 788:sieve_extend.c **** 
 789:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 790:sieve_extend.c **** 
 791:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 792:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 793:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 794:sieve_extend.c **** 
 795:sieve_extend.c **** }
 796:sieve_extend.c **** 
 797:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 798:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 799:sieve_extend.c **** 
 800:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 801:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 802:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 803:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/ccH5HMHD.s 			page 92


 804:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 805:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 806:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 807:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 808:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 809:sieve_extend.c **** 
 810:sieve_extend.c ****     copy_word++;
 811:sieve_extend.c ****     source_word++;
 812:sieve_extend.c **** 
 813:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 814:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 815:sieve_extend.c ****     source_word += distance;
 816:sieve_extend.c ****     copy_word += distance;
 817:sieve_extend.c **** 
 818:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 819:sieve_extend.c **** 
 820:sieve_extend.c ****     #pragma ivdep
 821:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 822:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 823:sieve_extend.c ****     }
 824:sieve_extend.c **** 
 825:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 826:sieve_extend.c **** 
 827:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 828:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     #pragma ivdep
 831:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 832:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 833:sieve_extend.c **** 
 834:sieve_extend.c ****     #pragma ivdep
 835:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 836:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 837:sieve_extend.c **** 
 838:sieve_extend.c **** 
 839:sieve_extend.c ****  }
 840:sieve_extend.c **** 
 841:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 842:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 843:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 844:sieve_extend.c ****         return; // rapid exit for small sizes
 845:sieve_extend.c ****     }
 846:sieve_extend.c **** 
 847:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 848:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 849:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 850:sieve_extend.c **** 
 851:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 852:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 853:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 854:sieve_extend.c **** }
 855:sieve_extend.c **** 
 856:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 857:sieve_extend.c ****     counter_t prime = prime_start;
 858:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 859:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 860:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
GAS LISTING /tmp/ccH5HMHD.s 			page 93


 861:sieve_extend.c **** 
 862:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 863:sieve_extend.c ****     
 864:sieve_extend.c ****     while (start <= block_stop) {
 865:sieve_extend.c ****         step  = prime * 2 + 1;
 866:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 867:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 868:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 869:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 870:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 871:sieve_extend.c ****     }
 872:sieve_extend.c ****     
 873:sieve_extend.c ****     while (start <= block_stop) {
 874:sieve_extend.c ****         step  = prime * 2 + 1;
 875:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 876:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 877:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 878:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 879:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 880:sieve_extend.c ****     }
 881:sieve_extend.c **** 
 882:sieve_extend.c **** //     counter_t start1 = 0; // save value
 883:sieve_extend.c **** //     counter_t step1 = 0; // save value
 884:sieve_extend.c **** //     while (start <= block_stop) {
 885:sieve_extend.c **** //         step  = prime * 2 + 1;
 886:sieve_extend.c **** //         if (step > 64) break;
 887:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 888:sieve_extend.c **** //         start1 = start; // save value
 889:sieve_extend.c **** //         step1 = step; // save value
 890:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 891:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 892:sieve_extend.c **** //         step  = prime * 2 + 1;
 893:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 894:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 895:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 896:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 897:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 898:sieve_extend.c **** //     }
 899:sieve_extend.c **** 
 900:sieve_extend.c ****     while (start <= block_stop) {
 901:sieve_extend.c ****         step  = prime * 2 + 1;
 902:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 903:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 904:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 906:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 907:sieve_extend.c ****     }
 908:sieve_extend.c **** 
 909:sieve_extend.c ****     while (start <= block_stop) {
 910:sieve_extend.c ****         step  = prime * 2 + 1;
 911:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 912:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 913:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 914:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 915:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 916:sieve_extend.c ****     }
 917:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 94


 918:sieve_extend.c ****     while (start <= block_stop) {
 919:sieve_extend.c ****         step  = prime * 2 + 1;
 920:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 921:sieve_extend.c ****         if likely(start <= block_stop)
 922:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 923:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 924:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 925:sieve_extend.c ****     }
 926:sieve_extend.c **** }
 927:sieve_extend.c **** 
 928:sieve_extend.c **** struct block {
 929:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 930:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 931:sieve_extend.c ****     counter_t prime; // next prime to be striped
 932:sieve_extend.c **** };
 933:sieve_extend.c **** 
 934:sieve_extend.c **** // returns prime that could not be handled:
 935:sieve_extend.c **** // start is too large
 936:sieve_extend.c **** // range is too big
 937:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 938:sieve_extend.c ****     register counter_t prime   = 0;
 939:sieve_extend.c ****     counter_t patternsize_bits = 1;
 940:sieve_extend.c ****     counter_t pattern_start    = 0;
 941:sieve_extend.c ****     counter_t range_stop       = block_start;
 942:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 943:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 944:sieve_extend.c **** 
 945:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 946:sieve_extend.c ****     
 947:sieve_extend.c ****     for (;range_stop < block_stop;) {
 948:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 949:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 950:sieve_extend.c ****         if unlikely(start > block_stop) break;
 951:sieve_extend.c **** 
 952:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 953:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 954:sieve_extend.c **** 
 955:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 956:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 957:sieve_extend.c ****         block.pattern_start = pattern_start;
 958:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 959:sieve_extend.c **** 
 960:sieve_extend.c ****         if (patternsize_bits>1) {
 961:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 962:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 963:sieve_extend.c ****         }
 964:sieve_extend.c ****         patternsize_bits *= step;
 965:sieve_extend.c **** 
 966:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 967:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 968:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 969:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 970:sieve_extend.c ****         block.prime = prime;
 971:sieve_extend.c ****     } 
 972:sieve_extend.c **** 
 973:sieve_extend.c ****     return block;
 974:sieve_extend.c **** }
GAS LISTING /tmp/ccH5HMHD.s 			page 95


 975:sieve_extend.c **** 
 976:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 977:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 978:sieve_extend.c ****     counter_t prime     = 0;
 979:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 980:sieve_extend.c **** 
 981:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 982:sieve_extend.c **** 
 983:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 984:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 985:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 986:sieve_extend.c ****     prime = block.prime;
 987:sieve_extend.c **** 
 988:sieve_extend.c ****     // #pragma unroll 8
 989:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 990:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 991:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 992:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 993:sieve_extend.c ****     } 
 994:sieve_extend.c **** 
 995:sieve_extend.c ****     return sieve;
 996:sieve_extend.c **** }
 997:sieve_extend.c **** 
 998:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 999:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1000:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1001:sieve_extend.c ****         primeCount++;
1002:sieve_extend.c ****         if (factor < maxFactor/2) {
1003:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1004:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1005:sieve_extend.c ****         }
1006:sieve_extend.c ****     }
1007:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1008:sieve_extend.c **** }
1009:sieve_extend.c **** 
1010:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1011:sieve_extend.c ****     counter_t primeCount = 1;
1012:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1013:sieve_extend.c ****     return primeCount;
1014:sieve_extend.c **** }
1015:sieve_extend.c **** 
1016:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1017:sieve_extend.c ****     printf("DeepAnalyzing\n");
1018:sieve_extend.c ****     counter_t warn_prime = 0;
1019:sieve_extend.c ****     counter_t warn_nonprime = 0;
1020:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1021:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1022:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1023:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1024:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1025:sieve_extend.c ****                 }
1026:sieve_extend.c ****             }
1027:sieve_extend.c ****         }
1028:sieve_extend.c ****         else {
1029:sieve_extend.c ****             counter_t c_prime = 0;
1030:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1031:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccH5HMHD.s 			page 96


1032:sieve_extend.c ****             }
1033:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1034:sieve_extend.c ****         }
1035:sieve_extend.c ****     }
1036:sieve_extend.c **** }
1037:sieve_extend.c **** 
1038:sieve_extend.c **** 
1039:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1040:sieve_extend.c **** 
1041:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1042:sieve_extend.c ****     counter_t valid_primes = 0;
1043:sieve_extend.c ****     switch(sieve->size) {
1044:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1045:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1046:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1047:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1048:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1049:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1050:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1051:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1052:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1053:sieve_extend.c ****         default:            valid_primes= 0;
1054:sieve_extend.c ****     }
1055:sieve_extend.c **** 
1056:sieve_extend.c ****     int valid = (valid_primes == primecount);
1057:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1058:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1059:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1060:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1061:sieve_extend.c ****     }
1062:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1063:sieve_extend.c ****     return (valid);
1064:sieve_extend.c **** }
1065:sieve_extend.c **** 
1066:sieve_extend.c **** void usage(char *name) {
1067:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1068:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1069:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1070:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1071:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1072:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1073:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1074:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1075:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1076:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1077:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1078:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1079:sieve_extend.c ****     exit(1);
1080:sieve_extend.c **** }
1081:sieve_extend.c **** 
1082:sieve_extend.c **** typedef struct  {
1083:sieve_extend.c ****     counter_t maxints;
1084:sieve_extend.c ****     counter_t blocksize_bits;
1085:sieve_extend.c ****     counter_t blocksize_kb;
1086:sieve_extend.c ****     counter_t free_bits;
1087:sieve_extend.c ****     counter_t smallstep_faster;
1088:sieve_extend.c ****     counter_t mediumstep_faster;
GAS LISTING /tmp/ccH5HMHD.s 			page 97


1089:sieve_extend.c ****     counter_t vectorstep_faster;
1090:sieve_extend.c ****     counter_t sample_max;
1091:sieve_extend.c ****     double    sample_duration;
1092:sieve_extend.c ****     counter_t passes;
1093:sieve_extend.c ****     double    elapsed_time;
1094:sieve_extend.c ****     double    avg;
1095:sieve_extend.c **** } tuning_result_type;
1096:sieve_extend.c **** 
1097:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1097 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1097 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1098:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1098 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1099:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1099 5 view .LVU1035
1100:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1100 5 view .LVU1036
 3243              	# sieve_extend.c:1100:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1100 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      58
 3246 14f9 31C0     		xor	eax, eax	# <retval>
 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3247      58
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1101: }
1101:sieve_extend.c **** }
 3251              		.loc 1 1101 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE81:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB63:
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 422 153 is_stmt 1 view -0
 3262              		.cfi_startproc
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 422 153 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:434:     counter_t range_start_atvector = vectorstart(range_start);
 434:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3268              		.loc 1 434 15 view .LVU1041
 3269 1511 440FB6CE 		movzx	r9d, sil	# range_start_atvector, range_start
 3270              	# sieve_extend.c:422: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 422 153 view .LVU1042
 3272 1515 4889E5   		mov	rbp, rsp	#,
 3273              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccH5HMHD.s 			page 98


 3274 1518 4157     		push	r15	#
 3275 151a 4156     		push	r14	#
 3276 151c 4155     		push	r13	#
 3277 151e 4154     		push	r12	#
 3278 1520 53       		push	rbx	#
 3279 1521 4883E4E0 		and	rsp, -32	#,
 3280 1525 488D6424 		lea	rsp, -96[rsp]	#,
 3280      A0
 3281              		.cfi_offset 15, -24
 3282              		.cfi_offset 14, -32
 3283              		.cfi_offset 13, -40
 3284              		.cfi_offset 12, -48
 3285              		.cfi_offset 3, -56
 3286              	# sieve_extend.c:422: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3287              		.loc 1 422 153 view .LVU1043
 3288 152a 64488B04 		mov	rax, QWORD PTR fs:40	# tmp481, MEM[(<address-space-1> long unsigned int *)40B]
 3288      25280000 
 3288      00
 3289 1533 48894424 		mov	QWORD PTR 88[rsp], rax	# D.6664, tmp481
 3289      58
 3290 1538 31C0     		xor	eax, eax	# tmp481
 423:sieve_extend.c **** 
 3291              		.loc 1 423 5 is_stmt 1 view .LVU1044
 431:sieve_extend.c ****     
 3292              		.loc 1 431 5 view .LVU1045
 3293              	.LVL117:
 434:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3294              		.loc 1 434 5 view .LVU1046
 435:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 3295              		.loc 1 435 5 view .LVU1047
 3296              	# sieve_extend.c:435:     if likely((range_start_atvector + step) < range_start) { // not the first
 435:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 3297              		.loc 1 435 8 is_stmt 0 view .LVU1048
 3298 153a 498D0411 		lea	rax, [r9+rdx]	# tmp231,
 3299 153e 4839F0   		cmp	rax, rsi	# tmp231, range_start
 3300 1541 0F83BE00 		jnb	.L267	#,
 3300      0000
 3301              	.LBB324:
 436:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3302              		.loc 1 436 9 is_stmt 1 view .LVU1049
 3303              	# sieve_extend.c:436:         range_start_atvector += VECTOR_SIZE; // find next vector
 436:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3304              		.loc 1 436 30 is_stmt 0 view .LVU1050
 3305 1547 4981C100 		add	r9, 256	# range_start_atvector,
 3305      010000
 3306              	.LVL118:
 437:sieve_extend.c ****             #pragma ivdep unroll
 3307              		.loc 1 437 9 is_stmt 1 view .LVU1051
 3308              	# sieve_extend.c:437:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 437:sieve_extend.c ****             #pragma ivdep unroll
 3309              		.loc 1 437 12 is_stmt 0 view .LVU1052
 3310 154e 4939C9   		cmp	r9, rcx	# range_start_atvector, range_stop
 3311 1551 0F87F908 		ja	.L268	#,
 3311      0000
 3312              	.LVL119:
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccH5HMHD.s 			page 99


 3313              		.loc 1 446 16 is_stmt 1 view .LVU1053
 3314              	# sieve_extend.c:446:         for (; index < range_start_atvector; index += step) {
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3315              		.loc 1 446 9 is_stmt 0 view .LVU1054
 3316 1557 4C39CE   		cmp	rsi, r9	# range_start, range_start_atvector
 3317              	.LBB325:
 3318              	# sieve_extend.c:453:             bitarray_word[wordindex(index)] |= markmask(index);
 453:sieve_extend.c ****         }
 3319              		.loc 1 453 48 view .LVU1055
 3320 155a 41BA0100 		mov	r10d, 1	# tmp240,
 3320      0000
 3321              	.LBE325:
 3322              	# sieve_extend.c:446:         for (; index < range_start_atvector; index += step) {
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3323              		.loc 1 446 9 view .LVU1056
 3324 1560 0F839F00 		jnb	.L267	#,
 3324      0000
 3325              	.LVL120:
 3326 1566 662E0F1F 		.p2align 4
 3326      84000000 
 3326      0000
 3327              		.p2align 3
 3328              	.L269:
 3329              	.LBB326:
 447:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3330              		.loc 1 447 13 is_stmt 1 view .LVU1057
 3331              	# sieve_extend.c:447:             register counter_t index_word = wordindex(index);
 447:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3332              		.loc 1 447 32 is_stmt 0 view .LVU1058
 3333 1570 4989F0   		mov	r8, rsi	# index_word, range_start
 3334 1573 49C1E806 		shr	r8, 6	# index_word,
 3335              	.LVL121:
 448:sieve_extend.c ****             do {
 3336              		.loc 1 448 13 is_stmt 1 view .LVU1059
 3337              	.L272:
 449:sieve_extend.c ****                 mask |= markmask(index);
 3338              		.loc 1 449 13 discriminator 1 view .LVU1060
 450:sieve_extend.c ****                 index += step;
 3339              		.loc 1 450 17 discriminator 1 view .LVU1061
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3340              		.loc 1 451 17 discriminator 1 view .LVU1062
 3341              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3342              		.loc 1 451 23 is_stmt 0 discriminator 1 view .LVU1063
 3343 1577 4801D6   		add	rsi, rdx	# range_start, step
 3344              	.LVL122:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3345              		.loc 1 452 21 is_stmt 1 discriminator 1 view .LVU1064
 3346              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3347              		.loc 1 452 22 is_stmt 0 discriminator 1 view .LVU1065
 3348 157a 4889F3   		mov	rbx, rsi	# _18, range_start
 3349 157d 48C1EB06 		shr	rbx, 6	# _18,
 3350              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3351              		.loc 1 452 13 discriminator 1 view .LVU1066
 3352 1581 4C39C3   		cmp	rbx, r8	# _18, index_word
GAS LISTING /tmp/ccH5HMHD.s 			page 100


 3353 1584 756A     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3354              		.loc 1 449 13 is_stmt 1 view .LVU1067
 450:sieve_extend.c ****                 index += step;
 3355              		.loc 1 450 17 view .LVU1068
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3356              		.loc 1 451 17 view .LVU1069
 3357              	.LVL123:
 3358              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3359              		.loc 1 451 23 is_stmt 0 view .LVU1070
 3360 1586 4801D6   		add	rsi, rdx	# range_start, step
 3361              	.LVL124:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3362              		.loc 1 452 21 is_stmt 1 view .LVU1071
 3363              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3364              		.loc 1 452 22 is_stmt 0 view .LVU1072
 3365 1589 4889F3   		mov	rbx, rsi	# _18, range_start
 3366 158c 48C1EB06 		shr	rbx, 6	# _18,
 3367              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3368              		.loc 1 452 13 view .LVU1073
 3369 1590 4C39C3   		cmp	rbx, r8	# _18, index_word
 3370 1593 755B     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3371              		.loc 1 449 13 is_stmt 1 view .LVU1074
 450:sieve_extend.c ****                 index += step;
 3372              		.loc 1 450 17 view .LVU1075
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3373              		.loc 1 451 17 view .LVU1076
 3374              	.LVL125:
 3375              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3376              		.loc 1 451 23 is_stmt 0 view .LVU1077
 3377 1595 4801D6   		add	rsi, rdx	# range_start, step
 3378              	.LVL126:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3379              		.loc 1 452 21 is_stmt 1 view .LVU1078
 3380              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3381              		.loc 1 452 22 is_stmt 0 view .LVU1079
 3382 1598 4889F3   		mov	rbx, rsi	# _18, range_start
 3383 159b 48C1EB06 		shr	rbx, 6	# _18,
 3384              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3385              		.loc 1 452 13 view .LVU1080
 3386 159f 4C39C3   		cmp	rbx, r8	# _18, index_word
 3387 15a2 754C     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3388              		.loc 1 449 13 is_stmt 1 view .LVU1081
 450:sieve_extend.c ****                 index += step;
 3389              		.loc 1 450 17 view .LVU1082
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3390              		.loc 1 451 17 view .LVU1083
 3391              	.LVL127:
 3392              	# sieve_extend.c:451:                 index += step;
GAS LISTING /tmp/ccH5HMHD.s 			page 101


 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3393              		.loc 1 451 23 is_stmt 0 view .LVU1084
 3394 15a4 4801D6   		add	rsi, rdx	# range_start, step
 3395              	.LVL128:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3396              		.loc 1 452 21 is_stmt 1 view .LVU1085
 3397              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3398              		.loc 1 452 22 is_stmt 0 view .LVU1086
 3399 15a7 4889F3   		mov	rbx, rsi	# _18, range_start
 3400 15aa 48C1EB06 		shr	rbx, 6	# _18,
 3401              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3402              		.loc 1 452 13 view .LVU1087
 3403 15ae 4C39C3   		cmp	rbx, r8	# _18, index_word
 3404 15b1 753D     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3405              		.loc 1 449 13 is_stmt 1 view .LVU1088
 450:sieve_extend.c ****                 index += step;
 3406              		.loc 1 450 17 view .LVU1089
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3407              		.loc 1 451 17 view .LVU1090
 3408              	.LVL129:
 3409              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3410              		.loc 1 451 23 is_stmt 0 view .LVU1091
 3411 15b3 4801D6   		add	rsi, rdx	# range_start, step
 3412              	.LVL130:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3413              		.loc 1 452 21 is_stmt 1 view .LVU1092
 3414              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3415              		.loc 1 452 22 is_stmt 0 view .LVU1093
 3416 15b6 4889F3   		mov	rbx, rsi	# _18, range_start
 3417 15b9 48C1EB06 		shr	rbx, 6	# _18,
 3418              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3419              		.loc 1 452 13 view .LVU1094
 3420 15bd 4C39C3   		cmp	rbx, r8	# _18, index_word
 3421 15c0 752E     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3422              		.loc 1 449 13 is_stmt 1 view .LVU1095
 450:sieve_extend.c ****                 index += step;
 3423              		.loc 1 450 17 view .LVU1096
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3424              		.loc 1 451 17 view .LVU1097
 3425              	.LVL131:
 3426              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3427              		.loc 1 451 23 is_stmt 0 view .LVU1098
 3428 15c2 4801D6   		add	rsi, rdx	# range_start, step
 3429              	.LVL132:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3430              		.loc 1 452 21 is_stmt 1 view .LVU1099
 3431              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3432              		.loc 1 452 22 is_stmt 0 view .LVU1100
GAS LISTING /tmp/ccH5HMHD.s 			page 102


 3433 15c5 4889F3   		mov	rbx, rsi	# _18, range_start
 3434 15c8 48C1EB06 		shr	rbx, 6	# _18,
 3435              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3436              		.loc 1 452 13 view .LVU1101
 3437 15cc 4C39C3   		cmp	rbx, r8	# _18, index_word
 3438 15cf 751F     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3439              		.loc 1 449 13 is_stmt 1 view .LVU1102
 450:sieve_extend.c ****                 index += step;
 3440              		.loc 1 450 17 view .LVU1103
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3441              		.loc 1 451 17 view .LVU1104
 3442              	.LVL133:
 3443              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3444              		.loc 1 451 23 is_stmt 0 view .LVU1105
 3445 15d1 4801D6   		add	rsi, rdx	# range_start, step
 3446              	.LVL134:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3447              		.loc 1 452 21 is_stmt 1 view .LVU1106
 3448              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3449              		.loc 1 452 22 is_stmt 0 view .LVU1107
 3450 15d4 4889F3   		mov	rbx, rsi	# _18, range_start
 3451 15d7 48C1EB06 		shr	rbx, 6	# _18,
 3452              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3453              		.loc 1 452 13 view .LVU1108
 3454 15db 4C39C3   		cmp	rbx, r8	# _18, index_word
 3455 15de 7510     		jne	.L444	#,
 449:sieve_extend.c ****                 mask |= markmask(index);
 3456              		.loc 1 449 13 is_stmt 1 view .LVU1109
 450:sieve_extend.c ****                 index += step;
 3457              		.loc 1 450 17 view .LVU1110
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3458              		.loc 1 451 17 view .LVU1111
 3459              	.LVL135:
 3460              	# sieve_extend.c:451:                 index += step;
 451:sieve_extend.c ****             } while (wordindex(index) == index_word);
 3461              		.loc 1 451 23 is_stmt 0 view .LVU1112
 3462 15e0 4801D6   		add	rsi, rdx	# range_start, step
 3463              	.LVL136:
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3464              		.loc 1 452 21 is_stmt 1 view .LVU1113
 3465              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3466              		.loc 1 452 22 is_stmt 0 view .LVU1114
 3467 15e3 4889F3   		mov	rbx, rsi	# _18, range_start
 3468 15e6 48C1EB06 		shr	rbx, 6	# _18,
 3469              	# sieve_extend.c:452:             } while (wordindex(index) == index_word);
 452:sieve_extend.c ****             bitarray_word[wordindex(index)] |= markmask(index);
 3470              		.loc 1 452 13 view .LVU1115
 3471 15ea 4C39C3   		cmp	rbx, r8	# _18, index_word
 3472 15ed 7488     		je	.L272	#,
 3473 15ef 90       		.p2align 4
 3474              		.p2align 3
GAS LISTING /tmp/ccH5HMHD.s 			page 103


 3475              	.L444:
 453:sieve_extend.c ****         }
 3476              		.loc 1 453 13 is_stmt 1 view .LVU1116
 3477              	# sieve_extend.c:453:             bitarray_word[wordindex(index)] |= markmask(index);
 453:sieve_extend.c ****         }
 3478              		.loc 1 453 48 is_stmt 0 view .LVU1117
 3479 15f0 C442C9F7 		shlx	r11, r10, rsi	# tmp239, tmp240, range_start
 3479      DA
 3480              	.LBE326:
 3481              	# sieve_extend.c:446:         for (; index < range_start_atvector; index += step) {
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3482              		.loc 1 446 52 view .LVU1118
 3483 15f5 4801D6   		add	rsi, rdx	# range_start, step
 3484              	.LVL137:
 3485              	.LBB327:
 3486              	# sieve_extend.c:453:             bitarray_word[wordindex(index)] |= markmask(index);
 453:sieve_extend.c ****         }
 3487              		.loc 1 453 45 view .LVU1119
 3488 15f8 4C091CDF 		or	QWORD PTR [rdi+rbx*8], r11	# *_20, tmp239
 3489              	.LBE327:
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3490              		.loc 1 446 46 is_stmt 1 view .LVU1120
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3491              		.loc 1 446 16 view .LVU1121
 3492              	# sieve_extend.c:446:         for (; index < range_start_atvector; index += step) {
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3493              		.loc 1 446 9 is_stmt 0 view .LVU1122
 3494 15fc 4939F1   		cmp	r9, rsi	# range_start_atvector, range_start
 3495 15ff 0F876BFF 		ja	.L269	#,
 3495      FFFF
 3496              	.LVL138:
 3497              	.L267:
 446:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 3498              		.loc 1 446 9 view .LVU1123
 3499              	.LBE324:
 458:sieve_extend.c ****     
 3500              		.loc 1 458 5 is_stmt 1 view .LVU1124
 3501              	# sieve_extend.c:458:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 458:sieve_extend.c ****     
 3502              		.loc 1 458 42 is_stmt 0 view .LVU1125
 3503 1605 4989D2   		mov	r10, rdx	# tmp241, step
 3504 1608 49C1E208 		sal	r10, 8	# tmp241,
 3505 160c 4901F2   		add	r10, rsi	# tmp242, range_start
 3506              	# sieve_extend.c:458:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 458:sieve_extend.c ****     
 3507              		.loc 1 458 21 view .LVU1126
 3508 160f 4939CA   		cmp	r10, rcx	# tmp242, range_stop
 3509 1612 4C0F47D1 		cmova	r10, rcx	# tmp242,, range_stop_unique, range_stop
 3510              	.LVL139:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3511              		.loc 1 461 5 is_stmt 1 view .LVU1127
 3512              	.LBB329:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3513              		.loc 1 461 10 view .LVU1128
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3514              		.loc 1 461 41 view .LVU1129
 3515              	# sieve_extend.c:461:     for (counter_t index = range_start; index < range_stop_unique;) {
GAS LISTING /tmp/ccH5HMHD.s 			page 104


 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3516              		.loc 1 461 5 is_stmt 0 view .LVU1130
 3517 1616 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3518 1619 0F831705 		jnb	.L266	#,
 3518      0000
 3519              	.LBB330:
 3520              	# sieve_extend.c:475:         const counter_t range_stop_vector = vectorindex(range_stop);
 475:sieve_extend.c **** 
 3521              		.loc 1 475 25 view .LVU1131
 3522 161f 4989C9   		mov	r9, rcx	# range_stop_vector, range_stop
 3523              	.LVL140:
 3524              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3525              		.loc 1 478 31 view .LVU1132
 3526 1622 4C8D3495 		lea	r14, 0[0+rdx*4]	# _9,
 3526      00000000 
 3527              	# sieve_extend.c:491:         counter_t range_stop_word = wordindex(range_stop);
 491:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3528              		.loc 1 491 19 view .LVU1133
 3529 162a 48C1E906 		shr	rcx, 6	# range_stop,
 3530              	.LVL141:
 3531              	# sieve_extend.c:475:         const counter_t range_stop_vector = vectorindex(range_stop);
 475:sieve_extend.c **** 
 3532              		.loc 1 475 25 view .LVU1134
 3533 162e 49C1E908 		shr	r9, 8	# range_stop_vector,
 3534              	.LVL142:
 475:sieve_extend.c **** 
 3535              		.loc 1 475 25 view .LVU1135
 3536 1632 4883FA01 		cmp	rdx, 1	# step,
 3537              	# sieve_extend.c:463:         register bitvector_t quadmask = { };
 463:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3538              		.loc 1 463 30 view .LVU1136
 3539 1636 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp274
 3540              	# sieve_extend.c:491:         counter_t range_stop_word = wordindex(range_stop);
 491:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3541              		.loc 1 491 19 view .LVU1137
 3542 163a 4989CD   		mov	r13, rcx	# range_stop_word, range_stop
 3543              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3544              		.loc 1 468 31 view .LVU1138
 3545 163d B9010000 		mov	ecx, 1	# tmp278,
 3545      00
 3546 1642 0F855D05 		jne	.L449	#,
 3546      0000
 3547              	.LVL143:
 3548 1648 0F1F8400 		.p2align 4
 3548      00000000 
 3549              		.p2align 3
 3550              	.L273:
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 3551              		.loc 1 462 9 is_stmt 1 view .LVU1139
 3552              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 3553              		.loc 1 462 54 is_stmt 0 view .LVU1140
 3554 1650 4889F2   		mov	rdx, rsi	# tmp273, range_start
 3555              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
 464:sieve_extend.c ****         
GAS LISTING /tmp/ccH5HMHD.s 			page 105


 3556              		.loc 1 464 35 view .LVU1141
 3557 1653 4989F7   		mov	r15, rsi	# tmp275, range_start
 3558              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 3559              		.loc 1 462 54 view .LVU1142
 3560 1656 48C1EA08 		shr	rdx, 8	# tmp273,
 3561 165a 4D89D6   		mov	r14, r10	# tmp309, range_stop_unique
 3562              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
 464:sieve_extend.c ****         
 3563              		.loc 1 464 35 view .LVU1143
 3564 165d 49C1EF06 		shr	r15, 6	# tmp275,
 3565 1661 4929F6   		sub	r14, rsi	# tmp309, range_start
 3566              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 3567              		.loc 1 462 25 view .LVU1144
 3568 1664 48C1E202 		sal	rdx, 2	# current_vector_start_word,
 3569              	.LVL144:
 463:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3570              		.loc 1 463 9 is_stmt 1 view .LVU1145
 3571              	# sieve_extend.c:463:         register bitvector_t quadmask = { };
 463:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3572              		.loc 1 463 30 is_stmt 0 view .LVU1146
 3573 1668 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp274
 3573      2420
 464:sieve_extend.c ****         
 3574              		.loc 1 464 9 is_stmt 1 view .LVU1147
 3575              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
 464:sieve_extend.c ****         
 3576              		.loc 1 464 28 is_stmt 0 view .LVU1148
 3577 166e 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 3578              	.LVL145:
 464:sieve_extend.c ****         
 3579              		.loc 1 464 28 view .LVU1149
 3580 1671 4183E603 		and	r14d, 3	# tmp310,
 3581 1675 0F848500 		je	.L286	#,
 3581      0000
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3582              		.loc 1 467 9 is_stmt 1 view .LVU1150
 468:sieve_extend.c ****             index += step;
 3583              		.loc 1 468 13 view .LVU1151
 3584              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3585              		.loc 1 468 31 is_stmt 0 view .LVU1152
 3586 167b C462C9F7 		shlx	r11, rcx, rsi	# tmp422, tmp278, range_start
 3586      D9
 3587              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3588              		.loc 1 469 19 view .LVU1153
 3589 1680 4883C601 		add	rsi, 1	# range_start,
 3590              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3591              		.loc 1 468 28 view .LVU1154
 3592 1684 4E095CFC 		or	QWORD PTR 32[rsp+r15*8], r11	# quadmask, tmp422
 3592      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3593              		.loc 1 469 13 is_stmt 1 view .LVU1155
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
GAS LISTING /tmp/ccH5HMHD.s 			page 106


 3594              		.loc 1 470 13 view .LVU1156
 3595              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3596              		.loc 1 470 20 is_stmt 0 view .LVU1157
 3597 1689 4989F7   		mov	r15, rsi	# tmp423, range_start
 3598              	.LVL146:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3599              		.loc 1 470 20 view .LVU1158
 3600 168c 49C1EF06 		shr	r15, 6	# tmp423,
 3601              	.LVL147:
 3602              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3603              		.loc 1 470 18 view .LVU1159
 3604 1690 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 3605              	.LVL148:
 471:sieve_extend.c ****         
 3606              		.loc 1 471 17 is_stmt 1 view .LVU1160
 3607              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3608              		.loc 1 471 9 is_stmt 0 view .LVU1161
 3609 1693 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 3610 1696 0F82E400 		jb	.L299	#,
 3610      0000
 3611 169c 4983FF03 		cmp	r15, 3	# word,
 3612 16a0 0F87DA00 		ja	.L299	#,
 3612      0000
 3613 16a6 4983FE01 		cmp	r14, 1	# tmp310,
 3614 16aa 7454     		je	.L286	#,
 3615 16ac 4983FE02 		cmp	r14, 2	# tmp310,
 3616 16b0 7422     		je	.L410	#,
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3617              		.loc 1 467 9 is_stmt 1 view .LVU1162
 468:sieve_extend.c ****             index += step;
 3618              		.loc 1 468 13 view .LVU1163
 3619              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3620              		.loc 1 468 31 is_stmt 0 view .LVU1164
 3621 16b2 C462C9F7 		shlx	r12, rcx, rsi	# tmp426, tmp278, range_start
 3621      E1
 3622              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3623              		.loc 1 469 19 view .LVU1165
 3624 16b7 4883C601 		add	rsi, 1	# range_start,
 3625              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3626              		.loc 1 468 28 view .LVU1166
 3627 16bb 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp426
 3627      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3628              		.loc 1 469 13 is_stmt 1 view .LVU1167
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3629              		.loc 1 470 13 view .LVU1168
 3630              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3631              		.loc 1 470 20 is_stmt 0 view .LVU1169
 3632 16c0 4989F7   		mov	r15, rsi	# tmp427, range_start
 3633              	.LVL149:
GAS LISTING /tmp/ccH5HMHD.s 			page 107


 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3634              		.loc 1 470 20 view .LVU1170
 3635 16c3 49C1EF06 		shr	r15, 6	# tmp427,
 3636              	.LVL150:
 3637              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3638              		.loc 1 470 18 view .LVU1171
 3639 16c7 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 3640              	.LVL151:
 471:sieve_extend.c ****         
 3641              		.loc 1 471 17 is_stmt 1 view .LVU1172
 3642              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3643              		.loc 1 471 9 is_stmt 0 view .LVU1173
 3644 16ca 4983FF03 		cmp	r15, 3	# word,
 3645 16ce 0F87AC00 		ja	.L299	#,
 3645      0000
 3646              	.L410:
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3647              		.loc 1 467 9 is_stmt 1 view .LVU1174
 468:sieve_extend.c ****             index += step;
 3648              		.loc 1 468 13 view .LVU1175
 3649              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3650              		.loc 1 468 31 is_stmt 0 view .LVU1176
 3651 16d4 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp430, tmp278, range_start
 3651      D9
 3652              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3653              		.loc 1 469 19 view .LVU1177
 3654 16d9 4883C601 		add	rsi, 1	# range_start,
 3655              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3656              		.loc 1 468 28 view .LVU1178
 3657 16dd 4A095CFC 		or	QWORD PTR 32[rsp+r15*8], rbx	# quadmask, tmp430
 3657      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3658              		.loc 1 469 13 is_stmt 1 view .LVU1179
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3659              		.loc 1 470 13 view .LVU1180
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3660              		.loc 1 470 13 view .LVU1181
 3661              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3662              		.loc 1 470 20 is_stmt 0 view .LVU1182
 3663 16e2 4989F7   		mov	r15, rsi	# tmp445, range_start
 3664              	.LVL152:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3665              		.loc 1 470 20 view .LVU1183
 3666 16e5 49C1EF06 		shr	r15, 6	# tmp445,
 3667              	.LVL153:
 3668              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3669              		.loc 1 470 18 view .LVU1184
 3670 16e9 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 3671              	.LVL154:
 471:sieve_extend.c ****         
GAS LISTING /tmp/ccH5HMHD.s 			page 108


 3672              		.loc 1 471 17 is_stmt 1 view .LVU1185
 3673              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3674              		.loc 1 471 9 is_stmt 0 view .LVU1186
 3675 16ec 4983FF03 		cmp	r15, 3	# word,
 3676 16f0 0F878A00 		ja	.L299	#,
 3676      0000
 3677 16f6 662E0F1F 		.p2align 4
 3677      84000000 
 3677      0000
 3678              		.p2align 3
 3679              	.L286:
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3680              		.loc 1 467 9 is_stmt 1 view .LVU1187
 468:sieve_extend.c ****             index += step;
 3681              		.loc 1 468 13 view .LVU1188
 3682              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3683              		.loc 1 469 19 is_stmt 0 view .LVU1189
 3684 1700 4C8D4601 		lea	r8, 1[rsi]	# tmp311,
 3685              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3686              		.loc 1 468 31 view .LVU1190
 3687 1704 C4E2C9F7 		shlx	rax, rcx, rsi	# tmp277, tmp278, range_start
 3687      C1
 3688              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3689              		.loc 1 470 20 view .LVU1191
 3690 1709 4D89C6   		mov	r14, r8	# tmp279, range_start
 3691              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3692              		.loc 1 468 28 view .LVU1192
 3693 170c 4A0944FC 		or	QWORD PTR 32[rsp+r15*8], rax	# quadmask, tmp277
 3693      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3694              		.loc 1 469 13 is_stmt 1 view .LVU1193
 3695              	.LVL155:
 3696              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3697              		.loc 1 470 20 is_stmt 0 view .LVU1194
 3698 1711 49C1EE06 		shr	r14, 6	# tmp279,
 3699              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3700              		.loc 1 469 19 view .LVU1195
 3701 1715 4C89C6   		mov	rsi, r8	# range_start, tmp311
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3702              		.loc 1 470 13 is_stmt 1 view .LVU1196
 3703              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3704              		.loc 1 470 18 is_stmt 0 view .LVU1197
 3705 1718 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 471:sieve_extend.c ****         
 3706              		.loc 1 471 17 is_stmt 1 view .LVU1198
 3707              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3708              		.loc 1 471 9 is_stmt 0 view .LVU1199
 3709 171b 4D39C2   		cmp	r10, r8	# range_stop_unique, range_start
GAS LISTING /tmp/ccH5HMHD.s 			page 109


 3710 171e 7260     		jb	.L299	#,
 471:sieve_extend.c ****         
 3711              		.loc 1 471 9 view .LVU1200
 3712 1720 4983FE03 		cmp	r14, 3	# word,
 3713 1724 775A     		ja	.L299	#,
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3714              		.loc 1 467 9 is_stmt 1 view .LVU1201
 468:sieve_extend.c ****             index += step;
 3715              		.loc 1 468 13 view .LVU1202
 3716              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3717              		.loc 1 469 19 is_stmt 0 view .LVU1203
 3718 1726 4883C601 		add	rsi, 1	# range_start,
 3719              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3720              		.loc 1 468 31 view .LVU1204
 3721 172a C462B9F7 		shlx	r11, rcx, r8	# tmp434, tmp278, range_start
 3721      D9
 3722              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3723              		.loc 1 470 20 view .LVU1205
 3724 172f 4989F4   		mov	r12, rsi	# tmp435, range_start
 3725              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3726              		.loc 1 468 28 view .LVU1206
 3727 1732 4E095CF4 		or	QWORD PTR 32[rsp+r14*8], r11	# quadmask, tmp434
 3727      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3728              		.loc 1 469 13 is_stmt 1 view .LVU1207
 3729              	.LVL156:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3730              		.loc 1 470 13 view .LVU1208
 3731              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3732              		.loc 1 470 20 is_stmt 0 view .LVU1209
 3733 1737 49C1EC06 		shr	r12, 6	# tmp435,
 3734              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3735              		.loc 1 470 18 view .LVU1210
 3736 173b 4929D4   		sub	r12, rdx	# word, current_vector_start_word
 471:sieve_extend.c ****         
 3737              		.loc 1 471 17 is_stmt 1 view .LVU1211
 3738              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3739              		.loc 1 471 9 is_stmt 0 view .LVU1212
 3740 173e 4983FC03 		cmp	r12, 3	# word,
 3741 1742 773C     		ja	.L299	#,
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3742              		.loc 1 467 9 is_stmt 1 view .LVU1213
 468:sieve_extend.c ****             index += step;
 3743              		.loc 1 468 13 view .LVU1214
 3744              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3745              		.loc 1 468 31 is_stmt 0 view .LVU1215
 3746 1744 C4E2C9F7 		shlx	rsi, rcx, rsi	# tmp439, tmp278, range_start
 3746      F1
 3747              	.LVL157:
GAS LISTING /tmp/ccH5HMHD.s 			page 110


 3748              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3749              		.loc 1 468 28 view .LVU1216
 3750 1749 4A0974E4 		or	QWORD PTR 32[rsp+r12*8], rsi	# quadmask, tmp439
 3750      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3751              		.loc 1 469 13 is_stmt 1 view .LVU1217
 3752              	.LVL158:
 3753              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3754              		.loc 1 469 19 is_stmt 0 view .LVU1218
 3755 174e 498D7002 		lea	rsi, 2[r8]	# range_start,
 3756              	.LVL159:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3757              		.loc 1 470 13 is_stmt 1 view .LVU1219
 3758              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3759              		.loc 1 470 20 is_stmt 0 view .LVU1220
 3760 1752 4889F3   		mov	rbx, rsi	# tmp440, range_start
 3761 1755 48C1EB06 		shr	rbx, 6	# tmp440,
 3762              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3763              		.loc 1 470 18 view .LVU1221
 3764 1759 4829D3   		sub	rbx, rdx	# word, current_vector_start_word
 471:sieve_extend.c ****         
 3765              		.loc 1 471 17 is_stmt 1 view .LVU1222
 3766              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3767              		.loc 1 471 9 is_stmt 0 view .LVU1223
 3768 175c 4883FB03 		cmp	rbx, 3	# word,
 3769 1760 771E     		ja	.L299	#,
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3770              		.loc 1 467 9 is_stmt 1 view .LVU1224
 468:sieve_extend.c ****             index += step;
 3771              		.loc 1 468 13 view .LVU1225
 3772              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3773              		.loc 1 468 31 is_stmt 0 view .LVU1226
 3774 1762 C462C9F7 		shlx	r15, rcx, rsi	# tmp444, tmp278, range_start
 3774      F9
 3775              	.LVL160:
 3776              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3777              		.loc 1 469 19 view .LVU1227
 3778 1767 498D7003 		lea	rsi, 3[r8]	# range_start,
 3779              	.LVL161:
 3780              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 3781              		.loc 1 468 28 view .LVU1228
 3782 176b 4C097CDC 		or	QWORD PTR 32[rsp+rbx*8], r15	# quadmask, tmp444
 3782      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3783              		.loc 1 469 13 is_stmt 1 view .LVU1229
 3784              	.LVL162:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3785              		.loc 1 470 13 view .LVU1230
 3786              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccH5HMHD.s 			page 111


 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3787              		.loc 1 470 20 is_stmt 0 view .LVU1231
 3788 1770 4989F7   		mov	r15, rsi	# tmp445, range_start
 3789 1773 49C1EF06 		shr	r15, 6	# tmp445,
 3790              	.LVL163:
 3791              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3792              		.loc 1 470 18 view .LVU1232
 3793 1777 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 3794              	.LVL164:
 471:sieve_extend.c ****         
 3795              		.loc 1 471 17 is_stmt 1 view .LVU1233
 3796              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 3797              		.loc 1 471 9 is_stmt 0 view .LVU1234
 3798 177a 4983FF03 		cmp	r15, 3	# word,
 3799 177e 7680     		jbe	.L286	#,
 3800              	.LVL165:
 3801              		.p2align 4
 3802              		.p2align 3
 3803              	.L299:
 474:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3804              		.loc 1 474 9 is_stmt 1 view .LVU1235
 3805              	# sieve_extend.c:474:         register counter_t current_vector = current_vector_start_word >> (SHI
 474:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3806              		.loc 1 474 28 is_stmt 0 view .LVU1236
 3807 1780 48C1EA02 		shr	rdx, 2	# ivtmp.267,
 3808              	.LVL166:
 475:sieve_extend.c **** 
 3809              		.loc 1 475 9 is_stmt 1 view .LVU1237
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3810              		.loc 1 478 9 view .LVU1238
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3811              		.loc 1 478 15 view .LVU1239
 3812              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3813              		.loc 1 478 29 is_stmt 0 view .LVU1240
 3814 1784 4C8D7204 		lea	r14, 4[rdx]	# ivtmp.267,
 3815              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3816              		.loc 1 478 9 view .LVU1241
 3817 1788 4D39F1   		cmp	r9, r14	# range_stop_vector, ivtmp.267
 3818 178b 0F820D02 		jb	.L288	#,
 3818      0000
 3819 1791 4D89CC   		mov	r12, r9	# tmp305, range_stop_vector
 3820 1794 4D8D4604 		lea	r8, 4[r14]	# ivtmp.267,
 3821 1798 48C1E205 		sal	rdx, 5	# tmp284,
 3822              	.LVL167:
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3823              		.loc 1 478 9 view .LVU1242
 3824 179c 4D29F4   		sub	r12, r14	# tmp305, ivtmp.267
 3825              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3826              		.loc 1 479 45 view .LVU1243
 3827 179f C57D6F64 		vmovdqa	ymm12, YMMWORD PTR 32[rsp]	# quadmask.57_252, quadmask
 3827      2420
 3828 17a5 4C8D1C17 		lea	r11, [rdi+rdx]	# ivtmp.268,
GAS LISTING /tmp/ccH5HMHD.s 			page 112


 3829 17a9 49C1EC02 		shr	r12, 2	# tmp304,
 3830 17ad C4411DEB 		vpor	ymm13, ymm12, YMMWORD PTR [r11]	# tmp285, quadmask.57_252, MEM[base: _128, offset: 0B]
 3830      2B
 3831              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3832              		.loc 1 480 50 view .LVU1244
 3833 17b2 C4411DEB 		vpor	ymm14, ymm12, YMMWORD PTR 32[r11]	# tmp286, quadmask.57_252, MEM[base: _128, offset: 32B]
 3833      7320
 3834 17b8 4183E403 		and	r12d, 3	# tmp306,
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3835              		.loc 1 479 13 is_stmt 1 view .LVU1245
 3836              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3837              		.loc 1 481 52 is_stmt 0 view .LVU1246
 3838 17bc C4411DEB 		vpor	ymm15, ymm12, YMMWORD PTR 64[r11]	# tmp287, quadmask.57_252, MEM[base: _128, offset: 64B]
 3838      7B40
 3839              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3840              		.loc 1 482 52 view .LVU1247
 3841 17c2 C4C11DEB 		vpor	ymm1, ymm12, YMMWORD PTR 96[r11]	# tmp288, quadmask.57_252, MEM[base: _128, offset: 96B]
 3841      4B60
 3842              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3843              		.loc 1 478 9 view .LVU1248
 3844 17c8 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.267
 3845 17cb 4C89F2   		mov	rdx, r14	# ivtmp.267, ivtmp.267
 3846              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3847              		.loc 1 479 45 view .LVU1249
 3848 17ce C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm13	# MEM[base: _128, offset: 0B], tmp285
 3848      2B
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3849              		.loc 1 480 13 is_stmt 1 view .LVU1250
 3850 17d3 498D8380 		lea	rax, 128[r11]	# ivtmp.268,
 3850      000000
 3851              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3852              		.loc 1 480 50 is_stmt 0 view .LVU1251
 3853 17da C4417D7F 		vmovdqa	YMMWORD PTR 32[r11], ymm14	# MEM[base: _128, offset: 32B], tmp286
 3853      7320
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3854              		.loc 1 481 13 is_stmt 1 view .LVU1252
 3855              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3856              		.loc 1 481 52 is_stmt 0 view .LVU1253
 3857 17e0 C4417D7F 		vmovdqa	YMMWORD PTR 64[r11], ymm15	# MEM[base: _128, offset: 64B], tmp287
 3857      7B40
 482:sieve_extend.c ****         }
 3858              		.loc 1 482 13 is_stmt 1 view .LVU1254
 3859              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3860              		.loc 1 482 52 is_stmt 0 view .LVU1255
 3861 17e6 C4C17D7F 		vmovdqa	YMMWORD PTR 96[r11], ymm1	# MEM[base: _128, offset: 96B], tmp288
 3861      4B60
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3862              		.loc 1 478 59 is_stmt 1 view .LVU1256
 3863              	.LVL168:
GAS LISTING /tmp/ccH5HMHD.s 			page 113


 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3864              		.loc 1 478 15 view .LVU1257
 3865              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3866              		.loc 1 478 9 is_stmt 0 view .LVU1258
 3867 17ec 0F82AC01 		jb	.L288	#,
 3867      0000
 3868 17f2 4D85E4   		test	r12, r12	# tmp306
 3869 17f5 0F84AF00 		je	.L289	#,
 3869      0000
 3870 17fb 4983FC01 		cmp	r12, 1	# tmp306,
 3871 17ff 746F     		je	.L407	#,
 3872 1801 4983FC02 		cmp	r12, 2	# tmp306,
 3873 1805 743B     		je	.L408	#,
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3874              		.loc 1 479 13 is_stmt 1 view .LVU1259
 3875              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3876              		.loc 1 479 45 is_stmt 0 view .LVU1260
 3877 1807 C4C11DEB 		vpor	ymm3, ymm12, YMMWORD PTR 128[r11]	# tmp408, quadmask.57_252, MEM[base: _128, offset: 0B]
 3877      9B800000 
 3877      00
 3878 1810 4D8D4608 		lea	r8, 8[r14]	# ivtmp.267,
 3879 1814 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r11], ymm3	# MEM[base: _128, offset: 0B], tmp408
 3879      9B800000 
 3879      00
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3880              		.loc 1 480 13 is_stmt 1 view .LVU1261
 3881              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3882              		.loc 1 480 50 is_stmt 0 view .LVU1262
 3883 181d C59DEB40 		vpor	ymm0, ymm12, YMMWORD PTR 32[rax]	# tmp409, quadmask.57_252, MEM[base: _128, offset: 32B]
 3883      20
 3884              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3885              		.loc 1 481 52 view .LVU1263
 3886 1822 C59DEB60 		vpor	ymm4, ymm12, YMMWORD PTR 64[rax]	# tmp410, quadmask.57_252, MEM[base: _128, offset: 64B]
 3886      40
 3887              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3888              		.loc 1 480 50 view .LVU1264
 3889 1827 C5FD7F40 		vmovdqa	YMMWORD PTR 32[rax], ymm0	# MEM[base: _128, offset: 32B], tmp409
 3889      20
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3890              		.loc 1 481 13 is_stmt 1 view .LVU1265
 3891              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3892              		.loc 1 482 52 is_stmt 0 view .LVU1266
 3893 182c C59DEB68 		vpor	ymm5, ymm12, YMMWORD PTR 96[rax]	# tmp411, quadmask.57_252, MEM[base: _128, offset: 96B]
 3893      60
 3894              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3895              		.loc 1 481 52 view .LVU1267
 3896 1831 C5FD7F60 		vmovdqa	YMMWORD PTR 64[rax], ymm4	# MEM[base: _128, offset: 64B], tmp410
 3896      40
 482:sieve_extend.c ****         }
 3897              		.loc 1 482 13 is_stmt 1 view .LVU1268
GAS LISTING /tmp/ccH5HMHD.s 			page 114


 3898              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3899              		.loc 1 482 52 is_stmt 0 view .LVU1269
 3900 1836 C5FD7F68 		vmovdqa	YMMWORD PTR 96[rax], ymm5	# MEM[base: _128, offset: 96B], tmp411
 3900      60
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3901              		.loc 1 478 59 is_stmt 1 view .LVU1270
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3902              		.loc 1 478 15 view .LVU1271
 3903 183b 498D8300 		lea	rax, 256[r11]	# ivtmp.268,
 3903      010000
 3904              	.L408:
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3905              		.loc 1 479 13 view .LVU1272
 3906              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3907              		.loc 1 479 45 is_stmt 0 view .LVU1273
 3908 1842 C59DEB30 		vpor	ymm6, ymm12, YMMWORD PTR [rax]	# tmp413, quadmask.57_252, MEM[base: _128, offset: 0B]
 3909              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3910              		.loc 1 480 50 view .LVU1274
 3911 1846 C59DEB78 		vpor	ymm7, ymm12, YMMWORD PTR 32[rax]	# tmp414, quadmask.57_252, MEM[base: _128, offset: 32B]
 3911      20
 3912              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3913              		.loc 1 481 52 view .LVU1275
 3914 184b C51DEB40 		vpor	ymm8, ymm12, YMMWORD PTR 64[rax]	# tmp415, quadmask.57_252, MEM[base: _128, offset: 64B]
 3914      40
 3915              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3916              		.loc 1 482 52 view .LVU1276
 3917 1850 C51DEB48 		vpor	ymm9, ymm12, YMMWORD PTR 96[rax]	# tmp416, quadmask.57_252, MEM[base: _128, offset: 96B]
 3917      60
 3918              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3919              		.loc 1 479 45 view .LVU1277
 3920 1855 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _128, offset: 0B], tmp413
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3921              		.loc 1 480 13 is_stmt 1 view .LVU1278
 3922 1859 4983C004 		add	r8, 4	# ivtmp.267,
 3923              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3924              		.loc 1 480 50 is_stmt 0 view .LVU1279
 3925 185d C5FD7F78 		vmovdqa	YMMWORD PTR 32[rax], ymm7	# MEM[base: _128, offset: 32B], tmp414
 3925      20
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3926              		.loc 1 481 13 is_stmt 1 view .LVU1280
 3927 1862 4883E880 		sub	rax, -128	# ivtmp.268,
 3928              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3929              		.loc 1 481 52 is_stmt 0 view .LVU1281
 3930 1866 C57D7F40 		vmovdqa	YMMWORD PTR -64[rax], ymm8	# MEM[base: _128, offset: 64B], tmp415
 3930      C0
 482:sieve_extend.c ****         }
 3931              		.loc 1 482 13 is_stmt 1 view .LVU1282
 3932              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
GAS LISTING /tmp/ccH5HMHD.s 			page 115


 3933              		.loc 1 482 52 is_stmt 0 view .LVU1283
 3934 186b C57D7F48 		vmovdqa	YMMWORD PTR -32[rax], ymm9	# MEM[base: _128, offset: 96B], tmp416
 3934      E0
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3935              		.loc 1 478 59 is_stmt 1 view .LVU1284
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3936              		.loc 1 478 15 view .LVU1285
 3937              	.L407:
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3938              		.loc 1 479 13 view .LVU1286
 3939              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3940              		.loc 1 479 45 is_stmt 0 view .LVU1287
 3941 1870 C51DEB10 		vpor	ymm10, ymm12, YMMWORD PTR [rax]	# tmp418, quadmask.57_252, MEM[base: _128, offset: 0B]
 3942              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3943              		.loc 1 480 50 view .LVU1288
 3944 1874 C51DEB58 		vpor	ymm11, ymm12, YMMWORD PTR 32[rax]	# tmp419, quadmask.57_252, MEM[base: _128, offset: 32B]
 3944      20
 3945              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3946              		.loc 1 481 52 view .LVU1289
 3947 1879 C51DEB68 		vpor	ymm13, ymm12, YMMWORD PTR 64[rax]	# tmp420, quadmask.57_252, MEM[base: _128, offset: 64B]
 3947      40
 3948              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3949              		.loc 1 482 52 view .LVU1290
 3950 187e C51DEB70 		vpor	ymm14, ymm12, YMMWORD PTR 96[rax]	# tmp421, quadmask.57_252, MEM[base: _128, offset: 96B]
 3950      60
 3951 1883 4C89C2   		mov	rdx, r8	# ivtmp.267, ivtmp.267
 3952 1886 4983C004 		add	r8, 4	# ivtmp.267,
 3953              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3954              		.loc 1 479 45 view .LVU1291
 3955 188a C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: _128, offset: 0B], tmp418
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3956              		.loc 1 480 13 is_stmt 1 view .LVU1292
 3957 188e 4883E880 		sub	rax, -128	# ivtmp.268,
 3958              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3959              		.loc 1 480 50 is_stmt 0 view .LVU1293
 3960 1892 C57D7F58 		vmovdqa	YMMWORD PTR -96[rax], ymm11	# MEM[base: _128, offset: 32B], tmp419
 3960      A0
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3961              		.loc 1 481 13 is_stmt 1 view .LVU1294
 3962              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3963              		.loc 1 481 52 is_stmt 0 view .LVU1295
 3964 1897 C57D7F68 		vmovdqa	YMMWORD PTR -64[rax], ymm13	# MEM[base: _128, offset: 64B], tmp420
 3964      C0
 482:sieve_extend.c ****         }
 3965              		.loc 1 482 13 is_stmt 1 view .LVU1296
 3966              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3967              		.loc 1 482 52 is_stmt 0 view .LVU1297
 3968 189c C57D7F70 		vmovdqa	YMMWORD PTR -32[rax], ymm14	# MEM[base: _128, offset: 96B], tmp421
 3968      E0
GAS LISTING /tmp/ccH5HMHD.s 			page 116


 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3969              		.loc 1 478 59 is_stmt 1 view .LVU1298
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3970              		.loc 1 478 15 view .LVU1299
 3971              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3972              		.loc 1 478 9 is_stmt 0 view .LVU1300
 3973 18a1 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.267
 3974 18a4 0F82F400 		jb	.L288	#,
 3974      0000
 3975              	.L289:
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3976              		.loc 1 479 13 is_stmt 1 view .LVU1301
 3977              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3978              		.loc 1 479 45 is_stmt 0 view .LVU1302
 3979 18aa C51DEB38 		vpor	ymm15, ymm12, YMMWORD PTR [rax]	# tmp319, quadmask.57_252, MEM[base: _128, offset: 0B]
 3980              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3981              		.loc 1 480 50 view .LVU1303
 3982 18ae C59DEB48 		vpor	ymm1, ymm12, YMMWORD PTR 32[rax]	# tmp320, quadmask.57_252, MEM[base: _128, offset: 32B]
 3982      20
 3983              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3984              		.loc 1 479 45 view .LVU1304
 3985 18b3 C57D7F38 		vmovdqa	YMMWORD PTR [rax], ymm15	# MEM[base: _128, offset: 0B], tmp319
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3986              		.loc 1 480 13 is_stmt 1 view .LVU1305
 3987              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 3988              		.loc 1 481 52 is_stmt 0 view .LVU1306
 3989 18b7 C59DEB58 		vpor	ymm3, ymm12, YMMWORD PTR 64[rax]	# tmp321, quadmask.57_252, MEM[base: _128, offset: 64B]
 3989      40
 3990              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 3991              		.loc 1 482 52 view .LVU1307
 3992 18bc C59DEB40 		vpor	ymm0, ymm12, YMMWORD PTR 96[rax]	# tmp322, quadmask.57_252, MEM[base: _128, offset: 96B]
 3992      60
 3993              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 3994              		.loc 1 479 45 view .LVU1308
 3995 18c1 C59DEBA0 		vpor	ymm4, ymm12, YMMWORD PTR 128[rax]	# tmp326, quadmask.57_252, MEM[base: _128, offset: 0B]
 3995      80000000 
 3996              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 3997              		.loc 1 480 50 view .LVU1309
 3998 18c9 C59DEBA8 		vpor	ymm5, ymm12, YMMWORD PTR 160[rax]	# tmp327, quadmask.57_252, MEM[base: _128, offset: 32B]
 3998      A0000000 
 3999              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4000              		.loc 1 481 52 view .LVU1310
 4001 18d1 C59DEBB0 		vpor	ymm6, ymm12, YMMWORD PTR 192[rax]	# tmp328, quadmask.57_252, MEM[base: _128, offset: 64B]
 4001      C0000000 
 4002              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4003              		.loc 1 482 52 view .LVU1311
 4004 18d9 C59DEBB8 		vpor	ymm7, ymm12, YMMWORD PTR 224[rax]	# tmp329, quadmask.57_252, MEM[base: _128, offset: 96B]
GAS LISTING /tmp/ccH5HMHD.s 			page 117


 4004      E0000000 
 4005              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4006              		.loc 1 479 45 view .LVU1312
 4007 18e1 C51DEB80 		vpor	ymm8, ymm12, YMMWORD PTR 256[rax]	# tmp333, quadmask.57_252, MEM[base: _128, offset: 0B]
 4007      00010000 
 4008              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4009              		.loc 1 480 50 view .LVU1313
 4010 18e9 C51DEB88 		vpor	ymm9, ymm12, YMMWORD PTR 288[rax]	# tmp334, quadmask.57_252, MEM[base: _128, offset: 32B]
 4010      20010000 
 4011              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4012              		.loc 1 481 52 view .LVU1314
 4013 18f1 C51DEB90 		vpor	ymm10, ymm12, YMMWORD PTR 320[rax]	# tmp335, quadmask.57_252, MEM[base: _128, offset: 64B]
 4013      40010000 
 4014              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4015              		.loc 1 482 52 view .LVU1315
 4016 18f9 C51DEB98 		vpor	ymm11, ymm12, YMMWORD PTR 352[rax]	# tmp336, quadmask.57_252, MEM[base: _128, offset: 96B]
 4016      60010000 
 4017              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4018              		.loc 1 479 45 view .LVU1316
 4019 1901 C51DEBA8 		vpor	ymm13, ymm12, YMMWORD PTR 384[rax]	# tmp340, quadmask.57_252, MEM[base: _128, offset: 0B]
 4019      80010000 
 4020              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4021              		.loc 1 480 50 view .LVU1317
 4022 1909 C51DEBB0 		vpor	ymm14, ymm12, YMMWORD PTR 416[rax]	# tmp341, quadmask.57_252, MEM[base: _128, offset: 32B]
 4022      A0010000 
 4023              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4024              		.loc 1 481 52 view .LVU1318
 4025 1911 C51DEBB8 		vpor	ymm15, ymm12, YMMWORD PTR 448[rax]	# tmp342, quadmask.57_252, MEM[base: _128, offset: 64B]
 4025      C0010000 
 4026 1919 498D500C 		lea	rdx, 12[r8]	# ivtmp.267,
 4027 191d 4983C010 		add	r8, 16	# ivtmp.267,
 4028              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4029              		.loc 1 480 50 view .LVU1319
 4030 1921 C5FD7F48 		vmovdqa	YMMWORD PTR 32[rax], ymm1	# MEM[base: _128, offset: 32B], tmp320
 4030      20
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4031              		.loc 1 481 13 is_stmt 1 view .LVU1320
 4032              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4033              		.loc 1 482 52 is_stmt 0 view .LVU1321
 4034 1926 C59DEB88 		vpor	ymm1, ymm12, YMMWORD PTR 480[rax]	# tmp343, quadmask.57_252, MEM[base: _128, offset: 96B]
 4034      E0010000 
 4035              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4036              		.loc 1 481 52 view .LVU1322
 4037 192e C5FD7F58 		vmovdqa	YMMWORD PTR 64[rax], ymm3	# MEM[base: _128, offset: 64B], tmp321
 4037      40
 482:sieve_extend.c ****         }
 4038              		.loc 1 482 13 is_stmt 1 view .LVU1323
GAS LISTING /tmp/ccH5HMHD.s 			page 118


 4039 1933 48050002 		add	rax, 512	# ivtmp.268,
 4039      0000
 4040              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4041              		.loc 1 482 52 is_stmt 0 view .LVU1324
 4042 1939 C5FD7F80 		vmovdqa	YMMWORD PTR -416[rax], ymm0	# MEM[base: _128, offset: 96B], tmp322
 4042      60FEFFFF 
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4043              		.loc 1 478 59 is_stmt 1 view .LVU1325
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4044              		.loc 1 478 15 view .LVU1326
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4045              		.loc 1 479 13 view .LVU1327
 4046              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4047              		.loc 1 479 45 is_stmt 0 view .LVU1328
 4048 1941 C5FD7FA0 		vmovdqa	YMMWORD PTR -384[rax], ymm4	# MEM[base: _128, offset: 0B], tmp326
 4048      80FEFFFF 
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4049              		.loc 1 480 13 is_stmt 1 view .LVU1329
 4050              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4051              		.loc 1 480 50 is_stmt 0 view .LVU1330
 4052 1949 C5FD7FA8 		vmovdqa	YMMWORD PTR -352[rax], ymm5	# MEM[base: _128, offset: 32B], tmp327
 4052      A0FEFFFF 
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4053              		.loc 1 481 13 is_stmt 1 view .LVU1331
 4054              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4055              		.loc 1 481 52 is_stmt 0 view .LVU1332
 4056 1951 C5FD7FB0 		vmovdqa	YMMWORD PTR -320[rax], ymm6	# MEM[base: _128, offset: 64B], tmp328
 4056      C0FEFFFF 
 482:sieve_extend.c ****         }
 4057              		.loc 1 482 13 is_stmt 1 view .LVU1333
 4058              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4059              		.loc 1 482 52 is_stmt 0 view .LVU1334
 4060 1959 C5FD7FB8 		vmovdqa	YMMWORD PTR -288[rax], ymm7	# MEM[base: _128, offset: 96B], tmp329
 4060      E0FEFFFF 
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4061              		.loc 1 478 59 is_stmt 1 view .LVU1335
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4062              		.loc 1 478 15 view .LVU1336
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4063              		.loc 1 479 13 view .LVU1337
 4064              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4065              		.loc 1 479 45 is_stmt 0 view .LVU1338
 4066 1961 C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _128, offset: 0B], tmp333
 4066      00FFFFFF 
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4067              		.loc 1 480 13 is_stmt 1 view .LVU1339
 4068              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4069              		.loc 1 480 50 is_stmt 0 view .LVU1340
 4070 1969 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _128, offset: 32B], tmp334
 4070      20FFFFFF 
GAS LISTING /tmp/ccH5HMHD.s 			page 119


 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4071              		.loc 1 481 13 is_stmt 1 view .LVU1341
 4072              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4073              		.loc 1 481 52 is_stmt 0 view .LVU1342
 4074 1971 C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _128, offset: 64B], tmp335
 4074      40FFFFFF 
 482:sieve_extend.c ****         }
 4075              		.loc 1 482 13 is_stmt 1 view .LVU1343
 4076              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4077              		.loc 1 482 52 is_stmt 0 view .LVU1344
 4078 1979 C57D7F98 		vmovdqa	YMMWORD PTR -160[rax], ymm11	# MEM[base: _128, offset: 96B], tmp336
 4078      60FFFFFF 
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4079              		.loc 1 478 59 is_stmt 1 view .LVU1345
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4080              		.loc 1 478 15 view .LVU1346
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4081              		.loc 1 479 13 view .LVU1347
 4082              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4083              		.loc 1 479 45 is_stmt 0 view .LVU1348
 4084 1981 C57D7F68 		vmovdqa	YMMWORD PTR -128[rax], ymm13	# MEM[base: _128, offset: 0B], tmp340
 4084      80
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4085              		.loc 1 480 13 is_stmt 1 view .LVU1349
 4086              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4087              		.loc 1 480 50 is_stmt 0 view .LVU1350
 4088 1986 C57D7F70 		vmovdqa	YMMWORD PTR -96[rax], ymm14	# MEM[base: _128, offset: 32B], tmp341
 4088      A0
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4089              		.loc 1 481 13 is_stmt 1 view .LVU1351
 4090              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4091              		.loc 1 481 52 is_stmt 0 view .LVU1352
 4092 198b C57D7F78 		vmovdqa	YMMWORD PTR -64[rax], ymm15	# MEM[base: _128, offset: 64B], tmp342
 4092      C0
 482:sieve_extend.c ****         }
 4093              		.loc 1 482 13 is_stmt 1 view .LVU1353
 4094              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4095              		.loc 1 482 52 is_stmt 0 view .LVU1354
 4096 1990 C5FD7F48 		vmovdqa	YMMWORD PTR -32[rax], ymm1	# MEM[base: _128, offset: 96B], tmp343
 4096      E0
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4097              		.loc 1 478 59 is_stmt 1 view .LVU1355
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4098              		.loc 1 478 15 view .LVU1356
 4099              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4100              		.loc 1 478 9 is_stmt 0 view .LVU1357
 4101 1995 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.267
 4102 1998 0F830CFF 		jnb	.L289	#,
 4102      FFFF
 4103              	.LVL169:
GAS LISTING /tmp/ccH5HMHD.s 			page 120


 4104              	.L288:
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4105              		.loc 1 486 15 is_stmt 1 view .LVU1358
 4106              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4107              		.loc 1 486 9 is_stmt 0 view .LVU1359
 4108 199e 4939D1   		cmp	r9, rdx	# range_stop_vector, ivtmp.267
 4109 19a1 0F827601 		jb	.L290	#,
 4109      0000
 4110 19a7 4889D3   		mov	rbx, rdx	# tmp289, ivtmp.267
 4111 19aa 4D89CF   		mov	r15, r9	# tmp300, range_stop_vector
 4112              	.LVL170:
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4113              		.loc 1 486 9 view .LVU1360
 4114 19ad 48C1E305 		sal	rbx, 5	# tmp289,
 4115 19b1 4929D7   		sub	r15, rdx	# tmp300, ivtmp.267
 4116              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4117              		.loc 1 487 45 view .LVU1361
 4118 19b4 C57D6F64 		vmovdqa	ymm12, YMMWORD PTR 32[rsp]	# quadmask.61_222, quadmask
 4118      2420
 4119 19ba 4801FB   		add	rbx, rdi	# ivtmp.278, bitarray_word
 4120              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4121              		.loc 1 486 67 view .LVU1362
 4122 19bd 4883C201 		add	rdx, 1	# ivtmp.267,
 4123 19c1 4183E707 		and	r15d, 7	# tmp301,
 487:sieve_extend.c ****         }
 4124              		.loc 1 487 13 is_stmt 1 view .LVU1363
 4125              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4126              		.loc 1 487 45 is_stmt 0 view .LVU1364
 4127 19c5 C59DEB1B 		vpor	ymm3, ymm12, YMMWORD PTR [rbx]	# tmp290, quadmask.61_222, MEM[base: _73, offset: 0B]
 4128              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4129              		.loc 1 486 9 view .LVU1365
 4130 19c9 4939D1   		cmp	r9, rdx	# range_stop_vector, ivtmp.267
 4131              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4132              		.loc 1 487 45 view .LVU1366
 4133 19cc C5FD7F1B 		vmovdqa	YMMWORD PTR [rbx], ymm3	# MEM[base: _73, offset: 0B], tmp290
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4134              		.loc 1 486 52 is_stmt 1 view .LVU1367
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4135              		.loc 1 486 15 view .LVU1368
 4136 19d0 4C8D7320 		lea	r14, 32[rbx]	# ivtmp.278,
 4137              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4138              		.loc 1 486 9 is_stmt 0 view .LVU1369
 4139 19d4 0F824301 		jb	.L290	#,
 4139      0000
 4140 19da 4D85FF   		test	r15, r15	# tmp301
 4141 19dd 0F84AF00 		je	.L291	#,
 4141      0000
 4142 19e3 4983FF01 		cmp	r15, 1	# tmp301,
 4143 19e7 0F848A00 		je	.L401	#,
 4143      0000
GAS LISTING /tmp/ccH5HMHD.s 			page 121


 4144 19ed 4983FF02 		cmp	r15, 2	# tmp301,
 4145 19f1 7472     		je	.L402	#,
 4146 19f3 4983FF03 		cmp	r15, 3	# tmp301,
 4147 19f7 745A     		je	.L403	#,
 4148 19f9 4983FF04 		cmp	r15, 4	# tmp301,
 4149 19fd 7442     		je	.L404	#,
 4150 19ff 4983FF05 		cmp	r15, 5	# tmp301,
 4151 1a03 742A     		je	.L405	#,
 4152 1a05 4983FF06 		cmp	r15, 6	# tmp301,
 4153 1a09 7412     		je	.L406	#,
 487:sieve_extend.c ****         }
 4154              		.loc 1 487 13 is_stmt 1 view .LVU1370
 4155              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4156              		.loc 1 487 45 is_stmt 0 view .LVU1371
 4157 1a0b C59DEB43 		vpor	ymm0, ymm12, YMMWORD PTR 32[rbx]	# tmp401, quadmask.61_222, MEM[base: _73, offset: 0B]
 4157      20
 4158              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4159              		.loc 1 486 67 view .LVU1372
 4160 1a10 4883C201 		add	rdx, 1	# ivtmp.267,
 4161              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4162              		.loc 1 487 45 view .LVU1373
 4163 1a14 C5FD7F43 		vmovdqa	YMMWORD PTR 32[rbx], ymm0	# MEM[base: _73, offset: 0B], tmp401
 4163      20
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4164              		.loc 1 486 52 is_stmt 1 view .LVU1374
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4165              		.loc 1 486 15 view .LVU1375
 4166 1a19 4C8D7340 		lea	r14, 64[rbx]	# ivtmp.278,
 4167              	.L406:
 487:sieve_extend.c ****         }
 4168              		.loc 1 487 13 view .LVU1376
 4169              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4170              		.loc 1 487 45 is_stmt 0 view .LVU1377
 4171 1a1d C4C11DEB 		vpor	ymm4, ymm12, YMMWORD PTR [r14]	# tmp402, quadmask.61_222, MEM[base: _73, offset: 0B]
 4171      26
 4172              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4173              		.loc 1 486 67 view .LVU1378
 4174 1a22 4883C201 		add	rdx, 1	# ivtmp.267,
 4175              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4176              		.loc 1 487 45 view .LVU1379
 4177 1a26 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm4	# MEM[base: _73, offset: 0B], tmp402
 4177      26
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4178              		.loc 1 486 52 is_stmt 1 view .LVU1380
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4179              		.loc 1 486 15 view .LVU1381
 4180 1a2b 4983C620 		add	r14, 32	# ivtmp.278,
 4181              	.L405:
 487:sieve_extend.c ****         }
 4182              		.loc 1 487 13 view .LVU1382
 4183              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 122


 487:sieve_extend.c ****         }
 4184              		.loc 1 487 45 is_stmt 0 view .LVU1383
 4185 1a2f C4C11DEB 		vpor	ymm5, ymm12, YMMWORD PTR [r14]	# tmp403, quadmask.61_222, MEM[base: _73, offset: 0B]
 4185      2E
 4186              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4187              		.loc 1 486 67 view .LVU1384
 4188 1a34 4883C201 		add	rdx, 1	# ivtmp.267,
 4189              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4190              		.loc 1 487 45 view .LVU1385
 4191 1a38 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm5	# MEM[base: _73, offset: 0B], tmp403
 4191      2E
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4192              		.loc 1 486 52 is_stmt 1 view .LVU1386
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4193              		.loc 1 486 15 view .LVU1387
 4194 1a3d 4983C620 		add	r14, 32	# ivtmp.278,
 4195              	.L404:
 487:sieve_extend.c ****         }
 4196              		.loc 1 487 13 view .LVU1388
 4197              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4198              		.loc 1 487 45 is_stmt 0 view .LVU1389
 4199 1a41 C4C11DEB 		vpor	ymm6, ymm12, YMMWORD PTR [r14]	# tmp404, quadmask.61_222, MEM[base: _73, offset: 0B]
 4199      36
 4200              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4201              		.loc 1 486 67 view .LVU1390
 4202 1a46 4883C201 		add	rdx, 1	# ivtmp.267,
 4203              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4204              		.loc 1 487 45 view .LVU1391
 4205 1a4a C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm6	# MEM[base: _73, offset: 0B], tmp404
 4205      36
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4206              		.loc 1 486 52 is_stmt 1 view .LVU1392
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4207              		.loc 1 486 15 view .LVU1393
 4208 1a4f 4983C620 		add	r14, 32	# ivtmp.278,
 4209              	.L403:
 487:sieve_extend.c ****         }
 4210              		.loc 1 487 13 view .LVU1394
 4211              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4212              		.loc 1 487 45 is_stmt 0 view .LVU1395
 4213 1a53 C4C11DEB 		vpor	ymm7, ymm12, YMMWORD PTR [r14]	# tmp405, quadmask.61_222, MEM[base: _73, offset: 0B]
 4213      3E
 4214              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4215              		.loc 1 486 67 view .LVU1396
 4216 1a58 4883C201 		add	rdx, 1	# ivtmp.267,
 4217              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4218              		.loc 1 487 45 view .LVU1397
 4219 1a5c C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm7	# MEM[base: _73, offset: 0B], tmp405
 4219      3E
GAS LISTING /tmp/ccH5HMHD.s 			page 123


 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4220              		.loc 1 486 52 is_stmt 1 view .LVU1398
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4221              		.loc 1 486 15 view .LVU1399
 4222 1a61 4983C620 		add	r14, 32	# ivtmp.278,
 4223              	.L402:
 487:sieve_extend.c ****         }
 4224              		.loc 1 487 13 view .LVU1400
 4225              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4226              		.loc 1 487 45 is_stmt 0 view .LVU1401
 4227 1a65 C4411DEB 		vpor	ymm8, ymm12, YMMWORD PTR [r14]	# tmp406, quadmask.61_222, MEM[base: _73, offset: 0B]
 4227      06
 4228              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4229              		.loc 1 486 67 view .LVU1402
 4230 1a6a 4883C201 		add	rdx, 1	# ivtmp.267,
 4231              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4232              		.loc 1 487 45 view .LVU1403
 4233 1a6e C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm8	# MEM[base: _73, offset: 0B], tmp406
 4233      06
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4234              		.loc 1 486 52 is_stmt 1 view .LVU1404
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4235              		.loc 1 486 15 view .LVU1405
 4236 1a73 4983C620 		add	r14, 32	# ivtmp.278,
 4237              	.L401:
 487:sieve_extend.c ****         }
 4238              		.loc 1 487 13 view .LVU1406
 4239              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4240              		.loc 1 487 45 is_stmt 0 view .LVU1407
 4241 1a77 C4411DEB 		vpor	ymm9, ymm12, YMMWORD PTR [r14]	# tmp407, quadmask.61_222, MEM[base: _73, offset: 0B]
 4241      0E
 4242              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4243              		.loc 1 486 67 view .LVU1408
 4244 1a7c 4883C201 		add	rdx, 1	# ivtmp.267,
 4245              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4246              		.loc 1 487 45 view .LVU1409
 4247 1a80 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm9	# MEM[base: _73, offset: 0B], tmp407
 4247      0E
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4248              		.loc 1 486 52 is_stmt 1 view .LVU1410
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4249              		.loc 1 486 15 view .LVU1411
 4250 1a85 4983C620 		add	r14, 32	# ivtmp.278,
 4251              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4252              		.loc 1 486 9 is_stmt 0 view .LVU1412
 4253 1a89 4939D1   		cmp	r9, rdx	# range_stop_vector, ivtmp.267
 4254 1a8c 0F828B00 		jb	.L290	#,
 4254      0000
 4255              	.L291:
 487:sieve_extend.c ****         }
GAS LISTING /tmp/ccH5HMHD.s 			page 124


 4256              		.loc 1 487 13 is_stmt 1 view .LVU1413
 4257              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4258              		.loc 1 487 45 is_stmt 0 view .LVU1414
 4259 1a92 C4411DEB 		vpor	ymm10, ymm12, YMMWORD PTR [r14]	# tmp345, quadmask.61_222, MEM[base: _73, offset: 0B]
 4259      16
 4260 1a97 C4411DEB 		vpor	ymm11, ymm12, YMMWORD PTR 32[r14]	# tmp348, quadmask.61_222, MEM[base: _73, offset: 0B]
 4260      5E20
 4261 1a9d C4411DEB 		vpor	ymm13, ymm12, YMMWORD PTR 64[r14]	# tmp351, quadmask.61_222, MEM[base: _73, offset: 0B]
 4261      6E40
 4262 1aa3 C4411DEB 		vpor	ymm14, ymm12, YMMWORD PTR 96[r14]	# tmp354, quadmask.61_222, MEM[base: _73, offset: 0B]
 4262      7660
 4263 1aa9 C4411DEB 		vpor	ymm15, ymm12, YMMWORD PTR 128[r14]	# tmp357, quadmask.61_222, MEM[base: _73, offset: 0B]
 4263      BE800000 
 4263      00
 4264 1ab2 C4C11DEB 		vpor	ymm1, ymm12, YMMWORD PTR 160[r14]	# tmp360, quadmask.61_222, MEM[base: _73, offset: 0B]
 4264      8EA00000 
 4264      00
 4265 1abb C4C11DEB 		vpor	ymm3, ymm12, YMMWORD PTR 192[r14]	# tmp363, quadmask.61_222, MEM[base: _73, offset: 0B]
 4265      9EC00000 
 4265      00
 4266 1ac4 C4C11DEB 		vpor	ymm0, ymm12, YMMWORD PTR 224[r14]	# tmp366, quadmask.61_222, MEM[base: _73, offset: 0B]
 4266      86E00000 
 4266      00
 4267              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4268              		.loc 1 486 67 view .LVU1415
 4269 1acd 4883C208 		add	rdx, 8	# ivtmp.267,
 4270 1ad1 4981C600 		add	r14, 256	# ivtmp.278,
 4270      010000
 4271              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4272              		.loc 1 487 45 view .LVU1416
 4273 1ad8 C4417D7F 		vmovdqa	YMMWORD PTR -256[r14], ymm10	# MEM[base: _73, offset: 0B], tmp345
 4273      9600FFFF 
 4273      FF
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4274              		.loc 1 486 52 is_stmt 1 view .LVU1417
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4275              		.loc 1 486 15 view .LVU1418
 487:sieve_extend.c ****         }
 4276              		.loc 1 487 13 view .LVU1419
 4277              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4278              		.loc 1 487 45 is_stmt 0 view .LVU1420
 4279 1ae1 C4417D7F 		vmovdqa	YMMWORD PTR -224[r14], ymm11	# MEM[base: _73, offset: 0B], tmp348
 4279      9E20FFFF 
 4279      FF
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4280              		.loc 1 486 52 is_stmt 1 view .LVU1421
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4281              		.loc 1 486 15 view .LVU1422
 487:sieve_extend.c ****         }
 4282              		.loc 1 487 13 view .LVU1423
 4283              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4284              		.loc 1 487 45 is_stmt 0 view .LVU1424
GAS LISTING /tmp/ccH5HMHD.s 			page 125


 4285 1aea C4417D7F 		vmovdqa	YMMWORD PTR -192[r14], ymm13	# MEM[base: _73, offset: 0B], tmp351
 4285      AE40FFFF 
 4285      FF
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4286              		.loc 1 486 52 is_stmt 1 view .LVU1425
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4287              		.loc 1 486 15 view .LVU1426
 487:sieve_extend.c ****         }
 4288              		.loc 1 487 13 view .LVU1427
 4289              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4290              		.loc 1 487 45 is_stmt 0 view .LVU1428
 4291 1af3 C4417D7F 		vmovdqa	YMMWORD PTR -160[r14], ymm14	# MEM[base: _73, offset: 0B], tmp354
 4291      B660FFFF 
 4291      FF
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4292              		.loc 1 486 52 is_stmt 1 view .LVU1429
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4293              		.loc 1 486 15 view .LVU1430
 487:sieve_extend.c ****         }
 4294              		.loc 1 487 13 view .LVU1431
 4295              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4296              		.loc 1 487 45 is_stmt 0 view .LVU1432
 4297 1afc C4417D7F 		vmovdqa	YMMWORD PTR -128[r14], ymm15	# MEM[base: _73, offset: 0B], tmp357
 4297      7E80
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4298              		.loc 1 486 52 is_stmt 1 view .LVU1433
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4299              		.loc 1 486 15 view .LVU1434
 487:sieve_extend.c ****         }
 4300              		.loc 1 487 13 view .LVU1435
 4301              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4302              		.loc 1 487 45 is_stmt 0 view .LVU1436
 4303 1b02 C4C17D7F 		vmovdqa	YMMWORD PTR -96[r14], ymm1	# MEM[base: _73, offset: 0B], tmp360
 4303      4EA0
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4304              		.loc 1 486 52 is_stmt 1 view .LVU1437
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4305              		.loc 1 486 15 view .LVU1438
 487:sieve_extend.c ****         }
 4306              		.loc 1 487 13 view .LVU1439
 4307              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4308              		.loc 1 487 45 is_stmt 0 view .LVU1440
 4309 1b08 C4C17D7F 		vmovdqa	YMMWORD PTR -64[r14], ymm3	# MEM[base: _73, offset: 0B], tmp363
 4309      5EC0
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4310              		.loc 1 486 52 is_stmt 1 view .LVU1441
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4311              		.loc 1 486 15 view .LVU1442
 487:sieve_extend.c ****         }
 4312              		.loc 1 487 13 view .LVU1443
 4313              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4314              		.loc 1 487 45 is_stmt 0 view .LVU1444
GAS LISTING /tmp/ccH5HMHD.s 			page 126


 4315 1b0e C4C17D7F 		vmovdqa	YMMWORD PTR -32[r14], ymm0	# MEM[base: _73, offset: 0B], tmp366
 4315      46E0
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4316              		.loc 1 486 52 is_stmt 1 view .LVU1445
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4317              		.loc 1 486 15 view .LVU1446
 4318              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4319              		.loc 1 486 9 is_stmt 0 view .LVU1447
 4320 1b14 4939D1   		cmp	r9, rdx	# range_stop_vector, ivtmp.267
 4321 1b17 0F8375FF 		jnb	.L291	#,
 4321      FFFF
 4322              	.L290:
 490:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4323              		.loc 1 490 9 is_stmt 1 view .LVU1448
 4324              	# sieve_extend.c:490:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 490:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4325              		.loc 1 490 19 is_stmt 0 view .LVU1449
 4326 1b1d 4C8D1C95 		lea	r11, 0[0+rdx*4]	# index_word,
 4326      00000000 
 4327              	.LVL171:
 491:sieve_extend.c ****         if (index_word <= range_stop_word) {
 4328              		.loc 1 491 9 is_stmt 1 view .LVU1450
 492:sieve_extend.c ****             #pragma ivdep
 4329              		.loc 1 492 9 view .LVU1451
 4330              	# sieve_extend.c:492:         if (index_word <= range_stop_word) {
 492:sieve_extend.c ****             #pragma ivdep
 4331              		.loc 1 492 12 is_stmt 0 view .LVU1452
 4332 1b25 4D39DD   		cmp	r13, r11	# range_stop_word, index_word
 4333 1b28 7336     		jnb	.L450	#,
 4334              	.LVL172:
 4335              	.L293:
 492:sieve_extend.c ****             #pragma ivdep
 4336              		.loc 1 492 12 view .LVU1453
 4337              	.LBE330:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4338              		.loc 1 461 41 is_stmt 1 view .LVU1454
 4339              	# sieve_extend.c:461:     for (counter_t index = range_start; index < range_stop_unique;) {
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4340              		.loc 1 461 5 is_stmt 0 view .LVU1455
 4341 1b2a 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4342 1b2d 0F871DFB 		ja	.L273	#,
 4342      FFFF
 4343              	.LVL173:
 4344              	.L448:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4345              		.loc 1 461 5 view .LVU1456
 4346 1b33 C5F877   		vzeroupper
 4347              	.LVL174:
 4348              	.L266:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4349              		.loc 1 461 5 view .LVU1457
 4350              	.LBE329:
 4351              	# sieve_extend.c:500: }
 500:sieve_extend.c **** 
 4352              		.loc 1 500 1 view .LVU1458
 4353 1b36 488B4424 		mov	rax, QWORD PTR 88[rsp]	# tmp482, D.6664
GAS LISTING /tmp/ccH5HMHD.s 			page 127


 4353      58
 4354 1b3b 64483304 		xor	rax, QWORD PTR fs:40	# tmp482, MEM[(<address-space-1> long unsigned int *)40B]
 4354      25280000 
 4354      00
 4355 1b44 0F85FA03 		jne	.L451	#,
 4355      0000
 4356 1b4a 488D65D8 		lea	rsp, -40[rbp]	#,
 4357 1b4e 5B       		pop	rbx	#
 4358 1b4f 415C     		pop	r12	#
 4359 1b51 415D     		pop	r13	#
 4360 1b53 415E     		pop	r14	#
 4361 1b55 415F     		pop	r15	#
 4362 1b57 5D       		pop	rbp	#
 4363              		.cfi_remember_state
 4364              		.cfi_def_cfa 7, 8
 4365 1b58 C3       		ret	
 4366              	.LVL175:
 4367 1b59 0F1F8000 		.p2align 4,,7
 4367      000000
 4368              		.p2align 3
 4369              	.L450:
 4370              		.cfi_restore_state
 4371              	.LBB333:
 4372              	.LBB331:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4373              		.loc 1 494 27 is_stmt 1 view .LVU1459
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4374              		.loc 1 495 17 view .LVU1460
 496:sieve_extend.c ****             }
 4375              		.loc 1 496 21 view .LVU1461
 4376              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4377              		.loc 1 496 52 is_stmt 0 view .LVU1462
 4378 1b60 4C8B6424 		mov	r12, QWORD PTR 32[rsp]	# quadmask, quadmask
 4378      20
 4379              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4380              		.loc 1 495 31 view .LVU1463
 4381 1b65 498D4301 		lea	rax, 1[r11]	# _204,
 4382              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4383              		.loc 1 496 52 view .LVU1464
 4384 1b69 48C1E205 		sal	rdx, 5	# tmp291,
 4385 1b6d 4C092417 		or	QWORD PTR [rdi+rdx], r12	# *_209, quadmask
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4386              		.loc 1 494 51 is_stmt 1 view .LVU1465
 4387              	.LVL176:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4388              		.loc 1 494 27 view .LVU1466
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4389              		.loc 1 495 17 view .LVU1467
 4390              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4391              		.loc 1 495 20 is_stmt 0 view .LVU1468
 4392 1b71 4939C5   		cmp	r13, rax	# range_stop_word, _204
 4393 1b74 7209     		jb	.L294	#,
 496:sieve_extend.c ****             }
GAS LISTING /tmp/ccH5HMHD.s 			page 128


 4394              		.loc 1 496 21 is_stmt 1 view .LVU1469
 4395              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4396              		.loc 1 496 52 is_stmt 0 view .LVU1470
 4397 1b76 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# quadmask, quadmask
 4397      28
 4398 1b7b 4C0904C7 		or	QWORD PTR [rdi+rax*8], r8	# *_186, quadmask
 4399              	.L294:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4400              		.loc 1 494 51 is_stmt 1 view .LVU1471
 4401              	.LVL177:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4402              		.loc 1 494 27 view .LVU1472
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4403              		.loc 1 495 17 view .LVU1473
 4404              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4405              		.loc 1 495 31 is_stmt 0 view .LVU1474
 4406 1b7f 498D5302 		lea	rdx, 2[r11]	# _202,
 4407              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4408              		.loc 1 495 20 view .LVU1475
 4409 1b83 4939D5   		cmp	r13, rdx	# range_stop_word, _202
 4410 1b86 7209     		jb	.L295	#,
 496:sieve_extend.c ****             }
 4411              		.loc 1 496 21 is_stmt 1 view .LVU1476
 4412              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4413              		.loc 1 496 52 is_stmt 0 view .LVU1477
 4414 1b88 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# quadmask, quadmask
 4414      30
 4415 1b8d 48091CD7 		or	QWORD PTR [rdi+rdx*8], rbx	# *_192, quadmask
 4416              	.L295:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4417              		.loc 1 494 51 is_stmt 1 view .LVU1478
 4418              	.LVL178:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4419              		.loc 1 494 27 view .LVU1479
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4420              		.loc 1 495 17 view .LVU1480
 4421              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4422              		.loc 1 495 31 is_stmt 0 view .LVU1481
 4423 1b91 4983C303 		add	r11, 3	# _200,
 4424              	.LVL179:
 4425              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4426              		.loc 1 495 20 view .LVU1482
 4427 1b95 4D39DD   		cmp	r13, r11	# range_stop_word, _200
 4428 1b98 7290     		jb	.L293	#,
 496:sieve_extend.c ****             }
 4429              		.loc 1 496 21 is_stmt 1 view .LVU1483
 4430              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4431              		.loc 1 496 52 is_stmt 0 view .LVU1484
 4432 1b9a 4C8B7C24 		mov	r15, QWORD PTR 56[rsp]	# quadmask, quadmask
 4432      38
GAS LISTING /tmp/ccH5HMHD.s 			page 129


 4433 1b9f 4E093CDF 		or	QWORD PTR [rdi+r11*8], r15	# *_198, quadmask
 4434 1ba3 EB85     		jmp	.L293	#
 4435              	.LVL180:
 4436              	.L449:
 496:sieve_extend.c ****             }
 4437              		.loc 1 496 52 view .LVU1485
 4438 1ba5 4889D1   		mov	rcx, rdx	# _285, step
 4439 1ba8 488D1C52 		lea	rbx, [rdx+rdx*2]	# tmp245,
 4440 1bac 4989D3   		mov	r11, rdx	# _292, step
 4441 1baf 4989D4   		mov	r12, rdx	# _296, step
 4442 1bb2 48C1E107 		sal	rcx, 7	# _285,
 4443              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 4444              		.loc 1 468 31 view .LVU1486
 4445 1bb6 41BF0100 		mov	r15d, 1	# tmp252,
 4445      0000
 4446 1bbc 49C1E305 		sal	r11, 5	# _292,
 4447 1bc0 49C1E406 		sal	r12, 6	# _296,
 4448 1bc4 48C1E305 		sal	rbx, 5	# tmp246,
 4449 1bc8 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, _285
 4449      18
 4450 1bcd 0F1F00   		.p2align 4
 4451              		.p2align 3
 4452              	.L285:
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 4453              		.loc 1 462 9 is_stmt 1 view .LVU1487
 4454              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 4455              		.loc 1 462 54 is_stmt 0 view .LVU1488
 4456 1bd0 4889F1   		mov	rcx, rsi	# tmp247, range_start
 4457              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
 464:sieve_extend.c ****         
 4458              		.loc 1 464 35 view .LVU1489
 4459 1bd3 4989F0   		mov	r8, rsi	# tmp249, range_start
 4460              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 4461              		.loc 1 462 54 view .LVU1490
 4462 1bd6 48C1E908 		shr	rcx, 8	# tmp247,
 4463              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
 464:sieve_extend.c ****         
 4464              		.loc 1 464 35 view .LVU1491
 4465 1bda 49C1E806 		shr	r8, 6	# tmp249,
 4466              	# sieve_extend.c:462:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 462:sieve_extend.c ****         register bitvector_t quadmask = { };
 4467              		.loc 1 462 25 view .LVU1492
 4468 1bde 48C1E102 		sal	rcx, 2	# current_vector_start_word,
 4469              	.LVL181:
 463:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4470              		.loc 1 463 9 is_stmt 1 view .LVU1493
 4471              	# sieve_extend.c:463:         register bitvector_t quadmask = { };
 463:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4472              		.loc 1 463 30 is_stmt 0 view .LVU1494
 4473 1be2 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp248
 4473      2420
 464:sieve_extend.c ****         
 4474              		.loc 1 464 9 is_stmt 1 view .LVU1495
 4475              	# sieve_extend.c:464:         register counter_t word = wordindex(index) - current_vector_start_wor
GAS LISTING /tmp/ccH5HMHD.s 			page 130


 464:sieve_extend.c ****         
 4476              		.loc 1 464 28 is_stmt 0 view .LVU1496
 4477 1be8 4929C8   		sub	r8, rcx	# word, current_vector_start_word
 4478              	.LVL182:
 464:sieve_extend.c ****         
 4479              		.loc 1 464 28 view .LVU1497
 4480 1beb EB08     		jmp	.L274	#
 4481 1bed 0F1F00   		.p2align 4,,7
 4482              		.p2align 3
 4483              	.L452:
 4484              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 4485              		.loc 1 471 9 discriminator 1 view .LVU1498
 4486 1bf0 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4487 1bf3 721D     		jb	.L298	#,
 4488              	.L274:
 467:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4489              		.loc 1 467 9 is_stmt 1 discriminator 1 view .LVU1499
 468:sieve_extend.c ****             index += step;
 4490              		.loc 1 468 13 discriminator 1 view .LVU1500
 4491              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 4492              		.loc 1 468 31 is_stmt 0 discriminator 1 view .LVU1501
 4493 1bf5 C4C2C9F7 		shlx	rax, r15, rsi	# tmp251, tmp252, range_start
 4493      C7
 4494              	# sieve_extend.c:469:             index += step;
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4495              		.loc 1 469 19 discriminator 1 view .LVU1502
 4496 1bfa 4801D6   		add	rsi, rdx	# range_start, step
 4497              	# sieve_extend.c:468:             quadmask[word] |= markmask(index);
 468:sieve_extend.c ****             index += step;
 4498              		.loc 1 468 28 discriminator 1 view .LVU1503
 4499 1bfd 4A0944C4 		or	QWORD PTR 32[rsp+r8*8], rax	# quadmask, tmp251
 4499      20
 469:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4500              		.loc 1 469 13 is_stmt 1 discriminator 1 view .LVU1504
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 4501              		.loc 1 470 13 discriminator 1 view .LVU1505
 4502              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 4503              		.loc 1 470 20 is_stmt 0 discriminator 1 view .LVU1506
 4504 1c02 4989F0   		mov	r8, rsi	# tmp253, range_start
 4505              	.LVL183:
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 4506              		.loc 1 470 20 discriminator 1 view .LVU1507
 4507 1c05 49C1E806 		shr	r8, 6	# tmp253,
 4508              	# sieve_extend.c:470:             word = wordindex(index) - current_vector_start_word;
 470:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 4509              		.loc 1 470 18 discriminator 1 view .LVU1508
 4510 1c09 4929C8   		sub	r8, rcx	# word, current_vector_start_word
 4511              	.LVL184:
 471:sieve_extend.c ****         
 4512              		.loc 1 471 17 is_stmt 1 discriminator 1 view .LVU1509
 4513              	# sieve_extend.c:471:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 471:sieve_extend.c ****         
 4514              		.loc 1 471 9 is_stmt 0 discriminator 1 view .LVU1510
 4515 1c0c 4983F803 		cmp	r8, 3	# word,
GAS LISTING /tmp/ccH5HMHD.s 			page 131


 4516 1c10 76DE     		jbe	.L452	#,
 4517              	.L298:
 474:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4518              		.loc 1 474 9 is_stmt 1 view .LVU1511
 4519              	# sieve_extend.c:474:         register counter_t current_vector = current_vector_start_word >> (SHI
 474:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4520              		.loc 1 474 28 is_stmt 0 view .LVU1512
 4521 1c12 48C1E902 		shr	rcx, 2	# ivtmp.295,
 4522              	.LVL185:
 475:sieve_extend.c **** 
 4523              		.loc 1 475 9 is_stmt 1 view .LVU1513
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4524              		.loc 1 478 9 view .LVU1514
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4525              		.loc 1 478 15 view .LVU1515
 4526              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4527              		.loc 1 478 29 is_stmt 0 view .LVU1516
 4528 1c16 4D8D040E 		lea	r8, [r14+rcx]	# ivtmp.295,
 4529              	.LVL186:
 4530              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4531              		.loc 1 478 9 view .LVU1517
 4532 1c1a 4D39C8   		cmp	r8, r9	# ivtmp.295, range_stop_vector
 4533 1c1d 0F870D01 		ja	.L276	#,
 4533      0000
 4534              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4535              		.loc 1 479 45 view .LVU1518
 4536 1c23 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.57_43, quadmask
 4536      2420
 4537 1c29 4889C8   		mov	rax, rcx	# ivtmp.295, ivtmp.295
 4538 1c2c 48C1E005 		sal	rax, 5	# ivtmp.295,
 4539 1c30 4801F8   		add	rax, rdi	# ivtmp.296, bitarray_word
 4540              	.LVL187:
 4541              	.L277:
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4542              		.loc 1 479 13 is_stmt 1 discriminator 2 view .LVU1519
 4543              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4544              		.loc 1 479 45 is_stmt 0 discriminator 2 view .LVU1520
 4545 1c33 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp259, quadmask.57_43, MEM[base: _289, offset: 0B]
 4546 1c37 4C89C1   		mov	rcx, r8	# ivtmp.295, ivtmp.295
 4547 1c3a C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _289, offset: 0B], tmp259
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4548              		.loc 1 480 13 is_stmt 1 discriminator 2 view .LVU1521
 4549 1c3e 4F8D0430 		lea	r8, [r8+r14]	# ivtmp.295,
 4550              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4551              		.loc 1 480 50 is_stmt 0 discriminator 2 view .LVU1522
 4552 1c42 C4A17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [rax+r11]	# tmp260, quadmask.57_43, MEM[base: _289, index: _292, offs
 4552      1C18
 4553 1c48 C4A17D7F 		vmovdqa	YMMWORD PTR [rax+r11], ymm3	# MEM[base: _289, index: _292, offset: 0B], tmp260
 4553      1C18
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4554              		.loc 1 481 13 is_stmt 1 discriminator 2 view .LVU1523
 4555              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 132


 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4556              		.loc 1 481 52 is_stmt 0 discriminator 2 view .LVU1524
 4557 1c4e C4A17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [rax+r12]	# tmp261, quadmask.57_43, MEM[base: _289, index: _296, offs
 4557      2420
 4558 1c54 C4A17D7F 		vmovdqa	YMMWORD PTR [rax+r12], ymm4	# MEM[base: _289, index: _296, offset: 0B], tmp261
 4558      2420
 482:sieve_extend.c ****         }
 4559              		.loc 1 482 13 is_stmt 1 discriminator 2 view .LVU1525
 4560              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4561              		.loc 1 482 52 is_stmt 0 discriminator 2 view .LVU1526
 4562 1c5a C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rax+rbx]	# tmp262, quadmask.57_43, MEM[base: _289, index: _300, offs
 4562      18
 4563 1c5f C5FD7F2C 		vmovdqa	YMMWORD PTR [rax+rbx], ymm5	# MEM[base: _289, index: _300, offset: 0B], tmp262
 4563      18
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4564              		.loc 1 478 59 is_stmt 1 discriminator 2 view .LVU1527
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4565              		.loc 1 478 15 discriminator 2 view .LVU1528
 4566 1c64 48034424 		add	rax, QWORD PTR 24[rsp]	# ivtmp.296, %sfp
 4566      18
 4567              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4568              		.loc 1 478 9 is_stmt 0 discriminator 2 view .LVU1529
 4569 1c69 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.295
 4570 1c6c 0F82BE00 		jb	.L276	#,
 4570      0000
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4571              		.loc 1 479 13 is_stmt 1 view .LVU1530
 4572              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4573              		.loc 1 479 45 is_stmt 0 view .LVU1531
 4574 1c72 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp461, quadmask.57_43, MEM[base: _289, offset: 0B]
 4575 1c76 4C89C1   		mov	rcx, r8	# ivtmp.295, ivtmp.295
 4576 1c79 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _289, offset: 0B], tmp461
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4577              		.loc 1 480 13 is_stmt 1 view .LVU1532
 4578 1c7d 4F8D0430 		lea	r8, [r8+r14]	# ivtmp.295,
 4579              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4580              		.loc 1 480 50 is_stmt 0 view .LVU1533
 4581 1c81 C4A17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [rax+r11]	# tmp462, quadmask.57_43, MEM[base: _289, index: _292, offs
 4581      3C18
 4582 1c87 C4A17D7F 		vmovdqa	YMMWORD PTR [rax+r11], ymm7	# MEM[base: _289, index: _292, offset: 0B], tmp462
 4582      3C18
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4583              		.loc 1 481 13 is_stmt 1 view .LVU1534
 4584              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4585              		.loc 1 481 52 is_stmt 0 view .LVU1535
 4586 1c8d C4217DEB 		vpor	ymm8, ymm0, YMMWORD PTR [rax+r12]	# tmp463, quadmask.57_43, MEM[base: _289, index: _296, offs
 4586      0420
 4587 1c93 C4217D7F 		vmovdqa	YMMWORD PTR [rax+r12], ymm8	# MEM[base: _289, index: _296, offset: 0B], tmp463
 4587      0420
 482:sieve_extend.c ****         }
 4588              		.loc 1 482 13 is_stmt 1 view .LVU1536
 4589              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 133


 482:sieve_extend.c ****         }
 4590              		.loc 1 482 52 is_stmt 0 view .LVU1537
 4591 1c99 C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rax+rbx]	# tmp464, quadmask.57_43, MEM[base: _289, index: _300, offs
 4591      18
 4592 1c9e C57D7F0C 		vmovdqa	YMMWORD PTR [rax+rbx], ymm9	# MEM[base: _289, index: _300, offset: 0B], tmp464
 4592      18
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4593              		.loc 1 478 59 is_stmt 1 view .LVU1538
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4594              		.loc 1 478 15 view .LVU1539
 4595 1ca3 48034424 		add	rax, QWORD PTR 24[rsp]	# ivtmp.296, %sfp
 4595      18
 4596              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4597              		.loc 1 478 9 is_stmt 0 view .LVU1540
 4598 1ca8 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.295
 4599 1cab 0F827F00 		jb	.L276	#,
 4599      0000
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4600              		.loc 1 479 13 is_stmt 1 view .LVU1541
 4601              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4602              		.loc 1 479 45 is_stmt 0 view .LVU1542
 4603 1cb1 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp467, quadmask.57_43, MEM[base: _289, offset: 0B]
 4604 1cb5 4C89C1   		mov	rcx, r8	# ivtmp.295, ivtmp.295
 4605 1cb8 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: _289, offset: 0B], tmp467
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4606              		.loc 1 480 13 is_stmt 1 view .LVU1543
 4607 1cbc 4F8D0430 		lea	r8, [r8+r14]	# ivtmp.295,
 4608              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4609              		.loc 1 480 50 is_stmt 0 view .LVU1544
 4610 1cc0 C4217DEB 		vpor	ymm11, ymm0, YMMWORD PTR [rax+r11]	# tmp468, quadmask.57_43, MEM[base: _289, index: _292, off
 4610      1C18
 4611 1cc6 C4217D7F 		vmovdqa	YMMWORD PTR [rax+r11], ymm11	# MEM[base: _289, index: _292, offset: 0B], tmp468
 4611      1C18
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4612              		.loc 1 481 13 is_stmt 1 view .LVU1545
 4613              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4614              		.loc 1 481 52 is_stmt 0 view .LVU1546
 4615 1ccc C4217DEB 		vpor	ymm12, ymm0, YMMWORD PTR [rax+r12]	# tmp469, quadmask.57_43, MEM[base: _289, index: _296, off
 4615      2420
 4616 1cd2 C4217D7F 		vmovdqa	YMMWORD PTR [rax+r12], ymm12	# MEM[base: _289, index: _296, offset: 0B], tmp469
 4616      2420
 482:sieve_extend.c ****         }
 4617              		.loc 1 482 13 is_stmt 1 view .LVU1547
 4618              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4619              		.loc 1 482 52 is_stmt 0 view .LVU1548
 4620 1cd8 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rax+rbx]	# tmp470, quadmask.57_43, MEM[base: _289, index: _300, off
 4620      18
 4621 1cdd C57D7F2C 		vmovdqa	YMMWORD PTR [rax+rbx], ymm13	# MEM[base: _289, index: _300, offset: 0B], tmp470
 4621      18
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4622              		.loc 1 478 59 is_stmt 1 view .LVU1549
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 134


 4623              		.loc 1 478 15 view .LVU1550
 4624 1ce2 48034424 		add	rax, QWORD PTR 24[rsp]	# ivtmp.296, %sfp
 4624      18
 4625              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4626              		.loc 1 478 9 is_stmt 0 view .LVU1551
 4627 1ce7 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.295
 4628 1cea 7244     		jb	.L276	#,
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4629              		.loc 1 479 13 is_stmt 1 view .LVU1552
 4630              	# sieve_extend.c:479:             bitarray_vector[current_vector] |= quadmask;
 479:sieve_extend.c ****             bitarray_vector[current_vector+step] |= quadmask;
 4631              		.loc 1 479 45 is_stmt 0 view .LVU1553
 4632 1cec C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp473, quadmask.57_43, MEM[base: _289, offset: 0B]
 4633 1cf0 4C89C1   		mov	rcx, r8	# ivtmp.295, ivtmp.295
 4634 1cf3 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: _289, offset: 0B], tmp473
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4635              		.loc 1 480 13 is_stmt 1 view .LVU1554
 4636 1cf7 4F8D0430 		lea	r8, [r8+r14]	# ivtmp.295,
 4637              	# sieve_extend.c:480:             bitarray_vector[current_vector+step] |= quadmask;
 480:sieve_extend.c ****             bitarray_vector[current_vector+2*step] |= quadmask;
 4638              		.loc 1 480 50 is_stmt 0 view .LVU1555
 4639 1cfb C4217DEB 		vpor	ymm15, ymm0, YMMWORD PTR [rax+r11]	# tmp474, quadmask.57_43, MEM[base: _289, index: _292, off
 4639      3C18
 4640 1d01 C4217D7F 		vmovdqa	YMMWORD PTR [rax+r11], ymm15	# MEM[base: _289, index: _292, offset: 0B], tmp474
 4640      3C18
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4641              		.loc 1 481 13 is_stmt 1 view .LVU1556
 4642              	# sieve_extend.c:481:             bitarray_vector[current_vector+2*step] |= quadmask;
 481:sieve_extend.c ****             bitarray_vector[current_vector+3*step] |= quadmask;
 4643              		.loc 1 481 52 is_stmt 0 view .LVU1557
 4644 1d07 C4A17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [rax+r12]	# tmp475, quadmask.57_43, MEM[base: _289, index: _296, offs
 4644      0C20
 4645 1d0d C4A17D7F 		vmovdqa	YMMWORD PTR [rax+r12], ymm1	# MEM[base: _289, index: _296, offset: 0B], tmp475
 4645      0C20
 482:sieve_extend.c ****         }
 4646              		.loc 1 482 13 is_stmt 1 view .LVU1558
 4647              	# sieve_extend.c:482:             bitarray_vector[current_vector+3*step] |= quadmask;
 482:sieve_extend.c ****         }
 4648              		.loc 1 482 52 is_stmt 0 view .LVU1559
 4649 1d13 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rbx]	# tmp476, quadmask.57_43, MEM[base: _289, index: _300, offs
 4649      18
 4650 1d18 C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rbx], ymm3	# MEM[base: _289, index: _300, offset: 0B], tmp476
 4650      18
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4651              		.loc 1 478 59 is_stmt 1 view .LVU1560
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4652              		.loc 1 478 15 view .LVU1561
 4653 1d1d 48034424 		add	rax, QWORD PTR 24[rsp]	# ivtmp.296, %sfp
 4653      18
 4654              	# sieve_extend.c:478:         for(; current_vector+4*step <= range_stop_vector; current_vector += 4
 478:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4655              		.loc 1 478 9 is_stmt 0 view .LVU1562
 4656 1d22 4D39C1   		cmp	r9, r8	# range_stop_vector, ivtmp.295
 4657 1d25 0F8308FF 		jnb	.L277	#,
 4657      FFFF
 4658 1d2b 0F1F4400 		.p2align 4
GAS LISTING /tmp/ccH5HMHD.s 			page 135


 4658      00
 4659              		.p2align 3
 4660              	.L276:
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4661              		.loc 1 486 15 is_stmt 1 view .LVU1563
 4662              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4663              		.loc 1 486 9 is_stmt 0 view .LVU1564
 4664 1d30 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4665 1d33 0F82B700 		jb	.L278	#,
 4665      0000
 4666              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4667              		.loc 1 487 45 view .LVU1565
 4668 1d39 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.61_67, quadmask
 4668      2420
 4669 1d3f 4889C8   		mov	rax, rcx	# tmp263, ivtmp.295
 4670 1d42 48C1E005 		sal	rax, 5	# tmp263,
 4671 1d46 4801F8   		add	rax, rdi	# ivtmp.290, bitarray_word
 4672              	.L279:
 487:sieve_extend.c ****         }
 4673              		.loc 1 487 13 is_stmt 1 discriminator 2 view .LVU1566
 4674              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4675              		.loc 1 487 45 is_stmt 0 discriminator 2 view .LVU1567
 4676 1d49 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp264, quadmask.61_67, MEM[base: _5, offset: 0B]
 4677              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4678              		.loc 1 486 67 discriminator 2 view .LVU1568
 4679 1d4d 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4680              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4681              		.loc 1 487 45 discriminator 2 view .LVU1569
 4682 1d50 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _5, offset: 0B], tmp264
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4683              		.loc 1 486 52 is_stmt 1 discriminator 2 view .LVU1570
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4684              		.loc 1 486 15 discriminator 2 view .LVU1571
 4685 1d54 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4686              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4687              		.loc 1 486 9 is_stmt 0 discriminator 2 view .LVU1572
 4688 1d57 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4689 1d5a 0F829000 		jb	.L278	#,
 4689      0000
 487:sieve_extend.c ****         }
 4690              		.loc 1 487 13 is_stmt 1 view .LVU1573
 4691              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4692              		.loc 1 487 45 is_stmt 0 view .LVU1574
 4693 1d60 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp448, quadmask.61_67, MEM[base: _5, offset: 0B]
 4694              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4695              		.loc 1 486 67 view .LVU1575
 4696 1d64 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4697              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
GAS LISTING /tmp/ccH5HMHD.s 			page 136


 4698              		.loc 1 487 45 view .LVU1576
 4699 1d67 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _5, offset: 0B], tmp448
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4700              		.loc 1 486 52 is_stmt 1 view .LVU1577
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4701              		.loc 1 486 15 view .LVU1578
 4702 1d6b 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4703              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4704              		.loc 1 486 9 is_stmt 0 view .LVU1579
 4705 1d6e 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4706 1d71 727D     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4707              		.loc 1 487 13 is_stmt 1 view .LVU1580
 4708              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4709              		.loc 1 487 45 is_stmt 0 view .LVU1581
 4710 1d73 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp450, quadmask.61_67, MEM[base: _5, offset: 0B]
 4711              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4712              		.loc 1 486 67 view .LVU1582
 4713 1d77 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4714              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4715              		.loc 1 487 45 view .LVU1583
 4716 1d7a C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _5, offset: 0B], tmp450
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4717              		.loc 1 486 52 is_stmt 1 view .LVU1584
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4718              		.loc 1 486 15 view .LVU1585
 4719 1d7e 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4720              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4721              		.loc 1 486 9 is_stmt 0 view .LVU1586
 4722 1d81 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4723 1d84 726A     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4724              		.loc 1 487 13 is_stmt 1 view .LVU1587
 4725              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4726              		.loc 1 487 45 is_stmt 0 view .LVU1588
 4727 1d86 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp452, quadmask.61_67, MEM[base: _5, offset: 0B]
 4728              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4729              		.loc 1 486 67 view .LVU1589
 4730 1d8a 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4731              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4732              		.loc 1 487 45 view .LVU1590
 4733 1d8d C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _5, offset: 0B], tmp452
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4734              		.loc 1 486 52 is_stmt 1 view .LVU1591
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4735              		.loc 1 486 15 view .LVU1592
 4736 1d91 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4737              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccH5HMHD.s 			page 137


 4738              		.loc 1 486 9 is_stmt 0 view .LVU1593
 4739 1d94 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4740 1d97 7257     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4741              		.loc 1 487 13 is_stmt 1 view .LVU1594
 4742              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4743              		.loc 1 487 45 is_stmt 0 view .LVU1595
 4744 1d99 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp454, quadmask.61_67, MEM[base: _5, offset: 0B]
 4745              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4746              		.loc 1 486 67 view .LVU1596
 4747 1d9d 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4748              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4749              		.loc 1 487 45 view .LVU1597
 4750 1da0 C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: _5, offset: 0B], tmp454
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4751              		.loc 1 486 52 is_stmt 1 view .LVU1598
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4752              		.loc 1 486 15 view .LVU1599
 4753 1da4 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4754              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4755              		.loc 1 486 9 is_stmt 0 view .LVU1600
 4756 1da7 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4757 1daa 7244     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4758              		.loc 1 487 13 is_stmt 1 view .LVU1601
 4759              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4760              		.loc 1 487 45 is_stmt 0 view .LVU1602
 4761 1dac C57DEB08 		vpor	ymm9, ymm0, YMMWORD PTR [rax]	# tmp456, quadmask.61_67, MEM[base: _5, offset: 0B]
 4762              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4763              		.loc 1 486 67 view .LVU1603
 4764 1db0 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4765              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4766              		.loc 1 487 45 view .LVU1604
 4767 1db3 C57D7F08 		vmovdqa	YMMWORD PTR [rax], ymm9	# MEM[base: _5, offset: 0B], tmp456
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4768              		.loc 1 486 52 is_stmt 1 view .LVU1605
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4769              		.loc 1 486 15 view .LVU1606
 4770 1db7 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4771              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4772              		.loc 1 486 9 is_stmt 0 view .LVU1607
 4773 1dba 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4774 1dbd 7231     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4775              		.loc 1 487 13 is_stmt 1 view .LVU1608
 4776              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4777              		.loc 1 487 45 is_stmt 0 view .LVU1609
 4778 1dbf C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp458, quadmask.61_67, MEM[base: _5, offset: 0B]
GAS LISTING /tmp/ccH5HMHD.s 			page 138


 4779              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4780              		.loc 1 486 67 view .LVU1610
 4781 1dc3 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4782              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4783              		.loc 1 487 45 view .LVU1611
 4784 1dc6 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: _5, offset: 0B], tmp458
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4785              		.loc 1 486 52 is_stmt 1 view .LVU1612
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4786              		.loc 1 486 15 view .LVU1613
 4787 1dca 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4788              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4789              		.loc 1 486 9 is_stmt 0 view .LVU1614
 4790 1dcd 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4791 1dd0 721E     		jb	.L278	#,
 487:sieve_extend.c ****         }
 4792              		.loc 1 487 13 is_stmt 1 view .LVU1615
 4793              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4794              		.loc 1 487 45 is_stmt 0 view .LVU1616
 4795 1dd2 C57DEB18 		vpor	ymm11, ymm0, YMMWORD PTR [rax]	# tmp460, quadmask.61_67, MEM[base: _5, offset: 0B]
 4796              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4797              		.loc 1 486 67 view .LVU1617
 4798 1dd6 4801D1   		add	rcx, rdx	# ivtmp.295, step
 4799              	# sieve_extend.c:487:             bitarray_vector[current_vector] |= quadmask;
 487:sieve_extend.c ****         }
 4800              		.loc 1 487 45 view .LVU1618
 4801 1dd9 C57D7F18 		vmovdqa	YMMWORD PTR [rax], ymm11	# MEM[base: _5, offset: 0B], tmp460
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4802              		.loc 1 486 52 is_stmt 1 view .LVU1619
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4803              		.loc 1 486 15 view .LVU1620
 4804 1ddd 4C01D8   		add	rax, r11	# ivtmp.290, _292
 4805              	# sieve_extend.c:486:         for(; current_vector <= range_stop_vector; current_vector += step) {
 486:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4806              		.loc 1 486 9 is_stmt 0 view .LVU1621
 4807 1de0 4939C9   		cmp	r9, rcx	# range_stop_vector, ivtmp.295
 4808 1de3 0F8360FF 		jnb	.L279	#,
 4808      FFFF
 4809 1de9 0F1F8000 		.p2align 4
 4809      000000
 4810              		.p2align 3
 4811              	.L278:
 490:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4812              		.loc 1 490 9 is_stmt 1 view .LVU1622
 4813              	# sieve_extend.c:490:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 490:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4814              		.loc 1 490 19 is_stmt 0 view .LVU1623
 4815 1df0 488D048D 		lea	rax, 0[0+rcx*4]	# index_word,
 4815      00000000 
 4816              	.LVL188:
 491:sieve_extend.c ****         if (index_word <= range_stop_word) {
 4817              		.loc 1 491 9 is_stmt 1 view .LVU1624
GAS LISTING /tmp/ccH5HMHD.s 			page 139


 492:sieve_extend.c ****             #pragma ivdep
 4818              		.loc 1 492 9 view .LVU1625
 4819              	# sieve_extend.c:492:         if (index_word <= range_stop_word) {
 492:sieve_extend.c ****             #pragma ivdep
 4820              		.loc 1 492 12 is_stmt 0 view .LVU1626
 4821 1df8 4C39E8   		cmp	rax, r13	# index_word, range_stop_word
 4822 1dfb 760E     		jbe	.L453	#,
 4823              	.LVL189:
 4824              	.L281:
 492:sieve_extend.c ****             #pragma ivdep
 4825              		.loc 1 492 12 view .LVU1627
 4826              	.LBE331:
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4827              		.loc 1 461 41 is_stmt 1 view .LVU1628
 4828              	# sieve_extend.c:461:     for (counter_t index = range_start; index < range_stop_unique;) {
 461:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4829              		.loc 1 461 5 is_stmt 0 view .LVU1629
 4830 1dfd 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4831 1e00 0F87CAFD 		ja	.L285	#,
 4831      FFFF
 4832 1e06 E928FDFF 		jmp	.L448	#
 4832      FF
 4833              	.LVL190:
 4834              	.L453:
 4835              	.LBB332:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4836              		.loc 1 494 27 is_stmt 1 view .LVU1630
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4837              		.loc 1 495 17 view .LVU1631
 496:sieve_extend.c ****             }
 4838              		.loc 1 496 21 view .LVU1632
 4839              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4840              		.loc 1 496 52 is_stmt 0 view .LVU1633
 4841 1e0b 4C8B4424 		mov	r8, QWORD PTR 32[rsp]	# quadmask, quadmask
 4841      20
 4842 1e10 48C1E105 		sal	rcx, 5	# tmp265,
 4843 1e14 4C09040F 		or	QWORD PTR [rdi+rcx], r8	# *_130, quadmask
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4844              		.loc 1 494 51 is_stmt 1 view .LVU1634
 4845              	.LVL191:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4846              		.loc 1 494 27 view .LVU1635
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4847              		.loc 1 495 17 view .LVU1636
 4848              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4849              		.loc 1 495 31 is_stmt 0 view .LVU1637
 4850 1e18 488D4801 		lea	rcx, 1[rax]	# _139,
 4851              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4852              		.loc 1 495 20 view .LVU1638
 4853 1e1c 4939CD   		cmp	r13, rcx	# range_stop_word, _139
 4854 1e1f 7209     		jb	.L282	#,
 496:sieve_extend.c ****             }
 4855              		.loc 1 496 21 is_stmt 1 view .LVU1639
 4856              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
GAS LISTING /tmp/ccH5HMHD.s 			page 140


 496:sieve_extend.c ****             }
 4857              		.loc 1 496 52 is_stmt 0 view .LVU1640
 4858 1e21 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# quadmask, quadmask
 4858      28
 4859 1e26 4C0904CF 		or	QWORD PTR [rdi+rcx*8], r8	# *_141, quadmask
 4860              	.L282:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4861              		.loc 1 494 51 is_stmt 1 view .LVU1641
 4862              	.LVL192:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4863              		.loc 1 494 27 view .LVU1642
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4864              		.loc 1 495 17 view .LVU1643
 4865              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4866              		.loc 1 495 31 is_stmt 0 view .LVU1644
 4867 1e2a 488D4802 		lea	rcx, 2[rax]	# _150,
 4868              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4869              		.loc 1 495 20 view .LVU1645
 4870 1e2e 4939CD   		cmp	r13, rcx	# range_stop_word, _150
 4871 1e31 7209     		jb	.L283	#,
 496:sieve_extend.c ****             }
 4872              		.loc 1 496 21 is_stmt 1 view .LVU1646
 4873              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4874              		.loc 1 496 52 is_stmt 0 view .LVU1647
 4875 1e33 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# quadmask, quadmask
 4875      30
 4876 1e38 4C0904CF 		or	QWORD PTR [rdi+rcx*8], r8	# *_152, quadmask
 4877              	.L283:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4878              		.loc 1 494 51 is_stmt 1 view .LVU1648
 4879              	.LVL193:
 494:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4880              		.loc 1 494 27 view .LVU1649
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4881              		.loc 1 495 17 view .LVU1650
 4882              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4883              		.loc 1 495 31 is_stmt 0 view .LVU1651
 4884 1e3c 4883C003 		add	rax, 3	# _161,
 4885              	.LVL194:
 4886              	# sieve_extend.c:495:                 if (index_word+word <= range_stop_word)
 495:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4887              		.loc 1 495 20 view .LVU1652
 4888 1e40 4939C5   		cmp	r13, rax	# range_stop_word, _161
 4889 1e43 72B8     		jb	.L281	#,
 496:sieve_extend.c ****             }
 4890              		.loc 1 496 21 is_stmt 1 view .LVU1653
 4891              	# sieve_extend.c:496:                     bitarray_word[index_word+word] |= quadmask[word];
 496:sieve_extend.c ****             }
 4892              		.loc 1 496 52 is_stmt 0 view .LVU1654
 4893 1e45 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# quadmask, quadmask
 4893      38
 4894              	.LVL195:
 496:sieve_extend.c ****             }
GAS LISTING /tmp/ccH5HMHD.s 			page 141


 4895              		.loc 1 496 52 view .LVU1655
 4896 1e4a 48090CC7 		or	QWORD PTR [rdi+rax*8], rcx	# *_163, quadmask
 4897 1e4e EBAD     		jmp	.L281	#
 4898              	.LVL196:
 4899              	.L268:
 496:sieve_extend.c ****             }
 4900              		.loc 1 496 52 view .LVU1656
 4901              	.LBE332:
 4902              	.LBE333:
 4903              	.LBB334:
 4904              	.LBB328:
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4905              		.loc 1 439 49 is_stmt 1 view .LVU1657
 4906              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4907              		.loc 1 439 13 is_stmt 0 view .LVU1658
 4908 1e50 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4909 1e53 0F87DDFC 		ja	.L266	#,
 4909      FFFF
 4910              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4911              		.loc 1 440 52 view .LVU1659
 4912 1e59 41BE0100 		mov	r14d, 1	# tmp236,
 4912      0000
 4913              	.LVL197:
 4914              	.L271:
 440:sieve_extend.c ****             return;                 
 4915              		.loc 1 440 17 is_stmt 1 discriminator 3 view .LVU1660
 4916              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4917              		.loc 1 440 49 is_stmt 0 discriminator 3 view .LVU1661
 4918 1e5f 4989F2   		mov	r10, rsi	# tmp232, range_start
 4919              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4920              		.loc 1 440 52 discriminator 3 view .LVU1662
 4921 1e62 C442C9F7 		shlx	r9, r14, rsi	# tmp235, tmp236, range_start
 4921      CE
 4922              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4923              		.loc 1 440 49 discriminator 3 view .LVU1663
 4924 1e67 49C1EA06 		shr	r10, 6	# tmp232,
 4925              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4926              		.loc 1 439 76 discriminator 3 view .LVU1664
 4927 1e6b 4801D6   		add	rsi, rdx	# range_start, step
 4928              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4929              		.loc 1 440 49 discriminator 3 view .LVU1665
 4930 1e6e 4E090CD7 		or	QWORD PTR [rdi+r10*8], r9	# *_13, tmp235
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4931              		.loc 1 439 70 is_stmt 1 discriminator 3 view .LVU1666
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4932              		.loc 1 439 49 discriminator 3 view .LVU1667
 4933              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4934              		.loc 1 439 13 is_stmt 0 discriminator 3 view .LVU1668
 4935 1e72 4839F1   		cmp	rcx, rsi	# range_stop, range_start
GAS LISTING /tmp/ccH5HMHD.s 			page 142


 4936 1e75 0F82BBFC 		jb	.L266	#,
 4936      FFFF
 440:sieve_extend.c ****             return;                 
 4937              		.loc 1 440 17 is_stmt 1 view .LVU1669
 4938              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4939              		.loc 1 440 49 is_stmt 0 view .LVU1670
 4940 1e7b 4989F5   		mov	r13, rsi	# tmp367, range_start
 4941              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4942              		.loc 1 440 52 view .LVU1671
 4943 1e7e C442C9F7 		shlx	r11, r14, rsi	# tmp370, tmp236, range_start
 4943      DE
 4944              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4945              		.loc 1 440 49 view .LVU1672
 4946 1e83 49C1ED06 		shr	r13, 6	# tmp367,
 4947              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4948              		.loc 1 439 76 view .LVU1673
 4949 1e87 4801D6   		add	rsi, rdx	# range_start, step
 4950              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4951              		.loc 1 440 49 view .LVU1674
 4952 1e8a 4E091CEF 		or	QWORD PTR [rdi+r13*8], r11	# *_13, tmp370
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4953              		.loc 1 439 70 is_stmt 1 view .LVU1675
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4954              		.loc 1 439 49 view .LVU1676
 4955              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4956              		.loc 1 439 13 is_stmt 0 view .LVU1677
 4957 1e8e 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4958 1e91 0F829FFC 		jb	.L266	#,
 4958      FFFF
 440:sieve_extend.c ****             return;                 
 4959              		.loc 1 440 17 is_stmt 1 view .LVU1678
 4960              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4961              		.loc 1 440 49 is_stmt 0 view .LVU1679
 4962 1e97 4989F4   		mov	r12, rsi	# tmp372, range_start
 4963              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4964              		.loc 1 440 52 view .LVU1680
 4965 1e9a C4C2C9F7 		shlx	rax, r14, rsi	# tmp375, tmp236, range_start
 4965      C6
 4966              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4967              		.loc 1 440 49 view .LVU1681
 4968 1e9f 49C1EC06 		shr	r12, 6	# tmp372,
 4969              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4970              		.loc 1 439 76 view .LVU1682
 4971 1ea3 4801D6   		add	rsi, rdx	# range_start, step
 4972              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4973              		.loc 1 440 49 view .LVU1683
GAS LISTING /tmp/ccH5HMHD.s 			page 143


 4974 1ea6 4A0904E7 		or	QWORD PTR [rdi+r12*8], rax	# *_13, tmp375
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4975              		.loc 1 439 70 is_stmt 1 view .LVU1684
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4976              		.loc 1 439 49 view .LVU1685
 4977              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4978              		.loc 1 439 13 is_stmt 0 view .LVU1686
 4979 1eaa 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4980 1ead 0F8283FC 		jb	.L266	#,
 4980      FFFF
 440:sieve_extend.c ****             return;                 
 4981              		.loc 1 440 17 is_stmt 1 view .LVU1687
 4982              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4983              		.loc 1 440 49 is_stmt 0 view .LVU1688
 4984 1eb3 4989F0   		mov	r8, rsi	# tmp377, range_start
 4985              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4986              		.loc 1 440 52 view .LVU1689
 4987 1eb6 C4C2C9F7 		shlx	rbx, r14, rsi	# tmp380, tmp236, range_start
 4987      DE
 4988              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4989              		.loc 1 440 49 view .LVU1690
 4990 1ebb 49C1E806 		shr	r8, 6	# tmp377,
 4991              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4992              		.loc 1 439 76 view .LVU1691
 4993 1ebf 4801D6   		add	rsi, rdx	# range_start, step
 4994              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 4995              		.loc 1 440 49 view .LVU1692
 4996 1ec2 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_13, tmp380
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4997              		.loc 1 439 70 is_stmt 1 view .LVU1693
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4998              		.loc 1 439 49 view .LVU1694
 4999              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5000              		.loc 1 439 13 is_stmt 0 view .LVU1695
 5001 1ec6 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5002 1ec9 0F8267FC 		jb	.L266	#,
 5002      FFFF
 440:sieve_extend.c ****             return;                 
 5003              		.loc 1 440 17 is_stmt 1 view .LVU1696
 5004              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5005              		.loc 1 440 49 is_stmt 0 view .LVU1697
 5006 1ecf 4989F7   		mov	r15, rsi	# tmp382, range_start
 5007              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5008              		.loc 1 440 52 view .LVU1698
 5009 1ed2 C442C9F7 		shlx	r10, r14, rsi	# tmp385, tmp236, range_start
 5009      D6
 5010              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
GAS LISTING /tmp/ccH5HMHD.s 			page 144


 5011              		.loc 1 440 49 view .LVU1699
 5012 1ed7 49C1EF06 		shr	r15, 6	# tmp382,
 5013              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5014              		.loc 1 439 76 view .LVU1700
 5015 1edb 4801D6   		add	rsi, rdx	# range_start, step
 5016              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5017              		.loc 1 440 49 view .LVU1701
 5018 1ede 4E0914FF 		or	QWORD PTR [rdi+r15*8], r10	# *_13, tmp385
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5019              		.loc 1 439 70 is_stmt 1 view .LVU1702
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5020              		.loc 1 439 49 view .LVU1703
 5021              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5022              		.loc 1 439 13 is_stmt 0 view .LVU1704
 5023 1ee2 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5024 1ee5 0F824BFC 		jb	.L266	#,
 5024      FFFF
 440:sieve_extend.c ****             return;                 
 5025              		.loc 1 440 17 is_stmt 1 view .LVU1705
 5026              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5027              		.loc 1 440 49 is_stmt 0 view .LVU1706
 5028 1eeb 4989F5   		mov	r13, rsi	# tmp387, range_start
 5029              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5030              		.loc 1 440 52 view .LVU1707
 5031 1eee C442C9F7 		shlx	r9, r14, rsi	# tmp390, tmp236, range_start
 5031      CE
 5032              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5033              		.loc 1 440 49 view .LVU1708
 5034 1ef3 49C1ED06 		shr	r13, 6	# tmp387,
 5035              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5036              		.loc 1 439 76 view .LVU1709
 5037 1ef7 4801D6   		add	rsi, rdx	# range_start, step
 5038              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5039              		.loc 1 440 49 view .LVU1710
 5040 1efa 4E090CEF 		or	QWORD PTR [rdi+r13*8], r9	# *_13, tmp390
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5041              		.loc 1 439 70 is_stmt 1 view .LVU1711
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5042              		.loc 1 439 49 view .LVU1712
 5043              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5044              		.loc 1 439 13 is_stmt 0 view .LVU1713
 5045 1efe 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5046 1f01 0F822FFC 		jb	.L266	#,
 5046      FFFF
 440:sieve_extend.c ****             return;                 
 5047              		.loc 1 440 17 is_stmt 1 view .LVU1714
 5048              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
GAS LISTING /tmp/ccH5HMHD.s 			page 145


 5049              		.loc 1 440 49 is_stmt 0 view .LVU1715
 5050 1f07 4989F3   		mov	r11, rsi	# tmp392, range_start
 5051              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5052              		.loc 1 440 52 view .LVU1716
 5053 1f0a C442C9F7 		shlx	r12, r14, rsi	# tmp395, tmp236, range_start
 5053      E6
 5054              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5055              		.loc 1 440 49 view .LVU1717
 5056 1f0f 49C1EB06 		shr	r11, 6	# tmp392,
 5057              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5058              		.loc 1 439 76 view .LVU1718
 5059 1f13 4801D6   		add	rsi, rdx	# range_start, step
 5060              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5061              		.loc 1 440 49 view .LVU1719
 5062 1f16 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_13, tmp395
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5063              		.loc 1 439 70 is_stmt 1 view .LVU1720
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5064              		.loc 1 439 49 view .LVU1721
 5065              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5066              		.loc 1 439 13 is_stmt 0 view .LVU1722
 5067 1f1a 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5068 1f1d 0F8213FC 		jb	.L266	#,
 5068      FFFF
 440:sieve_extend.c ****             return;                 
 5069              		.loc 1 440 17 is_stmt 1 view .LVU1723
 5070              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5071              		.loc 1 440 49 is_stmt 0 view .LVU1724
 5072 1f23 4889F0   		mov	rax, rsi	# tmp397, range_start
 5073              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5074              		.loc 1 440 52 view .LVU1725
 5075 1f26 C442C9F7 		shlx	r8, r14, rsi	# tmp400, tmp236, range_start
 5075      C6
 5076              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5077              		.loc 1 440 49 view .LVU1726
 5078 1f2b 48C1E806 		shr	rax, 6	# tmp397,
 5079              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5080              		.loc 1 439 76 view .LVU1727
 5081 1f2f 4801D6   		add	rsi, rdx	# range_start, step
 5082              	# sieve_extend.c:440:                 bitarray_word[wordindex(index)] |= markmask(index);
 440:sieve_extend.c ****             return;                 
 5083              		.loc 1 440 49 view .LVU1728
 5084 1f32 4C0904C7 		or	QWORD PTR [rdi+rax*8], r8	# *_13, tmp400
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5085              		.loc 1 439 70 is_stmt 1 view .LVU1729
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5086              		.loc 1 439 49 view .LVU1730
 5087              	# sieve_extend.c:439:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/ccH5HMHD.s 			page 146


 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5088              		.loc 1 439 13 is_stmt 0 view .LVU1731
 5089 1f36 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5090 1f39 0F8320FF 		jnb	.L271	#,
 5090      FFFF
 5091 1f3f E9F2FBFF 		jmp	.L266	#
 5091      FF
 5092              	.LVL198:
 5093              	.L451:
 439:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5094              		.loc 1 439 13 view .LVU1732
 5095              	.LBE328:
 5096              	.LBE334:
 5097              	# sieve_extend.c:500: }
 500:sieve_extend.c **** 
 5098              		.loc 1 500 1 view .LVU1733
 5099 1f44 E8000000 		call	__stack_chk_fail@PLT	#
 5099      00
 5100              	.LVL199:
 500:sieve_extend.c **** 
 5101              		.loc 1 500 1 view .LVU1734
 5102              		.cfi_endproc
 5103              	.LFE63:
 5105 1f49 0F1F8000 		.p2align 4
 5105      000000
 5107              	extendSieve_aligned:
 5108              	.LVL200:
 5109              	.LFB65:
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5110              		.loc 1 536 140 is_stmt 1 view -0
 5111              		.cfi_startproc
 537:sieve_extend.c **** 
 5112              		.loc 1 537 5 view .LVU1736
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5113              		.loc 1 539 5 view .LVU1737
 5114              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5115              		.loc 1 536 140 is_stmt 0 view .LVU1738
 5116 1f50 55       		push	rbp	#
 5117              		.cfi_def_cfa_offset 16
 5118              		.cfi_offset 6, -16
 5119 1f51 4889E5   		mov	rbp, rsp	#,
 5120              		.cfi_def_cfa_register 6
 5121 1f54 4157     		push	r15	#
 5122 1f56 4156     		push	r14	#
 5123 1f58 4155     		push	r13	#
 5124              		.cfi_offset 15, -24
 5125              		.cfi_offset 14, -32
 5126              		.cfi_offset 13, -40
 5127 1f5a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5128 1f5d 4154     		push	r12	#
 5129              		.cfi_offset 12, -48
 5130 1f5f 4989D4   		mov	r12, rdx	# size, tmp297
 5131 1f62 53       		push	rbx	#
 5132              		.cfi_offset 3, -56
 5133              	# sieve_extend.c:539:     const counter_t destination_stop_word = wordindex(destination_stop);
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccH5HMHD.s 			page 147


 5134              		.loc 1 539 21 view .LVU1739
 5135 1f63 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5136              	# sieve_extend.c:540:     const counter_t copy_start = source_start + size;
 540:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5137              		.loc 1 540 21 view .LVU1740
 5138 1f66 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5139              	.LVL201:
 5140              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5141              		.loc 1 536 140 view .LVU1741
 5142 1f6a 4883E4E0 		and	rsp, -32	#,
 5143              	# sieve_extend.c:542:     counter_t copy_word = wordindex(copy_start);
 542:sieve_extend.c ****     
 5144              		.loc 1 542 15 view .LVU1742
 5145 1f6e 4889C8   		mov	rax, rcx	# ivtmp.350, copy_start
 5146              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5147              		.loc 1 541 15 view .LVU1743
 5148 1f71 48C1EE06 		shr	rsi, 6	# source_start,
 5149              	.LVL202:
 5150              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5151              		.loc 1 536 140 view .LVU1744
 5152 1f75 488D6424 		lea	rsp, -32[rsp]	#,
 5152      E0
 5153              	# sieve_extend.c:542:     counter_t copy_word = wordindex(copy_start);
 542:sieve_extend.c ****     
 5154              		.loc 1 542 15 view .LVU1745
 5155 1f7a 48C1E806 		shr	rax, 6	# ivtmp.350,
 5156              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5157              		.loc 1 544 35 view .LVU1746
 5158 1f7e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5158      00000000 
 5159              	.LVL203:
 5160              	# sieve_extend.c:539:     const counter_t destination_stop_word = wordindex(destination_stop);
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5161              		.loc 1 539 21 view .LVU1747
 5162 1f86 48C1EB06 		shr	rbx, 6	# tmp298,
 5163              	.LVL204:
 540:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5164              		.loc 1 540 5 is_stmt 1 view .LVU1748
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5165              		.loc 1 541 5 view .LVU1749
 5166              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5167              		.loc 1 544 35 is_stmt 0 view .LVU1750
 5168 1f8a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5168      00
 5169              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5170              		.loc 1 541 15 view .LVU1751
 5171 1f8f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5171      08
 5172              	.LVL205:
 542:sieve_extend.c ****     
 5173              		.loc 1 542 5 is_stmt 1 view .LVU1752
GAS LISTING /tmp/ccH5HMHD.s 			page 148


 544:sieve_extend.c **** 
 5174              		.loc 1 544 5 view .LVU1753
 5175              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5176              		.loc 1 544 52 is_stmt 0 view .LVU1754
 5177 1f94 89CE     		mov	esi, ecx	# tmp183, copy_start
 5178              	.LVL206:
 5179              	# sieve_extend.c:546:     while (copy_word + size <= destination_stop_word) {
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5180              		.loc 1 546 22 view .LVU1755
 5181 1f96 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.350,
 5182              	.LVL207:
 5183              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5184              		.loc 1 544 52 view .LVU1756
 5185 1f9a F7D6     		not	esi	# tmp183
 5186              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5187              		.loc 1 544 35 view .LVU1757
 5188 1f9c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5189              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5190              		.loc 1 544 52 view .LVU1758
 5191 1fa0 48C7C2FF 		mov	rdx, -1	# tmp186,
 5191      FFFFFF
 5192              	.LVL208:
 544:sieve_extend.c **** 
 5193              		.loc 1 544 52 view .LVU1759
 5194 1fa7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5194      C2
 5195              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5196              		.loc 1 544 49 view .LVU1760
 5197 1fac C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5197      0E
 5198              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5199              		.loc 1 544 25 view .LVU1761
 5200 1fb1 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5200      00
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5201              		.loc 1 546 5 is_stmt 1 view .LVU1762
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5202              		.loc 1 546 11 view .LVU1763
 5203 1fb6 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.350
 5204 1fb9 0F827101 		jb	.L455	#,
 5204      0000
 5205 1fbf 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5205      00000000 
 5206 1fc7 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5206      00000000 
 5207              	.LVL209:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5208              		.loc 1 546 11 is_stmt 0 view .LVU1764
 5209 1fcf 4D01EA   		add	r10, r13	# tmp190, bitarray
 5210              	# sieve_extend.c:547:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 547:sieve_extend.c ****         copy_word += size;
GAS LISTING /tmp/ccH5HMHD.s 			page 149


 5211              		.loc 1 547 9 view .LVU1765
 5212 1fd2 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5212      00000000 
 5213 1fda 4929C2   		sub	r10, rax	# tmp190, tmp191
 5214 1fdd 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5214      18
 5215              	.LVL210:
 5216              	.L456:
 547:sieve_extend.c ****         copy_word += size;
 5217              		.loc 1 547 9 is_stmt 1 view .LVU1766
 5218              	.LBB335:
 5219              	.LBI335:
 5220              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5221              		.loc 2 31 1 view .LVU1767
 5222              	.LBB336:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5223              		.loc 2 34 3 view .LVU1768
 5224              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5225              		.loc 2 34 10 is_stmt 0 view .LVU1769
 5226 1fe2 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5226      18
 5227 1fe7 4C89FA   		mov	rdx, r15	#, _15
 5228 1fea 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.350
 5228      10
GAS LISTING /tmp/ccH5HMHD.s 			page 150


 5229 1fef 4C89F6   		mov	rsi, r14	#, _5
 5230 1ff2 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5231 1ff6 E8000000 		call	memcpy@PLT	#
 5231      00
 5232              	.LVL211:
 5233              		.loc 2 34 10 view .LVU1770
 5234              	.LBE336:
 5235              	.LBE335:
 548:sieve_extend.c ****     }
 5236              		.loc 1 548 9 is_stmt 1 view .LVU1771
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5237              		.loc 1 546 11 view .LVU1772
 5238 1ffb 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5238      10
 5239 2000 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.350,
 5240 2004 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.350
 5241 2007 0F822301 		jb	.L455	#,
 5241      0000
 547:sieve_extend.c ****         copy_word += size;
 5242              		.loc 1 547 9 view .LVU1773
 5243              	.LVL212:
 5244              	.LBB344:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5245              		.loc 2 31 1 view .LVU1774
 5246              	.LBB337:
 5247              		.loc 2 34 3 view .LVU1775
 5248              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5249              		.loc 2 34 10 is_stmt 0 view .LVU1776
 5250 200d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5250      18
 5251 2012 4C89F6   		mov	rsi, r14	#, _5
 5252 2015 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.350
 5252      10
 5253              	.LVL213:
 5254              		.loc 2 34 10 view .LVU1777
 5255 201a 4C89FA   		mov	rdx, r15	#, _15
 5256 201d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5257 2021 E8000000 		call	memcpy@PLT	#
 5257      00
 5258              	.LVL214:
 5259              		.loc 2 34 10 view .LVU1778
 5260              	.LBE337:
 5261              	.LBE344:
 548:sieve_extend.c ****     }
 5262              		.loc 1 548 9 is_stmt 1 view .LVU1779
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5263              		.loc 1 546 11 view .LVU1780
 5264 2026 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5264      10
 5265 202b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.350,
 5266 202f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.350
 5267 2032 0F82F800 		jb	.L455	#,
 5267      0000
 547:sieve_extend.c ****         copy_word += size;
 5268              		.loc 1 547 9 view .LVU1781
 5269              	.LVL215:
 5270              	.LBB345:
GAS LISTING /tmp/ccH5HMHD.s 			page 151


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5271              		.loc 2 31 1 view .LVU1782
 5272              	.LBB338:
 5273              		.loc 2 34 3 view .LVU1783
 5274              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5275              		.loc 2 34 10 is_stmt 0 view .LVU1784
 5276 2038 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5276      18
 5277 203d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.350
 5277      10
 5278 2042 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5279 2046 4C89FA   		mov	rdx, r15	#, _15
 5280 2049 4C89F6   		mov	rsi, r14	#, _5
 5281 204c E8000000 		call	memcpy@PLT	#
 5281      00
 5282              	.LVL216:
 5283              		.loc 2 34 10 view .LVU1785
 5284              	.LBE338:
 5285              	.LBE345:
 548:sieve_extend.c ****     }
 5286              		.loc 1 548 9 is_stmt 1 view .LVU1786
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5287              		.loc 1 546 11 view .LVU1787
 5288 2051 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5288      10
 5289 2056 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.350,
 5290 205a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.350
 5291 205d 0F82CD00 		jb	.L455	#,
 5291      0000
 547:sieve_extend.c ****         copy_word += size;
 5292              		.loc 1 547 9 view .LVU1788
 5293              	.LVL217:
 5294              	.LBB346:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5295              		.loc 2 31 1 view .LVU1789
 5296              	.LBB339:
 5297              		.loc 2 34 3 view .LVU1790
 5298              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5299              		.loc 2 34 10 is_stmt 0 view .LVU1791
 5300 2063 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5300      18
 5301 2068 4C89FA   		mov	rdx, r15	#, _15
 5302 206b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.350
 5302      10
 5303 2070 4C89F6   		mov	rsi, r14	#, _5
 5304 2073 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5305 2077 E8000000 		call	memcpy@PLT	#
 5305      00
 5306              	.LVL218:
 5307              		.loc 2 34 10 view .LVU1792
 5308              	.LBE339:
 5309              	.LBE346:
 548:sieve_extend.c ****     }
 5310              		.loc 1 548 9 is_stmt 1 view .LVU1793
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5311              		.loc 1 546 11 view .LVU1794
 5312 207c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
GAS LISTING /tmp/ccH5HMHD.s 			page 152


 5312      10
 5313 2081 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.350,
 5314 2085 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.350
 5315 2088 0F82A200 		jb	.L455	#,
 5315      0000
 547:sieve_extend.c ****         copy_word += size;
 5316              		.loc 1 547 9 view .LVU1795
 5317              	.LVL219:
 5318              	.LBB347:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5319              		.loc 2 31 1 view .LVU1796
 5320              	.LBB340:
 5321              		.loc 2 34 3 view .LVU1797
 5322              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5323              		.loc 2 34 10 is_stmt 0 view .LVU1798
 5324 208e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5324      18
 5325 2093 4C89FA   		mov	rdx, r15	#, _15
 5326 2096 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.350
 5326      10
 5327 209b 4C89F6   		mov	rsi, r14	#, _5
 5328 209e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5329 20a2 E8000000 		call	memcpy@PLT	#
 5329      00
 5330              	.LVL220:
 5331              		.loc 2 34 10 view .LVU1799
 5332              	.LBE340:
 5333              	.LBE347:
 548:sieve_extend.c ****     }
 5334              		.loc 1 548 9 is_stmt 1 view .LVU1800
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5335              		.loc 1 546 11 view .LVU1801
 5336 20a7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5336      10
 5337 20ac 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.350,
 5338 20b0 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.350
 5339 20b3 727B     		jb	.L455	#,
 547:sieve_extend.c ****         copy_word += size;
 5340              		.loc 1 547 9 view .LVU1802
 5341              	.LVL221:
 5342              	.LBB348:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5343              		.loc 2 31 1 view .LVU1803
 5344              	.LBB341:
 5345              		.loc 2 34 3 view .LVU1804
 5346              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5347              		.loc 2 34 10 is_stmt 0 view .LVU1805
 5348 20b5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5348      18
 5349 20ba 4C89F6   		mov	rsi, r14	#, _5
 5350 20bd 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.350
 5350      10
 5351 20c2 4C89FA   		mov	rdx, r15	#, _15
 5352 20c5 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5353 20c9 E8000000 		call	memcpy@PLT	#
 5353      00
 5354              	.LVL222:
GAS LISTING /tmp/ccH5HMHD.s 			page 153


 5355              		.loc 2 34 10 view .LVU1806
 5356              	.LBE341:
 5357              	.LBE348:
 548:sieve_extend.c ****     }
 5358              		.loc 1 548 9 is_stmt 1 view .LVU1807
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5359              		.loc 1 546 11 view .LVU1808
 5360 20ce 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5360      10
 5361 20d3 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.350,
 5362 20d7 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.350
 5363 20da 7254     		jb	.L455	#,
 547:sieve_extend.c ****         copy_word += size;
 5364              		.loc 1 547 9 view .LVU1809
 5365              	.LVL223:
 5366              	.LBB349:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5367              		.loc 2 31 1 view .LVU1810
 5368              	.LBB342:
 5369              		.loc 2 34 3 view .LVU1811
 5370              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5371              		.loc 2 34 10 is_stmt 0 view .LVU1812
 5372 20dc 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5372      18
 5373 20e1 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.350
 5373      10
 5374 20e6 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5375 20ea 4C89FA   		mov	rdx, r15	#, _15
 5376 20ed 4C89F6   		mov	rsi, r14	#, _5
 5377 20f0 E8000000 		call	memcpy@PLT	#
 5377      00
 5378              	.LVL224:
 5379              		.loc 2 34 10 view .LVU1813
 5380              	.LBE342:
 5381              	.LBE349:
 548:sieve_extend.c ****     }
 5382              		.loc 1 548 9 is_stmt 1 view .LVU1814
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5383              		.loc 1 546 11 view .LVU1815
 5384 20f5 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5384      10
 5385 20fa 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.350,
 5386 20fe 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.350
 5387 2101 722D     		jb	.L455	#,
 547:sieve_extend.c ****         copy_word += size;
 5388              		.loc 1 547 9 view .LVU1816
 5389              	.LVL225:
 5390              	.LBB350:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5391              		.loc 2 31 1 view .LVU1817
 5392              	.LBB343:
 5393              		.loc 2 34 3 view .LVU1818
 5394              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5395              		.loc 2 34 10 is_stmt 0 view .LVU1819
 5396 2103 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5396      18
 5397 2108 4C89FA   		mov	rdx, r15	#, _15
GAS LISTING /tmp/ccH5HMHD.s 			page 154


 5398 210b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.350
 5398      10
 5399 2110 4C89F6   		mov	rsi, r14	#, _5
 5400 2113 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5401 2117 E8000000 		call	memcpy@PLT	#
 5401      00
 5402              	.LVL226:
 5403              		.loc 2 34 10 view .LVU1820
 5404              	.LBE343:
 5405              	.LBE350:
 548:sieve_extend.c ****     }
 5406              		.loc 1 548 9 is_stmt 1 view .LVU1821
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5407              		.loc 1 546 11 view .LVU1822
 5408 211c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.350, %sfp
 5408      10
 5409              	.LVL227:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5410              		.loc 1 546 11 is_stmt 0 view .LVU1823
 5411 2121 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.350,
 5412              	.LVL228:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5413              		.loc 1 546 11 view .LVU1824
 5414 2125 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.350
 5415 2128 0F83B4FE 		jnb	.L456	#,
 5415      FFFF
 5416              	.LVL229:
 5417 212e 6690     		.p2align 4
 5418              		.p2align 3
 5419              	.L455:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5420              		.loc 1 551 10 is_stmt 1 view .LVU1825
 5421 2130 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.350
 5422 2133 0F864902 		jbe	.L566	#,
 5422      0000
 5423 2139 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5424 213d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5424      00000000 
 5425              	.LVL230:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5426              		.loc 1 551 10 is_stmt 0 view .LVU1826
 5427 2145 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5427      20
 5428 214a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5429 214e 4D39FA   		cmp	r10, r15	# _4, tmp199
 5430 2151 410F9DC3 		setge	r11b	#, tmp201
 5431 2155 4939FC   		cmp	r12, rdi	# _41, tmp202
 5432 2158 400F9DC6 		setge	sil	#, tmp204
 5433 215c 4108F3   		or	r11b, sil	# tmp201, tmp204
 5434 215f 0F844B02 		je	.L458	#,
 5434      0000
 5435 2165 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5436 2169 4829C2   		sub	rdx, rax	# tmp207, ivtmp.350
 5437 216c 4883FA05 		cmp	rdx, 5	# tmp207,
 5438 2170 0F863A02 		jbe	.L458	#,
 5438      0000
 5439 2176 4D89F7   		mov	r15, r14	# tmp210, _5
GAS LISTING /tmp/ccH5HMHD.s 			page 155


 5440 2179 49C1EF03 		shr	r15, 3	# tmp210,
 5441 217d 49F7DF   		neg	r15	# tmp211
 5442 2180 4183E703 		and	r15d, 3	# prolog_loop_niters.318,
 5443 2184 0F842E03 		je	.L465	#,
 5443      0000
 552:sieve_extend.c ****         source_word++;
 5444              		.loc 1 552 9 is_stmt 1 view .LVU1827
 5445              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5446              		.loc 1 552 39 is_stmt 0 view .LVU1828
 5447 218a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5448 218d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.318,
 5449              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5450              		.loc 1 553 20 view .LVU1829
 5451 2191 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5451      08
 5452              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5453              		.loc 1 554 18 view .LVU1830
 5454 2196 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5455              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5456              		.loc 1 552 29 view .LVU1831
 5457 219a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5457      00
 553:sieve_extend.c ****         copy_word++;
 5458              		.loc 1 553 9 is_stmt 1 view .LVU1832
 5459              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5460              		.loc 1 553 20 is_stmt 0 view .LVU1833
 5461 219f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5462              	.LVL231:
 554:sieve_extend.c ****     }
 5463              		.loc 1 554 9 is_stmt 1 view .LVU1834
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5464              		.loc 1 551 10 view .LVU1835
 5465 21a3 742A     		je	.L459	#,
 552:sieve_extend.c ****         source_word++;
 5466              		.loc 1 552 9 view .LVU1836
 5467              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5468              		.loc 1 552 39 is_stmt 0 view .LVU1837
 5469 21a5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5469      00
 5470 21aa 4983FF03 		cmp	r15, 3	# prolog_loop_niters.318,
 5471              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5472              		.loc 1 553 20 view .LVU1838
 5473 21ae 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5474              	.LVL232:
 5475              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5476              		.loc 1 552 29 view .LVU1839
 5477 21b2 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5477      00
 553:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccH5HMHD.s 			page 156


 5478              		.loc 1 553 9 is_stmt 1 view .LVU1840
 5479              	.LVL233:
 554:sieve_extend.c ****     }
 5480              		.loc 1 554 9 view .LVU1841
 5481              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5482              		.loc 1 554 18 is_stmt 0 view .LVU1842
 5483 21b7 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5484              	.LVL234:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5485              		.loc 1 551 10 is_stmt 1 view .LVU1843
 5486 21bb 7512     		jne	.L459	#,
 552:sieve_extend.c ****         source_word++;
 5487              		.loc 1 552 9 view .LVU1844
 5488              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5489              		.loc 1 552 39 is_stmt 0 view .LVU1845
 5490 21bd 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5490      00
 5491              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5492              		.loc 1 553 20 view .LVU1846
 5493 21c2 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5494              	.LVL235:
 5495              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5496              		.loc 1 552 29 view .LVU1847
 5497 21c6 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5497      00
 553:sieve_extend.c ****         copy_word++;
 5498              		.loc 1 553 9 is_stmt 1 view .LVU1848
 5499              	.LVL236:
 554:sieve_extend.c ****     }
 5500              		.loc 1 554 9 view .LVU1849
 5501              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5502              		.loc 1 554 18 is_stmt 0 view .LVU1850
 5503 21cb 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5504              	.LVL237:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5505              		.loc 1 551 10 is_stmt 1 view .LVU1851
 5506              	.L459:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5507              		.loc 1 551 10 is_stmt 0 view .LVU1852
 5508 21cf 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5508      08
 5509 21d4 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5510 21d7 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.318
 5511 21da 4929C3   		sub	r11, rax	# niters.319, ivtmp.350
 5512 21dd 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.318
 5513 21e0 4D89D8   		mov	r8, r11	# bnd.320, niters.319
 5514 21e3 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.318
 5515 21e6 49C1E802 		shr	r8, 2	# bnd.320,
 5516 21ea 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.328,
 5516      00
 5517 21ef 49C1E005 		sal	r8, 5	# _182,
 5518              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccH5HMHD.s 			page 157


 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5519              		.loc 1 541 15 view .LVU1853
 5520 21f3 31C0     		xor	eax, eax	# ivtmp.341
 5521 21f5 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5522 21f9 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.325,
 5522      00
 5523 21fe 48C1EA05 		shr	rdx, 5	# tmp226,
 5524 2202 4883C201 		add	rdx, 1	# tmp229,
 5525 2206 83E207   		and	edx, 7	# tmp230,
 5526 2209 0F849500 		je	.L461	#,
 5526      0000
 5527 220f 4883FA01 		cmp	rdx, 1	# tmp230,
 5528 2213 7477     		je	.L525	#,
 5529 2215 4883FA02 		cmp	rdx, 2	# tmp230,
 5530 2219 7462     		je	.L526	#,
 5531 221b 4883FA03 		cmp	rdx, 3	# tmp230,
 5532 221f 744D     		je	.L527	#,
 5533 2221 4883FA04 		cmp	rdx, 4	# tmp230,
 5534 2225 7438     		je	.L528	#,
 5535 2227 4883FA05 		cmp	rdx, 5	# tmp230,
 5536 222b 7423     		je	.L529	#,
 5537 222d 4883FA06 		cmp	rdx, 6	# tmp230,
 5538 2231 740E     		je	.L530	#,
 552:sieve_extend.c ****         source_word++;
 5539              		.loc 1 552 9 is_stmt 1 view .LVU1854
 5540              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5541              		.loc 1 552 29 is_stmt 0 view .LVU1855
 5542 2233 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.325_119, index: ivtmp.341_180, offset: 0
 5543 2237 B8200000 		mov	eax, 32	# ivtmp.341,
 5543      00
 5544 223c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], tmp3
 5544      0F
 553:sieve_extend.c ****         copy_word++;
 5545              		.loc 1 553 9 is_stmt 1 view .LVU1856
 554:sieve_extend.c ****     }
 5546              		.loc 1 554 9 view .LVU1857
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5547              		.loc 1 551 10 view .LVU1858
 5548              	.L530:
 552:sieve_extend.c ****         source_word++;
 5549              		.loc 1 552 9 view .LVU1859
 5550              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5551              		.loc 1 552 29 is_stmt 0 view .LVU1860
 5552 2241 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5552      06
 5553 2246 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5553      3C07
 553:sieve_extend.c ****         copy_word++;
 5554              		.loc 1 553 9 is_stmt 1 view .LVU1861
 554:sieve_extend.c ****     }
 5555              		.loc 1 554 9 view .LVU1862
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5556              		.loc 1 551 10 view .LVU1863
 5557 224c 4883C020 		add	rax, 32	# ivtmp.341,
 5558              	.L529:
GAS LISTING /tmp/ccH5HMHD.s 			page 158


 552:sieve_extend.c ****         source_word++;
 5559              		.loc 1 552 9 view .LVU1864
 5560              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5561              		.loc 1 552 29 is_stmt 0 view .LVU1865
 5562 2250 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5562      06
 5563 2255 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5563      3407
 553:sieve_extend.c ****         copy_word++;
 5564              		.loc 1 553 9 is_stmt 1 view .LVU1866
 554:sieve_extend.c ****     }
 5565              		.loc 1 554 9 view .LVU1867
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5566              		.loc 1 551 10 view .LVU1868
 5567 225b 4883C020 		add	rax, 32	# ivtmp.341,
 5568              	.L528:
 552:sieve_extend.c ****         source_word++;
 5569              		.loc 1 552 9 view .LVU1869
 5570              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5571              		.loc 1 552 29 is_stmt 0 view .LVU1870
 5572 225f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5572      06
 5573 2264 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5573      2C07
 553:sieve_extend.c ****         copy_word++;
 5574              		.loc 1 553 9 is_stmt 1 view .LVU1871
 554:sieve_extend.c ****     }
 5575              		.loc 1 554 9 view .LVU1872
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5576              		.loc 1 551 10 view .LVU1873
 5577 226a 4883C020 		add	rax, 32	# ivtmp.341,
 5578              	.L527:
 552:sieve_extend.c ****         source_word++;
 5579              		.loc 1 552 9 view .LVU1874
 5580              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5581              		.loc 1 552 29 is_stmt 0 view .LVU1875
 5582 226e C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5582      06
 5583 2273 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5583      2407
 553:sieve_extend.c ****         copy_word++;
 5584              		.loc 1 553 9 is_stmt 1 view .LVU1876
 554:sieve_extend.c ****     }
 5585              		.loc 1 554 9 view .LVU1877
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5586              		.loc 1 551 10 view .LVU1878
 5587 2279 4883C020 		add	rax, 32	# ivtmp.341,
 5588              	.L526:
 552:sieve_extend.c ****         source_word++;
 5589              		.loc 1 552 9 view .LVU1879
 5590              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5591              		.loc 1 552 29 is_stmt 0 view .LVU1880
 5592 227d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
GAS LISTING /tmp/ccH5HMHD.s 			page 159


 5592      06
 5593 2282 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5593      0407
 553:sieve_extend.c ****         copy_word++;
 5594              		.loc 1 553 9 is_stmt 1 view .LVU1881
 554:sieve_extend.c ****     }
 5595              		.loc 1 554 9 view .LVU1882
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5596              		.loc 1 551 10 view .LVU1883
 5597 2288 4883C020 		add	rax, 32	# ivtmp.341,
 5598              	.L525:
 552:sieve_extend.c ****         source_word++;
 5599              		.loc 1 552 9 view .LVU1884
 5600              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5601              		.loc 1 552 29 is_stmt 0 view .LVU1885
 5602 228c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5602      06
 5603 2291 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5603      1407
 553:sieve_extend.c ****         copy_word++;
 5604              		.loc 1 553 9 is_stmt 1 view .LVU1886
 554:sieve_extend.c ****     }
 5605              		.loc 1 554 9 view .LVU1887
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5606              		.loc 1 551 10 view .LVU1888
 5607 2297 4883C020 		add	rax, 32	# ivtmp.341,
 5608 229b 4C39C0   		cmp	rax, r8	# ivtmp.341, _182
 5609 229e 0F848D00 		je	.L562	#,
 5609      0000
 5610              	.L461:
 552:sieve_extend.c ****         source_word++;
 5611              		.loc 1 552 9 view .LVU1889
 5612              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5613              		.loc 1 552 29 is_stmt 0 view .LVU1890
 5614 22a4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.325_119, index: ivtmp.341_180, offse
 5614      06
 5615 22a9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B], 
 5615      1C07
 553:sieve_extend.c ****         copy_word++;
 5616              		.loc 1 553 9 is_stmt 1 view .LVU1891
 554:sieve_extend.c ****     }
 5617              		.loc 1 554 9 view .LVU1892
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5618              		.loc 1 551 10 view .LVU1893
 552:sieve_extend.c ****         source_word++;
 5619              		.loc 1 552 9 view .LVU1894
 5620              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5621              		.loc 1 552 29 is_stmt 0 view .LVU1895
 5622 22af C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.325_119, index: ivtmp.341_180, off
 5622      0620
 5623 22b5 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B]
 5623      440720
 553:sieve_extend.c ****         copy_word++;
 5624              		.loc 1 553 9 is_stmt 1 view .LVU1896
GAS LISTING /tmp/ccH5HMHD.s 			page 160


 554:sieve_extend.c ****     }
 5625              		.loc 1 554 9 view .LVU1897
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5626              		.loc 1 551 10 view .LVU1898
 552:sieve_extend.c ****         source_word++;
 5627              		.loc 1 552 9 view .LVU1899
 5628              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5629              		.loc 1 552 29 is_stmt 0 view .LVU1900
 5630 22bc C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.325_119, index: ivtmp.341_180, off
 5630      0640
 5631 22c2 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B]
 5631      4C0740
 553:sieve_extend.c ****         copy_word++;
 5632              		.loc 1 553 9 is_stmt 1 view .LVU1901
 554:sieve_extend.c ****     }
 5633              		.loc 1 554 9 view .LVU1902
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5634              		.loc 1 551 10 view .LVU1903
 552:sieve_extend.c ****         source_word++;
 5635              		.loc 1 552 9 view .LVU1904
 5636              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5637              		.loc 1 552 29 is_stmt 0 view .LVU1905
 5638 22c9 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.325_119, index: ivtmp.341_180, of
 5638      0660
 5639 22cf C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0B
 5639      540760
 553:sieve_extend.c ****         copy_word++;
 5640              		.loc 1 553 9 is_stmt 1 view .LVU1906
 554:sieve_extend.c ****     }
 5641              		.loc 1 554 9 view .LVU1907
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5642              		.loc 1 551 10 view .LVU1908
 552:sieve_extend.c ****         source_word++;
 5643              		.loc 1 552 9 view .LVU1909
 5644              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5645              		.loc 1 552 29 is_stmt 0 view .LVU1910
 5646 22d6 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.325_119, index: ivtmp.341_180, o
 5646      06800000 
 5646      00
 5647 22df C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0
 5647      9C078000 
 5647      0000
 553:sieve_extend.c ****         copy_word++;
 5648              		.loc 1 553 9 is_stmt 1 view .LVU1911
 554:sieve_extend.c ****     }
 5649              		.loc 1 554 9 view .LVU1912
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5650              		.loc 1 551 10 view .LVU1913
 552:sieve_extend.c ****         source_word++;
 5651              		.loc 1 552 9 view .LVU1914
 5652              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5653              		.loc 1 552 29 is_stmt 0 view .LVU1915
 5654 22e9 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.325_119, index: ivtmp.341_180, o
GAS LISTING /tmp/ccH5HMHD.s 			page 161


 5654      06A00000 
 5654      00
 5655 22f2 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0
 5655      A407A000 
 5655      0000
 553:sieve_extend.c ****         copy_word++;
 5656              		.loc 1 553 9 is_stmt 1 view .LVU1916
 554:sieve_extend.c ****     }
 5657              		.loc 1 554 9 view .LVU1917
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5658              		.loc 1 551 10 view .LVU1918
 552:sieve_extend.c ****         source_word++;
 5659              		.loc 1 552 9 view .LVU1919
 5660              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5661              		.loc 1 552 29 is_stmt 0 view .LVU1920
 5662 22fc C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.325_119, index: ivtmp.341_180, o
 5662      06C00000 
 5662      00
 5663 2305 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0
 5663      AC07C000 
 5663      0000
 553:sieve_extend.c ****         copy_word++;
 5664              		.loc 1 553 9 is_stmt 1 view .LVU1921
 554:sieve_extend.c ****     }
 5665              		.loc 1 554 9 view .LVU1922
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5666              		.loc 1 551 10 view .LVU1923
 552:sieve_extend.c ****         source_word++;
 5667              		.loc 1 552 9 view .LVU1924
 5668              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5669              		.loc 1 552 29 is_stmt 0 view .LVU1925
 5670 230f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.325_119, index: ivtmp.341_180, o
 5670      06E00000 
 5670      00
 5671 2318 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.328_125, index: ivtmp.341_180, offset: 0
 5671      B407E000 
 5671      0000
 553:sieve_extend.c ****         copy_word++;
 5672              		.loc 1 553 9 is_stmt 1 view .LVU1926
 554:sieve_extend.c ****     }
 5673              		.loc 1 554 9 view .LVU1927
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5674              		.loc 1 551 10 view .LVU1928
 5675 2322 48050001 		add	rax, 256	# ivtmp.341,
 5675      0000
 5676 2328 4C39C0   		cmp	rax, r8	# ivtmp.341, _182
 5677 232b 0F8573FF 		jne	.L461	#,
 5677      FFFF
 5678              	.L562:
 5679 2331 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.321, niters.319
 5680 2334 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.321,
 5681 2338 4D01CC   		add	r12, r9	# tmp.322, niters_vector_mult_vf.321
 5682 233b 4D01CE   		add	r14, r9	# tmp.323, niters_vector_mult_vf.321
 5683 233e 4D39CB   		cmp	r11, r9	# niters.319, niters_vector_mult_vf.321
 5684 2341 7455     		je	.L565	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 162


 5685              	.LVL238:
 552:sieve_extend.c ****         source_word++;
 5686              		.loc 1 552 9 view .LVU1929
 5687              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5688              		.loc 1 552 39 is_stmt 0 view .LVU1930
 5689 2343 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5689      00
 5690              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5691              		.loc 1 554 18 view .LVU1931
 5692 2348 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5693              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5694              		.loc 1 553 20 view .LVU1932
 5695 234c 4983C401 		add	r12, 1	# source_word,
 5696              	.LVL239:
 5697              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5698              		.loc 1 551 10 view .LVU1933
 5699 2350 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5700              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5701              		.loc 1 552 29 view .LVU1934
 5702 2353 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5702      00
 553:sieve_extend.c ****         copy_word++;
 5703              		.loc 1 553 9 is_stmt 1 view .LVU1935
 5704              	.LVL240:
 554:sieve_extend.c ****     }
 5705              		.loc 1 554 9 view .LVU1936
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5706              		.loc 1 551 10 view .LVU1937
 5707 2358 763E     		jbe	.L565	#,
 552:sieve_extend.c ****         source_word++;
 5708              		.loc 1 552 9 view .LVU1938
 5709              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5710              		.loc 1 552 39 is_stmt 0 view .LVU1939
 5711 235a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5711      00000000 
 5712              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5713              		.loc 1 554 18 view .LVU1940
 5714 2362 4983C602 		add	r14, 2	# copy_word,
 5715              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5716              		.loc 1 552 39 view .LVU1941
 5717 2366 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5717      00
 5718              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5719              		.loc 1 551 10 view .LVU1942
 5720 236b 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5721              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5722              		.loc 1 552 29 view .LVU1943
GAS LISTING /tmp/ccH5HMHD.s 			page 163


 5723 236e 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5723      00
 553:sieve_extend.c ****         copy_word++;
 5724              		.loc 1 553 9 is_stmt 1 view .LVU1944
 554:sieve_extend.c ****     }
 5725              		.loc 1 554 9 view .LVU1945
 5726              	.LVL241:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5727              		.loc 1 551 10 view .LVU1946
 5728 2373 7623     		jbe	.L565	#,
 552:sieve_extend.c ****         source_word++;
 5729              		.loc 1 552 9 view .LVU1947
 5730              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5731              		.loc 1 552 39 is_stmt 0 view .LVU1948
 5732 2375 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5732      08
 5733              	.LVL242:
 5734              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5735              		.loc 1 552 29 view .LVU1949
 5736 237a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5736      00
 553:sieve_extend.c ****         copy_word++;
 5737              		.loc 1 553 9 is_stmt 1 view .LVU1950
 554:sieve_extend.c ****     }
 5738              		.loc 1 554 9 view .LVU1951
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5739              		.loc 1 551 10 view .LVU1952
 5740 237f C5F877   		vzeroupper
 5741              	.LVL243:
 5742              	.L566:
 5743              	# sieve_extend.c:557: }
 557:sieve_extend.c **** 
 5744              		.loc 1 557 1 is_stmt 0 view .LVU1953
 5745 2382 488D65D8 		lea	rsp, -40[rbp]	#,
 5746 2386 5B       		pop	rbx	#
 5747 2387 415C     		pop	r12	#
 5748 2389 415D     		pop	r13	#
 5749 238b 415E     		pop	r14	#
 5750 238d 415F     		pop	r15	#
 5751 238f 5D       		pop	rbp	#
 5752              		.cfi_remember_state
 5753              		.cfi_def_cfa 7, 8
 5754 2390 C3       		ret	
 5755              	.LVL244:
 5756              		.p2align 4,,7
 5757 2391 0F1F8000 		.p2align 3
 5757      000000
 5758              	.L565:
 5759              		.cfi_restore_state
 557:sieve_extend.c **** 
 5760              		.loc 1 557 1 view .LVU1954
 5761 2398 C5F877   		vzeroupper
 5762 239b 488D65D8 		lea	rsp, -40[rbp]	#,
 5763 239f 5B       		pop	rbx	#
 5764              	.LVL245:
GAS LISTING /tmp/ccH5HMHD.s 			page 164


 557:sieve_extend.c **** 
 5765              		.loc 1 557 1 view .LVU1955
 5766 23a0 415C     		pop	r12	#
 5767 23a2 415D     		pop	r13	#
 5768              	.LVL246:
 557:sieve_extend.c **** 
 5769              		.loc 1 557 1 view .LVU1956
 5770 23a4 415E     		pop	r14	#
 5771 23a6 415F     		pop	r15	#
 5772 23a8 5D       		pop	rbp	#
 5773              		.cfi_remember_state
 5774              		.cfi_def_cfa 7, 8
 5775 23a9 C3       		ret	
 5776              	.LVL247:
 5777 23aa 660F1F44 		.p2align 4,,7
 5777      0000
 5778              		.p2align 3
 5779              	.L458:
 5780              		.cfi_restore_state
 5781              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5782              		.loc 1 552 39 view .LVU1957
 5783 23b0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5783      08
 5784 23b5 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.336,
 5784      00
 5785 23ba 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5785      00
 5786              	.LVL248:
 552:sieve_extend.c ****         source_word++;
 5787              		.loc 1 552 39 view .LVU1958
 5788 23bf 4C89EE   		mov	rsi, r13	# tmp221, _179
 5789 23c2 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.336
 5790 23c5 4829C7   		sub	rdi, rax	# source_word, ivtmp.350
 5791 23c8 4883EE08 		sub	rsi, 8	# tmp222,
 5792 23cc 48C1EE03 		shr	rsi, 3	# tmp220,
 5793 23d0 4883C601 		add	rsi, 1	# tmp223,
 5794 23d4 83E607   		and	esi, 7	# tmp224,
 5795 23d7 0F848100 		je	.L463	#,
 5795      0000
 5796 23dd 4883FE01 		cmp	rsi, 1	# tmp224,
 5797 23e1 7466     		je	.L531	#,
 5798 23e3 4883FE02 		cmp	rsi, 2	# tmp224,
 5799 23e7 7454     		je	.L532	#,
 5800 23e9 4883FE03 		cmp	rsi, 3	# tmp224,
 5801 23ed 7442     		je	.L533	#,
 5802 23ef 4883FE04 		cmp	rsi, 4	# tmp224,
 5803 23f3 7430     		je	.L534	#,
 5804 23f5 4883FE05 		cmp	rsi, 5	# tmp224,
 5805 23f9 741E     		je	.L535	#,
 5806 23fb 4883FE06 		cmp	rsi, 6	# tmp224,
 5807 23ff 740C     		je	.L536	#,
 5808              	.LVL249:
 552:sieve_extend.c ****         source_word++;
 5809              		.loc 1 552 9 is_stmt 1 view .LVU1959
 5810              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccH5HMHD.s 			page 165


 5811              		.loc 1 552 39 is_stmt 0 view .LVU1960
 5812 2401 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5813 2405 4983C608 		add	r14, 8	# ivtmp.336,
 5814              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5815              		.loc 1 552 29 view .LVU1961
 5816 2409 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5817              		.loc 1 553 9 is_stmt 1 view .LVU1962
 554:sieve_extend.c ****     }
 5818              		.loc 1 554 9 view .LVU1963
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5819              		.loc 1 551 10 view .LVU1964
 5820              	.L536:
 552:sieve_extend.c ****         source_word++;
 5821              		.loc 1 552 9 view .LVU1965
 5822              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5823              		.loc 1 552 39 is_stmt 0 view .LVU1966
 5824 240d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5825 2411 4983C608 		add	r14, 8	# ivtmp.336,
 5826              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5827              		.loc 1 552 29 view .LVU1967
 5828 2415 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5829              		.loc 1 553 9 is_stmt 1 view .LVU1968
 554:sieve_extend.c ****     }
 5830              		.loc 1 554 9 view .LVU1969
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5831              		.loc 1 551 10 view .LVU1970
 5832              	.L535:
 552:sieve_extend.c ****         source_word++;
 5833              		.loc 1 552 9 view .LVU1971
 5834              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5835              		.loc 1 552 39 is_stmt 0 view .LVU1972
 5836 2419 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5837 241d 4983C608 		add	r14, 8	# ivtmp.336,
 5838              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5839              		.loc 1 552 29 view .LVU1973
 5840 2421 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5841              		.loc 1 553 9 is_stmt 1 view .LVU1974
 554:sieve_extend.c ****     }
 5842              		.loc 1 554 9 view .LVU1975
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5843              		.loc 1 551 10 view .LVU1976
 5844              	.L534:
 552:sieve_extend.c ****         source_word++;
 5845              		.loc 1 552 9 view .LVU1977
 5846              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5847              		.loc 1 552 39 is_stmt 0 view .LVU1978
 5848 2425 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5849 2429 4983C608 		add	r14, 8	# ivtmp.336,
GAS LISTING /tmp/ccH5HMHD.s 			page 166


 5850              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5851              		.loc 1 552 29 view .LVU1979
 5852 242d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5853              		.loc 1 553 9 is_stmt 1 view .LVU1980
 554:sieve_extend.c ****     }
 5854              		.loc 1 554 9 view .LVU1981
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5855              		.loc 1 551 10 view .LVU1982
 5856              	.L533:
 552:sieve_extend.c ****         source_word++;
 5857              		.loc 1 552 9 view .LVU1983
 5858              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5859              		.loc 1 552 39 is_stmt 0 view .LVU1984
 5860 2431 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5861 2435 4983C608 		add	r14, 8	# ivtmp.336,
 5862              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5863              		.loc 1 552 29 view .LVU1985
 5864 2439 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5865              		.loc 1 553 9 is_stmt 1 view .LVU1986
 554:sieve_extend.c ****     }
 5866              		.loc 1 554 9 view .LVU1987
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5867              		.loc 1 551 10 view .LVU1988
 5868              	.L532:
 552:sieve_extend.c ****         source_word++;
 5869              		.loc 1 552 9 view .LVU1989
 5870              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5871              		.loc 1 552 39 is_stmt 0 view .LVU1990
 5872 243d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5873 2441 4983C608 		add	r14, 8	# ivtmp.336,
 5874              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5875              		.loc 1 552 29 view .LVU1991
 5876 2445 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5877              		.loc 1 553 9 is_stmt 1 view .LVU1992
 554:sieve_extend.c ****     }
 5878              		.loc 1 554 9 view .LVU1993
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5879              		.loc 1 551 10 view .LVU1994
 5880              	.L531:
 552:sieve_extend.c ****         source_word++;
 5881              		.loc 1 552 9 view .LVU1995
 5882              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5883              		.loc 1 552 39 is_stmt 0 view .LVU1996
 5884 2449 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5885 244d 4983C608 		add	r14, 8	# ivtmp.336,
 5886              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5887              		.loc 1 552 29 view .LVU1997
GAS LISTING /tmp/ccH5HMHD.s 			page 167


 5888 2451 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5889              		.loc 1 553 9 is_stmt 1 view .LVU1998
 554:sieve_extend.c ****     }
 5890              		.loc 1 554 9 view .LVU1999
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5891              		.loc 1 551 10 view .LVU2000
 5892 2455 4D39EE   		cmp	r14, r13	# ivtmp.336, _179
 5893 2458 0F8424FF 		je	.L566	#,
 5893      FFFF
 5894              	.LVL250:
 5895              	.L463:
 552:sieve_extend.c ****         source_word++;
 5896              		.loc 1 552 9 view .LVU2001
 5897              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5898              		.loc 1 552 39 is_stmt 0 view .LVU2002
 5899 245e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5900              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5901              		.loc 1 552 29 view .LVU2003
 5902 2462 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5903              		.loc 1 553 9 is_stmt 1 view .LVU2004
 554:sieve_extend.c ****     }
 5904              		.loc 1 554 9 view .LVU2005
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5905              		.loc 1 551 10 view .LVU2006
 552:sieve_extend.c ****         source_word++;
 5906              		.loc 1 552 9 view .LVU2007
 5907              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5908              		.loc 1 552 39 is_stmt 0 view .LVU2008
 5909 2465 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5909      08
 5910              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5911              		.loc 1 552 29 view .LVU2009
 5912 246a 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5913              		.loc 1 553 9 is_stmt 1 view .LVU2010
 554:sieve_extend.c ****     }
 5914              		.loc 1 554 9 view .LVU2011
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5915              		.loc 1 551 10 view .LVU2012
 552:sieve_extend.c ****         source_word++;
 5916              		.loc 1 552 9 view .LVU2013
 5917              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5918              		.loc 1 552 39 is_stmt 0 view .LVU2014
 5919 246e 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5919      10
 5920              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5921              		.loc 1 552 29 view .LVU2015
 5922 2473 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccH5HMHD.s 			page 168


 5923              		.loc 1 553 9 is_stmt 1 view .LVU2016
 554:sieve_extend.c ****     }
 5924              		.loc 1 554 9 view .LVU2017
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5925              		.loc 1 551 10 view .LVU2018
 552:sieve_extend.c ****         source_word++;
 5926              		.loc 1 552 9 view .LVU2019
 5927              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5928              		.loc 1 552 39 is_stmt 0 view .LVU2020
 5929 2477 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5929      18
 5930              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5931              		.loc 1 552 29 view .LVU2021
 5932 247c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5933              		.loc 1 553 9 is_stmt 1 view .LVU2022
 554:sieve_extend.c ****     }
 5934              		.loc 1 554 9 view .LVU2023
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5935              		.loc 1 551 10 view .LVU2024
 552:sieve_extend.c ****         source_word++;
 5936              		.loc 1 552 9 view .LVU2025
 5937              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5938              		.loc 1 552 39 is_stmt 0 view .LVU2026
 5939 2480 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5939      20
 5940              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5941              		.loc 1 552 29 view .LVU2027
 5942 2485 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5943              		.loc 1 553 9 is_stmt 1 view .LVU2028
 554:sieve_extend.c ****     }
 5944              		.loc 1 554 9 view .LVU2029
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5945              		.loc 1 551 10 view .LVU2030
 552:sieve_extend.c ****         source_word++;
 5946              		.loc 1 552 9 view .LVU2031
 5947              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5948              		.loc 1 552 39 is_stmt 0 view .LVU2032
 5949 2489 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5949      28
 5950              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5951              		.loc 1 552 29 view .LVU2033
 5952 248e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5953              		.loc 1 553 9 is_stmt 1 view .LVU2034
 554:sieve_extend.c ****     }
 5954              		.loc 1 554 9 view .LVU2035
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5955              		.loc 1 551 10 view .LVU2036
 552:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccH5HMHD.s 			page 169


 5956              		.loc 1 552 9 view .LVU2037
 5957              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5958              		.loc 1 552 39 is_stmt 0 view .LVU2038
 5959 2492 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5959      30
 5960              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5961              		.loc 1 552 29 view .LVU2039
 5962 2497 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5963              		.loc 1 553 9 is_stmt 1 view .LVU2040
 554:sieve_extend.c ****     }
 5964              		.loc 1 554 9 view .LVU2041
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5965              		.loc 1 551 10 view .LVU2042
 552:sieve_extend.c ****         source_word++;
 5966              		.loc 1 552 9 view .LVU2043
 5967              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5968              		.loc 1 552 39 is_stmt 0 view .LVU2044
 5969 249b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5969      38
 5970 24a0 4983C640 		add	r14, 64	# ivtmp.336,
 5971              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5972              		.loc 1 552 29 view .LVU2045
 5973 24a4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5974              		.loc 1 553 9 is_stmt 1 view .LVU2046
 554:sieve_extend.c ****     }
 5975              		.loc 1 554 9 view .LVU2047
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5976              		.loc 1 551 10 view .LVU2048
 5977 24a8 4D39EE   		cmp	r14, r13	# ivtmp.336, _179
 5978 24ab 75B1     		jne	.L463	#,
 5979 24ad E9D0FEFF 		jmp	.L566	#
 5979      FF
 5980              	.LVL251:
 5981              		.p2align 4,,7
 5982 24b2 660F1F44 		.p2align 3
 5982      0000
 5983              	.L465:
 5984              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5985              		.loc 1 541 15 is_stmt 0 view .LVU2049
 5986 24b8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5986      08
 5987              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5988              		.loc 1 551 10 view .LVU2050
 5989 24bd 4989C6   		mov	r14, rax	# copy_word, ivtmp.350
 5990 24c0 E90AFDFF 		jmp	.L459	#
 5990      FF
 5991              		.cfi_endproc
 5992              	.LFE65:
 5994 24c5 66662E0F 		.p2align 4
GAS LISTING /tmp/ccH5HMHD.s 			page 170


 5994      1F840000 
 5994      000000
 5996              	extendSieve_shiftleft:
 5997              	.LVL252:
 5998              	.LFB71:
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5999              		.loc 1 797 142 is_stmt 1 view -0
 6000              		.cfi_startproc
 798:sieve_extend.c **** 
 6001              		.loc 1 798 5 view .LVU2052
 800:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6002              		.loc 1 800 5 view .LVU2053
 6003              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6004              		.loc 1 797 142 is_stmt 0 view .LVU2054
 6005 24d0 55       		push	rbp	#
 6006              		.cfi_def_cfa_offset 16
 6007              		.cfi_offset 6, -16
 6008              	# sieve_extend.c:800:     const counter_t destination_stop_word = wordindex(destination_stop);
 800:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6009              		.loc 1 800 21 view .LVU2055
 6010 24d1 48C1E906 		shr	rcx, 6	# tmp1219,
 6011              	.LVL253:
 6012              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6013              		.loc 1 797 142 view .LVU2056
 6014 24d5 4989D2   		mov	r10, rdx	# size, tmp1218
 6015 24d8 4889E5   		mov	rbp, rsp	#,
 6016              		.cfi_def_cfa_register 6
 6017 24db 4157     		push	r15	#
 6018 24dd 4156     		push	r14	#
 6019              		.cfi_offset 15, -24
 6020              		.cfi_offset 14, -32
 6021              	# sieve_extend.c:800:     const counter_t destination_stop_word = wordindex(destination_stop);
 800:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6022              		.loc 1 800 21 view .LVU2057
 6023 24df 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 6024              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6025              		.loc 1 797 142 view .LVU2058
 6026 24e2 4155     		push	r13	#
 6027 24e4 4154     		push	r12	#
 6028 24e6 53       		push	rbx	#
 6029              		.cfi_offset 13, -40
 6030              		.cfi_offset 12, -48
 6031              		.cfi_offset 3, -56
 6032 24e7 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 6033              	# sieve_extend.c:801:     const counter_t copy_start = source_start + size;
 801:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6034              		.loc 1 801 21 view .LVU2059
 6035 24ea 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 6036              	.LVL254:
 6037              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6038              		.loc 1 797 142 view .LVU2060
 6039 24ee 4883E4E0 		and	rsp, -32	#,
 6040              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
GAS LISTING /tmp/ccH5HMHD.s 			page 171


 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6041              		.loc 1 802 69 view .LVU2061
 6042 24f2 4889F8   		mov	rax, rdi	# _5, copy_start
 6043              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6044              		.loc 1 797 142 view .LVU2062
 6045 24f5 488D6424 		lea	rsp, -96[rsp]	#,
 6045      A0
 6046              	# sieve_extend.c:805:     register counter_t copy_word = wordindex(copy_start);
 805:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6047              		.loc 1 805 24 view .LVU2063
 6048 24fa 4989FB   		mov	r11, rdi	# copy_word, copy_start
 6049              	# sieve_extend.c:800:     const counter_t destination_stop_word = wordindex(destination_stop);
 800:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6050              		.loc 1 800 21 view .LVU2064
 6051 24fd 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 6051      50
 6052              	.LVL255:
 801:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6053              		.loc 1 801 5 is_stmt 1 view .LVU2065
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6054              		.loc 1 802 5 view .LVU2066
 6055              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6056              		.loc 1 802 39 is_stmt 0 view .LVU2067
 6057 2502 4889F1   		mov	rcx, rsi	# _4, source_start
 6058              	.LVL256:
 6059              	# sieve_extend.c:804:     register counter_t source_word = wordindex(source_start);
 804:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6060              		.loc 1 804 24 view .LVU2068
 6061 2505 48C1EE06 		shr	rsi, 6	# source_start,
 6062              	.LVL257:
 6063              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6064              		.loc 1 802 39 view .LVU2069
 6065 2509 83E13F   		and	ecx, 63	# _4,
 6066              	.LVL258:
 6067              	# sieve_extend.c:804:     register counter_t source_word = wordindex(source_start);
 804:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6068              		.loc 1 804 24 view .LVU2070
 6069 250c 4989F0   		mov	r8, rsi	# source_word, source_start
 6070              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6071              		.loc 1 802 69 view .LVU2071
 6072 250f 83E03F   		and	eax, 63	# _5,
 6073              	.LVL259:
 803:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6074              		.loc 1 803 5 is_stmt 1 view .LVU2072
 804:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6075              		.loc 1 804 5 view .LVU2073
 805:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6076              		.loc 1 805 5 view .LVU2074
 6077              	# sieve_extend.c:805:     register counter_t copy_word = wordindex(copy_start);
 805:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6078              		.loc 1 805 24 is_stmt 0 view .LVU2075
 6079 2512 49C1EB06 		shr	r11, 6	# copy_word,
 6080              	.LVL260:
GAS LISTING /tmp/ccH5HMHD.s 			page 172


 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6081              		.loc 1 806 5 is_stmt 1 view .LVU2076
 6082              	# sieve_extend.c:807:                              | (bitarray[source_word+1] << shift_flipped))
 807:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6083              		.loc 1 807 41 is_stmt 0 view .LVU2077
 6084 2516 4D8D4801 		lea	r9, 1[r8]	# _183,
 6085              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6086              		.loc 1 802 31 view .LVU2078
 6087 251a 4989CD   		mov	r13, rcx	# shift, _4
 6088              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6089              		.loc 1 806 25 view .LVU2079
 6090 251d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6090      00000000 
 6091              	# sieve_extend.c:807:                              | (bitarray[source_word+1] << shift_flipped))
 807:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6092              		.loc 1 807 41 view .LVU2080
 6093 2525 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 6093      58
 6094              	# sieve_extend.c:802:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 802:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6095              		.loc 1 802 31 view .LVU2081
 6096 252a 4929C5   		sub	r13, rax	# shift, _5
 6097              	.LVL261:
 6098              	# sieve_extend.c:813:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 813:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6099              		.loc 1 813 41 view .LVU2082
 6100 252d 4D01D1   		add	r9, r10	# tmp555, size
 6101              	# sieve_extend.c:803:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 803:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6102              		.loc 1 803 31 view .LVU2083
 6103 2530 4829C8   		sub	rax, rcx	# tmp542, _4
 6104              	.LVL262:
 6105              	# sieve_extend.c:797: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 797:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6106              		.loc 1 797 142 view .LVU2084
 6107 2533 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 6107      18
 6108              	# sieve_extend.c:803:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 803:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6109              		.loc 1 803 31 view .LVU2085
 6110 2538 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 6111              	.LVL263:
 6112              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6113              		.loc 1 806 52 view .LVU2086
 6114 253c 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 6115              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6116              		.loc 1 806 38 view .LVU2087
 6117 2540 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 6117      00000000 
 6118              	.LVL264:
 6119              	# sieve_extend.c:808:                              & ~chopmask(copy_start); // because this is the 
 808:sieve_extend.c **** 
 6120              		.loc 1 808 33 view .LVU2088
GAS LISTING /tmp/ccH5HMHD.s 			page 173


 6121 2548 F7D7     		not	edi	# tmp549
 6122              	.LVL265:
 6123              	# sieve_extend.c:807:                              | (bitarray[source_word+1] << shift_flipped))
 807:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6124              		.loc 1 807 57 view .LVU2089
 6125 254a C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 6125      441308
 6126              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6127              		.loc 1 806 52 view .LVU2090
 6128 2551 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 6128      C1
 6129              	# sieve_extend.c:807:                              | (bitarray[source_word+1] << shift_flipped))
 807:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6130              		.loc 1 807 30 view .LVU2091
 6131 2556 4909C0   		or	r8, rax	# tmp548, tmp544
 6132              	# sieve_extend.c:808:                              & ~chopmask(copy_start); // because this is the 
 808:sieve_extend.c **** 
 6133              		.loc 1 808 33 view .LVU2092
 6134 2559 48C7C0FF 		mov	rax, -1	# tmp552,
 6134      FFFFFF
 6135 2560 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 6135      F8
 6136              	# sieve_extend.c:808:                              & ~chopmask(copy_start); // because this is the 
 808:sieve_extend.c **** 
 6137              		.loc 1 808 30 view .LVU2093
 6138 2565 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 6138      C8
 6139              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6140              		.loc 1 806 25 view .LVU2094
 6141 256a 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 810:sieve_extend.c ****     source_word++;
 6142              		.loc 1 810 5 is_stmt 1 view .LVU2095
 6143              	# sieve_extend.c:813:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 813:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6144              		.loc 1 813 21 is_stmt 0 view .LVU2096
 6145 256e 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 6146              	# sieve_extend.c:810:     copy_word++;
 810:sieve_extend.c ****     source_word++;
 6147              		.loc 1 810 14 view .LVU2097
 6148 2571 498D4301 		lea	rax, 1[r11]	# ivtmp.434,
 6149              	.LVL266:
 811:sieve_extend.c **** 
 6150              		.loc 1 811 5 is_stmt 1 view .LVU2098
 813:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6151              		.loc 1 813 5 view .LVU2099
 6152              	# sieve_extend.c:807:                              | (bitarray[source_word+1] << shift_flipped))
 807:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6153              		.loc 1 807 57 is_stmt 0 view .LVU2100
 6154 2575 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 6154      48
 6155              	# sieve_extend.c:806:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 806:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6156              		.loc 1 806 52 view .LVU2101
 6157 257a 4589EC   		mov	r12d, r13d	# _12, shift
 6158              	# sieve_extend.c:813:     const counter_t aligned_copy_word = min(source_word + size, destination_s
GAS LISTING /tmp/ccH5HMHD.s 			page 174


 813:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6159              		.loc 1 813 21 view .LVU2102
 6160 257d 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 6161              	.LBB356:
 6162              	.LBB357:
 6163              	# sieve_extend.c:654:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6164              		.loc 1 654 91 view .LVU2103
 6165 2581 41BE0200 		mov	r14d, 2	# tmp556,
 6165      0000
 6166              	.LVL267:
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6167              		.loc 1 654 91 view .LVU2104
 6168              	.LBE357:
 6169              	.LBE356:
 6170              	# sieve_extend.c:813:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 813:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6171              		.loc 1 813 21 view .LVU2105
 6172 2587 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 6172      40
 6173              	.LVL268:
 814:sieve_extend.c ****     source_word += distance;
 6174              		.loc 1 814 5 is_stmt 1 view .LVU2106
 6175              	.LBB382:
 6176              	.LBI356:
 653:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6177              		.loc 1 653 25 view .LVU2107
 6178              	.LBB379:
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6179              		.loc 1 654 5 view .LVU2108
 6180              	# sieve_extend.c:654:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6181              		.loc 1 654 91 is_stmt 0 view .LVU2109
 6182 258c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 6183 2590 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 6184              	# sieve_extend.c:654:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6185              		.loc 1 654 21 view .LVU2110
 6186 2594 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 6187 2598 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 6187      30
 6188              	.LVL269:
 655:sieve_extend.c ****     counter_t distance = 0;
 6189              		.loc 1 655 5 is_stmt 1 view .LVU2111
 656:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6190              		.loc 1 656 5 view .LVU2112
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6191              		.loc 1 657 5 view .LVU2113
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6192              		.loc 1 657 11 view .LVU2114
 6193 259d 4C39C0   		cmp	rax, r8	# ivtmp.434, fast_loop_stop_word
 6194 25a0 0F83A404 		jnb	.L569	#,
 6194      0000
 6195 25a6 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 6196              	.LVL270:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6197              		.loc 1 657 11 is_stmt 0 view .LVU2115
GAS LISTING /tmp/ccH5HMHD.s 			page 175


 6198 25aa 4D29DE   		sub	r14, r11	# tmp557, copy_word
 6199 25ad 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 6200              	.LVL271:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6201              		.loc 1 657 11 view .LVU2116
 6202 25b1 498D7EFC 		lea	rdi, -4[r14]	# _332,
 6203 25b5 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 6204 25b9 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 6205 25bc 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 6206 25c0 410F9EC1 		setle	r9b	#, tmp562
 6207              	.LVL272:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6208              		.loc 1 657 11 view .LVU2117
 6209 25c4 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 6209      38
 6210 25c9 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 6211 25cc 400F9EC7 		setle	dil	#, tmp566
 6212 25d0 4109F9   		or	r9d, edi	# tmp567, tmp566
 6213 25d3 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 6214 25d7 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 6214      28
 6215 25dc 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 6216 25df 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6216      27
 6217 25e4 4883C210 		add	rdx, 16	# tmp573,
 6218 25e8 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 6219 25eb 400F9EC7 		setle	dil	#, tmp575
 6220 25ef 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 6220      27
 6221 25f4 4421CF   		and	edi, r9d	# tmp577, tmp567
 6222 25f7 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6222      380B
 6223 25fd 410F97C1 		seta	r9b	#, tmp579
 6224 2601 4421CF   		and	edi, r9d	# tmp580, tmp579
 6225 2604 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 6226 2608 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 6227 260b 410F9EC2 		setle	r10b	#, tmp584
 6228 260f 4883C640 		add	rsi, 64	# tmp585,
 6229 2613 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 6230 2616 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6230      27
 6231 261b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 6231      27
 6232 2620 4421D7   		and	edi, r10d	# tmp590, tmp589
 6233 2623 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 6233      28
 6234 2628 410F9EC2 		setle	r10b	#, tmp594
 6235 262c 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 6236 262f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6236      28
 6237 2634 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 6237      28
 6238 2639 4484D7   		test	dil, r10b	# tmp590, tmp599
 6239 263c 0F845E0D 		je	.L570	#,
 6239      0000
 6240 2642 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 6241 2645 410F9EC6 		setle	r14b	#, tmp604
GAS LISTING /tmp/ccH5HMHD.s 			page 176


 6242 2649 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 6243 264c 400F9EC6 		setle	sil	#, tmp608
 6244 2650 4108F6   		or	r14b, sil	# tmp604, tmp608
 6245 2653 0F84470D 		je	.L570	#,
 6245      0000
 6246 2659 4801D9   		add	rcx, rbx	# vectp.399, bitarray
 6247 265c 4801DA   		add	rdx, rbx	# vectp.403, bitarray
 6248              	.LBB358:
 6249              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6250              		.loc 1 659 19 view .LVU2118
 6251 265f C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B], MEM[
 6252 2663 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 6252      DD
 6253 2668 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 32B], M
 6253      20
 6254 266d C4C1796E 		vmovd	xmm4, r15d	# _18,
 6254      E7
 6255              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6256              		.loc 1 658 19 view .LVU2119
 6257 2672 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.399_490, index: ivtmp.474_748, offset: 
 6258              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6259              		.loc 1 659 19 view .LVU2120
 6260 2676 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B],
 6261 267a C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B]
 6262              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6263              		.loc 1 658 19 view .LVU2121
 6264 267e C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.399_490, index: ivt
 6264      20
 6265 2683 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 6265      38
 6266              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6267              		.loc 1 659 19 view .LVU2122
 6268 2688 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 6268      C5D8
 6269              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6270              		.loc 1 658 19 view .LVU2123
 6271 268e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 6271      F2D8
 6272              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6273              		.loc 1 659 19 view .LVU2124
 6274 2694 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 6274      FED8
 6275              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6276              		.loc 1 660 63 view .LVU2125
 6277 269a C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.407, vect_perm_even_507, _18
 6278              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6279              		.loc 1 660 42 view .LVU2126
 6280 269e C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.406, tmp619, _12
GAS LISTING /tmp/ccH5HMHD.s 			page 177


 6281              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6282              		.loc 1 662 42 view .LVU2127
 6283 26a2 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.409, vect_perm_even_507, _12
 6284              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6285              		.loc 1 662 63 view .LVU2128
 6286 26a6 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.410, tmp633, _18
 6287 26aa 49C1EE03 		shr	r14, 3	# _332,
 6288              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6289              		.loc 1 660 52 view .LVU2129
 6290 26ae C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.408, vect__98.406, vect__100.407
 6290      DA
 6291              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6292              		.loc 1 662 52 view .LVU2130
 6293 26b3 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.411, vect__110.410, vect__109.409
 6294 26b7 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 6295              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6296              		.loc 1 660 31 view .LVU2131
 6297 26bb C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.408
 6297      DD01
 6298 26c1 4183E201 		and	r10d, 1	# tmp830,
 6299              	.LVL273:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6300              		.loc 1 658 9 is_stmt 1 view .LVU2132
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6301              		.loc 1 659 9 view .LVU2133
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6302              		.loc 1 660 9 view .LVU2134
 6303              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6304              		.loc 1 662 31 is_stmt 0 view .LVU2135
 6305 26c5 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.411
 6305      EF01
 6306 26cb 4983FE01 		cmp	r14, 1	# bnd.392,
 6307              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6308              		.loc 1 660 31 view .LVU2136
 6309 26cf C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.474_748, offset: 0B], tmp626
 6309      1C0B
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6310              		.loc 1 660 31 view .LVU2137
 6311 26d5 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 6312              	.LVL274:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6313              		.loc 1 660 31 view .LVU2138
 6314 26d9 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 16B], tmp62
 6314      5C0B1001 
 6315 26e1 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 6316 26e5 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.474_748, offset: 32B], tmp630
 6316      6C0B20
 6317 26ec C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 48B], tmp63
 6317      6C0B3001 
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccH5HMHD.s 			page 178


 6318              		.loc 1 661 9 is_stmt 1 view .LVU2139
 6319              	.LVL275:
 662:sieve_extend.c ****         copy_word += 2;
 6320              		.loc 1 662 9 view .LVU2140
 6321 26f4 41B90100 		mov	r9d, 1	# ivtmp.472,
 6321      0000
 6322              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6323              		.loc 1 662 31 is_stmt 0 view .LVU2141
 6324 26fa C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.474_748, offset: 0B], tmp640
 6324      2C03
 662:sieve_extend.c ****         copy_word += 2;
 6325              		.loc 1 662 31 view .LVU2142
 6326 2700 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 16B], tmp640
 6326      6C031001 
 6327 2708 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.474_748, offset: 32B], tmp644
 6327      7C0320
 6328 270f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 48B], tmp644
 6328      7C033001 
 663:sieve_extend.c ****         source_word += 2;
 6329              		.loc 1 663 9 is_stmt 1 view .LVU2143
 664:sieve_extend.c ****         distance += 2;
 6330              		.loc 1 664 9 view .LVU2144
 665:sieve_extend.c ****     }
 6331              		.loc 1 665 9 view .LVU2145
 665:sieve_extend.c ****     }
 6332              		.loc 1 665 9 is_stmt 0 view .LVU2146
 6333              	.LBE358:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6334              		.loc 1 657 11 is_stmt 1 view .LVU2147
 6335 2717 41B84000 		mov	r8d, 64	# ivtmp.474,
 6335      0000
 6336 271d 0F86E901 		jbe	.L800	#,
 6336      0000
 6337 2723 4D85D2   		test	r10, r10	# tmp830
 6338 2726 0F84A400 		je	.L571	#,
 6338      0000
 6339              	.LBB359:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6340              		.loc 1 658 9 view .LVU2148
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6341              		.loc 1 659 9 view .LVU2149
 6342              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6343              		.loc 1 659 19 is_stmt 0 view .LVU2150
 6344 272c C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B], ME
 6344      40
 6345 2731 4983FE02 		cmp	r14, 2	# bnd.392,
 6346 2735 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 32B], 
 6346      60
 6347 273a 41B90200 		mov	r9d, 2	# ivtmp.472,
 6347      0000
 6348              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6349              		.loc 1 658 19 view .LVU2151
 6350 2740 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.399_490, index: ivtmp.474_748, offset
 6350      40
GAS LISTING /tmp/ccH5HMHD.s 			page 179


 6351              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6352              		.loc 1 659 19 view .LVU2152
 6353 2745 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B
 6353      D2
 6354 274a C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B
 6354      C2
 6355              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6356              		.loc 1 658 19 view .LVU2153
 6357 274f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.399_490, index: i
 6357      60
 6358              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6359              		.loc 1 659 19 view .LVU2154
 6360 2754 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 6360      DAD8
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6361              		.loc 1 660 9 is_stmt 1 view .LVU2155
 6362              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6363              		.loc 1 658 19 is_stmt 0 view .LVU2156
 6364 275a C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 6364      ECD8
 6365              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6366              		.loc 1 659 19 view .LVU2157
 6367 2760 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 6367      F8D8
 6368 2766 41B88000 		mov	r8d, 128	# ivtmp.474,
 6368      0000
 6369              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6370              		.loc 1 660 42 view .LVU2158
 6371 276c C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.406, tmp1195, _12
 6372              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6373              		.loc 1 660 63 view .LVU2159
 6374 2770 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.407, vect_perm_even_507, _18
 6375              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6376              		.loc 1 662 42 view .LVU2160
 6377 2774 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.409, vect_perm_even_507, _12
 6378              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6379              		.loc 1 662 63 view .LVU2161
 6380 2778 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.410, tmp1206, _18
 6381              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6382              		.loc 1 660 52 view .LVU2162
 6383 277c C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.408, vect__98.406, vect__100.407
 6383      CF
 6384              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6385              		.loc 1 662 52 view .LVU2163
 6386 2781 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.411, vect__110.410, vect__109.409
 6386      D2
GAS LISTING /tmp/ccH5HMHD.s 			page 180


 6387              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6388              		.loc 1 660 31 view .LVU2164
 6389 2786 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.408
 6389      CD01
 6390              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6391              		.loc 1 662 31 view .LVU2165
 6392 278c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.411
 6392      D601
 6393              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6394              		.loc 1 660 31 view .LVU2166
 6395 2792 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.474_748, offset: 0B], tmp1199
 6395      4B40
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6396              		.loc 1 660 31 view .LVU2167
 6397 2798 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 16B], tmp1199
 6397      4B5001
 6398 279f C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.474_748, offset: 32B], tmp1202
 6398      6B60
 6399 27a5 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 48B], tmp1202
 6399      6B7001
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6400              		.loc 1 661 9 is_stmt 1 view .LVU2168
 662:sieve_extend.c ****         copy_word += 2;
 6401              		.loc 1 662 9 view .LVU2169
 6402              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6403              		.loc 1 662 31 is_stmt 0 view .LVU2170
 6404 27ac C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.474_748, offset: 0B], tmp1210
 6404      40
 662:sieve_extend.c ****         copy_word += 2;
 6405              		.loc 1 662 31 view .LVU2171
 6406 27b1 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 16B], tmp1210
 6406      575001
 6407 27b8 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.474_748, offset: 32B], tmp1213
 6407      60
 6408 27bd C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 48B], tmp1213
 6408      777001
 663:sieve_extend.c ****         source_word += 2;
 6409              		.loc 1 663 9 is_stmt 1 view .LVU2172
 664:sieve_extend.c ****         distance += 2;
 6410              		.loc 1 664 9 view .LVU2173
 665:sieve_extend.c ****     }
 6411              		.loc 1 665 9 view .LVU2174
 665:sieve_extend.c ****     }
 6412              		.loc 1 665 9 is_stmt 0 view .LVU2175
 6413              	.LBE359:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6414              		.loc 1 657 11 is_stmt 1 view .LVU2176
 6415 27c4 0F864201 		jbe	.L800	#,
 6415      0000
 6416 27ca 660F1F44 		.p2align 4
 6416      0000
 6417              		.p2align 3
 6418              	.L571:
GAS LISTING /tmp/ccH5HMHD.s 			page 181


 6419              	.LBB360:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6420              		.loc 1 658 9 view .LVU2177
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6421              		.loc 1 659 9 view .LVU2178
 6422              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6423              		.loc 1 659 19 is_stmt 0 view .LVU2179
 6424 27d0 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B], 
 6424      2402
 6425 27d6 4983C102 		add	r9, 2	# ivtmp.472,
 6426 27da C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 32B
 6426      6C0220
 6427              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6428              		.loc 1 658 19 view .LVU2180
 6429 27e1 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.399_490, index: ivtmp.474_748, offse
 6429      0C01
 6430              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6431              		.loc 1 659 19 view .LVU2181
 6432 27e7 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0
 6432      F5
 6433 27ec C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0
 6433      DD
 6434              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6435              		.loc 1 658 19 view .LVU2182
 6436 27f1 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.399_490, index: 
 6436      440120
 6437              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6438              		.loc 1 659 19 view .LVU2183
 6439 27f8 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 6439      FED8
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6440              		.loc 1 660 9 is_stmt 1 view .LVU2184
 6441              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6442              		.loc 1 658 19 is_stmt 0 view .LVU2185
 6443 27fe C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 6443      E8D8
 6444              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6445              		.loc 1 659 19 view .LVU2186
 6446 2804 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 6446      F3D8
 6447              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6448              		.loc 1 660 42 view .LVU2187
 6449 280a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.406, tmp842, _12
 6450              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6451              		.loc 1 660 63 view .LVU2188
 6452 280e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.407, vect_perm_even_507, _18
 6453              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccH5HMHD.s 			page 182


 6454              		.loc 1 662 42 view .LVU2189
 6455 2812 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.409, vect_perm_even_507, _12
 6456              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6457              		.loc 1 662 63 view .LVU2190
 6458 2816 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.410, tmp853, _18
 6459              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6460              		.loc 1 660 52 view .LVU2191
 6461 281a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.408, vect__98.406, vect__100.407
 6462              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6463              		.loc 1 662 52 view .LVU2192
 6464 281e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.411, vect__110.410, vect__109.409
 6464      F5
 6465              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6466              		.loc 1 660 31 view .LVU2193
 6467 2823 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.408
 6467      CA01
 6468              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6469              		.loc 1 662 31 view .LVU2194
 6470 2829 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.411
 6470      F101
 6471              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6472              		.loc 1 660 31 view .LVU2195
 6473 282f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.474_748, offset: 0B], tmp846
 6473      0C03
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6474              		.loc 1 660 31 view .LVU2196
 6475 2835 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 16B], tmp846
 6475      4C031001 
 6476 283d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.474_748, offset: 32B], tmp849
 6476      540320
 6477 2844 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 48B], tmp849
 6477      54033001 
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6478              		.loc 1 661 9 is_stmt 1 view .LVU2197
 662:sieve_extend.c ****         copy_word += 2;
 6479              		.loc 1 662 9 view .LVU2198
 6480              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6481              		.loc 1 662 31 is_stmt 0 view .LVU2199
 6482 284c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.474_748, offset: 0B], tmp857
 6482      3407
 662:sieve_extend.c ****         copy_word += 2;
 6483              		.loc 1 662 31 view .LVU2200
 6484 2852 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 16B], tmp85
 6484      74071001 
 6485 285a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.474_748, offset: 32B], tmp860
 6485      4C0720
 6486 2861 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 48B], tmp860
 6486      4C073001 
 663:sieve_extend.c ****         source_word += 2;
 6487              		.loc 1 663 9 is_stmt 1 view .LVU2201
GAS LISTING /tmp/ccH5HMHD.s 			page 183


 664:sieve_extend.c ****         distance += 2;
 6488              		.loc 1 664 9 view .LVU2202
 665:sieve_extend.c ****     }
 6489              		.loc 1 665 9 view .LVU2203
 665:sieve_extend.c ****     }
 6490              		.loc 1 665 9 is_stmt 0 view .LVU2204
 6491              	.LBE360:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6492              		.loc 1 657 11 is_stmt 1 view .LVU2205
 6493              	.LBB361:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6494              		.loc 1 658 9 view .LVU2206
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6495              		.loc 1 659 9 view .LVU2207
 6496              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6497              		.loc 1 659 19 is_stmt 0 view .LVU2208
 6498 2869 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B],
 6498      440240
 6499 2870 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 32B]
 6499      440260
 6500              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6501              		.loc 1 658 19 view .LVU2209
 6502 2877 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.399_490, index: ivtmp.474_748, off
 6502      7C0140
 6503              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6504              		.loc 1 659 19 view .LVU2210
 6505 287e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B],
 6506 2882 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.403_499, index: ivtmp.474_748, offset: 0B]
 6507              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6508              		.loc 1 658 19 view .LVU2211
 6509 2886 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.399_490, index:
 6509      540160
 6510              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6511              		.loc 1 659 19 view .LVU2212
 6512 288d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 6512      CDD8
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6513              		.loc 1 660 9 is_stmt 1 view .LVU2213
 6514              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6515              		.loc 1 658 19 is_stmt 0 view .LVU2214
 6516 2893 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 6516      D2D8
 6517              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6518              		.loc 1 659 19 view .LVU2215
 6519 2899 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 6519      CFD8
 6520              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6521              		.loc 1 660 42 view .LVU2216
 6522 289f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.406, tmp872, _12
GAS LISTING /tmp/ccH5HMHD.s 			page 184


 6523              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6524              		.loc 1 660 63 view .LVU2217
 6525 28a3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.407, vect_perm_even_507, _18
 6526              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6527              		.loc 1 662 42 view .LVU2218
 6528 28a7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.409, vect_perm_even_507, _12
 6529              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6530              		.loc 1 662 63 view .LVU2219
 6531 28ab C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.410, tmp883, _18
 6532              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6533              		.loc 1 660 52 view .LVU2220
 6534 28af C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.408, vect__98.406, vect__100.407
 6535              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6536              		.loc 1 662 52 view .LVU2221
 6537 28b3 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.411, vect__110.410, vect__109.409
 6538              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6539              		.loc 1 660 31 view .LVU2222
 6540 28b7 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.408
 6540      E601
 6541              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6542              		.loc 1 662 31 view .LVU2223
 6543 28bd C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.411
 6543      EF01
 6544              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6545              		.loc 1 660 31 view .LVU2224
 6546 28c3 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.474_748, offset: 0B], tmp876
 6546      640340
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6547              		.loc 1 660 31 view .LVU2225
 6548 28ca C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 16B], tmp87
 6548      64035001 
 6549 28d2 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.474_748, offset: 32B], tmp879
 6549      740360
 6550 28d9 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.474_748, offset: 48B], tmp8
 6550      74037001 
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6551              		.loc 1 661 9 is_stmt 1 view .LVU2226
 662:sieve_extend.c ****         copy_word += 2;
 6552              		.loc 1 662 9 view .LVU2227
 6553              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6554              		.loc 1 662 31 is_stmt 0 view .LVU2228
 6555 28e1 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.474_748, offset: 0B], tmp887
 6555      6C0740
 662:sieve_extend.c ****         copy_word += 2;
 6556              		.loc 1 662 31 view .LVU2229
 6557 28e8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 16B], tmp887
 6557      6C075001 
 6558 28f0 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.474_748, offset: 32B], tmp890
GAS LISTING /tmp/ccH5HMHD.s 			page 185


 6558      7C0760
 6559 28f7 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.474_748, offset: 48B], tmp89
 6559      7C077001 
 663:sieve_extend.c ****         source_word += 2;
 6560              		.loc 1 663 9 is_stmt 1 view .LVU2230
 664:sieve_extend.c ****         distance += 2;
 6561              		.loc 1 664 9 view .LVU2231
 665:sieve_extend.c ****     }
 6562              		.loc 1 665 9 view .LVU2232
 665:sieve_extend.c ****     }
 6563              		.loc 1 665 9 is_stmt 0 view .LVU2233
 6564              	.LBE361:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6565              		.loc 1 657 11 is_stmt 1 view .LVU2234
 6566 28ff 4983E880 		sub	r8, -128	# ivtmp.474,
 6567 2903 4D39CE   		cmp	r14, r9	# bnd.392, ivtmp.472
 6568 2906 0F87C4FE 		ja	.L571	#,
 6568      FFFF
 6569              	.L800:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6570              		.loc 1 657 11 is_stmt 0 view .LVU2235
 6571 290c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 6571      58
 6572 2911 49C1E603 		sal	r14, 3	# _483,
 6573 2915 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.394,
 6574 2919 4A8D1430 		lea	rdx, [rax+r14]	# tmp.395,
 6575              	.LVL276:
 6576              	.LBB362:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6577              		.loc 1 658 9 is_stmt 1 view .LVU2236
 6578              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6579              		.loc 1 658 37 is_stmt 0 view .LVU2237
 6580 291d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 6580      00000000 
 6581              	.LVL277:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6582              		.loc 1 659 9 is_stmt 1 view .LVU2238
 6583              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6584              		.loc 1 660 42 is_stmt 0 view .LVU2239
 6585 2925 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 6585      34CB
 6586              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6587              		.loc 1 659 19 view .LVU2240
 6588 292b 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 6588      08
 6589              	.LVL278:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6590              		.loc 1 660 9 is_stmt 1 view .LVU2241
 6591              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6592              		.loc 1 660 63 is_stmt 0 view .LVU2242
 6593 2930 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 6593      D7
 6594              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccH5HMHD.s 			page 186


 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6595              		.loc 1 660 52 view .LVU2243
 6596 2935 4C09D6   		or	rsi, r10	# tmp651, tmp650
 6597              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6598              		.loc 1 662 42 view .LVU2244
 6599 2938 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 6599      FF
 6600              	.LVL279:
 6601              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6602              		.loc 1 660 52 view .LVU2245
 6603 293d 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 6604              	.LVL280:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6605              		.loc 1 661 9 is_stmt 1 view .LVU2246
 6606              	# sieve_extend.c:661:         bitword_t source2 = bitarray[source_word+2];
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6607              		.loc 1 661 37 is_stmt 0 view .LVU2247
 6608 2941 4C8D4902 		lea	r9, 2[rcx]	# _618,
 6609              	.LVL281:
 662:sieve_extend.c ****         copy_word += 2;
 6610              		.loc 1 662 9 is_stmt 1 view .LVU2248
 6611              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6612              		.loc 1 662 63 is_stmt 0 view .LVU2249
 6613 2945 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 6613      10
 6614 294a C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 6614      D8
 6615              	.LVL282:
 6616              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6617              		.loc 1 662 52 view .LVU2250
 6618 294f 4C09DF   		or	rdi, r11	# tmp655, tmp652
 6619              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 6620              		.loc 1 663 19 view .LVU2251
 6621 2952 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 6622              	.LVL283:
 663:sieve_extend.c ****         source_word += 2;
 6623              		.loc 1 663 19 view .LVU2252
 6624              	.LBE362:
 6625              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6626              		.loc 1 657 11 view .LVU2253
 6627 2956 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6627      30
 6628              	.LBB363:
 6629              	# sieve_extend.c:665:         distance += 2;
 665:sieve_extend.c ****     }
 6630              		.loc 1 665 18 view .LVU2254
 6631 295b 4D8D5602 		lea	r10, 2[r14]	# distance,
 6632              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6633              		.loc 1 662 52 view .LVU2255
 6634 295f 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
GAS LISTING /tmp/ccH5HMHD.s 			page 187


 6634      08
 6635              	.LVL284:
 663:sieve_extend.c ****         source_word += 2;
 6636              		.loc 1 663 9 is_stmt 1 view .LVU2256
 664:sieve_extend.c ****         distance += 2;
 6637              		.loc 1 664 9 view .LVU2257
 665:sieve_extend.c ****     }
 6638              		.loc 1 665 9 view .LVU2258
 665:sieve_extend.c ****     }
 6639              		.loc 1 665 9 is_stmt 0 view .LVU2259
 6640              	.LBE363:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6641              		.loc 1 657 11 is_stmt 1 view .LVU2260
 6642 2964 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6643 2967 0F86D500 		jbe	.L574	#,
 6643      0000
 6644              	.LBB364:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6645              		.loc 1 658 9 view .LVU2261
 6646              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6647              		.loc 1 660 42 is_stmt 0 view .LVU2262
 6648 296d 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 6649              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6650              		.loc 1 658 37 view .LVU2263
 6651 2971 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 6651      00000000 
 6652              	.LVL285:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6653              		.loc 1 659 9 is_stmt 1 view .LVU2264
 6654              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6655              		.loc 1 659 19 is_stmt 0 view .LVU2265
 6656 2979 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 6656      08
 6657              	.LVL286:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6658              		.loc 1 660 9 is_stmt 1 view .LVU2266
 6659              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6660              		.loc 1 660 42 is_stmt 0 view .LVU2267
 6661 297e C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 6661      F6
 6662              	.LVL287:
 6663              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6664              		.loc 1 660 63 view .LVU2268
 6665 2983 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 6665      CF
 6666              	.LVL288:
 6667              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6668              		.loc 1 660 52 view .LVU2269
 6669 2988 4C09CE   		or	rsi, r9	# tmp659, tmp658
 6670 298b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 6671              	.LVL289:
GAS LISTING /tmp/ccH5HMHD.s 			page 188


 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6672              		.loc 1 661 9 is_stmt 1 view .LVU2270
 6673              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6674              		.loc 1 662 42 is_stmt 0 view .LVU2271
 6675 298f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 6675      FF
 6676              	.LVL290:
 6677              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6678              		.loc 1 662 63 view .LVU2272
 6679 2994 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 6679      10
 6680 2999 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 6680      F2
 6681              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6682              		.loc 1 662 52 view .LVU2273
 6683 299e 4809F7   		or	rdi, rsi	# tmp663, tmp660
 6684              	# sieve_extend.c:661:         bitword_t source2 = bitarray[source_word+2];
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6685              		.loc 1 661 37 view .LVU2274
 6686 29a1 4C8D4904 		lea	r9, 4[rcx]	# _648,
 662:sieve_extend.c ****         copy_word += 2;
 6687              		.loc 1 662 9 is_stmt 1 view .LVU2275
 6688              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6689              		.loc 1 662 52 is_stmt 0 view .LVU2276
 6690 29a5 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 6690      08
 663:sieve_extend.c ****         source_word += 2;
 6691              		.loc 1 663 9 is_stmt 1 view .LVU2277
 6692              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 6693              		.loc 1 663 19 is_stmt 0 view .LVU2278
 6694 29aa 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 6695              	.LVL291:
 664:sieve_extend.c ****         distance += 2;
 6696              		.loc 1 664 9 is_stmt 1 view .LVU2279
 665:sieve_extend.c ****     }
 6697              		.loc 1 665 9 view .LVU2280
 665:sieve_extend.c ****     }
 6698              		.loc 1 665 9 is_stmt 0 view .LVU2281
 6699              	.LBE364:
 6700              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6701              		.loc 1 657 11 view .LVU2282
 6702 29ae 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6703              	.LBB365:
 6704              	# sieve_extend.c:665:         distance += 2;
 665:sieve_extend.c ****     }
 6705              		.loc 1 665 18 view .LVU2283
 6706 29b1 4D8D5604 		lea	r10, 4[r14]	# distance,
 6707              	.LVL292:
 665:sieve_extend.c ****     }
 6708              		.loc 1 665 18 view .LVU2284
 6709              	.LBE365:
GAS LISTING /tmp/ccH5HMHD.s 			page 189


 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6710              		.loc 1 657 11 is_stmt 1 view .LVU2285
 6711 29b5 0F868700 		jbe	.L574	#,
 6711      0000
 6712              	.LBB366:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6713              		.loc 1 658 9 view .LVU2286
 6714              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6715              		.loc 1 658 37 is_stmt 0 view .LVU2287
 6716 29bb 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 6716      00000000 
 6717              	.LVL293:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6718              		.loc 1 659 9 is_stmt 1 view .LVU2288
 6719              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 6720              		.loc 1 663 19 is_stmt 0 view .LVU2289
 6721 29c3 4883C206 		add	rdx, 6	# copy_word,
 6722              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6723              		.loc 1 659 19 view .LVU2290
 6724 29c7 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 6724      08
 6725              	.LVL294:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6726              		.loc 1 660 9 is_stmt 1 view .LVU2291
 6727              	# sieve_extend.c:661:         bitword_t source2 = bitarray[source_word+2];
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6728              		.loc 1 661 37 is_stmt 0 view .LVU2292
 6729 29cc 4883C106 		add	rcx, 6	# _678,
 6730              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6731              		.loc 1 660 42 view .LVU2293
 6732 29d0 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 6733              	.LVL295:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6734              		.loc 1 660 42 view .LVU2294
 6735 29d4 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 6735      F1
 6736              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6737              		.loc 1 660 63 view .LVU2295
 6738 29d9 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 6738      CF
 6739              	.LVL296:
 6740              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6741              		.loc 1 660 52 view .LVU2296
 6742 29de 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6743 29e1 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 6744              	.LVL297:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6745              		.loc 1 661 9 is_stmt 1 view .LVU2297
 662:sieve_extend.c ****         copy_word += 2;
 6746              		.loc 1 662 9 view .LVU2298
 6747              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccH5HMHD.s 			page 190


 662:sieve_extend.c ****         copy_word += 2;
 6748              		.loc 1 662 42 is_stmt 0 view .LVU2299
 6749 29e5 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 6749      FF
 6750              	.LVL298:
 6751              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6752              		.loc 1 662 63 view .LVU2300
 6753 29ea 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 6753      10
 6754              	.LVL299:
 662:sieve_extend.c ****         copy_word += 2;
 6755              		.loc 1 662 63 view .LVU2301
 6756 29ef C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 6756      F2
 6757              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6758              		.loc 1 662 52 view .LVU2302
 6759 29f4 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6760              	.LBE366:
 6761              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6762              		.loc 1 657 11 view .LVU2303
 6763 29f7 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 6764              	.LBB367:
 6765              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6766              		.loc 1 662 52 view .LVU2304
 6767 29fa 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 6767      08
 663:sieve_extend.c ****         source_word += 2;
 6768              		.loc 1 663 9 is_stmt 1 view .LVU2305
 6769              	.LVL300:
 664:sieve_extend.c ****         distance += 2;
 6770              		.loc 1 664 9 view .LVU2306
 665:sieve_extend.c ****     }
 6771              		.loc 1 665 9 view .LVU2307
 6772              	# sieve_extend.c:665:         distance += 2;
 665:sieve_extend.c ****     }
 6773              		.loc 1 665 18 is_stmt 0 view .LVU2308
 6774 29ff 4D8D5606 		lea	r10, 6[r14]	# distance,
 6775              	.LVL301:
 665:sieve_extend.c ****     }
 6776              		.loc 1 665 18 view .LVU2309
 6777              	.LBE367:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6778              		.loc 1 657 11 is_stmt 1 view .LVU2310
 6779 2a03 763D     		jbe	.L574	#,
 6780              	.LBB368:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6781              		.loc 1 658 9 view .LVU2311
 6782              	# sieve_extend.c:658:         bitword_t source0 = bitarray[source_word  ];
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6783              		.loc 1 658 37 is_stmt 0 view .LVU2312
 6784 2a05 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 6784      00000000 
 6785              	.LVL302:
GAS LISTING /tmp/ccH5HMHD.s 			page 191


 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6786              		.loc 1 659 9 is_stmt 1 view .LVU2313
 6787              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6788              		.loc 1 659 19 is_stmt 0 view .LVU2314
 6789 2a0d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 6789      08
 6790              	.LVL303:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6791              		.loc 1 660 9 is_stmt 1 view .LVU2315
 6792              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6793              		.loc 1 660 63 is_stmt 0 view .LVU2316
 6794 2a12 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 6794      C1
 6795              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6796              		.loc 1 660 42 view .LVU2317
 6797 2a17 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 6798              	.LVL304:
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6799              		.loc 1 660 42 view .LVU2318
 6800 2a1b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 6800      D1
 6801              	.LVL305:
 6802              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6803              		.loc 1 660 52 view .LVU2319
 6804 2a20 4D09C2   		or	r10, r8	# tmp675, tmp674
 6805 2a23 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6806              		.loc 1 661 9 is_stmt 1 view .LVU2320
 6807              	.LVL306:
 662:sieve_extend.c ****         copy_word += 2;
 6808              		.loc 1 662 9 view .LVU2321
 6809              	# sieve_extend.c:665:         distance += 2;
 665:sieve_extend.c ****     }
 6810              		.loc 1 665 18 is_stmt 0 view .LVU2322
 6811 2a27 4D8D5608 		lea	r10, 8[r14]	# distance,
 6812              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6813              		.loc 1 662 63 view .LVU2323
 6814 2a2b 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 6814      10
 6815              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6816              		.loc 1 662 42 view .LVU2324
 6817 2a30 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 6817      D9
 6818              	.LVL307:
 6819              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 6820              		.loc 1 662 63 view .LVU2325
 6821 2a35 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 6821      FE
 6822              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccH5HMHD.s 			page 192


 6823              		.loc 1 662 52 view .LVU2326
 6824 2a3a 4909FB   		or	r11, rdi	# tmp679, tmp676
 6825 2a3d 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 6825      08
 663:sieve_extend.c ****         source_word += 2;
 6826              		.loc 1 663 9 is_stmt 1 view .LVU2327
 664:sieve_extend.c ****         distance += 2;
 6827              		.loc 1 664 9 view .LVU2328
 665:sieve_extend.c ****     }
 6828              		.loc 1 665 9 view .LVU2329
 6829              	.LVL308:
 665:sieve_extend.c ****     }
 6830              		.loc 1 665 9 is_stmt 0 view .LVU2330
 6831              	.LBE368:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6832              		.loc 1 657 11 is_stmt 1 view .LVU2331
 6833              	.L574:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6834              		.loc 1 657 11 is_stmt 0 view .LVU2332
 6835 2a42 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 6835      58
 6836 2a47 4C01D0   		add	rax, r10	# ivtmp.434, distance
 6837              	.L569:
 667:sieve_extend.c **** }
 6838              		.loc 1 667 5 is_stmt 1 view .LVU2333
 6839              	.LVL309:
 667:sieve_extend.c **** }
 6840              		.loc 1 667 5 is_stmt 0 view .LVU2334
 6841              	.LBE379:
 6842              	.LBE382:
 815:sieve_extend.c ****     copy_word += distance;
 6843              		.loc 1 815 5 is_stmt 1 view .LVU2335
 816:sieve_extend.c **** 
 6844              		.loc 1 816 5 view .LVU2336
 818:sieve_extend.c **** 
 6845              		.loc 1 818 6 view .LVU2337
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6846              		.loc 1 821 11 view .LVU2338
 6847              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6848              		.loc 1 821 5 is_stmt 0 view .LVU2339
 6849 2a4a 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6849      40
 6850 2a4f 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.434
 6851 2a52 0F821004 		jb	.L575	#,
 6851      0000
 6852 2a58 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 6852      58
 6853 2a5d 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 6853      00000000 
 6854 2a65 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 6855 2a69 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 6855      00000000 
 6856 2a71 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 6856      28000000 
 6857 2a79 4839D7   		cmp	rdi, rdx	# tmp691, _226
 6858 2a7c 4D89DE   		mov	r14, r11	# _183, _183
GAS LISTING /tmp/ccH5HMHD.s 			page 193


 6859 2a7f 410F9EC1 		setle	r9b	#, tmp693
 6860 2a83 4839F1   		cmp	rcx, rsi	# _218, _220
 6861 2a86 410F9EC0 		setle	r8b	#, tmp695
 6862 2a8a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 6863 2a8d 0F84E50A 		je	.L576	#,
 6863      0000
 6864 2a93 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 6865 2a96 4829C1   		sub	rcx, rax	# tmp697, ivtmp.434
 6866 2a99 4883F905 		cmp	rcx, 5	# tmp697,
 6867 2a9d 0F86D50A 		jbe	.L576	#,
 6867      0000
 6868 2aa3 4801DA   		add	rdx, rbx	# vectp.372, bitarray
 6869 2aa6 4983C201 		add	r10, 1	# ivtmp.434,
 6870 2aaa 48C1EA03 		shr	rdx, 3	# tmp702,
 6871 2aae 4C89D7   		mov	rdi, r10	# niters.371, ivtmp.434
 6872 2ab1 48F7DA   		neg	rdx	# tmp703
 6873 2ab4 4829C7   		sub	rdi, rax	# niters.371, ivtmp.434
 6874 2ab7 83E203   		and	edx, 3	# prolog_loop_niters.373,
 6875 2aba 0F84A80A 		je	.L595	#,
 6875      0000
 6876              	.LVL310:
 822:sieve_extend.c ****     }
 6877              		.loc 1 822 9 is_stmt 1 view .LVU2340
 6878              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6879              		.loc 1 822 77 is_stmt 0 view .LVU2341
 6880 2ac0 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 6881              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6882              		.loc 1 822 94 view .LVU2342
 6883 2ac4 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 6883      08
 6884              	.LVL311:
 822:sieve_extend.c ****     }
 6885              		.loc 1 822 94 view .LVU2343
 6886 2ac9 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 6886      CB
 6887              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6888              		.loc 1 822 56 view .LVU2344
 6889 2ace 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 6890              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6891              		.loc 1 822 77 view .LVU2345
 6892 2ad2 4C89C1   		mov	rcx, r8	# source_word, tmp793
 6893              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6894              		.loc 1 822 56 view .LVU2346
 6895 2ad5 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 6895      38
 6896 2ada C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 6896      DB
 6897              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6898              		.loc 1 822 66 view .LVU2347
 6899 2adf 4D09D9   		or	r9, r11	# tmp708, tmp706
 6900 2ae2 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.373,
GAS LISTING /tmp/ccH5HMHD.s 			page 194


 6901 2ae6 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6902              		.loc 1 821 43 is_stmt 1 view .LVU2348
 6903              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6904              		.loc 1 821 52 is_stmt 0 view .LVU2349
 6905 2aea 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6906              	.LVL312:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6907              		.loc 1 821 11 is_stmt 1 view .LVU2350
 6908 2aee 7454     		je	.L577	#,
 822:sieve_extend.c ****     }
 6909              		.loc 1 822 9 view .LVU2351
 6910              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6911              		.loc 1 822 40 is_stmt 0 view .LVU2352
 6912 2af0 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 6912      00000000 
 6913              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6914              		.loc 1 822 94 view .LVU2353
 6915 2af8 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 6915      4C1B08
 6916              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6917              		.loc 1 822 56 view .LVU2354
 6918 2aff 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 6919 2b03 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 6919      DB
 6920              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6921              		.loc 1 822 66 view .LVU2355
 6922 2b08 4D09D9   		or	r9, r11	# tmp713, tmp711
 6923 2b0b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.373,
 6924 2b0f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6925              		.loc 1 821 43 is_stmt 1 view .LVU2356
 6926              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6927              		.loc 1 822 77 is_stmt 0 view .LVU2357
 6928 2b13 498D4E02 		lea	rcx, 2[r14]	# source_word,
 6929              	.LVL313:
 6930              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6931              		.loc 1 821 52 view .LVU2358
 6932 2b17 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6933              	.LVL314:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6934              		.loc 1 821 11 is_stmt 1 view .LVU2359
 6935 2b1b 7527     		jne	.L577	#,
 822:sieve_extend.c ****     }
 6936              		.loc 1 822 9 view .LVU2360
 6937              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6938              		.loc 1 822 40 is_stmt 0 view .LVU2361
 6939 2b1d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 6939      00000000 
GAS LISTING /tmp/ccH5HMHD.s 			page 195


 6940              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6941              		.loc 1 822 77 view .LVU2362
 6942 2b25 498D4E03 		lea	rcx, 3[r14]	# source_word,
 6943              	.LVL315:
 6944              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6945              		.loc 1 822 56 view .LVU2363
 6946 2b29 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 6947              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6948              		.loc 1 822 94 view .LVU2364
 6949 2b2d C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 6949      741B08
 6950              	.LVL316:
 6951              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6952              		.loc 1 822 56 view .LVU2365
 6953 2b34 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 6953      D9
 6954              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 6955              		.loc 1 822 66 view .LVU2366
 6956 2b39 4D09DE   		or	r14, r11	# tmp718, tmp716
 6957 2b3c 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6958              		.loc 1 821 43 is_stmt 1 view .LVU2367
 6959              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6960              		.loc 1 821 52 is_stmt 0 view .LVU2368
 6961 2b40 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6962              	.LVL317:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6963              		.loc 1 821 11 is_stmt 1 view .LVU2369
 6964              	.L577:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6965              		.loc 1 821 11 is_stmt 0 view .LVU2370
 6966 2b44 4829D7   		sub	rdi, rdx	# niters.374, prolog_loop_niters.373
 6967 2b47 C441796E 		vmovd	xmm10, r12d	# _12, _12
 6967      D4
 6968 2b4c 4989FB   		mov	r11, rdi	# bnd.375, niters.374
 6969 2b4f 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.373
 6970 2b52 49C1EB02 		shr	r11, 2	# bnd.375,
 6971 2b56 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.373
 6972 2b59 49C1E305 		sal	r11, 5	# _733,
 6973 2b5d 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.384,
 6974 2b61 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 6974      58
 6975 2b66 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 6976 2b6a C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 6976      2448
 6977 2b70 49C1EC05 		shr	r12, 5	# tmp816,
 6978 2b74 4983C401 		add	r12, 1	# tmp819,
 6979 2b78 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.373
 6980 2b7b 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.389,
 6981              	# sieve_extend.c:815:     source_word += distance;
 815:sieve_extend.c ****     copy_word += distance;
GAS LISTING /tmp/ccH5HMHD.s 			page 196


 6982              		.loc 1 815 17 view .LVU2371
 6983 2b7f 31C0     		xor	eax, eax	# ivtmp.450
 6984 2b81 4183E407 		and	r12d, 7	# tmp820,
 6985 2b85 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.380,
 6986 2b89 0F842801 		je	.L579	#,
 6986      0000
 6987 2b8f 4983FC01 		cmp	r12, 1	# tmp820,
 6988 2b93 0F84F200 		je	.L727	#,
 6988      0000
 6989 2b99 4983FC02 		cmp	r12, 2	# tmp820,
 6990 2b9d 0F84C600 		je	.L728	#,
 6990      0000
 6991 2ba3 4983FC03 		cmp	r12, 3	# tmp820,
 6992 2ba7 0F849900 		je	.L729	#,
 6992      0000
 6993 2bad 4983FC04 		cmp	r12, 4	# tmp820,
 6994 2bb1 7470     		je	.L730	#,
 6995 2bb3 4983FC05 		cmp	r12, 5	# tmp820,
 6996 2bb7 7448     		je	.L731	#,
 6997 2bb9 4983FC06 		cmp	r12, 6	# tmp820,
 6998 2bbd 7420     		je	.L732	#,
 822:sieve_extend.c ****     }
 6999              		.loc 1 822 9 is_stmt 1 view .LVU2372
 7000              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7001              		.loc 1 822 56 is_stmt 0 view .LVU2373
 7002 2bbf C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.380_307, index: ivtmp.450_731, offset: 0
 7002      19
 7003 2bc4 B8200000 		mov	eax, 32	# ivtmp.450,
 7003      00
 7004              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7005              		.loc 1 822 94 view .LVU2374
 7006 2bc9 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.384_314, index: ivtmp.450_731, offset: 0
 7006      20
 7007              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7008              		.loc 1 822 56 view .LVU2375
 7009 2bce C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.382, tmp1411, _12
 7009      DA
 7010              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7011              		.loc 1 822 94 view .LVU2376
 7012 2bd3 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.386, tmp1412, _18
 7013              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7014              		.loc 1 822 66 view .LVU2377
 7015 2bd7 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.387, vect__38.382, vect__43.386
 7016              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7017              		.loc 1 822 29 view .LVU2378
 7018 2bdb C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B], vec
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7019              		.loc 1 821 43 is_stmt 1 view .LVU2379
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7020              		.loc 1 821 11 view .LVU2380
 7021              	.L732:
GAS LISTING /tmp/ccH5HMHD.s 			page 197


 822:sieve_extend.c ****     }
 7022              		.loc 1 822 9 view .LVU2381
 7023              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7024              		.loc 1 822 56 is_stmt 0 view .LVU2382
 7025 2bdf C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.380_307, index: ivtmp.450_731, offs
 7025      2C01
 7026              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7027              		.loc 1 822 94 view .LVU2383
 7028 2be5 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.384_314, index: ivtmp.450_731, offs
 7028      3C00
 7029              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7030              		.loc 1 822 56 view .LVU2384
 7031 2beb C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.382, tmp1413, _12
 7031      F2
 7032              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7033              		.loc 1 822 94 view .LVU2385
 7034 2bf0 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.386, tmp1414, _18
 7035              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7036              		.loc 1 822 66 view .LVU2386
 7037 2bf4 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.387, vect__38.382, vect__43.386
 7038              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7039              		.loc 1 822 29 view .LVU2387
 7040 2bf8 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B], 
 7040      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7041              		.loc 1 821 43 is_stmt 1 view .LVU2388
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7042              		.loc 1 821 11 view .LVU2389
 7043 2bfd 4883C020 		add	rax, 32	# ivtmp.450,
 7044              	.L731:
 822:sieve_extend.c ****     }
 7045              		.loc 1 822 9 view .LVU2390
 7046              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7047              		.loc 1 822 56 is_stmt 0 view .LVU2391
 7048 2c01 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.380_307, index: ivtmp.450_731, offse
 7048      0401
 7049              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7050              		.loc 1 822 94 view .LVU2392
 7051 2c07 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.384_314, index: ivtmp.450_731, offse
 7051      0C00
 7052              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7053              		.loc 1 822 56 view .LVU2393
 7054 2c0d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.382, tmp1415, _12
 7054      EA
 7055              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7056              		.loc 1 822 94 view .LVU2394
 7057 2c12 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.386, tmp1416, _18
GAS LISTING /tmp/ccH5HMHD.s 			page 198


 7058              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7059              		.loc 1 822 66 view .LVU2395
 7060 2c16 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.387, vect__38.382, vect__43.386
 7061              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7062              		.loc 1 822 29 view .LVU2396
 7063 2c1a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B], 
 7063      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7064              		.loc 1 821 43 is_stmt 1 view .LVU2397
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7065              		.loc 1 821 11 view .LVU2398
 7066 2c1f 4883C020 		add	rax, 32	# ivtmp.450,
 7067              	.L730:
 822:sieve_extend.c ****     }
 7068              		.loc 1 822 9 view .LVU2399
 7069              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7070              		.loc 1 822 56 is_stmt 0 view .LVU2400
 7071 2c23 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.380_307, index: ivtmp.450_731, offs
 7071      1C01
 7072              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7073              		.loc 1 822 94 view .LVU2401
 7074 2c29 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.384_314, index: ivtmp.450_731, offse
 7074      3400
 7075              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7076              		.loc 1 822 56 view .LVU2402
 7077 2c2f C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.382, tmp1417, _12
 7077      E2
 7078              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7079              		.loc 1 822 94 view .LVU2403
 7080 2c34 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.386, tmp1418, _18
 7081              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7082              		.loc 1 822 66 view .LVU2404
 7083 2c38 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.387, vect__38.382, vect__43.386
 7083      EC
 7084              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7085              		.loc 1 822 29 view .LVU2405
 7086 2c3d C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B],
 7086      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7087              		.loc 1 821 43 is_stmt 1 view .LVU2406
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7088              		.loc 1 821 11 view .LVU2407
 7089 2c42 4883C020 		add	rax, 32	# ivtmp.450,
 7090              	.L729:
 822:sieve_extend.c ****     }
 7091              		.loc 1 822 9 view .LVU2408
 7092              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7093              		.loc 1 822 56 is_stmt 0 view .LVU2409
GAS LISTING /tmp/ccH5HMHD.s 			page 199


 7094 2c46 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.380_307, index: ivtmp.450_731, offs
 7094      3401
 7095              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7096              		.loc 1 822 94 view .LVU2410
 7097 2c4c C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.384_314, index: ivtmp.450_731, offse
 7097      0C00
 7098              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7099              		.loc 1 822 56 view .LVU2411
 7100 2c52 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.382, tmp1419, _12
 7100      FA
 7101              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7102              		.loc 1 822 94 view .LVU2412
 7103 2c57 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.386, tmp1420, _18
 7104              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7105              		.loc 1 822 66 view .LVU2413
 7106 2c5b C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.387, vect__38.382, vect__43.386
 7106      C0
 7107              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7108              		.loc 1 822 29 view .LVU2414
 7109 2c60 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B], 
 7109      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7110              		.loc 1 821 43 is_stmt 1 view .LVU2415
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7111              		.loc 1 821 11 view .LVU2416
 7112 2c65 4883C020 		add	rax, 32	# ivtmp.450,
 7113              	.L728:
 822:sieve_extend.c ****     }
 7114              		.loc 1 822 9 view .LVU2417
 7115              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7116              		.loc 1 822 56 is_stmt 0 view .LVU2418
 7117 2c69 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.380_307, index: ivtmp.450_731, offse
 7117      2C01
 7118              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7119              		.loc 1 822 94 view .LVU2419
 7120 2c6f C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.384_314, index: ivtmp.450_731, offse
 7120      3C00
 7121              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7122              		.loc 1 822 56 view .LVU2420
 7123 2c75 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.382, tmp1421, _12
 7123      CA
 7124              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7125              		.loc 1 822 94 view .LVU2421
 7126 2c7a C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.386, tmp1422, _18
 7127              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7128              		.loc 1 822 66 view .LVU2422
 7129 2c7e C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.387, vect__38.382, vect__43.386
GAS LISTING /tmp/ccH5HMHD.s 			page 200


 7130              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7131              		.loc 1 822 29 view .LVU2423
 7132 2c82 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B],
 7132      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7133              		.loc 1 821 43 is_stmt 1 view .LVU2424
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7134              		.loc 1 821 11 view .LVU2425
 7135 2c87 4883C020 		add	rax, 32	# ivtmp.450,
 7136              	.L727:
 822:sieve_extend.c ****     }
 7137              		.loc 1 822 9 view .LVU2426
 7138              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7139              		.loc 1 822 56 is_stmt 0 view .LVU2427
 7140 2c8b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.380_307, index: ivtmp.450_731, offse
 7140      2401
 7141              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7142              		.loc 1 822 94 view .LVU2428
 7143 2c91 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.384_314, index: ivtmp.450_731, offs
 7143      2400
 7144              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7145              		.loc 1 822 56 view .LVU2429
 7146 2c97 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.382, tmp1423, _12
 7146      F2
 7147              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7148              		.loc 1 822 94 view .LVU2430
 7149 2c9c C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.386, tmp1424, _18
 7150              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7151              		.loc 1 822 66 view .LVU2431
 7152 2ca0 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.387, vect__38.382, vect__43.386
 7152      F5
 7153              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7154              		.loc 1 822 29 view .LVU2432
 7155 2ca5 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B],
 7155      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7156              		.loc 1 821 43 is_stmt 1 view .LVU2433
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7157              		.loc 1 821 11 view .LVU2434
 7158 2caa 4883C020 		add	rax, 32	# ivtmp.450,
 7159 2cae 4C39D8   		cmp	rax, r11	# ivtmp.450, _733
 7160 2cb1 0F843B01 		je	.L808	#,
 7160      0000
 7161              	.L579:
 822:sieve_extend.c ****     }
 7162              		.loc 1 822 9 discriminator 2 view .LVU2435
 7163              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7164              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2436
 7165 2cb7 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.380_307, index: ivtmp.450_731, offs
GAS LISTING /tmp/ccH5HMHD.s 			page 201


 7165      3C01
 7166              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7167              		.loc 1 822 94 discriminator 2 view .LVU2437
 7168 2cbd C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.384_314, index: ivtmp.450_731, offse
 7168      0400
 7169              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7170              		.loc 1 822 56 discriminator 2 view .LVU2438
 7171 2cc3 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.382, tmp1348, _12
 7171      CA
 7172              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7173              		.loc 1 822 94 discriminator 2 view .LVU2439
 7174 2cc8 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.386, tmp1349, _18
 7175              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7176              		.loc 1 822 66 discriminator 2 view .LVU2440
 7177 2ccc C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.387, vect__38.382, vect__43.386
 7178              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7179              		.loc 1 822 29 discriminator 2 view .LVU2441
 7180 2cd0 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B], 
 7180      02
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7181              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2442
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7182              		.loc 1 821 11 discriminator 2 view .LVU2443
 822:sieve_extend.c ****     }
 7183              		.loc 1 822 9 discriminator 2 view .LVU2444
 7184              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7185              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2445
 7186 2cd5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.380_307, index: ivtmp.450_731, off
 7186      4C0120
 7187              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7188              		.loc 1 822 94 discriminator 2 view .LVU2446
 7189 2cdc C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.384_314, index: ivtmp.450_731, off
 7189      7C0020
 7190              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7191              		.loc 1 822 56 discriminator 2 view .LVU2447
 7192 2ce3 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.382, tmp1350, _12
 7192      DA
 7193              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7194              		.loc 1 822 94 discriminator 2 view .LVU2448
 7195 2ce8 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.386, tmp1351, _18
 7196              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7197              		.loc 1 822 66 discriminator 2 view .LVU2449
 7198 2cec C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.387, vect__38.382, vect__43.386
 7199              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7200              		.loc 1 822 29 discriminator 2 view .LVU2450
 7201 2cf0 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B]
GAS LISTING /tmp/ccH5HMHD.s 			page 202


 7201      0220
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7202              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2451
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7203              		.loc 1 821 11 discriminator 2 view .LVU2452
 822:sieve_extend.c ****     }
 7204              		.loc 1 822 9 discriminator 2 view .LVU2453
 7205              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7206              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2454
 7207 2cf6 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.380_307, index: ivtmp.450_731, off
 7207      740140
 7208              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7209              		.loc 1 822 94 discriminator 2 view .LVU2455
 7210 2cfd C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.384_314, index: ivtmp.450_731, of
 7210      6C0040
 7211              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7212              		.loc 1 822 56 discriminator 2 view .LVU2456
 7213 2d04 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.382, tmp1352, _12
 7213      E2
 7214              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7215              		.loc 1 822 94 discriminator 2 view .LVU2457
 7216 2d09 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.386, tmp1353, _18
 7217              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7218              		.loc 1 822 66 discriminator 2 view .LVU2458
 7219 2d0d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.387, vect__38.382, vect__43.386
 7219      FE
 7220              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7221              		.loc 1 822 29 discriminator 2 view .LVU2459
 7222 2d12 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B
 7222      0240
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7223              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2460
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7224              		.loc 1 821 11 discriminator 2 view .LVU2461
 822:sieve_extend.c ****     }
 7225              		.loc 1 822 9 discriminator 2 view .LVU2462
 7226              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7227              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2463
 7228 2d18 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.380_307, index: ivtmp.450_731, off
 7228      4C0160
 7229              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7230              		.loc 1 822 94 discriminator 2 view .LVU2464
 7231 2d1f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.384_314, index: ivtmp.450_731, off
 7231      440060
 7232              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7233              		.loc 1 822 56 discriminator 2 view .LVU2465
 7234 2d26 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.382, tmp1354, _12
 7234      C2
GAS LISTING /tmp/ccH5HMHD.s 			page 203


 7235              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7236              		.loc 1 822 94 discriminator 2 view .LVU2466
 7237 2d2b C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.386, tmp1355, _18
 7238              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7239              		.loc 1 822 66 discriminator 2 view .LVU2467
 7240 2d2f C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.387, vect__38.382, vect__43.386
 7241              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7242              		.loc 1 822 29 discriminator 2 view .LVU2468
 7243 2d33 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B]
 7243      0260
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7244              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2469
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7245              		.loc 1 821 11 discriminator 2 view .LVU2470
 822:sieve_extend.c ****     }
 7246              		.loc 1 822 9 discriminator 2 view .LVU2471
 7247              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7248              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2472
 7249 2d39 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.380_307, index: ivtmp.450_731, o
 7249      9C018000 
 7249      0000
 7250              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7251              		.loc 1 822 94 discriminator 2 view .LVU2473
 7252 2d43 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.384_314, index: ivtmp.450_731, of
 7252      BC008000 
 7252      0000
 7253              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7254              		.loc 1 822 56 discriminator 2 view .LVU2474
 7255 2d4d C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.382, tmp1356, _12
 7255      E2
 7256              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7257              		.loc 1 822 94 discriminator 2 view .LVU2475
 7258 2d52 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.386, tmp1357, _18
 7259              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7260              		.loc 1 822 66 discriminator 2 view .LVU2476
 7261 2d56 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.387, vect__38.382, vect__43.386
 7262              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7263              		.loc 1 822 29 discriminator 2 view .LVU2477
 7264 2d5a C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B
 7264      02800000 
 7264      00
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7265              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2478
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7266              		.loc 1 821 11 discriminator 2 view .LVU2479
 822:sieve_extend.c ****     }
 7267              		.loc 1 822 9 discriminator 2 view .LVU2480
 7268              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccH5HMHD.s 			page 204


 822:sieve_extend.c ****     }
 7269              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2481
 7270 2d63 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.380_307, index: ivtmp.450_731, o
 7270      A401A000 
 7270      0000
 7271              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7272              		.loc 1 822 94 discriminator 2 view .LVU2482
 7273 2d6d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.384_314, index: ivtmp.450_731, o
 7273      B400A000 
 7273      0000
 7274              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7275              		.loc 1 822 56 discriminator 2 view .LVU2483
 7276 2d77 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.382, tmp1358, _12
 7276      EA
 7277              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7278              		.loc 1 822 94 discriminator 2 view .LVU2484
 7279 2d7c C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.386, tmp1359, _18
 7280              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7281              		.loc 1 822 66 discriminator 2 view .LVU2485
 7282 2d80 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.387, vect__38.382, vect__43.386
 7282      CF
 7283              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7284              		.loc 1 822 29 discriminator 2 view .LVU2486
 7285 2d85 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0B
 7285      02A00000 
 7285      00
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7286              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2487
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7287              		.loc 1 821 11 discriminator 2 view .LVU2488
 822:sieve_extend.c ****     }
 7288              		.loc 1 822 9 discriminator 2 view .LVU2489
 7289              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7290              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2490
 7291 2d8e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.380_307, index: ivtmp.450_731, of
 7291      8401C000 
 7291      0000
 7292              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7293              		.loc 1 822 94 discriminator 2 view .LVU2491
 7294 2d98 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.384_314, index: ivtmp.450_731, of
 7294      AC00C000 
 7294      0000
 7295              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7296              		.loc 1 822 56 discriminator 2 view .LVU2492
 7297 2da2 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.382, tmp1360, _12
 7297      C2
 7298              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7299              		.loc 1 822 94 discriminator 2 view .LVU2493
GAS LISTING /tmp/ccH5HMHD.s 			page 205


 7300 2da7 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.386, tmp1361, _18
 7301              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7302              		.loc 1 822 66 discriminator 2 view .LVU2494
 7303 2dab C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.387, vect__38.382, vect__43.386
 7303      D9
 7304              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7305              		.loc 1 822 29 discriminator 2 view .LVU2495
 7306 2db0 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0
 7306      02C00000 
 7306      00
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7307              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2496
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7308              		.loc 1 821 11 discriminator 2 view .LVU2497
 822:sieve_extend.c ****     }
 7309              		.loc 1 822 9 discriminator 2 view .LVU2498
 7310              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7311              		.loc 1 822 56 is_stmt 0 discriminator 2 view .LVU2499
 7312 2db9 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.380_307, index: ivtmp.450_731, of
 7312      A401E000 
 7312      0000
 7313              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7314              		.loc 1 822 94 discriminator 2 view .LVU2500
 7315 2dc3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.384_314, index: ivtmp.450_731, of
 7315      BC00E000 
 7315      0000
 7316              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7317              		.loc 1 822 56 discriminator 2 view .LVU2501
 7318 2dcd C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.382, tmp1362, _12
 7318      F2
 7319              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7320              		.loc 1 822 94 discriminator 2 view .LVU2502
 7321 2dd2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.386, tmp1363, _18
 7322              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7323              		.loc 1 822 66 discriminator 2 view .LVU2503
 7324 2dd6 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.387, vect__38.382, vect__43.386
 7325              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7326              		.loc 1 822 29 discriminator 2 view .LVU2504
 7327 2dda C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.389_323, index: ivtmp.450_731, offset: 0
 7327      02E00000 
 7327      00
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7328              		.loc 1 821 43 is_stmt 1 discriminator 2 view .LVU2505
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7329              		.loc 1 821 11 discriminator 2 view .LVU2506
 7330 2de3 48050001 		add	rax, 256	# ivtmp.450,
 7330      0000
 7331 2de9 4C39D8   		cmp	rax, r11	# ivtmp.450, _733
 7332 2dec 0F85C5FE 		jne	.L579	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 206


 7332      FFFF
 7333              	.L808:
 7334 2df2 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.376, niters.374
 7335 2df5 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.376,
 7336 2df9 4C01F1   		add	rcx, r14	# tmp.377, niters_vector_mult_vf.376
 7337 2dfc 4C01F6   		add	rsi, r14	# tmp.378, niters_vector_mult_vf.376
 7338 2dff 4C39F7   		cmp	rdi, r14	# niters.374, niters_vector_mult_vf.376
 7339 2e02 7461     		je	.L582	#,
 7340              	.LVL318:
 822:sieve_extend.c ****     }
 7341              		.loc 1 822 9 view .LVU2507
 7342              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7343              		.loc 1 821 5 is_stmt 0 view .LVU2508
 7344 2e04 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7344      40
 7345              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7346              		.loc 1 821 52 view .LVU2509
 7347 2e09 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 7348              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7349              		.loc 1 822 94 view .LVU2510
 7350 2e0d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 7350      4CCB08
 7351              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7352              		.loc 1 822 56 view .LVU2511
 7353 2e14 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 7353      04CB
 7354              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7355              		.loc 1 822 66 view .LVU2512
 7356 2e1a 4D09C1   		or	r9, r8	# tmp738, tmp736
 7357              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7358              		.loc 1 822 77 view .LVU2513
 7359 2e1d 488D7901 		lea	rdi, 1[rcx]	# _301,
 7360              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7361              		.loc 1 822 66 view .LVU2514
 7362 2e21 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7363              		.loc 1 821 43 is_stmt 1 view .LVU2515
 7364              	.LVL319:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7365              		.loc 1 821 11 view .LVU2516
 7366              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7367              		.loc 1 821 5 is_stmt 0 view .LVU2517
 7368 2e25 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 7369 2e28 723B     		jb	.L582	#,
 822:sieve_extend.c ****     }
 7370              		.loc 1 822 9 is_stmt 1 view .LVU2518
 7371              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7372              		.loc 1 821 52 is_stmt 0 view .LVU2519
GAS LISTING /tmp/ccH5HMHD.s 			page 207


 7373 2e2a 4883C602 		add	rsi, 2	# copy_word,
 7374              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7375              		.loc 1 822 94 view .LVU2520
 7376 2e2e C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 7376      64FB08
 7377              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7378              		.loc 1 822 56 view .LVU2521
 7379 2e35 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 7380              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7381              		.loc 1 822 77 view .LVU2522
 7382 2e39 4883C102 		add	rcx, 2	# _78,
 7383              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7384              		.loc 1 822 56 view .LVU2523
 7385 2e3d C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 7385      F0
 7386              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7387              		.loc 1 822 66 view .LVU2524
 7388 2e42 4D09F4   		or	r12, r14	# tmp743, tmp741
 7389 2e45 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7390              		.loc 1 821 43 is_stmt 1 view .LVU2525
 7391              	.LVL320:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7392              		.loc 1 821 11 view .LVU2526
 7393              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7394              		.loc 1 821 5 is_stmt 0 view .LVU2527
 7395 2e49 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 7396 2e4c 7217     		jb	.L582	#,
 822:sieve_extend.c ****     }
 7397              		.loc 1 822 9 is_stmt 1 view .LVU2528
 7398              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7399              		.loc 1 822 94 is_stmt 0 view .LVU2529
 7400 2e4e C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 7400      7CCB08
 7401              	.LVL321:
 7402              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7403              		.loc 1 822 56 view .LVU2530
 7404 2e55 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 7405              	.LVL322:
 822:sieve_extend.c ****     }
 7406              		.loc 1 822 56 view .LVU2531
 7407 2e59 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 7407      E9
 7408              	.LVL323:
 7409              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 7410              		.loc 1 822 66 view .LVU2532
 7411 2e5e 4D09EF   		or	r15, r13	# tmp748, tmp746
 7412 2e61 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
GAS LISTING /tmp/ccH5HMHD.s 			page 208


 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7413              		.loc 1 821 43 is_stmt 1 view .LVU2533
 7414              	.LVL324:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7415              		.loc 1 821 11 view .LVU2534
 7416              	.L582:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7417              		.loc 1 821 11 is_stmt 0 view .LVU2535
 7418 2e65 4C89D0   		mov	rax, r10	# ivtmp.434, ivtmp.434
 7419              	.L575:
 825:sieve_extend.c **** 
 7420              		.loc 1 825 5 is_stmt 1 view .LVU2536
 7421              	# sieve_extend.c:825:     if (copy_word >= destination_stop_word) return;
 825:sieve_extend.c **** 
 7422              		.loc 1 825 8 is_stmt 0 view .LVU2537
 7423 2e68 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7423      50
 7424 2e6d 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.434
 7425 2e70 0F86B304 		jbe	.L830	#,
 7425      0000
 827:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7426              		.loc 1 827 5 is_stmt 1 view .LVU2538
 7427              	# sieve_extend.c:827:     source_word = copy_word - size; // recalibrate
 827:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7428              		.loc 1 827 17 is_stmt 0 view .LVU2539
 7429 2e76 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 7429      18
 7430 2e7b 4989C5   		mov	r13, rax	# source_word, ivtmp.434
 7431              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7432              		.loc 1 831 21 view .LVU2540
 7433 2e7e 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.434,
 7434              	# sieve_extend.c:827:     source_word = copy_word - size; // recalibrate
 827:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7435              		.loc 1 827 17 view .LVU2541
 7436 2e82 4929F5   		sub	r13, rsi	# source_word, size
 7437              	.LVL325:
 828:sieve_extend.c **** 
 7438              		.loc 1 828 5 is_stmt 1 view .LVU2542
 7439              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7440              		.loc 1 831 5 is_stmt 0 view .LVU2543
 7441 2e85 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.434
 7442              	# sieve_extend.c:828:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 828:sieve_extend.c **** 
 7443              		.loc 1 828 18 view .LVU2544
 7444 2e88 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 7444      00000000 
 7445              	.LVL326:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7446              		.loc 1 831 5 is_stmt 1 view .LVU2545
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7447              		.loc 1 831 11 view .LVU2546
 7448              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7449              		.loc 1 831 5 is_stmt 0 view .LVU2547
 7450 2e90 0F825F01 		jb	.L584	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 209


 7450      0000
 7451 2e96 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 7452 2e9a 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 7452      00000000 
 7453              	# sieve_extend.c:832:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 832:sieve_extend.c **** 
 7454              		.loc 1 832 38 view .LVU2548
 7455 2ea2 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 7456 2ea6 4929C4   		sub	r12, rax	# _711, tmp762
 7457 2ea9 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 7457      48
 7458 2eae 4989F5   		mov	r13, rsi	# size, size
 7459              	.LVL327:
 832:sieve_extend.c **** 
 7460              		.loc 1 832 38 view .LVU2549
 7461 2eb1 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7461      40
 7462              	.LVL328:
 832:sieve_extend.c **** 
 7463              		.loc 1 832 38 view .LVU2550
 7464 2eb6 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 7465              	.LVL329:
 832:sieve_extend.c **** 
 7466              		.loc 1 832 38 view .LVU2551
 7467 2eb9 C5F877   		vzeroupper
 7468              	.L585:
 832:sieve_extend.c **** 
 7469              		.loc 1 832 9 is_stmt 1 discriminator 2 view .LVU2552
 7470              	.LVL330:
 7471              	.LBB383:
 7472              	.LBI383:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7473              		.loc 2 31 1 discriminator 2 view .LVU2553
 7474              	.LBB384:
 7475              		.loc 2 34 3 discriminator 2 view .LVU2554
 7476              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7477              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2555
 7478 2ebc 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 7479 2ec0 4C89F2   		mov	rdx, r14	#, memsize
 7480 2ec3 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.434
 7480      58
 7481 2ec8 4C89FE   		mov	rsi, r15	#, _48
 7482 2ecb E8000000 		call	memcpy@PLT	#
 7482      00
 7483              	.LVL331:
 7484              		.loc 2 34 10 discriminator 2 view .LVU2556
 7485              	.LBE384:
 7486              	.LBE383:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7487              		.loc 1 831 54 is_stmt 1 discriminator 2 view .LVU2557
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7488              		.loc 1 831 11 discriminator 2 view .LVU2558
 7489 2ed0 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7489      58
 7490 2ed5 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.434,
 7491              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
GAS LISTING /tmp/ccH5HMHD.s 			page 210


 7492              		.loc 1 831 5 is_stmt 0 discriminator 2 view .LVU2559
 7493 2ed9 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.434
 7494 2edc 0F82FE00 		jb	.L820	#,
 7494      0000
 832:sieve_extend.c **** 
 7495              		.loc 1 832 9 is_stmt 1 view .LVU2560
 7496              	.LVL332:
 7497              	.LBB392:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7498              		.loc 2 31 1 view .LVU2561
 7499              	.LBB385:
 7500              		.loc 2 34 3 view .LVU2562
 7501              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7502              		.loc 2 34 10 is_stmt 0 view .LVU2563
 7503 2ee2 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 7504 2ee6 4C89F2   		mov	rdx, r14	#, memsize
 7505 2ee9 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.434
 7505      58
 7506              	.LVL333:
 7507              		.loc 2 34 10 view .LVU2564
 7508 2eee 4C89FE   		mov	rsi, r15	#, _48
 7509 2ef1 E8000000 		call	memcpy@PLT	#
 7509      00
 7510              	.LVL334:
 7511              		.loc 2 34 10 view .LVU2565
 7512              	.LBE385:
 7513              	.LBE392:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7514              		.loc 1 831 54 is_stmt 1 view .LVU2566
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7515              		.loc 1 831 11 view .LVU2567
 7516 2ef6 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7516      58
 7517 2efb 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.434,
 7518              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7519              		.loc 1 831 5 is_stmt 0 view .LVU2568
 7520 2eff 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.434
 7521 2f02 0F82D800 		jb	.L820	#,
 7521      0000
 832:sieve_extend.c **** 
 7522              		.loc 1 832 9 is_stmt 1 view .LVU2569
 7523              	.LVL335:
 7524              	.LBB393:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7525              		.loc 2 31 1 view .LVU2570
 7526              	.LBB386:
 7527              		.loc 2 34 3 view .LVU2571
 7528              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7529              		.loc 2 34 10 is_stmt 0 view .LVU2572
 7530 2f08 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 7531 2f0c 4C89F2   		mov	rdx, r14	#, memsize
 7532 2f0f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.434
 7532      58
 7533 2f14 4C89FE   		mov	rsi, r15	#, _48
 7534 2f17 E8000000 		call	memcpy@PLT	#
 7534      00
GAS LISTING /tmp/ccH5HMHD.s 			page 211


 7535              	.LVL336:
 7536              		.loc 2 34 10 view .LVU2573
 7537              	.LBE386:
 7538              	.LBE393:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7539              		.loc 1 831 54 is_stmt 1 view .LVU2574
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7540              		.loc 1 831 11 view .LVU2575
 7541 2f1c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7541      58
 7542 2f21 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.434,
 7543              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7544              		.loc 1 831 5 is_stmt 0 view .LVU2576
 7545 2f25 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.434
 7546 2f28 0F82B200 		jb	.L820	#,
 7546      0000
 832:sieve_extend.c **** 
 7547              		.loc 1 832 9 is_stmt 1 view .LVU2577
 7548              	.LVL337:
 7549              	.LBB394:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7550              		.loc 2 31 1 view .LVU2578
 7551              	.LBB387:
 7552              		.loc 2 34 3 view .LVU2579
 7553              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7554              		.loc 2 34 10 is_stmt 0 view .LVU2580
 7555 2f2e 4C89F2   		mov	rdx, r14	#, memsize
 7556 2f31 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 7557 2f35 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.434
 7557      58
 7558 2f3a 4C89FE   		mov	rsi, r15	#, _48
 7559 2f3d E8000000 		call	memcpy@PLT	#
 7559      00
 7560              	.LVL338:
 7561              		.loc 2 34 10 view .LVU2581
 7562              	.LBE387:
 7563              	.LBE394:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7564              		.loc 1 831 54 is_stmt 1 view .LVU2582
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7565              		.loc 1 831 11 view .LVU2583
 7566 2f42 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7566      58
 7567 2f47 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.434,
 7568              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7569              		.loc 1 831 5 is_stmt 0 view .LVU2584
 7570 2f4b 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.434
 7571 2f4e 0F828C00 		jb	.L820	#,
 7571      0000
 832:sieve_extend.c **** 
 7572              		.loc 1 832 9 is_stmt 1 view .LVU2585
 7573              	.LVL339:
 7574              	.LBB395:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7575              		.loc 2 31 1 view .LVU2586
GAS LISTING /tmp/ccH5HMHD.s 			page 212


 7576              	.LBB388:
 7577              		.loc 2 34 3 view .LVU2587
 7578              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7579              		.loc 2 34 10 is_stmt 0 view .LVU2588
 7580 2f54 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 7581 2f58 4C89FE   		mov	rsi, r15	#, _48
 7582 2f5b 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.434
 7582      58
 7583 2f60 4C89F2   		mov	rdx, r14	#, memsize
 7584 2f63 E8000000 		call	memcpy@PLT	#
 7584      00
 7585              	.LVL340:
 7586              		.loc 2 34 10 view .LVU2589
 7587              	.LBE388:
 7588              	.LBE395:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7589              		.loc 1 831 54 is_stmt 1 view .LVU2590
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7590              		.loc 1 831 11 view .LVU2591
 7591 2f68 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7591      58
 7592 2f6d 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.434,
 7593              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7594              		.loc 1 831 5 is_stmt 0 view .LVU2592
 7595 2f71 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.434
 7596 2f74 726A     		jb	.L820	#,
 832:sieve_extend.c **** 
 7597              		.loc 1 832 9 is_stmt 1 view .LVU2593
 7598              	.LVL341:
 7599              	.LBB396:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7600              		.loc 2 31 1 view .LVU2594
 7601              	.LBB389:
 7602              		.loc 2 34 3 view .LVU2595
 7603              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7604              		.loc 2 34 10 is_stmt 0 view .LVU2596
 7605 2f76 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 7606 2f7a 4C89F2   		mov	rdx, r14	#, memsize
 7607 2f7d 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.434
 7607      58
 7608 2f82 4C89FE   		mov	rsi, r15	#, _48
 7609 2f85 E8000000 		call	memcpy@PLT	#
 7609      00
 7610              	.LVL342:
 7611              		.loc 2 34 10 view .LVU2597
 7612              	.LBE389:
 7613              	.LBE396:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7614              		.loc 1 831 54 is_stmt 1 view .LVU2598
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7615              		.loc 1 831 11 view .LVU2599
 7616 2f8a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7616      58
 7617 2f8f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.434,
 7618              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
GAS LISTING /tmp/ccH5HMHD.s 			page 213


 7619              		.loc 1 831 5 is_stmt 0 view .LVU2600
 7620 2f93 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.434
 7621 2f96 7248     		jb	.L820	#,
 832:sieve_extend.c **** 
 7622              		.loc 1 832 9 is_stmt 1 view .LVU2601
 7623              	.LVL343:
 7624              	.LBB397:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7625              		.loc 2 31 1 view .LVU2602
 7626              	.LBB390:
 7627              		.loc 2 34 3 view .LVU2603
 7628              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7629              		.loc 2 34 10 is_stmt 0 view .LVU2604
 7630 2f98 4C89FE   		mov	rsi, r15	#, _48
 7631 2f9b 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 7632 2f9f 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.434
 7632      58
 7633 2fa4 4C89F2   		mov	rdx, r14	#, memsize
 7634 2fa7 E8000000 		call	memcpy@PLT	#
 7634      00
 7635              	.LVL344:
 7636              		.loc 2 34 10 view .LVU2605
 7637              	.LBE390:
 7638              	.LBE397:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7639              		.loc 1 831 54 is_stmt 1 view .LVU2606
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7640              		.loc 1 831 11 view .LVU2607
 7641 2fac 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7641      58
 7642 2fb1 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.434,
 7643              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7644              		.loc 1 831 5 is_stmt 0 view .LVU2608
 7645 2fb5 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.434
 7646 2fb8 7226     		jb	.L820	#,
 832:sieve_extend.c **** 
 7647              		.loc 1 832 9 is_stmt 1 view .LVU2609
 7648              	.LVL345:
 7649              	.LBB398:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7650              		.loc 2 31 1 view .LVU2610
 7651              	.LBB391:
 7652              		.loc 2 34 3 view .LVU2611
 7653              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7654              		.loc 2 34 10 is_stmt 0 view .LVU2612
 7655 2fba 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 7656 2fbe 4C89F2   		mov	rdx, r14	#, memsize
 7657 2fc1 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.434
 7657      58
 7658 2fc6 4C89FE   		mov	rsi, r15	#, _48
 7659 2fc9 E8000000 		call	memcpy@PLT	#
 7659      00
 7660              	.LVL346:
 7661              		.loc 2 34 10 view .LVU2613
 7662              	.LBE391:
 7663              	.LBE398:
GAS LISTING /tmp/ccH5HMHD.s 			page 214


 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7664              		.loc 1 831 54 is_stmt 1 view .LVU2614
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7665              		.loc 1 831 11 view .LVU2615
 7666 2fce 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.434, %sfp
 7666      58
 7667              	.LVL347:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7668              		.loc 1 831 11 is_stmt 0 view .LVU2616
 7669 2fd3 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.434,
 7670              	.LVL348:
 7671              	# sieve_extend.c:831:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7672              		.loc 1 831 5 view .LVU2617
 7673 2fd7 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.434
 7674 2fda 0F83DCFE 		jnb	.L585	#,
 7674      FFFF
 7675              	.LVL349:
 7676              		.p2align 4
 7677              		.p2align 3
 7678              	.L820:
 831:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7679              		.loc 1 831 5 view .LVU2618
 7680 2fe0 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 7680      48
 7681              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7682              		.loc 1 835 5 view .LVU2619
 7683 2fe5 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.434
 7683      50
 7684 2fea 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7684      40
 7685              	.LVL350:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7686              		.loc 1 835 11 is_stmt 1 view .LVU2620
 7687              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7688              		.loc 1 835 5 is_stmt 0 view .LVU2621
 7689 2fef 0F826E02 		jb	.L831	#,
 7689      0000
 7690              	.LVL351:
 7691              	.L584:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7692              		.loc 1 835 5 view .LVU2622
 7693 2ff5 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 7693      00000000 
 7694 2ffd 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 7694      00000000 
 7695 3005 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 7696 3009 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 7696      20000000 
 7697              	.LVL352:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7698              		.loc 1 835 5 view .LVU2623
 7699 3011 4939FC   		cmp	r12, rdi	# _187, tmp771
 7700 3014 410F9DC1 		setge	r9b	#, tmp773
 7701 3018 4D39F7   		cmp	r15, r14	# _195, _197
GAS LISTING /tmp/ccH5HMHD.s 			page 215


 7702 301b 410F9DC3 		setge	r11b	#, tmp775
 7703 301f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 7704 3022 0F845002 		je	.L587	#,
 7704      0000
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7705              		.loc 1 835 5 view .LVU2624
 7706 3028 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7706      50
 7707 302d 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 7708 3030 4929C2   		sub	r10, rax	# tmp777, ivtmp.434
 7709 3033 4983FA05 		cmp	r10, 5	# tmp777,
 7710 3037 0F863B02 		jbe	.L587	#,
 7710      0000
 7711 303d 4901DC   		add	r12, rbx	# vectp.359, bitarray
 7712 3040 4C8D4201 		lea	r8, 1[rdx]	# _75,
 7713 3044 49C1EC03 		shr	r12, 3	# tmp781,
 7714 3048 49F7DC   		neg	r12	# tmp782
 7715 304b 4183E403 		and	r12d, 3	# prolog_loop_niters.360,
 7716 304f 0F842B07 		je	.L596	#,
 7716      0000
 836:sieve_extend.c **** 
 7717              		.loc 1 836 9 is_stmt 1 view .LVU2625
 7718              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7719              		.loc 1 836 39 is_stmt 0 view .LVU2626
 7720 3055 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 7721 3059 4983FC01 		cmp	r12, 1	# prolog_loop_niters.360,
 7722              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7723              		.loc 1 835 57 view .LVU2627
 7724 305d 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7725              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7726              		.loc 1 835 71 view .LVU2628
 7727 3061 4D8D7501 		lea	r14, 1[r13]	# source_word,
 7728              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7729              		.loc 1 836 29 view .LVU2629
 7730 3065 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7731              		.loc 1 835 48 is_stmt 1 view .LVU2630
 7732              	.LVL353:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7733              		.loc 1 835 11 view .LVU2631
 7734 3069 7426     		je	.L588	#,
 836:sieve_extend.c **** 
 7735              		.loc 1 836 9 view .LVU2632
 7736              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7737              		.loc 1 836 39 is_stmt 0 view .LVU2633
 7738 306b 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 7739 306f 4983FC03 		cmp	r12, 3	# prolog_loop_niters.360,
 7740              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7741              		.loc 1 835 71 view .LVU2634
 7742 3073 4D8D7502 		lea	r14, 2[r13]	# source_word,
 7743              	.LVL354:
GAS LISTING /tmp/ccH5HMHD.s 			page 216


 7744              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7745              		.loc 1 836 29 view .LVU2635
 7746 3077 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7747              		.loc 1 835 48 is_stmt 1 view .LVU2636
 7748              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7749              		.loc 1 835 57 is_stmt 0 view .LVU2637
 7750 307b 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7751              	.LVL355:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7752              		.loc 1 835 11 is_stmt 1 view .LVU2638
 7753 307f 7510     		jne	.L588	#,
 836:sieve_extend.c **** 
 7754              		.loc 1 836 9 view .LVU2639
 7755              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7756              		.loc 1 836 39 is_stmt 0 view .LVU2640
 7757 3081 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 7758              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7759              		.loc 1 835 71 view .LVU2641
 7760 3085 4D8D7503 		lea	r14, 3[r13]	# source_word,
 7761              	.LVL356:
 7762              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7763              		.loc 1 836 29 view .LVU2642
 7764 3089 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7765              		.loc 1 835 48 is_stmt 1 view .LVU2643
 7766              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7767              		.loc 1 835 57 is_stmt 0 view .LVU2644
 7768 308d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7769              	.LVL357:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7770              		.loc 1 835 11 is_stmt 1 view .LVU2645
 7771              	.L588:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7772              		.loc 1 835 11 is_stmt 0 view .LVU2646
 7773 3091 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.360
 7774 3094 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.360
 7775 3097 4929C0   		sub	r8, rax	# niters.361, ivtmp.434
 7776 309a 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.360
 7777 309d 4D89C1   		mov	r9, r8	# bnd.362, niters.361
 7778 30a0 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.370,
 7779 30a4 49C1E902 		shr	r9, 2	# bnd.362,
 7780              	# sieve_extend.c:827:     source_word = copy_word - size; // recalibrate
 827:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7781              		.loc 1 827 17 view .LVU2647
 7782 30a8 31C0     		xor	eax, eax	# ivtmp.425
 7783 30aa 49C1E105 		sal	r9, 5	# _704,
 7784 30ae 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.367,
 7785 30b2 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 7786 30b6 49C1EB05 		shr	r11, 5	# tmp804,
 7787 30ba 4983C301 		add	r11, 1	# tmp807,
GAS LISTING /tmp/ccH5HMHD.s 			page 217


 7788 30be 4183E307 		and	r11d, 7	# tmp808,
 7789 30c2 0F84A800 		je	.L590	#,
 7789      0000
 7790 30c8 4983FB01 		cmp	r11, 1	# tmp808,
 7791 30cc 0F848400 		je	.L740	#,
 7791      0000
 7792 30d2 4983FB02 		cmp	r11, 2	# tmp808,
 7793 30d6 746D     		je	.L741	#,
 7794 30d8 4983FB03 		cmp	r11, 3	# tmp808,
 7795 30dc 7456     		je	.L742	#,
 7796 30de 4983FB04 		cmp	r11, 4	# tmp808,
 7797 30e2 743F     		je	.L743	#,
 7798 30e4 4983FB05 		cmp	r11, 5	# tmp808,
 7799 30e8 7428     		je	.L744	#,
 7800 30ea 4983FB06 		cmp	r11, 6	# tmp808,
 7801 30ee 7411     		je	.L745	#,
 7802              	.LVL358:
 836:sieve_extend.c **** 
 7803              		.loc 1 836 9 is_stmt 1 view .LVU2648
 7804              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7805              		.loc 1 836 29 is_stmt 0 view .LVU2649
 7806 30f0 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.367_189, index: ivtmp.425_702, offset
 7806      5500
 7807 30f6 B8200000 		mov	eax, 32	# ivtmp.425,
 7807      00
 7808 30fb C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B], tmp
 7808      1424
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7809              		.loc 1 835 48 is_stmt 1 view .LVU2650
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7810              		.loc 1 835 11 view .LVU2651
 7811              	.L745:
 836:sieve_extend.c **** 
 7812              		.loc 1 836 9 view .LVU2652
 7813              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7814              		.loc 1 836 29 is_stmt 0 view .LVU2653
 7815 3101 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.367_189, index: ivtmp.425_702, off
 7815      540500
 7816 3108 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B], 
 7816      1404
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7817              		.loc 1 835 48 is_stmt 1 view .LVU2654
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7818              		.loc 1 835 11 view .LVU2655
 7819 310e 4883C020 		add	rax, 32	# ivtmp.425,
 7820              	.L744:
 836:sieve_extend.c **** 
 7821              		.loc 1 836 9 view .LVU2656
 7822              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7823              		.loc 1 836 29 is_stmt 0 view .LVU2657
 7824 3112 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.367_189, index: ivtmp.425_702, of
 7824      6C0500
 7825 3119 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B],
 7825      2C04
GAS LISTING /tmp/ccH5HMHD.s 			page 218


 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7826              		.loc 1 835 48 is_stmt 1 view .LVU2658
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7827              		.loc 1 835 11 view .LVU2659
 7828 311f 4883C020 		add	rax, 32	# ivtmp.425,
 7829              	.L743:
 836:sieve_extend.c **** 
 7830              		.loc 1 836 9 view .LVU2660
 7831              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7832              		.loc 1 836 29 is_stmt 0 view .LVU2661
 7833 3123 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.367_189, index: ivtmp.425_702, of
 7833      740500
 7834 312a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B],
 7834      3404
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7835              		.loc 1 835 48 is_stmt 1 view .LVU2662
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7836              		.loc 1 835 11 view .LVU2663
 7837 3130 4883C020 		add	rax, 32	# ivtmp.425,
 7838              	.L742:
 836:sieve_extend.c **** 
 7839              		.loc 1 836 9 view .LVU2664
 7840              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7841              		.loc 1 836 29 is_stmt 0 view .LVU2665
 7842 3134 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.367_189, index: ivtmp.425_702, of
 7842      7C0500
 7843 313b C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B],
 7843      3C04
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7844              		.loc 1 835 48 is_stmt 1 view .LVU2666
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7845              		.loc 1 835 11 view .LVU2667
 7846 3141 4883C020 		add	rax, 32	# ivtmp.425,
 7847              	.L741:
 836:sieve_extend.c **** 
 7848              		.loc 1 836 9 view .LVU2668
 7849              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7850              		.loc 1 836 29 is_stmt 0 view .LVU2669
 7851 3145 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.367_189, index: ivtmp.425_702, off
 7851      4C0500
 7852 314c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B], 
 7852      0C04
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7853              		.loc 1 835 48 is_stmt 1 view .LVU2670
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7854              		.loc 1 835 11 view .LVU2671
 7855 3152 4883C020 		add	rax, 32	# ivtmp.425,
 7856              	.L740:
 836:sieve_extend.c **** 
 7857              		.loc 1 836 9 view .LVU2672
 7858              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7859              		.loc 1 836 29 is_stmt 0 view .LVU2673
 7860 3156 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.367_189, index: ivtmp.425_702, off
GAS LISTING /tmp/ccH5HMHD.s 			page 219


 7860      440500
 7861 315d C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B], 
 7861      0404
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7862              		.loc 1 835 48 is_stmt 1 view .LVU2674
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7863              		.loc 1 835 11 view .LVU2675
 7864 3163 4883C020 		add	rax, 32	# ivtmp.425,
 7865 3167 4C39C8   		cmp	rax, r9	# ivtmp.425, _704
 7866 316a 0F849600 		je	.L805	#,
 7866      0000
 7867              	.L590:
 836:sieve_extend.c **** 
 7868              		.loc 1 836 9 discriminator 2 view .LVU2676
 7869              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7870              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2677
 7871 3170 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.367_189, index: ivtmp.425_702, off
 7871      440500
 7872 3177 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B], 
 7872      0404
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7873              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2678
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7874              		.loc 1 835 11 discriminator 2 view .LVU2679
 836:sieve_extend.c **** 
 7875              		.loc 1 836 9 discriminator 2 view .LVU2680
 7876              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7877              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2681
 7878 317d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.367_189, index: ivtmp.425_702, of
 7878      6C0520
 7879 3184 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B]
 7879      6C0420
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7880              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2682
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7881              		.loc 1 835 11 discriminator 2 view .LVU2683
 836:sieve_extend.c **** 
 7882              		.loc 1 836 9 discriminator 2 view .LVU2684
 7883              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7884              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2685
 7885 318b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.367_189, index: ivtmp.425_702, of
 7885      4C0540
 7886 3192 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B]
 7886      4C0440
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7887              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2686
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7888              		.loc 1 835 11 discriminator 2 view .LVU2687
 836:sieve_extend.c **** 
 7889              		.loc 1 836 9 discriminator 2 view .LVU2688
 7890              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7891              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2689
 7892 3199 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.367_189, index: ivtmp.425_702, o
GAS LISTING /tmp/ccH5HMHD.s 			page 220


 7892      5C0560
 7893 31a0 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B
 7893      5C0460
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7894              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2690
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7895              		.loc 1 835 11 discriminator 2 view .LVU2691
 836:sieve_extend.c **** 
 7896              		.loc 1 836 9 discriminator 2 view .LVU2692
 7897              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7898              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2693
 7899 31a7 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.367_189, index: ivtmp.425_702, o
 7899      A4058000 
 7899      0000
 7900 31b1 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B
 7900      A4048000 
 7900      0000
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7901              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2694
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7902              		.loc 1 835 11 discriminator 2 view .LVU2695
 836:sieve_extend.c **** 
 7903              		.loc 1 836 9 discriminator 2 view .LVU2696
 7904              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7905              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2697
 7906 31bb C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.367_189, index: ivtmp.425_702, o
 7906      B405A000 
 7906      0000
 7907 31c5 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B
 7907      B404A000 
 7907      0000
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7908              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2698
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7909              		.loc 1 835 11 discriminator 2 view .LVU2699
 836:sieve_extend.c **** 
 7910              		.loc 1 836 9 discriminator 2 view .LVU2700
 7911              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7912              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2701
 7913 31cf C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.367_189, index: ivtmp.425_702, o
 7913      BC05C000 
 7913      0000
 7914 31d9 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B
 7914      BC04C000 
 7914      0000
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7915              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2702
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7916              		.loc 1 835 11 discriminator 2 view .LVU2703
 836:sieve_extend.c **** 
 7917              		.loc 1 836 9 discriminator 2 view .LVU2704
 7918              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7919              		.loc 1 836 29 is_stmt 0 discriminator 2 view .LVU2705
GAS LISTING /tmp/ccH5HMHD.s 			page 221


 7920 31e3 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.367_189, index: ivtmp.425_702, o
 7920      9C05E000 
 7920      0000
 7921 31ed C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.370_207, index: ivtmp.425_702, offset: 0B
 7921      9C04E000 
 7921      0000
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7922              		.loc 1 835 48 is_stmt 1 discriminator 2 view .LVU2706
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7923              		.loc 1 835 11 discriminator 2 view .LVU2707
 7924 31f7 48050001 		add	rax, 256	# ivtmp.425,
 7924      0000
 7925 31fd 4C39C8   		cmp	rax, r9	# ivtmp.425, _704
 7926 3200 0F856AFF 		jne	.L590	#,
 7926      FFFF
 7927              	.L805:
 7928 3206 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.363, niters.361
 7929 3209 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.363,
 7930 320d 4901D6   		add	r14, rdx	# tmp.364, niters_vector_mult_vf.363
 7931 3210 4801D6   		add	rsi, rdx	# tmp.365, niters_vector_mult_vf.363
 7932 3213 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.363, niters.361
 7933 3216 0F840D01 		je	.L830	#,
 7933      0000
 7934              	.LVL359:
 836:sieve_extend.c **** 
 7935              		.loc 1 836 9 view .LVU2708
 7936              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7937              		.loc 1 835 5 is_stmt 0 view .LVU2709
 7938 321c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7938      50
 7939              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7940              		.loc 1 835 57 view .LVU2710
 7941 3221 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 7942              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7943              		.loc 1 836 39 view .LVU2711
 7944 3225 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 7945              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7946              		.loc 1 835 71 view .LVU2712
 7947 3229 4983C601 		add	r14, 1	# source_word,
 7948              	.LVL360:
 7949              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7950              		.loc 1 835 5 view .LVU2713
 7951 322d 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 7952              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7953              		.loc 1 836 29 view .LVU2714
 7954 3230 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7955              		.loc 1 835 48 is_stmt 1 view .LVU2715
 7956              	.LVL361:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7957              		.loc 1 835 11 view .LVU2716
GAS LISTING /tmp/ccH5HMHD.s 			page 222


 7958              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7959              		.loc 1 835 5 is_stmt 0 view .LVU2717
 7960 3234 0F82EF00 		jb	.L830	#,
 7960      0000
 836:sieve_extend.c **** 
 7961              		.loc 1 836 9 is_stmt 1 view .LVU2718
 7962              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7963              		.loc 1 836 39 is_stmt 0 view .LVU2719
 7964 323a 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 7964      00000000 
 7965              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7966              		.loc 1 835 57 view .LVU2720
 7967 3242 4883C602 		add	rsi, 2	# copy_word,
 7968              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7969              		.loc 1 836 39 view .LVU2721
 7970 3246 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 7971              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7972              		.loc 1 835 5 view .LVU2722
 7973 324a 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 7974              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7975              		.loc 1 836 29 view .LVU2723
 7976 324d 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7977              		.loc 1 835 48 is_stmt 1 view .LVU2724
 7978              	.LVL362:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7979              		.loc 1 835 11 view .LVU2725
 7980              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7981              		.loc 1 835 5 is_stmt 0 view .LVU2726
 7982 3251 0F82D200 		jb	.L830	#,
 7982      0000
 836:sieve_extend.c **** 
 7983              		.loc 1 836 9 is_stmt 1 view .LVU2727
 7984              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7985              		.loc 1 836 39 is_stmt 0 view .LVU2728
 7986 3257 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 7986      08
 7987              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 7988              		.loc 1 836 29 view .LVU2729
 7989 325c 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7990              		.loc 1 835 48 is_stmt 1 view .LVU2730
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7991              		.loc 1 835 11 view .LVU2731
 7992 3260 C5F877   		vzeroupper
 7993              	.L831:
 7994              	# sieve_extend.c:839:  }
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 223


 7995              		.loc 1 839 2 is_stmt 0 view .LVU2732
 7996 3263 488D65D8 		lea	rsp, -40[rbp]	#,
 7997              	.LVL363:
 839:sieve_extend.c **** 
 7998              		.loc 1 839 2 view .LVU2733
 7999 3267 5B       		pop	rbx	#
 8000 3268 415C     		pop	r12	#
 8001 326a 415D     		pop	r13	#
 8002 326c 415E     		pop	r14	#
 8003 326e 415F     		pop	r15	#
 8004 3270 5D       		pop	rbp	#
 8005              		.cfi_remember_state
 8006              		.cfi_def_cfa 7, 8
 8007              	.LVL364:
 839:sieve_extend.c **** 
 8008              		.loc 1 839 2 view .LVU2734
 8009 3271 C3       		ret	
 8010              	.LVL365:
 8011              		.p2align 4,,7
 8012 3272 660F1F44 		.p2align 3
 8012      0000
 8013              	.L587:
 8014              		.cfi_restore_state
 839:sieve_extend.c **** 
 8015              		.loc 1 839 2 view .LVU2735
 8016 3278 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8016      50
 8017 327d 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.420,
 8018              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8019              		.loc 1 836 39 view .LVU2736
 8020 3281 4929C5   		sub	r13, rax	# tmp791, ivtmp.434
 8021              	.LVL366:
 836:sieve_extend.c **** 
 8022              		.loc 1 836 39 view .LVU2737
 8023 3284 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 8023      08
 8024 3289 4989D9   		mov	r9, rbx	# tmp799, _701
 8025 328c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.420
 8026 328f 4983E908 		sub	r9, 8	# tmp800,
 8027 3293 49C1E903 		shr	r9, 3	# tmp798,
 8028 3297 4983C101 		add	r9, 1	# tmp801,
 8029 329b 4183E107 		and	r9d, 7	# tmp802,
 8030 329f 0F849B00 		je	.L593	#,
 8030      0000
 8031 32a5 4983F901 		cmp	r9, 1	# tmp802,
 8032 32a9 746C     		je	.L746	#,
 8033 32ab 4983F902 		cmp	r9, 2	# tmp802,
 8034 32af 7459     		je	.L747	#,
 8035 32b1 4983F903 		cmp	r9, 3	# tmp802,
 8036 32b5 7446     		je	.L748	#,
 8037 32b7 4983F904 		cmp	r9, 4	# tmp802,
 8038 32bb 7433     		je	.L749	#,
 8039 32bd 4983F905 		cmp	r9, 5	# tmp802,
 8040 32c1 7420     		je	.L750	#,
 8041 32c3 4983F906 		cmp	r9, 6	# tmp802,
 8042 32c7 740D     		je	.L751	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 224


 836:sieve_extend.c **** 
 8043              		.loc 1 836 9 is_stmt 1 view .LVU2738
 8044              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8045              		.loc 1 836 39 is_stmt 0 view .LVU2739
 8046 32c9 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8047 32cd 4983C408 		add	r12, 8	# ivtmp.420,
 8048              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8049              		.loc 1 836 29 view .LVU2740
 8050 32d1 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 8050      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8051              		.loc 1 835 48 is_stmt 1 view .LVU2741
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8052              		.loc 1 835 11 view .LVU2742
 8053              	.L751:
 836:sieve_extend.c **** 
 8054              		.loc 1 836 9 view .LVU2743
 8055              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8056              		.loc 1 836 39 is_stmt 0 view .LVU2744
 8057 32d6 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8058 32da 4983C408 		add	r12, 8	# ivtmp.420,
 8059              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8060              		.loc 1 836 29 view .LVU2745
 8061 32de 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 8061      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8062              		.loc 1 835 48 is_stmt 1 view .LVU2746
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8063              		.loc 1 835 11 view .LVU2747
 8064              	.L750:
 836:sieve_extend.c **** 
 8065              		.loc 1 836 9 view .LVU2748
 8066              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8067              		.loc 1 836 39 is_stmt 0 view .LVU2749
 8068 32e3 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8069 32e7 4983C408 		add	r12, 8	# ivtmp.420,
 8070              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8071              		.loc 1 836 29 view .LVU2750
 8072 32eb 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8072      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8073              		.loc 1 835 48 is_stmt 1 view .LVU2751
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8074              		.loc 1 835 11 view .LVU2752
 8075              	.L749:
 836:sieve_extend.c **** 
 8076              		.loc 1 836 9 view .LVU2753
 8077              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8078              		.loc 1 836 39 is_stmt 0 view .LVU2754
 8079 32f0 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
GAS LISTING /tmp/ccH5HMHD.s 			page 225


 8080 32f4 4983C408 		add	r12, 8	# ivtmp.420,
 8081              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8082              		.loc 1 836 29 view .LVU2755
 8083 32f8 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8083      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8084              		.loc 1 835 48 is_stmt 1 view .LVU2756
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8085              		.loc 1 835 11 view .LVU2757
 8086              	.L748:
 836:sieve_extend.c **** 
 8087              		.loc 1 836 9 view .LVU2758
 8088              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8089              		.loc 1 836 39 is_stmt 0 view .LVU2759
 8090 32fd 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8091 3301 4983C408 		add	r12, 8	# ivtmp.420,
 8092              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8093              		.loc 1 836 29 view .LVU2760
 8094 3305 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 8094      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8095              		.loc 1 835 48 is_stmt 1 view .LVU2761
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8096              		.loc 1 835 11 view .LVU2762
 8097              	.L747:
 836:sieve_extend.c **** 
 8098              		.loc 1 836 9 view .LVU2763
 8099              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8100              		.loc 1 836 39 is_stmt 0 view .LVU2764
 8101 330a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8102 330e 4983C408 		add	r12, 8	# ivtmp.420,
 8103              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8104              		.loc 1 836 29 view .LVU2765
 8105 3312 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 8105      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8106              		.loc 1 835 48 is_stmt 1 view .LVU2766
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8107              		.loc 1 835 11 view .LVU2767
 8108              	.L746:
 836:sieve_extend.c **** 
 8109              		.loc 1 836 9 view .LVU2768
 8110              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8111              		.loc 1 836 39 is_stmt 0 view .LVU2769
 8112 3317 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8113 331b 4983C408 		add	r12, 8	# ivtmp.420,
 8114              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8115              		.loc 1 836 29 view .LVU2770
 8116 331f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 8116      F8
GAS LISTING /tmp/ccH5HMHD.s 			page 226


 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8117              		.loc 1 835 48 is_stmt 1 view .LVU2771
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8118              		.loc 1 835 11 view .LVU2772
 8119              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8120              		.loc 1 835 5 is_stmt 0 view .LVU2773
 8121 3324 4939DC   		cmp	r12, rbx	# ivtmp.420, _701
 8122 3327 7517     		jne	.L593	#,
 8123              	.LVL367:
 8124              	.L830:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8125              		.loc 1 835 5 view .LVU2774
 8126 3329 C5F877   		vzeroupper
 8127              	# sieve_extend.c:839:  }
 839:sieve_extend.c **** 
 8128              		.loc 1 839 2 view .LVU2775
 8129 332c 488D65D8 		lea	rsp, -40[rbp]	#,
 8130              	.LVL368:
 839:sieve_extend.c **** 
 8131              		.loc 1 839 2 view .LVU2776
 8132 3330 5B       		pop	rbx	#
 8133 3331 415C     		pop	r12	#
 8134 3333 415D     		pop	r13	#
 8135 3335 415E     		pop	r14	#
 8136 3337 415F     		pop	r15	#
 8137 3339 5D       		pop	rbp	#
 8138              		.cfi_remember_state
 8139              		.cfi_def_cfa 7, 8
 8140              	.LVL369:
 839:sieve_extend.c **** 
 8141              		.loc 1 839 2 view .LVU2777
 8142 333a C3       		ret	
 8143              	.LVL370:
 8144 333b 0F1F4400 		.p2align 4,,7
 8144      00
 8145              		.p2align 3
 8146              	.L593:
 8147              		.cfi_restore_state
 836:sieve_extend.c **** 
 8148              		.loc 1 836 9 is_stmt 1 view .LVU2778
 8149              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8150              		.loc 1 836 39 is_stmt 0 view .LVU2779
 8151 3340 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8152              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8153              		.loc 1 836 29 view .LVU2780
 8154 3344 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8155              		.loc 1 835 48 is_stmt 1 view .LVU2781
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8156              		.loc 1 835 11 view .LVU2782
 836:sieve_extend.c **** 
 8157              		.loc 1 836 9 view .LVU2783
 8158              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 227


 8159              		.loc 1 836 39 is_stmt 0 view .LVU2784
 8160 3348 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8160      08
 8161              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8162              		.loc 1 836 29 view .LVU2785
 8163 334d 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 8163      08
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8164              		.loc 1 835 48 is_stmt 1 view .LVU2786
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8165              		.loc 1 835 11 view .LVU2787
 836:sieve_extend.c **** 
 8166              		.loc 1 836 9 view .LVU2788
 8167              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8168              		.loc 1 836 39 is_stmt 0 view .LVU2789
 8169 3352 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8169      10
 8170              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8171              		.loc 1 836 29 view .LVU2790
 8172 3357 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 8172      10
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8173              		.loc 1 835 48 is_stmt 1 view .LVU2791
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8174              		.loc 1 835 11 view .LVU2792
 836:sieve_extend.c **** 
 8175              		.loc 1 836 9 view .LVU2793
 8176              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8177              		.loc 1 836 39 is_stmt 0 view .LVU2794
 8178 335c 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8178      18
 8179              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8180              		.loc 1 836 29 view .LVU2795
 8181 3361 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 8181      18
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8182              		.loc 1 835 48 is_stmt 1 view .LVU2796
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8183              		.loc 1 835 11 view .LVU2797
 836:sieve_extend.c **** 
 8184              		.loc 1 836 9 view .LVU2798
 8185              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8186              		.loc 1 836 39 is_stmt 0 view .LVU2799
 8187 3366 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8187      20
 8188              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8189              		.loc 1 836 29 view .LVU2800
 8190 336b 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 8190      20
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccH5HMHD.s 			page 228


 8191              		.loc 1 835 48 is_stmt 1 view .LVU2801
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8192              		.loc 1 835 11 view .LVU2802
 836:sieve_extend.c **** 
 8193              		.loc 1 836 9 view .LVU2803
 8194              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8195              		.loc 1 836 39 is_stmt 0 view .LVU2804
 8196 3370 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8196      28
 8197              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8198              		.loc 1 836 29 view .LVU2805
 8199 3375 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 8199      28
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8200              		.loc 1 835 48 is_stmt 1 view .LVU2806
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8201              		.loc 1 835 11 view .LVU2807
 836:sieve_extend.c **** 
 8202              		.loc 1 836 9 view .LVU2808
 8203              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8204              		.loc 1 836 39 is_stmt 0 view .LVU2809
 8205 337a 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8205      30
 8206              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8207              		.loc 1 836 29 view .LVU2810
 8208 337f 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8208      30
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8209              		.loc 1 835 48 is_stmt 1 view .LVU2811
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8210              		.loc 1 835 11 view .LVU2812
 836:sieve_extend.c **** 
 8211              		.loc 1 836 9 view .LVU2813
 8212              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8213              		.loc 1 836 39 is_stmt 0 view .LVU2814
 8214 3384 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8214      38
 8215 3389 4983C440 		add	r12, 64	# ivtmp.420,
 8216              	# sieve_extend.c:836:         bitarray[copy_word] = bitarray[source_word];
 836:sieve_extend.c **** 
 8217              		.loc 1 836 29 view .LVU2815
 8218 338d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8218      F8
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8219              		.loc 1 835 48 is_stmt 1 view .LVU2816
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8220              		.loc 1 835 11 view .LVU2817
 8221              	# sieve_extend.c:835:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8222              		.loc 1 835 5 is_stmt 0 view .LVU2818
 8223 3392 4939DC   		cmp	r12, rbx	# ivtmp.420, _701
 8224 3395 75A9     		jne	.L593	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 229


 8225 3397 EB90     		jmp	.L830	#
 8226              	.LVL371:
 8227 3399 0F1F8000 		.p2align 4,,7
 8227      000000
 8228              		.p2align 3
 8229              	.L570:
 835:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8230              		.loc 1 835 5 view .LVU2819
 8231 33a0 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8231      30
 8232 33a5 4989C1   		mov	r9, rax	# tmp823, ivtmp.434
 8233 33a8 49F7D1   		not	r9	# tmp823
 8234 33ab 4801D9   		add	rcx, rbx	# ivtmp.465, bitarray
 8235              	.LBB399:
 8236              	.LBB380:
 8237              	.LBB369:
 8238              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8239              		.loc 1 660 63 view .LVU2820
 8240 33ae 4489FE   		mov	esi, r15d	# tmp1324, _18
 8241              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8242              		.loc 1 660 42 view .LVU2821
 8243 33b1 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 8243      11
 8244 33b6 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 8245              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8246              		.loc 1 660 63 view .LVU2822
 8247 33b9 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 8248              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8249              		.loc 1 659 19 view .LVU2823
 8250 33bc 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8251              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8252              		.loc 1 660 63 view .LVU2824
 8253 33c0 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 8253      F8
 8254 33c5 49D1E9   		shr	r9	# tmp822
 8255              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8256              		.loc 1 660 52 view .LVU2825
 8257 33c8 4809FA   		or	rdx, rdi	# tmp684, tmp683
 8258              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8259              		.loc 1 663 19 view .LVU2826
 8260 33cb 488D7802 		lea	rdi, 2[rax]	# copy_word,
 8261 33cf 49F7D3   		not	r11	# tmp794
 8262              	.LVL372:
 8263              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8264              		.loc 1 660 52 view .LVU2827
 8265 33d2 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8266 33d6 4183E103 		and	r9d, 3	# tmp825,
 8267              	.LVL373:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccH5HMHD.s 			page 230


 8268              		.loc 1 658 9 is_stmt 1 view .LVU2828
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8269              		.loc 1 659 9 view .LVU2829
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8270              		.loc 1 660 9 view .LVU2830
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8271              		.loc 1 661 9 view .LVU2831
 662:sieve_extend.c ****         copy_word += 2;
 8272              		.loc 1 662 9 view .LVU2832
 8273              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8274              		.loc 1 662 42 is_stmt 0 view .LVU2833
 8275 33da C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 8275      C0
 8276              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8277              		.loc 1 662 63 view .LVU2834
 8278 33df C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 8278      5110
 8279              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8280              		.loc 1 662 52 view .LVU2835
 8281 33e5 4909D0   		or	r8, rdx	# tmp688, tmp685
 8282              	.LBE369:
 8283              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8284              		.loc 1 657 11 view .LVU2836
 8285 33e8 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8286 33eb 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8287 33ef 488D5110 		lea	rdx, 16[rcx]	# ivtmp.465,
 8288              	.LBB370:
 8289              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8290              		.loc 1 662 52 view .LVU2837
 8291 33f3 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8291      08
 8292              	.LVL374:
 663:sieve_extend.c ****         source_word += 2;
 8293              		.loc 1 663 9 is_stmt 1 view .LVU2838
 664:sieve_extend.c ****         distance += 2;
 8294              		.loc 1 664 9 view .LVU2839
 665:sieve_extend.c ****     }
 8295              		.loc 1 665 9 view .LVU2840
 665:sieve_extend.c ****     }
 8296              		.loc 1 665 9 is_stmt 0 view .LVU2841
 8297              	.LBE370:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8298              		.loc 1 657 11 is_stmt 1 view .LVU2842
 8299 33f8 0F8644F6 		jbe	.L574	#,
 8299      FFFF
 8300 33fe 4D85C9   		test	r9, r9	# tmp825
 8301 3401 0F848B00 		je	.L824	#,
 8301      0000
 8302 3407 4983F901 		cmp	r9, 1	# tmp825,
 8303 340b 7440     		je	.L758	#,
 8304 340d 4983F902 		cmp	r9, 2	# tmp825,
 8305 3411 0F857403 		jne	.L833	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 231


 8305      0000
 8306              	.LVL375:
 8307              	.L759:
 8308              	.LBB371:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8309              		.loc 1 658 9 view .LVU2843
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8310              		.loc 1 659 9 view .LVU2844
 8311              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8312              		.loc 1 659 19 is_stmt 0 view .LVU2845
 8313 3417 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8314              		.loc 1 660 9 is_stmt 1 view .LVU2846
 8315              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8316              		.loc 1 660 42 is_stmt 0 view .LVU2847
 8317 341b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 8317      0A
 8318              	.LVL376:
 8319              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8320              		.loc 1 660 63 view .LVU2848
 8321 3420 4589F8   		mov	r8d, r15d	# tmp1427, _18
 8322 3423 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 8322      D6
 8323              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8324              		.loc 1 660 52 view .LVU2849
 8325 3428 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 8326              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8327              		.loc 1 660 63 view .LVU2850
 8328 342b 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8329              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8330              		.loc 1 662 42 view .LVU2851
 8331 342e C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 8331      F6
 8332              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8333              		.loc 1 660 52 view .LVU2852
 8334 3433 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8335              	.LVL377:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8336              		.loc 1 661 9 is_stmt 1 view .LVU2853
 662:sieve_extend.c ****         copy_word += 2;
 8337              		.loc 1 662 9 view .LVU2854
 8338              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8339              		.loc 1 662 63 is_stmt 0 view .LVU2855
 8340 3437 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 8340      4A10
 8341              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8342              		.loc 1 662 52 view .LVU2856
 8343 343d 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
GAS LISTING /tmp/ccH5HMHD.s 			page 232


 8344 3440 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8344      08
 8345              	.LVL378:
 663:sieve_extend.c ****         source_word += 2;
 8346              		.loc 1 663 9 is_stmt 1 view .LVU2857
 8347 3445 4883C210 		add	rdx, 16	# ivtmp.465,
 8348              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8349              		.loc 1 663 19 is_stmt 0 view .LVU2858
 8350 3449 4883C702 		add	rdi, 2	# copy_word,
 664:sieve_extend.c ****         distance += 2;
 8351              		.loc 1 664 9 is_stmt 1 view .LVU2859
 665:sieve_extend.c ****     }
 8352              		.loc 1 665 9 view .LVU2860
 665:sieve_extend.c ****     }
 8353              		.loc 1 665 9 is_stmt 0 view .LVU2861
 8354              	.LBE371:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8355              		.loc 1 657 11 is_stmt 1 view .LVU2862
 8356              	.LVL379:
 8357              	.L758:
 8358              	.LBB372:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8359              		.loc 1 658 9 view .LVU2863
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8360              		.loc 1 659 9 view .LVU2864
 8361              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8362              		.loc 1 659 19 is_stmt 0 view .LVU2865
 8363 344d 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8364              		.loc 1 660 9 is_stmt 1 view .LVU2866
 8365              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8366              		.loc 1 660 42 is_stmt 0 view .LVU2867
 8367 3451 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 8367      0A
 8368              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8369              		.loc 1 660 63 view .LVU2868
 8370 3456 4589F8   		mov	r8d, r15d	# tmp1429, _18
 8371 3459 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 8371      D1
 8372              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8373              		.loc 1 660 52 view .LVU2869
 8374 345e 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 8375              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8376              		.loc 1 660 63 view .LVU2870
 8377 3461 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8378              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8379              		.loc 1 662 42 view .LVU2871
 8380 3464 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 8380      F1
 8381              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccH5HMHD.s 			page 233


 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8382              		.loc 1 660 52 view .LVU2872
 8383 3469 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8384              	.LVL380:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8385              		.loc 1 661 9 is_stmt 1 view .LVU2873
 662:sieve_extend.c ****         copy_word += 2;
 8386              		.loc 1 662 9 view .LVU2874
 8387              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8388              		.loc 1 662 63 is_stmt 0 view .LVU2875
 8389 346d C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 8389      4A10
 8390              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8391              		.loc 1 662 52 view .LVU2876
 8392 3473 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 8393 3476 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8393      08
 8394              	.LVL381:
 663:sieve_extend.c ****         source_word += 2;
 8395              		.loc 1 663 9 is_stmt 1 view .LVU2877
 8396              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8397              		.loc 1 663 19 is_stmt 0 view .LVU2878
 8398 347b 4883C702 		add	rdi, 2	# copy_word,
 664:sieve_extend.c ****         distance += 2;
 8399              		.loc 1 664 9 is_stmt 1 view .LVU2879
 665:sieve_extend.c ****     }
 8400              		.loc 1 665 9 view .LVU2880
 8401 347f 4883C210 		add	rdx, 16	# ivtmp.465,
 8402              	.LBE372:
 8403              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8404              		.loc 1 657 11 is_stmt 0 view .LVU2881
 8405 3483 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8405      30
 8406 3488 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8407              		.loc 1 657 11 is_stmt 1 view .LVU2882
 8408 348c 0F86B0F5 		jbe	.L574	#,
 8408      FFFF
 8409              	.LVL382:
 8410              	.L824:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8411              		.loc 1 657 11 is_stmt 0 view .LVU2883
 8412 3492 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 8413              	.L573:
 8414              	.LVL383:
 8415              	.LBB373:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8416              		.loc 1 658 9 is_stmt 1 view .LVU2884
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8417              		.loc 1 659 9 view .LVU2885
 8418              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8419              		.loc 1 659 19 is_stmt 0 view .LVU2886
GAS LISTING /tmp/ccH5HMHD.s 			page 234


 8420 3495 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8421              		.loc 1 660 9 is_stmt 1 view .LVU2887
 8422              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8423              		.loc 1 660 42 is_stmt 0 view .LVU2888
 8424 3499 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 8424      02
 8425              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8426              		.loc 1 660 63 view .LVU2889
 8427 349e C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 8427      F1
 8428              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8429              		.loc 1 660 52 view .LVU2890
 8430 34a3 4D09F0   		or	r8, r14	# tmp899, tmp898
 8431              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8432              		.loc 1 662 42 view .LVU2891
 8433 34a6 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 8433      D1
 8434              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8435              		.loc 1 660 52 view .LVU2892
 8436 34ab 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8437              	.LVL384:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8438              		.loc 1 661 9 is_stmt 1 view .LVU2893
 662:sieve_extend.c ****         copy_word += 2;
 8439              		.loc 1 662 9 view .LVU2894
 8440              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8441              		.loc 1 662 63 is_stmt 0 view .LVU2895
 8442 34af C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 8442      7210
 8443              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8444              		.loc 1 662 52 view .LVU2896
 8445 34b5 4C09D6   		or	rsi, r10	# tmp903, tmp902
 8446 34b8 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8446      08
 8447              	.LVL385:
 663:sieve_extend.c ****         source_word += 2;
 8448              		.loc 1 663 9 is_stmt 1 view .LVU2897
 8449              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8450              		.loc 1 663 19 is_stmt 0 view .LVU2898
 8451 34bd 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 664:sieve_extend.c ****         distance += 2;
 8452              		.loc 1 664 9 is_stmt 1 view .LVU2899
 665:sieve_extend.c ****     }
 8453              		.loc 1 665 9 view .LVU2900
 665:sieve_extend.c ****     }
 8454              		.loc 1 665 9 is_stmt 0 view .LVU2901
 8455              	.LBE373:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccH5HMHD.s 			page 235


 8456              		.loc 1 657 11 is_stmt 1 view .LVU2902
 8457              	.LBB374:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8458              		.loc 1 658 9 view .LVU2903
 8459              	.LVL386:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8460              		.loc 1 659 9 view .LVU2904
 8461              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8462              		.loc 1 659 19 is_stmt 0 view .LVU2905
 8463 34c1 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8464              		.loc 1 660 9 is_stmt 1 view .LVU2906
 8465              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8466              		.loc 1 660 42 is_stmt 0 view .LVU2907
 8467 34c5 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 8467      7210
 8468              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8469              		.loc 1 660 63 view .LVU2908
 8470 34cb C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 8470      F0
 8471              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8472              		.loc 1 660 52 view .LVU2909
 8473 34d0 4C09F6   		or	rsi, r14	# tmp911, tmp910
 8474 34d3 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8475              	.LVL387:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8476              		.loc 1 661 9 is_stmt 1 view .LVU2910
 662:sieve_extend.c ****         copy_word += 2;
 8477              		.loc 1 662 9 view .LVU2911
 8478              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8479              		.loc 1 662 42 is_stmt 0 view .LVU2912
 8480 34d7 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 8480      C0
 8481              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8482              		.loc 1 662 63 view .LVU2913
 8483 34dc 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8484 34e0 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 8484      F2
 8485              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8486              		.loc 1 662 52 view .LVU2914
 8487 34e5 4909F0   		or	r8, rsi	# tmp915, tmp913
 8488 34e8 4883C240 		add	rdx, 64	# ivtmp.465,
 8489 34ec 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8489      08
 8490              	.LVL388:
 663:sieve_extend.c ****         source_word += 2;
 8491              		.loc 1 663 9 is_stmt 1 view .LVU2915
 8492              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8493              		.loc 1 663 19 is_stmt 0 view .LVU2916
GAS LISTING /tmp/ccH5HMHD.s 			page 236


 8494 34f1 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 664:sieve_extend.c ****         distance += 2;
 8495              		.loc 1 664 9 is_stmt 1 view .LVU2917
 665:sieve_extend.c ****     }
 8496              		.loc 1 665 9 view .LVU2918
 665:sieve_extend.c ****     }
 8497              		.loc 1 665 9 is_stmt 0 view .LVU2919
 8498              	.LBE374:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8499              		.loc 1 657 11 is_stmt 1 view .LVU2920
 8500              	.LBB375:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8501              		.loc 1 658 9 view .LVU2921
 8502              	.LVL389:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8503              		.loc 1 659 9 view .LVU2922
 8504              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8505              		.loc 1 659 19 is_stmt 0 view .LVU2923
 8506 34f5 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8507              		.loc 1 660 9 is_stmt 1 view .LVU2924
 8508              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8509              		.loc 1 660 42 is_stmt 0 view .LVU2925
 8510 34f9 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 8510      72E0
 8511              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8512              		.loc 1 660 63 view .LVU2926
 8513 34ff C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 8513      F2
 8514              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8515              		.loc 1 660 52 view .LVU2927
 8516 3504 4C09F6   		or	rsi, r14	# tmp923, tmp922
 8517 3507 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8518              	.LVL390:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8519              		.loc 1 661 9 is_stmt 1 view .LVU2928
 662:sieve_extend.c ****         copy_word += 2;
 8520              		.loc 1 662 9 view .LVU2929
 8521              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8522              		.loc 1 662 42 is_stmt 0 view .LVU2930
 8523 350b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 8523      D2
 8524              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8525              		.loc 1 662 63 view .LVU2931
 8526 3510 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8527 3514 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 8527      F0
 8528              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8529              		.loc 1 662 52 view .LVU2932
 8530 3519 4909F2   		or	r10, rsi	# tmp927, tmp925
GAS LISTING /tmp/ccH5HMHD.s 			page 237


 8531 351c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8531      08
 8532              	.LVL391:
 663:sieve_extend.c ****         source_word += 2;
 8533              		.loc 1 663 9 is_stmt 1 view .LVU2933
 8534              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8535              		.loc 1 663 19 is_stmt 0 view .LVU2934
 8536 3521 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 664:sieve_extend.c ****         distance += 2;
 8537              		.loc 1 664 9 is_stmt 1 view .LVU2935
 665:sieve_extend.c ****     }
 8538              		.loc 1 665 9 view .LVU2936
 665:sieve_extend.c ****     }
 8539              		.loc 1 665 9 is_stmt 0 view .LVU2937
 8540              	.LBE375:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8541              		.loc 1 657 11 is_stmt 1 view .LVU2938
 8542              	.LBB376:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8543              		.loc 1 658 9 view .LVU2939
 8544              	.LVL392:
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8545              		.loc 1 659 9 view .LVU2940
 8546              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8547              		.loc 1 659 19 is_stmt 0 view .LVU2941
 8548 3525 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8549              		.loc 1 660 9 is_stmt 1 view .LVU2942
 8550              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8551              		.loc 1 660 42 is_stmt 0 view .LVU2943
 8552 3529 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 8552      72F0
 8553              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8554              		.loc 1 660 63 view .LVU2944
 8555 352f C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 8555      F0
 8556              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8557              		.loc 1 660 52 view .LVU2945
 8558 3534 4C09F6   		or	rsi, r14	# tmp935, tmp934
 8559 3537 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8560              	.LVL393:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8561              		.loc 1 661 9 is_stmt 1 view .LVU2946
 662:sieve_extend.c ****         copy_word += 2;
 8562              		.loc 1 662 9 view .LVU2947
 8563              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8564              		.loc 1 663 19 is_stmt 0 view .LVU2948
 8565 353b 4883C708 		add	rdi, 8	# copy_word,
 8566              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8567              		.loc 1 662 42 view .LVU2949
GAS LISTING /tmp/ccH5HMHD.s 			page 238


 8568 353f C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 8568      C0
 8569              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8570              		.loc 1 662 63 view .LVU2950
 8571 3544 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8572 3547 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 8572      F2
 8573              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8574              		.loc 1 662 52 view .LVU2951
 8575 354c 4909F0   		or	r8, rsi	# tmp939, tmp937
 8576              	.LBE376:
 8577              	# sieve_extend.c:657:     while (copy_word < fast_loop_stop_word) {
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8578              		.loc 1 657 11 view .LVU2952
 8579 354f 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8579      30
 8580 3554 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8581              	.LBB377:
 8582              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8583              		.loc 1 662 52 view .LVU2953
 8584 3558 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8584      08
 8585              	.LVL394:
 663:sieve_extend.c ****         source_word += 2;
 8586              		.loc 1 663 9 is_stmt 1 view .LVU2954
 664:sieve_extend.c ****         distance += 2;
 8587              		.loc 1 664 9 view .LVU2955
 665:sieve_extend.c ****     }
 8588              		.loc 1 665 9 view .LVU2956
 665:sieve_extend.c ****     }
 8589              		.loc 1 665 9 is_stmt 0 view .LVU2957
 8590              	.LBE377:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8591              		.loc 1 657 11 is_stmt 1 view .LVU2958
 8592 355d 0F8732FF 		ja	.L573	#,
 8592      FFFF
 8593 3563 E9DAF4FF 		jmp	.L574	#
 8593      FF
 8594              	.LVL395:
 8595              		.p2align 4,,7
 8596              		.p2align 3
 8597              	.L595:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8598              		.loc 1 657 11 is_stmt 0 view .LVU2959
 8599              	.LBE380:
 8600              	.LBE399:
 8601              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8602              		.loc 1 821 5 view .LVU2960
 8603 3568 4889C6   		mov	rsi, rax	# copy_word, ivtmp.434
 8604              	# sieve_extend.c:815:     source_word += distance;
 815:sieve_extend.c ****     copy_word += distance;
 8605              		.loc 1 815 17 view .LVU2961
 8606 356b 4C89D9   		mov	rcx, r11	# source_word, _183
GAS LISTING /tmp/ccH5HMHD.s 			page 239


 8607 356e 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 8608 3572 E9CDF5FF 		jmp	.L577	#
 8608      FF
 8609              		.p2align 4,,7
 8610 3577 90       		.p2align 3
 8611              	.L576:
 815:sieve_extend.c ****     copy_word += distance;
 8612              		.loc 1 815 17 view .LVU2962
 8613 3578 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 8613      58
 8614 357d 4801DA   		add	rdx, rbx	# ivtmp.442, bitarray
 8615 3580 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 8615      40
 8616              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8617              		.loc 1 822 29 view .LVU2963
 8618 3585 4829F8   		sub	rax, rdi	# tmp753, _183
 8619 3588 4901FA   		add	r10, rdi	# tmp749, _183
 8620 358b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 8620      08
 8621 3590 4929F1   		sub	r9, rsi	# tmp752, _220
 8622 3593 4C89CE   		mov	rsi, r9	# _729, tmp752
 8623 3596 4929D1   		sub	r9, rdx	# tmp811, ivtmp.442
 8624 3599 4983E908 		sub	r9, 8	# tmp812,
 8625 359d 49C1E903 		shr	r9, 3	# tmp810,
 8626 35a1 4983C101 		add	r9, 1	# tmp813,
 8627 35a5 4183E107 		and	r9d, 7	# tmp814,
 8628 35a9 0F84F900 		je	.L821	#,
 8628      0000
 8629 35af 4983F901 		cmp	r9, 1	# tmp814,
 8630 35b3 0F84CA00 		je	.L733	#,
 8630      0000
 8631 35b9 4983F902 		cmp	r9, 2	# tmp814,
 8632 35bd 0F84A500 		je	.L734	#,
 8632      0000
 8633 35c3 4983F903 		cmp	r9, 3	# tmp814,
 8634 35c7 0F848000 		je	.L735	#,
 8634      0000
 8635 35cd 4983F904 		cmp	r9, 4	# tmp814,
 8636 35d1 745E     		je	.L736	#,
 8637 35d3 4983F905 		cmp	r9, 5	# tmp814,
 8638 35d7 743D     		je	.L737	#,
 8639 35d9 4983F906 		cmp	r9, 6	# tmp814,
 8640 35dd 741C     		je	.L738	#,
 822:sieve_extend.c ****     }
 8641              		.loc 1 822 9 is_stmt 1 view .LVU2964
 8642              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8643              		.loc 1 822 56 is_stmt 0 view .LVU2965
 8644 35df C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 8644      02
 8645              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8646              		.loc 1 822 94 view .LVU2966
 8647 35e4 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 8647      2448
 8648 35ea C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
GAS LISTING /tmp/ccH5HMHD.s 			page 240


 8648      7208
 8649              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8650              		.loc 1 822 66 view .LVU2967
 8651 35f0 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 8652 35f3 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8653              		.loc 1 821 43 is_stmt 1 view .LVU2968
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8654              		.loc 1 821 11 view .LVU2969
 8655 35f7 4883C208 		add	rdx, 8	# ivtmp.442,
 8656              	.L738:
 822:sieve_extend.c ****     }
 8657              		.loc 1 822 9 view .LVU2970
 8658              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8659              		.loc 1 822 56 is_stmt 0 view .LVU2971
 8660 35fb C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 8660      3A
 8661              	.LVL396:
 8662              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8663              		.loc 1 822 94 view .LVU2972
 8664 3600 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 8664      48
 8665 3605 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 8665      6A08
 8666              	.LVL397:
 8667              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8668              		.loc 1 822 66 view .LVU2973
 8669 360b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 8670 360e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8671              		.loc 1 821 43 is_stmt 1 view .LVU2974
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8672              		.loc 1 821 11 view .LVU2975
 8673 3612 4883C208 		add	rdx, 8	# ivtmp.442,
 8674              	.L737:
 822:sieve_extend.c ****     }
 8675              		.loc 1 822 9 view .LVU2976
 8676              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8677              		.loc 1 822 56 is_stmt 0 view .LVU2977
 8678 3616 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 8678      12
 8679              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8680              		.loc 1 822 94 view .LVU2978
 8681 361b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 8681      48
 8682 3620 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 8682      4A08
 8683              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8684              		.loc 1 822 66 view .LVU2979
 8685 3626 4D09CA   		or	r10, r9	# tmp1103, tmp1102
GAS LISTING /tmp/ccH5HMHD.s 			page 241


 8686 3629 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8687              		.loc 1 821 43 is_stmt 1 view .LVU2980
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8688              		.loc 1 821 11 view .LVU2981
 8689 362d 4883C208 		add	rdx, 8	# ivtmp.442,
 8690              	.L736:
 822:sieve_extend.c ****     }
 8691              		.loc 1 822 9 view .LVU2982
 8692              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8693              		.loc 1 822 56 is_stmt 0 view .LVU2983
 8694 3631 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 8694      02
 8695              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8696              		.loc 1 822 94 view .LVU2984
 8697 3636 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 8697      2448
 8698 363c C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 8698      7208
 8699              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8700              		.loc 1 822 66 view .LVU2985
 8701 3642 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 8702 3645 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8703              		.loc 1 821 43 is_stmt 1 view .LVU2986
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8704              		.loc 1 821 11 view .LVU2987
 8705 3649 4883C208 		add	rdx, 8	# ivtmp.442,
 8706              	.L735:
 822:sieve_extend.c ****     }
 8707              		.loc 1 822 9 view .LVU2988
 8708              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8709              		.loc 1 822 56 is_stmt 0 view .LVU2989
 8710 364d C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 8710      3A
 8711              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8712              		.loc 1 822 94 view .LVU2990
 8713 3652 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 8713      48
 8714 3657 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 8714      6A08
 8715              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8716              		.loc 1 822 66 view .LVU2991
 8717 365d 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 8718 3660 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8719              		.loc 1 821 43 is_stmt 1 view .LVU2992
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8720              		.loc 1 821 11 view .LVU2993
 8721 3664 4883C208 		add	rdx, 8	# ivtmp.442,
 8722              	.L734:
GAS LISTING /tmp/ccH5HMHD.s 			page 242


 822:sieve_extend.c ****     }
 8723              		.loc 1 822 9 view .LVU2994
 8724              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8725              		.loc 1 822 56 is_stmt 0 view .LVU2995
 8726 3668 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 8726      12
 8727              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8728              		.loc 1 822 94 view .LVU2996
 8729 366d 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 8729      48
 8730 3672 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 8730      4A08
 8731              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8732              		.loc 1 822 66 view .LVU2997
 8733 3678 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 8734 367b 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8735              		.loc 1 821 43 is_stmt 1 view .LVU2998
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8736              		.loc 1 821 11 view .LVU2999
 8737 367f 4883C208 		add	rdx, 8	# ivtmp.442,
 8738              	.L733:
 822:sieve_extend.c ****     }
 8739              		.loc 1 822 9 view .LVU3000
 8740              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8741              		.loc 1 822 56 is_stmt 0 view .LVU3001
 8742 3683 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 8742      02
 8743              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8744              		.loc 1 822 94 view .LVU3002
 8745 3688 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 8745      2448
 8746 368e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 8746      7208
 8747              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8748              		.loc 1 822 66 view .LVU3003
 8749 3694 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 8750 3697 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8751              		.loc 1 821 43 is_stmt 1 view .LVU3004
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8752              		.loc 1 821 11 view .LVU3005
 8753 369b 4883C208 		add	rdx, 8	# ivtmp.442,
 8754              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8755              		.loc 1 821 5 is_stmt 0 view .LVU3006
 8756 369f 4839F2   		cmp	rdx, rsi	# ivtmp.442, _729
 8757 36a2 0F84C600 		je	.L807	#,
 8757      0000
 8758              	.L821:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccH5HMHD.s 			page 243


 8759              		.loc 1 821 5 view .LVU3007
 8760 36a8 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 8760      48
 8761              	.L581:
 822:sieve_extend.c ****     }
 8762              		.loc 1 822 9 is_stmt 1 view .LVU3008
 8763              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8764              		.loc 1 822 94 is_stmt 0 view .LVU3009
 8765 36ad C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 8765      6A08
 8766              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8767              		.loc 1 822 56 view .LVU3010
 8768 36b3 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 8768      0A
 8769              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8770              		.loc 1 822 66 view .LVU3011
 8771 36b8 4C09E9   		or	rcx, r13	# tmp758, tmp756
 8772 36bb 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 8773 36bf 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8774              		.loc 1 821 43 is_stmt 1 view .LVU3012
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8775              		.loc 1 821 11 view .LVU3013
 822:sieve_extend.c ****     }
 8776              		.loc 1 822 9 view .LVU3014
 8777              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8778              		.loc 1 822 94 is_stmt 0 view .LVU3015
 8779 36c3 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 8779      4A08
 8780              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8781              		.loc 1 822 56 view .LVU3016
 8782 36c9 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 8782      7A08
 8783              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8784              		.loc 1 822 66 view .LVU3017
 8785 36cf 4C09CF   		or	rdi, r9	# tmp989, tmp988
 8786 36d2 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.442,
 8787 36d6 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.442,
 8788 36da 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8789              		.loc 1 821 43 is_stmt 1 view .LVU3018
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8790              		.loc 1 821 11 view .LVU3019
 822:sieve_extend.c ****     }
 8791              		.loc 1 822 9 view .LVU3020
 8792              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8793              		.loc 1 822 56 is_stmt 0 view .LVU3021
 8794 36de C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 8794      7210
 8795              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccH5HMHD.s 			page 244


 822:sieve_extend.c ****     }
 8796              		.loc 1 822 94 view .LVU3022
 8797 36e4 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 8797      4308
 8798              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8799              		.loc 1 822 66 view .LVU3023
 8800 36ea 4D09C6   		or	r14, r8	# tmp995, tmp994
 8801 36ed 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8802              		.loc 1 821 43 is_stmt 1 view .LVU3024
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8803              		.loc 1 821 11 view .LVU3025
 822:sieve_extend.c ****     }
 8804              		.loc 1 822 9 view .LVU3026
 8805              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8806              		.loc 1 822 56 is_stmt 0 view .LVU3027
 8807 36f1 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 8807      6A18
 8808              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8809              		.loc 1 822 94 view .LVU3028
 8810 36f7 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 8810      5108
 8811              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8812              		.loc 1 822 66 view .LVU3029
 8813 36fd 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 8814 3700 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.442,
 8815 3704 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.442,
 8816 3708 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8817              		.loc 1 821 43 is_stmt 1 view .LVU3030
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8818              		.loc 1 821 11 view .LVU3031
 822:sieve_extend.c ****     }
 8819              		.loc 1 822 9 view .LVU3032
 8820              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8821              		.loc 1 822 94 is_stmt 0 view .LVU3033
 8822 370c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 8822      5908
 8823              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8824              		.loc 1 822 56 view .LVU3034
 8825 3712 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 8825      7A20
 8826              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8827              		.loc 1 822 66 view .LVU3035
 8828 3718 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 8829 371b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8830              		.loc 1 821 43 is_stmt 1 view .LVU3036
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8831              		.loc 1 821 11 view .LVU3037
GAS LISTING /tmp/ccH5HMHD.s 			page 245


 822:sieve_extend.c ****     }
 8832              		.loc 1 822 9 view .LVU3038
 8833              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8834              		.loc 1 822 56 is_stmt 0 view .LVU3039
 8835 371f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 8835      4A28
 8836              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8837              		.loc 1 822 94 view .LVU3040
 8838 3725 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 8838      4608
 8839              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8840              		.loc 1 822 66 view .LVU3041
 8841 372b 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 8842 372e 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.442,
 8843 3732 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.442,
 8844 3736 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8845              		.loc 1 821 43 is_stmt 1 view .LVU3042
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8846              		.loc 1 821 11 view .LVU3043
 822:sieve_extend.c ****     }
 8847              		.loc 1 822 9 view .LVU3044
 8848              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8849              		.loc 1 822 56 is_stmt 0 view .LVU3045
 8850 373a C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 8850      5230
 8851              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8852              		.loc 1 822 94 view .LVU3046
 8853 3740 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 8853      4D08
 8854              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8855              		.loc 1 822 66 view .LVU3047
 8856 3746 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 8857 3749 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 8857      00
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8858              		.loc 1 821 43 is_stmt 1 view .LVU3048
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8859              		.loc 1 821 11 view .LVU3049
 822:sieve_extend.c ****     }
 8860              		.loc 1 822 9 view .LVU3050
 8861 374e 4883C240 		add	rdx, 64	# ivtmp.442,
 8862              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8863              		.loc 1 822 56 is_stmt 0 view .LVU3051
 8864 3752 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 8864      7AF8
 8865              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8866              		.loc 1 822 94 view .LVU3052
 8867 3758 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
GAS LISTING /tmp/ccH5HMHD.s 			page 246


 8867      7308
 8868              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8869              		.loc 1 822 66 view .LVU3053
 8870 375e 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 8871              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8872              		.loc 1 821 5 view .LVU3054
 8873 3761 4839F2   		cmp	rdx, rsi	# ivtmp.442, _729
 8874              	# sieve_extend.c:822:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 822:sieve_extend.c ****     }
 8875              		.loc 1 822 66 view .LVU3055
 8876 3764 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8877              		.loc 1 821 43 is_stmt 1 view .LVU3056
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8878              		.loc 1 821 11 view .LVU3057
 8879              	# sieve_extend.c:821:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8880              		.loc 1 821 5 is_stmt 0 view .LVU3058
 8881 3768 0F853FFF 		jne	.L581	#,
 8881      FFFF
 8882              	.L807:
 821:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8883              		.loc 1 821 5 view .LVU3059
 8884 376e 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 8884      40
 8885 3773 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.434,
 8886 3777 E9E9F6FF 		jmp	.L582	#
 8886      FF
 8887              	.LVL398:
 8888 377c 0F1F4000 		.p2align 4,,7
 8889              		.p2align 3
 8890              	.L596:
 8891              	# sieve_extend.c:815:     source_word += distance;
 815:sieve_extend.c ****     copy_word += distance;
 8892              		.loc 1 815 17 view .LVU3060
 8893 3780 4889C6   		mov	rsi, rax	# copy_word, ivtmp.434
 8894              	# sieve_extend.c:827:     source_word = copy_word - size; // recalibrate
 827:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8895              		.loc 1 827 17 view .LVU3061
 8896 3783 4D89EE   		mov	r14, r13	# source_word, source_word
 8897 3786 E906F9FF 		jmp	.L588	#
 8897      FF
 8898              	.LVL399:
 8899              	.L833:
 8900              	.LBB400:
 8901              	.LBB381:
 8902              	.LBB378:
 658:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8903              		.loc 1 658 9 is_stmt 1 view .LVU3062
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8904              		.loc 1 659 9 view .LVU3063
 8905              	# sieve_extend.c:659:         bitword_t source1 = bitarray[source_word+1];
 659:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8906              		.loc 1 659 19 is_stmt 0 view .LVU3064
 8907 378b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
GAS LISTING /tmp/ccH5HMHD.s 			page 247


 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8908              		.loc 1 660 9 is_stmt 1 view .LVU3065
 8909              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8910              		.loc 1 660 42 is_stmt 0 view .LVU3066
 8911 378f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 8911      32
 8912              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8913              		.loc 1 660 63 view .LVU3067
 8914 3794 4589FA   		mov	r10d, r15d	# tmp1425, _18
 8915 3797 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 8915      C1
 8916              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8917              		.loc 1 660 52 view .LVU3068
 8918 379c 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 8919              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8920              		.loc 1 660 63 view .LVU3069
 8921 379f 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8922              	# sieve_extend.c:660:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 660:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8923              		.loc 1 660 52 view .LVU3070
 8924 37a2 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8925              	.LVL400:
 661:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8926              		.loc 1 661 9 is_stmt 1 view .LVU3071
 662:sieve_extend.c ****         copy_word += 2;
 8927              		.loc 1 662 9 view .LVU3072
 8928              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8929              		.loc 1 662 42 is_stmt 0 view .LVU3073
 8930 37a6 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 8930      C9
 8931              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8932              		.loc 1 662 63 view .LVU3074
 8933 37ab 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8934 37af C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 8934      D2
 8935              	# sieve_extend.c:662:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 662:sieve_extend.c ****         copy_word += 2;
 8936              		.loc 1 662 52 view .LVU3075
 8937 37b4 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 8938 37b7 488D5120 		lea	rdx, 32[rcx]	# ivtmp.465,
 8939 37bb 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8939      08
 8940              	.LVL401:
 663:sieve_extend.c ****         source_word += 2;
 8941              		.loc 1 663 9 is_stmt 1 view .LVU3076
 8942              	# sieve_extend.c:663:         copy_word += 2;
 663:sieve_extend.c ****         source_word += 2;
 8943              		.loc 1 663 19 is_stmt 0 view .LVU3077
 8944 37c0 488D7804 		lea	rdi, 4[rax]	# copy_word,
 664:sieve_extend.c ****         distance += 2;
 8945              		.loc 1 664 9 is_stmt 1 view .LVU3078
GAS LISTING /tmp/ccH5HMHD.s 			page 248


 665:sieve_extend.c ****     }
 8946              		.loc 1 665 9 view .LVU3079
 665:sieve_extend.c ****     }
 8947              		.loc 1 665 9 is_stmt 0 view .LVU3080
 8948              	.LBE378:
 657:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8949              		.loc 1 657 11 is_stmt 1 view .LVU3081
 8950 37c4 E94EFCFF 		jmp	.L759	#
 8950      FF
 8951              	.LBE381:
 8952              	.LBE400:
 8953              		.cfi_endproc
 8954              	.LFE71:
 8956              		.section	.rodata.str1.1,"aMS",@progbits,1
 8957              	.LC4:
 8958 0000 25336A75 		.string	"%3ju "
 8958      2000
 8959              	.LC5:
 8960 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8960      6E642025 
 8960      6A752070 
 8960      72696D65 
 8960      7320756E 
 8961              		.text
 8962 37c9 0F1F8000 		.p2align 4
 8962      000000
 8964              	show_primes.isra.0:
 8965              	.LVL402:
 8966              	.LFB86:
 998:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8967              		.loc 1 998 13 view -0
 8968              		.cfi_startproc
 8969              	.LBB401:
1000:sieve_extend.c ****         primeCount++;
 8970              		.loc 1 1000 30 view .LVU3083
 8971              	.LBE401:
 8972              	# sieve_extend.c:998: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 998:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8973              		.loc 1 998 13 is_stmt 0 view .LVU3084
 8974 37d0 4157     		push	r15	#
 8975              		.cfi_def_cfa_offset 16
 8976              		.cfi_offset 15, -16
 8977 37d2 4156     		push	r14	#
 8978              		.cfi_def_cfa_offset 24
 8979              		.cfi_offset 14, -24
 8980 37d4 4155     		push	r13	#
 8981              		.cfi_def_cfa_offset 32
 8982              		.cfi_offset 13, -32
 8983 37d6 4154     		push	r12	#
 8984              		.cfi_def_cfa_offset 40
 8985              		.cfi_offset 12, -40
 8986 37d8 4989F4   		mov	r12, rsi	# ISRA.79, tmp168
 8987 37db 55       		push	rbp	#
 8988              		.cfi_def_cfa_offset 48
 8989              		.cfi_offset 6, -48
 8990 37dc 53       		push	rbx	#
 8991              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccH5HMHD.s 			page 249


 8992              		.cfi_offset 3, -56
 8993 37dd 488D6424 		lea	rsp, -8[rsp]	#,
 8993      F8
 8994              		.cfi_def_cfa_offset 64
 8995              	.LBB418:
 8996              	# sieve_extend.c:1000:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1000:sieve_extend.c ****         primeCount++;
 8997              		.loc 1 1000 44 view .LVU3085
 8998 37e2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.79_32(D)
 8999              	# sieve_extend.c:1000:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1000:sieve_extend.c ****         primeCount++;
 9000              		.loc 1 1000 5 view .LVU3086
 9001 37e5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 9002 37e9 0F867501 		jbe	.L841	#,
 9002      0000
 9003              	# sieve_extend.c:1002:         if (factor < maxFactor/2) {
1002:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9004              		.loc 1 1002 31 view .LVU3087
 9005 37ef 48D1EA   		shr	rdx	# maxFactor
 9006              	.LVL403:
1002:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9007              		.loc 1 1002 31 view .LVU3088
 9008 37f2 4989FD   		mov	r13, rdi	# ISRA.78, tmp167
 9009              	# sieve_extend.c:1000:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1000:sieve_extend.c ****         primeCount++;
 9010              		.loc 1 1000 20 view .LVU3089
 9011 37f5 BB010000 		mov	ebx, 1	# factor,
 9011      00
 9012              	# sieve_extend.c:1002:         if (factor < maxFactor/2) {
1002:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9013              		.loc 1 1002 31 view .LVU3090
 9014 37fa 4889D5   		mov	rbp, rdx	# _4, maxFactor
 9015              	.LBE418:
 9016              	# sieve_extend.c:999:     counter_t primeCount = 1;    // We already have 2
 999:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9017              		.loc 1 999 15 view .LVU3091
 9018 37fd 41BF0100 		mov	r15d, 1	# primeCount,
 9018      0000
 9019              	.LBB419:
 9020              	.LBB402:
 9021              	.LBB403:
 9022              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9023              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 250


  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
GAS LISTING /tmp/ccH5HMHD.s 			page 251


  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 9024              		.loc 3 107 10 view .LVU3092
 9025 3803 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 9025      CCCCCCCC 
 9025      CCCC
 9026              	.LVL404:
 9027 380d 0F1F00   		.p2align 4
 9028              		.p2align 3
 9029              	.L840:
 9030              		.loc 3 107 10 view .LVU3093
 9031              	.LBE403:
 9032              	.LBE402:
1001:sieve_extend.c ****         if (factor < maxFactor/2) {
 9033              		.loc 1 1001 9 is_stmt 1 view .LVU3094
 9034              	# sieve_extend.c:1001:         primeCount++;
1001:sieve_extend.c ****         if (factor < maxFactor/2) {
 9035              		.loc 1 1001 19 is_stmt 0 view .LVU3095
 9036 3810 4983C701 		add	r15, 1	# primeCount,
 9037              	.LVL405:
1002:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9038              		.loc 1 1002 9 is_stmt 1 view .LVU3096
 9039              	# sieve_extend.c:1002:         if (factor < maxFactor/2) {
GAS LISTING /tmp/ccH5HMHD.s 			page 252


1002:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9040              		.loc 1 1002 12 is_stmt 0 view .LVU3097
 9041 3814 4839DD   		cmp	rbp, rbx	# _4, factor
 9042 3817 0F87FB00 		ja	.L864	#,
 9042      0000
 9043              	.L836:
1000:sieve_extend.c ****         primeCount++;
 9044              		.loc 1 1000 52 is_stmt 1 view .LVU3098
 9045              	.LVL406:
 9046              	# sieve_extend.c:1000:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1000:sieve_extend.c ****         primeCount++;
 9047              		.loc 1 1000 61 is_stmt 0 view .LVU3099
 9048 381d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.78_33(D)
 9049 3821 4883C301 		add	rbx, 1	# factor,
 9050              	.LVL407:
 9051              	.L863:
 9052              	.LBB408:
 9053              	.LBI408:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9054              		.loc 1 121 25 is_stmt 1 view .LVU3100
 9055              	.LBB409:
 122:sieve_extend.c ****     return index;
 9056              		.loc 1 122 5 view .LVU3101
 122:sieve_extend.c ****     return index;
 9057              		.loc 1 122 11 view .LVU3102
 9058              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9059              		.loc 1 122 21 is_stmt 0 view .LVU3103
 9060 3825 4889D9   		mov	rcx, rbx	# tmp124, factor
 9061 3828 48C1E906 		shr	rcx, 6	# tmp124,
 9062              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9063              		.loc 1 122 12 view .LVU3104
 9064 382c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 9065              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9066              		.loc 1 122 11 view .LVU3105
 9067 3830 490FA3D9 		bt	r9, rbx	# *_39, factor
 9068 3834 0F83A600 		jnc	.L838	#,
 9068      0000
 122:sieve_extend.c ****     return index;
 9069              		.loc 1 122 58 is_stmt 1 view .LVU3106
 9070              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9071              		.loc 1 122 63 is_stmt 0 view .LVU3107
 9072 383a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 9073              	.LVL408:
 9074              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9075              		.loc 1 122 21 view .LVU3108
 9076 383e 4D89D3   		mov	r11, r10	# tmp129, factor
 9077              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9078              		.loc 1 122 63 view .LVU3109
 9079 3841 4C89D3   		mov	rbx, r10	# factor, tmp138
 122:sieve_extend.c ****     return index;
 9080              		.loc 1 122 11 is_stmt 1 view .LVU3110
GAS LISTING /tmp/ccH5HMHD.s 			page 253


 9081              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9082              		.loc 1 122 21 is_stmt 0 view .LVU3111
 9083 3844 49C1EB06 		shr	r11, 6	# tmp129,
 9084              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9085              		.loc 1 122 12 view .LVU3112
 9086 3848 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9087              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9088              		.loc 1 122 11 view .LVU3113
 9089 384c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 9090 3850 0F838A00 		jnc	.L838	#,
 9090      0000
 122:sieve_extend.c ****     return index;
 9091              		.loc 1 122 58 is_stmt 1 view .LVU3114
 9092              	.LVL409:
 9093              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9094              		.loc 1 122 63 is_stmt 0 view .LVU3115
 9095 3856 4883C301 		add	rbx, 1	# factor,
 9096              	.LVL410:
 122:sieve_extend.c ****     return index;
 9097              		.loc 1 122 11 is_stmt 1 view .LVU3116
 9098              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9099              		.loc 1 122 21 is_stmt 0 view .LVU3117
 9100 385a 4889DA   		mov	rdx, rbx	# tmp139, factor
 9101 385d 48C1EA06 		shr	rdx, 6	# tmp139,
 9102              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9103              		.loc 1 122 12 view .LVU3118
 9104 3861 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9105              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9106              		.loc 1 122 11 view .LVU3119
 9107 3865 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9108 3869 7375     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9109              		.loc 1 122 58 is_stmt 1 view .LVU3120
 9110              	.LVL411:
 9111              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9112              		.loc 1 122 63 is_stmt 0 view .LVU3121
 9113 386b 498D5A02 		lea	rbx, 2[r10]	# factor,
 9114              	.LVL412:
 122:sieve_extend.c ****     return index;
 9115              		.loc 1 122 11 is_stmt 1 view .LVU3122
 9116              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9117              		.loc 1 122 21 is_stmt 0 view .LVU3123
 9118 386f 4889D9   		mov	rcx, rbx	# tmp143, factor
 9119 3872 48C1E906 		shr	rcx, 6	# tmp143,
 9120              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9121              		.loc 1 122 12 view .LVU3124
 9122 3876 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
GAS LISTING /tmp/ccH5HMHD.s 			page 254


 9123              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9124              		.loc 1 122 11 view .LVU3125
 9125 387a 490FA3D9 		bt	r9, rbx	# *_16, factor
 9126 387e 7360     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9127              		.loc 1 122 58 is_stmt 1 view .LVU3126
 9128              	.LVL413:
 9129              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9130              		.loc 1 122 63 is_stmt 0 view .LVU3127
 9131 3880 498D5A03 		lea	rbx, 3[r10]	# factor,
 9132              	.LVL414:
 122:sieve_extend.c ****     return index;
 9133              		.loc 1 122 11 is_stmt 1 view .LVU3128
 9134              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9135              		.loc 1 122 21 is_stmt 0 view .LVU3129
 9136 3884 4989DB   		mov	r11, rbx	# tmp147, factor
 9137 3887 49C1EB06 		shr	r11, 6	# tmp147,
 9138              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9139              		.loc 1 122 12 view .LVU3130
 9140 388b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9141              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9142              		.loc 1 122 11 view .LVU3131
 9143 388f 480FA3D8 		bt	rax, rbx	# *_16, factor
 9144 3893 734B     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9145              		.loc 1 122 58 is_stmt 1 view .LVU3132
 9146              	.LVL415:
 9147              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9148              		.loc 1 122 63 is_stmt 0 view .LVU3133
 9149 3895 498D5A04 		lea	rbx, 4[r10]	# factor,
 9150              	.LVL416:
 122:sieve_extend.c ****     return index;
 9151              		.loc 1 122 11 is_stmt 1 view .LVU3134
 9152              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9153              		.loc 1 122 21 is_stmt 0 view .LVU3135
 9154 3899 4889DA   		mov	rdx, rbx	# tmp151, factor
 9155 389c 48C1EA06 		shr	rdx, 6	# tmp151,
 9156              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9157              		.loc 1 122 12 view .LVU3136
 9158 38a0 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9159              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9160              		.loc 1 122 11 view .LVU3137
 9161 38a4 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9162 38a8 7336     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9163              		.loc 1 122 58 is_stmt 1 view .LVU3138
 9164              	.LVL417:
 9165              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccH5HMHD.s 			page 255


 122:sieve_extend.c ****     return index;
 9166              		.loc 1 122 63 is_stmt 0 view .LVU3139
 9167 38aa 498D5A05 		lea	rbx, 5[r10]	# factor,
 9168              	.LVL418:
 122:sieve_extend.c ****     return index;
 9169              		.loc 1 122 11 is_stmt 1 view .LVU3140
 9170              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9171              		.loc 1 122 21 is_stmt 0 view .LVU3141
 9172 38ae 4889D9   		mov	rcx, rbx	# tmp155, factor
 9173 38b1 48C1E906 		shr	rcx, 6	# tmp155,
 9174              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9175              		.loc 1 122 12 view .LVU3142
 9176 38b5 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9177              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9178              		.loc 1 122 11 view .LVU3143
 9179 38b9 490FA3D9 		bt	r9, rbx	# *_16, factor
 9180 38bd 7321     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9181              		.loc 1 122 58 is_stmt 1 view .LVU3144
 9182              	.LVL419:
 9183              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9184              		.loc 1 122 63 is_stmt 0 view .LVU3145
 9185 38bf 498D5A06 		lea	rbx, 6[r10]	# factor,
 9186              	.LVL420:
 122:sieve_extend.c ****     return index;
 9187              		.loc 1 122 11 is_stmt 1 view .LVU3146
 9188              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9189              		.loc 1 122 21 is_stmt 0 view .LVU3147
 9190 38c3 4989DB   		mov	r11, rbx	# tmp159, factor
 9191 38c6 49C1EB06 		shr	r11, 6	# tmp159,
 9192              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9193              		.loc 1 122 12 view .LVU3148
 9194 38ca 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9195              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9196              		.loc 1 122 11 view .LVU3149
 9197 38ce 480FA3D8 		bt	rax, rbx	# *_16, factor
 9198 38d2 730C     		jnc	.L838	#,
 122:sieve_extend.c ****     return index;
 9199              		.loc 1 122 58 is_stmt 1 view .LVU3150
 9200              	.LVL421:
 9201              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9202              		.loc 1 122 63 is_stmt 0 view .LVU3151
 9203 38d4 498D5A07 		lea	rbx, 7[r10]	# factor,
 9204              	.LVL422:
 122:sieve_extend.c ****     return index;
 9205              		.loc 1 122 11 is_stmt 1 view .LVU3152
 9206 38d8 E948FFFF 		jmp	.L863	#
 9206      FF
 9207 38dd 0F1F00   		.p2align 4,,7
GAS LISTING /tmp/ccH5HMHD.s 			page 256


 9208              		.p2align 3
 9209              	.L838:
 9210              	.LVL423:
 122:sieve_extend.c ****     return index;
 9211              		.loc 1 122 11 is_stmt 0 view .LVU3153
 9212              	.LBE409:
 9213              	.LBE408:
1000:sieve_extend.c ****         primeCount++;
 9214              		.loc 1 1000 30 is_stmt 1 view .LVU3154
 9215              	# sieve_extend.c:1000:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1000:sieve_extend.c ****         primeCount++;
 9216              		.loc 1 1000 5 is_stmt 0 view .LVU3155
 9217 38e0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 9218 38e3 0F8227FF 		jb	.L840	#,
 9218      FFFF
 9219              	.LVL424:
 9220              	.L835:
1000:sieve_extend.c ****         primeCount++;
 9221              		.loc 1 1000 5 view .LVU3156
 9222              	.LBE419:
1007:sieve_extend.c **** }
 9223              		.loc 1 1007 5 is_stmt 1 view .LVU3157
 9224              	.LBB420:
 9225              	.LBI420:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9226              		.loc 3 105 1 view .LVU3158
 9227              	.LBB421:
 9228              		.loc 3 107 3 view .LVU3159
 9229              	.LBE421:
 9230              	.LBE420:
 9231              	# sieve_extend.c:1008: }
1008:sieve_extend.c **** 
 9232              		.loc 1 1008 1 is_stmt 0 view .LVU3160
 9233 38e9 488D6424 		lea	rsp, 8[rsp]	#,
 9233      08
 9234              		.cfi_remember_state
 9235              		.cfi_def_cfa_offset 56
 9236              	.LBB425:
 9237              	.LBB422:
 9238              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9239              		.loc 3 107 10 view .LVU3161
 9240 38ee 4C89FA   		mov	rdx, r15	#, primeCount
 9241              	.LBE422:
 9242              	.LBE425:
 9243              	# sieve_extend.c:1008: }
1008:sieve_extend.c **** 
 9244              		.loc 1 1008 1 view .LVU3162
 9245 38f1 5B       		pop	rbx	#
 9246              		.cfi_def_cfa_offset 48
 9247              	# sieve_extend.c:1007:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1007:sieve_extend.c **** }
 9248              		.loc 1 1007 5 view .LVU3163
 9249 38f2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 9249      01
 9250              	.LBB426:
 9251              	.LBB423:
 9252              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccH5HMHD.s 			page 257


 9253              		.loc 3 107 10 view .LVU3164
 9254 38f7 BF010000 		mov	edi, 1	#,
 9254      00
 9255 38fc 31C0     		xor	eax, eax	#
 9256 38fe 488D3500 		lea	rsi, .LC5[rip]	#,
 9256      000000
 9257              	.LBE423:
 9258              	.LBE426:
 9259              	# sieve_extend.c:1008: }
1008:sieve_extend.c **** 
 9260              		.loc 1 1008 1 view .LVU3165
 9261 3905 5D       		pop	rbp	#
 9262              		.cfi_def_cfa_offset 40
 9263 3906 415C     		pop	r12	#
 9264              		.cfi_def_cfa_offset 32
 9265 3908 415D     		pop	r13	#
 9266              		.cfi_def_cfa_offset 24
 9267 390a 415E     		pop	r14	#
 9268              		.cfi_def_cfa_offset 16
 9269 390c 415F     		pop	r15	#
 9270              		.cfi_def_cfa_offset 8
 9271              	.LBB427:
 9272              	.LBB424:
 9273              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9274              		.loc 3 107 10 view .LVU3166
 9275 390e E9000000 		jmp	__printf_chk@PLT	#
 9275      00
 9276              	.LVL425:
 9277              		.p2align 4,,7
 9278 3913 0F1F4400 		.p2align 3
 9278      00
 9279              	.L864:
 9280              		.cfi_restore_state
 9281              		.loc 3 107 10 view .LVU3167
 9282              	.LBE424:
 9283              	.LBE427:
 9284              	.LBB428:
1003:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9285              		.loc 1 1003 13 is_stmt 1 view .LVU3168
 9286              	.LBB410:
 9287              	.LBI402:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9288              		.loc 3 105 1 view .LVU3169
 9289              	.LBB404:
 9290              		.loc 3 107 3 view .LVU3170
 9291              	.LBE404:
 9292              	.LBE410:
 9293              	# sieve_extend.c:1003:             printf("%3ju ",(uintmax_t)factor*2+1);
1003:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9294              		.loc 1 1003 13 is_stmt 0 view .LVU3171
 9295 3918 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 9295      01
 9296              	.LBB411:
 9297              	.LBB405:
 9298              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9299              		.loc 3 107 10 view .LVU3172
 9300 391d BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 258


 9300      00
 9301 3922 31C0     		xor	eax, eax	#
 9302 3924 488D3500 		lea	rsi, .LC4[rip]	#,
 9302      000000
 9303 392b E8000000 		call	__printf_chk@PLT	#
 9303      00
 9304              	.LVL426:
 9305              		.loc 3 107 10 view .LVU3173
 9306              	.LBE405:
 9307              	.LBE411:
1004:sieve_extend.c ****         }
 9308              		.loc 1 1004 13 is_stmt 1 view .LVU3174
 9309              	.LBB412:
 9310              	.LBB406:
 9311              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9312              		.loc 3 107 10 is_stmt 0 view .LVU3175
 9313 3930 4C89F8   		mov	rax, r15	# tmp120, primeCount
 9314              	.LBE406:
 9315              	.LBE412:
 9316              	# sieve_extend.c:1004:             if (primeCount % 10 == 0) printf("\n");
1004:sieve_extend.c ****         }
 9317              		.loc 1 1004 16 view .LVU3176
 9318 3933 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 9318      99999999 
 9318      9919
 9319              	.LBB413:
 9320              	.LBB407:
 9321              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9322              		.loc 3 107 10 view .LVU3177
 9323 393d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 9324 3941 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 9324      D001
 9325              	.LBE407:
 9326              	.LBE413:
 9327              	# sieve_extend.c:1004:             if (primeCount % 10 == 0) printf("\n");
1004:sieve_extend.c ****         }
 9328              		.loc 1 1004 16 view .LVU3178
 9329 3947 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 9330 394a 760C     		jbe	.L837	#,
 9331              	.L862:
 9332 394c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.79_32(D)
 9333              	.LBB414:
 9334              	.LBB415:
 9335              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9336              		.loc 3 107 10 view .LVU3179
 9337 3950 E9C8FEFF 		jmp	.L836	#
 9337      FF
 9338              		.p2align 4,,7
 9339 3955 0F1F00   		.p2align 3
 9340              	.L837:
 9341              	.LBE415:
 9342              	.LBE414:
1004:sieve_extend.c ****         }
 9343              		.loc 1 1004 39 is_stmt 1 view .LVU3180
 9344              	.LVL427:
 9345              	.LBB417:
 9346              	.LBI414:
GAS LISTING /tmp/ccH5HMHD.s 			page 259


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9347              		.loc 3 105 1 view .LVU3181
 9348              	.LBB416:
 9349              		.loc 3 107 3 view .LVU3182
 9350              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9351              		.loc 3 107 10 is_stmt 0 view .LVU3183
 9352 3958 BF0A0000 		mov	edi, 10	#,
 9352      00
 9353 395d E8000000 		call	putchar@PLT	#
 9353      00
 9354              	.LVL428:
 9355 3962 EBE8     		jmp	.L862	#
 9356              	.LVL429:
 9357              	.L841:
 9358              		.loc 3 107 10 view .LVU3184
 9359              	.LBE416:
 9360              	.LBE417:
 9361              	.LBE428:
 9362              	# sieve_extend.c:999:     counter_t primeCount = 1;    // We already have 2
 999:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9363              		.loc 1 999 15 view .LVU3185
 9364 3964 41BF0100 		mov	r15d, 1	# primeCount,
 9364      0000
 9365 396a E97AFFFF 		jmp	.L835	#
 9365      FF
 9366              		.cfi_endproc
 9367              	.LFE86:
 9369 396f 90       		.p2align 4
 9371              	sieve:
 9372              	.LVL430:
 9373              	.LFB75:
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9374              		.loc 1 976 86 is_stmt 1 view -0
 9375              		.cfi_startproc
 977:sieve_extend.c ****     counter_t prime     = 0;
 9376              		.loc 1 977 5 view .LVU3187
 9377              	# sieve_extend.c:976: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9378              		.loc 1 976 86 is_stmt 0 view .LVU3188
 9379 3970 4157     		push	r15	#
 9380              		.cfi_def_cfa_offset 16
 9381              		.cfi_offset 15, -16
 9382 3972 4156     		push	r14	#
 9383              		.cfi_def_cfa_offset 24
 9384              		.cfi_offset 14, -24
 9385 3974 4155     		push	r13	#
 9386              		.cfi_def_cfa_offset 32
 9387              		.cfi_offset 13, -32
 9388 3976 4154     		push	r12	#
 9389              		.cfi_def_cfa_offset 40
 9390              		.cfi_offset 12, -40
 9391 3978 55       		push	rbp	#
 9392              		.cfi_def_cfa_offset 48
 9393              		.cfi_offset 6, -48
 9394 3979 53       		push	rbx	#
 9395              		.cfi_def_cfa_offset 56
 9396              		.cfi_offset 3, -56
GAS LISTING /tmp/ccH5HMHD.s 			page 260


 9397 397a 4889FB   		mov	rbx, rdi	# maxints, tmp1244
 9398              	.LVL431:
 9399              	.LBB503:
 9400              	.LBI503:
 102:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 9401              		.loc 1 102 28 is_stmt 1 view .LVU3189
 9402              	.LBB504:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9403              		.loc 1 103 5 view .LVU3190
 9404              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9405              		.loc 1 103 33 is_stmt 0 view .LVU3191
 9406 397d BF080000 		mov	edi, 8	#,
 9406      00
 9407              	.LVL432:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9408              		.loc 1 103 33 view .LVU3192
 9409              	.LBE504:
 9410              	.LBE503:
 9411              	# sieve_extend.c:976: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9412              		.loc 1 976 86 view .LVU3193
 9413 3982 488D6424 		lea	rsp, -104[rsp]	#,
 9413      98
 9414              		.cfi_def_cfa_offset 160
 9415              	.LBB508:
 9416              	.LBB505:
 9417              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9418              		.loc 1 104 22 view .LVU3194
 9419 3987 4989DE   		mov	r14, rbx	# prephitmp_1432, maxints
 9420 398a 49D1EE   		shr	r14	# prephitmp_1432
 9421              	.LBE505:
 9422              	.LBE508:
 9423              	# sieve_extend.c:976: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9424              		.loc 1 976 86 view .LVU3195
 9425 398d 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp1245
 9425      40
 9426              	.LBB509:
 9427              	.LBB506:
 9428              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9429              		.loc 1 103 33 view .LVU3196
 9430 3992 BE180000 		mov	esi, 24	#,
 9430      00
 9431              	.LVL433:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9432              		.loc 1 103 33 view .LVU3197
 9433 3997 E8000000 		call	aligned_alloc@PLT	#
 9433      00
 9434              	.LVL434:
 9435              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9436              		.loc 1 104 22 view .LVU3198
 9437 399c 498DB600 		lea	rsi, 1024[r14]	# tmp549,
 9437      040000
GAS LISTING /tmp/ccH5HMHD.s 			page 261


 9438              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9439              		.loc 1 106 23 view .LVU3199
 9440 39a3 BF800000 		mov	edi, 128	#,
 9440      00
 9441              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9442              		.loc 1 103 33 view .LVU3200
 9443 39a8 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 9443      30
 9444 39ad 4989C7   		mov	r15, rax	# <retval>, tmp1246
 9445              	.LVL435:
 104:sieve_extend.c **** 
 9446              		.loc 1 104 5 is_stmt 1 view .LVU3201
 9447              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9448              		.loc 1 104 22 is_stmt 0 view .LVU3202
 9449 39b0 48C1EE0A 		shr	rsi, 10	# tmp550,
 9450              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9451              		.loc 1 104 12 view .LVU3203
 9452 39b4 48C1E607 		sal	rsi, 7	# memSize,
 9453              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9454              		.loc 1 104 22 view .LVU3204
 9455 39b8 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_1432
 9455      08
 9456              	.LVL436:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9457              		.loc 1 106 5 is_stmt 1 view .LVU3205
 9458              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9459              		.loc 1 106 23 is_stmt 0 view .LVU3206
 9460 39bd E8000000 		call	aligned_alloc@PLT	#
 9460      00
 9461              	.LVL437:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9462              		.loc 1 106 23 view .LVU3207
 9463 39c2 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _97
 9463      38
 9464              	.LBE506:
 9465              	.LBE509:
 9466              	.LBB510:
 9467              	.LBB511:
 9468              	# sieve_extend.c:947:     for (;range_stop < block_stop;) {
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9469              		.loc 1 947 5 view .LVU3208
 9470 39c7 4D85F6   		test	r14, r14	# prephitmp_1432
 9471              	.LBE511:
 9472              	.LBE510:
 9473              	.LBB587:
 9474              	.LBB507:
 9475              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9476              		.loc 1 106 21 view .LVU3209
 9477 39ca 498907   		mov	QWORD PTR [r15], rax	# sieve_92->bitarray, _97
 107:sieve_extend.c ****     sieve->size     = size;
GAS LISTING /tmp/ccH5HMHD.s 			page 262


 9478              		.loc 1 107 5 is_stmt 1 view .LVU3210
 9479              	# sieve_extend.c:107:     sieve->bits     = size >> 1;
 107:sieve_extend.c ****     sieve->size     = size;
 9480              		.loc 1 107 21 is_stmt 0 view .LVU3211
 9481 39cd 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_92->bits, prephitmp_1432
 108:sieve_extend.c **** 
 9482              		.loc 1 108 5 is_stmt 1 view .LVU3212
 9483              	# sieve_extend.c:108:     sieve->size     = size;
 108:sieve_extend.c **** 
 9484              		.loc 1 108 21 is_stmt 0 view .LVU3213
 9485 39d1 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_92->size, maxints
 112:sieve_extend.c **** }
 9486              		.loc 1 112 5 is_stmt 1 view .LVU3214
 9487              	.LVL438:
 112:sieve_extend.c **** }
 9488              		.loc 1 112 5 is_stmt 0 view .LVU3215
 9489              	.LBE507:
 9490              	.LBE587:
 978:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9491              		.loc 1 978 5 is_stmt 1 view .LVU3216
 979:sieve_extend.c **** 
 9492              		.loc 1 979 5 view .LVU3217
 981:sieve_extend.c **** 
 9493              		.loc 1 981 5 view .LVU3218
 984:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9494              		.loc 1 984 5 view .LVU3219
 9495              	.LBB588:
 9496              	.LBI510:
 937:sieve_extend.c ****     register counter_t prime   = 0;
 9497              		.loc 1 937 21 view .LVU3220
 9498              	.LBB580:
 938:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9499              		.loc 1 938 5 view .LVU3221
 939:sieve_extend.c ****     counter_t pattern_start    = 0;
 9500              		.loc 1 939 5 view .LVU3222
 940:sieve_extend.c ****     counter_t range_stop       = block_start;
 9501              		.loc 1 940 5 view .LVU3223
 941:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9502              		.loc 1 941 5 view .LVU3224
 942:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9503              		.loc 1 942 5 view .LVU3225
 943:sieve_extend.c **** 
 9504              		.loc 1 943 5 view .LVU3226
 945:sieve_extend.c ****     
 9505              		.loc 1 945 5 view .LVU3227
 9506              	# sieve_extend.c:945:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 945:sieve_extend.c ****     
 9507              		.loc 1 945 24 is_stmt 0 view .LVU3228
 9508 39d5 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_97],
 9508      000000
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9509              		.loc 1 947 5 is_stmt 1 view .LVU3229
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9510              		.loc 1 947 11 view .LVU3230
 9511              	# sieve_extend.c:947:     for (;range_stop < block_stop;) {
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9512              		.loc 1 947 5 is_stmt 0 view .LVU3231
GAS LISTING /tmp/ccH5HMHD.s 			page 263


 9513 39dc 0F843C1C 		je	.L1475	#,
 9513      0000
 9514 39e2 4989C7   		mov	r15, rax	# _97, _97
 9515              	# sieve_extend.c:938:     register counter_t prime   = 0;
 938:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9516              		.loc 1 938 24 view .LVU3232
 9517 39e5 31C9     		xor	ecx, ecx	# prime
 9518              	# sieve_extend.c:940:     counter_t pattern_start    = 0;
 940:sieve_extend.c ****     counter_t range_stop       = block_start;
 9519              		.loc 1 940 15 view .LVU3233
 9520 39e7 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9520      10000000 
 9520      00
 9521              	# sieve_extend.c:943:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 943:sieve_extend.c **** 
 9522              		.loc 1 943 18 view .LVU3234
 9523 39f0 31D2     		xor	edx, edx	# block$pattern_size
 9524 39f2 31F6     		xor	esi, esi	# block$pattern_start
 9525              	# sieve_extend.c:939:     counter_t patternsize_bits = 1;
 939:sieve_extend.c ****     counter_t pattern_start    = 0;
 9526              		.loc 1 939 15 view .LVU3235
 9527 39f4 41BE0100 		mov	r14d, 1	# patternsize_bits,
 9527      0000
 9528              	.LVL439:
 9529              	.LBB512:
 9530              	# sieve_extend.c:948:         prime = searchBitFalse(bitarray, prime+1);
 948:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9531              		.loc 1 948 17 view .LVU3236
 9532 39fa 41BD0100 		mov	r13d, 1	# index,
 9532      0000
 9533              	.LVL440:
 9534              		.p2align 4
 9535              		.p2align 3
 9536              	.L866:
 9537              	.LBB513:
 9538              	.LBB514:
 123:sieve_extend.c **** }
 9539              		.loc 1 123 5 is_stmt 1 view .LVU3237
 123:sieve_extend.c **** }
 9540              		.loc 1 123 5 is_stmt 0 view .LVU3238
 9541              	.LBE514:
 9542              	.LBE513:
 949:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9543              		.loc 1 949 9 is_stmt 1 view .LVU3239
 9544              	# sieve_extend.c:949:         counter_t start = prime * prime * 2 + prime * 2;
 949:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9545              		.loc 1 949 45 is_stmt 0 view .LVU3240
 9546 3a00 498D5D01 		lea	rbx, 1[r13]	# index,
 9547 3a04 4F8D642D 		lea	r12, [r13+r13]	# _687,
 9547      00
 9548              	# sieve_extend.c:949:         counter_t start = prime * prime * 2 + prime * 2;
 949:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9549              		.loc 1 949 19 view .LVU3241
 9550 3a09 4889DD   		mov	rbp, rbx	# index, index
 9551 3a0c 490FAFEC 		imul	rbp, r12	# index, _687
 9552              	.LVL441:
 950:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 264


 9553              		.loc 1 950 9 is_stmt 1 view .LVU3242
 9554              	# sieve_extend.c:950:         if unlikely(start > block_stop) break;
 950:sieve_extend.c **** 
 9555              		.loc 1 950 12 is_stmt 0 view .LVU3243
 9556 3a10 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9556      08
 9557 3a15 0F87E609 		ja	.L1476	#,
 9557      0000
 952:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9558              		.loc 1 952 9 is_stmt 1 view .LVU3244
 9559              	# sieve_extend.c:952:         const counter_t step  = prime * 2 + 1;
 952:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9560              		.loc 1 952 25 is_stmt 0 view .LVU3245
 9561 3a1b 4983C401 		add	r12, 1	# step,
 9562              	.LVL442:
 953:sieve_extend.c **** 
 9563              		.loc 1 953 9 is_stmt 1 view .LVU3246
 9564              	# sieve_extend.c:953:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 953:sieve_extend.c **** 
 9565              		.loc 1 953 12 is_stmt 0 view .LVU3247
 9566 3a1f 4885DB   		test	rbx, rbx	# index
 9567 3a22 7516     		jne	.L872	#,
 953:sieve_extend.c **** 
 9568              		.loc 1 953 41 is_stmt 1 view .LVU3248
 9569              	# sieve_extend.c:953:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 953:sieve_extend.c **** 
 9570              		.loc 1 953 102 is_stmt 0 view .LVU3249
 9571 3a24 48C7C0FF 		mov	rax, -1	# tmp566,
 9571      FFFFFF
 9572 3a2b 31D2     		xor	edx, edx	# tmp565
 9573 3a2d 49F7F4   		div	r12	# step
 9574              	# sieve_extend.c:953:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 953:sieve_extend.c **** 
 9575              		.loc 1 953 47 view .LVU3250
 9576 3a30 48C7C5FE 		mov	rbp, -2	# tmp567,
 9576      FFFFFF
 9577              	.LVL443:
 953:sieve_extend.c **** 
 9578              		.loc 1 953 47 view .LVU3251
 9579 3a37 4829D5   		sub	rbp, rdx	# index, tmp565
 9580              	.LVL444:
 9581              	.L872:
 955:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9582              		.loc 1 955 9 is_stmt 1 view .LVU3252
 9583              	# sieve_extend.c:955:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 955:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9584              		.loc 1 955 53 is_stmt 0 view .LVU3253
 9585 3a3a 4C89E6   		mov	rsi, r12	# _68, step
 9586 3a3d 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 9587 3a41 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 9587      20
 9588              	# sieve_extend.c:955:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 955:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9589              		.loc 1 955 60 view .LVU3254
 9590 3a46 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 9591              	.LVL445:
 956:sieve_extend.c ****         block.pattern_start = pattern_start;
GAS LISTING /tmp/ccH5HMHD.s 			page 265


 9592              		.loc 1 956 9 is_stmt 1 view .LVU3255
 957:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9593              		.loc 1 957 9 view .LVU3256
 958:sieve_extend.c **** 
 9594              		.loc 1 958 9 view .LVU3257
 9595              	# sieve_extend.c:958:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 958:sieve_extend.c **** 
 9596              		.loc 1 958 12 is_stmt 0 view .LVU3258
 9597 3a4a 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9597      08
 9598 3a4f 0F879F1B 		ja	.L1477	#,
 9598      0000
 960:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9599              		.loc 1 960 9 is_stmt 1 view .LVU3259
 9600 3a55 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 9600      10
 9601              	# sieve_extend.c:960:         if (patternsize_bits>1) {
 960:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9602              		.loc 1 960 12 is_stmt 0 view .LVU3260
 9603 3a5a 4983FE01 		cmp	r14, 1	# patternsize_bits,
 9604 3a5e 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9604      18
 9605 3a63 0F872F01 		ja	.L1478	#,
 9605      0000
 9606              	.LVL446:
 9607              	.L875:
 964:sieve_extend.c **** 
 9608              		.loc 1 964 9 is_stmt 1 view .LVU3261
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9609              		.loc 1 966 9 view .LVU3262
 9610              	# sieve_extend.c:966:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9611              		.loc 1 966 17 is_stmt 0 view .LVU3263
 9612 3a69 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9612      000000
 9613 3a70 0F827A01 		jb	.L1479	#,
 9613      0000
 9614              	.L879:
 967:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9615              		.loc 1 967 14 is_stmt 1 view .LVU3264
 9616              	# sieve_extend.c:967:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 967:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9617              		.loc 1 967 17 is_stmt 0 view .LVU3265
 9618 3a76 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9618      000000
 9619 3a7d 0F828D06 		jb	.L1480	#,
 9619      0000
 968:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9620              		.loc 1 968 14 is_stmt 1 view .LVU3266
 9621              	# sieve_extend.c:968:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 968:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9622              		.loc 1 968 17 is_stmt 0 view .LVU3267
 9623 3a83 4981FCFF 		cmp	r12, 255	# step,
 9623      000000
 9624 3a8a 0F876004 		ja	.L902	#,
 9624      0000
 968:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
GAS LISTING /tmp/ccH5HMHD.s 			page 266


 9625              		.loc 1 968 48 is_stmt 1 view .LVU3268
 9626 3a90 4C89C1   		mov	rcx, r8	#, _69
 9627 3a93 4C89E2   		mov	rdx, r12	#, step
 9628 3a96 4889EE   		mov	rsi, rbp	#, index
 9629 3a99 4C89FF   		mov	rdi, r15	#, _97
 9630 3a9c 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9630      28
 9631 3aa1 E86ADAFF 		call	setBitsTrue_largeRange_vector	#
 9631      FF
 9632              	.LVL447:
 9633 3aa6 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9633      28
 9634              	.LVL448:
 9635              	.L883:
 968:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9636              		.loc 1 968 48 is_stmt 0 view .LVU3269
 9637              	.LBE512:
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9638              		.loc 1 947 11 is_stmt 1 view .LVU3270
 9639              	# sieve_extend.c:947:     for (;range_stop < block_stop;) {
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9640              		.loc 1 947 5 is_stmt 0 view .LVU3271
 9641 3aab 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9641      08
 9642 3ab0 0F83FC03 		jnb	.L1481	#,
 9642      0000
 9643              	.LVL449:
 9644              	.L909:
 9645              	.LBB574:
 948:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9646              		.loc 1 948 9 is_stmt 1 view .LVU3272
 9647              	.LBB516:
 9648              	.LBI513:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9649              		.loc 1 121 25 view .LVU3273
 9650              	.LBB515:
 122:sieve_extend.c ****     return index;
 9651              		.loc 1 122 5 view .LVU3274
 122:sieve_extend.c ****     return index;
 9652              		.loc 1 122 11 view .LVU3275
 9653              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9654              		.loc 1 122 21 is_stmt 0 view .LVU3276
 9655 3ab6 4889D9   		mov	rcx, rbx	# tmp553, index
 9656 3ab9 48C1E906 		shr	rcx, 6	# tmp553,
 9657              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9658              		.loc 1 122 12 view .LVU3277
 9659 3abd 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_933,* _97
 9660              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9661              		.loc 1 122 11 view .LVU3278
 9662 3ac1 490FA3DA 		bt	r10, rbx	# *_933, index
 9663 3ac5 0F83A500 		jnc	.L868	#,
 9663      0000
 122:sieve_extend.c ****     return index;
 9664              		.loc 1 122 58 is_stmt 1 view .LVU3279
GAS LISTING /tmp/ccH5HMHD.s 			page 267


 9665              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9666              		.loc 1 122 63 is_stmt 0 view .LVU3280
 9667 3acb 4C8D4B01 		lea	r9, 1[rbx]	# tmp849,
 9668              	.LVL450:
 9669              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9670              		.loc 1 122 21 view .LVU3281
 9671 3acf 4C89CD   		mov	rbp, r9	# tmp558, index
 9672              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9673              		.loc 1 122 63 view .LVU3282
 9674 3ad2 4C89CB   		mov	rbx, r9	# index, tmp849
 122:sieve_extend.c ****     return index;
 9675              		.loc 1 122 11 is_stmt 1 view .LVU3283
 9676              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9677              		.loc 1 122 21 is_stmt 0 view .LVU3284
 9678 3ad5 48C1ED06 		shr	rbp, 6	# tmp558,
 9679              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9680              		.loc 1 122 12 view .LVU3285
 9681 3ad9 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9682              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9683              		.loc 1 122 11 view .LVU3286
 9684 3add 4C0FA3CE 		bt	rsi, r9	# *_49, index
 9685 3ae1 0F838900 		jnc	.L868	#,
 9685      0000
 122:sieve_extend.c ****     return index;
 9686              		.loc 1 122 58 is_stmt 1 view .LVU3287
 9687              	.LVL451:
 9688              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9689              		.loc 1 122 63 is_stmt 0 view .LVU3288
 9690 3ae7 4883C301 		add	rbx, 1	# index,
 9691              	.LVL452:
 122:sieve_extend.c ****     return index;
 9692              		.loc 1 122 11 is_stmt 1 view .LVU3289
 9693              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9694              		.loc 1 122 21 is_stmt 0 view .LVU3290
 9695 3aeb 4889DF   		mov	rdi, rbx	# tmp1142, index
 9696 3aee 48C1EF06 		shr	rdi, 6	# tmp1142,
 9697              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9698              		.loc 1 122 12 view .LVU3291
 9699 3af2 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9700              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9701              		.loc 1 122 11 view .LVU3292
 9702 3af6 490FA3DB 		bt	r11, rbx	# *_49, index
 9703 3afa 7374     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9704              		.loc 1 122 58 is_stmt 1 view .LVU3293
 9705              	.LVL453:
 9706              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccH5HMHD.s 			page 268


 122:sieve_extend.c ****     return index;
 9707              		.loc 1 122 63 is_stmt 0 view .LVU3294
 9708 3afc 498D5902 		lea	rbx, 2[r9]	# index,
 9709              	.LVL454:
 122:sieve_extend.c ****     return index;
 9710              		.loc 1 122 11 is_stmt 1 view .LVU3295
 9711              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9712              		.loc 1 122 21 is_stmt 0 view .LVU3296
 9713 3b00 4889D8   		mov	rax, rbx	# tmp1146, index
 9714 3b03 48C1E806 		shr	rax, 6	# tmp1146,
 9715              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9716              		.loc 1 122 12 view .LVU3297
 9717 3b07 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_49, *_49
 9718              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9719              		.loc 1 122 11 view .LVU3298
 9720 3b0b 490FA3D8 		bt	r8, rbx	# *_49, index
 9721 3b0f 735F     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9722              		.loc 1 122 58 is_stmt 1 view .LVU3299
 9723              	.LVL455:
 9724              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9725              		.loc 1 122 63 is_stmt 0 view .LVU3300
 9726 3b11 498D5903 		lea	rbx, 3[r9]	# index,
 9727              	.LVL456:
 122:sieve_extend.c ****     return index;
 9728              		.loc 1 122 11 is_stmt 1 view .LVU3301
 9729              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9730              		.loc 1 122 21 is_stmt 0 view .LVU3302
 9731 3b15 4889DA   		mov	rdx, rbx	# tmp1150, index
 9732 3b18 48C1EA06 		shr	rdx, 6	# tmp1150,
 9733              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9734              		.loc 1 122 12 view .LVU3303
 9735 3b1c 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_49, *_49
 9736              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9737              		.loc 1 122 11 view .LVU3304
 9738 3b20 490FA3DC 		bt	r12, rbx	# *_49, index
 9739 3b24 734A     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9740              		.loc 1 122 58 is_stmt 1 view .LVU3305
 9741              	.LVL457:
 9742              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9743              		.loc 1 122 63 is_stmt 0 view .LVU3306
 9744 3b26 498D5904 		lea	rbx, 4[r9]	# index,
 9745              	.LVL458:
 122:sieve_extend.c ****     return index;
 9746              		.loc 1 122 11 is_stmt 1 view .LVU3307
 9747              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9748              		.loc 1 122 21 is_stmt 0 view .LVU3308
GAS LISTING /tmp/ccH5HMHD.s 			page 269


 9749 3b2a 4889D9   		mov	rcx, rbx	# tmp1154, index
 9750 3b2d 48C1E906 		shr	rcx, 6	# tmp1154,
 9751              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9752              		.loc 1 122 12 view .LVU3309
 9753 3b31 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_49, *_49
 9754              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9755              		.loc 1 122 11 view .LVU3310
 9756 3b35 490FA3DA 		bt	r10, rbx	# *_49, index
 9757 3b39 7335     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9758              		.loc 1 122 58 is_stmt 1 view .LVU3311
 9759              	.LVL459:
 9760              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9761              		.loc 1 122 63 is_stmt 0 view .LVU3312
 9762 3b3b 498D5905 		lea	rbx, 5[r9]	# index,
 9763              	.LVL460:
 122:sieve_extend.c ****     return index;
 9764              		.loc 1 122 11 is_stmt 1 view .LVU3313
 9765              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9766              		.loc 1 122 21 is_stmt 0 view .LVU3314
 9767 3b3f 4889DD   		mov	rbp, rbx	# tmp1158, index
 9768 3b42 48C1ED06 		shr	rbp, 6	# tmp1158,
 9769              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9770              		.loc 1 122 12 view .LVU3315
 9771 3b46 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9772              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9773              		.loc 1 122 11 view .LVU3316
 9774 3b4a 480FA3DE 		bt	rsi, rbx	# *_49, index
 9775 3b4e 7320     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9776              		.loc 1 122 58 is_stmt 1 view .LVU3317
 9777              	.LVL461:
 9778              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9779              		.loc 1 122 63 is_stmt 0 view .LVU3318
 9780 3b50 498D5906 		lea	rbx, 6[r9]	# index,
 9781              	.LVL462:
 122:sieve_extend.c ****     return index;
 9782              		.loc 1 122 11 is_stmt 1 view .LVU3319
 9783              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9784              		.loc 1 122 21 is_stmt 0 view .LVU3320
 9785 3b54 4889DF   		mov	rdi, rbx	# tmp1162, index
 9786 3b57 48C1EF06 		shr	rdi, 6	# tmp1162,
 9787              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9788              		.loc 1 122 12 view .LVU3321
 9789 3b5b 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9790              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9791              		.loc 1 122 11 view .LVU3322
GAS LISTING /tmp/ccH5HMHD.s 			page 270


 9792 3b5f 490FA3DB 		bt	r11, rbx	# *_49, index
 9793 3b63 730B     		jnc	.L868	#,
 122:sieve_extend.c ****     return index;
 9794              		.loc 1 122 58 is_stmt 1 view .LVU3323
 9795              	.LVL463:
 9796              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9797              		.loc 1 122 63 is_stmt 0 view .LVU3324
 9798 3b65 498D5907 		lea	rbx, 7[r9]	# index,
 9799              	.LVL464:
 122:sieve_extend.c ****     return index;
 9800              		.loc 1 122 11 is_stmt 1 view .LVU3325
 9801 3b69 E948FFFF 		jmp	.L909	#
 9801      FF
 9802              	.LVL465:
 9803 3b6e 6690     		.p2align 4,,7
 9804              		.p2align 3
 9805              	.L868:
 122:sieve_extend.c ****     return index;
 9806              		.loc 1 122 11 is_stmt 0 view .LVU3326
 9807              	.LBE515:
 9808              	.LBE516:
 9809              	.LBE574:
 9810              	.LBE580:
 9811              	.LBE588:
 9812              	# sieve_extend.c:976: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9813              		.loc 1 976 86 view .LVU3327
 9814 3b70 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 9815 3b73 4C89E9   		mov	rcx, r13	# prime, index
 9816 3b76 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9816      18
 9817 3b7b 4989DD   		mov	r13, rbx	# index, index
 9818              	.LVL466:
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9819              		.loc 1 976 86 view .LVU3328
 9820 3b7e 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 9820      10
 9821              	.LVL467:
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9822              		.loc 1 976 86 view .LVU3329
 9823 3b83 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, pattern_start
 9823      10
 9824              	.LVL468:
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9825              		.loc 1 976 86 view .LVU3330
 9826 3b88 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 9826      20
 9827              	.LVL469:
 976:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9828              		.loc 1 976 86 view .LVU3331
 9829 3b8d E96EFEFF 		jmp	.L866	#
 9829      FF
 9830              	.LVL470:
 9831              		.p2align 4,,7
 9832 3b92 660F1F44 		.p2align 3
 9832      0000
GAS LISTING /tmp/ccH5HMHD.s 			page 271


 9833              	.L1478:
 9834              	.LBB589:
 9835              	.LBB581:
 9836              	.LBB575:
 961:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9837              		.loc 1 961 13 is_stmt 1 view .LVU3332
 962:sieve_extend.c ****         }
 9838              		.loc 1 962 13 view .LVU3333
 9839              	.LBB517:
 9840              	.LBI517:
 841:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9841              		.loc 1 841 20 view .LVU3334
 9842              	.LBB518:
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9843              		.loc 1 842 5 view .LVU3335
 9844              	# sieve_extend.c:842:     if (size < WORD_SIZE_counter)   {
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9845              		.loc 1 842 8 is_stmt 0 view .LVU3336
 9846 3b98 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 9847 3b9c 0F86231A 		jbe	.L1482	#,
 9847      0000
 847:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9848              		.loc 1 847 5 is_stmt 1 view .LVU3337
 9849              	.LVL471:
 848:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9850              		.loc 1 848 5 view .LVU3338
 9851              	# sieve_extend.c:847:     const counter_t copy_start  = source_start + size;
 847:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9852              		.loc 1 847 21 is_stmt 0 view .LVU3339
 9853 3ba2 4F8D0C36 		lea	r9, [r14+r14]	# copy_start,
 9854              	# sieve_extend.c:849:     const bitshift_t source_bit = bitindex_calc(source_start);
 849:sieve_extend.c **** 
 9855              		.loc 1 849 22 view .LVU3340
 9856 3ba6 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 9857              	# sieve_extend.c:848:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 848:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9858              		.loc 1 848 22 view .LVU3341
 9859 3ba9 4183E13F 		and	r9d, 63	# copy_bit,
 9860              	.LVL472:
 849:sieve_extend.c **** 
 9861              		.loc 1 849 5 is_stmt 1 view .LVU3342
 9862              	# sieve_extend.c:849:     const bitshift_t source_bit = bitindex_calc(source_start);
 849:sieve_extend.c **** 
 9863              		.loc 1 849 22 is_stmt 0 view .LVU3343
 9864 3bad 4183E23F 		and	r10d, 63	# source_bit,
 9865              	.LVL473:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9866              		.loc 1 851 5 is_stmt 1 view .LVU3344
 9867              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9868              		.loc 1 851 13 is_stmt 0 view .LVU3345
 9869 3bb1 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 9870              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9871              		.loc 1 851 37 view .LVU3346
 9872 3bb4 4C89C1   		mov	rcx, r8	#, _69
 9873 3bb7 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
GAS LISTING /tmp/ccH5HMHD.s 			page 272


 9873      28
 9874 3bbc 4C89F2   		mov	rdx, r14	#, patternsize_bits
 9875 3bbf 4C89F6   		mov	rsi, r14	#, patternsize_bits
 9876 3bc2 4C89FF   		mov	rdi, r15	#, _97
 9877              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9878              		.loc 1 851 13 view .LVU3347
 9879 3bc5 0F82EB0A 		jb	.L1483	#,
 9879      0000
 9880              	.LVL474:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9881              		.loc 1 852 10 is_stmt 1 view .LVU3348
 9882              	# sieve_extend.c:852:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9883              		.loc 1 852 13 is_stmt 0 view .LVU3349
 9884 3bcb 0F86D10A 		jbe	.L878	#,
 9884      0000
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9885              		.loc 1 852 37 is_stmt 1 view .LVU3350
 9886 3bd1 E8EACAFF 		call	extendSieve_shiftright_ivdep	#
 9886      FF
 9887              	.LVL475:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9888              		.loc 1 852 37 is_stmt 0 view .LVU3351
 9889 3bd6 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 9889      18
 9890              	.LBE518:
 9891              	.LBE517:
 9892              	# sieve_extend.c:966:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9893              		.loc 1 966 17 view .LVU3352
 9894 3bdb 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9894      000000
 9895              	.LBB522:
 9896              	.LBB519:
 9897 3be2 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9897      28
 9898              	.LVL476:
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9899              		.loc 1 966 17 view .LVU3353
 9900              	.LBE519:
 9901              	.LBE522:
 964:sieve_extend.c **** 
 9902              		.loc 1 964 9 is_stmt 1 view .LVU3354
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9903              		.loc 1 966 9 view .LVU3355
 9904              	# sieve_extend.c:966:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 966:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9905              		.loc 1 966 17 is_stmt 0 view .LVU3356
 9906 3be7 0F8389FE 		jnb	.L879	#,
 9906      FFFF
 9907              	.LVL477:
 9908 3bed 0F1F00   		.p2align 4
 9909              		.p2align 3
 9910              	.L1479:
 9911              	.LBB523:
 9912              	.LBB524:
GAS LISTING /tmp/ccH5HMHD.s 			page 273


 9913              	.LBB525:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9914              		.loc 1 238 41 is_stmt 1 view .LVU3357
 9915              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9916              		.loc 1 238 5 is_stmt 0 view .LVU3358
 9917 3bf0 4983FC40 		cmp	r12, 64	# step,
 9918 3bf4 0F871A1A 		ja	.L980	#,
 9918      0000
 9919 3bfa 4C89E7   		mov	rdi, r12	# patternsize, step
 9920              	.LBE525:
 9921              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 9922              		.loc 1 237 21 view .LVU3359
 9923 3bfd B9010000 		mov	ecx, 1	# pattern,
 9923      00
 9924              	.LVL478:
 9925              	.L881:
 9926              	.LBB526:
 239:sieve_extend.c **** 
 9927              		.loc 1 239 9 is_stmt 1 view .LVU3360
 9928              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9929              		.loc 1 238 88 is_stmt 0 view .LVU3361
 9930 3c02 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 9931              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9932              		.loc 1 239 29 view .LVU3362
 9933 3c06 C462C1F7 		shlx	r9, rcx, rdi	# _105, pattern, patternsize
 9933      C9
 9934              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9935              		.loc 1 239 17 view .LVU3363
 9936 3c0b 4C09C9   		or	rcx, r9	# pattern, _105
 9937              	.LVL479:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9938              		.loc 1 238 76 is_stmt 1 view .LVU3364
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9939              		.loc 1 238 41 view .LVU3365
 9940              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9941              		.loc 1 238 5 is_stmt 0 view .LVU3366
 9942 3c0e 4983FB40 		cmp	r11, 64	# patternsize,
 9943 3c12 0F87A800 		ja	.L880	#,
 9943      0000
 239:sieve_extend.c **** 
 9944              		.loc 1 239 9 is_stmt 1 view .LVU3367
 9945              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9946              		.loc 1 238 88 is_stmt 0 view .LVU3368
 9947 3c18 488D04BD 		lea	rax, 0[0+rdi*4]	# patternsize,
 9947      00000000 
 9948              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9949              		.loc 1 239 29 view .LVU3369
 9950 3c20 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 9950      D1
GAS LISTING /tmp/ccH5HMHD.s 			page 274


 9951              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9952              		.loc 1 239 17 view .LVU3370
 9953 3c25 4809D1   		or	rcx, rdx	# pattern, _105
 9954              	.LVL480:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9955              		.loc 1 238 76 is_stmt 1 view .LVU3371
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9956              		.loc 1 238 41 view .LVU3372
 9957              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9958              		.loc 1 238 5 is_stmt 0 view .LVU3373
 9959 3c28 4883F840 		cmp	rax, 64	# patternsize,
 9960 3c2c 0F878E00 		ja	.L880	#,
 9960      0000
 239:sieve_extend.c **** 
 9961              		.loc 1 239 9 is_stmt 1 view .LVU3374
 9962              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9963              		.loc 1 238 88 is_stmt 0 view .LVU3375
 9964 3c32 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 9964      00000000 
 9965              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9966              		.loc 1 239 29 view .LVU3376
 9967 3c3a C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 9967      F1
 9968              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9969              		.loc 1 239 17 view .LVU3377
 9970 3c3f 4809F1   		or	rcx, rsi	# pattern, _105
 9971              	.LVL481:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9972              		.loc 1 238 76 is_stmt 1 view .LVU3378
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9973              		.loc 1 238 41 view .LVU3379
 9974              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9975              		.loc 1 238 5 is_stmt 0 view .LVU3380
 9976 3c42 4983FA40 		cmp	r10, 64	# patternsize,
 9977 3c46 7778     		ja	.L880	#,
 239:sieve_extend.c **** 
 9978              		.loc 1 239 9 is_stmt 1 view .LVU3381
 9979              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9980              		.loc 1 238 88 is_stmt 0 view .LVU3382
 9981 3c48 4989FB   		mov	r11, rdi	# patternsize, patternsize
 9982              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 9983              		.loc 1 239 29 view .LVU3383
 9984 3c4b C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 9984      C9
 9985              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9986              		.loc 1 238 88 view .LVU3384
 9987 3c50 49C1E304 		sal	r11, 4	# patternsize,
 9988              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccH5HMHD.s 			page 275


 239:sieve_extend.c **** 
 9989              		.loc 1 239 17 view .LVU3385
 9990 3c54 4C09C9   		or	rcx, r9	# pattern, _105
 9991              	.LVL482:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9992              		.loc 1 238 76 is_stmt 1 view .LVU3386
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9993              		.loc 1 238 41 view .LVU3387
 9994              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9995              		.loc 1 238 5 is_stmt 0 view .LVU3388
 9996 3c57 4983FB40 		cmp	r11, 64	# patternsize,
 9997 3c5b 7763     		ja	.L880	#,
 239:sieve_extend.c **** 
 9998              		.loc 1 239 9 is_stmt 1 view .LVU3389
 9999              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10000              		.loc 1 238 88 is_stmt 0 view .LVU3390
 10001 3c5d 4889F8   		mov	rax, rdi	# patternsize, patternsize
 10002              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10003              		.loc 1 239 29 view .LVU3391
 10004 3c60 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10004      D1
 10005              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10006              		.loc 1 238 88 view .LVU3392
 10007 3c65 48C1E005 		sal	rax, 5	# patternsize,
 10008              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10009              		.loc 1 239 17 view .LVU3393
 10010 3c69 4809D1   		or	rcx, rdx	# pattern, _105
 10011              	.LVL483:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10012              		.loc 1 238 76 is_stmt 1 view .LVU3394
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10013              		.loc 1 238 41 view .LVU3395
 10014              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10015              		.loc 1 238 5 is_stmt 0 view .LVU3396
 10016 3c6c 4883F840 		cmp	rax, 64	# patternsize,
 10017 3c70 774E     		ja	.L880	#,
 239:sieve_extend.c **** 
 10018              		.loc 1 239 9 is_stmt 1 view .LVU3397
 10019              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10020              		.loc 1 238 88 is_stmt 0 view .LVU3398
 10021 3c72 4989FA   		mov	r10, rdi	# patternsize, patternsize
 10022              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10023              		.loc 1 239 29 view .LVU3399
 10024 3c75 C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10024      F1
 10025              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10026              		.loc 1 238 88 view .LVU3400
 10027 3c7a 49C1E206 		sal	r10, 6	# patternsize,
GAS LISTING /tmp/ccH5HMHD.s 			page 276


 10028              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10029              		.loc 1 239 17 view .LVU3401
 10030 3c7e 4809F1   		or	rcx, rsi	# pattern, _105
 10031              	.LVL484:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10032              		.loc 1 238 76 is_stmt 1 view .LVU3402
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10033              		.loc 1 238 41 view .LVU3403
 10034              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10035              		.loc 1 238 5 is_stmt 0 view .LVU3404
 10036 3c81 4983FA40 		cmp	r10, 64	# patternsize,
 10037 3c85 7739     		ja	.L880	#,
 239:sieve_extend.c **** 
 10038              		.loc 1 239 9 is_stmt 1 view .LVU3405
 10039              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10040              		.loc 1 238 88 is_stmt 0 view .LVU3406
 10041 3c87 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10042              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10043              		.loc 1 239 29 view .LVU3407
 10044 3c8a C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10044      C9
 10045              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10046              		.loc 1 238 88 view .LVU3408
 10047 3c8f 49C1E307 		sal	r11, 7	# patternsize,
 10048              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10049              		.loc 1 239 17 view .LVU3409
 10050 3c93 4C09C9   		or	rcx, r9	# pattern, _105
 10051              	.LVL485:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10052              		.loc 1 238 76 is_stmt 1 view .LVU3410
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10053              		.loc 1 238 41 view .LVU3411
 10054              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10055              		.loc 1 238 5 is_stmt 0 view .LVU3412
 10056 3c96 4983FB40 		cmp	r11, 64	# patternsize,
 10057 3c9a 7724     		ja	.L880	#,
 239:sieve_extend.c **** 
 10058              		.loc 1 239 9 is_stmt 1 view .LVU3413
 10059              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10060              		.loc 1 238 88 is_stmt 0 view .LVU3414
 10061 3c9c 48C1E708 		sal	rdi, 8	# patternsize,
 10062              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10063              		.loc 1 239 29 view .LVU3415
 10064 3ca0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10064      D1
 10065              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10066              		.loc 1 239 17 view .LVU3416
GAS LISTING /tmp/ccH5HMHD.s 			page 277


 10067 3ca5 4809D1   		or	rcx, rdx	# pattern, _105
 10068              	.LVL486:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10069              		.loc 1 238 76 is_stmt 1 view .LVU3417
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10070              		.loc 1 238 41 view .LVU3418
 10071              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10072              		.loc 1 238 5 is_stmt 0 view .LVU3419
 10073 3ca8 4883FF40 		cmp	rdi, 64	# patternsize,
 10074 3cac 0F8650FF 		jbe	.L881	#,
 10074      FFFF
 10075              	.LVL487:
 10076 3cb2 66662E0F 		.p2align 4
 10076      1F840000 
 10076      0000000F 
 10076      1F00
 10077              		.p2align 3
 10078              	.L880:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10079              		.loc 1 238 5 view .LVU3420
 10080              	.LBE526:
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10081              		.loc 1 244 5 is_stmt 1 view .LVU3421
 10082              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10083              		.loc 1 244 21 is_stmt 0 view .LVU3422
 10084 3cc0 4D89C2   		mov	r10, r8	# range_stop_word, _69
 10085              	# sieve_extend.c:245:     register counter_t range_start_word = wordindex(range_start);
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10086              		.loc 1 245 24 view .LVU3423
 10087 3cc3 4889EE   		mov	rsi, rbp	# range_start_word, index
 10088 3cc6 48C1EE06 		shr	rsi, 6	# range_start_word,
 10089 3cca 4489C0   		mov	eax, r8d	# tmp571, _69
 10090              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10091              		.loc 1 244 21 view .LVU3424
 10092 3ccd 49C1EA06 		shr	r10, 6	# range_stop_word,
 10093              	.LVL488:
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10094              		.loc 1 245 5 is_stmt 1 view .LVU3425
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10095              		.loc 1 246 6 view .LVU3426
 10096 3cd1 4D8D1CF7 		lea	r11, [r15+rsi*8]	# _1228,
 10097              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10098              		.loc 1 246 9 is_stmt 0 view .LVU3427
 10099 3cd5 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10100 3cd8 F7D0     		not	eax	# tmp571
 10101 3cda 4D8B0B   		mov	r9, QWORD PTR [r11]	# pretmp_1229, MEM[(uint64_t *)_1228]
 10102 3cdd 48C7C7FF 		mov	rdi, -1	# tmp1614,
 10102      FFFFFF
 10103 3ce4 C4E2FBF7 		shrx	rdx, rdi, rax	# _1235, tmp1614, tmp571
 10103      D7
 10104              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 10105              		.loc 1 247 47 view .LVU3428
GAS LISTING /tmp/ccH5HMHD.s 			page 278


 10106 3ce9 C4E2D1F7 		shlx	rax, rcx, rbp	# tmp574, pattern, index
 10106      C1
 10107 3cee 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _1235
 10107      28
 10108              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10109              		.loc 1 246 9 view .LVU3429
 10110 3cf3 0F869A08 		jbe	.L1484	#,
 10110      0000
 252:sieve_extend.c **** 
 10111              		.loc 1 252 5 is_stmt 1 view .LVU3430
 10112              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 10113              		.loc 1 252 32 is_stmt 0 view .LVU3431
 10114 3cf9 4C09C8   		or	rax, r9	# tmp578, pretmp_1229
 10115              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10116              		.loc 1 256 80 view .LVU3432
 10117 3cfc BF400000 		mov	edi, 64	# tmp579,
 10117      00
 10118 3d01 31D2     		xor	edx, edx	# tmp580
 10119              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10120              		.loc 1 257 24 view .LVU3433
 10121 3d03 4D89E1   		mov	r9, r12	# pattern_shift, step
 10122              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 10123              		.loc 1 252 32 view .LVU3434
 10124 3d06 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp578
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10125              		.loc 1 256 4 is_stmt 1 view .LVU3435
 10126              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10127              		.loc 1 256 80 is_stmt 0 view .LVU3436
 10128 3d09 4889F8   		mov	rax, rdi	# tmp581, tmp579
 10129 3d0c 49F7F4   		div	r12	# step
 10130              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10131              		.loc 1 258 33 view .LVU3437
 10132 3d0f 4889E8   		mov	rax, rbp	# index, index
 10133 3d12 83E03F   		and	eax, 63	# index,
 10134              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10135              		.loc 1 256 24 view .LVU3438
 10136 3d15 4829D7   		sub	rdi, rdx	# pattern_size, tmp580
 10137              	.LVL489:
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10138              		.loc 1 257 4 is_stmt 1 view .LVU3439
 10139              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10140              		.loc 1 257 24 is_stmt 0 view .LVU3440
 10141 3d18 4929D1   		sub	r9, rdx	# pattern_shift, tmp580
 10142              	.LVL490:
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10143              		.loc 1 258 4 is_stmt 1 view .LVU3441
 10144              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
GAS LISTING /tmp/ccH5HMHD.s 			page 279


 10145              		.loc 1 258 24 is_stmt 0 view .LVU3442
 10146 3d1b 31D2     		xor	edx, edx	# tmp584
 10147 3d1d 49F7F4   		div	r12	# step
 10148              	.LVL491:
 259:sieve_extend.c ****    #pragma unroll
 10149              		.loc 1 259 4 is_stmt 1 view .LVU3443
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10150              		.loc 1 262 4 view .LVU3444
 10151              	.LBB527:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10152              		.loc 1 262 9 view .LVU3445
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10153              		.loc 1 262 24 view .LVU3446
 10154              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10155              		.loc 1 262 4 is_stmt 0 view .LVU3447
 10156 3d20 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10157 3d23 0F847501 		je	.L886	#,
 10157      0000
 10158 3d29 4B8D04D7 		lea	rax, [r15+r10*8]	# _1346,
 10159 3d2d 89FD     		mov	ebp, edi	# _1237, pattern_size
 10160              	.LVL492:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10161              		.loc 1 262 4 view .LVU3448
 10162 3d2f 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, _1346
 10162      48
 10163 3d34 4C29D8   		sub	rax, r11	# tmp851, ivtmp.637
 10164 3d37 4883E808 		sub	rax, 8	# tmp852,
 10165 3d3b 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.635,
 10166              	.LVL493:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10167              		.loc 1 262 4 view .LVU3449
 10168 3d3f 48C1E803 		shr	rax, 3	# tmp850,
 10169 3d43 4C89DF   		mov	rdi, r11	# ivtmp.637, _1228
 10170              	.LVL494:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10171              		.loc 1 262 4 view .LVU3450
 10172 3d46 4883C001 		add	rax, 1	# tmp853,
 10173 3d4a 83E003   		and	eax, 3	# tmp854,
 10174 3d4d 0F849900 		je	.L1427	#,
 10174      0000
 10175 3d53 4883F801 		cmp	rax, 1	# tmp854,
 10176 3d57 7460     		je	.L1188	#,
 10177 3d59 4883F802 		cmp	rax, 2	# tmp854,
 10178 3d5d 7432     		je	.L1189	#,
 10179              	.LVL495:
 10180              	.LBB528:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10181              		.loc 1 263 9 is_stmt 1 view .LVU3451
 264:sieve_extend.c **** 
 10182              		.loc 1 264 8 view .LVU3452
 10183              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10184              		.loc 1 263 20 is_stmt 0 view .LVU3453
 10185 3d5f 4889F0   		mov	rax, rsi	# tmp1171, ivtmp.635
 10186 3d62 31D2     		xor	edx, edx	# totalshift
 10187              	.LVL496:
GAS LISTING /tmp/ccH5HMHD.s 			page 280


 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10188              		.loc 1 263 20 view .LVU3454
 10189 3d64 49F7F4   		div	r12	# step
 10190 3d67 4883C708 		add	rdi, 8	# ivtmp.637,
 10191 3d6b 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10192              	.LVL497:
 10193              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10194              		.loc 1 264 91 view .LVU3455
 10195 3d6e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1172, pattern, totalshift
 10195      C1
 10196              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10197              		.loc 1 264 37 view .LVU3456
 10198 3d73 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1172, MEM[base: _1351, offset: 8B]
 10199 3d77 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tmp1172
 10199      50
 10200              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10201              		.loc 1 264 66 view .LVU3457
 10202 3d7c 89E8     		mov	eax, ebp	# tmp1174, _1237
 10203 3d7e 29D0     		sub	eax, edx	# tmp1174, totalshift
 10204              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10205              		.loc 1 264 50 view .LVU3458
 10206 3d80 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1175, pattern, tmp1174
 10206      D1
 10207              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10208              		.loc 1 264 37 view .LVU3459
 10209 3d85 488B4424 		mov	rax, QWORD PTR 80[rsp]	# tmp1173, %sfp
 10209      50
 10210 3d8a 4809D0   		or	rax, rdx	# tmp1173, tmp1175
 10211 3d8d 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1351, offset: 8B], tmp1176
 10212              	.LBE528:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10213              		.loc 1 262 41 is_stmt 1 view .LVU3460
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10214              		.loc 1 262 24 view .LVU3461
 10215              	.L1189:
 10216              	.LBB529:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10217              		.loc 1 263 9 view .LVU3462
 264:sieve_extend.c **** 
 10218              		.loc 1 264 8 view .LVU3463
 10219              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10220              		.loc 1 263 20 is_stmt 0 view .LVU3464
 10221 3d91 4889F0   		mov	rax, rsi	# tmp1178, ivtmp.635
 10222 3d94 31D2     		xor	edx, edx	# totalshift
 10223 3d96 49F7F4   		div	r12	# step
 10224              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10225              		.loc 1 264 66 view .LVU3465
 10226 3d99 4189EB   		mov	r11d, ebp	# tmp1181, _1237
 10227 3d9c 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10228 3d9f 4883C708 		add	rdi, 8	# ivtmp.637,
GAS LISTING /tmp/ccH5HMHD.s 			page 281


 10229              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10230              		.loc 1 264 91 view .LVU3466
 10231 3da3 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1179, pattern, totalshift
 10231      C1
 10232              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10233              		.loc 1 264 37 view .LVU3467
 10234 3da8 480B07   		or	rax, QWORD PTR [rdi]	# tmp1180, MEM[base: _1351, offset: 8B]
 10235              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10236              		.loc 1 264 66 view .LVU3468
 10237 3dab 4129D3   		sub	r11d, edx	# tmp1181, totalshift
 10238              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10239              		.loc 1 264 50 view .LVU3469
 10240 3dae C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1182, pattern, tmp1181
 10240      D1
 10241              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10242              		.loc 1 264 37 view .LVU3470
 10243 3db3 4809D0   		or	rax, rdx	# tmp1183, tmp1182
 10244 3db6 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1183
 10245              	.LBE529:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10246              		.loc 1 262 41 is_stmt 1 view .LVU3471
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10247              		.loc 1 262 24 view .LVU3472
 10248              	.L1188:
 10249              	.LBB530:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10250              		.loc 1 263 9 view .LVU3473
 264:sieve_extend.c **** 
 10251              		.loc 1 264 8 view .LVU3474
 10252              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10253              		.loc 1 263 20 is_stmt 0 view .LVU3475
 10254 3db9 4889F0   		mov	rax, rsi	# tmp1185, ivtmp.635
 10255 3dbc 31D2     		xor	edx, edx	# totalshift
 10256 3dbe 49F7F4   		div	r12	# step
 10257              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10258              		.loc 1 264 66 view .LVU3476
 10259 3dc1 4189EB   		mov	r11d, ebp	# tmp1188, _1237
 10260 3dc4 4883C708 		add	rdi, 8	# ivtmp.637,
 10261 3dc8 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10262              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10263              		.loc 1 264 91 view .LVU3477
 10264 3dcb C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1186, pattern, totalshift
 10264      C1
 10265              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10266              		.loc 1 264 37 view .LVU3478
 10267 3dd0 480B07   		or	rax, QWORD PTR [rdi]	# tmp1187, MEM[base: _1351, offset: 8B]
 10268              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 282


 10269              		.loc 1 264 66 view .LVU3479
 10270 3dd3 4129D3   		sub	r11d, edx	# tmp1188, totalshift
 10271              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10272              		.loc 1 264 50 view .LVU3480
 10273 3dd6 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1189, pattern, tmp1188
 10273      D1
 10274              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10275              		.loc 1 264 37 view .LVU3481
 10276 3ddb 4809D0   		or	rax, rdx	# tmp1190, tmp1189
 10277 3dde 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1190
 10278              	.LBE530:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10279              		.loc 1 262 41 is_stmt 1 view .LVU3482
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10280              		.loc 1 262 24 view .LVU3483
 10281              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10282              		.loc 1 262 4 is_stmt 0 view .LVU3484
 10283 3de1 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, ivtmp.637
 10283      48
 10284 3de6 0F84B200 		je	.L886	#,
 10284      0000
 10285              	.L1427:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10286              		.loc 1 262 4 view .LVU3485
 10287 3dec 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, _69
 10287      50
 10288 3df1 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# _1346, %sfp
 10288      48
 10289              	.L885:
 10290              	.LBB531:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10291              		.loc 1 263 9 is_stmt 1 view .LVU3486
 264:sieve_extend.c **** 
 10292              		.loc 1 264 8 view .LVU3487
 10293              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10294              		.loc 1 263 20 is_stmt 0 view .LVU3488
 10295 3df6 4889F0   		mov	rax, rsi	# tmp591, ivtmp.635
 10296 3df9 31D2     		xor	edx, edx	# totalshift
 10297 3dfb 49F7F4   		div	r12	# step
 10298              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10299              		.loc 1 264 66 view .LVU3489
 10300 3dfe 4189E8   		mov	r8d, ebp	# tmp594, _1237
 10301 3e01 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10302 3e04 4883C720 		add	rdi, 32	# ivtmp.637,
 10303              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10304              		.loc 1 264 91 view .LVU3490
 10305 3e08 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp592, pattern, totalshift
 10305      C1
 10306              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10307              		.loc 1 264 37 view .LVU3491
GAS LISTING /tmp/ccH5HMHD.s 			page 283


 10308 3e0d 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp593, MEM[base: _1351, offset: 8B]
 10309              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10310              		.loc 1 264 66 view .LVU3492
 10311 3e11 4129D0   		sub	r8d, edx	# tmp594, totalshift
 10312              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10313              		.loc 1 264 50 view .LVU3493
 10314 3e14 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp595, pattern, tmp594
 10314      D1
 10315              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10316              		.loc 1 264 66 view .LVU3494
 10317 3e19 4189E8   		mov	r8d, ebp	# tmp863, _1237
 10318              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10319              		.loc 1 264 37 view .LVU3495
 10320 3e1c 4809D0   		or	rax, rdx	# tmp596, tmp595
 10321              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10322              		.loc 1 263 20 view .LVU3496
 10323 3e1f 31D2     		xor	edx, edx	# totalshift
 10324              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10325              		.loc 1 264 37 view .LVU3497
 10326 3e21 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _1351, offset: 8B], tmp596
 10327              	.LBE531:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10328              		.loc 1 262 41 is_stmt 1 view .LVU3498
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10329              		.loc 1 262 24 view .LVU3499
 10330              	.LBB532:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10331              		.loc 1 263 9 view .LVU3500
 264:sieve_extend.c **** 
 10332              		.loc 1 264 8 view .LVU3501
 10333              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10334              		.loc 1 263 20 is_stmt 0 view .LVU3502
 10335 3e25 4889F0   		mov	rax, rsi	# tmp860, ivtmp.635
 10336 3e28 49F7F4   		div	r12	# step
 10337 3e2b 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10338              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10339              		.loc 1 264 91 view .LVU3503
 10340 3e2e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp861, pattern, totalshift
 10340      C1
 10341              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10342              		.loc 1 264 37 view .LVU3504
 10343 3e33 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp862, MEM[base: _1351, offset: 8B]
 10344              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10345              		.loc 1 264 66 view .LVU3505
 10346 3e37 4129D0   		sub	r8d, edx	# tmp863, totalshift
 10347              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 284


 10348              		.loc 1 264 50 view .LVU3506
 10349 3e3a C4E2BBF7 		shrx	rdx, rcx, r8	# tmp864, pattern, tmp863
 10349      D1
 10350              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10351              		.loc 1 264 66 view .LVU3507
 10352 3e3f 4189E8   		mov	r8d, ebp	# tmp872, _1237
 10353              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10354              		.loc 1 264 37 view .LVU3508
 10355 3e42 4809D0   		or	rax, rdx	# tmp865, tmp864
 10356              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10357              		.loc 1 263 20 view .LVU3509
 10358 3e45 31D2     		xor	edx, edx	# totalshift
 10359              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10360              		.loc 1 264 37 view .LVU3510
 10361 3e47 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _1351, offset: 8B], tmp865
 10362              	.LBE532:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10363              		.loc 1 262 41 is_stmt 1 view .LVU3511
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10364              		.loc 1 262 24 view .LVU3512
 10365              	.LBB533:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10366              		.loc 1 263 9 view .LVU3513
 264:sieve_extend.c **** 
 10367              		.loc 1 264 8 view .LVU3514
 10368              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10369              		.loc 1 263 20 is_stmt 0 view .LVU3515
 10370 3e4b 4889F0   		mov	rax, rsi	# tmp869, ivtmp.635
 10371 3e4e 49F7F4   		div	r12	# step
 10372 3e51 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10373              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10374              		.loc 1 264 91 view .LVU3516
 10375 3e54 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp870, pattern, totalshift
 10375      C1
 10376              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10377              		.loc 1 264 37 view .LVU3517
 10378 3e59 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp871, MEM[base: _1351, offset: 8B]
 10379              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10380              		.loc 1 264 66 view .LVU3518
 10381 3e5d 4129D0   		sub	r8d, edx	# tmp872, totalshift
 10382              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10383              		.loc 1 264 50 view .LVU3519
 10384 3e60 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp873, pattern, tmp872
 10384      D1
 10385              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10386              		.loc 1 264 66 view .LVU3520
 10387 3e65 4189E8   		mov	r8d, ebp	# tmp881, _1237
GAS LISTING /tmp/ccH5HMHD.s 			page 285


 10388              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10389              		.loc 1 264 37 view .LVU3521
 10390 3e68 4809D0   		or	rax, rdx	# tmp874, tmp873
 10391              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10392              		.loc 1 263 20 view .LVU3522
 10393 3e6b 31D2     		xor	edx, edx	# totalshift
 10394              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10395              		.loc 1 264 37 view .LVU3523
 10396 3e6d 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _1351, offset: 8B], tmp874
 10397              	.LBE533:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10398              		.loc 1 262 41 is_stmt 1 view .LVU3524
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10399              		.loc 1 262 24 view .LVU3525
 10400              	.LBB534:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10401              		.loc 1 263 9 view .LVU3526
 264:sieve_extend.c **** 
 10402              		.loc 1 264 8 view .LVU3527
 10403              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10404              		.loc 1 263 20 is_stmt 0 view .LVU3528
 10405 3e71 4889F0   		mov	rax, rsi	# tmp878, ivtmp.635
 10406 3e74 49F7F4   		div	r12	# step
 10407 3e77 4C01CE   		add	rsi, r9	# ivtmp.635, pattern_shift
 10408              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10409              		.loc 1 264 91 view .LVU3529
 10410 3e7a C4E2E9F7 		shlx	rax, rcx, rdx	# tmp879, pattern, totalshift
 10410      C1
 10411              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10412              		.loc 1 264 37 view .LVU3530
 10413 3e7f 480B07   		or	rax, QWORD PTR [rdi]	# tmp880, MEM[base: _1351, offset: 8B]
 10414              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10415              		.loc 1 264 66 view .LVU3531
 10416 3e82 4129D0   		sub	r8d, edx	# tmp881, totalshift
 10417              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10418              		.loc 1 264 50 view .LVU3532
 10419 3e85 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp882, pattern, tmp881
 10419      D1
 10420              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10421              		.loc 1 264 37 view .LVU3533
 10422 3e8a 4809D0   		or	rax, rdx	# tmp883, tmp882
 10423 3e8d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp883
 10424              	.LBE534:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10425              		.loc 1 262 41 is_stmt 1 view .LVU3534
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10426              		.loc 1 262 24 view .LVU3535
 10427              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
GAS LISTING /tmp/ccH5HMHD.s 			page 286


 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10428              		.loc 1 262 4 is_stmt 0 view .LVU3536
 10429 3e90 4939FB   		cmp	r11, rdi	# _1346, ivtmp.637
 10430 3e93 0F855DFF 		jne	.L885	#,
 10430      FFFF
 10431 3e99 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# _69, %sfp
 10431      50
 10432              	.L886:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10433              		.loc 1 262 4 view .LVU3537
 10434              	.LBE527:
 268:sieve_extend.c **** 
 10435              		.loc 1 268 4 is_stmt 1 view .LVU3538
 10436              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 10437              		.loc 1 268 30 is_stmt 0 view .LVU3539
 10438 3e9e 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# _1235, %sfp
 10438      28
 10439              	.LVL498:
 268:sieve_extend.c **** 
 10440              		.loc 1 268 30 view .LVU3540
 10441 3ea3 4F2124D7 		and	QWORD PTR [r15+r10*8], r12	# *_151, _1235
 10442              	.LVL499:
 268:sieve_extend.c **** 
 10443              		.loc 1 268 30 view .LVU3541
 10444              	.LBE524:
 10445              	.LBE523:
 10446              	.LBE575:
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10447              		.loc 1 947 11 is_stmt 1 view .LVU3542
 10448              	# sieve_extend.c:947:     for (;range_stop < block_stop;) {
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10449              		.loc 1 947 5 is_stmt 0 view .LVU3543
 10450 3ea7 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 10450      08
 10451 3eac 0F8204FC 		jb	.L909	#,
 10451      FFFF
 10452              	.L1481:
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10453              		.loc 1 947 5 view .LVU3544
 10454 3eb2 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 10454      30
 10455              	.LVL500:
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10456              		.loc 1 947 5 view .LVU3545
 10457 3eb7 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10458 3eba 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10458      10
 10459              	.LBE581:
 10460              	.LBE589:
 10461              	.LBB590:
 10462              	.LBB591:
 10463              	# sieve_extend.c:842:     if (size < WORD_SIZE_counter)   {
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10464              		.loc 1 842 8 view .LVU3546
 10465 3ebf 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10466              	.LBE591:
GAS LISTING /tmp/ccH5HMHD.s 			page 287


 10467              	.LBE590:
 10468              	.LBB596:
 10469              	.LBB582:
 10470              	# sieve_extend.c:947:     for (;range_stop < block_stop;) {
 947:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10471              		.loc 1 947 5 view .LVU3547
 10472 3ec3 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 10472      28
 973:sieve_extend.c **** }
 10473              		.loc 1 973 5 is_stmt 1 view .LVU3548
 10474              	.LVL501:
 973:sieve_extend.c **** }
 10475              		.loc 1 973 5 is_stmt 0 view .LVU3549
 10476              	.LBE582:
 10477              	.LBE596:
 985:sieve_extend.c ****     prime = block.prime;
 10478              		.loc 1 985 5 is_stmt 1 view .LVU3550
 10479              	.LBB597:
 10480              	.LBI590:
 841:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10481              		.loc 1 841 20 view .LVU3551
 10482              	.LBB592:
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10483              		.loc 1 842 5 view .LVU3552
 10484 3ec8 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_1432, sieve_92->bits
 10485 3ecc 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, prephitmp_1432
 10485      08
 10486              	# sieve_extend.c:842:     if (size < WORD_SIZE_counter)   {
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10487              		.loc 1 842 8 is_stmt 0 view .LVU3553
 10488 3ed1 0F874705 		ja	.L910	#,
 10488      0000
 10489              	.LVL502:
 10490              	.L867:
 843:sieve_extend.c ****         return; // rapid exit for small sizes
 10491              		.loc 1 843 9 is_stmt 1 view .LVU3554
 10492 3ed7 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10492      08
 10493 3edc 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10493      38
 10494 3ee1 E81AC1FF 		call	extendSieve_smallSize	#
 10494      FF
 10495              	.LVL503:
 844:sieve_extend.c ****     }
 10496              		.loc 1 844 9 view .LVU3555
 10497 3ee6 E9600500 		jmp	.L911	#
 10497      00
 10498              	.LVL504:
 10499 3eeb 0F1F4400 		.p2align 4,,7
 10499      00
 10500              		.p2align 3
 10501              	.L902:
 844:sieve_extend.c ****     }
 10502              		.loc 1 844 9 is_stmt 0 view .LVU3556
 10503              	.LBE592:
 10504              	.LBE597:
 10505              	.LBB598:
GAS LISTING /tmp/ccH5HMHD.s 			page 288


 10506              	.LBB583:
 10507              	.LBB576:
 969:sieve_extend.c ****         block.prime = prime;
 10508              		.loc 1 969 48 is_stmt 1 view .LVU3557
 10509              	.LBB537:
 10510              	.LBI537:
 411:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10511              		.loc 1 411 20 view .LVU3558
 10512              	.LBB538:
 412:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10513              		.loc 1 412 5 view .LVU3559
 413:sieve_extend.c **** 
 10514              		.loc 1 413 5 view .LVU3560
 10515              	# sieve_extend.c:413:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 413:sieve_extend.c **** 
 10516              		.loc 1 413 74 is_stmt 0 view .LVU3561
 10517 3ef0 4D89E3   		mov	r11, r12	# tmp625, step
 10518 3ef3 49C1E306 		sal	r11, 6	# tmp625,
 10519              	# sieve_extend.c:413:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 413:sieve_extend.c **** 
 10520              		.loc 1 413 21 view .LVU3562
 10521 3ef7 498D3C2B 		lea	rdi, [r11+rbp]	# range_stop_unique,
 10522              	.LVL505:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10523              		.loc 1 417 5 is_stmt 1 view .LVU3563
 10524              	.LBB539:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10525              		.loc 1 417 10 view .LVU3564
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10526              		.loc 1 417 50 view .LVU3565
 10527              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10528              		.loc 1 417 5 is_stmt 0 view .LVU3566
 10529 3efb 4839FD   		cmp	rbp, rdi	# index, range_stop_unique
 10530 3efe 0F83A7FB 		jnb	.L883	#,
 10530      FFFF
 10531              	.LBB540:
 10532              	.LBB541:
 10533              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10534              		.loc 1 174 20 view .LVU3567
 10535 3f04 4C89C2   		mov	rdx, r8	# range_stop_word, _69
 10536              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10537              		.loc 1 200 29 view .LVU3568
 10538 3f07 4489C6   		mov	esi, r8d	# tmp630, _69
 10539              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10540              		.loc 1 174 20 view .LVU3569
 10541 3f0a 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10542              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10543              		.loc 1 176 110 view .LVU3570
 10544 3f0e 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp628,
 10545              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10546              		.loc 1 200 29 view .LVU3571
GAS LISTING /tmp/ccH5HMHD.s 			page 289


 10547 3f12 49C7C2FF 		mov	r10, -1	# tmp1650,
 10547      FFFFFF
 10548 3f19 F7D6     		not	esi	# tmp630
 10549 3f1b C442CBF7 		shrx	r11, r10, rsi	# _288, tmp1650, tmp630
 10549      DA
 10550              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10551              		.loc 1 176 133 view .LVU3572
 10552 3f20 4889D6   		mov	rsi, rdx	# tmp634, range_stop_word
 10553 3f23 4829C6   		sub	rsi, rax	# tmp634, tmp628
 10554              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10555              		.loc 1 176 53 view .LVU3573
 10556 3f26 4839C2   		cmp	rdx, rax	# range_stop_word, tmp628
 10557              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10558              		.loc 1 200 29 view .LVU3574
 10559 3f29 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, _288
 10559      28
 10560              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10561              		.loc 1 176 53 view .LVU3575
 10562 3f2e 4D8D14F7 		lea	r10, [r15+rsi*8]	# tmp636,
 10563 3f32 4D89E3   		mov	r11, r12	# _1320, step
 10564 3f35 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 10565              	.LBE541:
 10566              	.LBE540:
 10567              	# sieve_extend.c:418:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 418:sieve_extend.c ****     }
 10568              		.loc 1 418 9 view .LVU3576
 10569 3f39 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _69
 10569      48
 10570              	.LBB545:
 10571              	.LBB542:
 10572              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 10573              		.loc 1 182 17 view .LVU3577
 10574 3f3e 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _256,
 10574      00000000 
 10575              	# sieve_extend.c:193:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10576              		.loc 1 193 41 view .LVU3578
 10577 3f46 4D8D0CD7 		lea	r9, [r15+rdx*8]	# range_stop_ptr,
 10578              	.LBE542:
 10579              	.LBE545:
 10580              	# sieve_extend.c:418:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 418:sieve_extend.c ****     }
 10581              		.loc 1 418 9 view .LVU3579
 10582 3f4a 4989F8   		mov	r8, rdi	# range_stop_unique, range_stop_unique
 10583              	.LVL506:
 418:sieve_extend.c ****     }
 10584              		.loc 1 418 9 view .LVU3580
 10585 3f4d 48C1E003 		sal	rax, 3	# tmp640,
 10586 3f51 49C1E304 		sal	r11, 4	# _1320,
 10587              	.LVL507:
 10588 3f55 66662E0F 		.p2align 4
 10588      1F840000 
GAS LISTING /tmp/ccH5HMHD.s 			page 290


 10588      000000
 10589              		.p2align 3
 10590              	.L908:
 418:sieve_extend.c ****     }
 10591              		.loc 1 418 9 is_stmt 1 view .LVU3581
 10592 3f60 4889EA   		mov	rdx, rbp	# tmp643, index
 10593 3f63 BF010000 		mov	edi, 1	# tmp1653,
 10593      00
 10594 3f68 48C1EA06 		shr	rdx, 6	# tmp643,
 10595 3f6c C4E2D1F7 		shlx	rsi, rdi, rbp	# _241, tmp1653, index
 10595      F7
 10596              	.LVL508:
 10597              	.LBB546:
 10598              	.LBI540:
 146:sieve_extend.c **** //#if __APPLE__
 10599              		.loc 1 146 20 view .LVU3582
 10600              	.LBB543:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10601              		.loc 1 174 4 view .LVU3583
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10602              		.loc 1 175 4 view .LVU3584
 10603              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10604              		.loc 1 175 78 is_stmt 0 view .LVU3585
 10605 3f71 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 10606              	.LVL509:
 176:sieve_extend.c **** 
 10607              		.loc 1 176 4 is_stmt 1 view .LVU3586
 180:sieve_extend.c ****        *index_ptr |= mask;
 10608              		.loc 1 180 4 view .LVU3587
 180:sieve_extend.c ****        *index_ptr |= mask;
 10609              		.loc 1 180 10 view .LVU3588
 10610 3f75 4C39D2   		cmp	rdx, r10	# index_ptr, fast_loop_ptr
 10611 3f78 0F830201 		jnb	.L903	#,
 10611      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 10612              		.loc 1 180 10 is_stmt 0 view .LVU3589
 10613 3f7e 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.678,
 10614              	.L904:
 181:sieve_extend.c ****        index_ptr+=step;
 10615              		.loc 1 181 8 is_stmt 1 view .LVU3590
 10616              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10617              		.loc 1 181 19 is_stmt 0 view .LVU3591
 10618 3f82 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10619              		.loc 1 182 8 is_stmt 1 view .LVU3592
 10620              	.LVL510:
 183:sieve_extend.c ****        index_ptr+=step;
 10621              		.loc 1 183 8 view .LVU3593
 10622              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10623              		.loc 1 183 19 is_stmt 0 view .LVU3594
 10624 3f85 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10625              		.loc 1 184 8 is_stmt 1 view .LVU3595
 10626              	.LVL511:
GAS LISTING /tmp/ccH5HMHD.s 			page 291


 185:sieve_extend.c ****        index_ptr+=step;
 10627              		.loc 1 185 8 view .LVU3596
 10628              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10629              		.loc 1 185 19 is_stmt 0 view .LVU3597
 10630 3f89 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10631              		.loc 1 186 8 is_stmt 1 view .LVU3598
 10632              	.LVL512:
 187:sieve_extend.c ****        index_ptr+=step;
 10633              		.loc 1 187 8 view .LVU3599
 10634              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10635              		.loc 1 187 19 is_stmt 0 view .LVU3600
 10636 3f8c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10637              		.loc 1 188 8 is_stmt 1 view .LVU3601
 10638              	.LVL513:
 189:sieve_extend.c ****        index_ptr+=step;
 10639              		.loc 1 189 8 view .LVU3602
 10640 3f90 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10641              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10642              		.loc 1 189 19 is_stmt 0 view .LVU3603
 10643 3f93 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10644              		.loc 1 190 8 is_stmt 1 view .LVU3604
 10645 3f97 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10646              	.LVL514:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10647              		.loc 1 180 10 view .LVU3605
 10648 3f9a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10649 3f9d 0F86DD00 		jbe	.L903	#,
 10649      0000
 181:sieve_extend.c ****        index_ptr+=step;
 10650              		.loc 1 181 8 view .LVU3606
 10651              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10652              		.loc 1 181 19 is_stmt 0 view .LVU3607
 10653 3fa3 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10654              		.loc 1 182 8 is_stmt 1 view .LVU3608
 10655              	.LVL515:
 183:sieve_extend.c ****        index_ptr+=step;
 10656              		.loc 1 183 8 view .LVU3609
 10657              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10658              		.loc 1 183 19 is_stmt 0 view .LVU3610
 10659 3fa6 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10660              		.loc 1 184 8 is_stmt 1 view .LVU3611
 10661              	.LVL516:
 185:sieve_extend.c ****        index_ptr+=step;
 10662              		.loc 1 185 8 view .LVU3612
 10663              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10664              		.loc 1 185 19 is_stmt 0 view .LVU3613
GAS LISTING /tmp/ccH5HMHD.s 			page 292


 10665 3faa 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10666              		.loc 1 186 8 is_stmt 1 view .LVU3614
 10667              	.LVL517:
 187:sieve_extend.c ****        index_ptr+=step;
 10668              		.loc 1 187 8 view .LVU3615
 10669              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10670              		.loc 1 187 19 is_stmt 0 view .LVU3616
 10671 3fad 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10672              		.loc 1 188 8 is_stmt 1 view .LVU3617
 10673              	.LVL518:
 189:sieve_extend.c ****        index_ptr+=step;
 10674              		.loc 1 189 8 view .LVU3618
 10675 3fb1 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10676              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10677              		.loc 1 189 19 is_stmt 0 view .LVU3619
 10678 3fb4 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10679              		.loc 1 190 8 is_stmt 1 view .LVU3620
 10680 3fb8 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10681              	.LVL519:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10682              		.loc 1 180 10 view .LVU3621
 10683 3fbb 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10684 3fbe 0F86BC00 		jbe	.L903	#,
 10684      0000
 181:sieve_extend.c ****        index_ptr+=step;
 10685              		.loc 1 181 8 view .LVU3622
 10686              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10687              		.loc 1 181 19 is_stmt 0 view .LVU3623
 10688 3fc4 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10689              		.loc 1 182 8 is_stmt 1 view .LVU3624
 10690              	.LVL520:
 183:sieve_extend.c ****        index_ptr+=step;
 10691              		.loc 1 183 8 view .LVU3625
 10692              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10693              		.loc 1 183 19 is_stmt 0 view .LVU3626
 10694 3fc7 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10695              		.loc 1 184 8 is_stmt 1 view .LVU3627
 10696              	.LVL521:
 185:sieve_extend.c ****        index_ptr+=step;
 10697              		.loc 1 185 8 view .LVU3628
 10698              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10699              		.loc 1 185 19 is_stmt 0 view .LVU3629
 10700 3fcb 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10701              		.loc 1 186 8 is_stmt 1 view .LVU3630
 10702              	.LVL522:
 187:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 293


 10703              		.loc 1 187 8 view .LVU3631
 10704              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10705              		.loc 1 187 19 is_stmt 0 view .LVU3632
 10706 3fce 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10707              		.loc 1 188 8 is_stmt 1 view .LVU3633
 10708              	.LVL523:
 189:sieve_extend.c ****        index_ptr+=step;
 10709              		.loc 1 189 8 view .LVU3634
 10710 3fd2 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10711              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10712              		.loc 1 189 19 is_stmt 0 view .LVU3635
 10713 3fd5 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10714              		.loc 1 190 8 is_stmt 1 view .LVU3636
 10715 3fd9 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10716              	.LVL524:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10717              		.loc 1 180 10 view .LVU3637
 10718 3fdc 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10719 3fdf 0F869B00 		jbe	.L903	#,
 10719      0000
 181:sieve_extend.c ****        index_ptr+=step;
 10720              		.loc 1 181 8 view .LVU3638
 10721              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10722              		.loc 1 181 19 is_stmt 0 view .LVU3639
 10723 3fe5 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10724              		.loc 1 182 8 is_stmt 1 view .LVU3640
 10725              	.LVL525:
 183:sieve_extend.c ****        index_ptr+=step;
 10726              		.loc 1 183 8 view .LVU3641
 10727              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10728              		.loc 1 183 19 is_stmt 0 view .LVU3642
 10729 3fe8 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10730              		.loc 1 184 8 is_stmt 1 view .LVU3643
 10731              	.LVL526:
 185:sieve_extend.c ****        index_ptr+=step;
 10732              		.loc 1 185 8 view .LVU3644
 10733              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10734              		.loc 1 185 19 is_stmt 0 view .LVU3645
 10735 3fec 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10736              		.loc 1 186 8 is_stmt 1 view .LVU3646
 10737              	.LVL527:
 187:sieve_extend.c ****        index_ptr+=step;
 10738              		.loc 1 187 8 view .LVU3647
 10739              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10740              		.loc 1 187 19 is_stmt 0 view .LVU3648
 10741 3fef 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
GAS LISTING /tmp/ccH5HMHD.s 			page 294


 188:sieve_extend.c ****        *index_ptr |= mask;
 10742              		.loc 1 188 8 is_stmt 1 view .LVU3649
 10743              	.LVL528:
 189:sieve_extend.c ****        index_ptr+=step;
 10744              		.loc 1 189 8 view .LVU3650
 10745 3ff3 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10746              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10747              		.loc 1 189 19 is_stmt 0 view .LVU3651
 10748 3ff6 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10749              		.loc 1 190 8 is_stmt 1 view .LVU3652
 10750 3ffa 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10751              	.LVL529:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10752              		.loc 1 180 10 view .LVU3653
 10753 3ffd 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10754 4000 767E     		jbe	.L903	#,
 181:sieve_extend.c ****        index_ptr+=step;
 10755              		.loc 1 181 8 view .LVU3654
 10756              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10757              		.loc 1 181 19 is_stmt 0 view .LVU3655
 10758 4002 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10759              		.loc 1 182 8 is_stmt 1 view .LVU3656
 10760              	.LVL530:
 183:sieve_extend.c ****        index_ptr+=step;
 10761              		.loc 1 183 8 view .LVU3657
 10762              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10763              		.loc 1 183 19 is_stmt 0 view .LVU3658
 10764 4005 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10765              		.loc 1 184 8 is_stmt 1 view .LVU3659
 10766              	.LVL531:
 185:sieve_extend.c ****        index_ptr+=step;
 10767              		.loc 1 185 8 view .LVU3660
 10768              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10769              		.loc 1 185 19 is_stmt 0 view .LVU3661
 10770 4009 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10771              		.loc 1 186 8 is_stmt 1 view .LVU3662
 10772              	.LVL532:
 187:sieve_extend.c ****        index_ptr+=step;
 10773              		.loc 1 187 8 view .LVU3663
 10774              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10775              		.loc 1 187 19 is_stmt 0 view .LVU3664
 10776 400c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10777              		.loc 1 188 8 is_stmt 1 view .LVU3665
 10778              	.LVL533:
 189:sieve_extend.c ****        index_ptr+=step;
 10779              		.loc 1 189 8 view .LVU3666
 10780 4010 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
GAS LISTING /tmp/ccH5HMHD.s 			page 295


 10781              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10782              		.loc 1 189 19 is_stmt 0 view .LVU3667
 10783 4013 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10784              		.loc 1 190 8 is_stmt 1 view .LVU3668
 10785 4017 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10786              	.LVL534:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10787              		.loc 1 180 10 view .LVU3669
 10788 401a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10789 401d 7661     		jbe	.L903	#,
 181:sieve_extend.c ****        index_ptr+=step;
 10790              		.loc 1 181 8 view .LVU3670
 10791              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10792              		.loc 1 181 19 is_stmt 0 view .LVU3671
 10793 401f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10794              		.loc 1 182 8 is_stmt 1 view .LVU3672
 10795              	.LVL535:
 183:sieve_extend.c ****        index_ptr+=step;
 10796              		.loc 1 183 8 view .LVU3673
 10797              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10798              		.loc 1 183 19 is_stmt 0 view .LVU3674
 10799 4022 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10800              		.loc 1 184 8 is_stmt 1 view .LVU3675
 10801              	.LVL536:
 185:sieve_extend.c ****        index_ptr+=step;
 10802              		.loc 1 185 8 view .LVU3676
 10803              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10804              		.loc 1 185 19 is_stmt 0 view .LVU3677
 10805 4026 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10806              		.loc 1 186 8 is_stmt 1 view .LVU3678
 10807              	.LVL537:
 187:sieve_extend.c ****        index_ptr+=step;
 10808              		.loc 1 187 8 view .LVU3679
 10809              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10810              		.loc 1 187 19 is_stmt 0 view .LVU3680
 10811 4029 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10812              		.loc 1 188 8 is_stmt 1 view .LVU3681
 10813              	.LVL538:
 189:sieve_extend.c ****        index_ptr+=step;
 10814              		.loc 1 189 8 view .LVU3682
 10815 402d 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10816              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10817              		.loc 1 189 19 is_stmt 0 view .LVU3683
 10818 4030 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10819              		.loc 1 190 8 is_stmt 1 view .LVU3684
GAS LISTING /tmp/ccH5HMHD.s 			page 296


 10820 4034 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10821              	.LVL539:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10822              		.loc 1 180 10 view .LVU3685
 10823 4037 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10824 403a 7644     		jbe	.L903	#,
 181:sieve_extend.c ****        index_ptr+=step;
 10825              		.loc 1 181 8 view .LVU3686
 10826              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10827              		.loc 1 181 19 is_stmt 0 view .LVU3687
 10828 403c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10829              		.loc 1 182 8 is_stmt 1 view .LVU3688
 10830              	.LVL540:
 183:sieve_extend.c ****        index_ptr+=step;
 10831              		.loc 1 183 8 view .LVU3689
 10832              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10833              		.loc 1 183 19 is_stmt 0 view .LVU3690
 10834 403f 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10835              		.loc 1 184 8 is_stmt 1 view .LVU3691
 10836              	.LVL541:
 185:sieve_extend.c ****        index_ptr+=step;
 10837              		.loc 1 185 8 view .LVU3692
 10838              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10839              		.loc 1 185 19 is_stmt 0 view .LVU3693
 10840 4043 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10841              		.loc 1 186 8 is_stmt 1 view .LVU3694
 10842              	.LVL542:
 187:sieve_extend.c ****        index_ptr+=step;
 10843              		.loc 1 187 8 view .LVU3695
 10844              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10845              		.loc 1 187 19 is_stmt 0 view .LVU3696
 10846 4046 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10847              		.loc 1 188 8 is_stmt 1 view .LVU3697
 10848              	.LVL543:
 189:sieve_extend.c ****        index_ptr+=step;
 10849              		.loc 1 189 8 view .LVU3698
 10850 404a 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10851              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10852              		.loc 1 189 19 is_stmt 0 view .LVU3699
 10853 404d 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10854              		.loc 1 190 8 is_stmt 1 view .LVU3700
 10855 4051 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10856              	.LVL544:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10857              		.loc 1 180 10 view .LVU3701
 10858 4054 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10859 4057 7627     		jbe	.L903	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 297


 181:sieve_extend.c ****        index_ptr+=step;
 10860              		.loc 1 181 8 view .LVU3702
 10861              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10862              		.loc 1 181 19 is_stmt 0 view .LVU3703
 10863 4059 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10864              		.loc 1 182 8 is_stmt 1 view .LVU3704
 10865              	.LVL545:
 183:sieve_extend.c ****        index_ptr+=step;
 10866              		.loc 1 183 8 view .LVU3705
 10867              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10868              		.loc 1 183 19 is_stmt 0 view .LVU3706
 10869 405c 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10870              		.loc 1 184 8 is_stmt 1 view .LVU3707
 10871              	.LVL546:
 185:sieve_extend.c ****        index_ptr+=step;
 10872              		.loc 1 185 8 view .LVU3708
 10873              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10874              		.loc 1 185 19 is_stmt 0 view .LVU3709
 10875 4060 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10876              		.loc 1 186 8 is_stmt 1 view .LVU3710
 10877              	.LVL547:
 187:sieve_extend.c ****        index_ptr+=step;
 10878              		.loc 1 187 8 view .LVU3711
 10879              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10880              		.loc 1 187 19 is_stmt 0 view .LVU3712
 10881 4063 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10882              		.loc 1 188 8 is_stmt 1 view .LVU3713
 10883              	.LVL548:
 189:sieve_extend.c ****        index_ptr+=step;
 10884              		.loc 1 189 8 view .LVU3714
 10885 4067 4801C7   		add	rdi, rax	# ivtmp.678, tmp640
 10886              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10887              		.loc 1 189 19 is_stmt 0 view .LVU3715
 10888 406a 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10889              		.loc 1 190 8 is_stmt 1 view .LVU3716
 10890 406e 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10891              	.LVL549:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10892              		.loc 1 180 10 view .LVU3717
 10893 4071 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10894 4074 0F8708FF 		ja	.L904	#,
 10894      FFFF
 10895 407a 660F1F44 		.p2align 4
 10895      0000
 10896              		.p2align 3
 10897              	.L903:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/ccH5HMHD.s 			page 298


 10898              		.loc 1 193 4 view .LVU3718
 194:sieve_extend.c ****        *index_ptr |= mask;
 10899              		.loc 1 194 4 view .LVU3719
 194:sieve_extend.c ****        *index_ptr |= mask;
 10900              		.loc 1 194 10 view .LVU3720
 10901 4080 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10902 4083 765B     		jbe	.L905	#,
 10903              	.L906:
 195:sieve_extend.c ****        index_ptr+=step;
 10904              		.loc 1 195 8 view .LVU3721
 10905              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10906              		.loc 1 195 19 is_stmt 0 view .LVU3722
 10907 4085 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10908              		.loc 1 196 8 is_stmt 1 view .LVU3723
 10909              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10910              		.loc 1 196 17 is_stmt 0 view .LVU3724
 10911 4088 4801CA   		add	rdx, rcx	# index_ptr, _256
 10912              	.LVL550:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10913              		.loc 1 194 10 is_stmt 1 view .LVU3725
 10914 408b 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10915 408e 7650     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10916              		.loc 1 195 8 view .LVU3726
 10917              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10918              		.loc 1 195 19 is_stmt 0 view .LVU3727
 10919 4090 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10920              		.loc 1 196 8 is_stmt 1 view .LVU3728
 10921              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10922              		.loc 1 196 17 is_stmt 0 view .LVU3729
 10923 4093 4801CA   		add	rdx, rcx	# index_ptr, _256
 10924              	.LVL551:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10925              		.loc 1 194 10 is_stmt 1 view .LVU3730
 10926 4096 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10927 4099 7645     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10928              		.loc 1 195 8 view .LVU3731
 10929              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10930              		.loc 1 195 19 is_stmt 0 view .LVU3732
 10931 409b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10932              		.loc 1 196 8 is_stmt 1 view .LVU3733
 10933              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10934              		.loc 1 196 17 is_stmt 0 view .LVU3734
 10935 409e 4801CA   		add	rdx, rcx	# index_ptr, _256
 10936              	.LVL552:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10937              		.loc 1 194 10 is_stmt 1 view .LVU3735
GAS LISTING /tmp/ccH5HMHD.s 			page 299


 10938 40a1 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10939 40a4 763A     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10940              		.loc 1 195 8 view .LVU3736
 10941              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10942              		.loc 1 195 19 is_stmt 0 view .LVU3737
 10943 40a6 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10944              		.loc 1 196 8 is_stmt 1 view .LVU3738
 10945              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10946              		.loc 1 196 17 is_stmt 0 view .LVU3739
 10947 40a9 4801CA   		add	rdx, rcx	# index_ptr, _256
 10948              	.LVL553:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10949              		.loc 1 194 10 is_stmt 1 view .LVU3740
 10950 40ac 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10951 40af 762F     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10952              		.loc 1 195 8 view .LVU3741
 10953              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10954              		.loc 1 195 19 is_stmt 0 view .LVU3742
 10955 40b1 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10956              		.loc 1 196 8 is_stmt 1 view .LVU3743
 10957              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10958              		.loc 1 196 17 is_stmt 0 view .LVU3744
 10959 40b4 4801CA   		add	rdx, rcx	# index_ptr, _256
 10960              	.LVL554:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10961              		.loc 1 194 10 is_stmt 1 view .LVU3745
 10962 40b7 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10963 40ba 7624     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10964              		.loc 1 195 8 view .LVU3746
 10965              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10966              		.loc 1 195 19 is_stmt 0 view .LVU3747
 10967 40bc 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10968              		.loc 1 196 8 is_stmt 1 view .LVU3748
 10969              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10970              		.loc 1 196 17 is_stmt 0 view .LVU3749
 10971 40bf 4801CA   		add	rdx, rcx	# index_ptr, _256
 10972              	.LVL555:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10973              		.loc 1 194 10 is_stmt 1 view .LVU3750
 10974 40c2 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10975 40c5 7619     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10976              		.loc 1 195 8 view .LVU3751
 10977              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 300


 10978              		.loc 1 195 19 is_stmt 0 view .LVU3752
 10979 40c7 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10980              		.loc 1 196 8 is_stmt 1 view .LVU3753
 10981              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10982              		.loc 1 196 17 is_stmt 0 view .LVU3754
 10983 40ca 4801CA   		add	rdx, rcx	# index_ptr, _256
 10984              	.LVL556:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10985              		.loc 1 194 10 is_stmt 1 view .LVU3755
 10986 40cd 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10987 40d0 760E     		jbe	.L905	#,
 195:sieve_extend.c ****        index_ptr+=step;
 10988              		.loc 1 195 8 view .LVU3756
 10989              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 10990              		.loc 1 195 19 is_stmt 0 view .LVU3757
 10991 40d2 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 10992              		.loc 1 196 8 is_stmt 1 view .LVU3758
 10993              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 10994              		.loc 1 196 17 is_stmt 0 view .LVU3759
 10995 40d5 4801CA   		add	rdx, rcx	# index_ptr, _256
 10996              	.LVL557:
 194:sieve_extend.c ****        *index_ptr |= mask;
 10997              		.loc 1 194 10 is_stmt 1 view .LVU3760
 10998 40d8 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10999 40db 77A8     		ja	.L906	#,
 11000 40dd 0F1F00   		.p2align 4
 11001              		.p2align 3
 11002              	.L905:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11003              		.loc 1 199 4 view .LVU3761
 11004              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11005              		.loc 1 199 7 is_stmt 0 view .LVU3762
 11006 40e0 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11007 40e3 741B     		je	.L1485	#,
 11008              	.LVL558:
 11009              	.L907:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11010              		.loc 1 199 7 view .LVU3763
 11011              	.LBE543:
 11012              	.LBE546:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11013              		.loc 1 417 77 is_stmt 1 view .LVU3764
 11014              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11015              		.loc 1 417 83 is_stmt 0 view .LVU3765
 11016 40e5 4C01E5   		add	rbp, r12	# index, step
 11017              	.LVL559:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11018              		.loc 1 417 50 is_stmt 1 view .LVU3766
 11019              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
GAS LISTING /tmp/ccH5HMHD.s 			page 301


 11020              		.loc 1 417 5 is_stmt 0 view .LVU3767
 11021 40e8 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 11022 40eb 0F876FFE 		ja	.L908	#,
 11022      FFFF
 11023 40f1 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# _69, %sfp
 11023      48
 11024              	.LVL560:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11025              		.loc 1 417 5 view .LVU3768
 11026 40f6 E9B0F9FF 		jmp	.L883	#
 11026      FF
 11027              	.LVL561:
 11028 40fb 0F1F4400 		.p2align 4,,7
 11028      00
 11029              		.p2align 3
 11030              	.L1485:
 11031              	.LBB547:
 11032              	.LBB544:
 200:sieve_extend.c ****    }
 11033              		.loc 1 200 7 is_stmt 1 view .LVU3769
 11034              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11035              		.loc 1 200 27 is_stmt 0 view .LVU3770
 11036 4100 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp645, %sfp
 11036      28
 11037              	.LVL562:
 11038              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11039              		.loc 1 200 18 view .LVU3771
 11040 4105 490931   		or	QWORD PTR [r9], rsi	# *index_ptr_918, tmp645
 11041 4108 EBDB     		jmp	.L907	#
 11042              	.LVL563:
 11043 410a 660F1F44 		.p2align 4,,7
 11043      0000
 11044              		.p2align 3
 11045              	.L1480:
 200:sieve_extend.c ****    }
 11046              		.loc 1 200 18 view .LVU3772
 11047              	.LBE544:
 11048              	.LBE547:
 11049              	.LBE539:
 11050              	.LBE538:
 11051              	.LBE537:
 967:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 11052              		.loc 1 967 48 is_stmt 1 view .LVU3773
 11053              	.LBB548:
 11054              	.LBI548:
 296:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11055              		.loc 1 296 14 view .LVU3774
 11056              	.LBB549:
 297:sieve_extend.c **** 
 11057              		.loc 1 297 5 view .LVU3775
 11058              	# sieve_extend.c:297:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 297:sieve_extend.c **** 
 11059              		.loc 1 297 74 is_stmt 0 view .LVU3776
 11060 4110 4C89E7   		mov	rdi, r12	# tmp597, step
 11061 4113 48C1E706 		sal	rdi, 6	# tmp597,
GAS LISTING /tmp/ccH5HMHD.s 			page 302


 11062 4117 4801EF   		add	rdi, rbp	# tmp597, index
 11063 411a 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp598
 11063      48
 11064 411f 0F92C0   		setc	al	#, _592
 11065              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11066              		.loc 1 299 8 view .LVU3777
 11067 4122 4939F8   		cmp	r8, rdi	# _69, tmp598
 11068 4125 440FB6C8 		movzx	r9d, al	# _592, _592
 11069              	.LVL564:
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11070              		.loc 1 299 5 is_stmt 1 view .LVU3778
 11071              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11072              		.loc 1 299 8 is_stmt 0 view .LVU3779
 11073 4129 0F827404 		jb	.L890	#,
 11073      0000
 11074              	.LVL565:
 11075              	.LBB550:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11076              		.loc 1 320 54 is_stmt 1 view .LVU3780
 11077              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11078              		.loc 1 320 9 is_stmt 0 view .LVU3781
 11079 412f 4D85C9   		test	r9, r9	# _592
 11080 4132 0F8573F9 		jne	.L883	#,
 11080      FFFF
 11081              	.LBB551:
 11082              	.LBB552:
 11083              	.LBB553:
 11084              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11085              		.loc 1 174 20 view .LVU3782
 11086 4138 4D89C3   		mov	r11, r8	# range_stop_word, _69
 11087              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 11088              		.loc 1 176 110 view .LVU3783
 11089 413b 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp606,
 11090              	.LVL566:
 11091              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11092              		.loc 1 174 20 view .LVU3784
 11093 413f 49C1EB06 		shr	r11, 6	# range_stop_word,
 11094              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11095              		.loc 1 200 29 view .LVU3785
 11096 4143 4589C2   		mov	r10d, r8d	# tmp608, _69
 11097              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 11098              		.loc 1 176 133 view .LVU3786
 11099 4146 4C89D8   		mov	rax, r11	# tmp612, range_stop_word
 11100              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11101              		.loc 1 200 29 view .LVU3787
 11102 4149 41F7D2   		not	r10d	# tmp608
 11103              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 303


 11104              		.loc 1 176 133 view .LVU3788
 11105 414c 4829F8   		sub	rax, rdi	# tmp612, tmp606
 11106 414f 4939FB   		cmp	r11, rdi	# range_stop_word, tmp606
 11107              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11108              		.loc 1 200 29 view .LVU3789
 11109 4152 48C7C6FF 		mov	rsi, -1	# tmp1638,
 11109      FFFFFF
 11110 4159 C4E2ABF7 		shrx	rdx, rsi, r10	# _232, tmp1638, tmp608
 11110      D6
 11111 415e 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp614,
 11112 4162 4C89E6   		mov	rsi, r12	# _1339, step
 11113 4165 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 11114              	# sieve_extend.c:193:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11115              		.loc 1 193 41 view .LVU3790
 11116 4169 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 11117 416d 48C1E604 		sal	rsi, 4	# _1339,
 11118              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 11119              		.loc 1 182 17 view .LVU3791
 11120 4171 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _200,
 11120      00000000 
 11121              	.LBE553:
 11122              	.LBE552:
 11123              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11124              		.loc 1 325 25 view .LVU3792
 11125 4179 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 11125      50
 11126 417e 41BB0100 		mov	r11d, 1	# tmp621,
 11126      0000
 11127 4184 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, _69
 11127      58
 11128 4189 4889F3   		mov	rbx, rsi	# _1339, _1339
 11129              	.LBB557:
 11130              	.LBB554:
 11131              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11132              		.loc 1 200 29 view .LVU3793
 11133 418c 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _232
 11133      28
 11134 4191 48C1E703 		sal	rdi, 3	# tmp618,
 11135              	.LBE554:
 11136              	.LBE557:
 11137              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11138              		.loc 1 325 25 view .LVU3794
 11139 4195 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# tmp598, %sfp
 11139      48
 11140              	.LVL567:
 11141 419a 660F1F44 		.p2align 4
 11141      0000
 11142              		.p2align 3
 11143              	.L901:
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11144              		.loc 1 321 13 is_stmt 1 view .LVU3795
GAS LISTING /tmp/ccH5HMHD.s 			page 304


 11145              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11146              		.loc 1 321 32 is_stmt 0 view .LVU3796
 11147 41a0 4889E8   		mov	rax, rbp	# index_word, index
 11148              	# sieve_extend.c:322:             register bitword_t mask = SAFE_ZERO;
 322:sieve_extend.c ****             #pragma ivdep
 11149              		.loc 1 322 32 view .LVU3797
 11150 41a3 31D2     		xor	edx, edx	# mask
 11151              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11152              		.loc 1 321 32 view .LVU3798
 11153 41a5 48C1E806 		shr	rax, 6	# index_word,
 11154              	.LVL568:
 322:sieve_extend.c ****             #pragma ivdep
 11155              		.loc 1 322 13 is_stmt 1 view .LVU3799
 11156              	.L895:
 324:sieve_extend.c ****                 mask |= markmask(index);
 11157              		.loc 1 324 13 view .LVU3800
 325:sieve_extend.c ****                 index += step;
 11158              		.loc 1 325 17 view .LVU3801
 11159              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11160              		.loc 1 325 25 is_stmt 0 view .LVU3802
 11161 41a9 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp620, tmp621, index
 11161      F3
 11162              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11163              		.loc 1 326 23 view .LVU3803
 11164 41ae 4C01E5   		add	rbp, r12	# index, step
 11165              	.LVL569:
 11166              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11167              		.loc 1 325 22 view .LVU3804
 11168 41b1 4809F2   		or	rdx, rsi	# mask, tmp620
 11169              	.LVL570:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11170              		.loc 1 326 17 is_stmt 1 view .LVU3805
 327:sieve_extend.c ****             // #pragma ivdep
 11171              		.loc 1 327 21 view .LVU3806
 11172              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11173              		.loc 1 327 36 is_stmt 0 view .LVU3807
 11174 41b4 4889EE   		mov	rsi, rbp	# tmp622, index
 11175 41b7 48C1EE06 		shr	rsi, 6	# tmp622,
 11176              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11177              		.loc 1 327 13 view .LVU3808
 11178 41bb 4839F0   		cmp	rax, rsi	# index_word, tmp622
 11179 41be 0F85AC00 		jne	.L1341	#,
 11179      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 11180              		.loc 1 324 13 is_stmt 1 view .LVU3809
 325:sieve_extend.c ****                 index += step;
 11181              		.loc 1 325 17 view .LVU3810
 11182              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11183              		.loc 1 325 25 is_stmt 0 view .LVU3811
GAS LISTING /tmp/ccH5HMHD.s 			page 305


 11184 41c4 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1224, tmp621, index
 11184      F3
 11185              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11186              		.loc 1 326 23 view .LVU3812
 11187 41c9 4C01E5   		add	rbp, r12	# index, step
 11188              	.LVL571:
 11189              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11190              		.loc 1 325 22 view .LVU3813
 11191 41cc 4809F2   		or	rdx, rsi	# mask, tmp1224
 11192              	.LVL572:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11193              		.loc 1 326 17 is_stmt 1 view .LVU3814
 327:sieve_extend.c ****             // #pragma ivdep
 11194              		.loc 1 327 21 view .LVU3815
 11195              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11196              		.loc 1 327 36 is_stmt 0 view .LVU3816
 11197 41cf 4889EE   		mov	rsi, rbp	# tmp1225, index
 11198 41d2 48C1EE06 		shr	rsi, 6	# tmp1225,
 11199              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11200              		.loc 1 327 13 view .LVU3817
 11201 41d6 4839F0   		cmp	rax, rsi	# index_word, tmp1225
 11202 41d9 0F859100 		jne	.L1341	#,
 11202      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 11203              		.loc 1 324 13 is_stmt 1 view .LVU3818
 325:sieve_extend.c ****                 index += step;
 11204              		.loc 1 325 17 view .LVU3819
 11205              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11206              		.loc 1 325 25 is_stmt 0 view .LVU3820
 11207 41df C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1226, tmp621, index
 11207      F3
 11208              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11209              		.loc 1 326 23 view .LVU3821
 11210 41e4 4C01E5   		add	rbp, r12	# index, step
 11211              	.LVL573:
 11212              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11213              		.loc 1 325 22 view .LVU3822
 11214 41e7 4809F2   		or	rdx, rsi	# mask, tmp1226
 11215              	.LVL574:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11216              		.loc 1 326 17 is_stmt 1 view .LVU3823
 327:sieve_extend.c ****             // #pragma ivdep
 11217              		.loc 1 327 21 view .LVU3824
 11218              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11219              		.loc 1 327 36 is_stmt 0 view .LVU3825
 11220 41ea 4889EE   		mov	rsi, rbp	# tmp1227, index
 11221 41ed 48C1EE06 		shr	rsi, 6	# tmp1227,
 11222              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
GAS LISTING /tmp/ccH5HMHD.s 			page 306


 11223              		.loc 1 327 13 view .LVU3826
 11224 41f1 4839F0   		cmp	rax, rsi	# index_word, tmp1227
 11225 41f4 757A     		jne	.L1341	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11226              		.loc 1 324 13 is_stmt 1 view .LVU3827
 325:sieve_extend.c ****                 index += step;
 11227              		.loc 1 325 17 view .LVU3828
 11228              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11229              		.loc 1 325 25 is_stmt 0 view .LVU3829
 11230 41f6 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1228, tmp621, index
 11230      F3
 11231              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11232              		.loc 1 326 23 view .LVU3830
 11233 41fb 4C01E5   		add	rbp, r12	# index, step
 11234              	.LVL575:
 11235              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11236              		.loc 1 325 22 view .LVU3831
 11237 41fe 4809F2   		or	rdx, rsi	# mask, tmp1228
 11238              	.LVL576:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11239              		.loc 1 326 17 is_stmt 1 view .LVU3832
 327:sieve_extend.c ****             // #pragma ivdep
 11240              		.loc 1 327 21 view .LVU3833
 11241              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11242              		.loc 1 327 36 is_stmt 0 view .LVU3834
 11243 4201 4889EE   		mov	rsi, rbp	# tmp1229, index
 11244 4204 48C1EE06 		shr	rsi, 6	# tmp1229,
 11245              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11246              		.loc 1 327 13 view .LVU3835
 11247 4208 4839F0   		cmp	rax, rsi	# index_word, tmp1229
 11248 420b 7563     		jne	.L1341	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11249              		.loc 1 324 13 is_stmt 1 view .LVU3836
 325:sieve_extend.c ****                 index += step;
 11250              		.loc 1 325 17 view .LVU3837
 11251              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11252              		.loc 1 325 25 is_stmt 0 view .LVU3838
 11253 420d C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1230, tmp621, index
 11253      F3
 11254              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11255              		.loc 1 326 23 view .LVU3839
 11256 4212 4C01E5   		add	rbp, r12	# index, step
 11257              	.LVL577:
 11258              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11259              		.loc 1 325 22 view .LVU3840
 11260 4215 4809F2   		or	rdx, rsi	# mask, tmp1230
 11261              	.LVL578:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11262              		.loc 1 326 17 is_stmt 1 view .LVU3841
GAS LISTING /tmp/ccH5HMHD.s 			page 307


 327:sieve_extend.c ****             // #pragma ivdep
 11263              		.loc 1 327 21 view .LVU3842
 11264              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11265              		.loc 1 327 36 is_stmt 0 view .LVU3843
 11266 4218 4889EE   		mov	rsi, rbp	# tmp1231, index
 11267 421b 48C1EE06 		shr	rsi, 6	# tmp1231,
 11268              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11269              		.loc 1 327 13 view .LVU3844
 11270 421f 4839F0   		cmp	rax, rsi	# index_word, tmp1231
 11271 4222 754C     		jne	.L1341	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11272              		.loc 1 324 13 is_stmt 1 view .LVU3845
 325:sieve_extend.c ****                 index += step;
 11273              		.loc 1 325 17 view .LVU3846
 11274              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11275              		.loc 1 325 25 is_stmt 0 view .LVU3847
 11276 4224 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1232, tmp621, index
 11276      F3
 11277              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11278              		.loc 1 326 23 view .LVU3848
 11279 4229 4C01E5   		add	rbp, r12	# index, step
 11280              	.LVL579:
 11281              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11282              		.loc 1 325 22 view .LVU3849
 11283 422c 4809F2   		or	rdx, rsi	# mask, tmp1232
 11284              	.LVL580:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11285              		.loc 1 326 17 is_stmt 1 view .LVU3850
 327:sieve_extend.c ****             // #pragma ivdep
 11286              		.loc 1 327 21 view .LVU3851
 11287              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11288              		.loc 1 327 36 is_stmt 0 view .LVU3852
 11289 422f 4889EE   		mov	rsi, rbp	# tmp1233, index
 11290 4232 48C1EE06 		shr	rsi, 6	# tmp1233,
 11291              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11292              		.loc 1 327 13 view .LVU3853
 11293 4236 4839F0   		cmp	rax, rsi	# index_word, tmp1233
 11294 4239 7535     		jne	.L1341	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11295              		.loc 1 324 13 is_stmt 1 view .LVU3854
 325:sieve_extend.c ****                 index += step;
 11296              		.loc 1 325 17 view .LVU3855
 11297              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11298              		.loc 1 325 25 is_stmt 0 view .LVU3856
 11299 423b C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1234, tmp621, index
 11299      F3
 11300              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11301              		.loc 1 326 23 view .LVU3857
GAS LISTING /tmp/ccH5HMHD.s 			page 308


 11302 4240 4C01E5   		add	rbp, r12	# index, step
 11303              	.LVL581:
 11304              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11305              		.loc 1 325 22 view .LVU3858
 11306 4243 4809F2   		or	rdx, rsi	# mask, tmp1234
 11307              	.LVL582:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11308              		.loc 1 326 17 is_stmt 1 view .LVU3859
 327:sieve_extend.c ****             // #pragma ivdep
 11309              		.loc 1 327 21 view .LVU3860
 11310              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11311              		.loc 1 327 36 is_stmt 0 view .LVU3861
 11312 4246 4889EE   		mov	rsi, rbp	# tmp1235, index
 11313 4249 48C1EE06 		shr	rsi, 6	# tmp1235,
 11314              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11315              		.loc 1 327 13 view .LVU3862
 11316 424d 4839F0   		cmp	rax, rsi	# index_word, tmp1235
 11317 4250 751E     		jne	.L1341	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11318              		.loc 1 324 13 is_stmt 1 view .LVU3863
 325:sieve_extend.c ****                 index += step;
 11319              		.loc 1 325 17 view .LVU3864
 11320              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11321              		.loc 1 325 25 is_stmt 0 view .LVU3865
 11322 4252 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1236, tmp621, index
 11322      F3
 11323              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11324              		.loc 1 326 23 view .LVU3866
 11325 4257 4C01E5   		add	rbp, r12	# index, step
 11326              	.LVL583:
 11327              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11328              		.loc 1 325 22 view .LVU3867
 11329 425a 4809F2   		or	rdx, rsi	# mask, tmp1236
 11330              	.LVL584:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11331              		.loc 1 326 17 is_stmt 1 view .LVU3868
 327:sieve_extend.c ****             // #pragma ivdep
 11332              		.loc 1 327 21 view .LVU3869
 11333              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11334              		.loc 1 327 36 is_stmt 0 view .LVU3870
 11335 425d 4889EE   		mov	rsi, rbp	# tmp1237, index
 11336 4260 48C1EE06 		shr	rsi, 6	# tmp1237,
 11337              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11338              		.loc 1 327 13 view .LVU3871
 11339 4264 4839F0   		cmp	rax, rsi	# index_word, tmp1237
 11340 4267 0F843CFF 		je	.L895	#,
 11340      FFFF
 11341 426d 0F1F00   		.p2align 4
 11342              		.p2align 3
GAS LISTING /tmp/ccH5HMHD.s 			page 309


 11343              	.L1341:
 331:sieve_extend.c ****         }
 11344              		.loc 1 331 13 is_stmt 1 view .LVU3872
 11345              	.LVL585:
 11346              	.LBB558:
 11347              	.LBI552:
 146:sieve_extend.c **** //#if __APPLE__
 11348              		.loc 1 146 20 view .LVU3873
 11349              	.LBB555:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11350              		.loc 1 174 4 view .LVU3874
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11351              		.loc 1 175 4 view .LVU3875
 11352              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11353              		.loc 1 175 78 is_stmt 0 view .LVU3876
 11354 4270 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11355              	.LVL586:
 176:sieve_extend.c **** 
 11356              		.loc 1 176 4 is_stmt 1 view .LVU3877
 180:sieve_extend.c ****        *index_ptr |= mask;
 11357              		.loc 1 180 4 view .LVU3878
 180:sieve_extend.c ****        *index_ptr |= mask;
 11358              		.loc 1 180 10 view .LVU3879
 11359 4274 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11360 4277 0F830301 		jnb	.L896	#,
 11360      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 11361              		.loc 1 180 10 is_stmt 0 view .LVU3880
 11362 427d 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.656,
 11363              	.L897:
 181:sieve_extend.c ****        index_ptr+=step;
 11364              		.loc 1 181 8 is_stmt 1 view .LVU3881
 11365              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11366              		.loc 1 181 19 is_stmt 0 view .LVU3882
 11367 4281 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11368              		.loc 1 182 8 is_stmt 1 view .LVU3883
 11369              	.LVL587:
 183:sieve_extend.c ****        index_ptr+=step;
 11370              		.loc 1 183 8 view .LVU3884
 11371              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11372              		.loc 1 183 19 is_stmt 0 view .LVU3885
 11373 4284 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11374              		.loc 1 184 8 is_stmt 1 view .LVU3886
 11375              	.LVL588:
 185:sieve_extend.c ****        index_ptr+=step;
 11376              		.loc 1 185 8 view .LVU3887
 11377              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11378              		.loc 1 185 19 is_stmt 0 view .LVU3888
 11379 4288 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11380              		.loc 1 186 8 is_stmt 1 view .LVU3889
GAS LISTING /tmp/ccH5HMHD.s 			page 310


 11381              	.LVL589:
 187:sieve_extend.c ****        index_ptr+=step;
 11382              		.loc 1 187 8 view .LVU3890
 11383              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11384              		.loc 1 187 19 is_stmt 0 view .LVU3891
 11385 428b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11386              		.loc 1 188 8 is_stmt 1 view .LVU3892
 11387              	.LVL590:
 189:sieve_extend.c ****        index_ptr+=step;
 11388              		.loc 1 189 8 view .LVU3893
 11389 428f 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11390              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11391              		.loc 1 189 19 is_stmt 0 view .LVU3894
 11392 4292 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11393              		.loc 1 190 8 is_stmt 1 view .LVU3895
 11394 4296 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11395              	.LVL591:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11396              		.loc 1 180 10 view .LVU3896
 11397 4299 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11398 429c 0F86DE00 		jbe	.L896	#,
 11398      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11399              		.loc 1 181 8 view .LVU3897
 11400              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11401              		.loc 1 181 19 is_stmt 0 view .LVU3898
 11402 42a2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11403              		.loc 1 182 8 is_stmt 1 view .LVU3899
 11404              	.LVL592:
 183:sieve_extend.c ****        index_ptr+=step;
 11405              		.loc 1 183 8 view .LVU3900
 11406              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11407              		.loc 1 183 19 is_stmt 0 view .LVU3901
 11408 42a5 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11409              		.loc 1 184 8 is_stmt 1 view .LVU3902
 11410              	.LVL593:
 185:sieve_extend.c ****        index_ptr+=step;
 11411              		.loc 1 185 8 view .LVU3903
 11412              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11413              		.loc 1 185 19 is_stmt 0 view .LVU3904
 11414 42a9 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11415              		.loc 1 186 8 is_stmt 1 view .LVU3905
 11416              	.LVL594:
 187:sieve_extend.c ****        index_ptr+=step;
 11417              		.loc 1 187 8 view .LVU3906
 11418              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 311


 11419              		.loc 1 187 19 is_stmt 0 view .LVU3907
 11420 42ac 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11421              		.loc 1 188 8 is_stmt 1 view .LVU3908
 11422              	.LVL595:
 189:sieve_extend.c ****        index_ptr+=step;
 11423              		.loc 1 189 8 view .LVU3909
 11424 42b0 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11425              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11426              		.loc 1 189 19 is_stmt 0 view .LVU3910
 11427 42b3 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11428              		.loc 1 190 8 is_stmt 1 view .LVU3911
 11429 42b7 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11430              	.LVL596:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11431              		.loc 1 180 10 view .LVU3912
 11432 42ba 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11433 42bd 0F86BD00 		jbe	.L896	#,
 11433      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11434              		.loc 1 181 8 view .LVU3913
 11435              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11436              		.loc 1 181 19 is_stmt 0 view .LVU3914
 11437 42c3 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11438              		.loc 1 182 8 is_stmt 1 view .LVU3915
 11439              	.LVL597:
 183:sieve_extend.c ****        index_ptr+=step;
 11440              		.loc 1 183 8 view .LVU3916
 11441              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11442              		.loc 1 183 19 is_stmt 0 view .LVU3917
 11443 42c6 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11444              		.loc 1 184 8 is_stmt 1 view .LVU3918
 11445              	.LVL598:
 185:sieve_extend.c ****        index_ptr+=step;
 11446              		.loc 1 185 8 view .LVU3919
 11447              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11448              		.loc 1 185 19 is_stmt 0 view .LVU3920
 11449 42ca 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11450              		.loc 1 186 8 is_stmt 1 view .LVU3921
 11451              	.LVL599:
 187:sieve_extend.c ****        index_ptr+=step;
 11452              		.loc 1 187 8 view .LVU3922
 11453              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11454              		.loc 1 187 19 is_stmt 0 view .LVU3923
 11455 42cd 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11456              		.loc 1 188 8 is_stmt 1 view .LVU3924
 11457              	.LVL600:
GAS LISTING /tmp/ccH5HMHD.s 			page 312


 189:sieve_extend.c ****        index_ptr+=step;
 11458              		.loc 1 189 8 view .LVU3925
 11459 42d1 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11460              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11461              		.loc 1 189 19 is_stmt 0 view .LVU3926
 11462 42d4 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11463              		.loc 1 190 8 is_stmt 1 view .LVU3927
 11464 42d8 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11465              	.LVL601:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11466              		.loc 1 180 10 view .LVU3928
 11467 42db 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11468 42de 0F869C00 		jbe	.L896	#,
 11468      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11469              		.loc 1 181 8 view .LVU3929
 11470              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11471              		.loc 1 181 19 is_stmt 0 view .LVU3930
 11472 42e4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11473              		.loc 1 182 8 is_stmt 1 view .LVU3931
 11474              	.LVL602:
 183:sieve_extend.c ****        index_ptr+=step;
 11475              		.loc 1 183 8 view .LVU3932
 11476              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11477              		.loc 1 183 19 is_stmt 0 view .LVU3933
 11478 42e7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11479              		.loc 1 184 8 is_stmt 1 view .LVU3934
 11480              	.LVL603:
 185:sieve_extend.c ****        index_ptr+=step;
 11481              		.loc 1 185 8 view .LVU3935
 11482              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11483              		.loc 1 185 19 is_stmt 0 view .LVU3936
 11484 42eb 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11485              		.loc 1 186 8 is_stmt 1 view .LVU3937
 11486              	.LVL604:
 187:sieve_extend.c ****        index_ptr+=step;
 11487              		.loc 1 187 8 view .LVU3938
 11488              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11489              		.loc 1 187 19 is_stmt 0 view .LVU3939
 11490 42ee 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11491              		.loc 1 188 8 is_stmt 1 view .LVU3940
 11492              	.LVL605:
 189:sieve_extend.c ****        index_ptr+=step;
 11493              		.loc 1 189 8 view .LVU3941
 11494 42f2 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11495              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 313


 11496              		.loc 1 189 19 is_stmt 0 view .LVU3942
 11497 42f5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11498              		.loc 1 190 8 is_stmt 1 view .LVU3943
 11499 42f9 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11500              	.LVL606:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11501              		.loc 1 180 10 view .LVU3944
 11502 42fc 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11503 42ff 767F     		jbe	.L896	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11504              		.loc 1 181 8 view .LVU3945
 11505              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11506              		.loc 1 181 19 is_stmt 0 view .LVU3946
 11507 4301 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11508              		.loc 1 182 8 is_stmt 1 view .LVU3947
 11509              	.LVL607:
 183:sieve_extend.c ****        index_ptr+=step;
 11510              		.loc 1 183 8 view .LVU3948
 11511              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11512              		.loc 1 183 19 is_stmt 0 view .LVU3949
 11513 4304 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11514              		.loc 1 184 8 is_stmt 1 view .LVU3950
 11515              	.LVL608:
 185:sieve_extend.c ****        index_ptr+=step;
 11516              		.loc 1 185 8 view .LVU3951
 11517              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11518              		.loc 1 185 19 is_stmt 0 view .LVU3952
 11519 4308 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11520              		.loc 1 186 8 is_stmt 1 view .LVU3953
 11521              	.LVL609:
 187:sieve_extend.c ****        index_ptr+=step;
 11522              		.loc 1 187 8 view .LVU3954
 11523              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11524              		.loc 1 187 19 is_stmt 0 view .LVU3955
 11525 430b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11526              		.loc 1 188 8 is_stmt 1 view .LVU3956
 11527              	.LVL610:
 189:sieve_extend.c ****        index_ptr+=step;
 11528              		.loc 1 189 8 view .LVU3957
 11529 430f 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11530              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11531              		.loc 1 189 19 is_stmt 0 view .LVU3958
 11532 4312 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11533              		.loc 1 190 8 is_stmt 1 view .LVU3959
 11534 4316 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11535              	.LVL611:
GAS LISTING /tmp/ccH5HMHD.s 			page 314


 180:sieve_extend.c ****        *index_ptr |= mask;
 11536              		.loc 1 180 10 view .LVU3960
 11537 4319 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11538 431c 7662     		jbe	.L896	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11539              		.loc 1 181 8 view .LVU3961
 11540              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11541              		.loc 1 181 19 is_stmt 0 view .LVU3962
 11542 431e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11543              		.loc 1 182 8 is_stmt 1 view .LVU3963
 11544              	.LVL612:
 183:sieve_extend.c ****        index_ptr+=step;
 11545              		.loc 1 183 8 view .LVU3964
 11546              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11547              		.loc 1 183 19 is_stmt 0 view .LVU3965
 11548 4321 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11549              		.loc 1 184 8 is_stmt 1 view .LVU3966
 11550              	.LVL613:
 185:sieve_extend.c ****        index_ptr+=step;
 11551              		.loc 1 185 8 view .LVU3967
 11552              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11553              		.loc 1 185 19 is_stmt 0 view .LVU3968
 11554 4325 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11555              		.loc 1 186 8 is_stmt 1 view .LVU3969
 11556              	.LVL614:
 187:sieve_extend.c ****        index_ptr+=step;
 11557              		.loc 1 187 8 view .LVU3970
 11558              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11559              		.loc 1 187 19 is_stmt 0 view .LVU3971
 11560 4328 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11561              		.loc 1 188 8 is_stmt 1 view .LVU3972
 11562              	.LVL615:
 189:sieve_extend.c ****        index_ptr+=step;
 11563              		.loc 1 189 8 view .LVU3973
 11564 432c 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11565              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11566              		.loc 1 189 19 is_stmt 0 view .LVU3974
 11567 432f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11568              		.loc 1 190 8 is_stmt 1 view .LVU3975
 11569 4333 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11570              	.LVL616:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11571              		.loc 1 180 10 view .LVU3976
 11572 4336 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11573 4339 7645     		jbe	.L896	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11574              		.loc 1 181 8 view .LVU3977
GAS LISTING /tmp/ccH5HMHD.s 			page 315


 11575              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11576              		.loc 1 181 19 is_stmt 0 view .LVU3978
 11577 433b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11578              		.loc 1 182 8 is_stmt 1 view .LVU3979
 11579              	.LVL617:
 183:sieve_extend.c ****        index_ptr+=step;
 11580              		.loc 1 183 8 view .LVU3980
 11581              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11582              		.loc 1 183 19 is_stmt 0 view .LVU3981
 11583 433e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11584              		.loc 1 184 8 is_stmt 1 view .LVU3982
 11585              	.LVL618:
 185:sieve_extend.c ****        index_ptr+=step;
 11586              		.loc 1 185 8 view .LVU3983
 11587              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11588              		.loc 1 185 19 is_stmt 0 view .LVU3984
 11589 4342 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11590              		.loc 1 186 8 is_stmt 1 view .LVU3985
 11591              	.LVL619:
 187:sieve_extend.c ****        index_ptr+=step;
 11592              		.loc 1 187 8 view .LVU3986
 11593              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11594              		.loc 1 187 19 is_stmt 0 view .LVU3987
 11595 4345 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11596              		.loc 1 188 8 is_stmt 1 view .LVU3988
 11597              	.LVL620:
 189:sieve_extend.c ****        index_ptr+=step;
 11598              		.loc 1 189 8 view .LVU3989
 11599 4349 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11600              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11601              		.loc 1 189 19 is_stmt 0 view .LVU3990
 11602 434c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11603              		.loc 1 190 8 is_stmt 1 view .LVU3991
 11604 4350 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11605              	.LVL621:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11606              		.loc 1 180 10 view .LVU3992
 11607 4353 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11608 4356 7628     		jbe	.L896	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11609              		.loc 1 181 8 view .LVU3993
 11610              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11611              		.loc 1 181 19 is_stmt 0 view .LVU3994
 11612 4358 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11613              		.loc 1 182 8 is_stmt 1 view .LVU3995
GAS LISTING /tmp/ccH5HMHD.s 			page 316


 11614              	.LVL622:
 183:sieve_extend.c ****        index_ptr+=step;
 11615              		.loc 1 183 8 view .LVU3996
 11616              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11617              		.loc 1 183 19 is_stmt 0 view .LVU3997
 11618 435b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11619              		.loc 1 184 8 is_stmt 1 view .LVU3998
 11620              	.LVL623:
 185:sieve_extend.c ****        index_ptr+=step;
 11621              		.loc 1 185 8 view .LVU3999
 11622              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11623              		.loc 1 185 19 is_stmt 0 view .LVU4000
 11624 435f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11625              		.loc 1 186 8 is_stmt 1 view .LVU4001
 11626              	.LVL624:
 187:sieve_extend.c ****        index_ptr+=step;
 11627              		.loc 1 187 8 view .LVU4002
 11628              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11629              		.loc 1 187 19 is_stmt 0 view .LVU4003
 11630 4362 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11631              		.loc 1 188 8 is_stmt 1 view .LVU4004
 11632              	.LVL625:
 189:sieve_extend.c ****        index_ptr+=step;
 11633              		.loc 1 189 8 view .LVU4005
 11634 4366 4801FE   		add	rsi, rdi	# ivtmp.656, tmp618
 11635              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11636              		.loc 1 189 19 is_stmt 0 view .LVU4006
 11637 4369 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11638              		.loc 1 190 8 is_stmt 1 view .LVU4007
 11639 436d 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11640              	.LVL626:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11641              		.loc 1 180 10 view .LVU4008
 11642 4370 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11643 4373 0F8708FF 		ja	.L897	#,
 11643      FFFF
 11644 4379 0F1F8000 		.p2align 4
 11644      000000
 11645              		.p2align 3
 11646              	.L896:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11647              		.loc 1 193 4 view .LVU4009
 194:sieve_extend.c ****        *index_ptr |= mask;
 11648              		.loc 1 194 4 view .LVU4010
 194:sieve_extend.c ****        *index_ptr |= mask;
 11649              		.loc 1 194 10 view .LVU4011
 11650 4380 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11651 4383 765B     		jbe	.L898	#,
 11652              	.L899:
GAS LISTING /tmp/ccH5HMHD.s 			page 317


 195:sieve_extend.c ****        index_ptr+=step;
 11653              		.loc 1 195 8 view .LVU4012
 11654              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11655              		.loc 1 195 19 is_stmt 0 view .LVU4013
 11656 4385 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11657              		.loc 1 196 8 is_stmt 1 view .LVU4014
 11658              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11659              		.loc 1 196 17 is_stmt 0 view .LVU4015
 11660 4388 4801C8   		add	rax, rcx	# index_ptr, _200
 11661              	.LVL627:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11662              		.loc 1 194 10 is_stmt 1 view .LVU4016
 11663 438b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11664 438e 7650     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11665              		.loc 1 195 8 view .LVU4017
 11666              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11667              		.loc 1 195 19 is_stmt 0 view .LVU4018
 11668 4390 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11669              		.loc 1 196 8 is_stmt 1 view .LVU4019
 11670              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11671              		.loc 1 196 17 is_stmt 0 view .LVU4020
 11672 4393 4801C8   		add	rax, rcx	# index_ptr, _200
 11673              	.LVL628:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11674              		.loc 1 194 10 is_stmt 1 view .LVU4021
 11675 4396 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11676 4399 7645     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11677              		.loc 1 195 8 view .LVU4022
 11678              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11679              		.loc 1 195 19 is_stmt 0 view .LVU4023
 11680 439b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11681              		.loc 1 196 8 is_stmt 1 view .LVU4024
 11682              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11683              		.loc 1 196 17 is_stmt 0 view .LVU4025
 11684 439e 4801C8   		add	rax, rcx	# index_ptr, _200
 11685              	.LVL629:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11686              		.loc 1 194 10 is_stmt 1 view .LVU4026
 11687 43a1 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11688 43a4 763A     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11689              		.loc 1 195 8 view .LVU4027
 11690              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11691              		.loc 1 195 19 is_stmt 0 view .LVU4028
 11692 43a6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
GAS LISTING /tmp/ccH5HMHD.s 			page 318


 196:sieve_extend.c ****    }
 11693              		.loc 1 196 8 is_stmt 1 view .LVU4029
 11694              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11695              		.loc 1 196 17 is_stmt 0 view .LVU4030
 11696 43a9 4801C8   		add	rax, rcx	# index_ptr, _200
 11697              	.LVL630:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11698              		.loc 1 194 10 is_stmt 1 view .LVU4031
 11699 43ac 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11700 43af 762F     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11701              		.loc 1 195 8 view .LVU4032
 11702              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11703              		.loc 1 195 19 is_stmt 0 view .LVU4033
 11704 43b1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11705              		.loc 1 196 8 is_stmt 1 view .LVU4034
 11706              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11707              		.loc 1 196 17 is_stmt 0 view .LVU4035
 11708 43b4 4801C8   		add	rax, rcx	# index_ptr, _200
 11709              	.LVL631:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11710              		.loc 1 194 10 is_stmt 1 view .LVU4036
 11711 43b7 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11712 43ba 7624     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11713              		.loc 1 195 8 view .LVU4037
 11714              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11715              		.loc 1 195 19 is_stmt 0 view .LVU4038
 11716 43bc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11717              		.loc 1 196 8 is_stmt 1 view .LVU4039
 11718              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11719              		.loc 1 196 17 is_stmt 0 view .LVU4040
 11720 43bf 4801C8   		add	rax, rcx	# index_ptr, _200
 11721              	.LVL632:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11722              		.loc 1 194 10 is_stmt 1 view .LVU4041
 11723 43c2 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11724 43c5 7619     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11725              		.loc 1 195 8 view .LVU4042
 11726              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11727              		.loc 1 195 19 is_stmt 0 view .LVU4043
 11728 43c7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11729              		.loc 1 196 8 is_stmt 1 view .LVU4044
 11730              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11731              		.loc 1 196 17 is_stmt 0 view .LVU4045
 11732 43ca 4801C8   		add	rax, rcx	# index_ptr, _200
GAS LISTING /tmp/ccH5HMHD.s 			page 319


 11733              	.LVL633:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11734              		.loc 1 194 10 is_stmt 1 view .LVU4046
 11735 43cd 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11736 43d0 760E     		jbe	.L898	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11737              		.loc 1 195 8 view .LVU4047
 11738              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11739              		.loc 1 195 19 is_stmt 0 view .LVU4048
 11740 43d2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11741              		.loc 1 196 8 is_stmt 1 view .LVU4049
 11742              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11743              		.loc 1 196 17 is_stmt 0 view .LVU4050
 11744 43d5 4801C8   		add	rax, rcx	# index_ptr, _200
 11745              	.LVL634:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11746              		.loc 1 194 10 is_stmt 1 view .LVU4051
 11747 43d8 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11748 43db 77A8     		ja	.L899	#,
 11749 43dd 0F1F00   		.p2align 4
 11750              		.p2align 3
 11751              	.L898:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11752              		.loc 1 199 4 view .LVU4052
 11753              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11754              		.loc 1 199 7 is_stmt 0 view .LVU4053
 11755 43e0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11756 43e3 0F84CF11 		je	.L1486	#,
 11756      0000
 11757              	.LVL635:
 11758              	.L900:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11759              		.loc 1 199 7 view .LVU4054
 11760              	.LBE555:
 11761              	.LBE558:
 11762              	.LBE551:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11763              		.loc 1 320 54 is_stmt 1 view .LVU4055
 11764              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11765              		.loc 1 320 9 is_stmt 0 view .LVU4056
 11766 43e9 4939E8   		cmp	r8, rbp	# tmp598, index
 11767 43ec 0F83AEFD 		jnb	.L901	#,
 11767      FFFF
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11768              		.loc 1 320 9 view .LVU4057
 11769 43f2 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# index, %sfp
 11769      50
 11770 43f7 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# _69, %sfp
 11770      58
 11771 43fc E9AAF6FF 		jmp	.L883	#
 11771      FF
 11772              	.LVL636:
GAS LISTING /tmp/ccH5HMHD.s 			page 320


 11773              	.L1476:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11774              		.loc 1 320 9 view .LVU4058
 11775 4401 4C8B4C24 		mov	r9, QWORD PTR 48[rsp]	# <retval>, %sfp
 11775      30
 11776 4406 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11776      28
 11777 440b 498B4108 		mov	rax, QWORD PTR 8[r9]	# prephitmp_1432, sieve_92->bits
 11778 440f 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, prephitmp_1432
 11778      08
 11779              	.LVL637:
 11780              	.L874:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11781              		.loc 1 320 9 view .LVU4059
 11782              	.LBE550:
 11783              	.LBE549:
 11784              	.LBE548:
 11785              	.LBE576:
 11786              	.LBE583:
 11787              	.LBE598:
 985:sieve_extend.c ****     prime = block.prime;
 11788              		.loc 1 985 5 is_stmt 1 view .LVU4060
 11789              	.LBB599:
 841:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 11790              		.loc 1 841 20 view .LVU4061
 11791              	.LBB593:
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11792              		.loc 1 842 5 view .LVU4062
 11793              	# sieve_extend.c:842:     if (size < WORD_SIZE_counter)   {
 842:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11794              		.loc 1 842 8 is_stmt 0 view .LVU4063
 11795 4414 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 11796 4418 0F86B9FA 		jbe	.L867	#,
 11796      FFFF
 11797              	.LVL638:
 11798              	.L910:
 847:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11799              		.loc 1 847 5 is_stmt 1 view .LVU4064
 848:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11800              		.loc 1 848 5 view .LVU4065
 11801              	# sieve_extend.c:847:     const counter_t copy_start  = source_start + size;
 847:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11802              		.loc 1 847 21 is_stmt 0 view .LVU4066
 11803 441e 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 11804              	.LVL639:
 11805              	# sieve_extend.c:849:     const bitshift_t source_bit = bitindex_calc(source_start);
 849:sieve_extend.c **** 
 11806              		.loc 1 849 22 view .LVU4067
 11807 4422 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 11808              	# sieve_extend.c:848:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 848:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11809              		.loc 1 848 22 view .LVU4068
 11810 4425 4183E03F 		and	r8d, 63	# copy_bit,
 11811              	.LVL640:
 849:sieve_extend.c **** 
 11812              		.loc 1 849 5 is_stmt 1 view .LVU4069
 11813              	# sieve_extend.c:849:     const bitshift_t source_bit = bitindex_calc(source_start);
GAS LISTING /tmp/ccH5HMHD.s 			page 321


 849:sieve_extend.c **** 
 11814              		.loc 1 849 22 is_stmt 0 view .LVU4070
 11815 4429 4183E43F 		and	r12d, 63	# source_bit,
 11816              	.LVL641:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11817              		.loc 1 851 5 is_stmt 1 view .LVU4071
 11818              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11819              		.loc 1 851 37 is_stmt 0 view .LVU4072
 11820 442d 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11820      08
 11821              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11822              		.loc 1 851 13 view .LVU4073
 11823 4432 4D39E0   		cmp	r8, r12	# copy_bit, source_bit
 11824              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11825              		.loc 1 851 37 view .LVU4074
 11826 4435 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 11826      38
 11827              	# sieve_extend.c:851:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11828              		.loc 1 851 13 view .LVU4075
 11829 443a 0F82AA11 		jb	.L1487	#,
 11829      0000
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11830              		.loc 1 852 10 is_stmt 1 view .LVU4076
 11831              	# sieve_extend.c:852:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11832              		.loc 1 852 13 is_stmt 0 view .LVU4077
 11833 4440 0F878402 		ja	.L1488	#,
 11833      0000
 853:sieve_extend.c **** }
 11834              		.loc 1 853 37 is_stmt 1 view .LVU4078
 11835 4446 E805DBFF 		call	extendSieve_aligned	#
 11835      FF
 11836              	.LVL642:
 11837              	.L911:
 853:sieve_extend.c **** }
 11838              		.loc 1 853 37 is_stmt 0 view .LVU4079
 11839              	.LBE593:
 11840              	.LBE599:
 986:sieve_extend.c **** 
 11841              		.loc 1 986 5 is_stmt 1 view .LVU4080
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11842              		.loc 1 989 5 view .LVU4081
 11843              	.LBB600:
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11844              		.loc 1 989 10 view .LVU4082
 11845              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11846              		.loc 1 989 38 is_stmt 0 view .LVU4083
 11847 444b 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
 11847      40
 11848              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11849              		.loc 1 989 20 view .LVU4084
GAS LISTING /tmp/ccH5HMHD.s 			page 322


 11850 4450 4531FF   		xor	r15d, r15d	# block_start
 11851 4453 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# prime, %sfp
 11851      28
 11852              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11853              		.loc 1 989 83 view .LVU4085
 11854 4458 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# <retval>, %sfp
 11854      30
 11855              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11856              		.loc 1 989 38 view .LVU4086
 11857 445d 488D4AFF 		lea	rcx, -1[rdx]	# block_stop,
 11858              	.LVL643:
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11859              		.loc 1 989 63 is_stmt 1 view .LVU4087
 11860 4461 488D7501 		lea	rsi, 1[rbp]	# tmp824,
 11861              	.LBB601:
 11862              	.LBB602:
 11863              	.LBB603:
 11864              	.LBB604:
 11865              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 11866              		.loc 1 256 80 is_stmt 0 view .LVU4088
 11867 4465 4989CC   		mov	r12, rcx	# block_stop, block_stop
 11868              	.LBE604:
 11869              	.LBE603:
 11870              	.LBE602:
 11871              	.LBE601:
 11872              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11873              		.loc 1 989 83 view .LVU4089
 11874 4468 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_92->bits
 11875              	.LBB692:
 11876              	.LBB687:
 11877              	.LBB620:
 11878              	.LBB615:
 11879              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 11880              		.loc 1 256 80 view .LVU4090
 11881 446c 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp824
 11881      20
 11882              	.LVL644:
 11883 4471 66662E0F 		.p2align 4
 11883      1F840000 
 11883      0000000F 
 11883      1F4000
 11884              		.p2align 3
 11885              	.L917:
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 11886              		.loc 1 256 80 view .LVU4091
 11887              	.LBE615:
 11888              	.LBE620:
 11889              	.LBE687:
 11890              	.LBE692:
 990:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 11891              		.loc 1 990 9 is_stmt 1 view .LVU4092
 11892              	.LBB693:
GAS LISTING /tmp/ccH5HMHD.s 			page 323


 11893              	.LBB694:
 11894              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11895              		.loc 1 122 21 is_stmt 0 view .LVU4093
 11896 4480 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# prime, %sfp
 11896      28
 11897 4485 4939D4   		cmp	r12, rdx	# block_stop, _8
 11898              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11899              		.loc 1 122 12 view .LVU4094
 11900 4488 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _97, %sfp
 11900      38
 11901 448d 4C0F47E2 		cmova	r12, rdx	# block_stop,, block_stop, _8
 11902              	.LVL645:
 122:sieve_extend.c ****     return index;
 11903              		.loc 1 122 12 view .LVU4095
 11904              	.LBE694:
 11905              	.LBE693:
 991:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 11906              		.loc 1 991 9 is_stmt 1 view .LVU4096
 11907              	.LBB697:
 11908              	.LBI693:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11909              		.loc 1 121 25 view .LVU4097
 11910              	.LBB695:
 122:sieve_extend.c ****     return index;
 11911              		.loc 1 122 5 view .LVU4098
 122:sieve_extend.c ****     return index;
 11912              		.loc 1 122 11 view .LVU4099
 11913              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11914              		.loc 1 122 21 is_stmt 0 view .LVU4100
 11915 4491 4989FB   		mov	r11, rdi	# tmp647, prime
 11916 4494 49C1EB06 		shr	r11, 6	# tmp647,
 11917              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11918              		.loc 1 122 12 view .LVU4101
 11919 4498 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_365, *_365
 11920              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11921              		.loc 1 122 11 view .LVU4102
 11922 449c 480FA3FB 		bt	rbx, rdi	# *_365, tmp1665
 11923 44a0 0F834502 		jnc	.L914	#,
 11923      0000
 11924 44a6 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp824, %sfp
 11924      20
 11925              	.L915:
 122:sieve_extend.c ****     return index;
 11926              		.loc 1 122 58 is_stmt 1 view .LVU4103
 11927              	.LVL646:
 11928              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11929              		.loc 1 122 21 is_stmt 0 view .LVU4104
 11930 44ab 4989C5   		mov	r13, rax	# tmp652, tmp824
 11931              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11932              		.loc 1 122 63 view .LVU4105
GAS LISTING /tmp/ccH5HMHD.s 			page 324


 11933 44ae 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 11934              		.loc 1 122 11 is_stmt 1 view .LVU4106
 11935              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11936              		.loc 1 122 21 is_stmt 0 view .LVU4107
 11937 44b1 49C1ED06 		shr	r13, 6	# tmp652,
 11938              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11939              		.loc 1 122 12 view .LVU4108
 11940 44b5 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 11941              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11942              		.loc 1 122 11 view .LVU4109
 11943 44b9 490FA3C1 		bt	r9, rax	# *_34, tmp824
 11944 44bd 0F831502 		jnc	.L1420	#,
 11944      0000
 11945 44c3 488D4801 		lea	rcx, 1[rax]	# tmp848,
 11946              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11947              		.loc 1 122 21 view .LVU4110
 11948 44c7 4989C8   		mov	r8, rcx	# tmp887, tmp824
 11949 44ca 4889C8   		mov	rax, rcx	# tmp824, tmp848
 11950              	.LVL647:
 122:sieve_extend.c ****     return index;
 11951              		.loc 1 122 58 is_stmt 1 view .LVU4111
 11952              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11953              		.loc 1 122 21 is_stmt 0 view .LVU4112
 11954 44cd 49C1E806 		shr	r8, 6	# tmp887,
 11955              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11956              		.loc 1 122 63 view .LVU4113
 11957 44d1 4889CE   		mov	rsi, rcx	# prime, tmp824
 122:sieve_extend.c ****     return index;
 11958              		.loc 1 122 11 is_stmt 1 view .LVU4114
 11959              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11960              		.loc 1 122 12 is_stmt 0 view .LVU4115
 11961 44d4 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 11962              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11963              		.loc 1 122 11 view .LVU4116
 11964 44d8 490FA3CA 		bt	r10, rcx	# *_34, tmp824
 11965 44dc 0F83F601 		jnc	.L1420	#,
 11965      0000
 11966 44e2 488D4101 		lea	rax, 1[rcx]	# tmp824,
 11967              	.LVL648:
 122:sieve_extend.c ****     return index;
 11968              		.loc 1 122 58 is_stmt 1 view .LVU4117
 11969              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11970              		.loc 1 122 21 is_stmt 0 view .LVU4118
 11971 44e6 4889C5   		mov	rbp, rax	# tmp1118, tmp824
 11972              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11973              		.loc 1 122 63 view .LVU4119
GAS LISTING /tmp/ccH5HMHD.s 			page 325


 11974 44e9 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 11975              		.loc 1 122 11 is_stmt 1 view .LVU4120
 11976              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11977              		.loc 1 122 21 is_stmt 0 view .LVU4121
 11978 44ec 48C1ED06 		shr	rbp, 6	# tmp1118,
 11979              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11980              		.loc 1 122 12 view .LVU4122
 11981 44f0 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 11982              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11983              		.loc 1 122 11 view .LVU4123
 11984 44f4 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 11985 44f8 0F83DA01 		jnc	.L1420	#,
 11985      0000
 11986 44fe 488D4102 		lea	rax, 2[rcx]	# tmp824,
 11987              	.LVL649:
 122:sieve_extend.c ****     return index;
 11988              		.loc 1 122 58 is_stmt 1 view .LVU4124
 11989              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11990              		.loc 1 122 21 is_stmt 0 view .LVU4125
 11991 4502 4989C3   		mov	r11, rax	# tmp1122, tmp824
 11992              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11993              		.loc 1 122 63 view .LVU4126
 11994 4505 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 11995              		.loc 1 122 11 is_stmt 1 view .LVU4127
 11996              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11997              		.loc 1 122 21 is_stmt 0 view .LVU4128
 11998 4508 49C1EB06 		shr	r11, 6	# tmp1122,
 11999              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12000              		.loc 1 122 12 view .LVU4129
 12001 450c 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12002              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12003              		.loc 1 122 11 view .LVU4130
 12004 4510 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12005 4514 0F83BE01 		jnc	.L1420	#,
 12005      0000
 12006 451a 488D4103 		lea	rax, 3[rcx]	# tmp824,
 12007              	.LVL650:
 122:sieve_extend.c ****     return index;
 12008              		.loc 1 122 58 is_stmt 1 view .LVU4131
 12009              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12010              		.loc 1 122 21 is_stmt 0 view .LVU4132
 12011 451e 4989C5   		mov	r13, rax	# tmp1126, tmp824
 12012              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12013              		.loc 1 122 63 view .LVU4133
 12014 4521 4889C6   		mov	rsi, rax	# prime, tmp824
GAS LISTING /tmp/ccH5HMHD.s 			page 326


 122:sieve_extend.c ****     return index;
 12015              		.loc 1 122 11 is_stmt 1 view .LVU4134
 12016              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12017              		.loc 1 122 21 is_stmt 0 view .LVU4135
 12018 4524 49C1ED06 		shr	r13, 6	# tmp1126,
 12019              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12020              		.loc 1 122 12 view .LVU4136
 12021 4528 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12022              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12023              		.loc 1 122 11 view .LVU4137
 12024 452c 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12025 4530 0F83A201 		jnc	.L1420	#,
 12025      0000
 12026 4536 488D4104 		lea	rax, 4[rcx]	# tmp824,
 12027              	.LVL651:
 122:sieve_extend.c ****     return index;
 12028              		.loc 1 122 58 is_stmt 1 view .LVU4138
 12029              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12030              		.loc 1 122 21 is_stmt 0 view .LVU4139
 12031 453a 4989C0   		mov	r8, rax	# tmp1130, tmp824
 12032              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12033              		.loc 1 122 63 view .LVU4140
 12034 453d 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12035              		.loc 1 122 11 is_stmt 1 view .LVU4141
 12036              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12037              		.loc 1 122 21 is_stmt 0 view .LVU4142
 12038 4540 49C1E806 		shr	r8, 6	# tmp1130,
 12039              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12040              		.loc 1 122 12 view .LVU4143
 12041 4544 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12042              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12043              		.loc 1 122 11 view .LVU4144
 12044 4548 490FA3C2 		bt	r10, rax	# *_34, tmp824
 12045 454c 0F838601 		jnc	.L1420	#,
 12045      0000
 12046 4552 488D4105 		lea	rax, 5[rcx]	# tmp824,
 12047              	.LVL652:
 122:sieve_extend.c ****     return index;
 12048              		.loc 1 122 58 is_stmt 1 view .LVU4145
 12049              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12050              		.loc 1 122 21 is_stmt 0 view .LVU4146
 12051 4556 4889C5   		mov	rbp, rax	# tmp1134, tmp824
 12052              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12053              		.loc 1 122 63 view .LVU4147
 12054 4559 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccH5HMHD.s 			page 327


 12055              		.loc 1 122 11 is_stmt 1 view .LVU4148
 12056              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12057              		.loc 1 122 21 is_stmt 0 view .LVU4149
 12058 455c 48C1ED06 		shr	rbp, 6	# tmp1134,
 12059              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12060              		.loc 1 122 12 view .LVU4150
 12061 4560 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12062              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12063              		.loc 1 122 11 view .LVU4151
 12064 4564 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12065 4568 0F836A01 		jnc	.L1420	#,
 12065      0000
 12066 456e 488D4106 		lea	rax, 6[rcx]	# tmp824,
 12067              	.LVL653:
 122:sieve_extend.c ****     return index;
 12068              		.loc 1 122 58 is_stmt 1 view .LVU4152
 12069              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12070              		.loc 1 122 21 is_stmt 0 view .LVU4153
 12071 4572 4989C3   		mov	r11, rax	# tmp1138, tmp824
 12072              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12073              		.loc 1 122 63 view .LVU4154
 12074 4575 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12075              		.loc 1 122 11 is_stmt 1 view .LVU4155
 12076              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12077              		.loc 1 122 21 is_stmt 0 view .LVU4156
 12078 4578 49C1EB06 		shr	r11, 6	# tmp1138,
 12079              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12080              		.loc 1 122 12 view .LVU4157
 12081 457c 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12082              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12083              		.loc 1 122 11 view .LVU4158
 12084 4580 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12085 4584 0F834E01 		jnc	.L1420	#,
 12085      0000
 12086 458a 488D4107 		lea	rax, 7[rcx]	# tmp824,
 12087              	.LVL654:
 122:sieve_extend.c ****     return index;
 12088              		.loc 1 122 11 view .LVU4159
 12089 458e E918FFFF 		jmp	.L915	#
 12089      FF
 12090              	.LVL655:
 12091              	.L1484:
 122:sieve_extend.c ****     return index;
 12092              		.loc 1 122 11 view .LVU4160
 12093              	.LBE695:
 12094              	.LBE697:
 12095              	.LBE600:
 12096              	.LBB703:
GAS LISTING /tmp/ccH5HMHD.s 			page 328


 12097              	.LBB584:
 12098              	.LBB577:
 12099              	.LBB568:
 12100              	.LBB535:
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12101              		.loc 1 247 8 is_stmt 1 view .LVU4161
 12102              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12103              		.loc 1 247 73 is_stmt 0 view .LVU4162
 12104 4593 48234424 		and	rax, QWORD PTR 40[rsp]	# tmp575, %sfp
 12104      28
 12105              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12106              		.loc 1 247 35 view .LVU4163
 12107 4598 4C09C8   		or	rax, r9	# tmp576, pretmp_1229
 12108 459b 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp576
 249:sieve_extend.c ****     }
 12109              		.loc 1 249 8 is_stmt 1 view .LVU4164
 12110 459e E908F5FF 		jmp	.L883	#
 12110      FF
 12111              	.LVL656:
 12112              	.L890:
 249:sieve_extend.c ****     }
 12113              		.loc 1 249 8 is_stmt 0 view .LVU4165
 12114              	.LBE535:
 12115              	.LBE568:
 12116              	.LBB569:
 12117              	.LBB566:
 12118              	.LBB561:
 12119              	.LBB562:
 12120              	.LBB563:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12121              		.loc 1 303 54 is_stmt 1 view .LVU4166
 12122              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12123              		.loc 1 303 9 is_stmt 0 view .LVU4167
 12124 45a3 4939E8   		cmp	r8, rbp	# _69, index
 12125 45a6 0F82FFF4 		jb	.L883	#,
 12125      FFFF
 12126              	.LBB564:
 12127              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12128              		.loc 1 308 25 view .LVU4168
 12129 45ac BF010000 		mov	edi, 1	# tmp601,
 12129      00
 12130              	.LVL657:
 12131 45b1 66662E0F 		.p2align 4
 12131      1F840000 
 12131      0000000F 
 12131      1F4000
 12132              		.p2align 3
 12133              	.L894:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12134              		.loc 1 304 13 is_stmt 1 view .LVU4169
 12135              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12136              		.loc 1 304 32 is_stmt 0 view .LVU4170
GAS LISTING /tmp/ccH5HMHD.s 			page 329


 12137 45c0 4889E9   		mov	rcx, rbp	# index_word, index
 12138              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             #pragma ivdep
 12139              		.loc 1 305 32 view .LVU4171
 12140 45c3 4531C9   		xor	r9d, r9d	# mask
 12141              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12142              		.loc 1 304 32 view .LVU4172
 12143 45c6 48C1E906 		shr	rcx, 6	# index_word,
 12144              	.LVL658:
 305:sieve_extend.c ****             #pragma ivdep
 12145              		.loc 1 305 13 is_stmt 1 view .LVU4173
 12146              	.L893:
 307:sieve_extend.c ****                 mask |= markmask(index);
 12147              		.loc 1 307 13 view .LVU4174
 308:sieve_extend.c ****                 index += step;
 12148              		.loc 1 308 17 view .LVU4175
 12149              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12150              		.loc 1 308 25 is_stmt 0 view .LVU4176
 12151 45ca C462D1F7 		shlx	r10, rdi, rbp	# tmp600, tmp601, index
 12151      D7
 12152              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12153              		.loc 1 309 23 view .LVU4177
 12154 45cf 4C01E5   		add	rbp, r12	# index, step
 12155              	.LVL659:
 12156              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12157              		.loc 1 310 36 view .LVU4178
 12158 45d2 4989EB   		mov	r11, rbp	# tmp602, index
 12159              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12160              		.loc 1 308 22 view .LVU4179
 12161 45d5 4D09D1   		or	r9, r10	# mask, tmp600
 12162              	.LVL660:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12163              		.loc 1 309 17 is_stmt 1 view .LVU4180
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12164              		.loc 1 310 21 view .LVU4181
 12165              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12166              		.loc 1 310 36 is_stmt 0 view .LVU4182
 12167 45d8 49C1EB06 		shr	r11, 6	# tmp602,
 12168              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12169              		.loc 1 310 13 view .LVU4183
 12170 45dc 4C39D9   		cmp	rcx, r11	# index_word, tmp602
 12171 45df 0F85AB00 		jne	.L1340	#,
 12171      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 12172              		.loc 1 307 13 is_stmt 1 view .LVU4184
 308:sieve_extend.c ****                 index += step;
 12173              		.loc 1 308 17 view .LVU4185
 12174              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12175              		.loc 1 308 25 is_stmt 0 view .LVU4186
GAS LISTING /tmp/ccH5HMHD.s 			page 330


 12176 45e5 C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1204, tmp601, index
 12176      D7
 12177              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12178              		.loc 1 309 23 view .LVU4187
 12179 45ea 4C01E5   		add	rbp, r12	# index, step
 12180              	.LVL661:
 12181              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12182              		.loc 1 310 36 view .LVU4188
 12183 45ed 4889E8   		mov	rax, rbp	# tmp1205, index
 12184              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12185              		.loc 1 308 22 view .LVU4189
 12186 45f0 4909D1   		or	r9, rdx	# mask, tmp1204
 12187              	.LVL662:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12188              		.loc 1 309 17 is_stmt 1 view .LVU4190
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12189              		.loc 1 310 21 view .LVU4191
 12190              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12191              		.loc 1 310 36 is_stmt 0 view .LVU4192
 12192 45f3 48C1E806 		shr	rax, 6	# tmp1205,
 12193              	.LVL663:
 12194              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12195              		.loc 1 310 13 view .LVU4193
 12196 45f7 4839C1   		cmp	rcx, rax	# index_word, tmp1205
 12197 45fa 0F859000 		jne	.L1340	#,
 12197      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 12198              		.loc 1 307 13 is_stmt 1 view .LVU4194
 308:sieve_extend.c ****                 index += step;
 12199              		.loc 1 308 17 view .LVU4195
 12200              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12201              		.loc 1 308 25 is_stmt 0 view .LVU4196
 12202 4600 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1206, tmp601, index
 12202      F7
 12203              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12204              		.loc 1 309 23 view .LVU4197
 12205 4605 4C01E5   		add	rbp, r12	# index, step
 12206              	.LVL664:
 12207              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12208              		.loc 1 310 36 view .LVU4198
 12209 4608 4989EA   		mov	r10, rbp	# tmp1207, index
 12210              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12211              		.loc 1 308 22 view .LVU4199
 12212 460b 4909F1   		or	r9, rsi	# mask, tmp1206
 12213              	.LVL665:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12214              		.loc 1 309 17 is_stmt 1 view .LVU4200
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccH5HMHD.s 			page 331


 12215              		.loc 1 310 21 view .LVU4201
 12216              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12217              		.loc 1 310 36 is_stmt 0 view .LVU4202
 12218 460e 49C1EA06 		shr	r10, 6	# tmp1207,
 12219              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12220              		.loc 1 310 13 view .LVU4203
 12221 4612 4C39D1   		cmp	rcx, r10	# index_word, tmp1207
 12222 4615 7579     		jne	.L1340	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12223              		.loc 1 307 13 is_stmt 1 view .LVU4204
 308:sieve_extend.c ****                 index += step;
 12224              		.loc 1 308 17 view .LVU4205
 12225              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12226              		.loc 1 308 25 is_stmt 0 view .LVU4206
 12227 4617 C462D1F7 		shlx	r11, rdi, rbp	# tmp1208, tmp601, index
 12227      DF
 12228              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12229              		.loc 1 309 23 view .LVU4207
 12230 461c 4C01E5   		add	rbp, r12	# index, step
 12231              	.LVL666:
 12232              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12233              		.loc 1 310 36 view .LVU4208
 12234 461f 4889EA   		mov	rdx, rbp	# tmp1209, index
 12235              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12236              		.loc 1 308 22 view .LVU4209
 12237 4622 4D09D9   		or	r9, r11	# mask, tmp1208
 12238              	.LVL667:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12239              		.loc 1 309 17 is_stmt 1 view .LVU4210
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12240              		.loc 1 310 21 view .LVU4211
 12241              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12242              		.loc 1 310 36 is_stmt 0 view .LVU4212
 12243 4625 48C1EA06 		shr	rdx, 6	# tmp1209,
 12244              	.LVL668:
 12245              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12246              		.loc 1 310 13 view .LVU4213
 12247 4629 4839D1   		cmp	rcx, rdx	# index_word, tmp1209
 12248 462c 7562     		jne	.L1340	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12249              		.loc 1 307 13 is_stmt 1 view .LVU4214
 308:sieve_extend.c ****                 index += step;
 12250              		.loc 1 308 17 view .LVU4215
 12251              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12252              		.loc 1 308 25 is_stmt 0 view .LVU4216
 12253 462e C4E2D1F7 		shlx	rax, rdi, rbp	# tmp1210, tmp601, index
 12253      C7
 12254              	# sieve_extend.c:309:                 index += step;
GAS LISTING /tmp/ccH5HMHD.s 			page 332


 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12255              		.loc 1 309 23 view .LVU4217
 12256 4633 4C01E5   		add	rbp, r12	# index, step
 12257              	.LVL669:
 12258              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12259              		.loc 1 310 36 view .LVU4218
 12260 4636 4889EE   		mov	rsi, rbp	# tmp1211, index
 12261              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12262              		.loc 1 308 22 view .LVU4219
 12263 4639 4909C1   		or	r9, rax	# mask, tmp1210
 12264              	.LVL670:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12265              		.loc 1 309 17 is_stmt 1 view .LVU4220
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12266              		.loc 1 310 21 view .LVU4221
 12267              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12268              		.loc 1 310 36 is_stmt 0 view .LVU4222
 12269 463c 48C1EE06 		shr	rsi, 6	# tmp1211,
 12270              	.LVL671:
 12271              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12272              		.loc 1 310 13 view .LVU4223
 12273 4640 4839F1   		cmp	rcx, rsi	# index_word, tmp1211
 12274 4643 754B     		jne	.L1340	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12275              		.loc 1 307 13 is_stmt 1 view .LVU4224
 308:sieve_extend.c ****                 index += step;
 12276              		.loc 1 308 17 view .LVU4225
 12277              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12278              		.loc 1 308 25 is_stmt 0 view .LVU4226
 12279 4645 C462D1F7 		shlx	r10, rdi, rbp	# tmp1212, tmp601, index
 12279      D7
 12280              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12281              		.loc 1 309 23 view .LVU4227
 12282 464a 4C01E5   		add	rbp, r12	# index, step
 12283              	.LVL672:
 12284              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12285              		.loc 1 310 36 view .LVU4228
 12286 464d 4989EB   		mov	r11, rbp	# tmp1213, index
 12287              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12288              		.loc 1 308 22 view .LVU4229
 12289 4650 4D09D1   		or	r9, r10	# mask, tmp1212
 12290              	.LVL673:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12291              		.loc 1 309 17 is_stmt 1 view .LVU4230
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12292              		.loc 1 310 21 view .LVU4231
 12293              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12294              		.loc 1 310 36 is_stmt 0 view .LVU4232
GAS LISTING /tmp/ccH5HMHD.s 			page 333


 12295 4653 49C1EB06 		shr	r11, 6	# tmp1213,
 12296              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12297              		.loc 1 310 13 view .LVU4233
 12298 4657 4C39D9   		cmp	rcx, r11	# index_word, tmp1213
 12299 465a 7534     		jne	.L1340	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12300              		.loc 1 307 13 is_stmt 1 view .LVU4234
 308:sieve_extend.c ****                 index += step;
 12301              		.loc 1 308 17 view .LVU4235
 12302              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12303              		.loc 1 308 25 is_stmt 0 view .LVU4236
 12304 465c C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1214, tmp601, index
 12304      D7
 12305              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12306              		.loc 1 309 23 view .LVU4237
 12307 4661 4C01E5   		add	rbp, r12	# index, step
 12308              	.LVL674:
 12309              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12310              		.loc 1 310 36 view .LVU4238
 12311 4664 4889E8   		mov	rax, rbp	# tmp1215, index
 12312              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12313              		.loc 1 308 22 view .LVU4239
 12314 4667 4909D1   		or	r9, rdx	# mask, tmp1214
 12315              	.LVL675:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12316              		.loc 1 309 17 is_stmt 1 view .LVU4240
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12317              		.loc 1 310 21 view .LVU4241
 12318              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12319              		.loc 1 310 36 is_stmt 0 view .LVU4242
 12320 466a 48C1E806 		shr	rax, 6	# tmp1215,
 12321              	.LVL676:
 12322              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12323              		.loc 1 310 13 view .LVU4243
 12324 466e 4839C1   		cmp	rcx, rax	# index_word, tmp1215
 12325 4671 751D     		jne	.L1340	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12326              		.loc 1 307 13 is_stmt 1 view .LVU4244
 308:sieve_extend.c ****                 index += step;
 12327              		.loc 1 308 17 view .LVU4245
 12328              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12329              		.loc 1 308 25 is_stmt 0 view .LVU4246
 12330 4673 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1216, tmp601, index
 12330      F7
 12331              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12332              		.loc 1 309 23 view .LVU4247
 12333 4678 4C01E5   		add	rbp, r12	# index, step
 12334              	.LVL677:
GAS LISTING /tmp/ccH5HMHD.s 			page 334


 12335              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12336              		.loc 1 310 36 view .LVU4248
 12337 467b 4989EA   		mov	r10, rbp	# tmp1217, index
 12338              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12339              		.loc 1 308 22 view .LVU4249
 12340 467e 4909F1   		or	r9, rsi	# mask, tmp1216
 12341              	.LVL678:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12342              		.loc 1 309 17 is_stmt 1 view .LVU4250
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12343              		.loc 1 310 21 view .LVU4251
 12344              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12345              		.loc 1 310 36 is_stmt 0 view .LVU4252
 12346 4681 49C1EA06 		shr	r10, 6	# tmp1217,
 12347              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12348              		.loc 1 310 13 view .LVU4253
 12349 4685 4C39D1   		cmp	rcx, r10	# index_word, tmp1217
 12350 4688 0F843CFF 		je	.L893	#,
 12350      FFFF
 12351 468e 6690     		.p2align 4
 12352              		.p2align 3
 12353              	.L1340:
 313:sieve_extend.c ****         }
 12354              		.loc 1 313 13 is_stmt 1 view .LVU4254
 12355              	# sieve_extend.c:313:             bitarray[index_word] |= mask;
 313:sieve_extend.c ****         }
 12356              		.loc 1 313 34 is_stmt 0 view .LVU4255
 12357 4690 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_182, mask
 313:sieve_extend.c ****         }
 12358              		.loc 1 313 34 view .LVU4256
 12359              	.LBE564:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12360              		.loc 1 303 54 is_stmt 1 view .LVU4257
 12361              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12362              		.loc 1 303 9 is_stmt 0 view .LVU4258
 12363 4694 4939E8   		cmp	r8, rbp	# _69, index
 12364 4697 0F8323FF 		jnb	.L894	#,
 12364      FFFF
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12365              		.loc 1 303 9 view .LVU4259
 12366 469d E909F4FF 		jmp	.L883	#
 12366      FF
 12367              	.LVL679:
 12368              	.L878:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12369              		.loc 1 303 9 view .LVU4260
 12370              	.LBE563:
 12371              	.LBE562:
 12372              	.LBE561:
 12373              	.LBE566:
 12374              	.LBE569:
 12375              	.LBB570:
GAS LISTING /tmp/ccH5HMHD.s 			page 335


 12376              	.LBB520:
 853:sieve_extend.c **** }
 12377              		.loc 1 853 37 is_stmt 1 view .LVU4261
 12378 46a2 E8A9D8FF 		call	extendSieve_aligned	#
 12378      FF
 12379              	.LVL680:
 853:sieve_extend.c **** }
 12380              		.loc 1 853 37 is_stmt 0 view .LVU4262
 12381 46a7 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12381      28
 12382 46ac 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12382      18
 12383 46b1 E9B3F3FF 		jmp	.L875	#
 12383      FF
 12384              	.LVL681:
 12385              	.L1483:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12386              		.loc 1 851 37 is_stmt 1 view .LVU4263
 12387 46b6 E815DEFF 		call	extendSieve_shiftleft	#
 12387      FF
 12388              	.LVL682:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12389              		.loc 1 851 37 is_stmt 0 view .LVU4264
 12390 46bb 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12390      28
 12391 46c0 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12391      18
 12392 46c5 E99FF3FF 		jmp	.L875	#
 12392      FF
 12393              	.LVL683:
 12394              	.L1488:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12395              		.loc 1 851 37 view .LVU4265
 12396              	.LBE520:
 12397              	.LBE570:
 12398              	.LBE577:
 12399              	.LBE584:
 12400              	.LBE703:
 12401              	.LBB704:
 12402              	.LBB594:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12403              		.loc 1 852 37 is_stmt 1 view .LVU4266
 12404 46ca E8F1BFFF 		call	extendSieve_shiftright_ivdep	#
 12404      FF
 12405              	.LVL684:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12406              		.loc 1 852 37 is_stmt 0 view .LVU4267
 12407 46cf E977FDFF 		jmp	.L911	#
 12407      FF
 12408              	.LVL685:
 12409              		.p2align 4,,7
 12410 46d4 0F1F4000 		.p2align 3
 12411              	.L1420:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12412              		.loc 1 852 37 view .LVU4268
 12413 46d8 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12413      20
GAS LISTING /tmp/ccH5HMHD.s 			page 336


 12414 46dd 488D4001 		lea	rax, 1[rax]	# tmp824,
 12415              	.LVL686:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12416              		.loc 1 852 37 view .LVU4269
 12417 46e1 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 12417      28
 12418 46e6 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12418      20
 12419              	.LVL687:
 12420              	.L914:
 852:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12421              		.loc 1 852 37 view .LVU4270
 12422              	.LBE594:
 12423              	.LBE704:
 12424              	.LBB705:
 12425              	.LBB698:
 12426              	.LBB696:
 123:sieve_extend.c **** }
 12427              		.loc 1 123 5 is_stmt 1 view .LVU4271
 123:sieve_extend.c **** }
 12428              		.loc 1 123 5 is_stmt 0 view .LVU4272
 12429              	.LBE696:
 12430              	.LBE698:
 992:sieve_extend.c ****     } 
 12431              		.loc 1 992 9 is_stmt 1 view .LVU4273
 12432              	.LBB699:
 12433              	.LBB688:
 12434              	# sieve_extend.c:858:     counter_t start = prime * prime * 2 + prime * 2;
 858:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12435              		.loc 1 858 15 is_stmt 0 view .LVU4274
 12436 46eb 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp658, %sfp
 12436      20
 12437              	.LBE688:
 12438              	.LBE699:
 12439              	# sieve_extend.c:992:         sieve_block_stripe(sieve, block_start, block_stop, prime);
 992:sieve_extend.c ****     } 
 12440              		.loc 1 992 9 view .LVU4275
 12441 46f0 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 12441      30
 12442              	.LBB700:
 12443              	.LBB689:
 12444              	# sieve_extend.c:858:     counter_t start = prime * prime * 2 + prime * 2;
 858:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12445              		.loc 1 858 15 view .LVU4276
 12446 46f5 480FAF74 		imul	rsi, QWORD PTR 40[rsp]	# tmp658, %sfp
 12446      2428
 12447              	.LBE689:
 12448              	.LBE700:
 12449              	# sieve_extend.c:992:         sieve_block_stripe(sieve, block_start, block_stop, prime);
 992:sieve_extend.c ****     } 
 12450              		.loc 1 992 9 view .LVU4277
 12451 46fb 498B1E   		mov	rbx, QWORD PTR [r14]	# _30, MEM[(uint64_t * *)sieve_92]
 12452              	.LVL688:
 12453              	.LBB701:
 12454              	.LBI601:
 856:sieve_extend.c ****     counter_t prime = prime_start;
 12455              		.loc 1 856 13 is_stmt 1 view .LVU4278
GAS LISTING /tmp/ccH5HMHD.s 			page 337


 12456              	.LBB690:
 857:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 12457              		.loc 1 857 5 view .LVU4279
 858:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12458              		.loc 1 858 5 view .LVU4280
 12459              	# sieve_extend.c:858:     counter_t start = prime * prime * 2 + prime * 2;
 858:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12460              		.loc 1 858 15 is_stmt 0 view .LVU4281
 12461 46fe 4801F6   		add	rsi, rsi	# index
 12462              	.LVL689:
 859:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 12463              		.loc 1 859 5 is_stmt 1 view .LVU4282
 860:sieve_extend.c **** 
 12464              		.loc 1 860 5 view .LVU4283
 862:sieve_extend.c ****     
 12465              		.loc 1 862 5 view .LVU4284
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 12466              		.loc 1 864 5 view .LVU4285
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 12467              		.loc 1 864 11 view .LVU4286
 12468 4701 4939F4   		cmp	r12, rsi	# block_stop, index
 12469 4704 0F82D303 		jb	.L921	#,
 12469      0000
 12470              	.LBB621:
 12471              	.LBB616:
 12472              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12473              		.loc 1 244 21 is_stmt 0 view .LVU4287
 12474 470a 4C89E2   		mov	rdx, r12	# range_stop_word, block_stop
 12475              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12476              		.loc 1 268 33 view .LVU4288
 12477 470d 4489E1   		mov	ecx, r12d	# tmp660, block_stop
 12478              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12479              		.loc 1 244 21 view .LVU4289
 12480 4710 48C1EA06 		shr	rdx, 6	# range_stop_word,
 12481              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12482              		.loc 1 268 33 view .LVU4290
 12483 4714 F7D1     		not	ecx	# tmp660
 12484              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12485              		.loc 1 268 30 view .LVU4291
 12486 4716 488D2CD3 		lea	rbp, [rbx+rdx*8]	# _494,
 12487              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12488              		.loc 1 268 33 view .LVU4292
 12489 471a 49C7C5FF 		mov	r13, -1	# tmp1679,
 12489      FFFFFF
 12490              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12491              		.loc 1 244 21 view .LVU4293
 12492 4721 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, range_stop_word
 12492      10
 12493              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 338


 12494              		.loc 1 268 33 view .LVU4294
 12495 4726 C442F3F7 		shrx	r9, r13, rcx	# _499, tmp1679, tmp660
 12495      CD
 12496 472b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# index, %sfp
 12496      28
 12497 4730 4989EE   		mov	r14, rbp	# _1365, _494
 12498              	.LVL690:
 268:sieve_extend.c **** 
 12499              		.loc 1 268 33 view .LVU4295
 12500 4733 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, _499
 12500      08
 12501 4738 0F1F8400 		.p2align 4
 12501      00000000 
 12502              		.p2align 3
 12503              	.L932:
 268:sieve_extend.c **** 
 12504              		.loc 1 268 33 view .LVU4296
 12505              	.LBE616:
 12506              	.LBE621:
 865:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12507              		.loc 1 865 9 is_stmt 1 view .LVU4297
 12508              	# sieve_extend.c:865:         step  = prime * 2 + 1;
 865:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12509              		.loc 1 865 15 is_stmt 0 view .LVU4298
 12510 4740 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 12510      01
 12511              	.LVL691:
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12512              		.loc 1 866 9 is_stmt 1 view .LVU4299
 12513              	# sieve_extend.c:866:         if unlikely(step > SMALLSTEP_FASTER) break;
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12514              		.loc 1 866 12 is_stmt 0 view .LVU4300
 12515 4745 483B3D00 		cmp	rdi, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 12515      000000
 12516 474c 0F87C603 		ja	.L1489	#,
 12516      0000
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12517              		.loc 1 867 9 is_stmt 1 view .LVU4301
 12518              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12519              		.loc 1 867 12 is_stmt 0 view .LVU4302
 12520 4752 4C8D5101 		lea	r10, 1[rcx]	# _303,
 12521 4756 4D39FA   		cmp	r10, r15	# _303, block_start
 12522 4759 7710     		ja	.L922	#,
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12523              		.loc 1 867 47 is_stmt 1 view .LVU4303
 12524              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12525              		.loc 1 867 67 is_stmt 0 view .LVU4304
 12526 475b 4A8D0439 		lea	rax, [rcx+r15]	# _307,
 12527              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12528              		.loc 1 867 108 view .LVU4305
 12529 475f 31D2     		xor	edx, edx	# tmp666
 12530              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12531              		.loc 1 867 75 view .LVU4306
GAS LISTING /tmp/ccH5HMHD.s 			page 339


 12532 4761 488D3408 		lea	rsi, [rax+rcx]	# tmp664,
 12533              	.LVL692:
 12534              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12535              		.loc 1 867 108 view .LVU4307
 12536 4765 48F7F7   		div	rdi	# step
 12537              	.LVL693:
 12538              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12539              		.loc 1 867 53 view .LVU4308
 12540 4768 4829D6   		sub	rsi, rdx	# index, tmp666
 12541              	.LVL694:
 12542              	.L922:
 868:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12543              		.loc 1 868 9 is_stmt 1 view .LVU4309
 12544              	.LBB622:
 12545              	.LBI603:
 233:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 12546              		.loc 1 233 20 view .LVU4310
 12547              	.LBB617:
 234:sieve_extend.c **** 
 12548              		.loc 1 234 5 view .LVU4311
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12549              		.loc 1 237 2 view .LVU4312
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12550              		.loc 1 238 5 view .LVU4313
 12551              	.LBB605:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12552              		.loc 1 238 10 view .LVU4314
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12553              		.loc 1 238 41 view .LVU4315
 12554              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12555              		.loc 1 238 5 is_stmt 0 view .LVU4316
 12556 476b 4883FF40 		cmp	rdi, 64	# step,
 12557 476f 0F87330E 		ja	.L981	#,
 12557      0000
 12558 4775 4989F8   		mov	r8, rdi	# patternsize, step
 12559              	.LBE605:
 12560              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12561              		.loc 1 237 21 view .LVU4317
 12562 4778 B9010000 		mov	ecx, 1	# pattern,
 12562      00
 12563              	.LVL695:
 12564              	.L924:
 12565              	.LBB606:
 239:sieve_extend.c **** 
 12566              		.loc 1 239 9 is_stmt 1 view .LVU4318
 12567              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12568              		.loc 1 238 88 is_stmt 0 view .LVU4319
 12569 477d 4F8D2C00 		lea	r13, [r8+r8]	# patternsize,
 12570              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12571              		.loc 1 239 29 view .LVU4320
 12572 4781 C462B9F7 		shlx	r11, rcx, r8	# _448, pattern, patternsize
GAS LISTING /tmp/ccH5HMHD.s 			page 340


 12572      D9
 12573              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12574              		.loc 1 239 17 view .LVU4321
 12575 4786 4C09D9   		or	rcx, r11	# pattern, _448
 12576              	.LVL696:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12577              		.loc 1 238 76 is_stmt 1 view .LVU4322
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12578              		.loc 1 238 41 view .LVU4323
 12579              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12580              		.loc 1 238 5 is_stmt 0 view .LVU4324
 12581 4789 4983FD40 		cmp	r13, 64	# patternsize,
 12582 478d 0F879D00 		ja	.L923	#,
 12582      0000
 239:sieve_extend.c **** 
 12583              		.loc 1 239 9 is_stmt 1 view .LVU4325
 12584              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12585              		.loc 1 238 88 is_stmt 0 view .LVU4326
 12586 4793 4A8D0485 		lea	rax, 0[0+r8*4]	# patternsize,
 12586      00000000 
 12587              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12588              		.loc 1 239 29 view .LVU4327
 12589 479b C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12589      C9
 12590              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12591              		.loc 1 239 17 view .LVU4328
 12592 47a0 4C09C9   		or	rcx, r9	# pattern, _448
 12593              	.LVL697:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12594              		.loc 1 238 76 is_stmt 1 view .LVU4329
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12595              		.loc 1 238 41 view .LVU4330
 12596              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12597              		.loc 1 238 5 is_stmt 0 view .LVU4331
 12598 47a3 4883F840 		cmp	rax, 64	# patternsize,
 12599 47a7 0F878300 		ja	.L923	#,
 12599      0000
 239:sieve_extend.c **** 
 12600              		.loc 1 239 9 is_stmt 1 view .LVU4332
 12601              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12602              		.loc 1 238 88 is_stmt 0 view .LVU4333
 12603 47ad 4E8D1CC5 		lea	r11, 0[0+r8*8]	# patternsize,
 12603      00000000 
 12604              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12605              		.loc 1 239 29 view .LVU4334
 12606 47b5 C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12606      D1
 12607              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 341


 12608              		.loc 1 239 17 view .LVU4335
 12609 47ba 4809D1   		or	rcx, rdx	# pattern, _448
 12610              	.LVL698:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12611              		.loc 1 238 76 is_stmt 1 view .LVU4336
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12612              		.loc 1 238 41 view .LVU4337
 12613              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12614              		.loc 1 238 5 is_stmt 0 view .LVU4338
 12615 47bd 4983FB40 		cmp	r11, 64	# patternsize,
 12616 47c1 776D     		ja	.L923	#,
 239:sieve_extend.c **** 
 12617              		.loc 1 239 9 is_stmt 1 view .LVU4339
 12618              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12619              		.loc 1 238 88 is_stmt 0 view .LVU4340
 12620 47c3 4D89C1   		mov	r9, r8	# patternsize, patternsize
 12621              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12622              		.loc 1 239 29 view .LVU4341
 12623 47c6 C462A1F7 		shlx	r13, rcx, r11	# _448, pattern, patternsize
 12623      E9
 12624              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12625              		.loc 1 238 88 view .LVU4342
 12626 47cb 49C1E104 		sal	r9, 4	# patternsize,
 12627              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12628              		.loc 1 239 17 view .LVU4343
 12629 47cf 4C09E9   		or	rcx, r13	# pattern, _448
 12630              	.LVL699:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12631              		.loc 1 238 76 is_stmt 1 view .LVU4344
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12632              		.loc 1 238 41 view .LVU4345
 12633              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12634              		.loc 1 238 5 is_stmt 0 view .LVU4346
 12635 47d2 4983F940 		cmp	r9, 64	# patternsize,
 12636 47d6 7758     		ja	.L923	#,
 239:sieve_extend.c **** 
 12637              		.loc 1 239 9 is_stmt 1 view .LVU4347
 12638              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12639              		.loc 1 238 88 is_stmt 0 view .LVU4348
 12640 47d8 4C89C2   		mov	rdx, r8	# patternsize, patternsize
 12641              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12642              		.loc 1 239 29 view .LVU4349
 12643 47db C4E2B1F7 		shlx	rax, rcx, r9	# _448, pattern, patternsize
 12643      C1
 12644              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12645              		.loc 1 238 88 view .LVU4350
 12646 47e0 48C1E205 		sal	rdx, 5	# patternsize,
 12647              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccH5HMHD.s 			page 342


 239:sieve_extend.c **** 
 12648              		.loc 1 239 17 view .LVU4351
 12649 47e4 4809C1   		or	rcx, rax	# pattern, _448
 12650              	.LVL700:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12651              		.loc 1 238 76 is_stmt 1 view .LVU4352
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12652              		.loc 1 238 41 view .LVU4353
 12653              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12654              		.loc 1 238 5 is_stmt 0 view .LVU4354
 12655 47e7 4883FA40 		cmp	rdx, 64	# patternsize,
 12656 47eb 7743     		ja	.L923	#,
 239:sieve_extend.c **** 
 12657              		.loc 1 239 9 is_stmt 1 view .LVU4355
 12658              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12659              		.loc 1 238 88 is_stmt 0 view .LVU4356
 12660 47ed 4D89C5   		mov	r13, r8	# patternsize, patternsize
 12661              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12662              		.loc 1 239 29 view .LVU4357
 12663 47f0 C462E9F7 		shlx	r11, rcx, rdx	# _448, pattern, patternsize
 12663      D9
 12664              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12665              		.loc 1 238 88 view .LVU4358
 12666 47f5 49C1E506 		sal	r13, 6	# patternsize,
 12667              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12668              		.loc 1 239 17 view .LVU4359
 12669 47f9 4C09D9   		or	rcx, r11	# pattern, _448
 12670              	.LVL701:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12671              		.loc 1 238 76 is_stmt 1 view .LVU4360
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12672              		.loc 1 238 41 view .LVU4361
 12673              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12674              		.loc 1 238 5 is_stmt 0 view .LVU4362
 12675 47fc 4983FD40 		cmp	r13, 64	# patternsize,
 12676 4800 772E     		ja	.L923	#,
 239:sieve_extend.c **** 
 12677              		.loc 1 239 9 is_stmt 1 view .LVU4363
 12678              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12679              		.loc 1 238 88 is_stmt 0 view .LVU4364
 12680 4802 4C89C0   		mov	rax, r8	# patternsize, patternsize
 12681              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12682              		.loc 1 239 29 view .LVU4365
 12683 4805 C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12683      C9
 12684              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12685              		.loc 1 238 88 view .LVU4366
 12686 480a 48C1E007 		sal	rax, 7	# patternsize,
GAS LISTING /tmp/ccH5HMHD.s 			page 343


 12687              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12688              		.loc 1 239 17 view .LVU4367
 12689 480e 4C09C9   		or	rcx, r9	# pattern, _448
 12690              	.LVL702:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12691              		.loc 1 238 76 is_stmt 1 view .LVU4368
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12692              		.loc 1 238 41 view .LVU4369
 12693              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12694              		.loc 1 238 5 is_stmt 0 view .LVU4370
 12695 4811 4883F840 		cmp	rax, 64	# patternsize,
 12696 4815 7719     		ja	.L923	#,
 239:sieve_extend.c **** 
 12697              		.loc 1 239 9 is_stmt 1 view .LVU4371
 12698              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12699              		.loc 1 238 88 is_stmt 0 view .LVU4372
 12700 4817 49C1E008 		sal	r8, 8	# patternsize,
 12701              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12702              		.loc 1 239 29 view .LVU4373
 12703 481b C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12703      D1
 12704              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12705              		.loc 1 239 17 view .LVU4374
 12706 4820 4809D1   		or	rcx, rdx	# pattern, _448
 12707              	.LVL703:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12708              		.loc 1 238 76 is_stmt 1 view .LVU4375
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12709              		.loc 1 238 41 view .LVU4376
 12710              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12711              		.loc 1 238 5 is_stmt 0 view .LVU4377
 12712 4823 4983F840 		cmp	r8, 64	# patternsize,
 12713 4827 0F8650FF 		jbe	.L924	#,
 12713      FFFF
 12714              	.LVL704:
 12715 482d 0F1F00   		.p2align 4
 12716              		.p2align 3
 12717              	.L923:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12718              		.loc 1 238 5 view .LVU4378
 12719              	.LBE606:
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12720              		.loc 1 244 5 is_stmt 1 view .LVU4379
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 12721              		.loc 1 245 5 view .LVU4380
 12722              	# sieve_extend.c:245:     register counter_t range_start_word = wordindex(range_start);
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 12723              		.loc 1 245 24 is_stmt 0 view .LVU4381
 12724 4830 4989F0   		mov	r8, rsi	# range_start_word, index
 12725 4833 C462C9F7 		shlx	r9, rcx, rsi	# _1284, pattern, index
 12725      C9
GAS LISTING /tmp/ccH5HMHD.s 			page 344


 12726 4838 49C1E806 		shr	r8, 6	# range_start_word,
 12727              	.LVL705:
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 12728              		.loc 1 246 6 is_stmt 1 view .LVU4382
 12729              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 12730              		.loc 1 246 9 is_stmt 0 view .LVU4383
 12731 483c 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 12731      10
 12732 4841 4E8D1CC3 		lea	r11, [rbx+r8*8]	# _1281,
 12733 4845 4D8B2B   		mov	r13, QWORD PTR [r11]	# pretmp_1282, *_1281
 12734 4848 0F86BA02 		jbe	.L1490	#,
 12734      0000
 252:sieve_extend.c **** 
 12735              		.loc 1 252 5 is_stmt 1 view .LVU4384
 12736              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12737              		.loc 1 256 80 is_stmt 0 view .LVU4385
 12738 484e 31D2     		xor	edx, edx	# tmp675
 12739 4850 B8400000 		mov	eax, 64	# tmp676,
 12739      00
 12740 4855 48F7F7   		div	rdi	# step
 12741              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 12742              		.loc 1 252 32 view .LVU4386
 12743 4858 4D09E9   		or	r9, r13	# tmp673, pretmp_1282
 12744              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12745              		.loc 1 258 33 view .LVU4387
 12746 485b 4889F0   		mov	rax, rsi	# index, index
 12747              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 12748              		.loc 1 252 32 view .LVU4388
 12749 485e 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp673
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12750              		.loc 1 256 4 is_stmt 1 view .LVU4389
 12751              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12752              		.loc 1 256 24 is_stmt 0 view .LVU4390
 12753 4861 41BD4000 		mov	r13d, 64	# pattern_size,
 12753      0000
 12754              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12755              		.loc 1 257 24 view .LVU4391
 12756 4867 4989F9   		mov	r9, rdi	# pattern_shift, step
 12757              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12758              		.loc 1 258 33 view .LVU4392
 12759 486a 83E03F   		and	eax, 63	# index,
 12760              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12761              		.loc 1 256 24 view .LVU4393
 12762 486d 4929D5   		sub	r13, rdx	# pattern_size, tmp675
 12763              	.LVL706:
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12764              		.loc 1 257 4 is_stmt 1 view .LVU4394
 12765              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
GAS LISTING /tmp/ccH5HMHD.s 			page 345


 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12766              		.loc 1 257 24 is_stmt 0 view .LVU4395
 12767 4870 4929D1   		sub	r9, rdx	# pattern_shift, tmp675
 12768              	.LVL707:
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12769              		.loc 1 258 4 is_stmt 1 view .LVU4396
 12770              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12771              		.loc 1 258 24 is_stmt 0 view .LVU4397
 12772 4873 31D2     		xor	edx, edx	# tmp679
 12773 4875 48F7F7   		div	rdi	# step
 12774              	.LVL708:
 259:sieve_extend.c ****    #pragma unroll
 12775              		.loc 1 259 4 is_stmt 1 view .LVU4398
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12776              		.loc 1 262 4 view .LVU4399
 12777              	.LBB607:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12778              		.loc 1 262 9 view .LVU4400
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12779              		.loc 1 262 24 view .LVU4401
 12780              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12781              		.loc 1 262 4 is_stmt 0 view .LVU4402
 12782 4878 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 12782      10
 12783 487d 0F845D01 		je	.L929	#,
 12783      0000
 12784 4883 4C89F0   		mov	rax, r14	# tmp843, _1365
 12785 4886 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.613,
 12786              	.LVL709:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12787              		.loc 1 262 4 view .LVU4403
 12788 488a 4C29D8   		sub	rax, r11	# tmp843, ivtmp.615
 12789 488d 4D89D8   		mov	r8, r11	# ivtmp.615, _1281
 12790              	.LVL710:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12791              		.loc 1 262 4 view .LVU4404
 12792 4890 4883E808 		sub	rax, 8	# tmp844,
 12793 4894 48C1E803 		shr	rax, 3	# tmp842,
 12794 4898 4883C001 		add	rax, 1	# tmp845,
 12795 489c 83E003   		and	eax, 3	# tmp846,
 12796 489f 0F849800 		je	.L928	#,
 12796      0000
 12797 48a5 4883F801 		cmp	rax, 1	# tmp846,
 12798 48a9 7461     		je	.L1197	#,
 12799 48ab 4883F802 		cmp	rax, 2	# tmp846,
 12800 48af 7433     		je	.L1198	#,
 12801              	.LVL711:
 12802              	.LBB608:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12803              		.loc 1 263 9 is_stmt 1 view .LVU4405
 264:sieve_extend.c **** 
 12804              		.loc 1 264 8 view .LVU4406
 12805              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12806              		.loc 1 263 20 is_stmt 0 view .LVU4407
GAS LISTING /tmp/ccH5HMHD.s 			page 346


 12807 48b1 4889F0   		mov	rax, rsi	# tmp1085, ivtmp.613
 12808 48b4 31D2     		xor	edx, edx	# totalshift
 12809              	.LVL712:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12810              		.loc 1 263 20 view .LVU4408
 12811 48b6 48F7F7   		div	rdi	# step
 12812 48b9 4983C008 		add	r8, 8	# ivtmp.615,
 12813 48bd 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12814              	.LVL713:
 12815              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12816              		.loc 1 264 91 view .LVU4409
 12817 48c0 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1086, pattern, totalshift
 12817      C1
 12818              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12819              		.loc 1 264 37 view .LVU4410
 12820 48c5 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1086, MEM[base: _1370, offset: 8B]
 12821 48c9 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp1086
 12821      18
 12822              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12823              		.loc 1 264 66 view .LVU4411
 12824 48ce 4489E8   		mov	eax, r13d	# tmp1088, _1295
 12825 48d1 29D0     		sub	eax, edx	# tmp1088, totalshift
 12826              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12827              		.loc 1 264 50 view .LVU4412
 12828 48d3 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1089, pattern, tmp1088
 12828      D1
 12829              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12830              		.loc 1 264 37 view .LVU4413
 12831 48d8 488B4424 		mov	rax, QWORD PTR 24[rsp]	# tmp1087, %sfp
 12831      18
 12832 48dd 4809D0   		or	rax, rdx	# tmp1087, tmp1089
 12833 48e0 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1370, offset: 8B], tmp1090
 12834              	.LBE608:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12835              		.loc 1 262 41 is_stmt 1 view .LVU4414
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12836              		.loc 1 262 24 view .LVU4415
 12837              	.L1198:
 12838              	.LBB609:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12839              		.loc 1 263 9 view .LVU4416
 264:sieve_extend.c **** 
 12840              		.loc 1 264 8 view .LVU4417
 12841              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12842              		.loc 1 263 20 is_stmt 0 view .LVU4418
 12843 48e4 4889F0   		mov	rax, rsi	# tmp1092, ivtmp.613
 12844 48e7 31D2     		xor	edx, edx	# totalshift
 12845 48e9 48F7F7   		div	rdi	# step
 12846              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12847              		.loc 1 264 66 view .LVU4419
GAS LISTING /tmp/ccH5HMHD.s 			page 347


 12848 48ec 4589EB   		mov	r11d, r13d	# tmp1095, _1295
 12849 48ef 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12850 48f2 4983C008 		add	r8, 8	# ivtmp.615,
 12851              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12852              		.loc 1 264 91 view .LVU4420
 12853 48f6 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1093, pattern, totalshift
 12853      C1
 12854              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12855              		.loc 1 264 37 view .LVU4421
 12856 48fb 490B00   		or	rax, QWORD PTR [r8]	# tmp1094, MEM[base: _1370, offset: 8B]
 12857              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12858              		.loc 1 264 66 view .LVU4422
 12859 48fe 4129D3   		sub	r11d, edx	# tmp1095, totalshift
 12860              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12861              		.loc 1 264 50 view .LVU4423
 12862 4901 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1096, pattern, tmp1095
 12862      D1
 12863              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12864              		.loc 1 264 37 view .LVU4424
 12865 4906 4809D0   		or	rax, rdx	# tmp1097, tmp1096
 12866 4909 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1097
 12867              	.LBE609:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12868              		.loc 1 262 41 is_stmt 1 view .LVU4425
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12869              		.loc 1 262 24 view .LVU4426
 12870              	.L1197:
 12871              	.LBB610:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12872              		.loc 1 263 9 view .LVU4427
 264:sieve_extend.c **** 
 12873              		.loc 1 264 8 view .LVU4428
 12874              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12875              		.loc 1 263 20 is_stmt 0 view .LVU4429
 12876 490c 4889F0   		mov	rax, rsi	# tmp1099, ivtmp.613
 12877 490f 31D2     		xor	edx, edx	# totalshift
 12878 4911 48F7F7   		div	rdi	# step
 12879              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12880              		.loc 1 264 66 view .LVU4430
 12881 4914 4589EB   		mov	r11d, r13d	# tmp1102, _1295
 12882 4917 4983C008 		add	r8, 8	# ivtmp.615,
 12883 491b 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12884              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12885              		.loc 1 264 91 view .LVU4431
 12886 491e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1100, pattern, totalshift
 12886      C1
 12887              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12888              		.loc 1 264 37 view .LVU4432
GAS LISTING /tmp/ccH5HMHD.s 			page 348


 12889 4923 490B00   		or	rax, QWORD PTR [r8]	# tmp1101, MEM[base: _1370, offset: 8B]
 12890              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12891              		.loc 1 264 66 view .LVU4433
 12892 4926 4129D3   		sub	r11d, edx	# tmp1102, totalshift
 12893              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12894              		.loc 1 264 50 view .LVU4434
 12895 4929 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1103, pattern, tmp1102
 12895      D1
 12896              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12897              		.loc 1 264 37 view .LVU4435
 12898 492e 4809D0   		or	rax, rdx	# tmp1104, tmp1103
 12899 4931 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1104
 12900              	.LBE610:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12901              		.loc 1 262 41 is_stmt 1 view .LVU4436
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12902              		.loc 1 262 24 view .LVU4437
 12903              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12904              		.loc 1 262 4 is_stmt 0 view .LVU4438
 12905 4934 4D39C6   		cmp	r14, r8	# _1365, ivtmp.615
 12906 4937 0F84A300 		je	.L929	#,
 12906      0000
 12907              	.L928:
 12908              	.LBB611:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12909              		.loc 1 263 9 is_stmt 1 view .LVU4439
 264:sieve_extend.c **** 
 12910              		.loc 1 264 8 view .LVU4440
 12911              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12912              		.loc 1 263 20 is_stmt 0 view .LVU4441
 12913 493d 4889F0   		mov	rax, rsi	# tmp685, ivtmp.613
 12914 4940 31D2     		xor	edx, edx	# totalshift
 12915 4942 48F7F7   		div	rdi	# step
 12916              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12917              		.loc 1 264 66 view .LVU4442
 12918 4945 4589EB   		mov	r11d, r13d	# tmp688, _1295
 12919 4948 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12920 494b 4983C020 		add	r8, 32	# ivtmp.615,
 12921              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12922              		.loc 1 264 91 view .LVU4443
 12923 494f C4E2E9F7 		shlx	rax, rcx, rdx	# tmp686, pattern, totalshift
 12923      C1
 12924              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12925              		.loc 1 264 37 view .LVU4444
 12926 4954 490B40E8 		or	rax, QWORD PTR -24[r8]	# tmp687, MEM[base: _1370, offset: 8B]
 12927              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12928              		.loc 1 264 66 view .LVU4445
 12929 4958 4129D3   		sub	r11d, edx	# tmp688, totalshift
GAS LISTING /tmp/ccH5HMHD.s 			page 349


 12930              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12931              		.loc 1 264 50 view .LVU4446
 12932 495b C4E2A3F7 		shrx	rdx, rcx, r11	# tmp689, pattern, tmp688
 12932      D1
 12933              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12934              		.loc 1 264 66 view .LVU4447
 12935 4960 4589EB   		mov	r11d, r13d	# tmp898, _1295
 12936              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12937              		.loc 1 264 37 view .LVU4448
 12938 4963 4809D0   		or	rax, rdx	# tmp690, tmp689
 12939              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12940              		.loc 1 263 20 view .LVU4449
 12941 4966 31D2     		xor	edx, edx	# totalshift
 12942              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12943              		.loc 1 264 37 view .LVU4450
 12944 4968 498940E8 		mov	QWORD PTR -24[r8], rax	# MEM[base: _1370, offset: 8B], tmp690
 12945              	.LBE611:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12946              		.loc 1 262 41 is_stmt 1 view .LVU4451
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12947              		.loc 1 262 24 view .LVU4452
 12948              	.LBB612:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12949              		.loc 1 263 9 view .LVU4453
 264:sieve_extend.c **** 
 12950              		.loc 1 264 8 view .LVU4454
 12951              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12952              		.loc 1 263 20 is_stmt 0 view .LVU4455
 12953 496c 4889F0   		mov	rax, rsi	# tmp895, ivtmp.613
 12954 496f 48F7F7   		div	rdi	# step
 12955 4972 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12956              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12957              		.loc 1 264 91 view .LVU4456
 12958 4975 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp896, pattern, totalshift
 12958      C1
 12959              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12960              		.loc 1 264 37 view .LVU4457
 12961 497a 490B40F0 		or	rax, QWORD PTR -16[r8]	# tmp897, MEM[base: _1370, offset: 8B]
 12962              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12963              		.loc 1 264 66 view .LVU4458
 12964 497e 4129D3   		sub	r11d, edx	# tmp898, totalshift
 12965              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12966              		.loc 1 264 50 view .LVU4459
 12967 4981 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp899, pattern, tmp898
 12967      D1
 12968              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 350


 12969              		.loc 1 264 66 view .LVU4460
 12970 4986 4589EB   		mov	r11d, r13d	# tmp907, _1295
 12971              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12972              		.loc 1 264 37 view .LVU4461
 12973 4989 4809D0   		or	rax, rdx	# tmp900, tmp899
 12974              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12975              		.loc 1 263 20 view .LVU4462
 12976 498c 31D2     		xor	edx, edx	# totalshift
 12977              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12978              		.loc 1 264 37 view .LVU4463
 12979 498e 498940F0 		mov	QWORD PTR -16[r8], rax	# MEM[base: _1370, offset: 8B], tmp900
 12980              	.LBE612:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12981              		.loc 1 262 41 is_stmt 1 view .LVU4464
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12982              		.loc 1 262 24 view .LVU4465
 12983              	.LBB613:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12984              		.loc 1 263 9 view .LVU4466
 264:sieve_extend.c **** 
 12985              		.loc 1 264 8 view .LVU4467
 12986              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12987              		.loc 1 263 20 is_stmt 0 view .LVU4468
 12988 4992 4889F0   		mov	rax, rsi	# tmp904, ivtmp.613
 12989 4995 48F7F7   		div	rdi	# step
 12990 4998 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 12991              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12992              		.loc 1 264 91 view .LVU4469
 12993 499b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp905, pattern, totalshift
 12993      C1
 12994              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12995              		.loc 1 264 37 view .LVU4470
 12996 49a0 490B40F8 		or	rax, QWORD PTR -8[r8]	# tmp906, MEM[base: _1370, offset: 8B]
 12997              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 12998              		.loc 1 264 66 view .LVU4471
 12999 49a4 4129D3   		sub	r11d, edx	# tmp907, totalshift
 13000              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13001              		.loc 1 264 50 view .LVU4472
 13002 49a7 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp908, pattern, tmp907
 13002      D1
 13003              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13004              		.loc 1 264 66 view .LVU4473
 13005 49ac 4589EB   		mov	r11d, r13d	# tmp916, _1295
 13006              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13007              		.loc 1 264 37 view .LVU4474
 13008 49af 4809D0   		or	rax, rdx	# tmp909, tmp908
 13009              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/ccH5HMHD.s 			page 351


 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13010              		.loc 1 263 20 view .LVU4475
 13011 49b2 31D2     		xor	edx, edx	# totalshift
 13012              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13013              		.loc 1 264 37 view .LVU4476
 13014 49b4 498940F8 		mov	QWORD PTR -8[r8], rax	# MEM[base: _1370, offset: 8B], tmp909
 13015              	.LBE613:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13016              		.loc 1 262 41 is_stmt 1 view .LVU4477
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13017              		.loc 1 262 24 view .LVU4478
 13018              	.LBB614:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13019              		.loc 1 263 9 view .LVU4479
 264:sieve_extend.c **** 
 13020              		.loc 1 264 8 view .LVU4480
 13021              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13022              		.loc 1 263 20 is_stmt 0 view .LVU4481
 13023 49b8 4889F0   		mov	rax, rsi	# tmp913, ivtmp.613
 13024 49bb 48F7F7   		div	rdi	# step
 13025 49be 4C01CE   		add	rsi, r9	# ivtmp.613, pattern_shift
 13026              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13027              		.loc 1 264 91 view .LVU4482
 13028 49c1 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp914, pattern, totalshift
 13028      C1
 13029              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13030              		.loc 1 264 37 view .LVU4483
 13031 49c6 490B00   		or	rax, QWORD PTR [r8]	# tmp915, MEM[base: _1370, offset: 8B]
 13032              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13033              		.loc 1 264 66 view .LVU4484
 13034 49c9 4129D3   		sub	r11d, edx	# tmp916, totalshift
 13035              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13036              		.loc 1 264 50 view .LVU4485
 13037 49cc C4E2A3F7 		shrx	rdx, rcx, r11	# tmp917, pattern, tmp916
 13037      D1
 13038              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13039              		.loc 1 264 37 view .LVU4486
 13040 49d1 4809D0   		or	rax, rdx	# tmp918, tmp917
 13041 49d4 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp918
 13042              	.LBE614:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13043              		.loc 1 262 41 is_stmt 1 view .LVU4487
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13044              		.loc 1 262 24 view .LVU4488
 13045              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13046              		.loc 1 262 4 is_stmt 0 view .LVU4489
 13047 49d7 4D39C6   		cmp	r14, r8	# _1365, ivtmp.615
 13048 49da 0F855DFF 		jne	.L928	#,
 13048      FFFF
GAS LISTING /tmp/ccH5HMHD.s 			page 352


 13049              	.L929:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13050              		.loc 1 262 4 view .LVU4490
 13051              	.LBE607:
 268:sieve_extend.c **** 
 13052              		.loc 1 268 4 is_stmt 1 view .LVU4491
 13053              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 13054              		.loc 1 268 30 is_stmt 0 view .LVU4492
 13055 49e0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _499, %sfp
 13055      08
 13056              	.LVL714:
 268:sieve_extend.c **** 
 13057              		.loc 1 268 30 view .LVU4493
 13058 49e5 48217D00 		and	QWORD PTR 0[rbp], rdi	# *_494, _499
 13059              	.LVL715:
 13060              	.L926:
 268:sieve_extend.c **** 
 13061              		.loc 1 268 30 view .LVU4494
 13062              	.LBE617:
 13063              	.LBE622:
 869:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13064              		.loc 1 869 9 is_stmt 1 view .LVU4495
 13065              	.LBB623:
 13066              	.LBI623:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13067              		.loc 1 121 25 view .LVU4496
 13068              	.LBB624:
 122:sieve_extend.c ****     return index;
 13069              		.loc 1 122 5 view .LVU4497
 122:sieve_extend.c ****     return index;
 13070              		.loc 1 122 11 view .LVU4498
 13071              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13072              		.loc 1 122 21 is_stmt 0 view .LVU4499
 13073 49e9 4C89D1   		mov	rcx, r10	# tmp691, _303
 13074 49ec 48C1E906 		shr	rcx, 6	# tmp691,
 13075              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13076              		.loc 1 122 12 view .LVU4500
 13077 49f0 4C8B2CCB 		mov	r13, QWORD PTR [rbx+rcx*8]	# *_331, *_331
 13078              	.LBE624:
 13079              	.LBE623:
 13080              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 867:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 13081              		.loc 1 867 12 view .LVU4501
 13082 49f4 4C89D1   		mov	rcx, r10	# index, _303
 13083              	.LBB626:
 13084              	.LBB625:
 13085              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13086              		.loc 1 122 11 view .LVU4502
 13087 49f7 4D0FA3D5 		bt	r13, r10	# *_331, _303
 13088 49fb 0F83BF00 		jnc	.L930	#,
 13088      0000
 13089              	.LVL716:
 13090              	.L931:
GAS LISTING /tmp/ccH5HMHD.s 			page 353


 122:sieve_extend.c ****     return index;
 13091              		.loc 1 122 58 is_stmt 1 view .LVU4503
 13092              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13093              		.loc 1 122 63 is_stmt 0 view .LVU4504
 13094 4a01 4C8D5101 		lea	r10, 1[rcx]	# tmp841,
 13095              	.LVL717:
 13096              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13097              		.loc 1 122 21 view .LVU4505
 13098 4a05 4D89D1   		mov	r9, r10	# tmp696, index
 13099              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13100              		.loc 1 122 63 view .LVU4506
 13101 4a08 4C89D1   		mov	rcx, r10	# index, tmp841
 122:sieve_extend.c ****     return index;
 13102              		.loc 1 122 11 is_stmt 1 view .LVU4507
 13103              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13104              		.loc 1 122 21 is_stmt 0 view .LVU4508
 13105 4a0b 49C1E906 		shr	r9, 6	# tmp696,
 13106              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13107              		.loc 1 122 12 view .LVU4509
 13108 4a0f 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13109              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13110              		.loc 1 122 11 view .LVU4510
 13111 4a13 4C0FA3D6 		bt	rsi, r10	# *_316, index
 13112 4a17 0F83A300 		jnc	.L930	#,
 13112      0000
 122:sieve_extend.c ****     return index;
 13113              		.loc 1 122 58 is_stmt 1 view .LVU4511
 13114              	.LVL718:
 13115              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13116              		.loc 1 122 63 is_stmt 0 view .LVU4512
 13117 4a1d 4883C101 		add	rcx, 1	# index,
 13118              	.LVL719:
 122:sieve_extend.c ****     return index;
 13119              		.loc 1 122 11 is_stmt 1 view .LVU4513
 13120              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13121              		.loc 1 122 21 is_stmt 0 view .LVU4514
 13122 4a21 4989C8   		mov	r8, rcx	# tmp1056, index
 13123 4a24 49C1E806 		shr	r8, 6	# tmp1056,
 13124              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13125              		.loc 1 122 12 view .LVU4515
 13126 4a28 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13127              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13128              		.loc 1 122 11 view .LVU4516
 13129 4a2c 480FA3C8 		bt	rax, rcx	# *_316, index
 13130 4a30 0F838A00 		jnc	.L930	#,
 13130      0000
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccH5HMHD.s 			page 354


 13131              		.loc 1 122 58 is_stmt 1 view .LVU4517
 13132              	.LVL720:
 13133              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13134              		.loc 1 122 63 is_stmt 0 view .LVU4518
 13135 4a36 498D4A02 		lea	rcx, 2[r10]	# index,
 13136              	.LVL721:
 122:sieve_extend.c ****     return index;
 13137              		.loc 1 122 11 is_stmt 1 view .LVU4519
 13138              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13139              		.loc 1 122 21 is_stmt 0 view .LVU4520
 13140 4a3a 4989CB   		mov	r11, rcx	# tmp1060, index
 13141 4a3d 49C1EB06 		shr	r11, 6	# tmp1060,
 13142              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13143              		.loc 1 122 12 view .LVU4521
 13144 4a41 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13145              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13146              		.loc 1 122 11 view .LVU4522
 13147 4a45 480FA3CA 		bt	rdx, rcx	# *_316, index
 13148 4a49 7375     		jnc	.L930	#,
 122:sieve_extend.c ****     return index;
 13149              		.loc 1 122 58 is_stmt 1 view .LVU4523
 13150              	.LVL722:
 13151              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13152              		.loc 1 122 63 is_stmt 0 view .LVU4524
 13153 4a4b 498D4A03 		lea	rcx, 3[r10]	# index,
 13154              	.LVL723:
 122:sieve_extend.c ****     return index;
 13155              		.loc 1 122 11 is_stmt 1 view .LVU4525
 13156              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13157              		.loc 1 122 21 is_stmt 0 view .LVU4526
 13158 4a4f 4889CF   		mov	rdi, rcx	# tmp1064, index
 13159 4a52 48C1EF06 		shr	rdi, 6	# tmp1064,
 13160              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13161              		.loc 1 122 12 view .LVU4527
 13162 4a56 4C8B2CFB 		mov	r13, QWORD PTR [rbx+rdi*8]	# *_316, *_316
 13163              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13164              		.loc 1 122 11 view .LVU4528
 13165 4a5a 490FA3CD 		bt	r13, rcx	# *_316, index
 13166 4a5e 7360     		jnc	.L930	#,
 122:sieve_extend.c ****     return index;
 13167              		.loc 1 122 58 is_stmt 1 view .LVU4529
 13168              	.LVL724:
 13169              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13170              		.loc 1 122 63 is_stmt 0 view .LVU4530
 13171 4a60 498D4A04 		lea	rcx, 4[r10]	# index,
 13172              	.LVL725:
 122:sieve_extend.c ****     return index;
 13173              		.loc 1 122 11 is_stmt 1 view .LVU4531
GAS LISTING /tmp/ccH5HMHD.s 			page 355


 13174              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13175              		.loc 1 122 21 is_stmt 0 view .LVU4532
 13176 4a64 4989C9   		mov	r9, rcx	# tmp1068, index
 13177 4a67 49C1E906 		shr	r9, 6	# tmp1068,
 13178              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13179              		.loc 1 122 12 view .LVU4533
 13180 4a6b 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13181              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13182              		.loc 1 122 11 view .LVU4534
 13183 4a6f 480FA3CE 		bt	rsi, rcx	# *_316, index
 13184 4a73 734B     		jnc	.L930	#,
 122:sieve_extend.c ****     return index;
 13185              		.loc 1 122 58 is_stmt 1 view .LVU4535
 13186              	.LVL726:
 13187              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13188              		.loc 1 122 63 is_stmt 0 view .LVU4536
 13189 4a75 498D4A05 		lea	rcx, 5[r10]	# index,
 13190              	.LVL727:
 122:sieve_extend.c ****     return index;
 13191              		.loc 1 122 11 is_stmt 1 view .LVU4537
 13192              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13193              		.loc 1 122 21 is_stmt 0 view .LVU4538
 13194 4a79 4989C8   		mov	r8, rcx	# tmp1072, index
 13195 4a7c 49C1E806 		shr	r8, 6	# tmp1072,
 13196              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13197              		.loc 1 122 12 view .LVU4539
 13198 4a80 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13199              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13200              		.loc 1 122 11 view .LVU4540
 13201 4a84 480FA3C8 		bt	rax, rcx	# *_316, index
 13202 4a88 7336     		jnc	.L930	#,
 122:sieve_extend.c ****     return index;
 13203              		.loc 1 122 58 is_stmt 1 view .LVU4541
 13204              	.LVL728:
 13205              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13206              		.loc 1 122 63 is_stmt 0 view .LVU4542
 13207 4a8a 498D4A06 		lea	rcx, 6[r10]	# index,
 13208              	.LVL729:
 122:sieve_extend.c ****     return index;
 13209              		.loc 1 122 11 is_stmt 1 view .LVU4543
 13210              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13211              		.loc 1 122 21 is_stmt 0 view .LVU4544
 13212 4a8e 4989CB   		mov	r11, rcx	# tmp1076, index
 13213 4a91 49C1EB06 		shr	r11, 6	# tmp1076,
 13214              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13215              		.loc 1 122 12 view .LVU4545
 13216 4a95 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
GAS LISTING /tmp/ccH5HMHD.s 			page 356


 13217              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13218              		.loc 1 122 11 view .LVU4546
 13219 4a99 480FA3CA 		bt	rdx, rcx	# *_316, index
 13220 4a9d 7321     		jnc	.L930	#,
 122:sieve_extend.c ****     return index;
 13221              		.loc 1 122 58 is_stmt 1 view .LVU4547
 13222              	.LVL730:
 13223              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13224              		.loc 1 122 63 is_stmt 0 view .LVU4548
 13225 4a9f 498D4A07 		lea	rcx, 7[r10]	# index,
 13226              	.LVL731:
 122:sieve_extend.c ****     return index;
 13227              		.loc 1 122 11 is_stmt 1 view .LVU4549
 13228              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13229              		.loc 1 122 21 is_stmt 0 view .LVU4550
 13230 4aa3 4989CA   		mov	r10, rcx	# tmp1080, index
 13231 4aa6 49C1EA06 		shr	r10, 6	# tmp1080,
 13232              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13233              		.loc 1 122 12 view .LVU4551
 13234 4aaa 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_316, *_316
 13235              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13236              		.loc 1 122 11 view .LVU4552
 13237 4aae 480FA3CF 		bt	rdi, rcx	# *_316, index
 13238 4ab2 0F8249FF 		jc	.L931	#,
 13238      FFFF
 13239              	.LVL732:
 13240 4ab8 0F1F8400 		.p2align 4
 13240      00000000 
 13241              		.p2align 3
 13242              	.L930:
 123:sieve_extend.c **** }
 13243              		.loc 1 123 5 is_stmt 1 view .LVU4553
 123:sieve_extend.c **** }
 13244              		.loc 1 123 5 is_stmt 0 view .LVU4554
 13245              	.LBE625:
 13246              	.LBE626:
 870:sieve_extend.c ****     }
 13247              		.loc 1 870 9 is_stmt 1 view .LVU4555
 13248              	# sieve_extend.c:870:         start = prime * prime * 2 + prime * 2;
 870:sieve_extend.c ****     }
 13249              		.loc 1 870 35 is_stmt 0 view .LVU4556
 13250 4ac0 488D7101 		lea	rsi, 1[rcx]	# _411,
 13251              	# sieve_extend.c:870:         start = prime * prime * 2 + prime * 2;
 870:sieve_extend.c ****     }
 13252              		.loc 1 870 15 view .LVU4557
 13253 4ac4 480FAFF1 		imul	rsi, rcx	# tmp702, index
 13254              	.LVL733:
 870:sieve_extend.c ****     }
 13255              		.loc 1 870 15 view .LVU4558
 13256 4ac8 4801F6   		add	rsi, rsi	# index
 13257              	.LVL734:
 864:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccH5HMHD.s 			page 357


 13258              		.loc 1 864 11 is_stmt 1 view .LVU4559
 13259 4acb 4939F4   		cmp	r12, rsi	# block_stop, index
 13260 4ace 0F836CFC 		jnb	.L932	#,
 13260      FFFF
 13261              	.LVL735:
 13262              	.L1472:
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 13263              		.loc 1 864 11 is_stmt 0 view .LVU4560
 13264 4ad4 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 13264      30
 13265              	.LVL736:
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 13266              		.loc 1 864 11 view .LVU4561
 13267 4ad9 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 13268              	.L921:
 13269              	.LVL737:
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 13270              		.loc 1 864 11 view .LVU4562
 13271              	.LBE690:
 13272              	.LBE701:
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13273              		.loc 1 989 91 is_stmt 1 view .LVU4563
 13274              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13275              		.loc 1 989 103 is_stmt 0 view .LVU4564
 13276 4add 488B6C24 		mov	rbp, QWORD PTR 64[rsp]	# blocksize, %sfp
 13276      40
 13277 4ae2 4901EF   		add	r15, rbp	# block_start, blocksize
 13278              	.LVL738:
 13279              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13280              		.loc 1 989 128 view .LVU4565
 13281 4ae5 4901EC   		add	r12, rbp	# block_stop, blocksize
 13282              	.LVL739:
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13283              		.loc 1 989 63 is_stmt 1 view .LVU4566
 13284              	# sieve_extend.c:989:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 989:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13285              		.loc 1 989 5 is_stmt 0 view .LVU4567
 13286 4ae8 4C39FA   		cmp	rdx, r15	# _8, block_start
 13287 4aeb 0F838FF9 		jnb	.L917	#,
 13287      FFFF
 13288              	.LBE705:
 13289              	# sieve_extend.c:996: }
 996:sieve_extend.c **** 
 13290              		.loc 1 996 1 view .LVU4568
 13291 4af1 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 13291      30
 13292 4af6 488D6424 		lea	rsp, 104[rsp]	#,
 13292      68
 13293              		.cfi_remember_state
 13294              		.cfi_def_cfa_offset 56
 13295 4afb 5B       		pop	rbx	#
 13296              		.cfi_def_cfa_offset 48
 13297 4afc 5D       		pop	rbp	#
 13298              		.cfi_def_cfa_offset 40
 13299 4afd 415C     		pop	r12	#
GAS LISTING /tmp/ccH5HMHD.s 			page 358


 13300              		.cfi_def_cfa_offset 32
 13301              	.LVL740:
 996:sieve_extend.c **** 
 13302              		.loc 1 996 1 view .LVU4569
 13303 4aff 415D     		pop	r13	#
 13304              		.cfi_def_cfa_offset 24
 13305 4b01 415E     		pop	r14	#
 13306              		.cfi_def_cfa_offset 16
 13307 4b03 415F     		pop	r15	#
 13308              		.cfi_def_cfa_offset 8
 13309              	.LVL741:
 996:sieve_extend.c **** 
 13310              		.loc 1 996 1 view .LVU4570
 13311 4b05 C3       		ret	
 13312              	.LVL742:
 13313              		.p2align 4,,7
 13314 4b06 6690     		.p2align 3
 13315              	.L1490:
 13316              		.cfi_restore_state
 13317              	.LBB706:
 13318              	.LBB702:
 13319              	.LBB691:
 13320              	.LBB627:
 13321              	.LBB618:
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13322              		.loc 1 247 8 is_stmt 1 view .LVU4571
 13323              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13324              		.loc 1 247 73 is_stmt 0 view .LVU4572
 13325 4b08 4C234C24 		and	r9, QWORD PTR 8[rsp]	# tmp671, %sfp
 13325      08
 13326              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13327              		.loc 1 247 35 view .LVU4573
 13328 4b0d 4D09E9   		or	r9, r13	# tmp672, pretmp_1282
 13329 4b10 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp672
 249:sieve_extend.c ****     }
 13330              		.loc 1 249 8 is_stmt 1 view .LVU4574
 13331 4b13 E9D1FEFF 		jmp	.L926	#
 13331      FF
 13332              	.LVL743:
 13333              		.p2align 4,,7
 13334              		.p2align 3
 13335              	.L1489:
 249:sieve_extend.c ****     }
 13336              		.loc 1 249 8 is_stmt 0 view .LVU4575
 13337              	.LBE618:
 13338              	.LBE627:
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 13339              		.loc 1 873 11 is_stmt 1 view .LVU4576
 13340 4b18 4939F4   		cmp	r12, rsi	# block_stop, index
 13341 4b1b 72B7     		jb	.L1472	#,
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 13342              		.loc 1 873 11 is_stmt 0 view .LVU4577
 13343 4b1d 4C897C24 		mov	QWORD PTR 24[rsp], r15	# %sfp, block_start
 13343      18
 13344              	.LBB628:
GAS LISTING /tmp/ccH5HMHD.s 			page 359


 13345              	.LBB629:
 13346              	.LBB630:
 13347              	.LBB631:
 13348              	.LBB632:
 13349              	.LBB633:
 13350              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 13351              		.loc 1 308 25 view .LVU4578
 13352 4b22 41BA0100 		mov	r10d, 1	# tmp830,
 13352      0000
 13353              	.LVL744:
 13354 4b28 0F1F8400 		.p2align 4
 13354      00000000 
 13355              		.p2align 3
 13356              	.L920:
 308:sieve_extend.c ****                 index += step;
 13357              		.loc 1 308 25 view .LVU4579
 13358              	.LBE633:
 13359              	.LBE632:
 13360              	.LBE631:
 13361              	.LBE630:
 13362              	.LBE629:
 13363              	.LBE628:
 874:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13364              		.loc 1 874 9 is_stmt 1 view .LVU4580
 13365              	# sieve_extend.c:874:         step  = prime * 2 + 1;
 874:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13366              		.loc 1 874 15 is_stmt 0 view .LVU4581
 13367 4b30 4C8D4409 		lea	r8, 1[rcx+rcx]	# step,
 13367      01
 13368              	.LVL745:
 875:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13369              		.loc 1 875 9 is_stmt 1 view .LVU4582
 13370              	# sieve_extend.c:875:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 875:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13371              		.loc 1 875 12 is_stmt 0 view .LVU4583
 13372 4b35 4C3B0500 		cmp	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 13372      000000
 13373 4b3c 0F87D604 		ja	.L1491	#,
 13373      0000
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13374              		.loc 1 876 9 is_stmt 1 view .LVU4584
 13375              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13376              		.loc 1 876 12 is_stmt 0 view .LVU4585
 13377 4b42 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 13377      18
 13378 4b47 4C8D6901 		lea	r13, 1[rcx]	# _333,
 13379 4b4b 4939C5   		cmp	r13, rax	# _333, block_start
 13380 4b4e 770F     		ja	.L935	#,
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13381              		.loc 1 876 47 is_stmt 1 view .LVU4586
 13382              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13383              		.loc 1 876 67 is_stmt 0 view .LVU4587
 13384 4b50 4801C8   		add	rax, rcx	# _337, index
 13385              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccH5HMHD.s 			page 360


 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13386              		.loc 1 876 108 view .LVU4588
 13387 4b53 31D2     		xor	edx, edx	# tmp706
 13388              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13389              		.loc 1 876 75 view .LVU4589
 13390 4b55 488D3408 		lea	rsi, [rax+rcx]	# tmp704,
 13391              	.LVL746:
 13392              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13393              		.loc 1 876 108 view .LVU4590
 13394 4b59 49F7F0   		div	r8	# step
 13395              	.LVL747:
 13396              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13397              		.loc 1 876 53 view .LVU4591
 13398 4b5c 4829D6   		sub	rsi, rdx	# index, tmp706
 13399              	.LVL748:
 13400              	.L935:
 877:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 13401              		.loc 1 877 9 is_stmt 1 view .LVU4592
 13402              	.LBB650:
 13403              	.LBI628:
 296:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 13404              		.loc 1 296 14 view .LVU4593
 13405              	.LBB648:
 297:sieve_extend.c **** 
 13406              		.loc 1 297 5 view .LVU4594
 13407              	# sieve_extend.c:297:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 297:sieve_extend.c **** 
 13408              		.loc 1 297 74 is_stmt 0 view .LVU4595
 13409 4b5f 4D89C6   		mov	r14, r8	# tmp708, step
 13410 4b62 4531FF   		xor	r15d, r15d	# _675
 13411 4b65 49C1E606 		sal	r14, 6	# tmp708,
 13412 4b69 4901F6   		add	r14, rsi	# tmp709, index
 13413 4b6c 410F92C7 		setc	r15b	#, _675
 13414              	.LVL749:
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13415              		.loc 1 299 5 is_stmt 1 view .LVU4596
 13416              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13417              		.loc 1 299 8 is_stmt 0 view .LVU4597
 13418 4b70 4D39F4   		cmp	r12, r14	# block_stop, tmp709
 13419 4b73 0F829F03 		jb	.L938	#,
 13419      0000
 13420              	.LVL750:
 13421              	.LBB637:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13422              		.loc 1 320 54 is_stmt 1 view .LVU4598
 13423              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13424              		.loc 1 320 9 is_stmt 0 view .LVU4599
 13425 4b79 4D85FF   		test	r15, r15	# _675
 13426 4b7c 0F858002 		jne	.L942	#,
 13426      0000
 13427              	.LBB638:
 13428              	.LBB639:
GAS LISTING /tmp/ccH5HMHD.s 			page 361


 13429              	.LBB640:
 13430              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13431              		.loc 1 176 133 view .LVU4600
 13432 4b82 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 13432      10
 13433              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13434              		.loc 1 176 110 view .LVU4601
 13435 4b87 4F8D0C80 		lea	r9, [r8+r8*4]	# tmp722,
 13436 4b8b 4D89C7   		mov	r15, r8	# _1391, step
 13437              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 13438              		.loc 1 182 17 view .LVU4602
 13439 4b8e 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# _543,
 13439      00000000 
 13440              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13441              		.loc 1 176 133 view .LVU4603
 13442 4b96 4989FB   		mov	r11, rdi	# tmp724, range_stop_word
 13443 4b99 4D29CB   		sub	r11, r9	# tmp724, tmp722
 13444 4b9c 4C39CF   		cmp	rdi, r9	# range_stop_word, tmp722
 13445 4b9f 4E8D1CDB 		lea	r11, [rbx+r11*8]	# tmp726,
 13446 4ba3 4C0F46DB 		cmovbe	r11, rbx	# _30,, fast_loop_ptr
 13447 4ba7 49C1E103 		sal	r9, 3	# tmp730,
 13448 4bab 49C1E704 		sal	r15, 4	# _1391,
 13449              	.LVL751:
 13450 4baf 90       		.p2align 4
 13451              		.p2align 3
 13452              	.L951:
 176:sieve_extend.c **** 
 13453              		.loc 1 176 133 view .LVU4604
 13454              	.LBE640:
 13455              	.LBE639:
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13456              		.loc 1 321 13 is_stmt 1 view .LVU4605
 13457              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13458              		.loc 1 321 32 is_stmt 0 view .LVU4606
 13459 4bb0 4889F0   		mov	rax, rsi	# index_word, index
 13460              	# sieve_extend.c:322:             register bitword_t mask = SAFE_ZERO;
 322:sieve_extend.c ****             #pragma ivdep
 13461              		.loc 1 322 32 view .LVU4607
 13462 4bb3 31D2     		xor	edx, edx	# mask
 13463              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13464              		.loc 1 321 32 view .LVU4608
 13465 4bb5 48C1E806 		shr	rax, 6	# index_word,
 13466              	.LVL752:
 322:sieve_extend.c ****             #pragma ivdep
 13467              		.loc 1 322 13 is_stmt 1 view .LVU4609
 13468              	.L945:
 324:sieve_extend.c ****                 mask |= markmask(index);
 13469              		.loc 1 324 13 view .LVU4610
 325:sieve_extend.c ****                 index += step;
 13470              		.loc 1 325 17 view .LVU4611
 13471              	# sieve_extend.c:325:                 mask |= markmask(index);
GAS LISTING /tmp/ccH5HMHD.s 			page 362


 325:sieve_extend.c ****                 index += step;
 13472              		.loc 1 325 25 is_stmt 0 view .LVU4612
 13473 4bb9 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp732, tmp830, index
 13473      FA
 13474              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13475              		.loc 1 326 23 view .LVU4613
 13476 4bbe 4C01C6   		add	rsi, r8	# index, step
 13477              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13478              		.loc 1 325 22 view .LVU4614
 13479 4bc1 4809FA   		or	rdx, rdi	# mask, tmp732
 13480              	.LVL753:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13481              		.loc 1 326 17 is_stmt 1 view .LVU4615
 327:sieve_extend.c ****             // #pragma ivdep
 13482              		.loc 1 327 21 view .LVU4616
 13483              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13484              		.loc 1 327 36 is_stmt 0 view .LVU4617
 13485 4bc4 4889F7   		mov	rdi, rsi	# tmp734, index
 13486 4bc7 48C1EF06 		shr	rdi, 6	# tmp734,
 13487              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13488              		.loc 1 327 13 view .LVU4618
 13489 4bcb 4839F8   		cmp	rax, rdi	# index_word, tmp734
 13490 4bce 0F85AC00 		jne	.L1339	#,
 13490      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 13491              		.loc 1 324 13 is_stmt 1 view .LVU4619
 325:sieve_extend.c ****                 index += step;
 13492              		.loc 1 325 17 view .LVU4620
 13493              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13494              		.loc 1 325 25 is_stmt 0 view .LVU4621
 13495 4bd4 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1042, tmp830, index
 13495      FA
 13496              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13497              		.loc 1 326 23 view .LVU4622
 13498 4bd9 4C01C6   		add	rsi, r8	# index, step
 13499              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13500              		.loc 1 325 22 view .LVU4623
 13501 4bdc 4809FA   		or	rdx, rdi	# mask, tmp1042
 13502              	.LVL754:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13503              		.loc 1 326 17 is_stmt 1 view .LVU4624
 327:sieve_extend.c ****             // #pragma ivdep
 13504              		.loc 1 327 21 view .LVU4625
 13505              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13506              		.loc 1 327 36 is_stmt 0 view .LVU4626
 13507 4bdf 4889F7   		mov	rdi, rsi	# tmp1043, index
 13508 4be2 48C1EF06 		shr	rdi, 6	# tmp1043,
 13509              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
GAS LISTING /tmp/ccH5HMHD.s 			page 363


 13510              		.loc 1 327 13 view .LVU4627
 13511 4be6 4839F8   		cmp	rax, rdi	# index_word, tmp1043
 13512 4be9 0F859100 		jne	.L1339	#,
 13512      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 13513              		.loc 1 324 13 is_stmt 1 view .LVU4628
 325:sieve_extend.c ****                 index += step;
 13514              		.loc 1 325 17 view .LVU4629
 13515              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13516              		.loc 1 325 25 is_stmt 0 view .LVU4630
 13517 4bef C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1044, tmp830, index
 13517      FA
 13518              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13519              		.loc 1 326 23 view .LVU4631
 13520 4bf4 4C01C6   		add	rsi, r8	# index, step
 13521              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13522              		.loc 1 325 22 view .LVU4632
 13523 4bf7 4809FA   		or	rdx, rdi	# mask, tmp1044
 13524              	.LVL755:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13525              		.loc 1 326 17 is_stmt 1 view .LVU4633
 327:sieve_extend.c ****             // #pragma ivdep
 13526              		.loc 1 327 21 view .LVU4634
 13527              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13528              		.loc 1 327 36 is_stmt 0 view .LVU4635
 13529 4bfa 4889F7   		mov	rdi, rsi	# tmp1045, index
 13530 4bfd 48C1EF06 		shr	rdi, 6	# tmp1045,
 13531              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13532              		.loc 1 327 13 view .LVU4636
 13533 4c01 4839F8   		cmp	rax, rdi	# index_word, tmp1045
 13534 4c04 757A     		jne	.L1339	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13535              		.loc 1 324 13 is_stmt 1 view .LVU4637
 325:sieve_extend.c ****                 index += step;
 13536              		.loc 1 325 17 view .LVU4638
 13537              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13538              		.loc 1 325 25 is_stmt 0 view .LVU4639
 13539 4c06 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1046, tmp830, index
 13539      FA
 13540              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13541              		.loc 1 326 23 view .LVU4640
 13542 4c0b 4C01C6   		add	rsi, r8	# index, step
 13543              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13544              		.loc 1 325 22 view .LVU4641
 13545 4c0e 4809FA   		or	rdx, rdi	# mask, tmp1046
 13546              	.LVL756:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13547              		.loc 1 326 17 is_stmt 1 view .LVU4642
 327:sieve_extend.c ****             // #pragma ivdep
GAS LISTING /tmp/ccH5HMHD.s 			page 364


 13548              		.loc 1 327 21 view .LVU4643
 13549              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13550              		.loc 1 327 36 is_stmt 0 view .LVU4644
 13551 4c11 4889F7   		mov	rdi, rsi	# tmp1047, index
 13552 4c14 48C1EF06 		shr	rdi, 6	# tmp1047,
 13553              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13554              		.loc 1 327 13 view .LVU4645
 13555 4c18 4839F8   		cmp	rax, rdi	# index_word, tmp1047
 13556 4c1b 7563     		jne	.L1339	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13557              		.loc 1 324 13 is_stmt 1 view .LVU4646
 325:sieve_extend.c ****                 index += step;
 13558              		.loc 1 325 17 view .LVU4647
 13559              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13560              		.loc 1 325 25 is_stmt 0 view .LVU4648
 13561 4c1d C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1048, tmp830, index
 13561      FA
 13562              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13563              		.loc 1 326 23 view .LVU4649
 13564 4c22 4C01C6   		add	rsi, r8	# index, step
 13565              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13566              		.loc 1 325 22 view .LVU4650
 13567 4c25 4809FA   		or	rdx, rdi	# mask, tmp1048
 13568              	.LVL757:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13569              		.loc 1 326 17 is_stmt 1 view .LVU4651
 327:sieve_extend.c ****             // #pragma ivdep
 13570              		.loc 1 327 21 view .LVU4652
 13571              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13572              		.loc 1 327 36 is_stmt 0 view .LVU4653
 13573 4c28 4889F7   		mov	rdi, rsi	# tmp1049, index
 13574 4c2b 48C1EF06 		shr	rdi, 6	# tmp1049,
 13575              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13576              		.loc 1 327 13 view .LVU4654
 13577 4c2f 4839F8   		cmp	rax, rdi	# index_word, tmp1049
 13578 4c32 754C     		jne	.L1339	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13579              		.loc 1 324 13 is_stmt 1 view .LVU4655
 325:sieve_extend.c ****                 index += step;
 13580              		.loc 1 325 17 view .LVU4656
 13581              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13582              		.loc 1 325 25 is_stmt 0 view .LVU4657
 13583 4c34 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1050, tmp830, index
 13583      FA
 13584              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13585              		.loc 1 326 23 view .LVU4658
 13586 4c39 4C01C6   		add	rsi, r8	# index, step
 13587              	# sieve_extend.c:325:                 mask |= markmask(index);
GAS LISTING /tmp/ccH5HMHD.s 			page 365


 325:sieve_extend.c ****                 index += step;
 13588              		.loc 1 325 22 view .LVU4659
 13589 4c3c 4809FA   		or	rdx, rdi	# mask, tmp1050
 13590              	.LVL758:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13591              		.loc 1 326 17 is_stmt 1 view .LVU4660
 327:sieve_extend.c ****             // #pragma ivdep
 13592              		.loc 1 327 21 view .LVU4661
 13593              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13594              		.loc 1 327 36 is_stmt 0 view .LVU4662
 13595 4c3f 4889F7   		mov	rdi, rsi	# tmp1051, index
 13596 4c42 48C1EF06 		shr	rdi, 6	# tmp1051,
 13597              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13598              		.loc 1 327 13 view .LVU4663
 13599 4c46 4839F8   		cmp	rax, rdi	# index_word, tmp1051
 13600 4c49 7535     		jne	.L1339	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13601              		.loc 1 324 13 is_stmt 1 view .LVU4664
 325:sieve_extend.c ****                 index += step;
 13602              		.loc 1 325 17 view .LVU4665
 13603              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13604              		.loc 1 325 25 is_stmt 0 view .LVU4666
 13605 4c4b C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1052, tmp830, index
 13605      FA
 13606              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13607              		.loc 1 326 23 view .LVU4667
 13608 4c50 4C01C6   		add	rsi, r8	# index, step
 13609              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13610              		.loc 1 325 22 view .LVU4668
 13611 4c53 4809FA   		or	rdx, rdi	# mask, tmp1052
 13612              	.LVL759:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13613              		.loc 1 326 17 is_stmt 1 view .LVU4669
 327:sieve_extend.c ****             // #pragma ivdep
 13614              		.loc 1 327 21 view .LVU4670
 13615              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13616              		.loc 1 327 36 is_stmt 0 view .LVU4671
 13617 4c56 4889F7   		mov	rdi, rsi	# tmp1053, index
 13618 4c59 48C1EF06 		shr	rdi, 6	# tmp1053,
 13619              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13620              		.loc 1 327 13 view .LVU4672
 13621 4c5d 4839F8   		cmp	rax, rdi	# index_word, tmp1053
 13622 4c60 751E     		jne	.L1339	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13623              		.loc 1 324 13 is_stmt 1 view .LVU4673
 325:sieve_extend.c ****                 index += step;
 13624              		.loc 1 325 17 view .LVU4674
 13625              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13626              		.loc 1 325 25 is_stmt 0 view .LVU4675
GAS LISTING /tmp/ccH5HMHD.s 			page 366


 13627 4c62 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1054, tmp830, index
 13627      FA
 13628              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13629              		.loc 1 326 23 view .LVU4676
 13630 4c67 4C01C6   		add	rsi, r8	# index, step
 13631              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13632              		.loc 1 325 22 view .LVU4677
 13633 4c6a 4809FA   		or	rdx, rdi	# mask, tmp1054
 13634              	.LVL760:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13635              		.loc 1 326 17 is_stmt 1 view .LVU4678
 327:sieve_extend.c ****             // #pragma ivdep
 13636              		.loc 1 327 21 view .LVU4679
 13637              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13638              		.loc 1 327 36 is_stmt 0 view .LVU4680
 13639 4c6d 4889F7   		mov	rdi, rsi	# tmp1055, index
 13640 4c70 48C1EF06 		shr	rdi, 6	# tmp1055,
 13641              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13642              		.loc 1 327 13 view .LVU4681
 13643 4c74 4839F8   		cmp	rax, rdi	# index_word, tmp1055
 13644 4c77 0F843CFF 		je	.L945	#,
 13644      FFFF
 13645 4c7d 0F1F00   		.p2align 4
 13646              		.p2align 3
 13647              	.L1339:
 331:sieve_extend.c ****         }
 13648              		.loc 1 331 13 is_stmt 1 view .LVU4682
 13649              	.LVL761:
 13650              	.LBB643:
 13651              	.LBI639:
 146:sieve_extend.c **** //#if __APPLE__
 13652              		.loc 1 146 20 view .LVU4683
 13653              	.LBB641:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13654              		.loc 1 174 4 view .LVU4684
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13655              		.loc 1 175 4 view .LVU4685
 13656              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13657              		.loc 1 175 78 is_stmt 0 view .LVU4686
 13658 4c80 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 13659              	.LVL762:
 176:sieve_extend.c **** 
 13660              		.loc 1 176 4 is_stmt 1 view .LVU4687
 180:sieve_extend.c ****        *index_ptr |= mask;
 13661              		.loc 1 180 4 view .LVU4688
 180:sieve_extend.c ****        *index_ptr |= mask;
 13662              		.loc 1 180 10 view .LVU4689
 13663 4c84 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 13664 4c87 0F830301 		jnb	.L946	#,
 13664      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 13665              		.loc 1 180 10 is_stmt 0 view .LVU4690
GAS LISTING /tmp/ccH5HMHD.s 			page 367


 13666 4c8d 4A8D3C38 		lea	rdi, [rax+r15]	# ivtmp.593,
 13667              	.L947:
 181:sieve_extend.c ****        index_ptr+=step;
 13668              		.loc 1 181 8 is_stmt 1 view .LVU4691
 13669              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13670              		.loc 1 181 19 is_stmt 0 view .LVU4692
 13671 4c91 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13672              		.loc 1 182 8 is_stmt 1 view .LVU4693
 13673              	.LVL763:
 183:sieve_extend.c ****        index_ptr+=step;
 13674              		.loc 1 183 8 view .LVU4694
 13675              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13676              		.loc 1 183 19 is_stmt 0 view .LVU4695
 13677 4c94 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13678              		.loc 1 184 8 is_stmt 1 view .LVU4696
 13679              	.LVL764:
 185:sieve_extend.c ****        index_ptr+=step;
 13680              		.loc 1 185 8 view .LVU4697
 13681              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13682              		.loc 1 185 19 is_stmt 0 view .LVU4698
 13683 4c98 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13684              		.loc 1 186 8 is_stmt 1 view .LVU4699
 13685              	.LVL765:
 187:sieve_extend.c ****        index_ptr+=step;
 13686              		.loc 1 187 8 view .LVU4700
 13687              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13688              		.loc 1 187 19 is_stmt 0 view .LVU4701
 13689 4c9b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13690              		.loc 1 188 8 is_stmt 1 view .LVU4702
 13691              	.LVL766:
 189:sieve_extend.c ****        index_ptr+=step;
 13692              		.loc 1 189 8 view .LVU4703
 13693 4c9f 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13694              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13695              		.loc 1 189 19 is_stmt 0 view .LVU4704
 13696 4ca2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13697              		.loc 1 190 8 is_stmt 1 view .LVU4705
 13698 4ca6 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13699              	.LVL767:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13700              		.loc 1 180 10 view .LVU4706
 13701 4ca9 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13702 4cac 0F86DE00 		jbe	.L946	#,
 13702      0000
 181:sieve_extend.c ****        index_ptr+=step;
 13703              		.loc 1 181 8 view .LVU4707
 13704              	# sieve_extend.c:181:        *index_ptr |= mask;
GAS LISTING /tmp/ccH5HMHD.s 			page 368


 181:sieve_extend.c ****        index_ptr+=step;
 13705              		.loc 1 181 19 is_stmt 0 view .LVU4708
 13706 4cb2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13707              		.loc 1 182 8 is_stmt 1 view .LVU4709
 13708              	.LVL768:
 183:sieve_extend.c ****        index_ptr+=step;
 13709              		.loc 1 183 8 view .LVU4710
 13710              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13711              		.loc 1 183 19 is_stmt 0 view .LVU4711
 13712 4cb5 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13713              		.loc 1 184 8 is_stmt 1 view .LVU4712
 13714              	.LVL769:
 185:sieve_extend.c ****        index_ptr+=step;
 13715              		.loc 1 185 8 view .LVU4713
 13716              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13717              		.loc 1 185 19 is_stmt 0 view .LVU4714
 13718 4cb9 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13719              		.loc 1 186 8 is_stmt 1 view .LVU4715
 13720              	.LVL770:
 187:sieve_extend.c ****        index_ptr+=step;
 13721              		.loc 1 187 8 view .LVU4716
 13722              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13723              		.loc 1 187 19 is_stmt 0 view .LVU4717
 13724 4cbc 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13725              		.loc 1 188 8 is_stmt 1 view .LVU4718
 13726              	.LVL771:
 189:sieve_extend.c ****        index_ptr+=step;
 13727              		.loc 1 189 8 view .LVU4719
 13728 4cc0 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13729              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13730              		.loc 1 189 19 is_stmt 0 view .LVU4720
 13731 4cc3 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13732              		.loc 1 190 8 is_stmt 1 view .LVU4721
 13733 4cc7 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13734              	.LVL772:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13735              		.loc 1 180 10 view .LVU4722
 13736 4cca 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13737 4ccd 0F86BD00 		jbe	.L946	#,
 13737      0000
 181:sieve_extend.c ****        index_ptr+=step;
 13738              		.loc 1 181 8 view .LVU4723
 13739              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13740              		.loc 1 181 19 is_stmt 0 view .LVU4724
 13741 4cd3 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13742              		.loc 1 182 8 is_stmt 1 view .LVU4725
GAS LISTING /tmp/ccH5HMHD.s 			page 369


 13743              	.LVL773:
 183:sieve_extend.c ****        index_ptr+=step;
 13744              		.loc 1 183 8 view .LVU4726
 13745              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13746              		.loc 1 183 19 is_stmt 0 view .LVU4727
 13747 4cd6 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13748              		.loc 1 184 8 is_stmt 1 view .LVU4728
 13749              	.LVL774:
 185:sieve_extend.c ****        index_ptr+=step;
 13750              		.loc 1 185 8 view .LVU4729
 13751              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13752              		.loc 1 185 19 is_stmt 0 view .LVU4730
 13753 4cda 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13754              		.loc 1 186 8 is_stmt 1 view .LVU4731
 13755              	.LVL775:
 187:sieve_extend.c ****        index_ptr+=step;
 13756              		.loc 1 187 8 view .LVU4732
 13757              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13758              		.loc 1 187 19 is_stmt 0 view .LVU4733
 13759 4cdd 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13760              		.loc 1 188 8 is_stmt 1 view .LVU4734
 13761              	.LVL776:
 189:sieve_extend.c ****        index_ptr+=step;
 13762              		.loc 1 189 8 view .LVU4735
 13763 4ce1 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13764              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13765              		.loc 1 189 19 is_stmt 0 view .LVU4736
 13766 4ce4 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13767              		.loc 1 190 8 is_stmt 1 view .LVU4737
 13768 4ce8 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13769              	.LVL777:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13770              		.loc 1 180 10 view .LVU4738
 13771 4ceb 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13772 4cee 0F869C00 		jbe	.L946	#,
 13772      0000
 181:sieve_extend.c ****        index_ptr+=step;
 13773              		.loc 1 181 8 view .LVU4739
 13774              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13775              		.loc 1 181 19 is_stmt 0 view .LVU4740
 13776 4cf4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13777              		.loc 1 182 8 is_stmt 1 view .LVU4741
 13778              	.LVL778:
 183:sieve_extend.c ****        index_ptr+=step;
 13779              		.loc 1 183 8 view .LVU4742
 13780              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 370


 13781              		.loc 1 183 19 is_stmt 0 view .LVU4743
 13782 4cf7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13783              		.loc 1 184 8 is_stmt 1 view .LVU4744
 13784              	.LVL779:
 185:sieve_extend.c ****        index_ptr+=step;
 13785              		.loc 1 185 8 view .LVU4745
 13786              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13787              		.loc 1 185 19 is_stmt 0 view .LVU4746
 13788 4cfb 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13789              		.loc 1 186 8 is_stmt 1 view .LVU4747
 13790              	.LVL780:
 187:sieve_extend.c ****        index_ptr+=step;
 13791              		.loc 1 187 8 view .LVU4748
 13792              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13793              		.loc 1 187 19 is_stmt 0 view .LVU4749
 13794 4cfe 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13795              		.loc 1 188 8 is_stmt 1 view .LVU4750
 13796              	.LVL781:
 189:sieve_extend.c ****        index_ptr+=step;
 13797              		.loc 1 189 8 view .LVU4751
 13798 4d02 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13799              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13800              		.loc 1 189 19 is_stmt 0 view .LVU4752
 13801 4d05 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13802              		.loc 1 190 8 is_stmt 1 view .LVU4753
 13803 4d09 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13804              	.LVL782:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13805              		.loc 1 180 10 view .LVU4754
 13806 4d0c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13807 4d0f 767F     		jbe	.L946	#,
 181:sieve_extend.c ****        index_ptr+=step;
 13808              		.loc 1 181 8 view .LVU4755
 13809              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13810              		.loc 1 181 19 is_stmt 0 view .LVU4756
 13811 4d11 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13812              		.loc 1 182 8 is_stmt 1 view .LVU4757
 13813              	.LVL783:
 183:sieve_extend.c ****        index_ptr+=step;
 13814              		.loc 1 183 8 view .LVU4758
 13815              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13816              		.loc 1 183 19 is_stmt 0 view .LVU4759
 13817 4d14 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13818              		.loc 1 184 8 is_stmt 1 view .LVU4760
 13819              	.LVL784:
 185:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 371


 13820              		.loc 1 185 8 view .LVU4761
 13821              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13822              		.loc 1 185 19 is_stmt 0 view .LVU4762
 13823 4d18 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13824              		.loc 1 186 8 is_stmt 1 view .LVU4763
 13825              	.LVL785:
 187:sieve_extend.c ****        index_ptr+=step;
 13826              		.loc 1 187 8 view .LVU4764
 13827              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13828              		.loc 1 187 19 is_stmt 0 view .LVU4765
 13829 4d1b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13830              		.loc 1 188 8 is_stmt 1 view .LVU4766
 13831              	.LVL786:
 189:sieve_extend.c ****        index_ptr+=step;
 13832              		.loc 1 189 8 view .LVU4767
 13833 4d1f 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13834              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13835              		.loc 1 189 19 is_stmt 0 view .LVU4768
 13836 4d22 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13837              		.loc 1 190 8 is_stmt 1 view .LVU4769
 13838 4d26 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13839              	.LVL787:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13840              		.loc 1 180 10 view .LVU4770
 13841 4d29 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13842 4d2c 7662     		jbe	.L946	#,
 181:sieve_extend.c ****        index_ptr+=step;
 13843              		.loc 1 181 8 view .LVU4771
 13844              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13845              		.loc 1 181 19 is_stmt 0 view .LVU4772
 13846 4d2e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13847              		.loc 1 182 8 is_stmt 1 view .LVU4773
 13848              	.LVL788:
 183:sieve_extend.c ****        index_ptr+=step;
 13849              		.loc 1 183 8 view .LVU4774
 13850              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13851              		.loc 1 183 19 is_stmt 0 view .LVU4775
 13852 4d31 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13853              		.loc 1 184 8 is_stmt 1 view .LVU4776
 13854              	.LVL789:
 185:sieve_extend.c ****        index_ptr+=step;
 13855              		.loc 1 185 8 view .LVU4777
 13856              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13857              		.loc 1 185 19 is_stmt 0 view .LVU4778
 13858 4d35 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccH5HMHD.s 			page 372


 13859              		.loc 1 186 8 is_stmt 1 view .LVU4779
 13860              	.LVL790:
 187:sieve_extend.c ****        index_ptr+=step;
 13861              		.loc 1 187 8 view .LVU4780
 13862              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13863              		.loc 1 187 19 is_stmt 0 view .LVU4781
 13864 4d38 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13865              		.loc 1 188 8 is_stmt 1 view .LVU4782
 13866              	.LVL791:
 189:sieve_extend.c ****        index_ptr+=step;
 13867              		.loc 1 189 8 view .LVU4783
 13868 4d3c 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13869              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13870              		.loc 1 189 19 is_stmt 0 view .LVU4784
 13871 4d3f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13872              		.loc 1 190 8 is_stmt 1 view .LVU4785
 13873 4d43 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13874              	.LVL792:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13875              		.loc 1 180 10 view .LVU4786
 13876 4d46 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13877 4d49 7645     		jbe	.L946	#,
 181:sieve_extend.c ****        index_ptr+=step;
 13878              		.loc 1 181 8 view .LVU4787
 13879              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13880              		.loc 1 181 19 is_stmt 0 view .LVU4788
 13881 4d4b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13882              		.loc 1 182 8 is_stmt 1 view .LVU4789
 13883              	.LVL793:
 183:sieve_extend.c ****        index_ptr+=step;
 13884              		.loc 1 183 8 view .LVU4790
 13885              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13886              		.loc 1 183 19 is_stmt 0 view .LVU4791
 13887 4d4e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13888              		.loc 1 184 8 is_stmt 1 view .LVU4792
 13889              	.LVL794:
 185:sieve_extend.c ****        index_ptr+=step;
 13890              		.loc 1 185 8 view .LVU4793
 13891              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13892              		.loc 1 185 19 is_stmt 0 view .LVU4794
 13893 4d52 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13894              		.loc 1 186 8 is_stmt 1 view .LVU4795
 13895              	.LVL795:
 187:sieve_extend.c ****        index_ptr+=step;
 13896              		.loc 1 187 8 view .LVU4796
 13897              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 373


 13898              		.loc 1 187 19 is_stmt 0 view .LVU4797
 13899 4d55 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13900              		.loc 1 188 8 is_stmt 1 view .LVU4798
 13901              	.LVL796:
 189:sieve_extend.c ****        index_ptr+=step;
 13902              		.loc 1 189 8 view .LVU4799
 13903 4d59 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13904              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13905              		.loc 1 189 19 is_stmt 0 view .LVU4800
 13906 4d5c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13907              		.loc 1 190 8 is_stmt 1 view .LVU4801
 13908 4d60 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13909              	.LVL797:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13910              		.loc 1 180 10 view .LVU4802
 13911 4d63 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13912 4d66 7628     		jbe	.L946	#,
 181:sieve_extend.c ****        index_ptr+=step;
 13913              		.loc 1 181 8 view .LVU4803
 13914              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13915              		.loc 1 181 19 is_stmt 0 view .LVU4804
 13916 4d68 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13917              		.loc 1 182 8 is_stmt 1 view .LVU4805
 13918              	.LVL798:
 183:sieve_extend.c ****        index_ptr+=step;
 13919              		.loc 1 183 8 view .LVU4806
 13920              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13921              		.loc 1 183 19 is_stmt 0 view .LVU4807
 13922 4d6b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13923              		.loc 1 184 8 is_stmt 1 view .LVU4808
 13924              	.LVL799:
 185:sieve_extend.c ****        index_ptr+=step;
 13925              		.loc 1 185 8 view .LVU4809
 13926              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13927              		.loc 1 185 19 is_stmt 0 view .LVU4810
 13928 4d6f 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 13929              		.loc 1 186 8 is_stmt 1 view .LVU4811
 13930              	.LVL800:
 187:sieve_extend.c ****        index_ptr+=step;
 13931              		.loc 1 187 8 view .LVU4812
 13932              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13933              		.loc 1 187 19 is_stmt 0 view .LVU4813
 13934 4d72 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13935              		.loc 1 188 8 is_stmt 1 view .LVU4814
 13936              	.LVL801:
 189:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 374


 13937              		.loc 1 189 8 view .LVU4815
 13938 4d76 4C01CF   		add	rdi, r9	# ivtmp.593, tmp730
 13939              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13940              		.loc 1 189 19 is_stmt 0 view .LVU4816
 13941 4d79 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13942              		.loc 1 190 8 is_stmt 1 view .LVU4817
 13943 4d7d 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13944              	.LVL802:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13945              		.loc 1 180 10 view .LVU4818
 13946 4d80 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13947 4d83 0F8708FF 		ja	.L947	#,
 13947      FFFF
 13948 4d89 0F1F8000 		.p2align 4
 13948      000000
 13949              		.p2align 3
 13950              	.L946:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13951              		.loc 1 193 4 view .LVU4819
 194:sieve_extend.c ****        *index_ptr |= mask;
 13952              		.loc 1 194 4 view .LVU4820
 194:sieve_extend.c ****        *index_ptr |= mask;
 13953              		.loc 1 194 10 view .LVU4821
 13954 4d90 4839E8   		cmp	rax, rbp	# index_ptr, _494
 13955 4d93 735B     		jnb	.L948	#,
 13956              	.L949:
 195:sieve_extend.c ****        index_ptr+=step;
 13957              		.loc 1 195 8 view .LVU4822
 13958              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 13959              		.loc 1 195 19 is_stmt 0 view .LVU4823
 13960 4d95 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 13961              		.loc 1 196 8 is_stmt 1 view .LVU4824
 13962              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 13963              		.loc 1 196 17 is_stmt 0 view .LVU4825
 13964 4d98 4801C8   		add	rax, rcx	# index_ptr, _543
 13965              	.LVL803:
 194:sieve_extend.c ****        *index_ptr |= mask;
 13966              		.loc 1 194 10 is_stmt 1 view .LVU4826
 13967 4d9b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 13968 4d9e 7650     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 13969              		.loc 1 195 8 view .LVU4827
 13970              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 13971              		.loc 1 195 19 is_stmt 0 view .LVU4828
 13972 4da0 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 13973              		.loc 1 196 8 is_stmt 1 view .LVU4829
 13974              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 13975              		.loc 1 196 17 is_stmt 0 view .LVU4830
 13976 4da3 4801C8   		add	rax, rcx	# index_ptr, _543
GAS LISTING /tmp/ccH5HMHD.s 			page 375


 13977              	.LVL804:
 194:sieve_extend.c ****        *index_ptr |= mask;
 13978              		.loc 1 194 10 is_stmt 1 view .LVU4831
 13979 4da6 4839C5   		cmp	rbp, rax	# _494, index_ptr
 13980 4da9 7645     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 13981              		.loc 1 195 8 view .LVU4832
 13982              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 13983              		.loc 1 195 19 is_stmt 0 view .LVU4833
 13984 4dab 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 13985              		.loc 1 196 8 is_stmt 1 view .LVU4834
 13986              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 13987              		.loc 1 196 17 is_stmt 0 view .LVU4835
 13988 4dae 4801C8   		add	rax, rcx	# index_ptr, _543
 13989              	.LVL805:
 194:sieve_extend.c ****        *index_ptr |= mask;
 13990              		.loc 1 194 10 is_stmt 1 view .LVU4836
 13991 4db1 4839C5   		cmp	rbp, rax	# _494, index_ptr
 13992 4db4 763A     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 13993              		.loc 1 195 8 view .LVU4837
 13994              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 13995              		.loc 1 195 19 is_stmt 0 view .LVU4838
 13996 4db6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 13997              		.loc 1 196 8 is_stmt 1 view .LVU4839
 13998              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 13999              		.loc 1 196 17 is_stmt 0 view .LVU4840
 14000 4db9 4801C8   		add	rax, rcx	# index_ptr, _543
 14001              	.LVL806:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14002              		.loc 1 194 10 is_stmt 1 view .LVU4841
 14003 4dbc 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14004 4dbf 762F     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14005              		.loc 1 195 8 view .LVU4842
 14006              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14007              		.loc 1 195 19 is_stmt 0 view .LVU4843
 14008 4dc1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14009              		.loc 1 196 8 is_stmt 1 view .LVU4844
 14010              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14011              		.loc 1 196 17 is_stmt 0 view .LVU4845
 14012 4dc4 4801C8   		add	rax, rcx	# index_ptr, _543
 14013              	.LVL807:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14014              		.loc 1 194 10 is_stmt 1 view .LVU4846
 14015 4dc7 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14016 4dca 7624     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 376


 14017              		.loc 1 195 8 view .LVU4847
 14018              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14019              		.loc 1 195 19 is_stmt 0 view .LVU4848
 14020 4dcc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14021              		.loc 1 196 8 is_stmt 1 view .LVU4849
 14022              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14023              		.loc 1 196 17 is_stmt 0 view .LVU4850
 14024 4dcf 4801C8   		add	rax, rcx	# index_ptr, _543
 14025              	.LVL808:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14026              		.loc 1 194 10 is_stmt 1 view .LVU4851
 14027 4dd2 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14028 4dd5 7619     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14029              		.loc 1 195 8 view .LVU4852
 14030              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14031              		.loc 1 195 19 is_stmt 0 view .LVU4853
 14032 4dd7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14033              		.loc 1 196 8 is_stmt 1 view .LVU4854
 14034              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14035              		.loc 1 196 17 is_stmt 0 view .LVU4855
 14036 4dda 4801C8   		add	rax, rcx	# index_ptr, _543
 14037              	.LVL809:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14038              		.loc 1 194 10 is_stmt 1 view .LVU4856
 14039 4ddd 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14040 4de0 760E     		jbe	.L948	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14041              		.loc 1 195 8 view .LVU4857
 14042              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14043              		.loc 1 195 19 is_stmt 0 view .LVU4858
 14044 4de2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14045              		.loc 1 196 8 is_stmt 1 view .LVU4859
 14046              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14047              		.loc 1 196 17 is_stmt 0 view .LVU4860
 14048 4de5 4801C8   		add	rax, rcx	# index_ptr, _543
 14049              	.LVL810:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14050              		.loc 1 194 10 is_stmt 1 view .LVU4861
 14051 4de8 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14052 4deb 77A8     		ja	.L949	#,
 14053 4ded 0F1F00   		.p2align 4
 14054              		.p2align 3
 14055              	.L948:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14056              		.loc 1 199 4 view .LVU4862
 14057              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccH5HMHD.s 			page 377


 14058              		.loc 1 199 7 is_stmt 0 view .LVU4863
 14059 4df0 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14060 4df3 0F840F01 		je	.L1492	#,
 14060      0000
 14061              	.LVL811:
 14062              	.L950:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14063              		.loc 1 199 7 view .LVU4864
 14064              	.LBE641:
 14065              	.LBE643:
 14066              	.LBE638:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14067              		.loc 1 320 54 is_stmt 1 view .LVU4865
 14068              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14069              		.loc 1 320 9 is_stmt 0 view .LVU4866
 14070 4df9 4939F6   		cmp	r14, rsi	# tmp709, index
 14071 4dfc 0F83AEFD 		jnb	.L951	#,
 14071      FFFF
 14072              	.LVL812:
 14073              	.L942:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14074              		.loc 1 320 9 view .LVU4867
 14075              	.LBE637:
 14076              	.LBE648:
 14077              	.LBE650:
 878:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14078              		.loc 1 878 9 is_stmt 1 view .LVU4868
 14079              	.LBB651:
 14080              	.LBI651:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14081              		.loc 1 121 25 view .LVU4869
 14082              	.LBB652:
 122:sieve_extend.c ****     return index;
 14083              		.loc 1 122 5 view .LVU4870
 122:sieve_extend.c ****     return index;
 14084              		.loc 1 122 11 view .LVU4871
 14085              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14086              		.loc 1 122 21 is_stmt 0 view .LVU4872
 14087 4e02 4C89EE   		mov	rsi, r13	# tmp710, _333
 14088              	.LBE652:
 14089              	.LBE651:
 14090              	# sieve_extend.c:876:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 876:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 14091              		.loc 1 876 12 view .LVU4873
 14092 4e05 4C89E9   		mov	rcx, r13	# index, _333
 14093              	.LBB654:
 14094              	.LBB653:
 14095              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14096              		.loc 1 122 21 view .LVU4874
 14097 4e08 48C1EE06 		shr	rsi, 6	# tmp710,
 14098              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14099              		.loc 1 122 12 view .LVU4875
 14100 4e0c 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# *_58, *_58
GAS LISTING /tmp/ccH5HMHD.s 			page 378


 14101              	.LVL813:
 14102              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14103              		.loc 1 122 11 view .LVU4876
 14104 4e10 4D0FA3E8 		bt	r8, r13	# *_58, _333
 14105 4e14 0F83C600 		jnc	.L941	#,
 14105      0000
 14106              	.LVL814:
 14107              	.L940:
 122:sieve_extend.c ****     return index;
 14108              		.loc 1 122 58 is_stmt 1 view .LVU4877
 14109              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14110              		.loc 1 122 63 is_stmt 0 view .LVU4878
 14111 4e1a 4C8D6901 		lea	r13, 1[rcx]	# tmp840,
 14112              	.LVL815:
 14113              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14114              		.loc 1 122 21 view .LVU4879
 14115 4e1e 4D89EE   		mov	r14, r13	# tmp737, index
 14116              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14117              		.loc 1 122 63 view .LVU4880
 14118 4e21 4C89E9   		mov	rcx, r13	# index, tmp840
 122:sieve_extend.c ****     return index;
 14119              		.loc 1 122 11 is_stmt 1 view .LVU4881
 14120              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14121              		.loc 1 122 21 is_stmt 0 view .LVU4882
 14122 4e24 49C1EE06 		shr	r14, 6	# tmp737,
 14123              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14124              		.loc 1 122 12 view .LVU4883
 14125 4e28 4E8B0CF3 		mov	r9, QWORD PTR [rbx+r14*8]	# *_346, *_346
 14126              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14127              		.loc 1 122 11 view .LVU4884
 14128 4e2c 4D0FA3E9 		bt	r9, r13	# *_346, index
 14129 4e30 0F83AA00 		jnc	.L941	#,
 14129      0000
 122:sieve_extend.c ****     return index;
 14130              		.loc 1 122 58 is_stmt 1 view .LVU4885
 14131              	.LVL816:
 14132              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14133              		.loc 1 122 63 is_stmt 0 view .LVU4886
 14134 4e36 4883C101 		add	rcx, 1	# index,
 14135              	.LVL817:
 122:sieve_extend.c ****     return index;
 14136              		.loc 1 122 11 is_stmt 1 view .LVU4887
 14137              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14138              		.loc 1 122 21 is_stmt 0 view .LVU4888
 14139 4e3a 4889C8   		mov	rax, rcx	# tmp994, index
 14140 4e3d 48C1E806 		shr	rax, 6	# tmp994,
 14141              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccH5HMHD.s 			page 379


 14142              		.loc 1 122 12 view .LVU4889
 14143 4e41 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# *_346, *_346
 14144              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14145              		.loc 1 122 11 view .LVU4890
 14146 4e45 480FA3CF 		bt	rdi, rcx	# *_346, index
 14147 4e49 0F839100 		jnc	.L941	#,
 14147      0000
 122:sieve_extend.c ****     return index;
 14148              		.loc 1 122 58 is_stmt 1 view .LVU4891
 14149              	.LVL818:
 14150              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14151              		.loc 1 122 63 is_stmt 0 view .LVU4892
 14152 4e4f 498D4D02 		lea	rcx, 2[r13]	# index,
 14153              	.LVL819:
 122:sieve_extend.c ****     return index;
 14154              		.loc 1 122 11 is_stmt 1 view .LVU4893
 14155              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14156              		.loc 1 122 21 is_stmt 0 view .LVU4894
 14157 4e53 4989CB   		mov	r11, rcx	# tmp998, index
 14158 4e56 49C1EB06 		shr	r11, 6	# tmp998,
 14159              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14160              		.loc 1 122 12 view .LVU4895
 14161 4e5a 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_346, *_346
 14162              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14163              		.loc 1 122 11 view .LVU4896
 14164 4e5e 490FA3CF 		bt	r15, rcx	# *_346, index
 14165 4e62 737C     		jnc	.L941	#,
 122:sieve_extend.c ****     return index;
 14166              		.loc 1 122 58 is_stmt 1 view .LVU4897
 14167              	.LVL820:
 14168              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14169              		.loc 1 122 63 is_stmt 0 view .LVU4898
 14170 4e64 498D4D03 		lea	rcx, 3[r13]	# index,
 14171              	.LVL821:
 122:sieve_extend.c ****     return index;
 14172              		.loc 1 122 11 is_stmt 1 view .LVU4899
 14173              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14174              		.loc 1 122 21 is_stmt 0 view .LVU4900
 14175 4e68 4889CA   		mov	rdx, rcx	# tmp1002, index
 14176 4e6b 48C1EA06 		shr	rdx, 6	# tmp1002,
 14177              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14178              		.loc 1 122 12 view .LVU4901
 14179 4e6f 488B34D3 		mov	rsi, QWORD PTR [rbx+rdx*8]	# *_346, *_346
 14180              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14181              		.loc 1 122 11 view .LVU4902
 14182 4e73 480FA3CE 		bt	rsi, rcx	# *_346, index
 14183 4e77 7367     		jnc	.L941	#,
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccH5HMHD.s 			page 380


 14184              		.loc 1 122 58 is_stmt 1 view .LVU4903
 14185              	.LVL822:
 14186              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14187              		.loc 1 122 63 is_stmt 0 view .LVU4904
 14188 4e79 498D4D04 		lea	rcx, 4[r13]	# index,
 14189              	.LVL823:
 122:sieve_extend.c ****     return index;
 14190              		.loc 1 122 11 is_stmt 1 view .LVU4905
 14191              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14192              		.loc 1 122 21 is_stmt 0 view .LVU4906
 14193 4e7d 4989C8   		mov	r8, rcx	# tmp1006, index
 14194 4e80 49C1E806 		shr	r8, 6	# tmp1006,
 14195              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14196              		.loc 1 122 12 view .LVU4907
 14197 4e84 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_346, *_346
 14198              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14199              		.loc 1 122 11 view .LVU4908
 14200 4e88 490FA3CE 		bt	r14, rcx	# *_346, index
 14201 4e8c 7352     		jnc	.L941	#,
 122:sieve_extend.c ****     return index;
 14202              		.loc 1 122 58 is_stmt 1 view .LVU4909
 14203              	.LVL824:
 14204              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14205              		.loc 1 122 63 is_stmt 0 view .LVU4910
 14206 4e8e 498D4D05 		lea	rcx, 5[r13]	# index,
 14207              	.LVL825:
 122:sieve_extend.c ****     return index;
 14208              		.loc 1 122 11 is_stmt 1 view .LVU4911
 14209              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14210              		.loc 1 122 21 is_stmt 0 view .LVU4912
 14211 4e92 4989C9   		mov	r9, rcx	# tmp1010, index
 14212 4e95 49C1E906 		shr	r9, 6	# tmp1010,
 14213              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14214              		.loc 1 122 12 view .LVU4913
 14215 4e99 4A8B04CB 		mov	rax, QWORD PTR [rbx+r9*8]	# *_346, *_346
 14216              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14217              		.loc 1 122 11 view .LVU4914
 14218 4e9d 480FA3C8 		bt	rax, rcx	# *_346, index
 14219 4ea1 733D     		jnc	.L941	#,
 122:sieve_extend.c ****     return index;
 14220              		.loc 1 122 58 is_stmt 1 view .LVU4915
 14221              	.LVL826:
 14222              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14223              		.loc 1 122 63 is_stmt 0 view .LVU4916
 14224 4ea3 498D4D06 		lea	rcx, 6[r13]	# index,
 14225              	.LVL827:
 122:sieve_extend.c ****     return index;
 14226              		.loc 1 122 11 is_stmt 1 view .LVU4917
GAS LISTING /tmp/ccH5HMHD.s 			page 381


 14227              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14228              		.loc 1 122 21 is_stmt 0 view .LVU4918
 14229 4ea7 4889CF   		mov	rdi, rcx	# tmp1014, index
 14230 4eaa 48C1EF06 		shr	rdi, 6	# tmp1014,
 14231              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14232              		.loc 1 122 12 view .LVU4919
 14233 4eae 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_346, *_346
 14234              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14235              		.loc 1 122 11 view .LVU4920
 14236 4eb2 490FA3CB 		bt	r11, rcx	# *_346, index
 14237 4eb6 7328     		jnc	.L941	#,
 122:sieve_extend.c ****     return index;
 14238              		.loc 1 122 58 is_stmt 1 view .LVU4921
 14239              	.LVL828:
 14240              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14241              		.loc 1 122 63 is_stmt 0 view .LVU4922
 14242 4eb8 498D4D07 		lea	rcx, 7[r13]	# index,
 14243              	.LVL829:
 122:sieve_extend.c ****     return index;
 14244              		.loc 1 122 11 is_stmt 1 view .LVU4923
 14245              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14246              		.loc 1 122 21 is_stmt 0 view .LVU4924
 14247 4ebc 4989CD   		mov	r13, rcx	# tmp1018, index
 14248 4ebf 49C1ED06 		shr	r13, 6	# tmp1018,
 14249              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14250              		.loc 1 122 12 view .LVU4925
 14251 4ec3 4E8B3CEB 		mov	r15, QWORD PTR [rbx+r13*8]	# *_346, *_346
 14252              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14253              		.loc 1 122 11 view .LVU4926
 14254 4ec7 490FA3CF 		bt	r15, rcx	# *_346, index
 14255 4ecb 0F8249FF 		jc	.L940	#,
 14255      FFFF
 14256              	.LVL830:
 14257 4ed1 66662E0F 		.p2align 4
 14257      1F840000 
 14257      0000000F 
 14257      1F4000
 14258              		.p2align 3
 14259              	.L941:
 123:sieve_extend.c **** }
 14260              		.loc 1 123 5 is_stmt 1 view .LVU4927
 123:sieve_extend.c **** }
 14261              		.loc 1 123 5 is_stmt 0 view .LVU4928
 14262              	.LBE653:
 14263              	.LBE654:
 879:sieve_extend.c ****     }
 14264              		.loc 1 879 9 is_stmt 1 view .LVU4929
 14265              	# sieve_extend.c:879:         start = prime * prime * 2 + prime * 2;
 879:sieve_extend.c ****     }
 14266              		.loc 1 879 35 is_stmt 0 view .LVU4930
GAS LISTING /tmp/ccH5HMHD.s 			page 382


 14267 4ee0 488D7101 		lea	rsi, 1[rcx]	# _411,
 14268              	# sieve_extend.c:879:         start = prime * prime * 2 + prime * 2;
 879:sieve_extend.c ****     }
 14269              		.loc 1 879 15 view .LVU4931
 14270 4ee4 480FAFF1 		imul	rsi, rcx	# tmp743, index
 14271              	.LVL831:
 879:sieve_extend.c ****     }
 14272              		.loc 1 879 15 view .LVU4932
 14273 4ee8 4801F6   		add	rsi, rsi	# index
 14274              	.LVL832:
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 14275              		.loc 1 873 11 is_stmt 1 view .LVU4933
 14276 4eeb 4939F4   		cmp	r12, rsi	# block_stop, index
 14277 4eee 0F833CFC 		jnb	.L920	#,
 14277      FFFF
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 14278              		.loc 1 873 11 is_stmt 0 view .LVU4934
 14279 4ef4 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 14279      30
 14280              	.LVL833:
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 14281              		.loc 1 873 11 view .LVU4935
 14282 4ef9 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14282      18
 14283 4efe 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 14284 4f02 E9D6FBFF 		jmp	.L921	#
 14284      FF
 14285              	.LVL834:
 14286              		.p2align 4,,7
 14287 4f07 90       		.p2align 3
 14288              	.L1492:
 14289              	.LBB655:
 14290              	.LBB649:
 14291              	.LBB646:
 14292              	.LBB645:
 14293              	.LBB644:
 14294              	.LBB642:
 200:sieve_extend.c ****    }
 14295              		.loc 1 200 7 is_stmt 1 view .LVU4936
 14296              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 14297              		.loc 1 200 27 is_stmt 0 view .LVU4937
 14298 4f08 48235424 		and	rdx, QWORD PTR 8[rsp]	# tmp736, %sfp
 14298      08
 14299              	.LVL835:
 14300              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 14301              		.loc 1 200 18 view .LVU4938
 14302 4f0d 48095500 		or	QWORD PTR 0[rbp], rdx	# *index_ptr_642, tmp736
 14303 4f11 E9E3FEFF 		jmp	.L950	#
 14303      FF
 14304              	.LVL836:
 14305              		.p2align 4,,7
 14306 4f16 6690     		.p2align 3
 14307              	.L938:
 200:sieve_extend.c ****    }
 14308              		.loc 1 200 18 view .LVU4939
GAS LISTING /tmp/ccH5HMHD.s 			page 383


 14309              	.LBE642:
 14310              	.LBE644:
 14311              	.LBE645:
 14312              	.LBE646:
 14313              	.LBB647:
 14314              	.LBB636:
 14315              	.LBB635:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14316              		.loc 1 303 54 is_stmt 1 view .LVU4940
 14317              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14318              		.loc 1 303 9 is_stmt 0 view .LVU4941
 14319 4f18 4939F4   		cmp	r12, rsi	# block_stop, index
 14320 4f1b 0F82E1FE 		jb	.L942	#,
 14320      FFFF
 14321              	.LVL837:
 14322 4f21 66662E0F 		.p2align 4
 14322      1F840000 
 14322      0000000F 
 14322      1F4000
 14323              		.p2align 3
 14324              	.L944:
 14325              	.LBB634:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14326              		.loc 1 304 13 is_stmt 1 view .LVU4942
 14327              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14328              		.loc 1 304 32 is_stmt 0 view .LVU4943
 14329 4f30 4989F6   		mov	r14, rsi	# index_word, index
 14330              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             #pragma ivdep
 14331              		.loc 1 305 32 view .LVU4944
 14332 4f33 4531C9   		xor	r9d, r9d	# mask
 14333              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14334              		.loc 1 304 32 view .LVU4945
 14335 4f36 49C1EE06 		shr	r14, 6	# index_word,
 14336              	.LVL838:
 305:sieve_extend.c ****             #pragma ivdep
 14337              		.loc 1 305 13 is_stmt 1 view .LVU4946
 14338              	.L943:
 307:sieve_extend.c ****                 mask |= markmask(index);
 14339              		.loc 1 307 13 view .LVU4947
 308:sieve_extend.c ****                 index += step;
 14340              		.loc 1 308 17 view .LVU4948
 14341              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14342              		.loc 1 308 25 is_stmt 0 view .LVU4949
 14343 4f3a C4C2C9F7 		shlx	rcx, r10, rsi	# tmp716, tmp830, index
 14343      CA
 14344              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14345              		.loc 1 309 23 view .LVU4950
 14346 4f3f 4C01C6   		add	rsi, r8	# index, step
 14347              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14348              		.loc 1 310 36 view .LVU4951
GAS LISTING /tmp/ccH5HMHD.s 			page 384


 14349 4f42 4989F3   		mov	r11, rsi	# tmp718, index
 14350              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14351              		.loc 1 308 22 view .LVU4952
 14352 4f45 4909C9   		or	r9, rcx	# mask, tmp716
 14353              	.LVL839:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14354              		.loc 1 309 17 is_stmt 1 view .LVU4953
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14355              		.loc 1 310 21 view .LVU4954
 14356              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14357              		.loc 1 310 36 is_stmt 0 view .LVU4955
 14358 4f48 49C1EB06 		shr	r11, 6	# tmp718,
 14359              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14360              		.loc 1 310 13 view .LVU4956
 14361 4f4c 4D39DE   		cmp	r14, r11	# index_word, tmp718
 14362 4f4f 0F85AB00 		jne	.L1338	#,
 14362      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 14363              		.loc 1 307 13 is_stmt 1 view .LVU4957
 308:sieve_extend.c ****                 index += step;
 14364              		.loc 1 308 17 view .LVU4958
 14365              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14366              		.loc 1 308 25 is_stmt 0 view .LVU4959
 14367 4f55 C442C9F7 		shlx	r15, r10, rsi	# tmp1022, tmp830, index
 14367      FA
 14368              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14369              		.loc 1 309 23 view .LVU4960
 14370 4f5a 4C01C6   		add	rsi, r8	# index, step
 14371              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14372              		.loc 1 310 36 view .LVU4961
 14373 4f5d 4889F2   		mov	rdx, rsi	# tmp1023, index
 14374              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14375              		.loc 1 308 22 view .LVU4962
 14376 4f60 4D09F9   		or	r9, r15	# mask, tmp1022
 14377              	.LVL840:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14378              		.loc 1 309 17 is_stmt 1 view .LVU4963
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14379              		.loc 1 310 21 view .LVU4964
 14380              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14381              		.loc 1 310 36 is_stmt 0 view .LVU4965
 14382 4f63 48C1EA06 		shr	rdx, 6	# tmp1023,
 14383              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14384              		.loc 1 310 13 view .LVU4966
 14385 4f67 4939D6   		cmp	r14, rdx	# index_word, tmp1023
 14386 4f6a 0F859000 		jne	.L1338	#,
 14386      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/ccH5HMHD.s 			page 385


 14387              		.loc 1 307 13 is_stmt 1 view .LVU4967
 308:sieve_extend.c ****                 index += step;
 14388              		.loc 1 308 17 view .LVU4968
 14389              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14390              		.loc 1 308 25 is_stmt 0 view .LVU4969
 14391 4f70 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1024, tmp830, index
 14391      C2
 14392              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14393              		.loc 1 309 23 view .LVU4970
 14394 4f75 4C01C6   		add	rsi, r8	# index, step
 14395              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14396              		.loc 1 310 36 view .LVU4971
 14397 4f78 4889F7   		mov	rdi, rsi	# tmp1025, index
 14398              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14399              		.loc 1 308 22 view .LVU4972
 14400 4f7b 4909C1   		or	r9, rax	# mask, tmp1024
 14401              	.LVL841:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14402              		.loc 1 309 17 is_stmt 1 view .LVU4973
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14403              		.loc 1 310 21 view .LVU4974
 14404              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14405              		.loc 1 310 36 is_stmt 0 view .LVU4975
 14406 4f7e 48C1EF06 		shr	rdi, 6	# tmp1025,
 14407              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14408              		.loc 1 310 13 view .LVU4976
 14409 4f82 4939FE   		cmp	r14, rdi	# index_word, tmp1025
 14410 4f85 7579     		jne	.L1338	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14411              		.loc 1 307 13 is_stmt 1 view .LVU4977
 308:sieve_extend.c ****                 index += step;
 14412              		.loc 1 308 17 view .LVU4978
 14413              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14414              		.loc 1 308 25 is_stmt 0 view .LVU4979
 14415 4f87 C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1026, tmp830, index
 14415      CA
 14416              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14417              		.loc 1 309 23 view .LVU4980
 14418 4f8c 4C01C6   		add	rsi, r8	# index, step
 14419              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14420              		.loc 1 310 36 view .LVU4981
 14421 4f8f 4989F3   		mov	r11, rsi	# tmp1027, index
 14422              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14423              		.loc 1 308 22 view .LVU4982
 14424 4f92 4909C9   		or	r9, rcx	# mask, tmp1026
 14425              	.LVL842:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccH5HMHD.s 			page 386


 14426              		.loc 1 309 17 is_stmt 1 view .LVU4983
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14427              		.loc 1 310 21 view .LVU4984
 14428              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14429              		.loc 1 310 36 is_stmt 0 view .LVU4985
 14430 4f95 49C1EB06 		shr	r11, 6	# tmp1027,
 14431              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14432              		.loc 1 310 13 view .LVU4986
 14433 4f99 4D39DE   		cmp	r14, r11	# index_word, tmp1027
 14434 4f9c 7562     		jne	.L1338	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14435              		.loc 1 307 13 is_stmt 1 view .LVU4987
 308:sieve_extend.c ****                 index += step;
 14436              		.loc 1 308 17 view .LVU4988
 14437              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14438              		.loc 1 308 25 is_stmt 0 view .LVU4989
 14439 4f9e C442C9F7 		shlx	r15, r10, rsi	# tmp1028, tmp830, index
 14439      FA
 14440              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14441              		.loc 1 309 23 view .LVU4990
 14442 4fa3 4C01C6   		add	rsi, r8	# index, step
 14443              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14444              		.loc 1 310 36 view .LVU4991
 14445 4fa6 4889F2   		mov	rdx, rsi	# tmp1029, index
 14446              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14447              		.loc 1 308 22 view .LVU4992
 14448 4fa9 4D09F9   		or	r9, r15	# mask, tmp1028
 14449              	.LVL843:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14450              		.loc 1 309 17 is_stmt 1 view .LVU4993
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14451              		.loc 1 310 21 view .LVU4994
 14452              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14453              		.loc 1 310 36 is_stmt 0 view .LVU4995
 14454 4fac 48C1EA06 		shr	rdx, 6	# tmp1029,
 14455              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14456              		.loc 1 310 13 view .LVU4996
 14457 4fb0 4939D6   		cmp	r14, rdx	# index_word, tmp1029
 14458 4fb3 754B     		jne	.L1338	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14459              		.loc 1 307 13 is_stmt 1 view .LVU4997
 308:sieve_extend.c ****                 index += step;
 14460              		.loc 1 308 17 view .LVU4998
 14461              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14462              		.loc 1 308 25 is_stmt 0 view .LVU4999
 14463 4fb5 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1030, tmp830, index
 14463      C2
 14464              	# sieve_extend.c:309:                 index += step;
GAS LISTING /tmp/ccH5HMHD.s 			page 387


 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14465              		.loc 1 309 23 view .LVU5000
 14466 4fba 4C01C6   		add	rsi, r8	# index, step
 14467              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14468              		.loc 1 310 36 view .LVU5001
 14469 4fbd 4889F7   		mov	rdi, rsi	# tmp1031, index
 14470              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14471              		.loc 1 308 22 view .LVU5002
 14472 4fc0 4909C1   		or	r9, rax	# mask, tmp1030
 14473              	.LVL844:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14474              		.loc 1 309 17 is_stmt 1 view .LVU5003
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14475              		.loc 1 310 21 view .LVU5004
 14476              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14477              		.loc 1 310 36 is_stmt 0 view .LVU5005
 14478 4fc3 48C1EF06 		shr	rdi, 6	# tmp1031,
 14479              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14480              		.loc 1 310 13 view .LVU5006
 14481 4fc7 4939FE   		cmp	r14, rdi	# index_word, tmp1031
 14482 4fca 7534     		jne	.L1338	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14483              		.loc 1 307 13 is_stmt 1 view .LVU5007
 308:sieve_extend.c ****                 index += step;
 14484              		.loc 1 308 17 view .LVU5008
 14485              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14486              		.loc 1 308 25 is_stmt 0 view .LVU5009
 14487 4fcc C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1032, tmp830, index
 14487      CA
 14488              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14489              		.loc 1 309 23 view .LVU5010
 14490 4fd1 4C01C6   		add	rsi, r8	# index, step
 14491              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14492              		.loc 1 310 36 view .LVU5011
 14493 4fd4 4989F3   		mov	r11, rsi	# tmp1033, index
 14494              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14495              		.loc 1 308 22 view .LVU5012
 14496 4fd7 4909C9   		or	r9, rcx	# mask, tmp1032
 14497              	.LVL845:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14498              		.loc 1 309 17 is_stmt 1 view .LVU5013
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14499              		.loc 1 310 21 view .LVU5014
 14500              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14501              		.loc 1 310 36 is_stmt 0 view .LVU5015
 14502 4fda 49C1EB06 		shr	r11, 6	# tmp1033,
 14503              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccH5HMHD.s 			page 388


 14504              		.loc 1 310 13 view .LVU5016
 14505 4fde 4D39DE   		cmp	r14, r11	# index_word, tmp1033
 14506 4fe1 751D     		jne	.L1338	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14507              		.loc 1 307 13 is_stmt 1 view .LVU5017
 308:sieve_extend.c ****                 index += step;
 14508              		.loc 1 308 17 view .LVU5018
 14509              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14510              		.loc 1 308 25 is_stmt 0 view .LVU5019
 14511 4fe3 C442C9F7 		shlx	r15, r10, rsi	# tmp1034, tmp830, index
 14511      FA
 14512              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14513              		.loc 1 309 23 view .LVU5020
 14514 4fe8 4C01C6   		add	rsi, r8	# index, step
 14515              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14516              		.loc 1 310 36 view .LVU5021
 14517 4feb 4889F2   		mov	rdx, rsi	# tmp1035, index
 14518              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14519              		.loc 1 308 22 view .LVU5022
 14520 4fee 4D09F9   		or	r9, r15	# mask, tmp1034
 14521              	.LVL846:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14522              		.loc 1 309 17 is_stmt 1 view .LVU5023
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14523              		.loc 1 310 21 view .LVU5024
 14524              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14525              		.loc 1 310 36 is_stmt 0 view .LVU5025
 14526 4ff1 48C1EA06 		shr	rdx, 6	# tmp1035,
 14527              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14528              		.loc 1 310 13 view .LVU5026
 14529 4ff5 4939D6   		cmp	r14, rdx	# index_word, tmp1035
 14530 4ff8 0F843CFF 		je	.L943	#,
 14530      FFFF
 14531 4ffe 6690     		.p2align 4
 14532              		.p2align 3
 14533              	.L1338:
 313:sieve_extend.c ****         }
 14534              		.loc 1 313 13 is_stmt 1 view .LVU5027
 14535              	# sieve_extend.c:313:             bitarray[index_word] |= mask;
 313:sieve_extend.c ****         }
 14536              		.loc 1 313 34 is_stmt 0 view .LVU5028
 14537 5000 4E090CF3 		or	QWORD PTR [rbx+r14*8], r9	# *_525, mask
 313:sieve_extend.c ****         }
 14538              		.loc 1 313 34 view .LVU5029
 14539              	.LBE634:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14540              		.loc 1 303 54 is_stmt 1 view .LVU5030
 14541              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14542              		.loc 1 303 9 is_stmt 0 view .LVU5031
 14543 5004 4939F4   		cmp	r12, rsi	# block_stop, index
GAS LISTING /tmp/ccH5HMHD.s 			page 389


 14544 5007 0F8323FF 		jnb	.L944	#,
 14544      FFFF
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14545              		.loc 1 303 9 view .LVU5032
 14546 500d E9F0FDFF 		jmp	.L942	#
 14546      FF
 14547              	.LVL847:
 14548              		.p2align 4,,7
 14549 5012 660F1F44 		.p2align 3
 14549      0000
 14550              	.L1491:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14551              		.loc 1 303 9 view .LVU5033
 14552 5018 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14552      18
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14553              		.loc 1 303 9 view .LVU5034
 14554              	.LBE635:
 14555              	.LBE636:
 14556              	.LBE647:
 14557              	.LBE649:
 14558              	.LBE655:
 900:sieve_extend.c ****         step  = prime * 2 + 1;
 14559              		.loc 1 900 11 is_stmt 1 view .LVU5035
 14560 501d 4939F4   		cmp	r12, rsi	# block_stop, index
 14561 5020 0F82AEFA 		jb	.L1472	#,
 14561      FFFF
 901:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14562              		.loc 1 901 9 view .LVU5036
 14563              	# sieve_extend.c:901:         step  = prime * 2 + 1;
 901:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14564              		.loc 1 901 15 is_stmt 0 view .LVU5037
 14565 5026 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14565      01
 14566              	.LVL848:
 902:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14567              		.loc 1 902 9 is_stmt 1 view .LVU5038
 14568              	# sieve_extend.c:902:         if unlikely(step > VECTORSTEP_FASTER) break;
 902:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14569              		.loc 1 902 12 is_stmt 0 view .LVU5039
 14570 502b 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14570      000000
 14571 5032 0F872E01 		ja	.L1493	#,
 14571      0000
 14572 5038 0F1F8400 		.p2align 4
 14572      00000000 
 14573              		.p2align 3
 14574              	.L952:
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14575              		.loc 1 903 9 is_stmt 1 view .LVU5040
 14576              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14577              		.loc 1 903 12 is_stmt 0 view .LVU5041
 14578 5040 4C8D7101 		lea	r14, 1[rcx]	# _363,
 14579 5044 4D39FE   		cmp	r14, r15	# _363, block_start
 14580 5047 7710     		ja	.L954	#,
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
GAS LISTING /tmp/ccH5HMHD.s 			page 390


 14581              		.loc 1 903 47 is_stmt 1 view .LVU5042
 14582              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14583              		.loc 1 903 67 is_stmt 0 view .LVU5043
 14584 5049 4A8D0439 		lea	rax, [rcx+r15]	# _367,
 14585              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14586              		.loc 1 903 108 view .LVU5044
 14587 504d 31D2     		xor	edx, edx	# tmp747
 14588              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14589              		.loc 1 903 75 view .LVU5045
 14590 504f 488D3408 		lea	rsi, [rax+rcx]	# tmp745,
 14591              	.LVL849:
 14592              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14593              		.loc 1 903 108 view .LVU5046
 14594 5053 49F7F2   		div	r10	# step
 14595              	.LVL850:
 14596              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14597              		.loc 1 903 53 view .LVU5047
 14598 5056 4829D6   		sub	rsi, rdx	# index, tmp747
 14599              	.LVL851:
 14600              	.L954:
 904:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 14601              		.loc 1 904 9 is_stmt 1 view .LVU5048
 14602 5059 4C89E1   		mov	rcx, r12	#, block_stop
 14603 505c 4C89D2   		mov	rdx, r10	#, step
 14604 505f 4889DF   		mov	rdi, rbx	#, _30
 14605 5062 E8A9C4FF 		call	setBitsTrue_largeRange_vector	#
 14605      FF
 14606              	.LVL852:
 905:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14607              		.loc 1 905 9 view .LVU5049
 14608              	.LBB656:
 14609              	.LBI656:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14610              		.loc 1 121 25 view .LVU5050
 14611              	.LBB657:
 122:sieve_extend.c ****     return index;
 14612              		.loc 1 122 5 view .LVU5051
 122:sieve_extend.c ****     return index;
 14613              		.loc 1 122 11 view .LVU5052
 14614              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14615              		.loc 1 122 21 is_stmt 0 view .LVU5053
 14616 5067 4C89F1   		mov	rcx, r14	# tmp749, _363
 14617 506a 48C1E906 		shr	rcx, 6	# tmp749,
 14618              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14619              		.loc 1 122 12 view .LVU5054
 14620 506e 488B34CB 		mov	rsi, QWORD PTR [rbx+rcx*8]	# *_272, *_272
 14621              	.LBE657:
 14622              	.LBE656:
 14623              	# sieve_extend.c:903:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 903:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
GAS LISTING /tmp/ccH5HMHD.s 			page 391


 14624              		.loc 1 903 12 view .LVU5055
 14625 5072 4C89F1   		mov	rcx, r14	# index, _363
 14626              	.LBB659:
 14627              	.LBB658:
 14628              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14629              		.loc 1 122 11 view .LVU5056
 14630 5075 4C0FA3F6 		bt	rsi, r14	# *_272, _363
 14631 5079 0F83C100 		jnc	.L955	#,
 14631      0000
 14632              	.LVL853:
 14633              	.L956:
 122:sieve_extend.c ****     return index;
 14634              		.loc 1 122 58 is_stmt 1 view .LVU5057
 14635              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14636              		.loc 1 122 63 is_stmt 0 view .LVU5058
 14637 507f 4C8D4101 		lea	r8, 1[rcx]	# tmp839,
 14638              	.LVL854:
 14639              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14640              		.loc 1 122 21 view .LVU5059
 14641 5083 4D89C1   		mov	r9, r8	# tmp754, index
 14642              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14643              		.loc 1 122 63 view .LVU5060
 14644 5086 4C89C1   		mov	rcx, r8	# index, tmp839
 122:sieve_extend.c ****     return index;
 14645              		.loc 1 122 11 is_stmt 1 view .LVU5061
 14646              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14647              		.loc 1 122 21 is_stmt 0 view .LVU5062
 14648 5089 49C1E906 		shr	r9, 6	# tmp754,
 14649              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14650              		.loc 1 122 12 view .LVU5063
 14651 508d 4A8B3CCB 		mov	rdi, QWORD PTR [rbx+r9*8]	# *_376, *_376
 14652              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14653              		.loc 1 122 11 view .LVU5064
 14654 5091 4C0FA3C7 		bt	rdi, r8	# *_376, index
 14655 5095 0F83A500 		jnc	.L955	#,
 14655      0000
 122:sieve_extend.c ****     return index;
 14656              		.loc 1 122 58 is_stmt 1 view .LVU5065
 14657              	.LVL855:
 14658              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14659              		.loc 1 122 63 is_stmt 0 view .LVU5066
 14660 509b 4883C101 		add	rcx, 1	# index,
 14661              	.LVL856:
 122:sieve_extend.c ****     return index;
 14662              		.loc 1 122 11 is_stmt 1 view .LVU5067
 14663              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14664              		.loc 1 122 21 is_stmt 0 view .LVU5068
 14665 509f 4989CB   		mov	r11, rcx	# tmp966, index
GAS LISTING /tmp/ccH5HMHD.s 			page 392


 14666 50a2 49C1EB06 		shr	r11, 6	# tmp966,
 14667              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14668              		.loc 1 122 12 view .LVU5069
 14669 50a6 4E8B2CDB 		mov	r13, QWORD PTR [rbx+r11*8]	# *_376, *_376
 14670              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14671              		.loc 1 122 11 view .LVU5070
 14672 50aa 490FA3CD 		bt	r13, rcx	# *_376, index
 14673 50ae 0F838C00 		jnc	.L955	#,
 14673      0000
 122:sieve_extend.c ****     return index;
 14674              		.loc 1 122 58 is_stmt 1 view .LVU5071
 14675              	.LVL857:
 14676              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14677              		.loc 1 122 63 is_stmt 0 view .LVU5072
 14678 50b4 498D4802 		lea	rcx, 2[r8]	# index,
 14679              	.LVL858:
 122:sieve_extend.c ****     return index;
 14680              		.loc 1 122 11 is_stmt 1 view .LVU5073
 14681              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14682              		.loc 1 122 21 is_stmt 0 view .LVU5074
 14683 50b8 4989CA   		mov	r10, rcx	# tmp970, index
 14684 50bb 49C1EA06 		shr	r10, 6	# tmp970,
 14685              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14686              		.loc 1 122 12 view .LVU5075
 14687 50bf 4E8B34D3 		mov	r14, QWORD PTR [rbx+r10*8]	# *_376, *_376
 14688              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14689              		.loc 1 122 11 view .LVU5076
 14690 50c3 490FA3CE 		bt	r14, rcx	# *_376, index
 14691 50c7 7377     		jnc	.L955	#,
 122:sieve_extend.c ****     return index;
 14692              		.loc 1 122 58 is_stmt 1 view .LVU5077
 14693              	.LVL859:
 14694              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14695              		.loc 1 122 63 is_stmt 0 view .LVU5078
 14696 50c9 498D4803 		lea	rcx, 3[r8]	# index,
 14697              	.LVL860:
 122:sieve_extend.c ****     return index;
 14698              		.loc 1 122 11 is_stmt 1 view .LVU5079
 14699              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14700              		.loc 1 122 21 is_stmt 0 view .LVU5080
 14701 50cd 4889C8   		mov	rax, rcx	# tmp974, index
 14702 50d0 48C1E806 		shr	rax, 6	# tmp974,
 14703              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14704              		.loc 1 122 12 view .LVU5081
 14705 50d4 488B14C3 		mov	rdx, QWORD PTR [rbx+rax*8]	# *_376, *_376
 14706              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14707              		.loc 1 122 11 view .LVU5082
GAS LISTING /tmp/ccH5HMHD.s 			page 393


 14708 50d8 480FA3CA 		bt	rdx, rcx	# *_376, index
 14709 50dc 7362     		jnc	.L955	#,
 122:sieve_extend.c ****     return index;
 14710              		.loc 1 122 58 is_stmt 1 view .LVU5083
 14711              	.LVL861:
 14712              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14713              		.loc 1 122 63 is_stmt 0 view .LVU5084
 14714 50de 498D4804 		lea	rcx, 4[r8]	# index,
 14715              	.LVL862:
 122:sieve_extend.c ****     return index;
 14716              		.loc 1 122 11 is_stmt 1 view .LVU5085
 14717              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14718              		.loc 1 122 21 is_stmt 0 view .LVU5086
 14719 50e2 4889CE   		mov	rsi, rcx	# tmp978, index
 14720 50e5 48C1EE06 		shr	rsi, 6	# tmp978,
 14721              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14722              		.loc 1 122 12 view .LVU5087
 14723 50e9 4C8B0CF3 		mov	r9, QWORD PTR [rbx+rsi*8]	# *_376, *_376
 14724              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14725              		.loc 1 122 11 view .LVU5088
 14726 50ed 490FA3C9 		bt	r9, rcx	# *_376, index
 14727 50f1 734D     		jnc	.L955	#,
 122:sieve_extend.c ****     return index;
 14728              		.loc 1 122 58 is_stmt 1 view .LVU5089
 14729              	.LVL863:
 14730              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14731              		.loc 1 122 63 is_stmt 0 view .LVU5090
 14732 50f3 498D4805 		lea	rcx, 5[r8]	# index,
 14733              	.LVL864:
 122:sieve_extend.c ****     return index;
 14734              		.loc 1 122 11 is_stmt 1 view .LVU5091
 14735              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14736              		.loc 1 122 21 is_stmt 0 view .LVU5092
 14737 50f7 4889CF   		mov	rdi, rcx	# tmp982, index
 14738 50fa 48C1EF06 		shr	rdi, 6	# tmp982,
 14739              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14740              		.loc 1 122 12 view .LVU5093
 14741 50fe 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_376, *_376
 14742              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14743              		.loc 1 122 11 view .LVU5094
 14744 5102 490FA3CB 		bt	r11, rcx	# *_376, index
 14745 5106 7338     		jnc	.L955	#,
 122:sieve_extend.c ****     return index;
 14746              		.loc 1 122 58 is_stmt 1 view .LVU5095
 14747              	.LVL865:
 14748              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14749              		.loc 1 122 63 is_stmt 0 view .LVU5096
 14750 5108 498D4806 		lea	rcx, 6[r8]	# index,
GAS LISTING /tmp/ccH5HMHD.s 			page 394


 14751              	.LVL866:
 122:sieve_extend.c ****     return index;
 14752              		.loc 1 122 11 is_stmt 1 view .LVU5097
 14753              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14754              		.loc 1 122 21 is_stmt 0 view .LVU5098
 14755 510c 4989CD   		mov	r13, rcx	# tmp986, index
 14756 510f 49C1ED06 		shr	r13, 6	# tmp986,
 14757              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14758              		.loc 1 122 12 view .LVU5099
 14759 5113 4E8B14EB 		mov	r10, QWORD PTR [rbx+r13*8]	# *_376, *_376
 14760              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14761              		.loc 1 122 11 view .LVU5100
 14762 5117 490FA3CA 		bt	r10, rcx	# *_376, index
 14763 511b 7323     		jnc	.L955	#,
 122:sieve_extend.c ****     return index;
 14764              		.loc 1 122 58 is_stmt 1 view .LVU5101
 14765              	.LVL867:
 14766              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14767              		.loc 1 122 63 is_stmt 0 view .LVU5102
 14768 511d 498D4807 		lea	rcx, 7[r8]	# index,
 14769              	.LVL868:
 122:sieve_extend.c ****     return index;
 14770              		.loc 1 122 11 is_stmt 1 view .LVU5103
 14771              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14772              		.loc 1 122 21 is_stmt 0 view .LVU5104
 14773 5121 4989C8   		mov	r8, rcx	# tmp990, index
 14774 5124 49C1E806 		shr	r8, 6	# tmp990,
 14775              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14776              		.loc 1 122 12 view .LVU5105
 14777 5128 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_376, *_376
 14778              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14779              		.loc 1 122 11 view .LVU5106
 14780 512c 490FA3CE 		bt	r14, rcx	# *_376, index
 14781 5130 0F8249FF 		jc	.L956	#,
 14781      FFFF
 14782              	.LVL869:
 14783 5136 662E0F1F 		.p2align 4
 14783      84000000 
 14783      0000
 14784              		.p2align 3
 14785              	.L955:
 123:sieve_extend.c **** }
 14786              		.loc 1 123 5 is_stmt 1 view .LVU5107
 123:sieve_extend.c **** }
 14787              		.loc 1 123 5 is_stmt 0 view .LVU5108
 14788              	.LBE658:
 14789              	.LBE659:
 906:sieve_extend.c ****     }
 14790              		.loc 1 906 9 is_stmt 1 view .LVU5109
 14791              	# sieve_extend.c:906:         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/ccH5HMHD.s 			page 395


 906:sieve_extend.c ****     }
 14792              		.loc 1 906 35 is_stmt 0 view .LVU5110
 14793 5140 488D7101 		lea	rsi, 1[rcx]	# _411,
 14794              	# sieve_extend.c:906:         start = prime * prime * 2 + prime * 2;
 906:sieve_extend.c ****     }
 14795              		.loc 1 906 15 view .LVU5111
 14796 5144 480FAFF1 		imul	rsi, rcx	# tmp760, index
 14797              	.LVL870:
 906:sieve_extend.c ****     }
 14798              		.loc 1 906 15 view .LVU5112
 14799 5148 4801F6   		add	rsi, rsi	# index
 14800              	.LVL871:
 900:sieve_extend.c ****         step  = prime * 2 + 1;
 14801              		.loc 1 900 11 is_stmt 1 view .LVU5113
 14802 514b 4939F4   		cmp	r12, rsi	# block_stop, index
 14803 514e 0F8280F9 		jb	.L1472	#,
 14803      FFFF
 901:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14804              		.loc 1 901 9 view .LVU5114
 14805              	# sieve_extend.c:901:         step  = prime * 2 + 1;
 901:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14806              		.loc 1 901 15 is_stmt 0 view .LVU5115
 14807 5154 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14807      01
 14808              	.LVL872:
 902:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14809              		.loc 1 902 9 is_stmt 1 view .LVU5116
 14810              	# sieve_extend.c:902:         if unlikely(step > VECTORSTEP_FASTER) break;
 902:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14811              		.loc 1 902 12 is_stmt 0 view .LVU5117
 14812 5159 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14812      000000
 14813 5160 0F86DAFE 		jbe	.L952	#,
 14813      FFFF
 14814              	.L1493:
 909:sieve_extend.c ****         step  = prime * 2 + 1;
 14815              		.loc 1 909 11 is_stmt 1 view .LVU5118
 14816 5166 4939F4   		cmp	r12, rsi	# block_stop, index
 14817 5169 0F8265F9 		jb	.L1472	#,
 14817      FFFF
 909:sieve_extend.c ****         step  = prime * 2 + 1;
 14818              		.loc 1 909 11 is_stmt 0 view .LVU5119
 14819 516f 4C8D5101 		lea	r10, 1[rcx]	# _411,
 14820              	.LVL873:
 14821 5173 66662E0F 		.p2align 4
 14821      1F840000 
 14821      00000066 
 14821      90
 14822              		.p2align 3
 14823              	.L953:
 910:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14824              		.loc 1 910 9 is_stmt 1 view .LVU5120
 14825              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14826              		.loc 1 911 12 is_stmt 0 view .LVU5121
 14827 5180 4D39FA   		cmp	r10, r15	# _411, block_start
 14828              	# sieve_extend.c:910:         step  = prime * 2 + 1;
GAS LISTING /tmp/ccH5HMHD.s 			page 396


 910:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14829              		.loc 1 910 15 view .LVU5122
 14830 5183 4C8D5C09 		lea	r11, 1[rcx+rcx]	# step,
 14830      01
 14831              	.LVL874:
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14832              		.loc 1 911 9 is_stmt 1 view .LVU5123
 14833              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14834              		.loc 1 911 12 is_stmt 0 view .LVU5124
 14835 5188 7710     		ja	.L957	#,
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14836              		.loc 1 911 47 is_stmt 1 view .LVU5125
 14837              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14838              		.loc 1 911 67 is_stmt 0 view .LVU5126
 14839 518a 4A8D0439 		lea	rax, [rcx+r15]	# _393,
 14840              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14841              		.loc 1 911 108 view .LVU5127
 14842 518e 31D2     		xor	edx, edx	# tmp764
 14843              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14844              		.loc 1 911 75 view .LVU5128
 14845 5190 488D3408 		lea	rsi, [rax+rcx]	# tmp762,
 14846              	.LVL875:
 14847              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14848              		.loc 1 911 108 view .LVU5129
 14849 5194 49F7F3   		div	r11	# step
 14850              	.LVL876:
 14851              	# sieve_extend.c:911:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 911:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14852              		.loc 1 911 53 view .LVU5130
 14853 5197 4829D6   		sub	rsi, rdx	# index, tmp764
 14854              	.LVL877:
 14855              	.L957:
 912:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14856              		.loc 1 912 9 is_stmt 1 view .LVU5131
 14857              	# sieve_extend.c:912:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 912:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14858              		.loc 1 912 12 is_stmt 0 view .LVU5132
 14859 519a 4D89DD   		mov	r13, r11	# tmp766, step
 14860 519d 49C1E506 		sal	r13, 6	# tmp766,
 14861 51a1 4901F5   		add	r13, rsi	# _399, index
 14862 51a4 4D39EC   		cmp	r12, r13	# block_stop, _399
 14863 51a7 0F825302 		jb	.L958	#,
 14863      0000
 14864              	.LVL878:
 14865              	.LBB660:
 14866              	.LBB661:
 14867              	.LBB662:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14868              		.loc 1 417 50 is_stmt 1 view .LVU5133
 14869              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14870              		.loc 1 417 5 is_stmt 0 view .LVU5134
GAS LISTING /tmp/ccH5HMHD.s 			page 397


 14871 51ad 4C39EE   		cmp	rsi, r13	# index, _399
 14872 51b0 0F83CB01 		jnb	.L969	#,
 14872      0000
 14873              	.LBB663:
 14874              	.LBB664:
 14875              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 14876              		.loc 1 176 133 view .LVU5135
 14877 51b6 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 14877      10
 14878              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 14879              		.loc 1 176 110 view .LVU5136
 14880 51bb 4F8D049B 		lea	r8, [r11+r11*4]	# tmp776,
 14881 51bf 4D89DE   		mov	r14, r11	# _1406, step
 14882              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 14883              		.loc 1 182 17 view .LVU5137
 14884 51c2 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _626,
 14884      00000000 
 14885              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 14886              		.loc 1 176 133 view .LVU5138
 14887 51ca 4989C9   		mov	r9, rcx	# tmp778, range_stop_word
 14888 51cd 4D29C1   		sub	r9, r8	# tmp778, tmp776
 14889              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 14890              		.loc 1 176 53 view .LVU5139
 14891 51d0 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp776
 14892 51d3 4E8D0CCB 		lea	r9, [rbx+r9*8]	# tmp780,
 14893 51d7 4C0F46CB 		cmovbe	r9, rbx	# _30,, fast_loop_ptr
 14894 51db 49C1E003 		sal	r8, 3	# tmp784,
 14895 51df 49C1E604 		sal	r14, 4	# _1406,
 14896 51e3 66662E0F 		.p2align 4
 14896      1F840000 
 14896      00000066 
 14896      90
 14897              		.p2align 3
 14898              	.L968:
 176:sieve_extend.c **** 
 14899              		.loc 1 176 53 view .LVU5140
 14900              	.LBE664:
 14901              	.LBE663:
 418:sieve_extend.c ****     }
 14902              		.loc 1 418 9 is_stmt 1 view .LVU5141
 14903 51f0 4889F0   		mov	rax, rsi	# tmp787, index
 14904 51f3 BF010000 		mov	edi, 1	# tmp1728,
 14904      00
 14905 51f8 48C1E806 		shr	rax, 6	# tmp787,
 14906 51fc C4E2C9F7 		shlx	rcx, rdi, rsi	# _611, tmp1728, index
 14906      CF
 14907              	.LVL879:
 14908              	.LBB667:
 14909              	.LBI663:
 146:sieve_extend.c **** //#if __APPLE__
 14910              		.loc 1 146 20 view .LVU5142
 14911              	.LBB665:
GAS LISTING /tmp/ccH5HMHD.s 			page 398


 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 14912              		.loc 1 174 4 view .LVU5143
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 14913              		.loc 1 175 4 view .LVU5144
 14914              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 14915              		.loc 1 175 78 is_stmt 0 view .LVU5145
 14916 5201 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 14917              	.LVL880:
 176:sieve_extend.c **** 
 14918              		.loc 1 176 4 is_stmt 1 view .LVU5146
 180:sieve_extend.c ****        *index_ptr |= mask;
 14919              		.loc 1 180 4 view .LVU5147
 180:sieve_extend.c ****        *index_ptr |= mask;
 14920              		.loc 1 180 10 view .LVU5148
 14921 5205 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 14922 5208 0F830201 		jnb	.L963	#,
 14922      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 14923              		.loc 1 180 10 is_stmt 0 view .LVU5149
 14924 520e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.553,
 14925              	.L964:
 181:sieve_extend.c ****        index_ptr+=step;
 14926              		.loc 1 181 8 is_stmt 1 view .LVU5150
 14927              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14928              		.loc 1 181 19 is_stmt 0 view .LVU5151
 14929 5212 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 14930              		.loc 1 182 8 is_stmt 1 view .LVU5152
 14931              	.LVL881:
 183:sieve_extend.c ****        index_ptr+=step;
 14932              		.loc 1 183 8 view .LVU5153
 14933              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14934              		.loc 1 183 19 is_stmt 0 view .LVU5154
 14935 5215 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 14936              		.loc 1 184 8 is_stmt 1 view .LVU5155
 14937              	.LVL882:
 185:sieve_extend.c ****        index_ptr+=step;
 14938              		.loc 1 185 8 view .LVU5156
 14939              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14940              		.loc 1 185 19 is_stmt 0 view .LVU5157
 14941 5219 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 14942              		.loc 1 186 8 is_stmt 1 view .LVU5158
 14943              	.LVL883:
 187:sieve_extend.c ****        index_ptr+=step;
 14944              		.loc 1 187 8 view .LVU5159
 14945              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14946              		.loc 1 187 19 is_stmt 0 view .LVU5160
 14947 521c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 14948              		.loc 1 188 8 is_stmt 1 view .LVU5161
GAS LISTING /tmp/ccH5HMHD.s 			page 399


 14949              	.LVL884:
 189:sieve_extend.c ****        index_ptr+=step;
 14950              		.loc 1 189 8 view .LVU5162
 14951 5220 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 14952              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14953              		.loc 1 189 19 is_stmt 0 view .LVU5163
 14954 5223 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 14955              		.loc 1 190 8 is_stmt 1 view .LVU5164
 14956 5227 4C01C0   		add	rax, r8	# index_ptr, tmp784
 14957              	.LVL885:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14958              		.loc 1 180 10 view .LVU5165
 14959 522a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 14960 522d 0F86DD00 		jbe	.L963	#,
 14960      0000
 181:sieve_extend.c ****        index_ptr+=step;
 14961              		.loc 1 181 8 view .LVU5166
 14962              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14963              		.loc 1 181 19 is_stmt 0 view .LVU5167
 14964 5233 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 14965              		.loc 1 182 8 is_stmt 1 view .LVU5168
 14966              	.LVL886:
 183:sieve_extend.c ****        index_ptr+=step;
 14967              		.loc 1 183 8 view .LVU5169
 14968              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14969              		.loc 1 183 19 is_stmt 0 view .LVU5170
 14970 5236 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 14971              		.loc 1 184 8 is_stmt 1 view .LVU5171
 14972              	.LVL887:
 185:sieve_extend.c ****        index_ptr+=step;
 14973              		.loc 1 185 8 view .LVU5172
 14974              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14975              		.loc 1 185 19 is_stmt 0 view .LVU5173
 14976 523a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 14977              		.loc 1 186 8 is_stmt 1 view .LVU5174
 14978              	.LVL888:
 187:sieve_extend.c ****        index_ptr+=step;
 14979              		.loc 1 187 8 view .LVU5175
 14980              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14981              		.loc 1 187 19 is_stmt 0 view .LVU5176
 14982 523d 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 14983              		.loc 1 188 8 is_stmt 1 view .LVU5177
 14984              	.LVL889:
 189:sieve_extend.c ****        index_ptr+=step;
 14985              		.loc 1 189 8 view .LVU5178
 14986 5241 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 14987              	# sieve_extend.c:189:        *index_ptr |= mask;
GAS LISTING /tmp/ccH5HMHD.s 			page 400


 189:sieve_extend.c ****        index_ptr+=step;
 14988              		.loc 1 189 19 is_stmt 0 view .LVU5179
 14989 5244 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 14990              		.loc 1 190 8 is_stmt 1 view .LVU5180
 14991 5248 4C01C0   		add	rax, r8	# index_ptr, tmp784
 14992              	.LVL890:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14993              		.loc 1 180 10 view .LVU5181
 14994 524b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 14995 524e 0F86BC00 		jbe	.L963	#,
 14995      0000
 181:sieve_extend.c ****        index_ptr+=step;
 14996              		.loc 1 181 8 view .LVU5182
 14997              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14998              		.loc 1 181 19 is_stmt 0 view .LVU5183
 14999 5254 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15000              		.loc 1 182 8 is_stmt 1 view .LVU5184
 15001              	.LVL891:
 183:sieve_extend.c ****        index_ptr+=step;
 15002              		.loc 1 183 8 view .LVU5185
 15003              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15004              		.loc 1 183 19 is_stmt 0 view .LVU5186
 15005 5257 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15006              		.loc 1 184 8 is_stmt 1 view .LVU5187
 15007              	.LVL892:
 185:sieve_extend.c ****        index_ptr+=step;
 15008              		.loc 1 185 8 view .LVU5188
 15009              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15010              		.loc 1 185 19 is_stmt 0 view .LVU5189
 15011 525b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15012              		.loc 1 186 8 is_stmt 1 view .LVU5190
 15013              	.LVL893:
 187:sieve_extend.c ****        index_ptr+=step;
 15014              		.loc 1 187 8 view .LVU5191
 15015              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15016              		.loc 1 187 19 is_stmt 0 view .LVU5192
 15017 525e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15018              		.loc 1 188 8 is_stmt 1 view .LVU5193
 15019              	.LVL894:
 189:sieve_extend.c ****        index_ptr+=step;
 15020              		.loc 1 189 8 view .LVU5194
 15021 5262 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15022              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15023              		.loc 1 189 19 is_stmt 0 view .LVU5195
 15024 5265 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15025              		.loc 1 190 8 is_stmt 1 view .LVU5196
GAS LISTING /tmp/ccH5HMHD.s 			page 401


 15026 5269 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15027              	.LVL895:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15028              		.loc 1 180 10 view .LVU5197
 15029 526c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15030 526f 0F869B00 		jbe	.L963	#,
 15030      0000
 181:sieve_extend.c ****        index_ptr+=step;
 15031              		.loc 1 181 8 view .LVU5198
 15032              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15033              		.loc 1 181 19 is_stmt 0 view .LVU5199
 15034 5275 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15035              		.loc 1 182 8 is_stmt 1 view .LVU5200
 15036              	.LVL896:
 183:sieve_extend.c ****        index_ptr+=step;
 15037              		.loc 1 183 8 view .LVU5201
 15038              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15039              		.loc 1 183 19 is_stmt 0 view .LVU5202
 15040 5278 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15041              		.loc 1 184 8 is_stmt 1 view .LVU5203
 15042              	.LVL897:
 185:sieve_extend.c ****        index_ptr+=step;
 15043              		.loc 1 185 8 view .LVU5204
 15044              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15045              		.loc 1 185 19 is_stmt 0 view .LVU5205
 15046 527c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15047              		.loc 1 186 8 is_stmt 1 view .LVU5206
 15048              	.LVL898:
 187:sieve_extend.c ****        index_ptr+=step;
 15049              		.loc 1 187 8 view .LVU5207
 15050              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15051              		.loc 1 187 19 is_stmt 0 view .LVU5208
 15052 527f 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15053              		.loc 1 188 8 is_stmt 1 view .LVU5209
 15054              	.LVL899:
 189:sieve_extend.c ****        index_ptr+=step;
 15055              		.loc 1 189 8 view .LVU5210
 15056 5283 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15057              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15058              		.loc 1 189 19 is_stmt 0 view .LVU5211
 15059 5286 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15060              		.loc 1 190 8 is_stmt 1 view .LVU5212
 15061 528a 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15062              	.LVL900:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15063              		.loc 1 180 10 view .LVU5213
 15064 528d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccH5HMHD.s 			page 402


 15065 5290 767E     		jbe	.L963	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15066              		.loc 1 181 8 view .LVU5214
 15067              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15068              		.loc 1 181 19 is_stmt 0 view .LVU5215
 15069 5292 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15070              		.loc 1 182 8 is_stmt 1 view .LVU5216
 15071              	.LVL901:
 183:sieve_extend.c ****        index_ptr+=step;
 15072              		.loc 1 183 8 view .LVU5217
 15073              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15074              		.loc 1 183 19 is_stmt 0 view .LVU5218
 15075 5295 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15076              		.loc 1 184 8 is_stmt 1 view .LVU5219
 15077              	.LVL902:
 185:sieve_extend.c ****        index_ptr+=step;
 15078              		.loc 1 185 8 view .LVU5220
 15079              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15080              		.loc 1 185 19 is_stmt 0 view .LVU5221
 15081 5299 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15082              		.loc 1 186 8 is_stmt 1 view .LVU5222
 15083              	.LVL903:
 187:sieve_extend.c ****        index_ptr+=step;
 15084              		.loc 1 187 8 view .LVU5223
 15085              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15086              		.loc 1 187 19 is_stmt 0 view .LVU5224
 15087 529c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15088              		.loc 1 188 8 is_stmt 1 view .LVU5225
 15089              	.LVL904:
 189:sieve_extend.c ****        index_ptr+=step;
 15090              		.loc 1 189 8 view .LVU5226
 15091 52a0 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15092              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15093              		.loc 1 189 19 is_stmt 0 view .LVU5227
 15094 52a3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15095              		.loc 1 190 8 is_stmt 1 view .LVU5228
 15096 52a7 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15097              	.LVL905:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15098              		.loc 1 180 10 view .LVU5229
 15099 52aa 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15100 52ad 7661     		jbe	.L963	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15101              		.loc 1 181 8 view .LVU5230
 15102              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15103              		.loc 1 181 19 is_stmt 0 view .LVU5231
GAS LISTING /tmp/ccH5HMHD.s 			page 403


 15104 52af 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15105              		.loc 1 182 8 is_stmt 1 view .LVU5232
 15106              	.LVL906:
 183:sieve_extend.c ****        index_ptr+=step;
 15107              		.loc 1 183 8 view .LVU5233
 15108              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15109              		.loc 1 183 19 is_stmt 0 view .LVU5234
 15110 52b2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15111              		.loc 1 184 8 is_stmt 1 view .LVU5235
 15112              	.LVL907:
 185:sieve_extend.c ****        index_ptr+=step;
 15113              		.loc 1 185 8 view .LVU5236
 15114              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15115              		.loc 1 185 19 is_stmt 0 view .LVU5237
 15116 52b6 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15117              		.loc 1 186 8 is_stmt 1 view .LVU5238
 15118              	.LVL908:
 187:sieve_extend.c ****        index_ptr+=step;
 15119              		.loc 1 187 8 view .LVU5239
 15120              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15121              		.loc 1 187 19 is_stmt 0 view .LVU5240
 15122 52b9 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15123              		.loc 1 188 8 is_stmt 1 view .LVU5241
 15124              	.LVL909:
 189:sieve_extend.c ****        index_ptr+=step;
 15125              		.loc 1 189 8 view .LVU5242
 15126 52bd 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15127              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15128              		.loc 1 189 19 is_stmt 0 view .LVU5243
 15129 52c0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15130              		.loc 1 190 8 is_stmt 1 view .LVU5244
 15131 52c4 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15132              	.LVL910:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15133              		.loc 1 180 10 view .LVU5245
 15134 52c7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15135 52ca 7644     		jbe	.L963	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15136              		.loc 1 181 8 view .LVU5246
 15137              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15138              		.loc 1 181 19 is_stmt 0 view .LVU5247
 15139 52cc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15140              		.loc 1 182 8 is_stmt 1 view .LVU5248
 15141              	.LVL911:
 183:sieve_extend.c ****        index_ptr+=step;
 15142              		.loc 1 183 8 view .LVU5249
GAS LISTING /tmp/ccH5HMHD.s 			page 404


 15143              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15144              		.loc 1 183 19 is_stmt 0 view .LVU5250
 15145 52cf 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15146              		.loc 1 184 8 is_stmt 1 view .LVU5251
 15147              	.LVL912:
 185:sieve_extend.c ****        index_ptr+=step;
 15148              		.loc 1 185 8 view .LVU5252
 15149              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15150              		.loc 1 185 19 is_stmt 0 view .LVU5253
 15151 52d3 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15152              		.loc 1 186 8 is_stmt 1 view .LVU5254
 15153              	.LVL913:
 187:sieve_extend.c ****        index_ptr+=step;
 15154              		.loc 1 187 8 view .LVU5255
 15155              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15156              		.loc 1 187 19 is_stmt 0 view .LVU5256
 15157 52d6 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15158              		.loc 1 188 8 is_stmt 1 view .LVU5257
 15159              	.LVL914:
 189:sieve_extend.c ****        index_ptr+=step;
 15160              		.loc 1 189 8 view .LVU5258
 15161 52da 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15162              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15163              		.loc 1 189 19 is_stmt 0 view .LVU5259
 15164 52dd 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15165              		.loc 1 190 8 is_stmt 1 view .LVU5260
 15166 52e1 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15167              	.LVL915:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15168              		.loc 1 180 10 view .LVU5261
 15169 52e4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15170 52e7 7627     		jbe	.L963	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15171              		.loc 1 181 8 view .LVU5262
 15172              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15173              		.loc 1 181 19 is_stmt 0 view .LVU5263
 15174 52e9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15175              		.loc 1 182 8 is_stmt 1 view .LVU5264
 15176              	.LVL916:
 183:sieve_extend.c ****        index_ptr+=step;
 15177              		.loc 1 183 8 view .LVU5265
 15178              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15179              		.loc 1 183 19 is_stmt 0 view .LVU5266
 15180 52ec 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15181              		.loc 1 184 8 is_stmt 1 view .LVU5267
GAS LISTING /tmp/ccH5HMHD.s 			page 405


 15182              	.LVL917:
 185:sieve_extend.c ****        index_ptr+=step;
 15183              		.loc 1 185 8 view .LVU5268
 15184              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15185              		.loc 1 185 19 is_stmt 0 view .LVU5269
 15186 52f0 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15187              		.loc 1 186 8 is_stmt 1 view .LVU5270
 15188              	.LVL918:
 187:sieve_extend.c ****        index_ptr+=step;
 15189              		.loc 1 187 8 view .LVU5271
 15190              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15191              		.loc 1 187 19 is_stmt 0 view .LVU5272
 15192 52f3 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15193              		.loc 1 188 8 is_stmt 1 view .LVU5273
 15194              	.LVL919:
 189:sieve_extend.c ****        index_ptr+=step;
 15195              		.loc 1 189 8 view .LVU5274
 15196 52f7 4C01C7   		add	rdi, r8	# ivtmp.553, tmp784
 15197              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15198              		.loc 1 189 19 is_stmt 0 view .LVU5275
 15199 52fa 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15200              		.loc 1 190 8 is_stmt 1 view .LVU5276
 15201 52fe 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15202              	.LVL920:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15203              		.loc 1 180 10 view .LVU5277
 15204 5301 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15205 5304 0F8708FF 		ja	.L964	#,
 15205      FFFF
 15206 530a 660F1F44 		.p2align 4
 15206      0000
 15207              		.p2align 3
 15208              	.L963:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 15209              		.loc 1 193 4 view .LVU5278
 194:sieve_extend.c ****        *index_ptr |= mask;
 15210              		.loc 1 194 4 view .LVU5279
 194:sieve_extend.c ****        *index_ptr |= mask;
 15211              		.loc 1 194 10 view .LVU5280
 15212 5310 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15213 5313 765B     		jbe	.L965	#,
 15214              	.L966:
 195:sieve_extend.c ****        index_ptr+=step;
 15215              		.loc 1 195 8 view .LVU5281
 15216              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15217              		.loc 1 195 19 is_stmt 0 view .LVU5282
 15218 5315 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15219              		.loc 1 196 8 is_stmt 1 view .LVU5283
 15220              	# sieve_extend.c:196:        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 406


 196:sieve_extend.c ****    }
 15221              		.loc 1 196 17 is_stmt 0 view .LVU5284
 15222 5318 4801D0   		add	rax, rdx	# index_ptr, _626
 15223              	.LVL921:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15224              		.loc 1 194 10 is_stmt 1 view .LVU5285
 15225 531b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15226 531e 7650     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15227              		.loc 1 195 8 view .LVU5286
 15228              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15229              		.loc 1 195 19 is_stmt 0 view .LVU5287
 15230 5320 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15231              		.loc 1 196 8 is_stmt 1 view .LVU5288
 15232              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15233              		.loc 1 196 17 is_stmt 0 view .LVU5289
 15234 5323 4801D0   		add	rax, rdx	# index_ptr, _626
 15235              	.LVL922:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15236              		.loc 1 194 10 is_stmt 1 view .LVU5290
 15237 5326 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15238 5329 7645     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15239              		.loc 1 195 8 view .LVU5291
 15240              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15241              		.loc 1 195 19 is_stmt 0 view .LVU5292
 15242 532b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15243              		.loc 1 196 8 is_stmt 1 view .LVU5293
 15244              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15245              		.loc 1 196 17 is_stmt 0 view .LVU5294
 15246 532e 4801D0   		add	rax, rdx	# index_ptr, _626
 15247              	.LVL923:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15248              		.loc 1 194 10 is_stmt 1 view .LVU5295
 15249 5331 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15250 5334 763A     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15251              		.loc 1 195 8 view .LVU5296
 15252              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15253              		.loc 1 195 19 is_stmt 0 view .LVU5297
 15254 5336 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15255              		.loc 1 196 8 is_stmt 1 view .LVU5298
 15256              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15257              		.loc 1 196 17 is_stmt 0 view .LVU5299
 15258 5339 4801D0   		add	rax, rdx	# index_ptr, _626
 15259              	.LVL924:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15260              		.loc 1 194 10 is_stmt 1 view .LVU5300
GAS LISTING /tmp/ccH5HMHD.s 			page 407


 15261 533c 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15262 533f 762F     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15263              		.loc 1 195 8 view .LVU5301
 15264              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15265              		.loc 1 195 19 is_stmt 0 view .LVU5302
 15266 5341 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15267              		.loc 1 196 8 is_stmt 1 view .LVU5303
 15268              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15269              		.loc 1 196 17 is_stmt 0 view .LVU5304
 15270 5344 4801D0   		add	rax, rdx	# index_ptr, _626
 15271              	.LVL925:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15272              		.loc 1 194 10 is_stmt 1 view .LVU5305
 15273 5347 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15274 534a 7624     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15275              		.loc 1 195 8 view .LVU5306
 15276              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15277              		.loc 1 195 19 is_stmt 0 view .LVU5307
 15278 534c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15279              		.loc 1 196 8 is_stmt 1 view .LVU5308
 15280              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15281              		.loc 1 196 17 is_stmt 0 view .LVU5309
 15282 534f 4801D0   		add	rax, rdx	# index_ptr, _626
 15283              	.LVL926:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15284              		.loc 1 194 10 is_stmt 1 view .LVU5310
 15285 5352 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15286 5355 7619     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15287              		.loc 1 195 8 view .LVU5311
 15288              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15289              		.loc 1 195 19 is_stmt 0 view .LVU5312
 15290 5357 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15291              		.loc 1 196 8 is_stmt 1 view .LVU5313
 15292              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15293              		.loc 1 196 17 is_stmt 0 view .LVU5314
 15294 535a 4801D0   		add	rax, rdx	# index_ptr, _626
 15295              	.LVL927:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15296              		.loc 1 194 10 is_stmt 1 view .LVU5315
 15297 535d 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15298 5360 760E     		jbe	.L965	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15299              		.loc 1 195 8 view .LVU5316
 15300              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccH5HMHD.s 			page 408


 15301              		.loc 1 195 19 is_stmt 0 view .LVU5317
 15302 5362 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15303              		.loc 1 196 8 is_stmt 1 view .LVU5318
 15304              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15305              		.loc 1 196 17 is_stmt 0 view .LVU5319
 15306 5365 4801D0   		add	rax, rdx	# index_ptr, _626
 15307              	.LVL928:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15308              		.loc 1 194 10 is_stmt 1 view .LVU5320
 15309 5368 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15310 536b 77A8     		ja	.L966	#,
 15311 536d 0F1F00   		.p2align 4
 15312              		.p2align 3
 15313              	.L965:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15314              		.loc 1 199 4 view .LVU5321
 15315              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15316              		.loc 1 199 7 is_stmt 0 view .LVU5322
 15317 5370 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15318 5373 7463     		je	.L1494	#,
 15319              	.LVL929:
 15320              	.L967:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15321              		.loc 1 199 7 view .LVU5323
 15322              	.LBE665:
 15323              	.LBE667:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15324              		.loc 1 417 77 is_stmt 1 view .LVU5324
 15325              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15326              		.loc 1 417 83 is_stmt 0 view .LVU5325
 15327 5375 4C01DE   		add	rsi, r11	# index, step
 15328              	.LVL930:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15329              		.loc 1 417 50 is_stmt 1 view .LVU5326
 15330              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15331              		.loc 1 417 5 is_stmt 0 view .LVU5327
 15332 5378 4939F5   		cmp	r13, rsi	# _399, index
 15333 537b 0F876FFE 		ja	.L968	#,
 15333      FFFF
 15334              	.L969:
 15335              	.LVL931:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15336              		.loc 1 417 5 view .LVU5328
 15337              	.LBE662:
 15338              	.LBE661:
 15339              	.LBE660:
 914:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15340              		.loc 1 914 9 is_stmt 1 view .LVU5329
 15341              	.LBB671:
 15342              	.LBI671:
 127:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15343              		.loc 1 127 25 view .LVU5330
GAS LISTING /tmp/ccH5HMHD.s 			page 409


 15344              	.LBB672:
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15345              		.loc 1 130 4 view .LVU5331
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15346              		.loc 1 131 4 view .LVU5332
 15347              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15348              		.loc 1 130 23 is_stmt 0 view .LVU5333
 15349 5381 4D89D5   		mov	r13, r10	# index_word, _411
 15350              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15351              		.loc 1 131 15 view .LVU5334
 15352 5384 4D89D3   		mov	r11, r10	# index_bit, _411
 15353              	.LVL932:
 15354              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15355              		.loc 1 130 23 view .LVU5335
 15356 5387 49C1ED06 		shr	r13, 6	# index_word,
 15357              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15358              		.loc 1 131 15 view .LVU5336
 15359 538b 4183E33F 		and	r11d, 63	# index_bit,
 15360              	.LVL933:
 132:sieve_extend.c ****    index += distance;
 15361              		.loc 1 132 4 is_stmt 1 view .LVU5337
 15362              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15363              		.loc 1 132 89 is_stmt 0 view .LVU5338
 15364 538f 4E8B04EB 		mov	r8, QWORD PTR [rbx+r13*8]	# *_582, *_582
 15365 5393 C4C2A3F7 		shrx	rdx, r8, r11	# tmp769, *_582, index_bit
 15365      D0
 15366              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15367              		.loc 1 132 66 view .LVU5339
 15368 5398 48F7D2   		not	rdx	# tmp771
 15369              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15370              		.loc 1 132 76 view .LVU5340
 15371 539b 4A8D34ED 		lea	rsi, 0[0+r13*8]	# _581,
 15371      00000000 
 15372              	.LVL934:
 15373              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15374              		.loc 1 132 25 view .LVU5341
 15375 53a3 F34C0FBC 		tzcnt	r9, rdx	# distance, tmp771
 15375      CA
 15376              	.LVL935:
 133:sieve_extend.c ****    distance += index_bit;
 15377              		.loc 1 133 4 is_stmt 1 view .LVU5342
 15378              	# sieve_extend.c:133:    index += distance;
 133:sieve_extend.c ****    distance += index_bit;
 15379              		.loc 1 133 10 is_stmt 0 view .LVU5343
 15380 53a8 4B8D0C0A 		lea	rcx, [r10+r9]	# index,
 15381              	.LVL936:
 134:sieve_extend.c **** 
 15382              		.loc 1 134 4 is_stmt 1 view .LVU5344
 136:sieve_extend.c ****        index_word++;
GAS LISTING /tmp/ccH5HMHD.s 			page 410


 15383              		.loc 1 136 4 view .LVU5345
 136:sieve_extend.c ****        index_word++;
 15384              		.loc 1 136 10 view .LVU5346
 15385              	# sieve_extend.c:134:    distance += index_bit;
 134:sieve_extend.c **** 
 15386              		.loc 1 134 13 is_stmt 0 view .LVU5347
 15387 53ac 4D01D9   		add	r9, r11	# distance, index_bit
 15388              	.LVL937:
 15389              	# sieve_extend.c:136:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 136:sieve_extend.c ****        index_word++;
 15390              		.loc 1 136 10 view .LVU5348
 15391 53af 4983F940 		cmp	r9, 64	# distance,
 15392 53b3 7433     		je	.L1495	#,
 15393              	.LVL938:
 15394              	.L1336:
 142:sieve_extend.c **** }
 15395              		.loc 1 142 4 is_stmt 1 view .LVU5349
 142:sieve_extend.c **** }
 15396              		.loc 1 142 4 is_stmt 0 view .LVU5350
 15397              	.LBE672:
 15398              	.LBE671:
 915:sieve_extend.c ****     }
 15399              		.loc 1 915 9 is_stmt 1 view .LVU5351
 15400              	# sieve_extend.c:915:         start = prime * prime * 2 + prime * 2;
 915:sieve_extend.c ****     }
 15401              		.loc 1 915 35 is_stmt 0 view .LVU5352
 15402 53b5 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15403              	# sieve_extend.c:915:         start = prime * prime * 2 + prime * 2;
 915:sieve_extend.c ****     }
 15404              		.loc 1 915 15 view .LVU5353
 15405 53b9 4C89D6   		mov	rsi, r10	# tmp797, _411
 15406 53bc 480FAFF1 		imul	rsi, rcx	# tmp797, index
 15407              	.LVL939:
 915:sieve_extend.c ****     }
 15408              		.loc 1 915 15 view .LVU5354
 15409 53c0 4801F6   		add	rsi, rsi	# index
 15410              	.LVL940:
 909:sieve_extend.c ****         step  = prime * 2 + 1;
 15411              		.loc 1 909 11 is_stmt 1 view .LVU5355
 15412 53c3 4939F4   		cmp	r12, rsi	# block_stop, index
 15413 53c6 0F83B4FD 		jnb	.L953	#,
 15413      FFFF
 909:sieve_extend.c ****         step  = prime * 2 + 1;
 15414              		.loc 1 909 11 is_stmt 0 view .LVU5356
 15415 53cc E903F7FF 		jmp	.L1472	#
 15415      FF
 15416              	.LVL941:
 15417              		.p2align 4,,7
 15418 53d1 0F1F8000 		.p2align 3
 15418      000000
 15419              	.L1494:
 15420              	.LBB674:
 15421              	.LBB670:
 15422              	.LBB669:
 15423              	.LBB668:
 15424              	.LBB666:
 200:sieve_extend.c ****    }
GAS LISTING /tmp/ccH5HMHD.s 			page 411


 15425              		.loc 1 200 7 is_stmt 1 view .LVU5357
 15426              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15427              		.loc 1 200 27 is_stmt 0 view .LVU5358
 15428 53d8 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp789, %sfp
 15428      08
 15429              	.LVL942:
 15430              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15431              		.loc 1 200 18 view .LVU5359
 15432 53dd 48094D00 		or	QWORD PTR 0[rbp], rcx	# *index_ptr_902, tmp789
 15433 53e1 EB92     		jmp	.L967	#
 15434              	.LVL943:
 15435              		.p2align 4,,7
 15436 53e3 0F1F4400 		.p2align 3
 15436      00
 15437              	.L1495:
 200:sieve_extend.c ****    }
 15438              		.loc 1 200 18 view .LVU5360
 15439              	.LBE666:
 15440              	.LBE668:
 15441              	.LBE669:
 15442              	.LBE670:
 15443              	.LBE674:
 15444              	.LBB675:
 15445              	.LBB673:
 137:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15446              		.loc 1 137 8 is_stmt 1 view .LVU5361
 138:sieve_extend.c ****        index += distance;
 15447              		.loc 1 138 8 view .LVU5362
 15448              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 15449              		.loc 1 138 48 is_stmt 0 view .LVU5363
 15450 53e8 4C8B5433 		mov	r10, QWORD PTR 8[rbx+rsi]	# *_594, *_594
 15450      08
 15451 53ed 49F7D2   		not	r10	# tmp790
 15452              	.LVL944:
 139:sieve_extend.c ****    }
 15453              		.loc 1 139 8 is_stmt 1 view .LVU5364
 15454              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 15455              		.loc 1 138 17 is_stmt 0 view .LVU5365
 15456 53f0 F34D0FBC 		tzcnt	r14, r10	# distance, tmp790
 15456      F2
 15457              	.LVL945:
 15458              	# sieve_extend.c:139:        index += distance;
 139:sieve_extend.c ****    }
 15459              		.loc 1 139 14 view .LVU5366
 15460 53f5 4C01F1   		add	rcx, r14	# index, distance
 15461              	.LVL946:
 136:sieve_extend.c ****        index_word++;
 15462              		.loc 1 136 10 is_stmt 1 view .LVU5367
 142:sieve_extend.c **** }
 15463              		.loc 1 142 4 view .LVU5368
 142:sieve_extend.c **** }
 15464              		.loc 1 142 4 is_stmt 0 view .LVU5369
 15465              	.LBE673:
GAS LISTING /tmp/ccH5HMHD.s 			page 412


 15466              	.LBE675:
 915:sieve_extend.c ****     }
 15467              		.loc 1 915 9 is_stmt 1 view .LVU5370
 15468 53f8 EBBB     		jmp	.L1336	#
 15469              	.LVL947:
 15470 53fa 660F1F44 		.p2align 4,,7
 15470      0000
 15471              		.p2align 3
 15472              	.L958:
 918:sieve_extend.c ****         step  = prime * 2 + 1;
 15473              		.loc 1 918 11 view .LVU5371
 15474 5400 4939F4   		cmp	r12, rsi	# block_stop, index
 15475              	.LBB676:
 15476              	.LBB677:
 15477              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15478              		.loc 1 343 39 is_stmt 0 view .LVU5372
 15479 5403 BD010000 		mov	ebp, 1	# tmp827,
 15479      00
 15480              	.LBE677:
 15481              	.LBE676:
 15482              	# sieve_extend.c:918:     while (start <= block_stop) {
 918:sieve_extend.c ****         step  = prime * 2 + 1;
 15483              		.loc 1 918 11 view .LVU5373
 15484 5408 0F82C6F6 		jb	.L1472	#,
 15484      FFFF
 15485              	.LVL948:
 15486              	.L962:
 919:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15487              		.loc 1 919 9 is_stmt 1 view .LVU5374
 15488              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15489              		.loc 1 920 12 is_stmt 0 view .LVU5375
 15490 540e 4D39FA   		cmp	r10, r15	# _411, block_start
 15491              	# sieve_extend.c:919:         step  = prime * 2 + 1;
 919:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15492              		.loc 1 919 15 view .LVU5376
 15493 5411 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15493      01
 15494              	.LVL949:
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15495              		.loc 1 920 9 is_stmt 1 view .LVU5377
 15496              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15497              		.loc 1 920 12 is_stmt 0 view .LVU5378
 15498 5416 0F874C01 		ja	.L971	#,
 15498      0000
 15499 541c 0F1F4000 		.p2align 4
 15500              		.p2align 3
 15501              	.L1497:
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15502              		.loc 1 920 47 is_stmt 1 view .LVU5379
 15503              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15504              		.loc 1 920 67 is_stmt 0 view .LVU5380
 15505 5420 4A8D0439 		lea	rax, [rcx+r15]	# _415,
 15506              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccH5HMHD.s 			page 413


 920:sieve_extend.c ****         if likely(start <= block_stop)
 15507              		.loc 1 920 108 view .LVU5381
 15508 5424 31D2     		xor	edx, edx	# tmp801
 15509              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15510              		.loc 1 920 75 view .LVU5382
 15511 5426 488D3408 		lea	rsi, [rax+rcx]	# tmp799,
 15512              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15513              		.loc 1 920 108 view .LVU5383
 15514 542a 48F7F7   		div	rdi	# step
 15515              	.LVL950:
 15516              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15517              		.loc 1 920 53 view .LVU5384
 15518 542d 4829D6   		sub	rsi, rdx	# index, tmp801
 15519              	.LVL951:
 921:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15520              		.loc 1 921 9 is_stmt 1 view .LVU5385
 15521              	# sieve_extend.c:921:         if likely(start <= block_stop)
 921:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15522              		.loc 1 921 12 is_stmt 0 view .LVU5386
 15523 5430 4939F4   		cmp	r12, rsi	# block_stop, index
 15524 5433 0F82D700 		jb	.L976	#,
 15524      0000
 15525              	.LVL952:
 15526              	.L975:
 15527              	.LBB680:
 15528              	.LBB678:
 343:sieve_extend.c ****     }
 15529              		.loc 1 343 9 is_stmt 1 view .LVU5387
 15530              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15531              		.loc 1 343 36 is_stmt 0 view .LVU5388
 15532 5439 4889F1   		mov	rcx, rsi	# tmp810, index
 15533              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15534              		.loc 1 343 39 view .LVU5389
 15535 543c C462C9F7 		shlx	r11, rbp, rsi	# tmp813, tmp827, index
 15535      DD
 15536              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15537              		.loc 1 343 36 view .LVU5390
 15538 5441 48C1E906 		shr	rcx, 6	# tmp810,
 15539              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15540              		.loc 1 342 68 view .LVU5391
 15541 5445 4801FE   		add	rsi, rdi	# index, step
 15542              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15543              		.loc 1 343 36 view .LVU5392
 15544 5448 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp813
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15545              		.loc 1 342 62 is_stmt 1 view .LVU5393
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15546              		.loc 1 342 41 view .LVU5394
 15547              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
GAS LISTING /tmp/ccH5HMHD.s 			page 414


 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15548              		.loc 1 342 5 is_stmt 0 view .LVU5395
 15549 544c 4939F4   		cmp	r12, rsi	# block_stop, index
 15550 544f 0F82BB00 		jb	.L976	#,
 15550      0000
 343:sieve_extend.c ****     }
 15551              		.loc 1 343 9 is_stmt 1 view .LVU5396
 15552              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15553              		.loc 1 343 36 is_stmt 0 view .LVU5397
 15554 5455 4989F5   		mov	r13, rsi	# tmp926, index
 15555              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15556              		.loc 1 343 39 view .LVU5398
 15557 5458 C462C9F7 		shlx	r8, rbp, rsi	# tmp929, tmp827, index
 15557      C5
 15558              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15559              		.loc 1 343 36 view .LVU5399
 15560 545d 49C1ED06 		shr	r13, 6	# tmp926,
 15561              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15562              		.loc 1 342 68 view .LVU5400
 15563 5461 4801FE   		add	rsi, rdi	# index, step
 15564              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15565              		.loc 1 343 36 view .LVU5401
 15566 5464 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp929
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15567              		.loc 1 342 62 is_stmt 1 view .LVU5402
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15568              		.loc 1 342 41 view .LVU5403
 15569              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15570              		.loc 1 342 5 is_stmt 0 view .LVU5404
 15571 5468 4939F4   		cmp	r12, rsi	# block_stop, index
 15572 546b 0F829F00 		jb	.L976	#,
 15572      0000
 343:sieve_extend.c ****     }
 15573              		.loc 1 343 9 is_stmt 1 view .LVU5405
 15574              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15575              		.loc 1 343 36 is_stmt 0 view .LVU5406
 15576 5471 4989F1   		mov	r9, rsi	# tmp931, index
 15577              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15578              		.loc 1 343 39 view .LVU5407
 15579 5474 C462C9F7 		shlx	r14, rbp, rsi	# tmp934, tmp827, index
 15579      F5
 15580              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15581              		.loc 1 343 36 view .LVU5408
 15582 5479 49C1E906 		shr	r9, 6	# tmp931,
 15583              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15584              		.loc 1 342 68 view .LVU5409
 15585 547d 4801FE   		add	rsi, rdi	# index, step
GAS LISTING /tmp/ccH5HMHD.s 			page 415


 15586              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15587              		.loc 1 343 36 view .LVU5410
 15588 5480 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp934
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15589              		.loc 1 342 62 is_stmt 1 view .LVU5411
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15590              		.loc 1 342 41 view .LVU5412
 15591              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15592              		.loc 1 342 5 is_stmt 0 view .LVU5413
 15593 5484 4939F4   		cmp	r12, rsi	# block_stop, index
 15594 5487 0F828300 		jb	.L976	#,
 15594      0000
 343:sieve_extend.c ****     }
 15595              		.loc 1 343 9 is_stmt 1 view .LVU5414
 15596              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15597              		.loc 1 343 36 is_stmt 0 view .LVU5415
 15598 548d 4889F0   		mov	rax, rsi	# tmp936, index
 15599              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15600              		.loc 1 343 39 view .LVU5416
 15601 5490 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp939, tmp827, index
 15601      D5
 15602              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15603              		.loc 1 343 36 view .LVU5417
 15604 5495 48C1E806 		shr	rax, 6	# tmp936,
 15605              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15606              		.loc 1 342 68 view .LVU5418
 15607 5499 4801FE   		add	rsi, rdi	# index, step
 15608              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15609              		.loc 1 343 36 view .LVU5419
 15610 549c 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp939
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15611              		.loc 1 342 62 is_stmt 1 view .LVU5420
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15612              		.loc 1 342 41 view .LVU5421
 15613              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15614              		.loc 1 342 5 is_stmt 0 view .LVU5422
 15615 54a0 4939F4   		cmp	r12, rsi	# block_stop, index
 15616 54a3 726B     		jb	.L976	#,
 343:sieve_extend.c ****     }
 15617              		.loc 1 343 9 is_stmt 1 view .LVU5423
 15618              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15619              		.loc 1 343 36 is_stmt 0 view .LVU5424
 15620 54a5 4889F1   		mov	rcx, rsi	# tmp941, index
 15621              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15622              		.loc 1 343 39 view .LVU5425
 15623 54a8 C462C9F7 		shlx	r11, rbp, rsi	# tmp944, tmp827, index
 15623      DD
GAS LISTING /tmp/ccH5HMHD.s 			page 416


 15624              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15625              		.loc 1 343 36 view .LVU5426
 15626 54ad 48C1E906 		shr	rcx, 6	# tmp941,
 15627              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15628              		.loc 1 342 68 view .LVU5427
 15629 54b1 4801FE   		add	rsi, rdi	# index, step
 15630              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15631              		.loc 1 343 36 view .LVU5428
 15632 54b4 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp944
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15633              		.loc 1 342 62 is_stmt 1 view .LVU5429
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15634              		.loc 1 342 41 view .LVU5430
 15635              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15636              		.loc 1 342 5 is_stmt 0 view .LVU5431
 15637 54b8 4939F4   		cmp	r12, rsi	# block_stop, index
 15638 54bb 7253     		jb	.L976	#,
 343:sieve_extend.c ****     }
 15639              		.loc 1 343 9 is_stmt 1 view .LVU5432
 15640              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15641              		.loc 1 343 36 is_stmt 0 view .LVU5433
 15642 54bd 4989F5   		mov	r13, rsi	# tmp946, index
 15643              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15644              		.loc 1 343 39 view .LVU5434
 15645 54c0 C462C9F7 		shlx	r8, rbp, rsi	# tmp949, tmp827, index
 15645      C5
 15646              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15647              		.loc 1 343 36 view .LVU5435
 15648 54c5 49C1ED06 		shr	r13, 6	# tmp946,
 15649              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15650              		.loc 1 342 68 view .LVU5436
 15651 54c9 4801FE   		add	rsi, rdi	# index, step
 15652              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15653              		.loc 1 343 36 view .LVU5437
 15654 54cc 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp949
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15655              		.loc 1 342 62 is_stmt 1 view .LVU5438
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15656              		.loc 1 342 41 view .LVU5439
 15657              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15658              		.loc 1 342 5 is_stmt 0 view .LVU5440
 15659 54d0 4939F4   		cmp	r12, rsi	# block_stop, index
 15660 54d3 723B     		jb	.L976	#,
 343:sieve_extend.c ****     }
 15661              		.loc 1 343 9 is_stmt 1 view .LVU5441
 15662              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
GAS LISTING /tmp/ccH5HMHD.s 			page 417


 15663              		.loc 1 343 36 is_stmt 0 view .LVU5442
 15664 54d5 4989F1   		mov	r9, rsi	# tmp951, index
 15665              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15666              		.loc 1 343 39 view .LVU5443
 15667 54d8 C462C9F7 		shlx	r14, rbp, rsi	# tmp954, tmp827, index
 15667      F5
 15668              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15669              		.loc 1 343 36 view .LVU5444
 15670 54dd 49C1E906 		shr	r9, 6	# tmp951,
 15671              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15672              		.loc 1 342 68 view .LVU5445
 15673 54e1 4801FE   		add	rsi, rdi	# index, step
 15674              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15675              		.loc 1 343 36 view .LVU5446
 15676 54e4 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp954
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15677              		.loc 1 342 62 is_stmt 1 view .LVU5447
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15678              		.loc 1 342 41 view .LVU5448
 15679              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15680              		.loc 1 342 5 is_stmt 0 view .LVU5449
 15681 54e8 4939F4   		cmp	r12, rsi	# block_stop, index
 15682 54eb 7223     		jb	.L976	#,
 343:sieve_extend.c ****     }
 15683              		.loc 1 343 9 is_stmt 1 view .LVU5450
 15684              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15685              		.loc 1 343 36 is_stmt 0 view .LVU5451
 15686 54ed 4889F0   		mov	rax, rsi	# tmp956, index
 15687              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15688              		.loc 1 343 39 view .LVU5452
 15689 54f0 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp959, tmp827, index
 15689      D5
 15690              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15691              		.loc 1 343 36 view .LVU5453
 15692 54f5 48C1E806 		shr	rax, 6	# tmp956,
 15693              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15694              		.loc 1 342 68 view .LVU5454
 15695 54f9 4801FE   		add	rsi, rdi	# index, step
 15696              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15697              		.loc 1 343 36 view .LVU5455
 15698 54fc 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp959
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15699              		.loc 1 342 62 is_stmt 1 view .LVU5456
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15700              		.loc 1 342 41 view .LVU5457
 15701              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccH5HMHD.s 			page 418


 15702              		.loc 1 342 5 is_stmt 0 view .LVU5458
 15703 5500 4939F4   		cmp	r12, rsi	# block_stop, index
 15704 5503 0F8330FF 		jnb	.L975	#,
 15704      FFFF
 15705 5509 0F1F8000 		.p2align 4
 15705      000000
 15706              		.p2align 3
 15707              	.L976:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15708              		.loc 1 342 5 view .LVU5459
 15709              	.LBE678:
 15710              	.LBE680:
 923:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15711              		.loc 1 923 9 is_stmt 1 view .LVU5460
 15712              	.LVL953:
 15713              	.LBB681:
 15714              	.LBI681:
 127:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15715              		.loc 1 127 25 view .LVU5461
 15716              	.LBB682:
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15717              		.loc 1 130 4 view .LVU5462
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15718              		.loc 1 131 4 view .LVU5463
 15719              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15720              		.loc 1 130 23 is_stmt 0 view .LVU5464
 15721 5510 4C89D1   		mov	rcx, r10	# index_word, _411
 15722              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15723              		.loc 1 131 15 view .LVU5465
 15724 5513 4C89D7   		mov	rdi, r10	# index_bit, _411
 15725              	.LVL954:
 15726              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15727              		.loc 1 130 23 view .LVU5466
 15728 5516 48C1E906 		shr	rcx, 6	# index_word,
 15729              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15730              		.loc 1 131 15 view .LVU5467
 15731 551a 83E73F   		and	edi, 63	# index_bit,
 15732              	.LVL955:
 132:sieve_extend.c ****    index += distance;
 15733              		.loc 1 132 4 is_stmt 1 view .LVU5468
 15734              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15735              		.loc 1 132 89 is_stmt 0 view .LVU5469
 15736 551d 4C8B1CCB 		mov	r11, QWORD PTR [rbx+rcx*8]	# *_665, *_665
 15737 5521 C442C3F7 		shrx	r13, r11, rdi	# tmp805, *_665, index_bit
 15737      EB
 15738              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15739              		.loc 1 132 66 view .LVU5470
 15740 5526 49F7D5   		not	r13	# tmp807
 15741              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15742              		.loc 1 132 76 view .LVU5471
GAS LISTING /tmp/ccH5HMHD.s 			page 419


 15743 5529 488D34CD 		lea	rsi, 0[0+rcx*8]	# _664,
 15743      00000000 
 15744              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15745              		.loc 1 132 25 view .LVU5472
 15746 5531 F34D0FBC 		tzcnt	r8, r13	# distance, tmp807
 15746      C5
 15747              	.LVL956:
 133:sieve_extend.c ****    distance += index_bit;
 15748              		.loc 1 133 4 is_stmt 1 view .LVU5473
 15749              	# sieve_extend.c:133:    index += distance;
 133:sieve_extend.c ****    distance += index_bit;
 15750              		.loc 1 133 10 is_stmt 0 view .LVU5474
 15751 5536 4B8D0C02 		lea	rcx, [r10+r8]	# index,
 15752              	.LVL957:
 134:sieve_extend.c **** 
 15753              		.loc 1 134 4 is_stmt 1 view .LVU5475
 136:sieve_extend.c ****        index_word++;
 15754              		.loc 1 136 4 view .LVU5476
 136:sieve_extend.c ****        index_word++;
 15755              		.loc 1 136 10 view .LVU5477
 15756              	# sieve_extend.c:134:    distance += index_bit;
 134:sieve_extend.c **** 
 15757              		.loc 1 134 13 is_stmt 0 view .LVU5478
 15758 553a 4901F8   		add	r8, rdi	# distance, index_bit
 15759              	.LVL958:
 15760              	# sieve_extend.c:136:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 136:sieve_extend.c ****        index_word++;
 15761              		.loc 1 136 10 view .LVU5479
 15762 553d 4983F840 		cmp	r8, 64	# distance,
 15763 5541 7435     		je	.L1496	#,
 142:sieve_extend.c **** }
 15764              		.loc 1 142 4 is_stmt 1 view .LVU5480
 15765              	.LVL959:
 142:sieve_extend.c **** }
 15766              		.loc 1 142 4 is_stmt 0 view .LVU5481
 15767              	.LBE682:
 15768              	.LBE681:
 924:sieve_extend.c ****     }
 15769              		.loc 1 924 9 is_stmt 1 view .LVU5482
 15770              	# sieve_extend.c:924:         start = prime * prime * 2 + prime * 2;
 924:sieve_extend.c ****     }
 15771              		.loc 1 924 35 is_stmt 0 view .LVU5483
 15772 5543 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15773              	# sieve_extend.c:924:         start = prime * prime * 2 + prime * 2;
 924:sieve_extend.c ****     }
 15774              		.loc 1 924 15 view .LVU5484
 15775 5547 4C89D6   		mov	rsi, r10	# tmp822, _411
 15776 554a 480FAFF1 		imul	rsi, rcx	# tmp822, index
 15777 554e 4801F6   		add	rsi, rsi	# index
 15778              	.LVL960:
 918:sieve_extend.c ****         step  = prime * 2 + 1;
 15779              		.loc 1 918 11 is_stmt 1 view .LVU5485
 15780 5551 4939F4   		cmp	r12, rsi	# block_stop, index
 15781 5554 0F827AF5 		jb	.L1472	#,
 15781      FFFF
 919:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
GAS LISTING /tmp/ccH5HMHD.s 			page 420


 15782              		.loc 1 919 9 view .LVU5486
 15783              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15784              		.loc 1 920 12 is_stmt 0 view .LVU5487
 15785 555a 4D39FA   		cmp	r10, r15	# _411, block_start
 15786              	# sieve_extend.c:919:         step  = prime * 2 + 1;
 919:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15787              		.loc 1 919 15 view .LVU5488
 15788 555d 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15788      01
 15789              	.LVL961:
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15790              		.loc 1 920 9 is_stmt 1 view .LVU5489
 15791              	# sieve_extend.c:920:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 920:sieve_extend.c ****         if likely(start <= block_stop)
 15792              		.loc 1 920 12 is_stmt 0 view .LVU5490
 15793 5562 0F86B8FE 		jbe	.L1497	#,
 15793      FFFF
 15794              	.LVL962:
 15795              	.L971:
 15796              	.LBB684:
 15797              	.LBB679:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15798              		.loc 1 342 41 is_stmt 1 view .LVU5491
 15799              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15800              		.loc 1 342 5 is_stmt 0 view .LVU5492
 15801 5568 4939F4   		cmp	r12, rsi	# block_stop, index
 15802 556b 72A3     		jb	.L976	#,
 15803 556d E9C7FEFF 		jmp	.L975	#
 15803      FF
 15804              	.LVL963:
 15805              		.p2align 4,,7
 15806 5572 660F1F44 		.p2align 3
 15806      0000
 15807              	.L1496:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15808              		.loc 1 342 5 view .LVU5493
 15809              	.LBE679:
 15810              	.LBE684:
 15811              	.LBB685:
 15812              	.LBB683:
 137:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15813              		.loc 1 137 8 is_stmt 1 view .LVU5494
 138:sieve_extend.c ****        index += distance;
 15814              		.loc 1 138 8 view .LVU5495
 15815              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 15816              		.loc 1 138 48 is_stmt 0 view .LVU5496
 15817 5578 4C8B4C33 		mov	r9, QWORD PTR 8[rbx+rsi]	# *_677, *_677
 15817      08
 15818 557d 49F7D1   		not	r9	# tmp815
 15819              	.LVL964:
 139:sieve_extend.c ****    }
 15820              		.loc 1 139 8 is_stmt 1 view .LVU5497
 15821              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
GAS LISTING /tmp/ccH5HMHD.s 			page 421


 15822              		.loc 1 138 17 is_stmt 0 view .LVU5498
 15823 5580 F34D0FBC 		tzcnt	r14, r9	# distance, tmp815
 15823      F1
 15824              	.LVL965:
 15825              	# sieve_extend.c:139:        index += distance;
 139:sieve_extend.c ****    }
 15826              		.loc 1 139 14 view .LVU5499
 15827 5585 4C01F1   		add	rcx, r14	# index, distance
 15828              	.LVL966:
 136:sieve_extend.c ****        index_word++;
 15829              		.loc 1 136 10 is_stmt 1 view .LVU5500
 142:sieve_extend.c **** }
 15830              		.loc 1 142 4 view .LVU5501
 142:sieve_extend.c **** }
 15831              		.loc 1 142 4 is_stmt 0 view .LVU5502
 15832              	.LBE683:
 15833              	.LBE685:
 924:sieve_extend.c ****     }
 15834              		.loc 1 924 9 is_stmt 1 view .LVU5503
 15835              	# sieve_extend.c:924:         start = prime * prime * 2 + prime * 2;
 924:sieve_extend.c ****     }
 15836              		.loc 1 924 35 is_stmt 0 view .LVU5504
 15837 5588 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15838              	# sieve_extend.c:924:         start = prime * prime * 2 + prime * 2;
 924:sieve_extend.c ****     }
 15839              		.loc 1 924 15 view .LVU5505
 15840 558c 4C89D0   		mov	rax, r10	# tmp820, _411
 15841 558f 480FAFC1 		imul	rax, rcx	# tmp820, index
 15842 5593 488D3400 		lea	rsi, [rax+rax]	# index,
 15843              	.LVL967:
 918:sieve_extend.c ****         step  = prime * 2 + 1;
 15844              		.loc 1 918 11 is_stmt 1 view .LVU5506
 15845 5597 4939F4   		cmp	r12, rsi	# block_stop, index
 15846 559a 0F836EFE 		jnb	.L962	#,
 15846      FFFF
 15847 55a0 E92FF5FF 		jmp	.L1472	#
 15847      FF
 15848              	.LVL968:
 15849              		.p2align 4,,7
 15850 55a5 0F1F00   		.p2align 3
 15851              	.L981:
 15852              	.LBB686:
 15853              	.LBB619:
 15854              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15855              		.loc 1 237 21 is_stmt 0 view .LVU5507
 15856 55a8 B9010000 		mov	ecx, 1	# pattern,
 15856      00
 15857 55ad E97EF2FF 		jmp	.L923	#
 15857      FF
 15858              	.LVL969:
 15859              		.p2align 4,,7
 15860 55b2 660F1F44 		.p2align 3
 15860      0000
 15861              	.L1486:
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15862              		.loc 1 237 21 view .LVU5508
GAS LISTING /tmp/ccH5HMHD.s 			page 422


 15863              	.LBE619:
 15864              	.LBE686:
 15865              	.LBE691:
 15866              	.LBE702:
 15867              	.LBE706:
 15868              	.LBB707:
 15869              	.LBB585:
 15870              	.LBB578:
 15871              	.LBB571:
 15872              	.LBB567:
 15873              	.LBB565:
 15874              	.LBB560:
 15875              	.LBB559:
 15876              	.LBB556:
 200:sieve_extend.c ****    }
 15877              		.loc 1 200 7 is_stmt 1 view .LVU5509
 15878              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15879              		.loc 1 200 27 is_stmt 0 view .LVU5510
 15880 55b8 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp624, %sfp
 15880      28
 15881              	.LVL970:
 15882              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15883              		.loc 1 200 18 view .LVU5511
 15884 55bd 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_920, tmp624
 15885 55c0 E924EEFF 		jmp	.L900	#
 15885      FF
 15886              	.LVL971:
 15887              	.L1482:
 200:sieve_extend.c ****    }
 15888              		.loc 1 200 18 view .LVU5512
 15889              	.LBE556:
 15890              	.LBE559:
 15891              	.LBE560:
 15892              	.LBE565:
 15893              	.LBE567:
 15894              	.LBE571:
 15895              	.LBB572:
 15896              	.LBB521:
 843:sieve_extend.c ****         return; // rapid exit for small sizes
 15897              		.loc 1 843 9 is_stmt 1 view .LVU5513
 15898 55c5 4C89C1   		mov	rcx, r8	#, _69
 15899 55c8 4C89F2   		mov	rdx, r14	#, patternsize_bits
 15900 55cb 4C89F6   		mov	rsi, r14	#, patternsize_bits
 15901 55ce 4C89FF   		mov	rdi, r15	#, _97
 15902 55d1 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 15902      28
 15903 55d6 E825AAFF 		call	extendSieve_smallSize	#
 15903      FF
 15904              	.LVL972:
 844:sieve_extend.c ****     }
 15905              		.loc 1 844 9 view .LVU5514
 15906 55db 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 15906      28
 15907 55e0 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 15907      18
GAS LISTING /tmp/ccH5HMHD.s 			page 423


 15908 55e5 E97FE4FF 		jmp	.L875	#
 15908      FF
 15909              	.LVL973:
 15910              	.L1487:
 844:sieve_extend.c ****     }
 15911              		.loc 1 844 9 is_stmt 0 view .LVU5515
 15912              	.LBE521:
 15913              	.LBE572:
 15914              	.LBE578:
 15915              	.LBE585:
 15916              	.LBE707:
 15917              	.LBB708:
 15918              	.LBB595:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15919              		.loc 1 851 37 is_stmt 1 view .LVU5516
 15920 55ea E8E1CEFF 		call	extendSieve_shiftleft	#
 15920      FF
 15921              	.LVL974:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15922              		.loc 1 851 37 is_stmt 0 view .LVU5517
 15923 55ef E957EEFF 		jmp	.L911	#
 15923      FF
 15924              	.LVL975:
 15925              	.L1477:
 851:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15926              		.loc 1 851 37 view .LVU5518
 15927 55f4 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 15927      30
 15928              	.LBE595:
 15929              	.LBE708:
 15930              	.LBB709:
 15931              	.LBB586:
 15932              	.LBB579:
 15933              	# sieve_extend.c:958:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 958:sieve_extend.c **** 
 15934              		.loc 1 958 12 view .LVU5519
 15935 55f9 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 15936 55fc 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 15936      10
 15937 5601 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 15937      28
 15938 5606 4D8B7D08 		mov	r15, QWORD PTR 8[r13]	# prephitmp_1432, sieve_92->bits
 15939              	.LVL976:
 958:sieve_extend.c **** 
 15940              		.loc 1 958 12 view .LVU5520
 15941 560a 4C897C24 		mov	QWORD PTR 8[rsp], r15	# %sfp, prephitmp_1432
 15941      08
 15942              	.LVL977:
 958:sieve_extend.c **** 
 15943              		.loc 1 958 12 view .LVU5521
 15944 560f E900EEFF 		jmp	.L874	#
 15944      FF
 15945              	.LVL978:
 15946              	.L980:
 15947              	.LBB573:
 15948              	.LBB536:
 15949              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
GAS LISTING /tmp/ccH5HMHD.s 			page 424


 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15950              		.loc 1 237 21 view .LVU5522
 15951 5614 B9010000 		mov	ecx, 1	# pattern,
 15951      00
 15952 5619 E9A2E6FF 		jmp	.L880	#
 15952      FF
 15953              	.LVL979:
 15954              	.L1475:
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15955              		.loc 1 237 21 view .LVU5523
 15956              	.LBE536:
 15957              	.LBE573:
 15958              	.LBE579:
 15959              	# sieve_extend.c:943:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 943:sieve_extend.c **** 
 15960              		.loc 1 943 18 view .LVU5524
 15961 561e 31D2     		xor	edx, edx	# block$pattern_size
 15962 5620 31F6     		xor	esi, esi	# block$pattern_start
 15963              	# sieve_extend.c:938:     register counter_t prime   = 0;
 938:sieve_extend.c ****     counter_t patternsize_bits = 1;
 15964              		.loc 1 938 24 view .LVU5525
 15965 5622 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 15965      28000000 
 15965      00
 15966 562b E9A7E8FF 		jmp	.L867	#
 15966      FF
 15967              	.LBE586:
 15968              	.LBE709:
 15969              		.cfi_endproc
 15970              	.LFE75:
 15972              		.p2align 4
 15974              	tune_benchmark:
 15975              	.LVL980:
 15976              	.LFB82:
1102:sieve_extend.c **** 
1103:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 15977              		.loc 1 1103 94 is_stmt 1 view -0
 15978              		.cfi_startproc
 15979              		.loc 1 1103 94 is_stmt 0 view .LVU5527
 15980 5630 4154     		push	r12	#
 15981              		.cfi_def_cfa_offset 16
 15982              		.cfi_offset 12, -16
 15983 5632 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 15984              	# sieve_extend.c:1109:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1104:sieve_extend.c ****     counter_t passes = 0;
1105:sieve_extend.c ****     double elapsed_time = 0;
1106:sieve_extend.c ****     struct timespec start_time,end_time;
1107:sieve_extend.c ****     struct sieve_state *sieve_instance;
1108:sieve_extend.c **** 
1109:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 15985              		.loc 1 1109 44 view .LVU5528
 15986 5635 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 15987              	.LVL981:
 15988              	# sieve_extend.c:1103: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1103:sieve_extend.c ****     counter_t passes = 0;
 15989              		.loc 1 1103 94 view .LVU5529
 15990 5639 55       		push	rbp	#
GAS LISTING /tmp/ccH5HMHD.s 			page 425


 15991              		.cfi_def_cfa_offset 24
 15992              		.cfi_offset 6, -24
 15993              	# sieve_extend.c:1109:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 15994              		.loc 1 1109 44 view .LVU5530
 15995 563a 48C1E705 		sal	rdi, 5	# tmp115,
 15996              	# sieve_extend.c:1104:     counter_t passes = 0;
1104:sieve_extend.c ****     counter_t passes = 0;
 15997              		.loc 1 1104 15 view .LVU5531
 15998 563e 4531E4   		xor	r12d, r12d	# passes
 15999              	# sieve_extend.c:1103: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1103:sieve_extend.c ****     counter_t passes = 0;
 16000              		.loc 1 1103 94 view .LVU5532
 16001 5641 53       		push	rbx	#
 16002              		.cfi_def_cfa_offset 32
 16003              		.cfi_offset 3, -32
 16004              	# sieve_extend.c:1109:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16005              		.loc 1 1109 44 view .LVU5533
 16006 5642 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 16007              	# sieve_extend.c:1113:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1110:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1111:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1112:sieve_extend.c **** 
1113:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16008              		.loc 1 1113 5 view .LVU5534
 16009 5646 BF010000 		mov	edi, 1	#,
 16009      00
 16010              	# sieve_extend.c:1103: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1103:sieve_extend.c ****     counter_t passes = 0;
 16011              		.loc 1 1103 94 view .LVU5535
 16012 564b 488D6424 		lea	rsp, -48[rsp]	#,
 16012      D0
 16013              		.cfi_def_cfa_offset 80
 16014              	# sieve_extend.c:1110:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1110:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16015              		.loc 1 1110 30 view .LVU5536
 16016 5650 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 16017              	# sieve_extend.c:1113:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16018              		.loc 1 1113 5 view .LVU5537
 16019 5654 4889E6   		mov	rsi, rsp	# tmp119,
 16020              	.LVL982:
 16021              	# sieve_extend.c:1111:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1111:sieve_extend.c **** 
 16022              		.loc 1 1111 30 view .LVU5538
 16023 5657 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 16024              	# sieve_extend.c:1103: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1103:sieve_extend.c ****     counter_t passes = 0;
 16025              		.loc 1 1103 94 view .LVU5539
 16026 565b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 16026      25280000 
 16026      00
 16027 5664 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7258, tmp160
 16027      28
 16028 5669 31C0     		xor	eax, eax	# tmp160
1104:sieve_extend.c ****     double elapsed_time = 0;
 16029              		.loc 1 1104 5 is_stmt 1 view .LVU5540
 16030              	.LVL983:
1105:sieve_extend.c ****     struct timespec start_time,end_time;
GAS LISTING /tmp/ccH5HMHD.s 			page 426


 16031              		.loc 1 1105 5 view .LVU5541
1106:sieve_extend.c ****     struct sieve_state *sieve_instance;
 16032              		.loc 1 1106 5 view .LVU5542
1107:sieve_extend.c **** 
 16033              		.loc 1 1107 5 view .LVU5543
1109:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16034              		.loc 1 1109 5 view .LVU5544
 16035              	# sieve_extend.c:1109:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1109:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16036              		.loc 1 1109 29 is_stmt 0 view .LVU5545
 16037 566b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 16038              	# sieve_extend.c:1110:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1110:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16039              		.loc 1 1110 30 view .LVU5546
 16040 566f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 16040      000000
 16041              	# sieve_extend.c:1111:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1111:sieve_extend.c **** 
 16042              		.loc 1 1111 30 view .LVU5547
 16043 5676 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 16043      000000
 16044              	# sieve_extend.c:1109:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1109:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16045              		.loc 1 1109 29 view .LVU5548
 16046 567d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 16046      000000
1110:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16047              		.loc 1 1110 5 is_stmt 1 view .LVU5549
1111:sieve_extend.c **** 
 16048              		.loc 1 1111 5 view .LVU5550
 16049              		.loc 1 1113 5 view .LVU5551
 16050 5684 E8000000 		call	clock_gettime@PLT	#
 16050      00
 16051              	.LVL984:
1114:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 16052              		.loc 1 1114 5 view .LVU5552
 16053              		.loc 1 1114 11 view .LVU5553
 16054 5689 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 16055 568d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16055      40
 16056 5692 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 16056      00000000 
 16057 569a 7676     		jbe	.L1499	#,
 16058 569c E99E0000 		jmp	.L1500	#
 16058      00
 16059              	.LVL985:
 16060              		.p2align 4,,7
 16061 56a1 0F1F8000 		.p2align 3
 16061      000000
 16062              	.L1503:
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16063              		.loc 1 1115 9 view .LVU5554
 16064              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 16065              		.loc 1 1115 26 is_stmt 0 view .LVU5555
 16066 56a8 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 16067              	# sieve_extend.c:1117:         passes++;
1116:sieve_extend.c ****         delete_sieve(sieve_instance);
GAS LISTING /tmp/ccH5HMHD.s 			page 427


1117:sieve_extend.c ****         passes++;
 16068              		.loc 1 1117 15 view .LVU5556
 16069 56ac 4983C401 		add	r12, 1	# passes,
 16070              	.LVL986:
 16071              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16072              		.loc 1 1115 26 view .LVU5557
 16073 56b0 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 16074 56b3 E8B8E2FF 		call	sieve	#
 16074      FF
 16075              	.LVL987:
 16076              	.LBB710:
 16077              	.LBB711:
 16078              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 16079              		.loc 1 116 5 view .LVU5558
 16080 56b8 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 16081              	.LBE711:
 16082              	.LBE710:
 16083              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16084              		.loc 1 1115 26 view .LVU5559
 16085 56bb 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 16086              	.LVL988:
1116:sieve_extend.c ****         delete_sieve(sieve_instance);
 16087              		.loc 1 1116 9 is_stmt 1 view .LVU5560
 16088              	.LBB713:
 16089              	.LBI710:
 115:sieve_extend.c ****     free(sieve->bitarray);
 16090              		.loc 1 115 13 view .LVU5561
 16091              	.LBB712:
 116:sieve_extend.c ****     free(sieve);
 16092              		.loc 1 116 5 view .LVU5562
 16093 56be E8000000 		call	free@PLT	#
 16093      00
 16094              	.LVL989:
 117:sieve_extend.c **** }
 16095              		.loc 1 117 5 view .LVU5563
 16096 56c3 4889EF   		mov	rdi, rbp	#, sieve_instance
 16097 56c6 E8000000 		call	free@PLT	#
 16097      00
 16098              	.LVL990:
 117:sieve_extend.c **** }
 16099              		.loc 1 117 5 is_stmt 0 view .LVU5564
 16100              	.LBE712:
 16101              	.LBE713:
 16102              		.loc 1 1117 9 is_stmt 1 view .LVU5565
1118:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16103              		.loc 1 1118 9 view .LVU5566
 16104 56cb 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 16104      10
 16105 56d0 BF010000 		mov	edi, 1	#,
 16105      00
 16106 56d5 E8000000 		call	clock_gettime@PLT	#
 16106      00
 16107              	.LVL991:
1119:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
GAS LISTING /tmp/ccH5HMHD.s 			page 428


 16108              		.loc 1 1119 9 view .LVU5567
 16109              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16110              		.loc 1 1119 58 is_stmt 0 view .LVU5568
 16111 56da C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 16111      442418
 16112              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16113              		.loc 1 1119 64 view .LVU5569
 16114 56e1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 16114      0C24
 16115              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16116              		.loc 1 1119 104 view .LVU5570
 16117 56e7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 16117      5C2408
 16118              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16119              		.loc 1 1119 40 view .LVU5571
 16120 56ee C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 16120      542410
 16121 56f5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 16121      05000000 
 16121      00
 16122 56fe C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 16122      1D000000 
 16122      00
 16123              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16124              		.loc 1 1119 22 view .LVU5572
 16125 5707 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 16126              	.LVL992:
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16127              		.loc 1 1114 11 is_stmt 1 view .LVU5573
 16128 570b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16128      40
 16129 5710 7706     		ja	.L1514	#,
 16130              	.LVL993:
 16131              	.L1499:
 16132              	# sieve_extend.c:1114:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16133              		.loc 1 1114 79 is_stmt 0 discriminator 1 view .LVU5574
 16134 5712 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 16135 5716 7790     		ja	.L1503	#,
 16136              	.L1514:
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16137              		.loc 1 1114 79 discriminator 1 view .LVU5575
 16138 5718 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 16138      F4
 16139 571d 4D85E4   		test	r12, r12	# passes
 16140 5720 7919     		jns	.L1505	#,
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16141              		.loc 1 1114 79 discriminator 1 view .LVU5576
 16142 5722 4C89E6   		mov	rsi, r12	# tmp135, passes
 16143 5725 4D89E1   		mov	r9, r12	# tmp136, passes
 16144 5728 48D1EE   		shr	rsi	# tmp135
 16145 572b 4183E101 		and	r9d, 1	# tmp136,
 16146 572f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 16147 5732 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 16147      EE
 16148 5737 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 16149              	.L1505:
GAS LISTING /tmp/ccH5HMHD.s 			page 429


1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16150              		.loc 1 1114 79 discriminator 1 view .LVU5577
 16151 573b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 16152              	.LVL994:
 16153              	.L1500:
1120:sieve_extend.c ****     }
1121:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 16154              		.loc 1 1121 5 is_stmt 1 view .LVU5578
 16155              	# sieve_extend.c:1121:     tuning_result[tuning_result_index].passes = passes;
 16156              		.loc 1 1121 47 is_stmt 0 view .LVU5579
 16157 573f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1122:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16158              		.loc 1 1122 5 is_stmt 1 view .LVU5580
 16159              	# sieve_extend.c:1122:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16160              		.loc 1 1122 53 is_stmt 0 view .LVU5581
 16161 5743 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 16161      50
1123:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16162              		.loc 1 1123 5 is_stmt 1 view .LVU5582
 16163              	# sieve_extend.c:1123:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16164              		.loc 1 1123 44 is_stmt 0 view .LVU5583
 16165 5748 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 16165      58
 16166              	# sieve_extend.c:1124: }
1124:sieve_extend.c **** }
 16167              		.loc 1 1124 1 view .LVU5584
 16168 574d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7258
 16168      28
 16169 5752 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 16169      25280000 
 16169      00
 16170 575b 750A     		jne	.L1515	#,
 16171 575d 488D6424 		lea	rsp, 48[rsp]	#,
 16171      30
 16172              		.cfi_remember_state
 16173              		.cfi_def_cfa_offset 32
 16174 5762 5B       		pop	rbx	#
 16175              		.cfi_def_cfa_offset 24
 16176 5763 5D       		pop	rbp	#
 16177              		.cfi_def_cfa_offset 16
 16178 5764 415C     		pop	r12	#
 16179              		.cfi_def_cfa_offset 8
 16180 5766 C3       		ret	
 16181              	.L1515:
 16182              		.cfi_restore_state
 16183 5767 E8000000 		call	__stack_chk_fail@PLT	#
 16183      00
 16184              	.LVL995:
 16185              		.cfi_endproc
 16186              	.LFE82:
 16188 576c 0F1F4000 		.p2align 4
 16189              		.globl	shiftvec
 16191              	shiftvec:
 16192              	.LVL996:
 16193              	.LFB66:
 563:sieve_extend.c ****     int i = 0;
 16194              		.loc 1 563 1 is_stmt 1 view -0
GAS LISTING /tmp/ccH5HMHD.s 			page 430


 16195              		.cfi_startproc
 563:sieve_extend.c ****     int i = 0;
 16196              		.loc 1 563 1 is_stmt 0 view .LVU5586
 16197 5770 F30F1EFA 		endbr64	
 564:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16198              		.loc 1 564 5 is_stmt 1 view .LVU5587
 16199              	.LVL997:
 566:sieve_extend.c ****     {
 16200              		.loc 1 566 5 view .LVU5588
 566:sieve_extend.c ****     {
 16201              		.loc 1 566 12 view .LVU5589
 16202              	# sieve_extend.c:566:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 566:sieve_extend.c ****     {
 16203              		.loc 1 566 5 is_stmt 0 view .LVU5590
 16204 5774 83FA04   		cmp	edx, 4	# size,
 16205 5777 0F8E9D03 		jle	.L1561	#,
 16205      0000
 16206 577d 41BB4000 		mov	r11d, 64	# tmp130,
 16206      0000
 16207 5783 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 16208 5787 4489D8   		mov	eax, r11d	# _4, tmp130
 16209 578a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 16210 578e 29C8     		sub	eax, ecx	# _4, shift
 16211              	.LBB714:
 16212              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16213              		.loc 1 569 25 view .LVU5591
 16214 5790 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114, off
 16214      1655
 16215              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16216              		.loc 1 569 34 view .LVU5592
 16217 5796 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.717_114, offset: 0B]
 16218 579a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 16218      C0
 16219 579f 41C1E802 		shr	r8d, 2	# _25,
 16220 57a3 41B90100 		mov	r9d, 1	# ivtmp.714,
 16220      0000
 16221              	.LBE714:
 16222              	.LBB715:
 16223              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16224              		.loc 1 571 34 view .LVU5593
 16225 57a9 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.704, vect__102.703, _4
 16226              	.LBE715:
 16227              	.LBB716:
 16228              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16229              		.loc 1 569 34 view .LVU5594
 16230 57ad C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.708, tmp269, shift
 16231 57b1 458D5001 		lea	r10d, 1[r8]	# tmp164,
 16232 57b5 4589C3   		mov	r11d, r8d	# tmp169, _25
 16233              	.LBE716:
 16234              	.LBB717:
 16235              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16236              		.loc 1 571 22 view .LVU5595
GAS LISTING /tmp/ccH5HMHD.s 			page 431


 16237 57b8 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.709, vect__57.704, vect__104.708
 16238 57bc 4183E307 		and	r11d, 7	# tmp169,
 16239              	.LVL998:
 571:sieve_extend.c ****     }
 16240              		.loc 1 571 22 view .LVU5596
 16241              	.LBE717:
 16242              	.LBB718:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16243              		.loc 1 568 25 is_stmt 1 view .LVU5597
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16244              		.loc 1 569 13 view .LVU5598
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16245              		.loc 1 568 32 view .LVU5599
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16246              		.loc 1 568 25 view .LVU5600
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16247              		.loc 1 569 13 view .LVU5601
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16248              		.loc 1 568 32 view .LVU5602
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16249              		.loc 1 568 25 view .LVU5603
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16250              		.loc 1 569 13 view .LVU5604
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16251              		.loc 1 568 32 view .LVU5605
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16252              		.loc 1 568 25 view .LVU5606
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16253              		.loc 1 569 13 view .LVU5607
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16254              		.loc 1 568 32 view .LVU5608
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16255              		.loc 1 568 25 view .LVU5609
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16256              		.loc 1 568 25 is_stmt 0 view .LVU5610
 16257              	.LBE718:
 16258              	.LBB719:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16259              		.loc 1 570 25 is_stmt 1 view .LVU5611
 571:sieve_extend.c ****     }
 16260              		.loc 1 571 13 view .LVU5612
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16261              		.loc 1 570 32 view .LVU5613
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16262              		.loc 1 570 25 view .LVU5614
 571:sieve_extend.c ****     }
 16263              		.loc 1 571 13 view .LVU5615
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16264              		.loc 1 570 32 view .LVU5616
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16265              		.loc 1 570 25 view .LVU5617
 571:sieve_extend.c ****     }
 16266              		.loc 1 571 13 view .LVU5618
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16267              		.loc 1 570 32 view .LVU5619
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16268              		.loc 1 570 25 view .LVU5620
GAS LISTING /tmp/ccH5HMHD.s 			page 432


 571:sieve_extend.c ****     }
 16269              		.loc 1 571 13 view .LVU5621
 16270 57c0 4183FA01 		cmp	r10d, 1	# tmp164,
 16271 57c4 B8200000 		mov	eax, 32	# ivtmp.717,
 16271      00
 16272              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16273              		.loc 1 571 22 is_stmt 0 view .LVU5622
 16274 57c9 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect__58
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16275              		.loc 1 570 32 is_stmt 1 view .LVU5623
 16276              	.LVL999:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16277              		.loc 1 570 25 view .LVU5624
 16278              	.LBE719:
 566:sieve_extend.c ****     {
 16279              		.loc 1 566 24 view .LVU5625
 566:sieve_extend.c ****     {
 16280              		.loc 1 566 12 view .LVU5626
 16281 57cd 0F866002 		jbe	.L1559	#,
 16281      0000
 16282 57d3 4585DB   		test	r11d, r11d	# tmp169
 16283 57d6 0F841E01 		je	.L1519	#,
 16283      0000
 16284 57dc 4183FB01 		cmp	r11d, 1	# tmp169,
 16285 57e0 0F84E500 		je	.L1546	#,
 16285      0000
 16286 57e6 4183FB02 		cmp	r11d, 2	# tmp169,
 16287 57ea 0F84B600 		je	.L1547	#,
 16287      0000
 16288 57f0 4183FB03 		cmp	r11d, 3	# tmp169,
 16289 57f4 0F848700 		je	.L1548	#,
 16289      0000
 16290 57fa 4183FB04 		cmp	r11d, 4	# tmp169,
 16291 57fe 745B     		je	.L1549	#,
 16292 5800 4183FB05 		cmp	r11d, 5	# tmp169,
 16293 5804 7430     		je	.L1550	#,
 16294 5806 4183FB06 		cmp	r11d, 6	# tmp169,
 16295 580a 0F85DC02 		jne	.L1562	#,
 16295      0000
 16296              	.L1551:
 16297              	.LVL1000:
 16298              	.LBB720:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16299              		.loc 1 568 25 view .LVU5627
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16300              		.loc 1 569 13 view .LVU5628
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16301              		.loc 1 568 32 view .LVU5629
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16302              		.loc 1 568 25 view .LVU5630
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16303              		.loc 1 569 13 view .LVU5631
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16304              		.loc 1 568 32 view .LVU5632
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16305              		.loc 1 568 25 view .LVU5633
GAS LISTING /tmp/ccH5HMHD.s 			page 433


 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16306              		.loc 1 569 13 view .LVU5634
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16307              		.loc 1 568 32 view .LVU5635
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16308              		.loc 1 568 25 view .LVU5636
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16309              		.loc 1 569 13 view .LVU5637
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16310              		.loc 1 568 32 view .LVU5638
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16311              		.loc 1 568 25 view .LVU5639
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16312              		.loc 1 568 25 is_stmt 0 view .LVU5640
 16313              	.LBE720:
 16314              	.LBB721:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16315              		.loc 1 570 25 is_stmt 1 view .LVU5641
 571:sieve_extend.c ****     }
 16316              		.loc 1 571 13 view .LVU5642
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16317              		.loc 1 570 32 view .LVU5643
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16318              		.loc 1 570 25 view .LVU5644
 571:sieve_extend.c ****     }
 16319              		.loc 1 571 13 view .LVU5645
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16320              		.loc 1 570 32 view .LVU5646
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16321              		.loc 1 570 25 view .LVU5647
 571:sieve_extend.c ****     }
 16322              		.loc 1 571 13 view .LVU5648
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16323              		.loc 1 570 32 view .LVU5649
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16324              		.loc 1 570 25 view .LVU5650
 571:sieve_extend.c ****     }
 16325              		.loc 1 571 13 view .LVU5651
 16326              	.LBE721:
 16327              	.LBB722:
 16328              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16329              		.loc 1 569 25 is_stmt 0 view .LVU5652
 16330 5810 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114
 16330      240655
 16331 5817 4183C101 		add	r9d, 1	# ivtmp.714,
 16332              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16333              		.loc 1 569 34 view .LVU5653
 16334 581b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.717_114, offset: 
 16334      06
 16335              	.LBE722:
 16336              	.LBB723:
 16337              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16338              		.loc 1 571 34 view .LVU5654
 16339 5820 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.704, vect__102.703, _4
GAS LISTING /tmp/ccH5HMHD.s 			page 434


 16340              	.LBE723:
 16341              	.LBB724:
 16342              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16343              		.loc 1 569 34 view .LVU5655
 16344 5824 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.708, tmp279, shift
 16345              	.LBE724:
 16346              	.LBB725:
 16347              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16348              		.loc 1 571 22 view .LVU5656
 16349 5828 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.709, vect__57.704, vect__104.708
 16349      D7
 16350 582d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect
 16350      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16351              		.loc 1 570 32 is_stmt 1 view .LVU5657
 16352              	.LVL1001:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16353              		.loc 1 570 25 view .LVU5658
 16354              	.LBE725:
 566:sieve_extend.c ****     {
 16355              		.loc 1 566 24 view .LVU5659
 566:sieve_extend.c ****     {
 16356              		.loc 1 566 12 view .LVU5660
 16357 5832 4883C020 		add	rax, 32	# ivtmp.717,
 16358              	.L1550:
 16359              	.LVL1002:
 16360              	.LBB726:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16361              		.loc 1 568 25 view .LVU5661
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16362              		.loc 1 569 13 view .LVU5662
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16363              		.loc 1 568 32 view .LVU5663
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16364              		.loc 1 568 25 view .LVU5664
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16365              		.loc 1 569 13 view .LVU5665
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16366              		.loc 1 568 32 view .LVU5666
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16367              		.loc 1 568 25 view .LVU5667
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16368              		.loc 1 569 13 view .LVU5668
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16369              		.loc 1 568 32 view .LVU5669
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16370              		.loc 1 568 25 view .LVU5670
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16371              		.loc 1 569 13 view .LVU5671
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16372              		.loc 1 568 32 view .LVU5672
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16373              		.loc 1 568 25 view .LVU5673
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16374              		.loc 1 568 25 is_stmt 0 view .LVU5674
GAS LISTING /tmp/ccH5HMHD.s 			page 435


 16375              	.LBE726:
 16376              	.LBB727:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16377              		.loc 1 570 25 is_stmt 1 view .LVU5675
 571:sieve_extend.c ****     }
 16378              		.loc 1 571 13 view .LVU5676
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16379              		.loc 1 570 32 view .LVU5677
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16380              		.loc 1 570 25 view .LVU5678
 571:sieve_extend.c ****     }
 16381              		.loc 1 571 13 view .LVU5679
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16382              		.loc 1 570 32 view .LVU5680
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16383              		.loc 1 570 25 view .LVU5681
 571:sieve_extend.c ****     }
 16384              		.loc 1 571 13 view .LVU5682
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16385              		.loc 1 570 32 view .LVU5683
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16386              		.loc 1 570 25 view .LVU5684
 571:sieve_extend.c ****     }
 16387              		.loc 1 571 13 view .LVU5685
 16388              	.LBE727:
 16389              	.LBB728:
 16390              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16391              		.loc 1 569 25 is_stmt 0 view .LVU5686
 16392 5836 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114,
 16392      2C0655
 16393 583d 4183C101 		add	r9d, 1	# ivtmp.714,
 16394              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16395              		.loc 1 569 34 view .LVU5687
 16396 5841 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.717_114, offset: 0
 16396      06
 16397              	.LBE728:
 16398              	.LBB729:
 16399              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16400              		.loc 1 571 34 view .LVU5688
 16401 5846 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.704, vect__102.703, _4
 16402              	.LBE729:
 16403              	.LBB730:
 16404              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16405              		.loc 1 569 34 view .LVU5689
 16406 584a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.708, tmp280, shift
 16407              	.LBE730:
 16408              	.LBB731:
 16409              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16410              		.loc 1 571 22 view .LVU5690
 16411 584e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.709, vect__57.704, vect__104.708
 16412 5852 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect
 16412      07
GAS LISTING /tmp/ccH5HMHD.s 			page 436


 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16413              		.loc 1 570 32 is_stmt 1 view .LVU5691
 16414              	.LVL1003:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16415              		.loc 1 570 25 view .LVU5692
 16416              	.LBE731:
 566:sieve_extend.c ****     {
 16417              		.loc 1 566 24 view .LVU5693
 566:sieve_extend.c ****     {
 16418              		.loc 1 566 12 view .LVU5694
 16419 5857 4883C020 		add	rax, 32	# ivtmp.717,
 16420              	.L1549:
 16421              	.LVL1004:
 16422              	.LBB732:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16423              		.loc 1 568 25 view .LVU5695
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16424              		.loc 1 569 13 view .LVU5696
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16425              		.loc 1 568 32 view .LVU5697
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16426              		.loc 1 568 25 view .LVU5698
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16427              		.loc 1 569 13 view .LVU5699
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16428              		.loc 1 568 32 view .LVU5700
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16429              		.loc 1 568 25 view .LVU5701
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16430              		.loc 1 569 13 view .LVU5702
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16431              		.loc 1 568 32 view .LVU5703
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16432              		.loc 1 568 25 view .LVU5704
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16433              		.loc 1 569 13 view .LVU5705
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16434              		.loc 1 568 32 view .LVU5706
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16435              		.loc 1 568 25 view .LVU5707
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16436              		.loc 1 568 25 is_stmt 0 view .LVU5708
 16437              	.LBE732:
 16438              	.LBB733:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16439              		.loc 1 570 25 is_stmt 1 view .LVU5709
 571:sieve_extend.c ****     }
 16440              		.loc 1 571 13 view .LVU5710
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16441              		.loc 1 570 32 view .LVU5711
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16442              		.loc 1 570 25 view .LVU5712
 571:sieve_extend.c ****     }
 16443              		.loc 1 571 13 view .LVU5713
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16444              		.loc 1 570 32 view .LVU5714
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 437


 16445              		.loc 1 570 25 view .LVU5715
 571:sieve_extend.c ****     }
 16446              		.loc 1 571 13 view .LVU5716
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16447              		.loc 1 570 32 view .LVU5717
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16448              		.loc 1 570 25 view .LVU5718
 571:sieve_extend.c ****     }
 16449              		.loc 1 571 13 view .LVU5719
 16450              	.LBE733:
 16451              	.LBB734:
 16452              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16453              		.loc 1 569 25 is_stmt 0 view .LVU5720
 16454 585b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114,
 16454      040655
 16455 5862 4183C101 		add	r9d, 1	# ivtmp.714,
 16456              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16457              		.loc 1 569 34 view .LVU5721
 16458 5866 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.717_114, offset: 
 16458      06
 16459              	.LBE734:
 16460              	.LBB735:
 16461              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16462              		.loc 1 571 34 view .LVU5722
 16463 586b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.704, vect__102.703, _4
 16464              	.LBE735:
 16465              	.LBB736:
 16466              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16467              		.loc 1 569 34 view .LVU5723
 16468 586f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.708, tmp281, shift
 16469              	.LBE736:
 16470              	.LBB737:
 16471              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16472              		.loc 1 571 22 view .LVU5724
 16473 5873 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.709, vect__57.704, vect__104.708
 16473      E3
 16474 5878 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vec
 16474      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16475              		.loc 1 570 32 is_stmt 1 view .LVU5725
 16476              	.LVL1005:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16477              		.loc 1 570 25 view .LVU5726
 16478              	.LBE737:
 566:sieve_extend.c ****     {
 16479              		.loc 1 566 24 view .LVU5727
 566:sieve_extend.c ****     {
 16480              		.loc 1 566 12 view .LVU5728
 16481 587d 4883C020 		add	rax, 32	# ivtmp.717,
 16482              	.L1548:
 16483              	.LVL1006:
 16484              	.LBB738:
GAS LISTING /tmp/ccH5HMHD.s 			page 438


 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16485              		.loc 1 568 25 view .LVU5729
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16486              		.loc 1 569 13 view .LVU5730
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16487              		.loc 1 568 32 view .LVU5731
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16488              		.loc 1 568 25 view .LVU5732
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16489              		.loc 1 569 13 view .LVU5733
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16490              		.loc 1 568 32 view .LVU5734
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16491              		.loc 1 568 25 view .LVU5735
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16492              		.loc 1 569 13 view .LVU5736
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16493              		.loc 1 568 32 view .LVU5737
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16494              		.loc 1 568 25 view .LVU5738
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16495              		.loc 1 569 13 view .LVU5739
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16496              		.loc 1 568 32 view .LVU5740
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16497              		.loc 1 568 25 view .LVU5741
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16498              		.loc 1 568 25 is_stmt 0 view .LVU5742
 16499              	.LBE738:
 16500              	.LBB739:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16501              		.loc 1 570 25 is_stmt 1 view .LVU5743
 571:sieve_extend.c ****     }
 16502              		.loc 1 571 13 view .LVU5744
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16503              		.loc 1 570 32 view .LVU5745
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16504              		.loc 1 570 25 view .LVU5746
 571:sieve_extend.c ****     }
 16505              		.loc 1 571 13 view .LVU5747
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16506              		.loc 1 570 32 view .LVU5748
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16507              		.loc 1 570 25 view .LVU5749
 571:sieve_extend.c ****     }
 16508              		.loc 1 571 13 view .LVU5750
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16509              		.loc 1 570 32 view .LVU5751
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16510              		.loc 1 570 25 view .LVU5752
 571:sieve_extend.c ****     }
 16511              		.loc 1 571 13 view .LVU5753
 16512              	.LBE739:
 16513              	.LBB740:
 16514              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16515              		.loc 1 569 25 is_stmt 0 view .LVU5754
GAS LISTING /tmp/ccH5HMHD.s 			page 439


 16516 5881 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114
 16516      2C0655
 16517 5888 4183C101 		add	r9d, 1	# ivtmp.714,
 16518              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16519              		.loc 1 569 34 view .LVU5755
 16520 588c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.717_114, offset: 
 16520      06
 16521              	.LBE740:
 16522              	.LBB741:
 16523              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16524              		.loc 1 571 34 view .LVU5756
 16525 5891 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.704, vect__102.703, _4
 16526              	.LBE741:
 16527              	.LBB742:
 16528              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16529              		.loc 1 569 34 view .LVU5757
 16530 5895 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.708, tmp282, shift
 16531              	.LBE742:
 16532              	.LBB743:
 16533              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16534              		.loc 1 571 22 view .LVU5758
 16535 5899 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.709, vect__57.704, vect__104.708
 16536 589d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect
 16536      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16537              		.loc 1 570 32 is_stmt 1 view .LVU5759
 16538              	.LVL1007:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16539              		.loc 1 570 25 view .LVU5760
 16540              	.LBE743:
 566:sieve_extend.c ****     {
 16541              		.loc 1 566 24 view .LVU5761
 566:sieve_extend.c ****     {
 16542              		.loc 1 566 12 view .LVU5762
 16543 58a2 4883C020 		add	rax, 32	# ivtmp.717,
 16544              	.L1547:
 16545              	.LVL1008:
 16546              	.LBB744:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16547              		.loc 1 568 25 view .LVU5763
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16548              		.loc 1 569 13 view .LVU5764
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16549              		.loc 1 568 32 view .LVU5765
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16550              		.loc 1 568 25 view .LVU5766
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16551              		.loc 1 569 13 view .LVU5767
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16552              		.loc 1 568 32 view .LVU5768
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16553              		.loc 1 568 25 view .LVU5769
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccH5HMHD.s 			page 440


 16554              		.loc 1 569 13 view .LVU5770
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16555              		.loc 1 568 32 view .LVU5771
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16556              		.loc 1 568 25 view .LVU5772
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16557              		.loc 1 569 13 view .LVU5773
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16558              		.loc 1 568 32 view .LVU5774
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16559              		.loc 1 568 25 view .LVU5775
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16560              		.loc 1 568 25 is_stmt 0 view .LVU5776
 16561              	.LBE744:
 16562              	.LBB745:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16563              		.loc 1 570 25 is_stmt 1 view .LVU5777
 571:sieve_extend.c ****     }
 16564              		.loc 1 571 13 view .LVU5778
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16565              		.loc 1 570 32 view .LVU5779
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16566              		.loc 1 570 25 view .LVU5780
 571:sieve_extend.c ****     }
 16567              		.loc 1 571 13 view .LVU5781
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16568              		.loc 1 570 32 view .LVU5782
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16569              		.loc 1 570 25 view .LVU5783
 571:sieve_extend.c ****     }
 16570              		.loc 1 571 13 view .LVU5784
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16571              		.loc 1 570 32 view .LVU5785
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16572              		.loc 1 570 25 view .LVU5786
 571:sieve_extend.c ****     }
 16573              		.loc 1 571 13 view .LVU5787
 16574              	.LBE745:
 16575              	.LBB746:
 16576              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16577              		.loc 1 569 25 is_stmt 0 view .LVU5788
 16578 58a6 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114,
 16578      240655
 16579 58ad 4183C101 		add	r9d, 1	# ivtmp.714,
 16580              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16581              		.loc 1 569 34 view .LVU5789
 16582 58b1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.717_114, offset: 0
 16582      06
 16583              	.LBE746:
 16584              	.LBB747:
 16585              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16586              		.loc 1 571 34 view .LVU5790
 16587 58b6 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.704, vect__102.703, _4
 16588              	.LBE747:
GAS LISTING /tmp/ccH5HMHD.s 			page 441


 16589              	.LBB748:
 16590              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16591              		.loc 1 569 34 view .LVU5791
 16592 58ba C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.708, tmp283, shift
 16593              	.LBE748:
 16594              	.LBB749:
 16595              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16596              		.loc 1 571 22 view .LVU5792
 16597 58be C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.709, vect__57.704, vect__104.708
 16598 58c2 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect
 16598      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16599              		.loc 1 570 32 is_stmt 1 view .LVU5793
 16600              	.LVL1009:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16601              		.loc 1 570 25 view .LVU5794
 16602              	.LBE749:
 566:sieve_extend.c ****     {
 16603              		.loc 1 566 24 view .LVU5795
 566:sieve_extend.c ****     {
 16604              		.loc 1 566 12 view .LVU5796
 16605 58c7 4883C020 		add	rax, 32	# ivtmp.717,
 16606              	.L1546:
 16607              	.LVL1010:
 16608              	.LBB750:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16609              		.loc 1 568 25 view .LVU5797
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16610              		.loc 1 569 13 view .LVU5798
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16611              		.loc 1 568 32 view .LVU5799
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16612              		.loc 1 568 25 view .LVU5800
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16613              		.loc 1 569 13 view .LVU5801
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16614              		.loc 1 568 32 view .LVU5802
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16615              		.loc 1 568 25 view .LVU5803
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16616              		.loc 1 569 13 view .LVU5804
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16617              		.loc 1 568 32 view .LVU5805
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16618              		.loc 1 568 25 view .LVU5806
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16619              		.loc 1 569 13 view .LVU5807
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16620              		.loc 1 568 32 view .LVU5808
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16621              		.loc 1 568 25 view .LVU5809
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16622              		.loc 1 568 25 is_stmt 0 view .LVU5810
 16623              	.LBE750:
 16624              	.LBB751:
GAS LISTING /tmp/ccH5HMHD.s 			page 442


 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16625              		.loc 1 570 25 is_stmt 1 view .LVU5811
 571:sieve_extend.c ****     }
 16626              		.loc 1 571 13 view .LVU5812
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16627              		.loc 1 570 32 view .LVU5813
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16628              		.loc 1 570 25 view .LVU5814
 571:sieve_extend.c ****     }
 16629              		.loc 1 571 13 view .LVU5815
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16630              		.loc 1 570 32 view .LVU5816
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16631              		.loc 1 570 25 view .LVU5817
 571:sieve_extend.c ****     }
 16632              		.loc 1 571 13 view .LVU5818
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16633              		.loc 1 570 32 view .LVU5819
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16634              		.loc 1 570 25 view .LVU5820
 571:sieve_extend.c ****     }
 16635              		.loc 1 571 13 view .LVU5821
 16636              	.LBE751:
 16637              	.LBB752:
 16638              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16639              		.loc 1 569 25 is_stmt 0 view .LVU5822
 16640 58cb C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114,
 16640      0C0655
 16641 58d2 4183C101 		add	r9d, 1	# ivtmp.714,
 16642              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16643              		.loc 1 569 34 view .LVU5823
 16644 58d6 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.717_114, offset: 
 16644      06
 16645              	.LBE752:
 16646              	.LBB753:
 16647              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16648              		.loc 1 571 34 view .LVU5824
 16649 58db C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.704, vect__102.703, _4
 16650              	.LBE753:
 16651              	.LBB754:
 16652              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16653              		.loc 1 569 34 view .LVU5825
 16654 58df C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.708, tmp284, shift
 16655              	.LBE754:
 16656              	.LBB755:
 16657              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16658              		.loc 1 571 22 view .LVU5826
 16659 58e3 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.709, vect__57.704, vect__104.708
 16659      EC
 16660 58e8 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vec
 16660      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 443


 16661              		.loc 1 570 32 is_stmt 1 view .LVU5827
 16662              	.LVL1011:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16663              		.loc 1 570 25 view .LVU5828
 16664              	.LBE755:
 566:sieve_extend.c ****     {
 16665              		.loc 1 566 24 view .LVU5829
 566:sieve_extend.c ****     {
 16666              		.loc 1 566 12 view .LVU5830
 16667 58ed 4883C020 		add	rax, 32	# ivtmp.717,
 16668 58f1 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.714
 16669 58f4 0F863901 		jbe	.L1559	#,
 16669      0000
 16670              	.L1519:
 16671              	.LVL1012:
 16672              	.LBB756:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16673              		.loc 1 568 25 view .LVU5831
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16674              		.loc 1 569 13 view .LVU5832
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16675              		.loc 1 568 32 view .LVU5833
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16676              		.loc 1 568 25 view .LVU5834
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16677              		.loc 1 569 13 view .LVU5835
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16678              		.loc 1 568 32 view .LVU5836
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16679              		.loc 1 568 25 view .LVU5837
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16680              		.loc 1 569 13 view .LVU5838
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16681              		.loc 1 568 32 view .LVU5839
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16682              		.loc 1 568 25 view .LVU5840
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16683              		.loc 1 569 13 view .LVU5841
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16684              		.loc 1 568 32 view .LVU5842
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16685              		.loc 1 568 25 view .LVU5843
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16686              		.loc 1 568 25 is_stmt 0 view .LVU5844
 16687              	.LBE756:
 16688              	.LBB757:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16689              		.loc 1 570 25 is_stmt 1 view .LVU5845
 571:sieve_extend.c ****     }
 16690              		.loc 1 571 13 view .LVU5846
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16691              		.loc 1 570 32 view .LVU5847
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16692              		.loc 1 570 25 view .LVU5848
 571:sieve_extend.c ****     }
 16693              		.loc 1 571 13 view .LVU5849
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 444


 16694              		.loc 1 570 32 view .LVU5850
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16695              		.loc 1 570 25 view .LVU5851
 571:sieve_extend.c ****     }
 16696              		.loc 1 571 13 view .LVU5852
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16697              		.loc 1 570 32 view .LVU5853
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16698              		.loc 1 570 25 view .LVU5854
 571:sieve_extend.c ****     }
 16699              		.loc 1 571 13 view .LVU5855
 16700              	.LBE757:
 16701              	.LBB758:
 16702              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16703              		.loc 1 569 25 is_stmt 0 view .LVU5856
 16704 58fa C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114
 16704      340655
 16705 5901 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_11
 16705      74062055 
 16706              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16707              		.loc 1 569 34 view .LVU5857
 16708 5909 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.717_114, offset: 0
 16708      06
 16709              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16710              		.loc 1 569 25 view .LVU5858
 16711 590e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_1
 16711      54064055 
 16712              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16713              		.loc 1 569 34 view .LVU5859
 16714 5916 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.717_114, offset:
 16714      0620
 16715 591c 4183C108 		add	r9d, 8	# ivtmp.714,
 16716              	.LBE758:
 16717              	.LBB759:
 16718              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16719              		.loc 1 571 34 view .LVU5860
 16720 5920 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.704, vect__102.703, _4
 16721 5924 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.704, vect__102.703, _4
 16722              	.LBE759:
 16723              	.LBB760:
 16724              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16725              		.loc 1 569 34 view .LVU5861
 16726 5928 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.708, tmp270, shift
 16727 592c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.708, tmp271, shift
 16728 5930 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.717_114, offset
 16728      0640
 16729              	.LBE760:
 16730              	.LBB761:
 16731              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16732              		.loc 1 571 22 view .LVU5862
GAS LISTING /tmp/ccH5HMHD.s 			page 445


 16733 5936 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.709, vect__57.704, vect__104.708
 16734              	.LBE761:
 16735              	.LBB762:
 16736              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16737              		.loc 1 569 34 view .LVU5863
 16738 593a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.717_114, offset
 16738      06800000 
 16738      00
 16739              	.LBE762:
 16740              	.LBB763:
 16741              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16742              		.loc 1 571 22 view .LVU5864
 16743 5943 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.709, vect__57.704, vect__104.708
 16743      C8
 16744              	.LBE763:
 16745              	.LBB764:
 16746              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16747              		.loc 1 569 25 view .LVU5865
 16748 5948 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_1
 16748      7C066055 
 16749 5950 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_1
 16749      BC068000 
 16749      000055
 16750              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16751              		.loc 1 569 34 view .LVU5866
 16752 595b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.717_114, offset:
 16752      0660
 16753              	.LBE764:
 16754              	.LBB765:
 16755              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16756              		.loc 1 571 34 view .LVU5867
 16757 5961 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.704, vect__102.703, _4
 16758              	.LBE765:
 16759              	.LBB766:
 16760              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16761              		.loc 1 569 34 view .LVU5868
 16762 5965 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.708, tmp272, shift
 16763              	.LBE766:
 16764              	.LBB767:
 16765              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16766              		.loc 1 571 34 view .LVU5869
 16767 5969 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.704, vect__102.703, _4
 16768              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16769              		.loc 1 571 22 view .LVU5870
 16770 596d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect
 16770      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16771              		.loc 1 570 32 is_stmt 1 view .LVU5871
 16772              	.LVL1013:
GAS LISTING /tmp/ccH5HMHD.s 			page 446


 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16773              		.loc 1 570 25 view .LVU5872
 16774              	.LBE767:
 566:sieve_extend.c ****     {
 16775              		.loc 1 566 24 view .LVU5873
 566:sieve_extend.c ****     {
 16776              		.loc 1 566 12 view .LVU5874
 16777              	.LBB768:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16778              		.loc 1 568 25 view .LVU5875
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16779              		.loc 1 569 13 view .LVU5876
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16780              		.loc 1 568 32 view .LVU5877
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16781              		.loc 1 568 25 view .LVU5878
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16782              		.loc 1 569 13 view .LVU5879
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16783              		.loc 1 568 32 view .LVU5880
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16784              		.loc 1 568 25 view .LVU5881
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16785              		.loc 1 569 13 view .LVU5882
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16786              		.loc 1 568 32 view .LVU5883
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16787              		.loc 1 568 25 view .LVU5884
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16788              		.loc 1 569 13 view .LVU5885
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16789              		.loc 1 568 32 view .LVU5886
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16790              		.loc 1 568 25 view .LVU5887
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16791              		.loc 1 568 25 is_stmt 0 view .LVU5888
 16792              	.LBE768:
 16793              	.LBB769:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16794              		.loc 1 570 25 is_stmt 1 view .LVU5889
 571:sieve_extend.c ****     }
 16795              		.loc 1 571 13 view .LVU5890
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16796              		.loc 1 570 32 view .LVU5891
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16797              		.loc 1 570 25 view .LVU5892
 571:sieve_extend.c ****     }
 16798              		.loc 1 571 13 view .LVU5893
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16799              		.loc 1 570 32 view .LVU5894
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16800              		.loc 1 570 25 view .LVU5895
 571:sieve_extend.c ****     }
 16801              		.loc 1 571 13 view .LVU5896
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16802              		.loc 1 570 32 view .LVU5897
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 447


 16803              		.loc 1 570 25 view .LVU5898
 571:sieve_extend.c ****     }
 16804              		.loc 1 571 13 view .LVU5899
 16805              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16806              		.loc 1 571 22 is_stmt 0 view .LVU5900
 16807 5972 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.709, vect__57.704, vect__104.708
 16807      F5
 16808              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16809              		.loc 1 571 34 view .LVU5901
 16810 5977 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.704, vect__102.703, _4
 16811              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16812              		.loc 1 571 22 view .LVU5902
 16813 597b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], ve
 16813      0720
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16814              		.loc 1 570 32 is_stmt 1 view .LVU5903
 16815              	.LVL1014:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16816              		.loc 1 570 25 view .LVU5904
 16817              	.LBE769:
 566:sieve_extend.c ****     {
 16818              		.loc 1 566 24 view .LVU5905
 566:sieve_extend.c ****     {
 16819              		.loc 1 566 12 view .LVU5906
 16820              	.LBB770:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16821              		.loc 1 568 25 view .LVU5907
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16822              		.loc 1 569 13 view .LVU5908
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16823              		.loc 1 568 32 view .LVU5909
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16824              		.loc 1 568 25 view .LVU5910
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16825              		.loc 1 569 13 view .LVU5911
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16826              		.loc 1 568 32 view .LVU5912
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16827              		.loc 1 568 25 view .LVU5913
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16828              		.loc 1 569 13 view .LVU5914
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16829              		.loc 1 568 32 view .LVU5915
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16830              		.loc 1 568 25 view .LVU5916
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16831              		.loc 1 569 13 view .LVU5917
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16832              		.loc 1 568 32 view .LVU5918
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16833              		.loc 1 568 25 view .LVU5919
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16834              		.loc 1 568 25 is_stmt 0 view .LVU5920
 16835              	.LBE770:
GAS LISTING /tmp/ccH5HMHD.s 			page 448


 16836              	.LBB771:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16837              		.loc 1 570 25 is_stmt 1 view .LVU5921
 571:sieve_extend.c ****     }
 16838              		.loc 1 571 13 view .LVU5922
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16839              		.loc 1 570 32 view .LVU5923
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16840              		.loc 1 570 25 view .LVU5924
 571:sieve_extend.c ****     }
 16841              		.loc 1 571 13 view .LVU5925
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16842              		.loc 1 570 32 view .LVU5926
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16843              		.loc 1 570 25 view .LVU5927
 571:sieve_extend.c ****     }
 16844              		.loc 1 571 13 view .LVU5928
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16845              		.loc 1 570 32 view .LVU5929
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16846              		.loc 1 570 25 view .LVU5930
 571:sieve_extend.c ****     }
 16847              		.loc 1 571 13 view .LVU5931
 16848              	.LBE771:
 16849              	.LBB772:
 16850              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16851              		.loc 1 569 25 is_stmt 0 view .LVU5932
 16852 5981 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_
 16852      9C06A000 
 16852      000055
 16853              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16854              		.loc 1 569 34 view .LVU5933
 16855 598c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.708, tmp273, shift
 16856 5990 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.708, tmp274, shift
 16857 5994 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.717_114, offse
 16857      06A00000 
 16857      00
 16858              	.LBE772:
 16859              	.LBB773:
 16860              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16861              		.loc 1 571 22 view .LVU5934
 16862 599d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.709, vect__57.704, vect__104.708
 16863              	.LBE773:
 16864              	.LBB774:
 16865              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16866              		.loc 1 569 34 view .LVU5935
 16867 59a1 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.717_114, offset
 16867      06E00000 
 16867      00
 16868              	.LBE774:
 16869              	.LBB775:
 16870              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
GAS LISTING /tmp/ccH5HMHD.s 			page 449


 16871              		.loc 1 571 22 view .LVU5936
 16872 59aa C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.709, vect__57.704, vect__104.708
 16872      D1
 16873              	.LBE775:
 16874              	.LBB776:
 16875              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16876              		.loc 1 569 25 view .LVU5937
 16877 59af C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_1
 16877      9406C000 
 16877      000055
 16878 59ba C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_1
 16878      8406E000 
 16878      000055
 16879              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16880              		.loc 1 569 34 view .LVU5938
 16881 59c5 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.717_114, offset
 16881      06C00000 
 16881      00
 16882              	.LBE776:
 16883              	.LBB777:
 16884              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16885              		.loc 1 571 22 view .LVU5939
 16886 59ce C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], v
 16886      0740
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16887              		.loc 1 570 32 is_stmt 1 view .LVU5940
 16888              	.LVL1015:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16889              		.loc 1 570 25 view .LVU5941
 16890              	.LBE777:
 566:sieve_extend.c ****     {
 16891              		.loc 1 566 24 view .LVU5942
 566:sieve_extend.c ****     {
 16892              		.loc 1 566 12 view .LVU5943
 16893              	.LBB778:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16894              		.loc 1 568 25 view .LVU5944
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16895              		.loc 1 569 13 view .LVU5945
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16896              		.loc 1 568 32 view .LVU5946
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16897              		.loc 1 568 25 view .LVU5947
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16898              		.loc 1 569 13 view .LVU5948
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16899              		.loc 1 568 32 view .LVU5949
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16900              		.loc 1 568 25 view .LVU5950
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16901              		.loc 1 569 13 view .LVU5951
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16902              		.loc 1 568 32 view .LVU5952
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccH5HMHD.s 			page 450


 16903              		.loc 1 568 25 view .LVU5953
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16904              		.loc 1 569 13 view .LVU5954
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16905              		.loc 1 568 32 view .LVU5955
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16906              		.loc 1 568 25 view .LVU5956
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16907              		.loc 1 568 25 is_stmt 0 view .LVU5957
 16908              	.LBE778:
 16909              	.LBB779:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16910              		.loc 1 570 25 is_stmt 1 view .LVU5958
 571:sieve_extend.c ****     }
 16911              		.loc 1 571 13 view .LVU5959
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16912              		.loc 1 570 32 view .LVU5960
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16913              		.loc 1 570 25 view .LVU5961
 571:sieve_extend.c ****     }
 16914              		.loc 1 571 13 view .LVU5962
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16915              		.loc 1 570 32 view .LVU5963
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16916              		.loc 1 570 25 view .LVU5964
 571:sieve_extend.c ****     }
 16917              		.loc 1 571 13 view .LVU5965
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16918              		.loc 1 570 32 view .LVU5966
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16919              		.loc 1 570 25 view .LVU5967
 571:sieve_extend.c ****     }
 16920              		.loc 1 571 13 view .LVU5968
 16921              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16922              		.loc 1 571 34 is_stmt 0 view .LVU5969
 16923 59d4 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.704, vect__102.703, _4
 16924              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16925              		.loc 1 571 22 view .LVU5970
 16926 59d8 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], ve
 16926      0760
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16927              		.loc 1 570 32 is_stmt 1 view .LVU5971
 16928              	.LVL1016:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16929              		.loc 1 570 25 view .LVU5972
 16930              	.LBE779:
 566:sieve_extend.c ****     {
 16931              		.loc 1 566 24 view .LVU5973
 566:sieve_extend.c ****     {
 16932              		.loc 1 566 12 view .LVU5974
 16933              	.LBB780:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16934              		.loc 1 568 25 view .LVU5975
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16935              		.loc 1 569 13 view .LVU5976
GAS LISTING /tmp/ccH5HMHD.s 			page 451


 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16936              		.loc 1 568 32 view .LVU5977
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16937              		.loc 1 568 25 view .LVU5978
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16938              		.loc 1 569 13 view .LVU5979
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16939              		.loc 1 568 32 view .LVU5980
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16940              		.loc 1 568 25 view .LVU5981
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16941              		.loc 1 569 13 view .LVU5982
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16942              		.loc 1 568 32 view .LVU5983
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16943              		.loc 1 568 25 view .LVU5984
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16944              		.loc 1 569 13 view .LVU5985
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16945              		.loc 1 568 32 view .LVU5986
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16946              		.loc 1 568 25 view .LVU5987
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16947              		.loc 1 568 25 is_stmt 0 view .LVU5988
 16948              	.LBE780:
 16949              	.LBB781:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16950              		.loc 1 570 25 is_stmt 1 view .LVU5989
 571:sieve_extend.c ****     }
 16951              		.loc 1 571 13 view .LVU5990
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16952              		.loc 1 570 32 view .LVU5991
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16953              		.loc 1 570 25 view .LVU5992
 571:sieve_extend.c ****     }
 16954              		.loc 1 571 13 view .LVU5993
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16955              		.loc 1 570 32 view .LVU5994
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16956              		.loc 1 570 25 view .LVU5995
 571:sieve_extend.c ****     }
 16957              		.loc 1 571 13 view .LVU5996
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16958              		.loc 1 570 32 view .LVU5997
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16959              		.loc 1 570 25 view .LVU5998
 571:sieve_extend.c ****     }
 16960              		.loc 1 571 13 view .LVU5999
 16961              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16962              		.loc 1 571 22 is_stmt 0 view .LVU6000
 16963 59de C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], 
 16963      07800000 
 16963      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16964              		.loc 1 570 32 is_stmt 1 view .LVU6001
 16965              	.LVL1017:
GAS LISTING /tmp/ccH5HMHD.s 			page 452


 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16966              		.loc 1 570 25 view .LVU6002
 16967              	.LBE781:
 566:sieve_extend.c ****     {
 16968              		.loc 1 566 24 view .LVU6003
 566:sieve_extend.c ****     {
 16969              		.loc 1 566 12 view .LVU6004
 16970              	.LBB782:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16971              		.loc 1 568 25 view .LVU6005
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16972              		.loc 1 569 13 view .LVU6006
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16973              		.loc 1 568 32 view .LVU6007
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16974              		.loc 1 568 25 view .LVU6008
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16975              		.loc 1 569 13 view .LVU6009
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16976              		.loc 1 568 32 view .LVU6010
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16977              		.loc 1 568 25 view .LVU6011
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16978              		.loc 1 569 13 view .LVU6012
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16979              		.loc 1 568 32 view .LVU6013
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16980              		.loc 1 568 25 view .LVU6014
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16981              		.loc 1 569 13 view .LVU6015
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16982              		.loc 1 568 32 view .LVU6016
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16983              		.loc 1 568 25 view .LVU6017
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16984              		.loc 1 568 25 is_stmt 0 view .LVU6018
 16985              	.LBE782:
 16986              	.LBB783:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16987              		.loc 1 570 25 is_stmt 1 view .LVU6019
 571:sieve_extend.c ****     }
 16988              		.loc 1 571 13 view .LVU6020
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16989              		.loc 1 570 32 view .LVU6021
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16990              		.loc 1 570 25 view .LVU6022
 571:sieve_extend.c ****     }
 16991              		.loc 1 571 13 view .LVU6023
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16992              		.loc 1 570 32 view .LVU6024
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16993              		.loc 1 570 25 view .LVU6025
 571:sieve_extend.c ****     }
 16994              		.loc 1 571 13 view .LVU6026
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16995              		.loc 1 570 32 view .LVU6027
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 453


 16996              		.loc 1 570 25 view .LVU6028
 571:sieve_extend.c ****     }
 16997              		.loc 1 571 13 view .LVU6029
 16998              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 16999              		.loc 1 571 34 is_stmt 0 view .LVU6030
 17000 59e7 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.704, vect__102.703, _4
 17001              	.LBE783:
 17002              	.LBB784:
 17003              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17004              		.loc 1 569 34 view .LVU6031
 17005 59eb C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.708, tmp275, shift
 17006              	.LBE784:
 17007              	.LBB785:
 17008              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17009              		.loc 1 571 34 view .LVU6032
 17010 59ef C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.704, vect__102.703, _4
 17011              	.LBE785:
 17012              	.LBB786:
 17013              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17014              		.loc 1 569 34 view .LVU6033
 17015 59f3 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.708, tmp276, shift
 17016 59f7 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.708, tmp277, shift
 17017              	.LBE786:
 17018              	.LBB787:
 17019              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17020              		.loc 1 571 22 view .LVU6034
 17021 59fb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.709, vect__57.704, vect__104.708
 17021      FE
 17022 5a00 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.709, vect__57.704, vect__104.708
 17023 5a04 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], 
 17023      07A00000 
 17023      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17024              		.loc 1 570 32 is_stmt 1 view .LVU6035
 17025              	.LVL1018:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17026              		.loc 1 570 25 view .LVU6036
 17027              	.LBE787:
 566:sieve_extend.c ****     {
 17028              		.loc 1 566 24 view .LVU6037
 566:sieve_extend.c ****     {
 17029              		.loc 1 566 12 view .LVU6038
 17030              	.LBB788:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17031              		.loc 1 568 25 view .LVU6039
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17032              		.loc 1 569 13 view .LVU6040
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17033              		.loc 1 568 32 view .LVU6041
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17034              		.loc 1 568 25 view .LVU6042
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccH5HMHD.s 			page 454


 17035              		.loc 1 569 13 view .LVU6043
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17036              		.loc 1 568 32 view .LVU6044
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17037              		.loc 1 568 25 view .LVU6045
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17038              		.loc 1 569 13 view .LVU6046
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17039              		.loc 1 568 32 view .LVU6047
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17040              		.loc 1 568 25 view .LVU6048
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17041              		.loc 1 569 13 view .LVU6049
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17042              		.loc 1 568 32 view .LVU6050
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17043              		.loc 1 568 25 view .LVU6051
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17044              		.loc 1 568 25 is_stmt 0 view .LVU6052
 17045              	.LBE788:
 17046              	.LBB789:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17047              		.loc 1 570 25 is_stmt 1 view .LVU6053
 571:sieve_extend.c ****     }
 17048              		.loc 1 571 13 view .LVU6054
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17049              		.loc 1 570 32 view .LVU6055
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17050              		.loc 1 570 25 view .LVU6056
 571:sieve_extend.c ****     }
 17051              		.loc 1 571 13 view .LVU6057
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17052              		.loc 1 570 32 view .LVU6058
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17053              		.loc 1 570 25 view .LVU6059
 571:sieve_extend.c ****     }
 17054              		.loc 1 571 13 view .LVU6060
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17055              		.loc 1 570 32 view .LVU6061
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17056              		.loc 1 570 25 view .LVU6062
 571:sieve_extend.c ****     }
 17057              		.loc 1 571 13 view .LVU6063
 17058              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17059              		.loc 1 571 22 is_stmt 0 view .LVU6064
 17060 5a0d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.709, vect__57.704, vect__104.708
 17060      DA
 17061 5a12 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], v
 17061      07C00000 
 17061      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17062              		.loc 1 570 32 is_stmt 1 view .LVU6065
 17063              	.LVL1019:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17064              		.loc 1 570 25 view .LVU6066
 17065              	.LBE789:
GAS LISTING /tmp/ccH5HMHD.s 			page 455


 566:sieve_extend.c ****     {
 17066              		.loc 1 566 24 view .LVU6067
 566:sieve_extend.c ****     {
 17067              		.loc 1 566 12 view .LVU6068
 17068              	.LBB790:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17069              		.loc 1 568 25 view .LVU6069
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17070              		.loc 1 569 13 view .LVU6070
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17071              		.loc 1 568 32 view .LVU6071
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17072              		.loc 1 568 25 view .LVU6072
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17073              		.loc 1 569 13 view .LVU6073
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17074              		.loc 1 568 32 view .LVU6074
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17075              		.loc 1 568 25 view .LVU6075
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17076              		.loc 1 569 13 view .LVU6076
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17077              		.loc 1 568 32 view .LVU6077
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17078              		.loc 1 568 25 view .LVU6078
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17079              		.loc 1 569 13 view .LVU6079
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17080              		.loc 1 568 32 view .LVU6080
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17081              		.loc 1 568 25 view .LVU6081
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17082              		.loc 1 568 25 is_stmt 0 view .LVU6082
 17083              	.LBE790:
 17084              	.LBB791:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17085              		.loc 1 570 25 is_stmt 1 view .LVU6083
 571:sieve_extend.c ****     }
 17086              		.loc 1 571 13 view .LVU6084
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17087              		.loc 1 570 32 view .LVU6085
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17088              		.loc 1 570 25 view .LVU6086
 571:sieve_extend.c ****     }
 17089              		.loc 1 571 13 view .LVU6087
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17090              		.loc 1 570 32 view .LVU6088
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17091              		.loc 1 570 25 view .LVU6089
 571:sieve_extend.c ****     }
 17092              		.loc 1 571 13 view .LVU6090
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17093              		.loc 1 570 32 view .LVU6091
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17094              		.loc 1 570 25 view .LVU6092
 571:sieve_extend.c ****     }
 17095              		.loc 1 571 13 view .LVU6093
GAS LISTING /tmp/ccH5HMHD.s 			page 456


 17096              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17097              		.loc 1 571 22 is_stmt 0 view .LVU6094
 17098 5a1b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], 
 17098      07E00000 
 17098      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17099              		.loc 1 570 32 is_stmt 1 view .LVU6095
 17100              	.LVL1020:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17101              		.loc 1 570 25 view .LVU6096
 17102              	.LBE791:
 566:sieve_extend.c ****     {
 17103              		.loc 1 566 24 view .LVU6097
 566:sieve_extend.c ****     {
 17104              		.loc 1 566 12 view .LVU6098
 17105 5a24 48050001 		add	rax, 256	# ivtmp.717,
 17105      0000
 17106 5a2a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.714
 17107 5a2d 0F87C7FE 		ja	.L1519	#,
 17107      FFFF
 17108              	.L1559:
 17109 5a33 4589C3   		mov	r11d, r8d	# _25, _25
 17110 5a36 428D0495 		lea	eax, 0[0+r10*4]	# i,
 17110      00000000 
 17111 5a3e 4983C301 		add	r11, 1	# tmp140,
 17112 5a42 49C1E305 		sal	r11, 5	# _105,
 17113 5a46 4C01DF   		add	rdi, r11	# dst, _105
 17114 5a49 4C01DE   		add	rsi, r11	# src, _105
 17115 5a4c C5F877   		vzeroupper
 17116              	.LVL1021:
 17117              	.L1520:
 573:sieve_extend.c ****     {
 17118              		.loc 1 573 12 view .LVU6099
 17119              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17120              		.loc 1 573 5 is_stmt 0 view .LVU6100
 17121 5a4f 39C2     		cmp	edx, eax	# size, i
 17122 5a51 0F8E9400 		jle	.L1563	#,
 17122      0000
 17123              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17124              		.loc 1 575 35 view .LVU6101
 17125 5a57 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 17126 5a5b 41B84000 		mov	r8d, 64	# tmp142,
 17126      0000
 17127              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17128              		.loc 1 575 23 view .LVU6102
 17129 5a61 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 17129      0E
 17130 5a66 4129C8   		sub	r8d, ecx	# _97, shift
 575:sieve_extend.c ****     }    
 17131              		.loc 1 575 9 is_stmt 1 view .LVU6103
 17132              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17133              		.loc 1 575 43 is_stmt 0 view .LVU6104
GAS LISTING /tmp/ccH5HMHD.s 			page 457


 17134 5a69 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 17134      DA
 17135              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17136              		.loc 1 575 32 view .LVU6105
 17137 5a6e 4D09D9   		or	r9, r11	# tmp146, tmp145
 17138 5a71 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 573:sieve_extend.c ****     {
 17139              		.loc 1 573 22 is_stmt 1 view .LVU6106
 17140              	.LVL1022:
 573:sieve_extend.c ****     {
 17141              		.loc 1 573 12 view .LVU6107
 17142              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17143              		.loc 1 573 22 is_stmt 0 view .LVU6108
 17144 5a74 448D4801 		lea	r9d, 1[rax]	# i,
 17145              	.LVL1023:
 17146              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17147              		.loc 1 573 5 view .LVU6109
 17148 5a78 4439CA   		cmp	edx, r9d	# size, i
 17149 5a7b 7E6D     		jle	.L1560	#,
 575:sieve_extend.c ****     }    
 17150              		.loc 1 575 9 is_stmt 1 view .LVU6110
 17151              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17152              		.loc 1 575 35 is_stmt 0 view .LVU6111
 17153 5a7d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 17154              	.LVL1024:
 17155              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17156              		.loc 1 575 23 view .LVU6112
 17157 5a81 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 17157      D2
 17158              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17159              		.loc 1 575 43 view .LVU6113
 17160 5a86 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 17160      D9
 17161              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17162              		.loc 1 575 32 view .LVU6114
 17163 5a8b 4D09DA   		or	r10, r11	# tmp150, tmp149
 17164 5a8e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 573:sieve_extend.c ****     {
 17165              		.loc 1 573 22 is_stmt 1 view .LVU6115
 17166              	.LVL1025:
 573:sieve_extend.c ****     {
 17167              		.loc 1 573 12 view .LVU6116
 17168              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17169              		.loc 1 573 22 is_stmt 0 view .LVU6117
 17170 5a92 448D5002 		lea	r10d, 2[rax]	# i,
 17171              	.LVL1026:
 17172              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17173              		.loc 1 573 5 view .LVU6118
GAS LISTING /tmp/ccH5HMHD.s 			page 458


 17174 5a96 4439D2   		cmp	edx, r10d	# size, i
 17175 5a99 7E4F     		jle	.L1560	#,
 575:sieve_extend.c ****     }    
 17176              		.loc 1 575 9 is_stmt 1 view .LVU6119
 17177              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17178              		.loc 1 575 35 is_stmt 0 view .LVU6120
 17179 5a9b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 17180              	.LVL1027:
 17181              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17182              		.loc 1 575 23 view .LVU6121
 17183 5a9f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 17183      C9
 17184              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17185              		.loc 1 575 43 view .LVU6122
 17186 5aa4 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 17186      DA
 17187              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17188              		.loc 1 575 32 view .LVU6123
 17189 5aa9 4D09D9   		or	r9, r11	# tmp154, tmp153
 17190 5aac 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 573:sieve_extend.c ****     {
 17191              		.loc 1 573 22 is_stmt 1 view .LVU6124
 17192              	.LVL1028:
 573:sieve_extend.c ****     {
 17193              		.loc 1 573 12 view .LVU6125
 17194              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17195              		.loc 1 573 22 is_stmt 0 view .LVU6126
 17196 5ab0 448D4803 		lea	r9d, 3[rax]	# i,
 17197              	.LVL1029:
 17198              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17199              		.loc 1 573 5 view .LVU6127
 17200 5ab4 4439CA   		cmp	edx, r9d	# size, i
 17201 5ab7 7E31     		jle	.L1560	#,
 575:sieve_extend.c ****     }    
 17202              		.loc 1 575 9 is_stmt 1 view .LVU6128
 17203              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17204              		.loc 1 575 35 is_stmt 0 view .LVU6129
 17205 5ab9 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 17206              	.LVL1030:
 17207              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17208              		.loc 1 573 22 view .LVU6130
 17209 5abd 83C004   		add	eax, 4	# i,
 17210              	.LVL1031:
 17211              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17212              		.loc 1 575 23 view .LVU6131
 17213 5ac0 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 17213      D2
 17214              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 459


 575:sieve_extend.c ****     }    
 17215              		.loc 1 575 43 view .LVU6132
 17216 5ac5 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 17216      D9
 17217              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17218              		.loc 1 575 32 view .LVU6133
 17219 5aca 4D09DA   		or	r10, r11	# tmp158, tmp157
 17220              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17221              		.loc 1 573 5 view .LVU6134
 17222 5acd 39C2     		cmp	edx, eax	# size, i
 17223              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17224              		.loc 1 575 32 view .LVU6135
 17225 5acf 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 573:sieve_extend.c ****     {
 17226              		.loc 1 573 22 is_stmt 1 view .LVU6136
 17227              	.LVL1032:
 573:sieve_extend.c ****     {
 17228              		.loc 1 573 12 view .LVU6137
 17229              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 17230              		.loc 1 573 5 is_stmt 0 view .LVU6138
 17231 5ad3 7E15     		jle	.L1560	#,
 575:sieve_extend.c ****     }    
 17232              		.loc 1 575 9 is_stmt 1 discriminator 2 view .LVU6139
 17233              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17234              		.loc 1 575 43 is_stmt 0 discriminator 2 view .LVU6140
 17235 5ad5 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 17236              	.LVL1033:
 17237              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17238              		.loc 1 575 23 discriminator 2 view .LVU6141
 17239 5ad9 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 17239      C9
 17240              	.LVL1034:
 17241              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17242              		.loc 1 575 43 discriminator 2 view .LVU6142
 17243 5ade C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 17243      F2
 17244              	.LVL1035:
 17245              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 17246              		.loc 1 575 32 discriminator 2 view .LVU6143
 17247 5ae3 4809F1   		or	rcx, rsi	# tmp163, tmp160
 17248 5ae6 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 573:sieve_extend.c ****     {
 17249              		.loc 1 573 22 is_stmt 1 discriminator 2 view .LVU6144
 17250              	.LVL1036:
 573:sieve_extend.c ****     {
 17251              		.loc 1 573 12 discriminator 2 view .LVU6145
 17252              	.L1560:
 17253              	# sieve_extend.c:577: }
 577:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 460


 17254              		.loc 1 577 1 is_stmt 0 view .LVU6146
 17255 5aea C3       		ret	
 17256              	.LVL1037:
 17257              	.L1563:
 577:sieve_extend.c **** 
 17258              		.loc 1 577 1 view .LVU6147
 17259 5aeb C3       		ret	
 17260              	.LVL1038:
 17261              	.L1562:
 17262              	.LBB792:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17263              		.loc 1 568 25 is_stmt 1 view .LVU6148
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17264              		.loc 1 569 13 view .LVU6149
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17265              		.loc 1 568 32 view .LVU6150
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17266              		.loc 1 568 25 view .LVU6151
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17267              		.loc 1 569 13 view .LVU6152
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17268              		.loc 1 568 32 view .LVU6153
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17269              		.loc 1 568 25 view .LVU6154
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17270              		.loc 1 569 13 view .LVU6155
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17271              		.loc 1 568 32 view .LVU6156
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17272              		.loc 1 568 25 view .LVU6157
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17273              		.loc 1 569 13 view .LVU6158
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17274              		.loc 1 568 32 view .LVU6159
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17275              		.loc 1 568 25 view .LVU6160
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17276              		.loc 1 568 25 is_stmt 0 view .LVU6161
 17277              	.LBE792:
 17278              	.LBB793:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17279              		.loc 1 570 25 is_stmt 1 view .LVU6162
 571:sieve_extend.c ****     }
 17280              		.loc 1 571 13 view .LVU6163
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17281              		.loc 1 570 32 view .LVU6164
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17282              		.loc 1 570 25 view .LVU6165
 571:sieve_extend.c ****     }
 17283              		.loc 1 571 13 view .LVU6166
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17284              		.loc 1 570 32 view .LVU6167
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17285              		.loc 1 570 25 view .LVU6168
 571:sieve_extend.c ****     }
 17286              		.loc 1 571 13 view .LVU6169
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccH5HMHD.s 			page 461


 17287              		.loc 1 570 32 view .LVU6170
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17288              		.loc 1 570 25 view .LVU6171
 571:sieve_extend.c ****     }
 17289              		.loc 1 571 13 view .LVU6172
 17290              	.LBE793:
 17291              	.LBB794:
 17292              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17293              		.loc 1 569 25 is_stmt 0 view .LVU6173
 17294 5aec C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.703, MEM[base: src_35(D), index: ivtmp.717_114, o
 17294      7E2055
 17295 5af3 41B90200 		mov	r9d, 2	# ivtmp.714,
 17295      0000
 17296              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17297              		.loc 1 569 34 view .LVU6174
 17298 5af9 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.717_114, offset: 0B]
 17298      20
 17299 5afe B8400000 		mov	eax, 64	# ivtmp.717,
 17299      00
 17300              	.LBE794:
 17301              	.LBB795:
 17302              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17303              		.loc 1 571 34 view .LVU6175
 17304 5b03 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.704, vect__102.703, _4
 17305              	.LBE795:
 17306              	.LBB796:
 17307              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17308              		.loc 1 569 34 view .LVU6176
 17309 5b07 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.708, tmp278, shift
 17310              	.LBE796:
 17311              	.LBB797:
 17312              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 17313              		.loc 1 571 22 view .LVU6177
 17314 5b0b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.709, vect__57.704, vect__104.708
 17314      DA
 17315 5b10 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.717_114, offset: 0B], vect_
 17315      20
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17316              		.loc 1 570 32 is_stmt 1 view .LVU6178
 17317              	.LVL1039:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17318              		.loc 1 570 25 view .LVU6179
 17319              	.LBE797:
 566:sieve_extend.c ****     {
 17320              		.loc 1 566 24 view .LVU6180
 566:sieve_extend.c ****     {
 17321              		.loc 1 566 12 view .LVU6181
 17322 5b15 E9F6FCFF 		jmp	.L1551	#
 17322      FF
 17323              	.LVL1040:
 17324              	.L1561:
 17325              	# sieve_extend.c:564:     int i = 0;
GAS LISTING /tmp/ccH5HMHD.s 			page 462


 564:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 17326              		.loc 1 564 9 is_stmt 0 view .LVU6182
 17327 5b1a 31C0     		xor	eax, eax	# i
 17328 5b1c E92EFFFF 		jmp	.L1520	#
 17328      FF
 17329              		.cfi_endproc
 17330              	.LFE66:
 17332              		.section	.rodata.str1.8,"aMS",@progbits,1
 17333              		.align 8
 17334              	.LC9:
 17335 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 17335      6C743A20 
 17335      53696576 
 17335      6573697A 
 17335      6520256A 
 17336 0055 000000   		.align 8
 17337              	.LC10:
 17338 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 17338      616C6964 
 17338      20726573 
 17338      756C742E 
 17338      20536965 
 17339              		.section	.rodata.str1.1
 17340              	.LC11:
 17341 0023 44656570 		.string	"DeepAnalyzing"
 17341      416E616C 
 17341      797A696E 
 17341      6700
 17342              		.section	.rodata.str1.8
 17343 00bb 00000000 		.align 8
 17343      00
 17344              	.LC12:
 17345 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 17345      65722025 
 17345      6A752028 
 17345      256A7529 
 17345      20776173 
 17346              		.align 8
 17347              	.LC13:
 17348 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 17348      65722025 
 17348      6A752028 
 17348      256A7529 
 17348      20776173 
 17349              		.text
 17350 5b21 66662E0F 		.p2align 4
 17350      1F840000 
 17350      0000000F 
 17350      1F4000
 17351              		.globl	validatePrimeCount
 17353              	validatePrimeCount:
 17354              	.LVL1041:
 17355              	.LFB79:
1039:sieve_extend.c **** 
 17356              		.loc 1 1039 76 is_stmt 1 view -0
 17357              		.cfi_startproc
1039:sieve_extend.c **** 
GAS LISTING /tmp/ccH5HMHD.s 			page 463


 17358              		.loc 1 1039 76 is_stmt 0 view .LVU6184
 17359 5b30 F30F1EFA 		endbr64	
1041:sieve_extend.c ****     counter_t valid_primes = 0;
 17360              		.loc 1 1041 5 is_stmt 1 view .LVU6185
 17361              	# sieve_extend.c:1039: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1039:sieve_extend.c **** 
 17362              		.loc 1 1039 76 is_stmt 0 view .LVU6186
 17363 5b34 4157     		push	r15	#
 17364              		.cfi_def_cfa_offset 16
 17365              		.cfi_offset 15, -16
 17366 5b36 4156     		push	r14	#
 17367              		.cfi_def_cfa_offset 24
 17368              		.cfi_offset 14, -24
 17369 5b38 4155     		push	r13	#
 17370              		.cfi_def_cfa_offset 32
 17371              		.cfi_offset 13, -32
 17372 5b3a 4154     		push	r12	#
 17373              		.cfi_def_cfa_offset 40
 17374              		.cfi_offset 12, -40
 17375 5b3c 55       		push	rbp	#
 17376              		.cfi_def_cfa_offset 48
 17377              		.cfi_offset 6, -48
 17378 5b3d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 17379 5b40 53       		push	rbx	#
 17380              		.cfi_def_cfa_offset 56
 17381              		.cfi_offset 3, -56
 17382 5b41 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 17383 5b43 488D6424 		lea	rsp, -56[rsp]	#,
 17383      C8
 17384              		.cfi_def_cfa_offset 112
 17385              	# sieve_extend.c:1041:     counter_t primecount = count_primes(sieve);
1041:sieve_extend.c ****     counter_t valid_primes = 0;
 17386              		.loc 1 1041 28 view .LVU6187
 17387 5b48 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 17388 5b4b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 17389              	.LVL1042:
 17390              	.LBB819:
 17391              	.LBI819:
1010:sieve_extend.c ****     counter_t primeCount = 1;
 17392              		.loc 1 1010 18 is_stmt 1 view .LVU6188
 17393              	.LBB820:
 17394              	.LBB821:
1012:sieve_extend.c ****     return primeCount;
 17395              		.loc 1 1012 30 view .LVU6189
 17396 5b4f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 17397              	# sieve_extend.c:1012:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1012:sieve_extend.c ****     return primeCount;
 17398              		.loc 1 1012 5 is_stmt 0 view .LVU6190
 17399 5b53 4883FF01 		cmp	rdi, 1	# _25,
 17400 5b57 0F860B05 		jbe	.L1565	#,
 17400      0000
 17401              	# sieve_extend.c:1012:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1012:sieve_extend.c ****     return primeCount;
 17402              		.loc 1 1012 20 view .LVU6191
 17403 5b5d B8010000 		mov	eax, 1	# factor,
 17403      00
 17404              	.LBE821:
GAS LISTING /tmp/ccH5HMHD.s 			page 464


 17405              	# sieve_extend.c:1011:     counter_t primeCount = 1;
1011:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 17406              		.loc 1 1011 15 view .LVU6192
 17407 5b62 41B80100 		mov	r8d, 1	# primeCount,
 17407      0000
 17408              	.LVL1043:
 17409 5b68 0F1F8400 		.p2align 4
 17409      00000000 
 17410              		.p2align 3
 17411              	.L1568:
 17412              	.LBB824:
1012:sieve_extend.c ****     return primeCount;
 17413              		.loc 1 1012 104 is_stmt 1 view .LVU6193
 17414              	# sieve_extend.c:1012:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1012:sieve_extend.c ****     return primeCount;
 17415              		.loc 1 1012 114 is_stmt 0 view .LVU6194
 17416 5b70 4983C001 		add	r8, 1	# primeCount,
 17417              	.LVL1044:
1012:sieve_extend.c ****     return primeCount;
 17418              		.loc 1 1012 52 is_stmt 1 view .LVU6195
 17419              	# sieve_extend.c:1012:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1012:sieve_extend.c ****     return primeCount;
 17420              		.loc 1 1012 61 is_stmt 0 view .LVU6196
 17421 5b74 4883C001 		add	rax, 1	# factor,
 17422              	.LVL1045:
 17423              	.L1708:
 17424              	.LBB822:
 17425              	.LBI822:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 17426              		.loc 1 121 25 is_stmt 1 view .LVU6197
 17427              	.LBB823:
 122:sieve_extend.c ****     return index;
 17428              		.loc 1 122 5 view .LVU6198
 122:sieve_extend.c ****     return index;
 17429              		.loc 1 122 11 view .LVU6199
 17430              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17431              		.loc 1 122 21 is_stmt 0 view .LVU6200
 17432 5b78 4889C1   		mov	rcx, rax	# tmp162, factor
 17433 5b7b 48C1E906 		shr	rcx, 6	# tmp162,
 17434              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17435              		.loc 1 122 12 view .LVU6201
 17436 5b7f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 17437              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17438              		.loc 1 122 11 view .LVU6202
 17439 5b83 490FA3C3 		bt	r11, rax	# *_106, factor
 17440 5b87 0F83AB00 		jnc	.L1566	#,
 17440      0000
 122:sieve_extend.c ****     return index;
 17441              		.loc 1 122 58 is_stmt 1 view .LVU6203
 17442              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17443              		.loc 1 122 63 is_stmt 0 view .LVU6204
 17444 5b8d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 17445              	.LVL1046:
GAS LISTING /tmp/ccH5HMHD.s 			page 465


 17446              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17447              		.loc 1 122 21 view .LVU6205
 17448 5b91 4D89E5   		mov	r13, r12	# tmp167, factor
 17449              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17450              		.loc 1 122 63 view .LVU6206
 17451 5b94 4C89E0   		mov	rax, r12	# factor, tmp235
 122:sieve_extend.c ****     return index;
 17452              		.loc 1 122 11 is_stmt 1 view .LVU6207
 17453              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17454              		.loc 1 122 21 is_stmt 0 view .LVU6208
 17455 5b97 49C1ED06 		shr	r13, 6	# tmp167,
 17456              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17457              		.loc 1 122 12 view .LVU6209
 17458 5b9b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 17459              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17460              		.loc 1 122 11 view .LVU6210
 17461 5b9f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 17462 5ba3 0F838F00 		jnc	.L1566	#,
 17462      0000
 122:sieve_extend.c ****     return index;
 17463              		.loc 1 122 58 is_stmt 1 view .LVU6211
 17464              	.LVL1047:
 17465              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17466              		.loc 1 122 63 is_stmt 0 view .LVU6212
 17467 5ba9 4883C001 		add	rax, 1	# factor,
 17468              	.LVL1048:
 122:sieve_extend.c ****     return index;
 17469              		.loc 1 122 11 is_stmt 1 view .LVU6213
 17470              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17471              		.loc 1 122 21 is_stmt 0 view .LVU6214
 17472 5bad 4989C6   		mov	r14, rax	# tmp279, factor
 17473 5bb0 49C1EE06 		shr	r14, 6	# tmp279,
 17474              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17475              		.loc 1 122 12 view .LVU6215
 17476 5bb4 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 17477              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17478              		.loc 1 122 11 view .LVU6216
 17479 5bb8 480FA3C6 		bt	rsi, rax	# *_35, factor
 17480 5bbc 737A     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17481              		.loc 1 122 58 is_stmt 1 view .LVU6217
 17482              	.LVL1049:
 17483              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17484              		.loc 1 122 63 is_stmt 0 view .LVU6218
 17485 5bbe 498D4424 		lea	rax, 2[r12]	# factor,
 17485      02
 17486              	.LVL1050:
GAS LISTING /tmp/ccH5HMHD.s 			page 466


 122:sieve_extend.c ****     return index;
 17487              		.loc 1 122 11 is_stmt 1 view .LVU6219
 17488              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17489              		.loc 1 122 21 is_stmt 0 view .LVU6220
 17490 5bc3 4989C2   		mov	r10, rax	# tmp283, factor
 17491 5bc6 49C1EA06 		shr	r10, 6	# tmp283,
 17492              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17493              		.loc 1 122 12 view .LVU6221
 17494 5bca 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 17495              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17496              		.loc 1 122 11 view .LVU6222
 17497 5bce 480FA3C1 		bt	rcx, rax	# *_35, factor
 17498 5bd2 7364     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17499              		.loc 1 122 58 is_stmt 1 view .LVU6223
 17500              	.LVL1051:
 17501              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17502              		.loc 1 122 63 is_stmt 0 view .LVU6224
 17503 5bd4 498D4424 		lea	rax, 3[r12]	# factor,
 17503      03
 17504              	.LVL1052:
 122:sieve_extend.c ****     return index;
 17505              		.loc 1 122 11 is_stmt 1 view .LVU6225
 17506              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17507              		.loc 1 122 21 is_stmt 0 view .LVU6226
 17508 5bd9 4989C3   		mov	r11, rax	# tmp287, factor
 17509 5bdc 49C1EB06 		shr	r11, 6	# tmp287,
 17510              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17511              		.loc 1 122 12 view .LVU6227
 17512 5be0 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 17513              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17514              		.loc 1 122 11 view .LVU6228
 17515 5be4 490FA3C5 		bt	r13, rax	# *_35, factor
 17516 5be8 734E     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17517              		.loc 1 122 58 is_stmt 1 view .LVU6229
 17518              	.LVL1053:
 17519              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17520              		.loc 1 122 63 is_stmt 0 view .LVU6230
 17521 5bea 498D4424 		lea	rax, 4[r12]	# factor,
 17521      04
 17522              	.LVL1054:
 122:sieve_extend.c ****     return index;
 17523              		.loc 1 122 11 is_stmt 1 view .LVU6231
 17524              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17525              		.loc 1 122 21 is_stmt 0 view .LVU6232
 17526 5bef 4989C7   		mov	r15, rax	# tmp291, factor
 17527 5bf2 49C1EF06 		shr	r15, 6	# tmp291,
GAS LISTING /tmp/ccH5HMHD.s 			page 467


 17528              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17529              		.loc 1 122 12 view .LVU6233
 17530 5bf6 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17531              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17532              		.loc 1 122 11 view .LVU6234
 17533 5bfa 490FA3C6 		bt	r14, rax	# *_35, factor
 17534 5bfe 7338     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17535              		.loc 1 122 58 is_stmt 1 view .LVU6235
 17536              	.LVL1055:
 17537              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17538              		.loc 1 122 63 is_stmt 0 view .LVU6236
 17539 5c00 498D4424 		lea	rax, 5[r12]	# factor,
 17539      05
 17540              	.LVL1056:
 122:sieve_extend.c ****     return index;
 17541              		.loc 1 122 11 is_stmt 1 view .LVU6237
 17542              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17543              		.loc 1 122 21 is_stmt 0 view .LVU6238
 17544 5c05 4889C6   		mov	rsi, rax	# tmp295, factor
 17545 5c08 48C1EE06 		shr	rsi, 6	# tmp295,
 17546              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17547              		.loc 1 122 12 view .LVU6239
 17548 5c0c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17549              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17550              		.loc 1 122 11 view .LVU6240
 17551 5c10 490FA3C2 		bt	r10, rax	# *_35, factor
 17552 5c14 7322     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17553              		.loc 1 122 58 is_stmt 1 view .LVU6241
 17554              	.LVL1057:
 17555              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17556              		.loc 1 122 63 is_stmt 0 view .LVU6242
 17557 5c16 498D4424 		lea	rax, 6[r12]	# factor,
 17557      06
 17558              	.LVL1058:
 122:sieve_extend.c ****     return index;
 17559              		.loc 1 122 11 is_stmt 1 view .LVU6243
 17560              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17561              		.loc 1 122 21 is_stmt 0 view .LVU6244
 17562 5c1b 4889C1   		mov	rcx, rax	# tmp299, factor
 17563 5c1e 48C1E906 		shr	rcx, 6	# tmp299,
 17564              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17565              		.loc 1 122 12 view .LVU6245
 17566 5c22 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17567              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17568              		.loc 1 122 11 view .LVU6246
GAS LISTING /tmp/ccH5HMHD.s 			page 468


 17569 5c26 490FA3C3 		bt	r11, rax	# *_35, factor
 17570 5c2a 730C     		jnc	.L1566	#,
 122:sieve_extend.c ****     return index;
 17571              		.loc 1 122 58 is_stmt 1 view .LVU6247
 17572              	.LVL1059:
 17573              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17574              		.loc 1 122 63 is_stmt 0 view .LVU6248
 17575 5c2c 498D4424 		lea	rax, 7[r12]	# factor,
 17575      07
 17576              	.LVL1060:
 122:sieve_extend.c ****     return index;
 17577              		.loc 1 122 11 is_stmt 1 view .LVU6249
 17578 5c31 E942FFFF 		jmp	.L1708	#
 17578      FF
 17579              		.p2align 4,,7
 17580 5c36 6690     		.p2align 3
 17581              	.L1566:
 17582              	.LVL1061:
 122:sieve_extend.c ****     return index;
 17583              		.loc 1 122 11 is_stmt 0 view .LVU6250
 17584              	.LBE823:
 17585              	.LBE822:
1012:sieve_extend.c ****     return primeCount;
 17586              		.loc 1 1012 30 is_stmt 1 view .LVU6251
 17587              	# sieve_extend.c:1012:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1012:sieve_extend.c ****     return primeCount;
 17588              		.loc 1 1012 5 is_stmt 0 view .LVU6252
 17589 5c38 4839C7   		cmp	rdi, rax	# _25, factor
 17590 5c3b 0F872FFF 		ja	.L1568	#,
 17590      FFFF
1012:sieve_extend.c ****     return primeCount;
 17591              		.loc 1 1012 5 view .LVU6253
 17592              	.LBE824:
1013:sieve_extend.c **** }
 17593              		.loc 1 1013 5 is_stmt 1 view .LVU6254
 17594              	.LVL1062:
1013:sieve_extend.c **** }
 17595              		.loc 1 1013 5 is_stmt 0 view .LVU6255
 17596              	.LBE820:
 17597              	.LBE819:
1042:sieve_extend.c ****     switch(sieve->size) {
 17598              		.loc 1 1042 5 is_stmt 1 view .LVU6256
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17599              		.loc 1 1043 5 view .LVU6257
 17600 5c41 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17601 5c44 0F9FC2   		setg	dl	#, tmp172
 17602 5c47 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17602      860100
 17603 5c4e 0F842D06 		je	.L1569	#,
 17603      0000
 17604 5c54 0F86CC02 		jbe	.L1709	#,
 17604      0000
 17605 5c5a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17605      E1F505
 17606 5c61 0F84D905 		je	.L1577	#,
 17606      0000
GAS LISTING /tmp/ccH5HMHD.s 			page 469


 17607              		.p2align 4,,4
 17608 5c67 0F863303 		jbe	.L1710	#,
 17608      0000
 17609 5c6d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17609      CA9A3B
 17610 5c74 0F85EB05 		jne	.L1575	#,
 17610      0000
 17611 5c7a 4981F82E 		cmp	r8, 50847534	# primeCount,
 17611      DF0703
 17612              	# sieve_extend.c:1052:         case 1000000000:    valid_primes = 50847534; break;
1052:sieve_extend.c ****         default:            valid_primes= 0;
 17613              		.loc 1 1052 42 is_stmt 0 view .LVU6258
 17614 5c81 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17614      03
 17615 5c86 410F94C4 		sete	r12b	#, tmp189
 17616 5c8a 4421E2   		and	edx, r12d	# _251, tmp189
 17617 5c8d 4981F82E 		cmp	r8, 50847534	# primeCount,
 17617      DF0703
 17618 5c94 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17619 5c98 410F95C6 		setne	r14b	#, _135
1052:sieve_extend.c ****         default:            valid_primes= 0;
 17620              		.loc 1 1052 29 is_stmt 1 view .LVU6259
 17621              	.LVL1063:
1052:sieve_extend.c ****         default:            valid_primes= 0;
 17622              		.loc 1 1052 54 view .LVU6260
 17623 5c9c 0F1F4000 		.p2align 4
 17624              		.p2align 3
 17625              	.L1582:
1056:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17626              		.loc 1 1056 5 view .LVU6261
1057:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17627              		.loc 1 1057 5 view .LVU6262
 17628              	# sieve_extend.c:1057:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1057:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17629              		.loc 1 1057 8 is_stmt 0 view .LVU6263
 17630 5ca0 84D2     		test	dl, dl	# _251
 17631 5ca2 0F841704 		je	.L1583	#,
 17631      0000
1057:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17632              		.loc 1 1057 45 is_stmt 1 discriminator 1 view .LVU6264
 17633              	.LVL1064:
 17634              	.LBB826:
 17635              	.LBI826:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17636              		.loc 3 105 1 discriminator 1 view .LVU6265
 17637              	.LBB827:
 17638              		.loc 3 107 3 discriminator 1 view .LVU6266
 17639              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17640              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6267
 17641 5ca8 4C89CA   		mov	rdx, r9	#, pretmp_199
 17642 5cab 488D3500 		lea	rsi, .LC9[rip]	#,
 17642      000000
 17643 5cb2 BF010000 		mov	edi, 1	#,
 17643      00
 17644 5cb7 31C0     		xor	eax, eax	#
 17645 5cb9 E8000000 		call	__printf_chk@PLT	#
 17645      00
GAS LISTING /tmp/ccH5HMHD.s 			page 470


 17646              	.LVL1065:
 17647              		.loc 3 107 10 discriminator 1 view .LVU6268
 17648              	.LBE827:
 17649              	.LBE826:
1058:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17650              		.loc 1 1058 5 is_stmt 1 discriminator 1 view .LVU6269
 17651              	.L1584:
1062:sieve_extend.c ****     return (valid);
 17652              		.loc 1 1062 5 view .LVU6270
 17653              	# sieve_extend.c:1062:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1062:sieve_extend.c ****     return (valid);
 17654              		.loc 1 1062 8 is_stmt 0 view .LVU6271
 17655 5cbe 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17656 5cc1 0F8E4C02 		jle	.L1564	#,
 17656      0000
 17657 5cc7 4584F6   		test	r14b, r14b	# _135
 17658 5cca 0F844302 		je	.L1564	#,
 17658      0000
1062:sieve_extend.c ****     return (valid);
 17659              		.loc 1 1062 45 is_stmt 1 discriminator 1 view .LVU6272
 17660              	.LBB828:
 17661              	.LBI828:
1016:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17662              		.loc 1 1016 13 discriminator 1 view .LVU6273
 17663              	.LVL1066:
 17664              	.LBB829:
1017:sieve_extend.c ****     counter_t warn_prime = 0;
 17665              		.loc 1 1017 5 discriminator 1 view .LVU6274
 17666              	.LBB830:
 17667              	.LBI830:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17668              		.loc 3 105 1 discriminator 1 view .LVU6275
 17669              	.LBB831:
 17670              		.loc 3 107 3 discriminator 1 view .LVU6276
 17671              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17672              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6277
 17673 5cd0 488D3D00 		lea	rdi, .LC11[rip]	#,
 17673      000000
 17674 5cd7 E8000000 		call	puts@PLT	#
 17674      00
 17675              	.LVL1067:
 17676              		.loc 3 107 10 discriminator 1 view .LVU6278
 17677              	.LBE831:
 17678              	.LBE830:
1018:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17679              		.loc 1 1018 5 is_stmt 1 discriminator 1 view .LVU6279
1019:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17680              		.loc 1 1019 5 discriminator 1 view .LVU6280
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17681              		.loc 1 1020 5 discriminator 1 view .LVU6281
 17682              	.LBB832:
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17683              		.loc 1 1020 10 discriminator 1 view .LVU6282
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17684              		.loc 1 1020 31 discriminator 1 view .LVU6283
 17685              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccH5HMHD.s 			page 471


 17686              		.loc 1 1020 44 is_stmt 0 discriminator 1 view .LVU6284
 17687 5cdc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17688              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17689              		.loc 1 1020 5 discriminator 1 view .LVU6285
 17690 5ce0 4883FF01 		cmp	rdi, 1	# _137,
 17691 5ce4 0F862902 		jbe	.L1564	#,
 17691      0000
 17692              	.LBB833:
 17693              	.LBB834:
 17694              	.LBB835:
 17695              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17696              		.loc 3 107 10 view .LVU6286
 17697 5cea 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 17697      24
 17698              	.LBE835:
 17699              	.LBE834:
 17700              	.LBE833:
 17701              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17702              		.loc 1 1020 5 view .LVU6287
 17703 5cef 41BE0200 		mov	r14d, 2	# ivtmp.750,
 17703      0000
 17704 5cf5 41BC0300 		mov	r12d, 3	# ivtmp.748,
 17704      0000
 17705              	.LBE832:
 17706              	# sieve_extend.c:1018:     counter_t warn_prime = 0;
1018:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17707              		.loc 1 1018 15 view .LVU6288
 17708 5cfb 4531C0   		xor	r8d, r8d	# warn_prime
 17709              	# sieve_extend.c:1019:     counter_t warn_nonprime = 0;
1019:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17710              		.loc 1 1019 15 view .LVU6289
 17711 5cfe 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 17711      18000000 
 17711      00
 17712              	.LBB854:
 17713              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17714              		.loc 1 1020 20 view .LVU6290
 17715 5d07 41BF0100 		mov	r15d, 1	# prime,
 17715      0000
 17716              	.LBB842:
 17717              	.LBB839:
 17718              	.LBB836:
 17719              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17720              		.loc 3 107 10 view .LVU6291
 17721 5d0d 4989ED   		mov	r13, rbp	# sieve, sieve
 17722              	.LVL1068:
 17723              		.p2align 4
 17724              		.p2align 3
 17725              	.L1594:
 17726              		.loc 3 107 10 view .LVU6292
 17727              	.LBE836:
 17728              	.LBE839:
 17729              	.LBE842:
1021:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccH5HMHD.s 			page 472


 17730              		.loc 1 1021 9 is_stmt 1 view .LVU6293
 17731              	# sieve_extend.c:1021:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1021:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17732              		.loc 1 1021 29 is_stmt 0 view .LVU6294
 17733 5d10 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 17734              	# sieve_extend.c:1021:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1021:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17735              		.loc 1 1021 30 view .LVU6295
 17736 5d14 4C89FB   		mov	rbx, r15	# tmp198, prime
 17737 5d17 48C1EB06 		shr	rbx, 6	# tmp198,
 17738              	# sieve_extend.c:1021:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1021:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17739              		.loc 1 1021 71 view .LVU6296
 17740 5d1b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 17740      00
 17741 5d20 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 17741      C9
 17742              	# sieve_extend.c:1021:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1021:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17743              		.loc 1 1021 12 view .LVU6297
 17744 5d25 83E101   		and	ecx, 1	# c,
 17745 5d28 0F84BA02 		je	.L1586	#,
 17745      0000
 17746              	.LVL1069:
 17747              	.LBB843:
 17748              	.LBB844:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17749              		.loc 1 1030 32 is_stmt 1 view .LVU6298
 17750              	.LBE844:
 17751              	# sieve_extend.c:1029:             counter_t c_prime = 0;
1029:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17752              		.loc 1 1029 23 is_stmt 0 view .LVU6299
 17753 5d2e 31ED     		xor	ebp, ebp	# c_prime
 17754              	.LBB845:
 17755              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17756              		.loc 1 1030 13 view .LVU6300
 17757 5d30 4885FF   		test	rdi, rdi	# _137
 17758 5d33 BE030000 		mov	esi, 3	# ivtmp.740,
 17758      00
 17759 5d38 0F84E103 		je	.L1698	#,
 17759      0000
 17760 5d3e 4989FB   		mov	r11, rdi	# tmp231, _137
 17761 5d41 4929CB   		sub	r11, rcx	# tmp231, c
 17762 5d44 4183E303 		and	r11d, 3	# tmp231,
 17763 5d48 4D89DA   		mov	r10, r11	# tmp232, tmp231
 17764 5d4b 0F84BF00 		je	.L1587	#,
 17764      0000
 17765              	.LVL1070:
1031:sieve_extend.c ****             }
 17766              		.loc 1 1031 17 is_stmt 1 view .LVU6301
 17767              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17768              		.loc 1 1031 48 is_stmt 0 view .LVU6302
 17769 5d51 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 17770 5d55 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.750
 17771 5d58 7411     		je	.L1639	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 473


 17772              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17773              		.loc 1 1031 33 view .LVU6303
 17774 5d5a 31D2     		xor	edx, edx	# tmp241
 17775 5d5c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.748
 17776 5d5f 48F7F6   		div	rsi	# ivtmp.740
 17777              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17778              		.loc 1 1031 82 view .LVU6304
 17779 5d62 31ED     		xor	ebp, ebp	# c_prime
1031:sieve_extend.c ****             }
 17780              		.loc 1 1031 82 view .LVU6305
 17781 5d64 4885D2   		test	rdx, rdx	# tmp241
 17782 5d67 400F94C5 		sete	bpl	#, c_prime
 17783              	.LVL1071:
 17784              	.L1639:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17785              		.loc 1 1030 68 is_stmt 1 view .LVU6306
 17786              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17787              		.loc 1 1030 69 is_stmt 0 view .LVU6307
 17788 5d6b 4883C101 		add	rcx, 1	# c,
 17789              	.LVL1072:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17790              		.loc 1 1030 32 is_stmt 1 view .LVU6308
 17791              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17792              		.loc 1 1030 13 is_stmt 0 view .LVU6309
 17793 5d6f 4839F9   		cmp	rcx, rdi	# c, _137
 17794 5d72 0F877801 		ja	.L1593	#,
 17794      0000
 17795              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17796              		.loc 1 1030 51 view .LVU6310
 17797 5d78 4989C9   		mov	r9, rcx	# tmp244, c
 17798 5d7b BE050000 		mov	esi, 5	# ivtmp.740,
 17798      00
 17799 5d80 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 17800              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17801              		.loc 1 1030 47 view .LVU6311
 17802 5d84 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.748
 17803 5d87 0F876301 		ja	.L1593	#,
 17803      0000
 17804 5d8d 4983FA01 		cmp	r10, 1	# tmp232,
 17805 5d91 747D     		je	.L1587	#,
 17806 5d93 4983FA02 		cmp	r10, 2	# tmp232,
 17807 5d97 7438     		je	.L1670	#,
1031:sieve_extend.c ****             }
 17808              		.loc 1 1031 17 is_stmt 1 view .LVU6312
 17809              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17810              		.loc 1 1031 48 is_stmt 0 view .LVU6313
 17811 5d99 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 17812 5d9d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.750
 17813 5da0 7417     		je	.L1641	#,
 17814              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
GAS LISTING /tmp/ccH5HMHD.s 			page 474


1031:sieve_extend.c ****             }
 17815              		.loc 1 1031 33 view .LVU6314
 17816 5da2 31D2     		xor	edx, edx	# tmp247
 17817 5da4 4C89E0   		mov	rax, r12	# tmp248, ivtmp.748
 17818 5da7 48F7F6   		div	rsi	# ivtmp.740
 17819              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17820              		.loc 1 1031 20 view .LVU6315
 17821 5daa 4885D2   		test	rdx, rdx	# tmp247
 17822 5dad 410F94C3 		sete	r11b	#, tmp249
 17823              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17824              		.loc 1 1031 82 view .LVU6316
 17825 5db1 4180FB01 		cmp	r11b, 1	# tmp249,
 17826 5db5 4883DDFF 		sbb	rbp, -1	# c_prime,
 17827              	.LVL1073:
 17828              	.L1641:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17829              		.loc 1 1030 68 is_stmt 1 view .LVU6317
 17830              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17831              		.loc 1 1030 69 is_stmt 0 view .LVU6318
 17832 5db9 4883C101 		add	rcx, 1	# c,
 17833              	.LVL1074:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17834              		.loc 1 1030 32 is_stmt 1 view .LVU6319
 17835 5dbd 4883C602 		add	rsi, 2	# ivtmp.740,
 17836              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17837              		.loc 1 1030 51 is_stmt 0 view .LVU6320
 17838 5dc1 4989CA   		mov	r10, rcx	# tmp250, c
 17839 5dc4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 17840              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17841              		.loc 1 1030 47 view .LVU6321
 17842 5dc8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.748
 17843 5dcb 0F871F01 		ja	.L1593	#,
 17843      0000
 17844              	.L1670:
1031:sieve_extend.c ****             }
 17845              		.loc 1 1031 17 is_stmt 1 view .LVU6322
 17846              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17847              		.loc 1 1031 48 is_stmt 0 view .LVU6323
 17848 5dd1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 17849 5dd5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.750
 17850 5dd8 7415     		je	.L1644	#,
 17851              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17852              		.loc 1 1031 33 view .LVU6324
 17853 5dda 31D2     		xor	edx, edx	# tmp253
 17854 5ddc 4C89E0   		mov	rax, r12	# tmp254, ivtmp.748
 17855 5ddf 48F7F6   		div	rsi	# ivtmp.740
 17856              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17857              		.loc 1 1031 20 view .LVU6325
 17858 5de2 4885D2   		test	rdx, rdx	# tmp253
GAS LISTING /tmp/ccH5HMHD.s 			page 475


 17859 5de5 0F94C3   		sete	bl	#, tmp255
 17860              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17861              		.loc 1 1031 82 view .LVU6326
 17862 5de8 80FB01   		cmp	bl, 1	# tmp255,
 17863 5deb 4883DDFF 		sbb	rbp, -1	# c_prime,
 17864              	.LVL1075:
 17865              	.L1644:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17866              		.loc 1 1030 68 is_stmt 1 view .LVU6327
 17867              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17868              		.loc 1 1030 69 is_stmt 0 view .LVU6328
 17869 5def 4883C101 		add	rcx, 1	# c,
 17870              	.LVL1076:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17871              		.loc 1 1030 32 is_stmt 1 view .LVU6329
 17872 5df3 4883C602 		add	rsi, 2	# ivtmp.740,
 17873              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17874              		.loc 1 1030 51 is_stmt 0 view .LVU6330
 17875 5df7 4989CB   		mov	r11, rcx	# tmp256, c
 17876 5dfa 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 17877              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17878              		.loc 1 1030 47 view .LVU6331
 17879 5dfe 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.748
 17880 5e01 0F87E900 		ja	.L1593	#,
 17880      0000
 17881              	.LVL1077:
 17882 5e07 660F1F84 		.p2align 4
 17882      00000000 
 17882      00
 17883              		.p2align 3
 17884              	.L1587:
1031:sieve_extend.c ****             }
 17885              		.loc 1 1031 17 is_stmt 1 view .LVU6332
 17886              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17887              		.loc 1 1031 48 is_stmt 0 view .LVU6333
 17888 5e10 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 17889 5e14 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.750
 17890 5e17 7417     		je	.L1592	#,
 17891              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17892              		.loc 1 1031 33 view .LVU6334
 17893 5e19 31D2     		xor	edx, edx	# tmp214
 17894 5e1b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.748
 17895 5e1e 48F7F6   		div	rsi	# ivtmp.740
 17896              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17897              		.loc 1 1031 20 view .LVU6335
 17898 5e21 4885D2   		test	rdx, rdx	# tmp214
 17899 5e24 410F94C1 		sete	r9b	#, tmp217
 17900              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17901              		.loc 1 1031 82 view .LVU6336
GAS LISTING /tmp/ccH5HMHD.s 			page 476


 17902 5e28 4180F901 		cmp	r9b, 1	# tmp217,
 17903 5e2c 4883DDFF 		sbb	rbp, -1	# c_prime,
 17904              	.LVL1078:
 17905              	.L1592:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17906              		.loc 1 1030 68 is_stmt 1 view .LVU6337
 17907              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17908              		.loc 1 1030 69 is_stmt 0 view .LVU6338
 17909 5e30 4883C101 		add	rcx, 1	# tmp234,
 17910              	.LVL1079:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17911              		.loc 1 1030 32 is_stmt 1 view .LVU6339
 17912              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17913              		.loc 1 1030 13 is_stmt 0 view .LVU6340
 17914 5e34 4839F9   		cmp	rcx, rdi	# tmp234, _137
 17915 5e37 0F87B300 		ja	.L1593	#,
 17915      0000
 17916              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17917              		.loc 1 1030 51 view .LVU6341
 17918 5e3d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 17919 5e40 4883C602 		add	rsi, 2	# tmp233,
 17920 5e44 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 17921              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17922              		.loc 1 1030 47 view .LVU6342
 17923 5e48 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.748
 17924 5e4b 0F879F00 		ja	.L1593	#,
 17924      0000
1031:sieve_extend.c ****             }
 17925              		.loc 1 1031 17 is_stmt 1 view .LVU6343
 17926              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17927              		.loc 1 1031 48 is_stmt 0 view .LVU6344
 17928 5e51 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 17929 5e55 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.750
 17930 5e58 7417     		je	.L1648	#,
 17931              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17932              		.loc 1 1031 33 view .LVU6345
 17933 5e5a 31D2     		xor	edx, edx	# tmp259
 17934 5e5c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.748
 17935 5e5f 48F7F6   		div	rsi	# tmp233
 17936              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17937              		.loc 1 1031 20 view .LVU6346
 17938 5e62 4885D2   		test	rdx, rdx	# tmp259
 17939 5e65 410F94C2 		sete	r10b	#, tmp261
 17940              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17941              		.loc 1 1031 82 view .LVU6347
 17942 5e69 4180FA01 		cmp	r10b, 1	# tmp261,
 17943 5e6d 4883DDFF 		sbb	rbp, -1	# c_prime,
 17944              	.LVL1080:
 17945              	.L1648:
GAS LISTING /tmp/ccH5HMHD.s 			page 477


1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17946              		.loc 1 1030 68 is_stmt 1 view .LVU6348
 17947              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17948              		.loc 1 1030 69 is_stmt 0 view .LVU6349
 17949 5e71 4C8D4901 		lea	r9, 1[rcx]	# c,
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17950              		.loc 1 1030 32 is_stmt 1 view .LVU6350
 17951 5e75 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.740,
 17952              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17953              		.loc 1 1030 51 is_stmt 0 view .LVU6351
 17954 5e79 4D89CB   		mov	r11, r9	# tmp264, c
 17955 5e7c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 17956              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17957              		.loc 1 1030 47 view .LVU6352
 17958 5e80 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.748
 17959 5e83 776B     		ja	.L1593	#,
1031:sieve_extend.c ****             }
 17960              		.loc 1 1031 17 is_stmt 1 view .LVU6353
 17961              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17962              		.loc 1 1031 48 is_stmt 0 view .LVU6354
 17963 5e85 4D01C9   		add	r9, r9	# tmp265
 17964 5e88 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.750
 17965 5e8b 7417     		je	.L1650	#,
 17966              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17967              		.loc 1 1031 33 view .LVU6355
 17968 5e8d 31D2     		xor	edx, edx	# tmp267
 17969 5e8f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.748
 17970 5e92 48F7F3   		div	rbx	# ivtmp.740
 17971              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17972              		.loc 1 1031 20 view .LVU6356
 17973 5e95 4885D2   		test	rdx, rdx	# tmp267
 17974 5e98 410F94C2 		sete	r10b	#, tmp269
 17975              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17976              		.loc 1 1031 82 view .LVU6357
 17977 5e9c 4180FA01 		cmp	r10b, 1	# tmp269,
 17978 5ea0 4883DDFF 		sbb	rbp, -1	# c_prime,
 17979              	.LVL1081:
 17980              	.L1650:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17981              		.loc 1 1030 68 is_stmt 1 view .LVU6358
 17982              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17983              		.loc 1 1030 69 is_stmt 0 view .LVU6359
 17984 5ea4 4C8D4902 		lea	r9, 2[rcx]	# c,
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17985              		.loc 1 1030 32 is_stmt 1 view .LVU6360
 17986 5ea8 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.740,
 17987              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17988              		.loc 1 1030 51 is_stmt 0 view .LVU6361
GAS LISTING /tmp/ccH5HMHD.s 			page 478


 17989 5eac 4D89CB   		mov	r11, r9	# tmp272, c
 17990 5eaf 4D0FAFD9 		imul	r11, r9	# tmp272, c
 17991              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17992              		.loc 1 1030 47 view .LVU6362
 17993 5eb3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.748
 17994 5eb6 7738     		ja	.L1593	#,
1031:sieve_extend.c ****             }
 17995              		.loc 1 1031 17 is_stmt 1 view .LVU6363
 17996              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 17997              		.loc 1 1031 48 is_stmt 0 view .LVU6364
 17998 5eb8 4D01C9   		add	r9, r9	# tmp273
 17999 5ebb 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.750
 18000 5ebe 7417     		je	.L1652	#,
 18001              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 18002              		.loc 1 1031 33 view .LVU6365
 18003 5ec0 31D2     		xor	edx, edx	# tmp275
 18004 5ec2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.748
 18005 5ec5 48F7F3   		div	rbx	# ivtmp.740
 18006              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 18007              		.loc 1 1031 20 view .LVU6366
 18008 5ec8 4885D2   		test	rdx, rdx	# tmp275
 18009 5ecb 410F94C2 		sete	r10b	#, tmp277
 18010              	# sieve_extend.c:1031:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1031:sieve_extend.c ****             }
 18011              		.loc 1 1031 82 view .LVU6367
 18012 5ecf 4180FA01 		cmp	r10b, 1	# tmp277,
 18013 5ed3 4883DDFF 		sbb	rbp, -1	# c_prime,
 18014              	.LVL1082:
 18015              	.L1652:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18016              		.loc 1 1030 68 is_stmt 1 view .LVU6368
 18017              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18018              		.loc 1 1030 69 is_stmt 0 view .LVU6369
 18019 5ed7 4883C103 		add	rcx, 3	# c,
 18020              	.LVL1083:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18021              		.loc 1 1030 32 is_stmt 1 view .LVU6370
 18022 5edb 4883C606 		add	rsi, 6	# ivtmp.740,
 18023              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18024              		.loc 1 1030 51 is_stmt 0 view .LVU6371
 18025 5edf 4989C9   		mov	r9, rcx	# tmp278, c
 18026 5ee2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 18027              	# sieve_extend.c:1030:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18028              		.loc 1 1030 47 view .LVU6372
 18029 5ee6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.748
 18030 5ee9 0F8621FF 		jbe	.L1587	#,
 18030      FFFF
 18031              	.LVL1084:
 18032 5eef 90       		.p2align 4
 18033              		.p2align 3
GAS LISTING /tmp/ccH5HMHD.s 			page 479


 18034              	.L1593:
1030:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18035              		.loc 1 1030 47 view .LVU6373
 18036              	.LBE845:
1033:sieve_extend.c ****         }
 18037              		.loc 1 1033 13 is_stmt 1 view .LVU6374
 18038              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18039              		.loc 1 1033 16 is_stmt 0 view .LVU6375
 18040 5ef0 4885ED   		test	rbp, rbp	# c_prime
 18041 5ef3 0F840D02 		je	.L1711	#,
 18041      0000
 18042              	.LVL1085:
 18043              	.L1590:
1033:sieve_extend.c ****         }
 18044              		.loc 1 1033 16 view .LVU6376
 18045              	.LBE843:
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18046              		.loc 1 1020 52 is_stmt 1 view .LVU6377
 18047              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18048              		.loc 1 1020 57 is_stmt 0 view .LVU6378
 18049 5ef9 4983C701 		add	r15, 1	# prime,
 18050              	.LVL1086:
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18051              		.loc 1 1020 31 is_stmt 1 view .LVU6379
 18052 5efd 4983C402 		add	r12, 2	# ivtmp.748,
 18053 5f01 4983C602 		add	r14, 2	# ivtmp.750,
 18054              	# sieve_extend.c:1020:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18055              		.loc 1 1020 5 is_stmt 0 view .LVU6380
 18056 5f05 4939FF   		cmp	r15, rdi	# prime, _137
 18057 5f08 0F8202FE 		jb	.L1594	#,
 18057      FFFF
 18058              	.LVL1087:
 18059              	.L1700:
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18060              		.loc 1 1020 5 view .LVU6381
 18061 5f0e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 18061      24
 18062              	.LVL1088:
 18063              	.L1564:
1020:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18064              		.loc 1 1020 5 view .LVU6382
 18065              	.LBE854:
 18066              	.LBE829:
 18067              	.LBE828:
 18068              	# sieve_extend.c:1064: }
1064:sieve_extend.c **** 
 18069              		.loc 1 1064 1 view .LVU6383
 18070 5f13 488D6424 		lea	rsp, 56[rsp]	#,
 18070      38
 18071              		.cfi_remember_state
 18072              		.cfi_def_cfa_offset 56
 18073 5f18 4489E8   		mov	eax, r13d	#, <retval>
 18074 5f1b 5B       		pop	rbx	#
 18075              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccH5HMHD.s 			page 480


 18076 5f1c 5D       		pop	rbp	#
 18077              		.cfi_def_cfa_offset 40
 18078 5f1d 415C     		pop	r12	#
 18079              		.cfi_def_cfa_offset 32
 18080 5f1f 415D     		pop	r13	#
 18081              		.cfi_def_cfa_offset 24
 18082 5f21 415E     		pop	r14	#
 18083              		.cfi_def_cfa_offset 16
 18084 5f23 415F     		pop	r15	#
 18085              		.cfi_def_cfa_offset 8
 18086 5f25 C3       		ret	
 18087              	.LVL1089:
 18088              	.L1709:
 18089              		.cfi_restore_state
 18090              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18091              		.loc 1 1043 5 view .LVU6384
 18092 5f26 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18092      030000
 18093 5f2d 0F84E602 		je	.L1571	#,
 18093      0000
 18094 5f33 7633     		jbe	.L1712	#,
 18095 5f35 4981F910 		cmp	r9, 10000	# pretmp_199,
 18095      270000
 18096 5f3c 0F852303 		jne	.L1575	#,
 18096      0000
 18097 5f42 4981F8CD 		cmp	r8, 1229	# primeCount,
 18097      040000
 18098              	# sieve_extend.c:1047:         case 10000:         valid_primes = 1229;     break;
1047:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18099              		.loc 1 1047 42 view .LVU6385
 18100 5f49 B9CD0400 		mov	ecx, 1229	# valid_primes,
 18100      00
 18101 5f4e 400F94C6 		sete	sil	#, tmp179
 18102 5f52 21F2     		and	edx, esi	# _251, tmp179
 18103 5f54 4981F8CD 		cmp	r8, 1229	# primeCount,
 18103      040000
 18104 5f5b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 18105 5f5f 410F95C6 		setne	r14b	#, _135
1047:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18106              		.loc 1 1047 29 is_stmt 1 view .LVU6386
 18107              	.LVL1090:
1047:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18108              		.loc 1 1047 54 view .LVU6387
 18109              	# sieve_extend.c:1047:         case 10000:         valid_primes = 1229;     break;
1047:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18110              		.loc 1 1047 9 is_stmt 0 view .LVU6388
 18111 5f63 E938FDFF 		jmp	.L1582	#
 18111      FF
 18112              	.LVL1091:
 18113              	.L1712:
 18114              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18115              		.loc 1 1043 5 view .LVU6389
 18116 5f68 4983F90A 		cmp	r9, 10	# pretmp_199,
 18117 5f6c 0F841A02 		je	.L1573	#,
 18117      0000
GAS LISTING /tmp/ccH5HMHD.s 			page 481


 18118 5f72 4983F964 		cmp	r9, 100	# pretmp_199,
 18119 5f76 0F85E902 		jne	.L1575	#,
 18119      0000
 18120 5f7c 4983F819 		cmp	r8, 25	# primeCount,
 18121 5f80 0F94C1   		sete	cl	#, tmp173
 18122 5f83 21CA     		and	edx, ecx	# _251, tmp173
 18123 5f85 4983F819 		cmp	r8, 25	# primeCount,
 18124 5f89 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 18125 5f8d 410F95C6 		setne	r14b	#, _135
 18126              	# sieve_extend.c:1045:         case 100:           valid_primes = 25;       break;
1045:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 18127              		.loc 1 1045 42 view .LVU6390
 18128 5f91 B9190000 		mov	ecx, 25	# valid_primes,
 18128      00
 18129 5f96 E905FDFF 		jmp	.L1582	#
 18129      FF
 18130 5f9b 0F1F4400 		.p2align 4,,7
 18130      00
 18131              		.p2align 3
 18132              	.L1710:
 18133              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18134              		.loc 1 1043 5 view .LVU6391
 18135 5fa0 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18135      420F00
 18136 5fa7 0F84B801 		je	.L1579	#,
 18136      0000
 18137 5fad 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18137      969800
 18138 5fb4 0F85AB02 		jne	.L1575	#,
 18138      0000
 18139 5fba 4981F803 		cmp	r8, 664579	# primeCount,
 18139      240A00
 18140              	# sieve_extend.c:1050:         case 10000000:      valid_primes = 664579;   break;
1050:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18141              		.loc 1 1050 42 view .LVU6392
 18142 5fc1 B903240A 		mov	ecx, 664579	# valid_primes,
 18142      00
 18143 5fc6 410F94C7 		sete	r15b	#, tmp185
 18144 5fca 4421FA   		and	edx, r15d	# _251, tmp185
 18145 5fcd 4981F803 		cmp	r8, 664579	# primeCount,
 18145      240A00
 18146 5fd4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 18147 5fd8 410F95C6 		setne	r14b	#, _135
1050:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18148              		.loc 1 1050 29 is_stmt 1 view .LVU6393
 18149              	.LVL1092:
1050:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18150              		.loc 1 1050 54 view .LVU6394
 18151              	# sieve_extend.c:1050:         case 10000000:      valid_primes = 664579;   break;
1050:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18152              		.loc 1 1050 9 is_stmt 0 view .LVU6395
 18153 5fdc E9BFFCFF 		jmp	.L1582	#
 18153      FF
 18154              	.LVL1093:
 18155              		.p2align 4,,7
 18156 5fe1 0F1F8000 		.p2align 3
GAS LISTING /tmp/ccH5HMHD.s 			page 482


 18156      000000
 18157              	.L1586:
 18158              	.LBB859:
 18159              	.LBB857:
 18160              	.LBB855:
 18161              	.LBB852:
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18162              		.loc 1 1022 32 is_stmt 1 view .LVU6396
 18163              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18164              		.loc 1 1022 13 is_stmt 0 view .LVU6397
 18165 5fe8 4885FF   		test	rdi, rdi	# _137
 18166 5feb 0F841DFF 		je	.L1700	#,
 18166      FFFF
 18167              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18168              		.loc 1 1022 27 view .LVU6398
 18169 5ff1 BB010000 		mov	ebx, 1	# c,
 18169      00
 18170 5ff6 EB20     		jmp	.L1591	#
 18171              	.LVL1094:
 18172              		.p2align 4,,7
 18173              		.p2align 3
 18174              	.L1600:
 18175              	# sieve_extend.c:1024:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1024:sieve_extend.c ****                 }
 18176              		.loc 1 1024 35 view .LVU6399
 18177 5ff8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18178              	.LVL1095:
 18179              	.L1589:
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18180              		.loc 1 1022 68 is_stmt 1 view .LVU6400
 18181              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18182              		.loc 1 1022 69 is_stmt 0 view .LVU6401
 18183 5ffb 4883C301 		add	rbx, 1	# c,
 18184              	.LVL1096:
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18185              		.loc 1 1022 32 is_stmt 1 view .LVU6402
 18186              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18187              		.loc 1 1022 13 is_stmt 0 view .LVU6403
 18188 5fff 4839FB   		cmp	rbx, rdi	# c, _137
 18189 6002 0F87F1FE 		ja	.L1590	#,
 18189      FFFF
 18190              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18191              		.loc 1 1022 51 view .LVU6404
 18192 6008 4989DB   		mov	r11, rbx	# tmp209, c
 18193 600b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 18194              	# sieve_extend.c:1022:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1022:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18195              		.loc 1 1022 47 view .LVU6405
 18196 600f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.748
 18197 6012 0F87E1FE 		ja	.L1590	#,
 18197      FFFF
 18198              	.LVL1097:
GAS LISTING /tmp/ccH5HMHD.s 			page 483


 18199              	.L1591:
1023:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18200              		.loc 1 1023 17 is_stmt 1 view .LVU6406
 18201 6018 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 18202 601c 31D2     		xor	edx, edx	# tmp204
 18203 601e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.748
 18204              	# sieve_extend.c:1023:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1023:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18205              		.loc 1 1023 39 is_stmt 0 view .LVU6407
 18206 6021 488D7501 		lea	rsi, 1[rbp]	# _55,
 18207 6025 48F7F6   		div	rsi	# _55
 18208              	# sieve_extend.c:1023:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1023:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18209              		.loc 1 1023 48 view .LVU6408
 18210 6028 4885D2   		test	rdx, rdx	# tmp204
 18211 602b 75CE     		jne	.L1589	#,
1023:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18212              		.loc 1 1023 48 view .LVU6409
 18213 602d 4939EE   		cmp	r14, rbp	# ivtmp.750, _216
 18214 6030 74C9     		je	.L1589	#,
1024:sieve_extend.c ****                 }
 18215              		.loc 1 1024 21 is_stmt 1 view .LVU6410
 18216              	# sieve_extend.c:1024:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1024:sieve_extend.c ****                 }
 18217              		.loc 1 1024 24 is_stmt 0 view .LVU6411
 18218 6032 4983F81D 		cmp	r8, 29	# warn_prime,
 18219              	# sieve_extend.c:1024:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1024:sieve_extend.c ****                 }
 18220              		.loc 1 1024 35 view .LVU6412
 18221 6036 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 18222              	.LVL1098:
 18223              	# sieve_extend.c:1024:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1024:sieve_extend.c ****                 }
 18224              		.loc 1 1024 24 view .LVU6413
 18225 603a 77BC     		ja	.L1600	#,
1024:sieve_extend.c ****                 }
 18226              		.loc 1 1024 44 is_stmt 1 view .LVU6414
 18227              	.LVL1099:
 18228              	.LBB840:
 18229              	.LBI834:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18230              		.loc 3 105 1 view .LVU6415
 18231              	.LBB837:
 18232              		.loc 3 107 3 view .LVU6416
 18233              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18234              		.loc 3 107 10 is_stmt 0 view .LVU6417
 18235 603c 4989F0   		mov	r8, rsi	#, _55
 18236 603f 4989C1   		mov	r9, rax	#, tmp203
 18237 6042 BF010000 		mov	edi, 1	#,
 18237      00
 18238 6047 4C89F9   		mov	rcx, r15	#, prime
 18239 604a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.748
 18240 604e 4C89E2   		mov	rdx, r12	#, ivtmp.748
 18241 6051 488D3500 		lea	rsi, .LC12[rip]	#,
 18241      000000
 18242 6058 31C0     		xor	eax, eax	#
 18243 605a E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccH5HMHD.s 			page 484


 18243      00
 18244              	.LVL1100:
 18245 605f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18246              	.LBE837:
 18247              	.LBE840:
 18248              	# sieve_extend.c:1024:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1024:sieve_extend.c ****                 }
 18249              		.loc 1 1024 35 view .LVU6418
 18250 6063 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18251              	.LBB841:
 18252              	.LBB838:
 18253              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18254              		.loc 3 107 10 view .LVU6419
 18255 6066 EB93     		jmp	.L1589	#
 18256              	.LVL1101:
 18257              	.L1565:
 18258              		.loc 3 107 10 view .LVU6420
 18259              	.LBE838:
 18260              	.LBE841:
 18261              	.LBE852:
 18262              	.LBE855:
 18263              	.LBE857:
 18264              	.LBE859:
 18265              	.LBB860:
 18266              	.LBB825:
1013:sieve_extend.c **** }
 18267              		.loc 1 1013 5 is_stmt 1 view .LVU6421
1013:sieve_extend.c **** }
 18268              		.loc 1 1013 5 is_stmt 0 view .LVU6422
 18269              	.LBE825:
 18270              	.LBE860:
1042:sieve_extend.c ****     switch(sieve->size) {
 18271              		.loc 1 1042 5 is_stmt 1 view .LVU6423
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18272              		.loc 1 1043 5 view .LVU6424
 18273 6068 4531ED   		xor	r13d, r13d	# <retval>
 18274 606b 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 18274      860100
 18275 6072 41BE0100 		mov	r14d, 1	# _135,
 18275      0000
 18276 6078 41B80100 		mov	r8d, 1	# primeCount,
 18276      0000
 18277 607e 0F842302 		je	.L1603	#,
 18277      0000
 18278 6084 0F872301 		ja	.L1595	#,
 18278      0000
 18279 608a 4983F964 		cmp	r9, 100	# pretmp_199,
 18280 608e B9190000 		mov	ecx, 25	# valid_primes,
 18280      00
 18281 6093 742A     		je	.L1583	#,
 18282              		.p2align 4,,2
 18283 6095 0F864001 		jbe	.L1713	#,
 18283      0000
 18284 609b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18284      030000
 18285              	# sieve_extend.c:1046:         case 1000:          valid_primes = 168;      break;
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
GAS LISTING /tmp/ccH5HMHD.s 			page 485


 18286              		.loc 1 1046 42 is_stmt 0 view .LVU6425
 18287 60a2 B9A80000 		mov	ecx, 168	# valid_primes,
 18287      00
 18288              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18289              		.loc 1 1043 5 view .LVU6426
 18290 60a7 7416     		je	.L1583	#,
 18291 60a9 4981F910 		cmp	r9, 10000	# pretmp_199,
 18291      270000
 18292 60b0 B9CD0400 		mov	ecx, 1229	# tmp223,
 18292      00
 18293 60b5 41BA0000 		mov	r10d, 0	# tmp224,
 18293      0000
 18294 60bb 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 18295              	.LVL1102:
 18296              	.L1583:
1058:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18297              		.loc 1 1058 5 is_stmt 1 view .LVU6427
 18298              	# sieve_extend.c:1058:     if (!valid && option_verboselevel >= 1) {
1058:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18299              		.loc 1 1058 39 is_stmt 0 view .LVU6428
 18300 60bf 85DB     		test	ebx, ebx	# option_verboselevel
 18301 60c1 410F9FC4 		setg	r12b	#, tmp194
 18302              	# sieve_extend.c:1058:     if (!valid && option_verboselevel >= 1) {
1058:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18303              		.loc 1 1058 8 view .LVU6429
 18304 60c5 4520F4   		and	r12b, r14b	# _7, _135
 18305 60c8 0F84F0FB 		je	.L1584	#,
 18305      FFFF
1059:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 18306              		.loc 1 1059 9 is_stmt 1 view .LVU6430
 18307              	.LVL1103:
 18308              	.LBB861:
 18309              	.LBI861:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18310              		.loc 3 105 1 view .LVU6431
 18311              	.LBB862:
 18312              		.loc 3 107 3 view .LVU6432
 18313              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18314              		.loc 3 107 10 is_stmt 0 view .LVU6433
 18315 60ce 31C0     		xor	eax, eax	#
 18316 60d0 4C89CA   		mov	rdx, r9	#, pretmp_199
 18317 60d3 488D3500 		lea	rsi, .LC10[rip]	#,
 18317      000000
 18318 60da BF010000 		mov	edi, 1	#,
 18318      00
 18319 60df E8000000 		call	__printf_chk@PLT	#
 18319      00
 18320              	.LVL1104:
 18321              		.loc 3 107 10 view .LVU6434
 18322              	.LBE862:
 18323              	.LBE861:
1060:sieve_extend.c ****     }
 18324              		.loc 1 1060 9 is_stmt 1 view .LVU6435
 18325              	# sieve_extend.c:1060:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1060:sieve_extend.c ****     }
 18326              		.loc 1 1060 12 is_stmt 0 view .LVU6436
GAS LISTING /tmp/ccH5HMHD.s 			page 486


 18327 60e4 83FB01   		cmp	ebx, 1	# option_verboselevel,
 18328 60e7 0F8426FE 		je	.L1564	#,
 18328      FFFF
1060:sieve_extend.c ****     }
 18329              		.loc 1 1060 49 is_stmt 1 discriminator 1 view .LVU6437
 18330 60ed 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 18331 60f1 BA640000 		mov	edx, 100	#,
 18331      00
 18332 60f6 4889EF   		mov	rdi, rbp	#, sieve
 18333              	# sieve_extend.c:1058:     if (!valid && option_verboselevel >= 1) {
1058:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18334              		.loc 1 1058 9 is_stmt 0 discriminator 1 view .LVU6438
 18335 60f9 4589E6   		mov	r14d, r12d	# _135, _7
 18336              	# sieve_extend.c:1060:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1060:sieve_extend.c ****     }
 18337              		.loc 1 1060 49 discriminator 1 view .LVU6439
 18338 60fc E8CFD6FF 		call	show_primes.isra.0	#
 18338      FF
 18339              	.LVL1105:
 18340 6101 E9B8FBFF 		jmp	.L1584	#
 18340      FF
 18341              	.LVL1106:
 18342              	.L1711:
 18343              	.LBB863:
 18344              	.LBB858:
 18345              	.LBB856:
 18346              	.LBB853:
 18347              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18348              		.loc 1 1033 44 view .LVU6440
 18349 6106 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18349      18
 18350              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18351              		.loc 1 1033 28 view .LVU6441
 18352 610b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 18353              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18354              		.loc 1 1033 44 view .LVU6442
 18355 610f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 18356              	.LVL1107:
 18357              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18358              		.loc 1 1033 28 view .LVU6443
 18359 6113 761D     		jbe	.L1598	#,
 18360              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18361              		.loc 1 1033 44 view .LVU6444
 18362 6115 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18362      18
 18363 611a E9DAFDFF 		jmp	.L1590	#
 18363      FF
 18364              	.LVL1108:
 18365              	.L1698:
1033:sieve_extend.c ****         }
 18366              		.loc 1 1033 44 view .LVU6445
 18367 611f 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
GAS LISTING /tmp/ccH5HMHD.s 			page 487


 18367      18
 18368              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18369              		.loc 1 1033 28 view .LVU6446
 18370 6124 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 18371              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18372              		.loc 1 1033 44 view .LVU6447
 18373 6128 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 18374              	.LVL1109:
 18375              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18376              		.loc 1 1033 28 view .LVU6448
 18377 612c 0F87DCFD 		ja	.L1700	#,
 18377      FFFF
 18378              	.LVL1110:
 18379              	.L1598:
 18380              	.LBB846:
 18381              	.LBB847:
 18382              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18383              		.loc 3 107 10 view .LVU6449
 18384 6132 BF010000 		mov	edi, 1	#,
 18384      00
 18385              	.LBE847:
 18386              	.LBE846:
 18387              	# sieve_extend.c:1033:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1033:sieve_extend.c ****         }
 18388              		.loc 1 1033 53 view .LVU6450
 18389 6137 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 18389      01
 18390              	.LBB850:
 18391              	.LBB848:
 18392              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18393              		.loc 3 107 10 view .LVU6451
 18394 613c 4C89F9   		mov	rcx, r15	#, prime
 18395 613f 488D3500 		lea	rsi, .LC13[rip]	#,
 18395      000000
 18396 6146 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 18396      28
 18397              	.LBE848:
 18398              	.LBE850:
1033:sieve_extend.c ****         }
 18399              		.loc 1 1033 53 is_stmt 1 view .LVU6452
 18400              	.LVL1111:
 18401              	.LBB851:
 18402              	.LBI846:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18403              		.loc 3 105 1 view .LVU6453
 18404              	.LBB849:
 18405              		.loc 3 107 3 view .LVU6454
 18406              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18407              		.loc 3 107 10 is_stmt 0 view .LVU6455
 18408 614b 31C0     		xor	eax, eax	#
 18409 614d E8000000 		call	__printf_chk@PLT	#
 18409      00
 18410              	.LVL1112:
 18411              		.loc 3 107 10 view .LVU6456
GAS LISTING /tmp/ccH5HMHD.s 			page 488


 18412 6152 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18413 6156 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 18413      28
 18414 615b 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18414      18
 18415 6160 E994FDFF 		jmp	.L1590	#
 18415      FF
 18416              	.LVL1113:
 18417              	.L1579:
 18418              		.loc 3 107 10 view .LVU6457
 18419 6165 4981F8A2 		cmp	r8, 78498	# primeCount,
 18419      320100
 18420              	.LBE849:
 18421              	.LBE851:
 18422              	.LBE853:
 18423              	.LBE856:
 18424              	.LBE858:
 18425              	.LBE863:
 18426              	# sieve_extend.c:1049:         case 1000000:       valid_primes = 78498;    break;
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18427              		.loc 1 1049 42 view .LVU6458
 18428 616c B9A23201 		mov	ecx, 78498	# valid_primes,
 18428      00
 18429 6171 410F94C5 		sete	r13b	#, tmp183
 18430 6175 4421EA   		and	edx, r13d	# _251, tmp183
 18431 6178 4981F8A2 		cmp	r8, 78498	# primeCount,
 18431      320100
 18432 617f 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 18433 6183 410F95C6 		setne	r14b	#, _135
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18434              		.loc 1 1049 29 is_stmt 1 view .LVU6459
 18435              	.LVL1114:
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18436              		.loc 1 1049 54 view .LVU6460
 18437              	# sieve_extend.c:1049:         case 1000000:       valid_primes = 78498;    break;
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18438              		.loc 1 1049 9 is_stmt 0 view .LVU6461
 18439 6187 E914FBFF 		jmp	.L1582	#
 18439      FF
 18440              	.LVL1115:
 18441              	.L1573:
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18442              		.loc 1 1049 9 view .LVU6462
 18443 618c 4983F804 		cmp	r8, 4	# primeCount,
 18444              	# sieve_extend.c:1044:         case 10:            valid_primes = 4;        break;
1044:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 18445              		.loc 1 1044 42 view .LVU6463
 18446 6190 B9040000 		mov	ecx, 4	# valid_primes,
 18446      00
 18447 6195 410F94C2 		sete	r10b	#, tmp175
 18448 6199 4421D2   		and	edx, r10d	# _251, tmp175
 18449 619c 4983F804 		cmp	r8, 4	# primeCount,
 18450 61a0 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 18451 61a4 410F95C6 		setne	r14b	#, _135
 18452 61a8 E9F3FAFF 		jmp	.L1582	#
 18452      FF
 18453              	.LVL1116:
GAS LISTING /tmp/ccH5HMHD.s 			page 489


 18454              	.L1595:
 18455              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18456              		.loc 1 1043 5 view .LVU6464
 18457 61ad 4981F900 		cmp	r9, 100000000	# pretmp_199,
 18457      E1F505
 18458              	# sieve_extend.c:1051:         case 100000000:     valid_primes = 5761455;  break;
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18459              		.loc 1 1051 42 view .LVU6465
 18460 61b4 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18460      00
 18461              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18462              		.loc 1 1043 5 view .LVU6466
 18463 61b9 0F8400FF 		je	.L1583	#,
 18463      FFFF
 18464 61bf 762C     		jbe	.L1714	#,
 18465 61c1 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 18465      CA9A3B
 18466 61c8 B92EDF07 		mov	ecx, 50847534	# tmp227,
 18466      03
 18467 61cd B8000000 		mov	eax, 0	# tmp228,
 18467      00
 18468 61d2 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 18469 61d6 E9E4FEFF 		jmp	.L1583	#
 18469      FF
 18470              	.L1713:
 18471 61db 31C9     		xor	ecx, ecx	# valid_primes
 18472 61dd 4983F90A 		cmp	r9, 10	# pretmp_199,
 18473 61e1 0F94C1   		sete	cl	#, valid_primes
 18474 61e4 48C1E102 		sal	rcx, 2	# valid_primes,
 18475 61e8 E9D2FEFF 		jmp	.L1583	#
 18475      FF
 18476              	.L1714:
 18477 61ed 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18477      420F00
 18478              	# sieve_extend.c:1049:         case 1000000:       valid_primes = 78498;    break;
1049:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18479              		.loc 1 1049 42 view .LVU6467
 18480 61f4 B9A23201 		mov	ecx, 78498	# valid_primes,
 18480      00
 18481              	# sieve_extend.c:1043:     switch(sieve->size) {
1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18482              		.loc 1 1043 5 view .LVU6468
 18483 61f9 0F84C0FE 		je	.L1583	#,
 18483      FFFF
 18484 61ff 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18484      969800
 18485 6206 B903240A 		mov	ecx, 664579	# tmp225,
 18485      00
 18486 620b BE000000 		mov	esi, 0	# tmp226,
 18486      00
 18487 6210 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 18488 6214 E9A6FEFF 		jmp	.L1583	#
 18488      FF
 18489              	.LVL1117:
 18490              	.L1571:
GAS LISTING /tmp/ccH5HMHD.s 			page 490


1043:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18491              		.loc 1 1043 5 view .LVU6469
 18492 6219 4981F8A8 		cmp	r8, 168	# primeCount,
 18492      000000
 18493              	# sieve_extend.c:1046:         case 1000:          valid_primes = 168;      break;
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18494              		.loc 1 1046 42 view .LVU6470
 18495 6220 B9A80000 		mov	ecx, 168	# valid_primes,
 18495      00
 18496 6225 410F94C6 		sete	r14b	#, tmp177
 18497 6229 4421F2   		and	edx, r14d	# _251, tmp177
 18498 622c 4981F8A8 		cmp	r8, 168	# primeCount,
 18498      000000
 18499 6233 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 18500 6237 410F95C6 		setne	r14b	#, _135
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18501              		.loc 1 1046 29 is_stmt 1 view .LVU6471
 18502              	.LVL1118:
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18503              		.loc 1 1046 54 view .LVU6472
 18504              	# sieve_extend.c:1046:         case 1000:          valid_primes = 168;      break;
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18505              		.loc 1 1046 9 is_stmt 0 view .LVU6473
 18506 623b E960FAFF 		jmp	.L1582	#
 18506      FF
 18507              	.LVL1119:
 18508              	.L1577:
1046:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18509              		.loc 1 1046 9 view .LVU6474
 18510 6240 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18510      E95700
 18511              	# sieve_extend.c:1051:         case 100000000:     valid_primes = 5761455;  break;
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18512              		.loc 1 1051 42 view .LVU6475
 18513 6247 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18513      00
 18514 624c 0F94C0   		sete	al	#, tmp187
 18515 624f 21C2     		and	edx, eax	# _251, tmp187
 18516 6251 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18516      E95700
 18517 6258 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 18518 625c 410F95C6 		setne	r14b	#, _135
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18519              		.loc 1 1051 29 is_stmt 1 view .LVU6476
 18520              	.LVL1120:
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18521              		.loc 1 1051 54 view .LVU6477
 18522              	# sieve_extend.c:1051:         case 100000000:     valid_primes = 5761455;  break;
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18523              		.loc 1 1051 9 is_stmt 0 view .LVU6478
 18524 6260 E93BFAFF 		jmp	.L1582	#
 18524      FF
 18525              	.LVL1121:
 18526              	.L1575:
1051:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18527              		.loc 1 1051 9 view .LVU6479
 18528 6265 4D85C0   		test	r8, r8	# primeCount
GAS LISTING /tmp/ccH5HMHD.s 			page 491


 18529 6268 410F94C3 		sete	r11b	#, tmp191
 18530 626c 4421DA   		and	edx, r11d	# _251, tmp191
 18531 626f 4D85C0   		test	r8, r8	# primeCount
 18532 6272 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18533 6276 410F95C6 		setne	r14b	#, _135
1053:sieve_extend.c ****     }
 18534              		.loc 1 1053 29 is_stmt 1 view .LVU6480
 18535              	# sieve_extend.c:1053:         default:            valid_primes= 0;
1053:sieve_extend.c ****     }
 18536              		.loc 1 1053 41 is_stmt 0 view .LVU6481
 18537 627a 31C9     		xor	ecx, ecx	# valid_primes
 18538 627c E91FFAFF 		jmp	.L1582	#
 18538      FF
 18539              	.L1569:
1053:sieve_extend.c ****     }
 18540              		.loc 1 1053 41 view .LVU6482
 18541 6281 4981F878 		cmp	r8, 9592	# primeCount,
 18541      250000
 18542              	# sieve_extend.c:1048:         case 100000:        valid_primes = 9592;     break;
1048:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18543              		.loc 1 1048 42 view .LVU6483
 18544 6288 B9782500 		mov	ecx, 9592	# valid_primes,
 18544      00
 18545 628d 400F94C7 		sete	dil	#, tmp181
 18546 6291 21FA     		and	edx, edi	# _251, tmp181
 18547 6293 4981F878 		cmp	r8, 9592	# primeCount,
 18547      250000
 18548 629a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18549 629e 410F95C6 		setne	r14b	#, _135
1048:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18550              		.loc 1 1048 29 is_stmt 1 view .LVU6484
 18551              	.LVL1122:
1048:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18552              		.loc 1 1048 54 view .LVU6485
 18553              	# sieve_extend.c:1048:         case 100000:        valid_primes = 9592;     break;
1048:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18554              		.loc 1 1048 9 is_stmt 0 view .LVU6486
 18555 62a2 E9F9F9FF 		jmp	.L1582	#
 18555      FF
 18556              	.LVL1123:
 18557              	.L1603:
 18558              	# sieve_extend.c:1048:         case 100000:        valid_primes = 9592;     break;
1048:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18559              		.loc 1 1048 42 view .LVU6487
 18560 62a7 B9782500 		mov	ecx, 9592	# valid_primes,
 18560      00
 18561 62ac E90EFEFF 		jmp	.L1583	#
 18561      FF
 18562              		.cfi_endproc
 18563              	.LFE79:
 18565              		.section	.rodata.str1.8
 18566 0145 000000   		.align 8
 18567              	.LC14:
 18568 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18568      653A2025 
 18568      73205B6F 
 18568      7074696F 
GAS LISTING /tmp/ccH5HMHD.s 			page 492


 18568      6E735D20 
 18569              		.section	.rodata.str1.1
 18570              	.LC15:
 18571 0031 4F707469 		.string	"Options:\n"
 18571      6F6E733A 
 18571      0A00
 18572              		.section	.rodata.str1.8
 18573 0167 00       		.align 8
 18574              	.LC16:
 18575 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18575      76657262 
 18575      6F736520 
 18575      3C6C6576 
 18575      656C3E20 
 18576 01a3 00000000 		.align 8
 18576      00
 18577              	.LC17:
 18578 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18578      20202020 
 18578      20202020 
 18578      20202020 
 18578      20202020 
 18579 01d6 0000     		.align 8
 18580              	.LC18:
 18581 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18581      20202020 
 18581      20202020 
 18581      20202020 
 18581      20202020 
 18582 0219 00000000 		.align 8
 18582      000000
 18583              	.LC19:
 18584 0220 20202020 		.string	"                     3 - show actual work\n"
 18584      20202020 
 18584      20202020 
 18584      20202020 
 18584      20202020 
 18585 024b 00000000 		.align 8
 18585      00
 18586              	.LC20:
 18587 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18587      63686563 
 18587      6B202020 
 18587      20202020 
 18587      20202020 
 18588 028d 000000   		.align 8
 18589              	.LC21:
 18590 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 18590      73686F77 
 18590      203C6D61 
 18590      78696D75 
 18590      6D3E2020 
 18591 02ce 0000     		.align 8
 18592              	.LC22:
 18593 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18593      74756E65 
 18593      20203C6C 
GAS LISTING /tmp/ccH5HMHD.s 			page 493


 18593      6576656C 
 18593      3E202020 
 18594 031d 000000   		.align 8
 18595              	.LC23:
 18596 0320 20202020 		.string	"                     1 - fast tuning\n"
 18596      20202020 
 18596      20202020 
 18596      20202020 
 18596      20202020 
 18597 0346 0000     		.align 8
 18598              	.LC24:
 18599 0348 20202020 		.string	"                     2 - refined tuning\n"
 18599      20202020 
 18599      20202020 
 18599      20202020 
 18599      20202020 
 18600 0371 00000000 		.align 8
 18600      000000
 18601              	.LC25:
 18602 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18602      20202020 
 18602      20202020 
 18602      20202020 
 18602      20202020 
 18603              		.text
 18604 62b1 66662E0F 		.p2align 4
 18604      1F840000 
 18604      0000000F 
 18604      1F4000
 18605              		.globl	usage
 18607              	usage:
 18608              	.LVL1124:
 18609              	.LFB80:
1066:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18610              		.loc 1 1066 24 is_stmt 1 view -0
 18611              		.cfi_startproc
1066:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18612              		.loc 1 1066 24 is_stmt 0 view .LVU6489
 18613 62c0 F30F1EFA 		endbr64	
 18614 62c4 50       		push	rax	#
 18615              		.cfi_def_cfa_offset 16
 18616 62c5 58       		pop	rax	#
 18617              		.cfi_def_cfa_offset 8
1067:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18618              		.loc 1 1067 5 is_stmt 1 view .LVU6490
 18619              	.LVL1125:
 18620              	.LBB864:
 18621              	.LBI864:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18622              		.loc 3 98 1 view .LVU6491
 18623              	.LBB865:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18624              		.loc 3 100 3 view .LVU6492
 18625              	.LBE865:
 18626              	.LBE864:
 18627              	# sieve_extend.c:1066: void usage(char *name) {
1066:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
GAS LISTING /tmp/ccH5HMHD.s 			page 494


 18628              		.loc 1 1066 24 is_stmt 0 view .LVU6493
 18629 62c6 488D6424 		lea	rsp, -8[rsp]	#,
 18629      F8
 18630              		.cfi_def_cfa_offset 16
 18631              	# sieve_extend.c:1066: void usage(char *name) {
1066:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18632              		.loc 1 1066 24 view .LVU6494
 18633 62cb 4889F9   		mov	rcx, rdi	# name, tmp107
 18634              	.LBB867:
 18635              	.LBB866:
 18636              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18637              		.loc 3 100 10 view .LVU6495
 18638 62ce 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18638      000000
 18639              	.LVL1126:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18640              		.loc 3 100 10 view .LVU6496
 18641 62d5 488D1500 		lea	rdx, .LC14[rip]	#,
 18641      000000
 18642 62dc BE010000 		mov	esi, 1	#,
 18642      00
 18643 62e1 31C0     		xor	eax, eax	#
 18644 62e3 E8000000 		call	__fprintf_chk@PLT	#
 18644      00
 18645              	.LVL1127:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18646              		.loc 3 100 10 view .LVU6497
 18647              	.LBE866:
 18648              	.LBE867:
1068:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18649              		.loc 1 1068 5 is_stmt 1 view .LVU6498
 18650              	.LBB868:
 18651              	.LBI868:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18652              		.loc 3 98 1 view .LVU6499
 18653              	.LBB869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18654              		.loc 3 100 3 view .LVU6500
 18655              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18656              		.loc 3 100 10 is_stmt 0 view .LVU6501
 18657 62e8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18657      000000
 18658 62ef BA090000 		mov	edx, 9	#,
 18658      00
 18659 62f4 BE010000 		mov	esi, 1	#,
 18659      00
 18660 62f9 488D3D00 		lea	rdi, .LC15[rip]	#,
 18660      000000
 18661 6300 E8000000 		call	fwrite@PLT	#
 18661      00
 18662              	.LVL1128:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18663              		.loc 3 100 10 view .LVU6502
 18664              	.LBE869:
 18665              	.LBE868:
GAS LISTING /tmp/ccH5HMHD.s 			page 495


1069:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18666              		.loc 1 1069 5 is_stmt 1 view .LVU6503
 18667              	.LBB870:
 18668              	.LBI870:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18669              		.loc 3 98 1 view .LVU6504
 18670              	.LBB871:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18671              		.loc 3 100 3 view .LVU6505
 18672              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18673              		.loc 3 100 10 is_stmt 0 view .LVU6506
 18674 6305 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18674      000000
 18675 630c BA3A0000 		mov	edx, 58	#,
 18675      00
 18676 6311 BE010000 		mov	esi, 1	#,
 18676      00
 18677 6316 488D3D00 		lea	rdi, .LC16[rip]	#,
 18677      000000
 18678 631d E8000000 		call	fwrite@PLT	#
 18678      00
 18679              	.LVL1129:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18680              		.loc 3 100 10 view .LVU6507
 18681              	.LBE871:
 18682              	.LBE870:
1070:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18683              		.loc 1 1070 5 is_stmt 1 view .LVU6508
 18684              	.LBB872:
 18685              	.LBI872:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18686              		.loc 3 98 1 view .LVU6509
 18687              	.LBB873:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18688              		.loc 3 100 3 view .LVU6510
 18689              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18690              		.loc 3 100 10 is_stmt 0 view .LVU6511
 18691 6322 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18691      000000
 18692 6329 BA2D0000 		mov	edx, 45	#,
 18692      00
 18693 632e BE010000 		mov	esi, 1	#,
 18693      00
 18694 6333 488D3D00 		lea	rdi, .LC17[rip]	#,
 18694      000000
 18695 633a E8000000 		call	fwrite@PLT	#
 18695      00
 18696              	.LVL1130:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18697              		.loc 3 100 10 view .LVU6512
 18698              	.LBE873:
 18699              	.LBE872:
1071:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 18700              		.loc 1 1071 5 is_stmt 1 view .LVU6513
 18701              	.LBB874:
GAS LISTING /tmp/ccH5HMHD.s 			page 496


 18702              	.LBI874:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18703              		.loc 3 98 1 view .LVU6514
 18704              	.LBB875:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18705              		.loc 3 100 3 view .LVU6515
 18706              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18707              		.loc 3 100 10 is_stmt 0 view .LVU6516
 18708 633f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18708      000000
 18709 6346 BA400000 		mov	edx, 64	#,
 18709      00
 18710 634b BE010000 		mov	esi, 1	#,
 18710      00
 18711 6350 488D3D00 		lea	rdi, .LC18[rip]	#,
 18711      000000
 18712 6357 E8000000 		call	fwrite@PLT	#
 18712      00
 18713              	.LVL1131:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18714              		.loc 3 100 10 view .LVU6517
 18715              	.LBE875:
 18716              	.LBE874:
1072:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 18717              		.loc 1 1072 5 is_stmt 1 view .LVU6518
 18718              	.LBB876:
 18719              	.LBI876:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18720              		.loc 3 98 1 view .LVU6519
 18721              	.LBB877:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18722              		.loc 3 100 3 view .LVU6520
 18723              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18724              		.loc 3 100 10 is_stmt 0 view .LVU6521
 18725 635c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18725      000000
 18726 6363 BA2A0000 		mov	edx, 42	#,
 18726      00
 18727 6368 BE010000 		mov	esi, 1	#,
 18727      00
 18728 636d 488D3D00 		lea	rdi, .LC19[rip]	#,
 18728      000000
 18729 6374 E8000000 		call	fwrite@PLT	#
 18729      00
 18730              	.LVL1132:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18731              		.loc 3 100 10 view .LVU6522
 18732              	.LBE877:
 18733              	.LBE876:
1073:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 18734              		.loc 1 1073 5 is_stmt 1 view .LVU6523
 18735              	.LBB878:
 18736              	.LBI878:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18737              		.loc 3 98 1 view .LVU6524
GAS LISTING /tmp/ccH5HMHD.s 			page 497


 18738              	.LBB879:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18739              		.loc 3 100 3 view .LVU6525
 18740              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18741              		.loc 3 100 10 is_stmt 0 view .LVU6526
 18742 6379 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18742      000000
 18743 6380 BA3C0000 		mov	edx, 60	#,
 18743      00
 18744 6385 BE010000 		mov	esi, 1	#,
 18744      00
 18745 638a 488D3D00 		lea	rdi, .LC20[rip]	#,
 18745      000000
 18746 6391 E8000000 		call	fwrite@PLT	#
 18746      00
 18747              	.LVL1133:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18748              		.loc 3 100 10 view .LVU6527
 18749              	.LBE879:
 18750              	.LBE878:
1074:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 18751              		.loc 1 1074 5 is_stmt 1 view .LVU6528
 18752              	.LBB880:
 18753              	.LBI880:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18754              		.loc 3 98 1 view .LVU6529
 18755              	.LBB881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18756              		.loc 3 100 3 view .LVU6530
 18757              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18758              		.loc 3 100 10 is_stmt 0 view .LVU6531
 18759 6396 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18759      000000
 18760 639d BA3D0000 		mov	edx, 61	#,
 18760      00
 18761 63a2 BE010000 		mov	esi, 1	#,
 18761      00
 18762 63a7 488D3D00 		lea	rdi, .LC21[rip]	#,
 18762      000000
 18763 63ae E8000000 		call	fwrite@PLT	#
 18763      00
 18764              	.LVL1134:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18765              		.loc 3 100 10 view .LVU6532
 18766              	.LBE881:
 18767              	.LBE880:
1075:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 18768              		.loc 1 1075 5 is_stmt 1 view .LVU6533
 18769              	.LBB882:
 18770              	.LBI882:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18771              		.loc 3 98 1 view .LVU6534
 18772              	.LBB883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18773              		.loc 3 100 3 view .LVU6535
GAS LISTING /tmp/ccH5HMHD.s 			page 498


 18774              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18775              		.loc 3 100 10 is_stmt 0 view .LVU6536
 18776 63b3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18776      000000
 18777 63ba BA4C0000 		mov	edx, 76	#,
 18777      00
 18778 63bf BE010000 		mov	esi, 1	#,
 18778      00
 18779 63c4 488D3D00 		lea	rdi, .LC22[rip]	#,
 18779      000000
 18780 63cb E8000000 		call	fwrite@PLT	#
 18780      00
 18781              	.LVL1135:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18782              		.loc 3 100 10 view .LVU6537
 18783              	.LBE883:
 18784              	.LBE882:
1076:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 18785              		.loc 1 1076 5 is_stmt 1 view .LVU6538
 18786              	.LBB884:
 18787              	.LBI884:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18788              		.loc 3 98 1 view .LVU6539
 18789              	.LBB885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18790              		.loc 3 100 3 view .LVU6540
 18791              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18792              		.loc 3 100 10 is_stmt 0 view .LVU6541
 18793 63d0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18793      000000
 18794 63d7 BA250000 		mov	edx, 37	#,
 18794      00
 18795 63dc BE010000 		mov	esi, 1	#,
 18795      00
 18796 63e1 488D3D00 		lea	rdi, .LC23[rip]	#,
 18796      000000
 18797 63e8 E8000000 		call	fwrite@PLT	#
 18797      00
 18798              	.LVL1136:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18799              		.loc 3 100 10 view .LVU6542
 18800              	.LBE885:
 18801              	.LBE884:
1077:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 18802              		.loc 1 1077 5 is_stmt 1 view .LVU6543
 18803              	.LBB886:
 18804              	.LBI886:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18805              		.loc 3 98 1 view .LVU6544
 18806              	.LBB887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18807              		.loc 3 100 3 view .LVU6545
 18808              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18809              		.loc 3 100 10 is_stmt 0 view .LVU6546
GAS LISTING /tmp/ccH5HMHD.s 			page 499


 18810 63ed 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18810      000000
 18811 63f4 BA280000 		mov	edx, 40	#,
 18811      00
 18812 63f9 BE010000 		mov	esi, 1	#,
 18812      00
 18813 63fe 488D3D00 		lea	rdi, .LC24[rip]	#,
 18813      000000
 18814 6405 E8000000 		call	fwrite@PLT	#
 18814      00
 18815              	.LVL1137:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18816              		.loc 3 100 10 view .LVU6547
 18817              	.LBE887:
 18818              	.LBE886:
1078:sieve_extend.c ****     exit(1);
 18819              		.loc 1 1078 5 is_stmt 1 view .LVU6548
 18820              	.LBB888:
 18821              	.LBI888:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18822              		.loc 3 98 1 view .LVU6549
 18823              	.LBB889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18824              		.loc 3 100 3 view .LVU6550
 18825              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18826              		.loc 3 100 10 is_stmt 0 view .LVU6551
 18827 640a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18827      000000
 18828 6411 488D3D00 		lea	rdi, .LC25[rip]	#,
 18828      000000
 18829 6418 BA350000 		mov	edx, 53	#,
 18829      00
 18830 641d BE010000 		mov	esi, 1	#,
 18830      00
 18831 6422 E8000000 		call	fwrite@PLT	#
 18831      00
 18832              	.LVL1138:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18833              		.loc 3 100 10 view .LVU6552
 18834              	.LBE889:
 18835              	.LBE888:
1079:sieve_extend.c **** }
 18836              		.loc 1 1079 5 is_stmt 1 view .LVU6553
 18837 6427 BF010000 		mov	edi, 1	#,
 18837      00
 18838 642c E8000000 		call	exit@PLT	#
 18838      00
 18839              	.LVL1139:
 18840              		.cfi_endproc
 18841              	.LFE80:
 18843              		.section	.rodata.str1.1
 18844              	.LC27:
 18845 003b 56616C69 		.string	"Validating... "
 18845      64617469 
 18845      6E672E2E 
 18845      2E2000
GAS LISTING /tmp/ccH5HMHD.s 			page 500


 18846              	.LC28:
 18847 004a 2D2D6865 		.string	"--help"
 18847      6C7000
 18848              	.LC29:
 18849 0051 2D2D7665 		.string	"--verbose"
 18849      72626F73 
 18849      6500
 18850              	.LC30:
 18851 005b 4E6F2076 		.string	"No verbose level specified\n"
 18851      6572626F 
 18851      7365206C 
 18851      6576656C 
 18851      20737065 
 18852              	.LC31:
 18853 0077 256400   		.string	"%d"
 18854              		.section	.rodata.str1.8
 18855 03ae 0000     		.align 8
 18856              	.LC32:
 18857 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 18857      723A2049 
 18857      6E76616C 
 18857      6964206D 
 18857      65617375 
 18858              		.section	.rodata.str1.1
 18859              	.LC33:
 18860 007a 56657262 		.string	"Verbose level set to %d\n"
 18860      6F736520 
 18860      6C657665 
 18860      6C207365 
 18860      7420746F 
 18861              	.LC34:
 18862 0093 2D2D6368 		.string	"--check"
 18862      65636B00 
 18863              	.LC35:
 18864 009b 2D2D7475 		.string	"--tune"
 18864      6E6500
 18865              	.LC36:
 18866 00a2 4E6F2074 		.string	"No tune level specified\n"
 18866      756E6520 
 18866      6C657665 
 18866      6C207370 
 18866      65636966 
 18867              		.section	.rodata.str1.8
 18868 03d5 000000   		.align 8
 18869              	.LC37:
 18870 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 18870      723A2049 
 18870      6E76616C 
 18870      69642074 
 18870      756E6520 
 18871              		.section	.rodata.str1.1
 18872              	.LC38:
 18873 00bb 54756E65 		.string	"Tune level set to %d\n"
 18873      206C6576 
 18873      656C2073 
 18873      65742074 
 18873      6F202564 
GAS LISTING /tmp/ccH5HMHD.s 			page 501


 18874              	.LC39:
 18875 00d1 2D2D7368 		.string	"--show"
 18875      6F7700
 18876              	.LC40:
 18877 00d8 4E6F2073 		.string	"No show maximum specified\n"
 18877      686F7720 
 18877      6D617869 
 18877      6D756D20 
 18877      73706563 
 18878              	.LC41:
 18879 00f3 256A7500 		.string	"%ju"
 18880              		.section	.rodata.str1.8
 18881 03f7 00       		.align 8
 18882              	.LC42:
 18883 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 18883      723A2049 
 18883      6E76616C 
 18883      69642073 
 18883      686F7720 
 18884              		.section	.rodata.str1.1
 18885              	.LC43:
 18886 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 18886      206D6178 
 18886      696D756D 
 18886      20736574 
 18886      20746F20 
 18887              	.LC44:
 18888 0110 496E7661 		.string	"Invalid size %s\n"
 18888      6C696420 
 18888      73697A65 
 18888      2025730A 
 18888      00
 18889              	.LC45:
 18890 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 18890      6865636B 
 18890      696E6720 
 18890      73697A65 
 18890      20256A75 
 18891              	.LC46:
 18892 013a 2E626C6F 		.string	".blocksize %ju-"
 18892      636B7369 
 18892      7A652025 
 18892      6A752D00 
 18893              	.LC47:
 18894 014a 76616C69 		.string	"valid;"
 18894      643B00
 18895              	.LC48:
 18896 0151 2E2E2E56 		.string	"...Valid algorithm"
 18896      616C6964 
 18896      20616C67 
 18896      6F726974 
 18896      686D00
 18897              	.LC49:
 18898 0164 54756E69 		.string	"Tuning..."
 18898      6E672E2E 
 18898      2E00
 18899              	.LC50:
GAS LISTING /tmp/ccH5HMHD.s 			page 502


 18900 016e 2E283E29 		.string	".(>)"
 18900      00
 18901              		.section	.rodata.str1.8
 18902 0419 00000000 		.align 8
 18902      000000
 18903              	.LC51:
 18904 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 18904      6B73697A 
 18904      655F6269 
 18904      74732025 
 18904      31306A75 
 18905              		.section	.rodata.str1.1
 18906              	.LC52:
 18907 0173 2E2E2E2E 		.string	"...."
 18907      00
 18908              		.section	.rodata.str1.8
 18909 04a7 00       		.align 8
 18910              	.LC53:
 18911 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18911      72657375 
 18911      6C74732E 
 18911      20496E69 
 18911      74616C20 
 18912              		.section	.rodata.str1.1
 18913              	.LC54:
 18914 0178 42657374 		.string	"Best options"
 18914      206F7074 
 18914      696F6E73 
 18914      00
 18915              	.LC55:
 18916 0185 28256A75 		.string	"(%ju) "
 18916      292000
 18917              	.LC56:
 18918 018c 2E2E2E00 		.string	"..."
 18919              	.LC57:
 18920 0190 2E426573 		.string	".Best result:"
 18920      74207265 
 18920      73756C74 
 18920      3A00
 18921              		.section	.rodata.str1.8
 18922 04fa 00000000 		.align 8
 18922      0000
 18923              	.LC58:
 18924 0500 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 18924      686D6172 
 18924      6B696E67 
 18924      2E2E2E20 
 18924      77697468 
 18925 0537 00       		.align 8
 18926              	.LC60:
 18927 0538 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 18927      65727661 
 18927      6E64616D 
 18927      5F657874 
 18927      656E643B 
 18928 057a 00000000 		.align 8
 18928      0000
GAS LISTING /tmp/ccH5HMHD.s 			page 503


 18929              	.LC61:
 18930 0580 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 18930      6573202D 
 18930      20706572 
 18930      20352073 
 18930      65636F6E 
 18931              		.section	.rodata.str1.1
 18932              	.LC62:
 18933 019e 53686F77 		.string	"Show result set:"
 18933      20726573 
 18933      756C7420 
 18933      7365743A 
 18933      00
 18934              		.section	.text.startup,"ax",@progbits
 18935              		.p2align 4
 18936              		.globl	main
 18938              	main:
 18939              	.LVL1140:
 18940              	.LFB85:
1125:sieve_extend.c **** 
1126:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1127:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1128:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1129:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1130:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1131:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1132:sieve_extend.c **** }
1133:sieve_extend.c **** 
1134:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1135:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1136:sieve_extend.c **** 
1137:sieve_extend.c ****     double best_avg = 0;
1138:sieve_extend.c ****     best_blocksize_bits = 0;
1139:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1140:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1141:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1142:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1143:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1144:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1145:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1146:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1147:sieve_extend.c ****     double sample_duration = default_sample_duration;
1148:sieve_extend.c **** 
1149:sieve_extend.c ****     // determines the size of the resultset
1150:sieve_extend.c ****     switch (tune_level) {
1151:sieve_extend.c ****         case 1:
1152:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1153:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1154:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1155:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1156:sieve_extend.c ****             sample_max = 8;
1157:sieve_extend.c ****             sample_duration = 0.1;
1158:sieve_extend.c ****             break;
1159:sieve_extend.c ****         case 2:
1160:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1161:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1162:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
GAS LISTING /tmp/ccH5HMHD.s 			page 504


1163:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1164:sieve_extend.c ****             sample_max = 8;
1165:sieve_extend.c ****             sample_duration = 0.2;
1166:sieve_extend.c ****             break;
1167:sieve_extend.c ****         case 3:
1168:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1169:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1170:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1171:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1172:sieve_extend.c ****             sample_max = 8;
1173:sieve_extend.c ****             sample_duration = 0.2;
1174:sieve_extend.c ****             break;
1175:sieve_extend.c ****     }
1176:sieve_extend.c ****     
1177:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1178:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1179:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1180:sieve_extend.c ****     counter_t tuning_results=0;
1181:sieve_extend.c ****     counter_t tuning_result_index=0;
1182:sieve_extend.c ****     
1183:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1184:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1185:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1186:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1187:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1188:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1189:sieve_extend.c **** 
1190:sieve_extend.c ****                         // set variables
1191:sieve_extend.c ****                         tuning_results++;
1192:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1193:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1194:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1195:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1196:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1197:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1198:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1199:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1200:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1201:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1202:sieve_extend.c **** 
1203:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1204:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1205:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1206:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1207:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1208:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1209:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1210:sieve_extend.c ****                         }
1211:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1212:sieve_extend.c ****                         tuning_result_index++;
1213:sieve_extend.c ****                     }
1214:sieve_extend.c ****                 }
1215:sieve_extend.c ****             }
1216:sieve_extend.c ****         }
1217:sieve_extend.c ****     }
1218:sieve_extend.c ****     if (option_verboselevel >= 2) {
1219:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
GAS LISTING /tmp/ccH5HMHD.s 			page 505


1220:sieve_extend.c ****         printf("Best options\n");
1221:sieve_extend.c ****     }
1222:sieve_extend.c ****     counter_t step=0;
1223:sieve_extend.c ****     while (tuning_results>4) {
1224:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1225:sieve_extend.c ****         step++;
1226:sieve_extend.c ****         if (option_verboselevel >= 2) {
1227:sieve_extend.c ****             tuning_result_index = 0;
1228:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1229:sieve_extend.c ****             if (option_verboselevel >= 3) {
1230:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1231:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1232:sieve_extend.c ****                 }
1233:sieve_extend.c ****             }
1234:sieve_extend.c ****         }
1235:sieve_extend.c **** 
1236:sieve_extend.c ****         tuning_results = tuning_results / 2;
1237:sieve_extend.c **** 
1238:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1239:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1240:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1241:sieve_extend.c ****         }
1242:sieve_extend.c ****         
1243:sieve_extend.c ****     }
1244:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1245:sieve_extend.c ****     if (option_verboselevel >= 1) {
1246:sieve_extend.c ****         tuning_result_index = 0;
1247:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1248:sieve_extend.c ****     }
1249:sieve_extend.c **** 
1250:sieve_extend.c ****     free(tuning_result);
1251:sieve_extend.c ****     return best_result;
1252:sieve_extend.c **** }
1253:sieve_extend.c **** 
1254:sieve_extend.c **** int main(int argc, char *argv[]) {
 18941              		.loc 1 1254 34 view -0
 18942              		.cfi_startproc
 18943              		.loc 1 1254 34 is_stmt 0 view .LVU6555
 18944 0000 F30F1EFA 		endbr64	
 18945 0004 4157     		push	r15	#
 18946              		.cfi_def_cfa_offset 16
 18947              		.cfi_offset 15, -16
 18948 0006 4156     		push	r14	#
 18949              		.cfi_def_cfa_offset 24
 18950              		.cfi_offset 14, -24
 18951 0008 4155     		push	r13	#
 18952              		.cfi_def_cfa_offset 32
 18953              		.cfi_offset 13, -32
 18954 000a 4154     		push	r12	#
 18955              		.cfi_def_cfa_offset 40
 18956              		.cfi_offset 12, -40
 18957 000c 55       		push	rbp	#
 18958              		.cfi_def_cfa_offset 48
 18959              		.cfi_offset 6, -48
 18960 000d 53       		push	rbx	#
 18961              		.cfi_def_cfa_offset 56
 18962              		.cfi_offset 3, -56
GAS LISTING /tmp/ccH5HMHD.s 			page 506


 18963 000e 488DA424 		lea	rsp, -232[rsp]	#,
 18963      18FFFFFF 
 18964              		.cfi_def_cfa_offset 288
 18965              	# sieve_extend.c:1254: int main(int argc, char *argv[]) {
 18966              		.loc 1 1254 34 view .LVU6556
 18967 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp570, MEM[(<address-space-1> long unsigned int *)40B]
 18967      25280000 
 18967      00
 18968 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7524, tmp570
 18968      D8000000 
 18969 0027 31C0     		xor	eax, eax	# tmp570
1255:sieve_extend.c **** 
1256:sieve_extend.c ****     
1257:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 18970              		.loc 1 1257 5 is_stmt 1 view .LVU6557
 18971              	# sieve_extend.c:1257:     counter_t option_maxFactor  = default_sieve_limit;
 18972              		.loc 1 1257 15 is_stmt 0 view .LVU6558
 18973 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 18973      A0000000 
 18973      40420F00 
1258:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18974              		.loc 1 1258 5 is_stmt 1 view .LVU6559
 18975              	.LBB996:
 18976              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1259:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1260:sieve_extend.c ****     int option_check = default_check_level;
1261:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1262:sieve_extend.c **** 
1263:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 18977              		.loc 1 1263 5 is_stmt 0 view .LVU6560
 18978 0035 83FF01   		cmp	edi, 1	# argc,
 18979              	.LBE996:
 18980              	# sieve_extend.c:1258:     counter_t option_showMaxFactor = default_showMaxFactor;
1258:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18981              		.loc 1 1258 15 view .LVU6561
 18982 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 18982      A8000000 
 18982      00000000 
1259:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18983              		.loc 1 1259 5 is_stmt 1 view .LVU6562
 18984              	# sieve_extend.c:1259:     int option_verboselevel = default_verbose_level;
1259:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18985              		.loc 1 1259 9 is_stmt 0 view .LVU6563
 18986 0044 C7842498 		mov	DWORD PTR 152[rsp], 2	# option_verboselevel,
 18986      00000002 
 18986      000000
1260:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 18987              		.loc 1 1260 5 is_stmt 1 view .LVU6564
 18988              	.LVL1141:
1261:sieve_extend.c **** 
 18989              		.loc 1 1261 5 view .LVU6565
 18990              	# sieve_extend.c:1261:     int option_tunelevel = default_tune_level;
1261:sieve_extend.c **** 
 18991              		.loc 1 1261 9 is_stmt 0 view .LVU6566
 18992 004f C784249C 		mov	DWORD PTR 156[rsp], 1	# option_tunelevel,
 18992      00000001 
 18992      000000
GAS LISTING /tmp/ccH5HMHD.s 			page 507


 18993              		.loc 1 1263 5 is_stmt 1 view .LVU6567
 18994              	.LBB1021:
 18995              		.loc 1 1263 10 view .LVU6568
 18996              	.LVL1142:
 18997              		.loc 1 1263 21 view .LVU6569
 18998              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
 18999              		.loc 1 1263 5 is_stmt 0 view .LVU6570
 19000 005a 0F8E1C05 		jle	.L1734	#,
 19000      0000
 19001 0060 89FD     		mov	ebp, edi	# argc, tmp524
 19002 0062 4989F4   		mov	r12, rsi	# argv, tmp525
 19003              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
 19004              		.loc 1 1263 14 view .LVU6571
 19005 0065 BB010000 		mov	ebx, 1	# arg,
 19005      00
 19006 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp464,
 19006      000000
 19007              	# sieve_extend.c:1265:         else if (strcmp(argv[arg], "--verbose")==0) {
1264:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1265:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19008              		.loc 1 1265 18 view .LVU6572
 19009 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp479,
 19009      000000
 19010 0078 EB66     		jmp	.L1718	#
 19011              	.LVL1143:
 19012 007a 660F1F44 		.p2align 4,,7
 19012      0000
 19013              		.p2align 3
 19014              	.L1852:
1266:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19015              		.loc 1 1266 13 is_stmt 1 view .LVU6573
 19016              	# sieve_extend.c:1266:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 19017              		.loc 1 1266 16 is_stmt 0 view .LVU6574
 19018 0080 83C301   		add	ebx, 1	# arg,
 19019              	.LVL1144:
 19020              		.loc 1 1266 16 view .LVU6575
 19021 0083 39DD     		cmp	ebp, ebx	# argc, arg
 19022 0085 0F8E9D0E 		jle	.L1850	#,
 19022      0000
1267:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19023              		.loc 1 1267 13 is_stmt 1 view .LVU6576
 19024              	# sieve_extend.c:1267:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19025              		.loc 1 1267 28 is_stmt 0 view .LVU6577
 19026 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 19026      08
 19027              	# sieve_extend.c:1267:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19028              		.loc 1 1267 17 view .LVU6578
 19029 0090 488D9424 		lea	rdx, 152[rsp]	# tmp301,
 19029      98000000 
 19030 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 19031 009b 31C0     		xor	eax, eax	#
 19032 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 19032      000000
 19033 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 19033      00
 19034              	.LVL1145:
 19035              	# sieve_extend.c:1267:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
GAS LISTING /tmp/ccH5HMHD.s 			page 508


 19036              		.loc 1 1267 16 view .LVU6579
 19037 00a9 83F801   		cmp	eax, 1	# tmp526,
 19038 00ac 0F85E204 		jne	.L1723	#,
 19038      0000
 19039              	# sieve_extend.c:1267:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19040              		.loc 1 1267 91 discriminator 1 view .LVU6580
 19041 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 19041      000000
 19042              	# sieve_extend.c:1267:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19043              		.loc 1 1267 68 discriminator 1 view .LVU6581
 19044 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 19045 00bc 0F8FD204 		jg	.L1723	#,
 19045      0000
1268:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1269:sieve_extend.c ****             }
1270:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 19046              		.loc 1 1270 13 is_stmt 1 view .LVU6582
 19047              	.LVL1146:
 19048              	.LBB997:
 19049              	.LBI997:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19050              		.loc 3 105 1 view .LVU6583
 19051              	.LBB998:
 19052              		.loc 3 107 3 view .LVU6584
 19053              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19054              		.loc 3 107 10 is_stmt 0 view .LVU6585
 19055 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 19055      000000
 19056 00c9 BF010000 		mov	edi, 1	#,
 19056      00
 19057 00ce 31C0     		xor	eax, eax	#
 19058 00d0 E8000000 		call	__printf_chk@PLT	#
 19058      00
 19059              	.LVL1147:
 19060              	.L1725:
 19061              		.loc 3 107 10 view .LVU6586
 19062              	.LBE998:
 19063              	.LBE997:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19064              		.loc 1 1263 33 is_stmt 1 discriminator 2 view .LVU6587
 19065              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19066              		.loc 1 1263 36 is_stmt 0 discriminator 2 view .LVU6588
 19067 00d5 83C301   		add	ebx, 1	# arg,
 19068              	.LVL1148:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19069              		.loc 1 1263 21 is_stmt 1 discriminator 2 view .LVU6589
 19070              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19071              		.loc 1 1263 5 is_stmt 0 discriminator 2 view .LVU6590
 19072 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 19073 00da 0F8E0001 		jle	.L1851	#,
 19073      0000
 19074              	.LVL1149:
 19075              	.L1718:
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19076              		.loc 1 1264 9 is_stmt 1 view .LVU6591
GAS LISTING /tmp/ccH5HMHD.s 			page 509


 19077              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19078              		.loc 1 1264 24 is_stmt 0 view .LVU6592
 19079 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 19080              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19081              		.loc 1 1264 13 view .LVU6593
 19082 00e3 41B90700 		mov	r9d, 7	# tmp290,
 19082      0000
 19083              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19084              		.loc 1 1264 24 view .LVU6594
 19085 00e9 48C1E003 		sal	rax, 3	# _2,
 19086              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19087              		.loc 1 1264 13 view .LVU6595
 19088 00ed 4C89EF   		mov	rdi, r13	# tmp289, tmp464
 19089              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19090              		.loc 1 1264 24 view .LVU6596
 19091 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 19092              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19093              		.loc 1 1264 13 view .LVU6597
 19094 00f4 4C89C9   		mov	rcx, r9	# tmp490, tmp290
 19095 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 19096 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 19097 00fd F3A6     		repz cmpsb
 19098 00ff 0F97C2   		seta	dl	#, tmp291
 19099 0102 80DA00   		sbb	dl, 0	# _5
 19100              	# sieve_extend.c:1264:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1264:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19101              		.loc 1 1264 12 view .LVU6598
 19102 0105 84D2     		test	dl, dl	# _5
 19103 0107 0F84A404 		je	.L1848	#,
 19103      0000
1265:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19104              		.loc 1 1265 14 is_stmt 1 view .LVU6599
 19105              	# sieve_extend.c:1265:         else if (strcmp(argv[arg], "--verbose")==0) {
1265:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19106              		.loc 1 1265 18 is_stmt 0 view .LVU6600
 19107 010d B90A0000 		mov	ecx, 10	# tmp296,
 19107      00
 19108 0112 4C89C6   		mov	rsi, r8	# _4, _4
 19109 0115 4C89F7   		mov	rdi, r14	# tmp295, tmp479
 19110 0118 F3A6     		repz cmpsb
 19111 011a 410F97C2 		seta	r10b	#, tmp297
 19112 011e 4180DA00 		sbb	r10b, 0	# _11
 19113              	# sieve_extend.c:1265:         else if (strcmp(argv[arg], "--verbose")==0) {
1265:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19114              		.loc 1 1265 17 view .LVU6601
 19115 0122 4584D2   		test	r10b, r10b	# _11
 19116 0125 0F8455FF 		je	.L1852	#,
 19116      FFFF
1271:sieve_extend.c ****         } 
1272:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19117              		.loc 1 1272 14 is_stmt 1 view .LVU6602
GAS LISTING /tmp/ccH5HMHD.s 			page 510


 19118              	# sieve_extend.c:1272:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19119              		.loc 1 1272 18 is_stmt 0 view .LVU6603
 19120 012b B9080000 		mov	ecx, 8	# tmp306,
 19120      00
 19121 0130 4C89C6   		mov	rsi, r8	# _4, _4
 19122 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp305,
 19122      000000
 19123 013a F3A6     		repz cmpsb
 19124 013c 410F97C3 		seta	r11b	#, tmp307
 19125 0140 4180DB00 		sbb	r11b, 0	# _23
 19126              	# sieve_extend.c:1272:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19127              		.loc 1 1272 17 view .LVU6604
 19128 0144 4584DB   		test	r11b, r11b	# _23
 19129 0147 748C     		je	.L1725	#,
1273:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19130              		.loc 1 1273 14 is_stmt 1 view .LVU6605
 19131              	# sieve_extend.c:1273:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19132              		.loc 1 1273 18 is_stmt 0 view .LVU6606
 19133 0149 4C89C6   		mov	rsi, r8	# _4, _4
 19134 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp311,
 19134      000000
 19135 0153 4C89C9   		mov	rcx, r9	# tmp496, tmp290
 19136 0156 F3A6     		repz cmpsb
 19137 0158 0F97C2   		seta	dl	#, tmp313
 19138 015b 80DA00   		sbb	dl, 0	# _24
 19139              	# sieve_extend.c:1273:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19140              		.loc 1 1273 17 view .LVU6607
 19141 015e 84D2     		test	dl, dl	# _24
 19142 0160 0F855A01 		jne	.L1726	#,
 19142      0000
 19143              		.loc 1 1273 52 is_stmt 1 discriminator 1 view .LVU6608
 19144              	# sieve_extend.c:1273:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19145              		.loc 1 1273 68 is_stmt 0 discriminator 1 view .LVU6609
 19146 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19146      00000000 
 19146      000000
1274:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 19147              		.loc 1 1274 13 is_stmt 1 discriminator 1 view .LVU6610
 19148              	# sieve_extend.c:1274:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 19149              		.loc 1 1274 16 is_stmt 0 discriminator 1 view .LVU6611
 19150 0171 83C301   		add	ebx, 1	# arg,
 19151              	.LVL1150:
 19152              		.loc 1 1274 16 discriminator 1 view .LVU6612
 19153 0174 39DD     		cmp	ebp, ebx	# argc, arg
 19154 0176 0F8EEC0D 		jle	.L1853	#,
 19154      0000
1275:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19155              		.loc 1 1275 13 is_stmt 1 view .LVU6613
 19156              	# sieve_extend.c:1275:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19157              		.loc 1 1275 28 is_stmt 0 view .LVU6614
 19158 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 19158      08
 19159              	# sieve_extend.c:1275:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19160              		.loc 1 1275 17 view .LVU6615
 19161 0181 488D9424 		lea	rdx, 156[rsp]	# tmp317,
 19161      9C000000 
 19162 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
GAS LISTING /tmp/ccH5HMHD.s 			page 511


 19163 018c 31C0     		xor	eax, eax	#
 19164 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 19164      000000
 19165 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 19165      00
 19166              	.LVL1151:
 19167              	# sieve_extend.c:1275:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19168              		.loc 1 1275 16 view .LVU6616
 19169 019a 83F801   		cmp	eax, 1	# tmp527,
 19170 019d 0F85A70D 		jne	.L1728	#,
 19170      0000
 19171              	# sieve_extend.c:1275:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19172              		.loc 1 1275 85 discriminator 1 view .LVU6617
 19173 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 19173      000000
 19174              	# sieve_extend.c:1275:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19175              		.loc 1 1275 65 discriminator 1 view .LVU6618
 19176 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 19177 01ad 0F8F970D 		jg	.L1728	#,
 19177      0000
1276:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1277:sieve_extend.c ****             }
1278:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 19178              		.loc 1 1278 13 is_stmt 1 view .LVU6619
 19179              	.LVL1152:
 19180              	.LBB999:
 19181              	.LBI999:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19182              		.loc 3 105 1 view .LVU6620
 19183              	.LBB1000:
 19184              		.loc 3 107 3 view .LVU6621
 19185              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19186              		.loc 3 107 10 is_stmt 0 view .LVU6622
 19187 01b3 31C0     		xor	eax, eax	#
 19188 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 19188      000000
 19189 01bc BF010000 		mov	edi, 1	#,
 19189      00
 19190              	.LBE1000:
 19191              	.LBE999:
 19192              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19193              		.loc 1 1263 36 view .LVU6623
 19194 01c1 83C301   		add	ebx, 1	# arg,
 19195              	.LVL1153:
 19196              	.LBB1002:
 19197              	.LBB1001:
 19198              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19199              		.loc 3 107 10 view .LVU6624
 19200 01c4 E8000000 		call	__printf_chk@PLT	#
 19200      00
 19201              	.LVL1154:
 19202              		.loc 3 107 10 view .LVU6625
 19203              	.LBE1001:
 19204              	.LBE1002:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19205              		.loc 1 1263 33 is_stmt 1 view .LVU6626
GAS LISTING /tmp/ccH5HMHD.s 			page 512


1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19206              		.loc 1 1263 21 view .LVU6627
 19207              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19208              		.loc 1 1263 5 is_stmt 0 view .LVU6628
 19209 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 19210 01cb 0F8F0FFF 		jg	.L1718	#,
 19210      FFFF
 19211 01d1 66662E0F 		.p2align 4
 19211      1F840000 
 19211      0000000F 
 19211      1F4000
 19212              		.p2align 3
 19213              	.L1851:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19214              		.loc 1 1263 5 view .LVU6629
 19215              	.LBE1021:
1279:sieve_extend.c ****         }
1280:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1281:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1282:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1283:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1284:sieve_extend.c ****             }
1285:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1286:sieve_extend.c ****         }
1287:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1288:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1289:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1290:sieve_extend.c ****         }
1291:sieve_extend.c ****     }
1292:sieve_extend.c **** 
1293:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 19216              		.loc 1 1293 5 is_stmt 1 view .LVU6630
1294:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1295:sieve_extend.c ****         printf("\nResult set:\n");
1296:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1297:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1298:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1299:sieve_extend.c ****         else printf("The sieve is VALID\n");
1300:sieve_extend.c ****         delete_sieve(sieve_instance);
1301:sieve_extend.c ****         exit(0);
1302:sieve_extend.c ****     }
1303:sieve_extend.c **** 
1304:sieve_extend.c ****     struct timespec start_time,end_time;
 19217              		.loc 1 1304 5 view .LVU6631
1305:sieve_extend.c **** 
1306:sieve_extend.c ****     if (option_check) {
 19218              		.loc 1 1306 5 view .LVU6632
1307:sieve_extend.c ****         // Count the number of primes and validate the result
1308:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 19219              		.loc 1 1308 9 view .LVU6633
 19220              	# sieve_extend.c:1308:         if (option_verboselevel >= 1) printf("Validating... ");
 19221              		.loc 1 1308 12 is_stmt 0 view .LVU6634
 19222 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 19222      000000
 19223              	.LVL1155:
 19224              		.loc 1 1308 12 view .LVU6635
GAS LISTING /tmp/ccH5HMHD.s 			page 513


 19225 01e7 85ED     		test	ebp, ebp	#
 19226 01e9 0F8F8D03 		jg	.L1734	#,
 19226      0000
 19227              	.LVL1156:
 19228              	.L1719:
1309:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19229              		.loc 1 1309 9 is_stmt 1 view .LVU6636
 19230              	# sieve_extend.c:1309:         if (option_verboselevel >= 2) printf("\n");
 19231              		.loc 1 1309 12 is_stmt 0 view .LVU6637
 19232 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 19232      00000001 
 19233 01f7 7E0A     		jle	.L1735	#,
 19234              		.loc 1 1309 39 is_stmt 1 view .LVU6638
 19235              	.LVL1157:
 19236              	.LBB1022:
 19237              	.LBI1022:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19238              		.loc 3 105 1 view .LVU6639
 19239              	.LBB1023:
 19240              		.loc 3 107 3 view .LVU6640
 19241              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19242              		.loc 3 107 10 is_stmt 0 view .LVU6641
 19243 01f9 BF0A0000 		mov	edi, 10	#,
 19243      00
 19244 01fe E8000000 		call	putchar@PLT	#
 19244      00
 19245              	.LVL1158:
 19246              	.L1735:
 19247              		.loc 3 107 10 view .LVU6642
 19248              	.LBE1023:
 19249              	.LBE1022:
 19250              	.LBB1024:
 19251              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19252              		.loc 1 1263 14 view .LVU6643
 19253 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 19253      07000000 
 19254 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 19254      0000
 19255              	.LBE1024:
 19256              	.LBB1025:
 19257              	.LBB1026:
 19258              	.LBB1027:
 19259              	.LBB1028:
 19260              	.LBB1029:
 19261              	.LBB1030:
 19262              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19263              		.loc 3 107 10 view .LVU6644
 19264 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp478,
 19264      000000
 19265              	.L1742:
 19266              	.LVL1159:
 19267              		.loc 3 107 10 view .LVU6645
 19268              	.LBE1030:
 19269              	.LBE1029:
 19270              	.LBE1028:
 19271              	.LBE1027:
GAS LISTING /tmp/ccH5HMHD.s 			page 514


1310:sieve_extend.c **** 
1311:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1312:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1313:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19272              		.loc 1 1313 13 is_stmt 1 view .LVU6646
 19273              	# sieve_extend.c:1313:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19274              		.loc 1 1313 37 is_stmt 0 view .LVU6647
 19275 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19275      000000
 19276              	# sieve_extend.c:1313:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19277              		.loc 1 1313 16 view .LVU6648
 19278 021f 83F801   		cmp	eax, 1	# prephitmp_326,
 19279 0222 7E1D     		jle	.L1736	#,
 19280              		.loc 1 1313 43 is_stmt 1 view .LVU6649
 19281              	.LVL1160:
 19282              	.LBB1046:
 19283              	.LBI1046:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19284              		.loc 3 105 1 view .LVU6650
 19285              	.LBB1047:
 19286              		.loc 3 107 3 view .LVU6651
 19287              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19288              		.loc 3 107 10 is_stmt 0 view .LVU6652
 19289 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 19290 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 19290      000000
 19291 022e BF010000 		mov	edi, 1	#,
 19291      00
 19292 0233 31C0     		xor	eax, eax	#
 19293 0235 E8000000 		call	__printf_chk@PLT	#
 19293      00
 19294              	.LVL1161:
 19295 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19295      000000
 19296              	.LVL1162:
 19297              	.L1736:
 19298              		.loc 3 107 10 view .LVU6653
 19299              	.LBE1047:
 19300              	.LBE1046:
 19301              	.LBE1026:
 19302              	.LBE1025:
 19303              	.LBB1056:
 19304              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19305              		.loc 1 1263 14 view .LVU6654
 19306 0241 41BC0500 		mov	r12d, 5	# ivtmp_106,
 19306      0000
 19307 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 19307      00
 19308 024c EB56     		jmp	.L1740	#
 19309              	.LVL1163:
 19310 024e 6690     		.p2align 4,,7
 19311              		.p2align 3
 19312              	.L1737:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19313              		.loc 1 1263 14 view .LVU6655
 19314              	.LBE1056:
GAS LISTING /tmp/ccH5HMHD.s 			page 515


 19315              	.LBB1057:
 19316              	.LBB1053:
 19317              	.LBB1048:
 19318              	.LBB1041:
1314:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1315:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1316:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1317:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19319              		.loc 1 1317 17 is_stmt 1 view .LVU6656
 19320              	# sieve_extend.c:1317:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 19321              		.loc 1 1317 40 is_stmt 0 view .LVU6657
 19322 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 19323 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 19324 0256 E8000000 		call	sieve	#
 19324      00
 19325              	.LVL1164:
 19326              	# sieve_extend.c:1318:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1318:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19327              		.loc 1 1318 29 view .LVU6658
 19328 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 19328      000000
 19329              	# sieve_extend.c:1317:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1317:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19330              		.loc 1 1317 40 view .LVU6659
 19331 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp530
 19332              	.LVL1165:
 19333              		.loc 1 1318 17 is_stmt 1 view .LVU6660
 19334              	# sieve_extend.c:1318:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19335              		.loc 1 1318 29 is_stmt 0 view .LVU6661
 19336 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 19337 0268 E8000000 		call	validatePrimeCount	#
 19337      00
 19338              	.LVL1166:
 19339              	.LBB1032:
 19340              	.LBB1033:
 19341              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 19342              		.loc 1 116 5 view .LVU6662
 19343 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_128->bitarray
 19344              	.LBE1033:
 19345              	.LBE1032:
 19346              	# sieve_extend.c:1318:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19347              		.loc 1 1318 29 view .LVU6663
 19348 0270 89C3     		mov	ebx, eax	# valid, tmp531
 19349              	.LVL1167:
1319:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 19350              		.loc 1 1319 17 is_stmt 1 view .LVU6664
 19351              	.LBB1035:
 19352              	.LBI1032:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19353              		.loc 1 115 13 view .LVU6665
 19354              	.LBB1034:
 116:sieve_extend.c ****     free(sieve);
 19355              		.loc 1 116 5 view .LVU6666
 19356 0272 E8000000 		call	free@PLT	#
 19356      00
 19357              	.LVL1168:
GAS LISTING /tmp/ccH5HMHD.s 			page 516


 117:sieve_extend.c **** }
 19358              		.loc 1 117 5 view .LVU6667
 19359 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 19360 027a E8000000 		call	free@PLT	#
 19360      00
 19361              	.LVL1169:
 117:sieve_extend.c **** }
 19362              		.loc 1 117 5 is_stmt 0 view .LVU6668
 19363              	.LBE1034:
 19364              	.LBE1035:
1320:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 19365              		.loc 1 1320 17 is_stmt 1 view .LVU6669
 19366              	# sieve_extend.c:1320:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19367              		.loc 1 1320 20 is_stmt 0 view .LVU6670
 19368 027f 85DB     		test	ebx, ebx	# valid
 19369 0281 0F84C902 		je	.L1778	#,
 19369      0000
 19370              		.loc 1 1320 44 is_stmt 1 discriminator 2 view .LVU6671
 19371              	# sieve_extend.c:1320:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19372              		.loc 1 1320 68 is_stmt 0 discriminator 2 view .LVU6672
 19373 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19373      000000
 19374              	# sieve_extend.c:1320:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19375              		.loc 1 1320 47 discriminator 2 view .LVU6673
 19376 028e 83F802   		cmp	eax, 2	# prephitmp_326,
 19377 0291 0F8FE900 		jg	.L1854	#,
 19377      0000
 19378              	.LBE1041:
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19379              		.loc 1 1315 75 is_stmt 1 discriminator 2 view .LVU6674
 19380              	# sieve_extend.c:1315:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19381              		.loc 1 1315 90 is_stmt 0 discriminator 2 view .LVU6675
 19382 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 19383              	.LVL1170:
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19384              		.loc 1 1315 49 is_stmt 1 discriminator 2 view .LVU6676
 19385              	# sieve_extend.c:1315:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19386              		.loc 1 1315 13 is_stmt 0 discriminator 2 view .LVU6677
 19387 029a 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19388 029e 0F840301 		je	.L1855	#,
 19388      0000
 19389              	.LVL1171:
 19390              	.L1740:
 19391              	.LBB1042:
1316:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19392              		.loc 1 1316 17 is_stmt 1 view .LVU6678
 19393              	# sieve_extend.c:1316:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1316:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19394              		.loc 1 1316 20 is_stmt 0 view .LVU6679
 19395 02a4 83F802   		cmp	eax, 2	# prephitmp_326,
 19396 02a7 7EA7     		jle	.L1737	#,
1316:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19397              		.loc 1 1316 47 is_stmt 1 view .LVU6680
 19398              	.LVL1172:
 19399              	.LBB1036:
GAS LISTING /tmp/ccH5HMHD.s 			page 517


 19400              	.LBI1029:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19401              		.loc 3 105 1 view .LVU6681
 19402              	.LBB1031:
 19403              		.loc 3 107 3 view .LVU6682
 19404              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19405              		.loc 3 107 10 is_stmt 0 view .LVU6683
 19406 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 19407 02ac 4C89F6   		mov	rsi, r14	#, tmp478
 19408 02af BF010000 		mov	edi, 1	#,
 19408      00
 19409 02b4 31C0     		xor	eax, eax	#
 19410 02b6 E8000000 		call	__printf_chk@PLT	#
 19410      00
 19411              	.LVL1173:
 19412 02bb EB93     		jmp	.L1737	#
 19413              	.LVL1174:
 19414 02bd 0F1F00   		.p2align 4,,7
 19415              		.p2align 3
 19416              	.L1726:
 19417              		.loc 3 107 10 view .LVU6684
 19418              	.LBE1031:
 19419              	.LBE1036:
 19420              	.LBE1042:
 19421              	.LBE1048:
 19422              	.LBE1053:
 19423              	.LBE1057:
 19424              	.LBB1058:
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19425              		.loc 1 1280 14 is_stmt 1 view .LVU6685
 19426              	# sieve_extend.c:1280:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19427              		.loc 1 1280 18 is_stmt 0 view .LVU6686
 19428 02c0 4C89C9   		mov	rcx, r9	# tmp290, tmp290
 19429 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 19430 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp321,
 19430      000000
 19431 02cd F3A6     		repz cmpsb
 19432 02cf 410F97C1 		seta	r9b	#, tmp323
 19433 02d3 4180D900 		sbb	r9b, 0	# _36
 19434              	# sieve_extend.c:1280:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19435              		.loc 1 1280 17 view .LVU6687
 19436 02d7 4584C9   		test	r9b, r9b	# _36
 19437 02da 756C     		jne	.L1730	#,
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19438              		.loc 1 1280 52 is_stmt 1 discriminator 1 view .LVU6688
 19439              	# sieve_extend.c:1280:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19440              		.loc 1 1280 72 is_stmt 0 discriminator 1 view .LVU6689
 19441 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19441      A8000000 
 19441      00000000 
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19442              		.loc 1 1281 13 is_stmt 1 discriminator 1 view .LVU6690
 19443              	# sieve_extend.c:1281:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
GAS LISTING /tmp/ccH5HMHD.s 			page 518


 19444              		.loc 1 1281 16 is_stmt 0 discriminator 1 view .LVU6691
 19445 02e8 83C301   		add	ebx, 1	# arg,
 19446              	.LVL1175:
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19447              		.loc 1 1281 16 discriminator 1 view .LVU6692
 19448 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 19449 02ed 0F8EA00C 		jle	.L1856	#,
 19449      0000
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19450              		.loc 1 1282 13 is_stmt 1 view .LVU6693
 19451              	# sieve_extend.c:1282:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19452              		.loc 1 1282 28 is_stmt 0 view .LVU6694
 19453 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 19453      08
 19454              	# sieve_extend.c:1282:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19455              		.loc 1 1282 17 view .LVU6695
 19456 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp327,
 19456      A8000000 
 19457 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 19458 0303 31C0     		xor	eax, eax	#
 19459 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 19459      000000
 19460 030c E8000000 		call	__isoc99_sscanf@PLT	#
 19460      00
 19461              	.LVL1176:
 19462              	# sieve_extend.c:1282:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19463              		.loc 1 1282 16 view .LVU6696
 19464 0311 83F801   		cmp	eax, 1	# tmp528,
 19465 0314 0F853F0C 		jne	.L1732	#,
 19465      0000
 19466              	# sieve_extend.c:1282:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19467              		.loc 1 1282 106 discriminator 1 view .LVU6697
 19468 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 19468      A8000000 
 19469              	# sieve_extend.c:1282:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19470              		.loc 1 1282 82 discriminator 1 view .LVU6698
 19471 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 19471      A0000000 
 19472 032a 0F87290C 		ja	.L1732	#,
 19472      0000
1285:sieve_extend.c ****         }
 19473              		.loc 1 1285 13 is_stmt 1 view .LVU6699
 19474              	.LVL1177:
 19475              	.LBB1003:
 19476              	.LBI1003:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19477              		.loc 3 105 1 view .LVU6700
 19478              	.LBB1004:
 19479              		.loc 3 107 3 view .LVU6701
 19480              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19481              		.loc 3 107 10 is_stmt 0 view .LVU6702
 19482 0330 488D3500 		lea	rsi, .LC43[rip]	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 519


 19482      000000
 19483 0337 BF010000 		mov	edi, 1	#,
 19483      00
 19484 033c 31C0     		xor	eax, eax	#
 19485 033e E8000000 		call	__printf_chk@PLT	#
 19485      00
 19486              	.LVL1178:
 19487 0343 E98DFDFF 		jmp	.L1725	#
 19487      FF
 19488              	.LVL1179:
 19489              		.p2align 4,,7
 19490              		.p2align 3
 19491              	.L1730:
 19492              		.loc 3 107 10 view .LVU6703
 19493              	.LBE1004:
 19494              	.LBE1003:
1287:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19495              		.loc 1 1287 14 is_stmt 1 view .LVU6704
 19496              	# sieve_extend.c:1287:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1287:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19497              		.loc 1 1287 18 is_stmt 0 view .LVU6705
 19498 0348 31C0     		xor	eax, eax	#
 19499 034a 488D9424 		lea	rdx, 160[rsp]	# tmp329,
 19499      A0000000 
 19500 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 19500      000000
 19501 0359 4C89C7   		mov	rdi, r8	#, _4
 19502 035c E8000000 		call	__isoc99_sscanf@PLT	#
 19502      00
 19503              	.LVL1180:
 19504              	# sieve_extend.c:1287:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1287:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19505              		.loc 1 1287 17 view .LVU6706
 19506 0361 83F801   		cmp	eax, 1	# tmp529,
 19507 0364 0F846BFD 		je	.L1725	#,
 19507      FFFF
1288:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 19508              		.loc 1 1288 13 is_stmt 1 view .LVU6707
 19509              	.LVL1181:
 19510              	.LBB1005:
 19511              	.LBI1005:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19512              		.loc 3 98 1 view .LVU6708
 19513              	.LBB1006:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19514              		.loc 3 100 3 view .LVU6709
 19515              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19516              		.loc 3 100 10 is_stmt 0 view .LVU6710
 19517 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 19518 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 19518      000000
 19519 0374 E9250200 		jmp	.L1847	#
 19519      00
 19520              	.LVL1182:
 19521 0379 0F1F8000 		.p2align 4,,7
 19521      000000
GAS LISTING /tmp/ccH5HMHD.s 			page 520


 19522              		.p2align 3
 19523              	.L1854:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19524              		.loc 3 100 10 view .LVU6711
 19525              	.LBE1006:
 19526              	.LBE1005:
 19527              	.LBE1058:
 19528              	.LBB1059:
 19529              	.LBB1054:
 19530              	.LBB1049:
 19531              	.LBB1043:
 19532              		.loc 1 1320 74 is_stmt 1 view .LVU6712
 19533              	.LBB1037:
 19534              	.LBI1037:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19535              		.loc 3 105 1 view .LVU6713
 19536              	.LBB1038:
 19537              		.loc 3 107 3 view .LVU6714
 19538              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19539              		.loc 3 107 10 is_stmt 0 view .LVU6715
 19540 0380 31C0     		xor	eax, eax	#
 19541 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 19541      000000
 19542 0389 BF010000 		mov	edi, 1	#,
 19542      00
 19543              	.LBE1038:
 19544              	.LBE1037:
 19545              	.LBE1043:
 19546              	# sieve_extend.c:1315:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19547              		.loc 1 1315 90 view .LVU6716
 19548 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 19549              	.LVL1183:
 19550              	.LBB1044:
 19551              	.LBB1040:
 19552              	.LBB1039:
 19553              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19554              		.loc 3 107 10 view .LVU6717
 19555 0391 E8000000 		call	__printf_chk@PLT	#
 19555      00
 19556              	.LVL1184:
 19557 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19557      000000
 19558              	.LVL1185:
 19559              		.loc 3 107 10 view .LVU6718
 19560              	.LBE1039:
 19561              	.LBE1040:
 19562              	.LBE1044:
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19563              		.loc 1 1315 75 is_stmt 1 view .LVU6719
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19564              		.loc 1 1315 49 view .LVU6720
 19565              	# sieve_extend.c:1315:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19566              		.loc 1 1315 13 is_stmt 0 view .LVU6721
 19567 039d 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19568 03a1 0F85FDFE 		jne	.L1740	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 521


 19568      FFFF
 19569              	.L1855:
1315:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19570              		.loc 1 1315 13 view .LVU6722
 19571              	.LBE1049:
1321:sieve_extend.c ****             }
1322:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19572              		.loc 1 1322 13 is_stmt 1 view .LVU6723
 19573              	# sieve_extend.c:1322:             if (option_verboselevel >= 2) printf("\n");
 19574              		.loc 1 1322 16 is_stmt 0 view .LVU6724
 19575 03a7 83F801   		cmp	eax, 1	# prephitmp_326,
 19576 03aa 7E0A     		jle	.L1741	#,
 19577              		.loc 1 1322 43 is_stmt 1 view .LVU6725
 19578              	.LVL1186:
 19579              	.LBB1050:
 19580              	.LBI1050:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19581              		.loc 3 105 1 view .LVU6726
 19582              	.LBB1051:
 19583              		.loc 3 107 3 view .LVU6727
 19584              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19585              		.loc 3 107 10 is_stmt 0 view .LVU6728
 19586 03ac BF0A0000 		mov	edi, 10	#,
 19586      00
 19587 03b1 E8000000 		call	putchar@PLT	#
 19587      00
 19588              	.LVL1187:
 19589              	.L1741:
 19590              		.loc 3 107 10 view .LVU6729
 19591              	.LBE1051:
 19592              	.LBE1050:
 19593              	.LBE1054:
1312:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19594              		.loc 1 1312 77 is_stmt 1 discriminator 2 view .LVU6730
 19595              	# sieve_extend.c:1312:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1312:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19596              		.loc 1 1312 93 is_stmt 0 discriminator 2 view .LVU6731
 19597 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp335,
 19597      00
 19598              	.LVL1188:
1312:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19599              		.loc 1 1312 93 discriminator 2 view .LVU6732
 19600 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 19601              	.LVL1189:
1312:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19602              		.loc 1 1312 47 is_stmt 1 discriminator 2 view .LVU6733
 19603              	# sieve_extend.c:1312:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1312:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19604              		.loc 1 1312 9 is_stmt 0 discriminator 2 view .LVU6734
 19605 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 19605      01
 19606 03c3 0F854FFE 		jne	.L1742	#,
 19606      FFFF
 19607              	.LBE1059:
1323:sieve_extend.c ****         }
1324:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19608              		.loc 1 1324 9 is_stmt 1 view .LVU6735
GAS LISTING /tmp/ccH5HMHD.s 			page 522


 19609              	# sieve_extend.c:1324:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19610              		.loc 1 1324 12 is_stmt 0 view .LVU6736
 19611 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19611      00000000 
 19612 03d1 0F8F4E09 		jg	.L1857	#,
 19612      0000
1325:sieve_extend.c ****     }
1326:sieve_extend.c ****     
1327:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19613              		.loc 1 1327 5 is_stmt 1 view .LVU6737
 19614              	.LVL1190:
1328:sieve_extend.c ****     if (option_tunelevel) {
 19615              		.loc 1 1328 5 view .LVU6738
 19616              	# sieve_extend.c:1328:     if (option_tunelevel) {
 19617              		.loc 1 1328 9 is_stmt 0 view .LVU6739
 19618 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_380, option_tunelevel
 19618      9C000000 
 19619              	# sieve_extend.c:1327:     counter_t best_blocksize_bits = default_blocksize;
1327:sieve_extend.c ****     if (option_tunelevel) {
 19620              		.loc 1 1327 15 view .LVU6740
 19621 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19621      0300
 19622              	# sieve_extend.c:1328:     if (option_tunelevel) {
 19623              		.loc 1 1328 8 view .LVU6741
 19624 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_380
 19625 03e8 0F858C02 		jne	.L1858	#,
 19625      0000
 19626              	.LVL1191:
 19627              	.L1771:
 19628              	.LBB1060:
1329:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1330:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1331:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1332:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1333:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1334:sieve_extend.c ****     }
1335:sieve_extend.c **** 
1336:sieve_extend.c ****     double max_time = default_sieve_duration;
1337:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1338:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1339:sieve_extend.c ****         counter_t passes = 0;
 19629              		.loc 1 1339 9 is_stmt 1 view .LVU6742
1340:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19630              		.loc 1 1340 9 view .LVU6743
1341:sieve_extend.c ****         double elapsed_time = 0;
 19631              		.loc 1 1341 9 view .LVU6744
1342:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19632              		.loc 1 1342 9 view .LVU6745
1343:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19633              		.loc 1 1343 9 view .LVU6746
 19634 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp438,
 19634      B0000000 
 19635 03f6 BF010000 		mov	edi, 1	#,
 19635      00
 19636 03fb E8000000 		call	clock_gettime@PLT	#
 19636      00
 19637              	.LVL1192:
GAS LISTING /tmp/ccH5HMHD.s 			page 523


1344:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19638              		.loc 1 1344 9 view .LVU6747
 19639              		.loc 1 1344 15 view .LVU6748
 19640              	# sieve_extend.c:1339:         counter_t passes = 0;
1339:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19641              		.loc 1 1339 19 is_stmt 0 view .LVU6749
 19642 0400 4531FF   		xor	r15d, r15d	# passes
 19643 0403 4C8DA424 		lea	r12, 192[rsp]	# tmp465,
 19643      C0000000 
 19644              	.LVL1193:
 19645              	.L1772:
1345:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19646              		.loc 1 1345 13 is_stmt 1 view .LVU6750
 19647              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19648              		.loc 1 1345 30 is_stmt 0 view .LVU6751
 19649 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19649      A0000000 
 19650 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19651              	# sieve_extend.c:1347:             passes++;
1346:sieve_extend.c ****             delete_sieve(sieve_instance);
1347:sieve_extend.c ****             passes++;
 19652              		.loc 1 1347 19 view .LVU6752
 19653 0416 4983C701 		add	r15, 1	# passes,
 19654              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1345:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19655              		.loc 1 1345 30 view .LVU6753
 19656 041a E8000000 		call	sieve	#
 19656      00
 19657              	.LVL1194:
 19658              	.LBB1061:
 19659              	.LBB1062:
 19660              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 19661              		.loc 1 116 5 view .LVU6754
 19662 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19663              	.LBE1062:
 19664              	.LBE1061:
 19665              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1345:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19666              		.loc 1 1345 30 view .LVU6755
 19667 0422 4989C5   		mov	r13, rax	# sieve_instance, tmp533
 19668              	.LVL1195:
1346:sieve_extend.c ****             delete_sieve(sieve_instance);
 19669              		.loc 1 1346 13 is_stmt 1 view .LVU6756
 19670              	.LBB1066:
 19671              	.LBI1061:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19672              		.loc 1 115 13 view .LVU6757
 19673              	.LBB1063:
 116:sieve_extend.c ****     free(sieve);
 19674              		.loc 1 116 5 view .LVU6758
 19675 0425 E8000000 		call	free@PLT	#
 19675      00
 19676              	.LVL1196:
 117:sieve_extend.c **** }
 19677              		.loc 1 117 5 view .LVU6759
 19678 042a 4C89EF   		mov	rdi, r13	#, sieve_instance
GAS LISTING /tmp/ccH5HMHD.s 			page 524


 19679 042d E8000000 		call	free@PLT	#
 19679      00
 19680              	.LVL1197:
 117:sieve_extend.c **** }
 19681              		.loc 1 117 5 is_stmt 0 view .LVU6760
 19682              	.LBE1063:
 19683              	.LBE1066:
 19684              		.loc 1 1347 13 is_stmt 1 view .LVU6761
1348:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19685              		.loc 1 1348 13 view .LVU6762
 19686 0432 4C89E6   		mov	rsi, r12	#, tmp465
 19687 0435 BF010000 		mov	edi, 1	#,
 19687      00
 19688 043a E8000000 		call	clock_gettime@PLT	#
 19688      00
 19689              	.LVL1198:
1349:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19690              		.loc 1 1349 13 view .LVU6763
 19691              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19692              		.loc 1 1349 62 is_stmt 0 view .LVU6764
 19693 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp441, end_time.tv_nsec
 19693      AC24C800 
 19693      0000
 19694              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19695              		.loc 1 1349 68 view .LVU6765
 19696 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp442, start_time.tv_sec
 19696      9424B000 
 19696      0000
 19697              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19698              		.loc 1 1349 108 view .LVU6766
 19699 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp444, start_time.tv_nsec
 19699      8424B800 
 19699      0000
 19700              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19701              		.loc 1 1349 44 view .LVU6767
 19702 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp445, end_time.tv_sec
 19702      8C24C000 
 19702      0000
 19703              	# sieve_extend.c:1344:         while (elapsed_time <= max_time) {
1344:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19704              		.loc 1 1344 15 view .LVU6768
 19705 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp628,
 19705      00000000 
 19706 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _301, tmp442,
 19706      2D000000 
 19706      00
 19707 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _302, tmp445,
 19707      05000000 
 19707      00
 19708              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19709              		.loc 1 1349 26 view .LVU6769
 19710 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _301, _302
 19710      C0
 19711              	.LVL1199:
1344:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19712              		.loc 1 1344 15 is_stmt 1 view .LVU6770
 19713 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp628, elapsed_time
GAS LISTING /tmp/ccH5HMHD.s 			page 525


 19714 048a 0F828500 		jb	.L1844	#,
 19714      0000
 19715              	.LVL1200:
1345:sieve_extend.c ****             delete_sieve(sieve_instance);
 19716              		.loc 1 1345 13 view .LVU6771
 19717              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1345:sieve_extend.c ****             delete_sieve(sieve_instance);
 19718              		.loc 1 1345 30 is_stmt 0 view .LVU6772
 19719 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19719      A0000000 
 19720 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19721              	# sieve_extend.c:1347:             passes++;
1347:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19722              		.loc 1 1347 19 view .LVU6773
 19723 049b 4983C701 		add	r15, 1	# passes,
 19724              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1345:sieve_extend.c ****             delete_sieve(sieve_instance);
 19725              		.loc 1 1345 30 view .LVU6774
 19726 049f E8000000 		call	sieve	#
 19726      00
 19727              	.LVL1201:
 19728              	.LBB1067:
 19729              	.LBB1064:
 19730              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 19731              		.loc 1 116 5 view .LVU6775
 19732 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19733              	.LBE1064:
 19734              	.LBE1067:
 19735              	# sieve_extend.c:1345:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1345:sieve_extend.c ****             delete_sieve(sieve_instance);
 19736              		.loc 1 1345 30 view .LVU6776
 19737 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp535
1346:sieve_extend.c ****             passes++;
 19738              		.loc 1 1346 13 is_stmt 1 view .LVU6777
 19739              	.LVL1202:
 19740              	.LBB1068:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19741              		.loc 1 115 13 view .LVU6778
 19742              	.LBB1065:
 116:sieve_extend.c ****     free(sieve);
 19743              		.loc 1 116 5 view .LVU6779
 19744 04aa E8000000 		call	free@PLT	#
 19744      00
 19745              	.LVL1203:
 117:sieve_extend.c **** }
 19746              		.loc 1 117 5 view .LVU6780
 19747 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
 19748 04b2 E8000000 		call	free@PLT	#
 19748      00
 19749              	.LVL1204:
 117:sieve_extend.c **** }
 19750              		.loc 1 117 5 is_stmt 0 view .LVU6781
 19751              	.LBE1065:
 19752              	.LBE1068:
1347:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19753              		.loc 1 1347 13 is_stmt 1 view .LVU6782
GAS LISTING /tmp/ccH5HMHD.s 			page 526


1348:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19754              		.loc 1 1348 13 view .LVU6783
 19755 04b7 4C89E6   		mov	rsi, r12	#, tmp465
 19756 04ba BF010000 		mov	edi, 1	#,
 19756      00
 19757 04bf E8000000 		call	clock_gettime@PLT	#
 19757      00
 19758              	.LVL1205:
 19759              		.loc 1 1349 13 view .LVU6784
 19760              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19761              		.loc 1 1349 62 is_stmt 0 view .LVU6785
 19762 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp518, end_time.tv_nsec
 19762      9C24C800 
 19762      0000
 19763              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19764              		.loc 1 1349 68 view .LVU6786
 19765 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp519, start_time.tv_sec
 19765      A424B000 
 19765      0000
 19766              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19767              		.loc 1 1349 108 view .LVU6787
 19768 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp521, start_time.tv_nsec
 19768      AC24B800 
 19768      0000
 19769              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19770              		.loc 1 1349 44 view .LVU6788
 19771 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp522, end_time.tv_sec
 19771      B424C000 
 19771      0000
 19772              	# sieve_extend.c:1344:         while (elapsed_time <= max_time) {
1344:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19773              		.loc 1 1344 15 view .LVU6789
 19774 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp635,
 19774      00000000 
 19775 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _301, tmp519,
 19775      1D000000 
 19775      00
 19776 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _302, tmp522,
 19776      2D000000 
 19776      00
 19777              	# sieve_extend.c:1349:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19778              		.loc 1 1349 26 view .LVU6790
 19779 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _301, _302
 19779      C5
 19780              	.LVL1206:
1344:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19781              		.loc 1 1344 15 is_stmt 1 view .LVU6791
 19782 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp635, elapsed_time
 19783 050f 0F83F6FE 		jnb	.L1772	#,
 19783      FFFF
 19784              	.L1844:
1350:sieve_extend.c ****         }
1351:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 19785              		.loc 1 1351 9 view .LVU6792
 19786              	.LVL1207:
 19787              	.LBB1069:
 19788              	.LBI1069:
GAS LISTING /tmp/ccH5HMHD.s 			page 527


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19789              		.loc 3 105 1 view .LVU6793
 19790              	.LBB1070:
 19791              		.loc 3 107 3 view .LVU6794
 19792              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19793              		.loc 3 107 10 is_stmt 0 view .LVU6795
 19794 0515 4C89FA   		mov	rdx, r15	#, passes
 19795 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 19795      000000
 19796 051f BF010000 		mov	edi, 1	#,
 19796      00
 19797 0524 B8010000 		mov	eax, 1	#,
 19797      00
 19798 0529 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 19798      2420
 19799 052f E8000000 		call	__printf_chk@PLT	#
 19799      00
 19800              	.LVL1208:
 19801              		.loc 3 107 10 view .LVU6796
 19802              	.LBE1070:
 19803              	.LBE1069:
1352:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 19804              		.loc 1 1352 9 is_stmt 1 view .LVU6797
 19805              	# sieve_extend.c:1352:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 19806              		.loc 1 1352 12 is_stmt 0 view .LVU6798
 19807 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19807      00000000 
 19808 053c 0F8FCA00 		jg	.L1859	#,
 19808      0000
 19809              	.LVL1209:
 19810              	.L1770:
 19811              		.loc 1 1352 12 view .LVU6799
 19812              	.LBE1060:
1353:sieve_extend.c ****     }
1354:sieve_extend.c ****     
1355:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 19813              		.loc 1 1355 5 is_stmt 1 view .LVU6800
 19814              	# sieve_extend.c:1355:     if (option_showMaxFactor > 0) {
 19815              		.loc 1 1355 8 is_stmt 0 view .LVU6801
 19816 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19816      A8000000 
 19816      00
 19817 054b 756D     		jne	.L1860	#,
 19818 054d 0F1F00   		.p2align 4
 19819              		.p2align 3
 19820              	.L1778:
 19821              	.LBB1077:
 19822              	.LBB1055:
 19823              	.LBB1052:
 19824              	.LBB1045:
1320:sieve_extend.c ****             }
 19825              		.loc 1 1320 29 is_stmt 1 discriminator 1 view .LVU6802
 19826              	.LBE1045:
 19827              	.LBE1052:
 19828              	.LBE1055:
 19829              	.LBE1077:
 19830              	# sieve_extend.c:1362: }
GAS LISTING /tmp/ccH5HMHD.s 			page 528


1356:sieve_extend.c ****         printf("Show result set:\n");
1357:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1358:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1359:sieve_extend.c ****         delete_sieve(sieve_instance);
1360:sieve_extend.c ****         printf("\n");
1361:sieve_extend.c ****     }
1362:sieve_extend.c **** }
 19831              		.loc 1 1362 1 is_stmt 0 discriminator 1 view .LVU6803
 19832 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp571, D.7524
 19832      D8000000 
 19833 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 19833      25280000 
 19833      00
 19834 0561 0F85270A 		jne	.L1861	#,
 19834      0000
 19835              	# sieve_extend.c:1362: }
 19836              		.loc 1 1362 1 view .LVU6804
 19837 0567 488DA424 		lea	rsp, 232[rsp]	#,
 19837      E8000000 
 19838              		.cfi_remember_state
 19839              		.cfi_def_cfa_offset 56
 19840 056f 31C0     		xor	eax, eax	#
 19841 0571 5B       		pop	rbx	#
 19842              		.cfi_def_cfa_offset 48
 19843 0572 5D       		pop	rbp	#
 19844              		.cfi_def_cfa_offset 40
 19845 0573 415C     		pop	r12	#
 19846              		.cfi_def_cfa_offset 32
 19847 0575 415D     		pop	r13	#
 19848              		.cfi_def_cfa_offset 24
 19849 0577 415E     		pop	r14	#
 19850              		.cfi_def_cfa_offset 16
 19851 0579 415F     		pop	r15	#
 19852              		.cfi_def_cfa_offset 8
 19853 057b C3       		ret	
 19854              	.L1734:
 19855              		.cfi_restore_state
1308:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19856              		.loc 1 1308 39 is_stmt 1 view .LVU6805
 19857              	.LVL1210:
 19858              	.LBB1078:
 19859              	.LBI1078:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19860              		.loc 3 105 1 view .LVU6806
 19861              	.LBB1079:
 19862              		.loc 3 107 3 view .LVU6807
 19863              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19864              		.loc 3 107 10 is_stmt 0 view .LVU6808
 19865 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 19865      000000
 19866 0583 BF010000 		mov	edi, 1	#,
 19866      00
 19867 0588 31C0     		xor	eax, eax	#
 19868 058a E8000000 		call	__printf_chk@PLT	#
 19868      00
 19869              	.LVL1211:
 19870 058f E95BFCFF 		jmp	.L1719	#
GAS LISTING /tmp/ccH5HMHD.s 			page 529


 19870      FF
 19871              	.LVL1212:
 19872              	.L1723:
 19873              		.loc 3 107 10 view .LVU6809
 19874              	.LBE1079:
 19875              	.LBE1078:
 19876              	.LBB1080:
1268:sieve_extend.c ****             }
 19877              		.loc 1 1268 17 is_stmt 1 view .LVU6810
 19878              	.LBB1007:
 19879              	.LBI1007:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19880              		.loc 3 98 1 view .LVU6811
 19881              	.LBB1008:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19882              		.loc 3 100 3 view .LVU6812
 19883              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19884              		.loc 3 100 10 is_stmt 0 view .LVU6813
 19885 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 19886 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 19886      000000
 19887              	.LVL1213:
 19888              	.L1847:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19889              		.loc 3 100 10 view .LVU6814
 19890              	.LBE1008:
 19891              	.LBE1007:
 19892              	.LBB1009:
 19893              	.LBB1010:
 19894 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 19894      000000
 19895 05a5 BE010000 		mov	esi, 1	#,
 19895      00
 19896 05aa 31C0     		xor	eax, eax	#
 19897 05ac E8000000 		call	__fprintf_chk@PLT	#
 19897      00
 19898              	.LVL1214:
 19899              	.L1848:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19900              		.loc 3 100 10 view .LVU6815
 19901              	.LBE1010:
 19902              	.LBE1009:
1276:sieve_extend.c ****             }
 19903              		.loc 1 1276 80 is_stmt 1 view .LVU6816
 19904 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 19905 05b5 E8000000 		call	usage	#
 19905      00
 19906              	.LVL1215:
 19907              	.L1860:
1276:sieve_extend.c ****             }
 19908              		.loc 1 1276 80 is_stmt 0 view .LVU6817
 19909              	.LBE1080:
 19910              	.LBB1081:
1356:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 19911              		.loc 1 1356 9 is_stmt 1 view .LVU6818
 19912              	.LBB1082:
GAS LISTING /tmp/ccH5HMHD.s 			page 530


 19913              	.LBI1082:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19914              		.loc 3 105 1 view .LVU6819
 19915              	.LBB1083:
 19916              		.loc 3 107 3 view .LVU6820
 19917              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19918              		.loc 3 107 10 is_stmt 0 view .LVU6821
 19919 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 19919      000000
 19920 05c1 E8000000 		call	puts@PLT	#
 19920      00
 19921              	.LVL1216:
 19922              		.loc 3 107 10 view .LVU6822
 19923              	.LBE1083:
 19924              	.LBE1082:
1357:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19925              		.loc 1 1357 9 is_stmt 1 view .LVU6823
 19926              	# sieve_extend.c:1357:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1357:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19927              		.loc 1 1357 46 is_stmt 0 view .LVU6824
 19928 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 19928      A0000000 
 19929 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 19930 05d1 E8000000 		call	sieve	#
 19930      00
 19931              	.LVL1217:
 19932              	# sieve_extend.c:1358:         show_primes(sieve_instance, option_showMaxFactor);
1358:sieve_extend.c ****         delete_sieve(sieve_instance);
 19933              		.loc 1 1358 9 view .LVU6825
 19934 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 19934      A8000000 
 19935              	# sieve_extend.c:1357:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1357:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19936              		.loc 1 1357 46 view .LVU6826
 19937 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp534
 19938              	.LVL1218:
1358:sieve_extend.c ****         delete_sieve(sieve_instance);
 19939              		.loc 1 1358 9 is_stmt 1 view .LVU6827
 19940 05e1 488D7008 		lea	rsi, 8[rax]	# tmp460,
 19941 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 19942 05e8 E8000000 		call	show_primes.isra.0	#
 19942      00
 19943              	.LVL1219:
1359:sieve_extend.c ****         printf("\n");
 19944              		.loc 1 1359 9 view .LVU6828
 19945              	.LBB1084:
 19946              	.LBI1084:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19947              		.loc 1 115 13 view .LVU6829
 19948              	.LBB1085:
 116:sieve_extend.c ****     free(sieve);
 19949              		.loc 1 116 5 view .LVU6830
 19950 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_151->bitarray
 19951 05f0 E8000000 		call	free@PLT	#
 19951      00
 19952              	.LVL1220:
 117:sieve_extend.c **** }
GAS LISTING /tmp/ccH5HMHD.s 			page 531


 19953              		.loc 1 117 5 view .LVU6831
 19954 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 19955 05f8 E8000000 		call	free@PLT	#
 19955      00
 19956              	.LVL1221:
 117:sieve_extend.c **** }
 19957              		.loc 1 117 5 is_stmt 0 view .LVU6832
 19958              	.LBE1085:
 19959              	.LBE1084:
1360:sieve_extend.c ****     }
 19960              		.loc 1 1360 9 is_stmt 1 view .LVU6833
 19961              	.LBB1086:
 19962              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19963              		.loc 3 105 1 view .LVU6834
 19964              	.LBB1087:
 19965              		.loc 3 107 3 view .LVU6835
 19966              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19967              		.loc 3 107 10 is_stmt 0 view .LVU6836
 19968 05fd BF0A0000 		mov	edi, 10	#,
 19968      00
 19969 0602 E8000000 		call	putchar@PLT	#
 19969      00
 19970              	.LVL1222:
 19971 0607 E944FFFF 		jmp	.L1778	#
 19971      FF
 19972              	.LVL1223:
 19973              	.L1859:
 19974              		.loc 3 107 10 view .LVU6837
 19975              	.LBE1087:
 19976              	.LBE1086:
 19977              	.LBE1081:
 19978              	.LBB1088:
1352:sieve_extend.c ****     }
 19979              		.loc 1 1352 39 is_stmt 1 discriminator 1 view .LVU6838
 19980              	.LBB1071:
 19981              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19982              		.loc 3 105 1 discriminator 1 view .LVU6839
 19983              	.LBB1072:
 19984              		.loc 3 107 3 discriminator 1 view .LVU6840
 19985              	.LBE1072:
 19986              	.LBE1071:
 19987              	# sieve_extend.c:1352:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1352:sieve_extend.c ****     }
 19988              		.loc 1 1352 39 is_stmt 0 discriminator 1 view .LVU6841
 19989 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp448, passes
 19989      C7
 19990 0611 4D85FF   		test	r15, r15	# passes
 19991 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 19991      2420
 19992 061a 7918     		jns	.L1775	#,
 19993 061c 4C89F8   		mov	rax, r15	# tmp450, passes
 19994 061f 4C89FA   		mov	rdx, r15	# tmp451, passes
 19995 0622 48D1E8   		shr	rax	# tmp450
 19996 0625 83E201   		and	edx, 1	# tmp451,
 19997 0628 4809D0   		or	rax, rdx	# tmp514, tmp451
GAS LISTING /tmp/ccH5HMHD.s 			page 532


 19998 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rax	# tmp449, tmp514
 19998      F8
 19999 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp448, tmp449, tmp449
 20000              	.L1775:
1352:sieve_extend.c ****     }
 20001              		.loc 1 1352 39 discriminator 1 view .LVU6842
 20002 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp452, tmp448, elapsed_time
 20003              	# sieve_extend.c:1352:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1352:sieve_extend.c ****     }
 20004              		.loc 1 1352 95 discriminator 1 view .LVU6843
 20005 0638 4B8D34BF 		lea	rsi, [r15+r15*4]	# tmp453,
 20006              	# sieve_extend.c:1352:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1352:sieve_extend.c ****     }
 20007              		.loc 1 1352 39 discriminator 1 view .LVU6844
 20008 063c 4885F6   		test	rsi, rsi	# tmp453
 20009 063f C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rsi	# tmp454, tmp453
 20009      DE
 20010 0644 7915     		jns	.L1777	#,
 20011 0646 4989F0   		mov	r8, rsi	# tmp456, tmp453
 20012 0649 83E601   		and	esi, 1	# tmp457,
 20013 064c 49D1E8   		shr	r8	# tmp456
 20014 064f 4909F0   		or	r8, rsi	# tmp515, tmp457
 20015 0652 C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r8	# tmp455, tmp515
 20015      E0
 20016 0657 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp454, tmp455, tmp455
 20017              	.L1777:
 20018 065b C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp458, tmp454, elapsed_time
 20019              	.LBB1074:
 20020              	.LBB1073:
 20021              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20022              		.loc 3 107 10 discriminator 1 view .LVU6845
 20023 065f 488D3500 		lea	rsi, .LC61[rip]	#,
 20023      000000
 20024 0666 BF010000 		mov	edi, 1	#,
 20024      00
 20025 066b B8020000 		mov	eax, 2	#,
 20025      00
 20026 0670 E8000000 		call	__printf_chk@PLT	#
 20026      00
 20027              	.LVL1224:
 20028 0675 E9C8FEFF 		jmp	.L1770	#
 20028      FF
 20029              	.LVL1225:
 20030              	.L1858:
 20031              		.loc 3 107 10 discriminator 1 view .LVU6846
 20032              	.LBE1073:
 20033              	.LBE1074:
 20034              	.LBE1088:
 20035              	.LBB1089:
1329:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20036              		.loc 1 1329 9 is_stmt 1 view .LVU6847
 20037              	# sieve_extend.c:1329:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1329:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20038              		.loc 1 1329 44 is_stmt 0 view .LVU6848
 20039 067a 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 20039      98000000 
 20040 0682 4183E801 		sub	r8d, 1	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 533


 20041 0686 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 20041      A0000000 
 20042 068e 4183F802 		cmp	r8d, 2	# _212,
 20043 0692 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 20043      58
 20044 0697 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 20044      78
 20045              	.LVL1226:
 20046              	.LBB1090:
 20047              	.LBI1090:
1134:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20048              		.loc 1 1134 27 is_stmt 1 view .LVU6849
 20049              	.LBB1091:
1135:sieve_extend.c **** 
 20050              		.loc 1 1135 5 view .LVU6850
1137:sieve_extend.c ****     best_blocksize_bits = 0;
 20051              		.loc 1 1137 5 view .LVU6851
1138:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20052              		.loc 1 1138 5 view .LVU6852
1139:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20053              		.loc 1 1139 5 view .LVU6853
1140:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20054              		.loc 1 1140 5 view .LVU6854
1141:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20055              		.loc 1 1141 5 view .LVU6855
1142:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20056              		.loc 1 1142 5 view .LVU6856
1143:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 20057              		.loc 1 1143 5 view .LVU6857
1144:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20058              		.loc 1 1144 5 view .LVU6858
1145:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20059              		.loc 1 1145 5 view .LVU6859
1146:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20060              		.loc 1 1146 5 view .LVU6860
1147:sieve_extend.c **** 
 20061              		.loc 1 1147 5 view .LVU6861
1150:sieve_extend.c ****         case 1:
 20062              		.loc 1 1150 5 view .LVU6862
 20063 069c 0F869407 		jbe	.L1779	#,
 20063      0000
 20064 06a2 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 20064      00000000 
 20065 06aa 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 20065      68050000 
 20065      00
 20066 06b3 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 20066      60800000 
 20066      00
 20067 06bc 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 20067      80000000 
 20067      20000000 
 20068 06c8 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 20068      88000000 
 20068      04000000 
 20069 06d4 C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
 20069      2470
GAS LISTING /tmp/ccH5HMHD.s 			page 534


 20070              	.LVL1227:
 20071              	.L1747:
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20072              		.loc 1 1178 5 view .LVU6863
 20073              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20074              		.loc 1 1178 33 is_stmt 0 view .LVU6864
 20075 06da B8400000 		mov	eax, 64	# tmp348,
 20075      00
 20076 06df 31D2     		xor	edx, edx	# tmp347
 20077 06e1 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 20077      88000000 
 20078              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20079              		.loc 1 1178 254 view .LVU6865
 20080 06e9 31D2     		xor	edx, edx	# tmp355
 20081              	# sieve_extend.c:1180:     counter_t tuning_results=0;
1180:sieve_extend.c ****     counter_t tuning_result_index=0;
 20082              		.loc 1 1180 15 view .LVU6866
 20083 06eb 4531ED   		xor	r13d, r13d	# tuning_results
 20084              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20085              		.loc 1 1178 83 view .LVU6867
 20086 06ee 488D7801 		lea	rdi, 1[rax]	# _229,
 20087              	.LVL1228:
1179:sieve_extend.c ****     counter_t tuning_results=0;
 20088              		.loc 1 1179 5 is_stmt 1 view .LVU6868
 20089              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20090              		.loc 1 1178 254 is_stmt 0 view .LVU6869
 20091 06f2 B8001000 		mov	eax, 4096	# tmp356,
 20091      00
 20092 06f7 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 20092      60
 20093              	.LVL1229:
 20094              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20095              		.loc 1 1178 148 view .LVU6870
 20096 06fc 31D2     		xor	edx, edx	# tmp365
 20097              	# sieve_extend.c:1179:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1179:sieve_extend.c ****     counter_t tuning_results=0;
 20098              		.loc 1 1179 41 view .LVU6871
 20099 06fe 480FAFC7 		imul	rax, rdi	# tmp361, _229
 20100              	.LVL1230:
1179:sieve_extend.c ****     counter_t tuning_results=0;
 20101              		.loc 1 1179 41 view .LVU6872
 20102 0702 480FAFF8 		imul	rdi, rax	# tmp362, tmp361
 20103              	.LVL1231:
 20104              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20105              		.loc 1 1178 148 view .LVU6873
 20106 0706 B8000100 		mov	eax, 256	# tmp366,
 20106      00
 20107 070b 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 20107      80000000 
 20108              	# sieve_extend.c:1178:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1178:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
GAS LISTING /tmp/ccH5HMHD.s 			page 535


 20109              		.loc 1 1178 201 view .LVU6874
 20110 0713 4883C001 		add	rax, 1	# tmp371,
 20111              	# sieve_extend.c:1179:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1179:sieve_extend.c ****     counter_t tuning_results=0;
 20112              		.loc 1 1179 41 view .LVU6875
 20113 0717 480FAFF8 		imul	rdi, rax	# tmp372, tmp371
 20114 071b 48C1E708 		sal	rdi, 8	# tmp372,
 20115 071f E8000000 		call	malloc@PLT	#
 20115      00
 20116              	.LVL1232:
1180:sieve_extend.c ****     counter_t tuning_result_index=0;
 20117              		.loc 1 1180 5 is_stmt 1 view .LVU6876
1181:sieve_extend.c ****     
 20118              		.loc 1 1181 5 view .LVU6877
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20119              		.loc 1 1183 5 view .LVU6878
 20120              	.LBB1092:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20121              		.loc 1 1183 10 view .LVU6879
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20122              		.loc 1 1183 42 view .LVU6880
 20123              	.LBE1092:
 20124              	# sieve_extend.c:1137:     double best_avg = 0;
1137:sieve_extend.c ****     best_blocksize_bits = 0;
 20125              		.loc 1 1137 12 is_stmt 0 view .LVU6881
 20126 0724 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 20127              	# sieve_extend.c:1140:     counter_t best_mediumstep_faster = 0;
1140:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20128              		.loc 1 1140 15 view .LVU6882
 20129 0728 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 20129      48000000 
 20129      00
 20130              	# sieve_extend.c:1139:     counter_t best_smallstep_faster = 0;
1139:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20131              		.loc 1 1139 15 view .LVU6883
 20132 0731 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 20132      40000000 
 20132      00
 20133              	# sieve_extend.c:1138:     best_blocksize_bits = 0;
1138:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20134              		.loc 1 1138 25 view .LVU6884
 20135 073a 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 20135      38000000 
 20135      00
 20136              	.LBB1122:
 20137              	# sieve_extend.c:1183:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20138              		.loc 1 1183 20 view .LVU6885
 20139 0743 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 20139      20000000 
 20139      00
 20140 074c 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tuning_result
 20140      50
 20141              	.LBE1122:
 20142              	# sieve_extend.c:1137:     double best_avg = 0;
1137:sieve_extend.c ****     best_blocksize_bits = 0;
 20143              		.loc 1 1137 12 view .LVU6886
GAS LISTING /tmp/ccH5HMHD.s 			page 536


 20144 0751 C5FB114C 		vmovsd	QWORD PTR 40[rsp], xmm1	# %sfp, best_avg
 20144      2428
 20145              	.LVL1233:
 20146              	.L1749:
 20147              	.LBB1123:
 20148              	.LBB1093:
1184:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20149              		.loc 1 1184 62 is_stmt 1 view .LVU6887
 20150              	.LBB1094:
 20151              	.LBB1095:
 20152              	# sieve_extend.c:1186:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20153              		.loc 1 1186 32 is_stmt 0 view .LVU6888
 20154 0757 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 20154      20
 20155              	.LVL1234:
 20156 075c 0F1F4000 		.p2align 4
 20157              		.p2align 3
 20158              	.L1761:
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20159              		.loc 1 1186 32 view .LVU6889
 20160              	.LBE1095:
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20161              		.loc 1 1185 67 is_stmt 1 view .LVU6890
 20162              	.LBB1118:
 20163              	# sieve_extend.c:1186:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20164              		.loc 1 1186 32 is_stmt 0 view .LVU6891
 20165 0760 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, mediumstep_faster
 20165      30
 20166              	.LVL1235:
 20167 0765 66662E0F 		.p2align 4
 20167      1F840000 
 20167      000000
 20168              		.p2align 3
 20169              	.L1759:
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20170              		.loc 1 1186 50 is_stmt 1 view .LVU6892
 20171              	.LBB1096:
 20172              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20173              		.loc 1 1187 36 is_stmt 0 view .LVU6893
 20174 0770 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 20174      06000000 
 20175              	.LBE1096:
 20176              	# sieve_extend.c:1186:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20177              		.loc 1 1186 32 view .LVU6894
 20178 0778 41BC0001 		mov	r12d, 256	# blocksize_kb,
 20178      0000
 20179              	.LVL1236:
 20180 077e 6690     		.p2align 4
 20181              		.p2align 3
 20182              	.L1757:
 20183              	.LBB1116:
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20184              		.loc 1 1187 49 is_stmt 1 view .LVU6895
GAS LISTING /tmp/ccH5HMHD.s 			page 537


 20185 0780 4F8D546D 		lea	r10, 0[r13+r13*2]	# tmp399,
 20185      00
 20186              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20187              		.loc 1 1187 134 is_stmt 0 view .LVU6896
 20188 0785 4C89E3   		mov	rbx, r12	# ivtmp.791, blocksize_kb
 20189 0788 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20189      50
 20190              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20191              		.loc 1 1187 36 view .LVU6897
 20192 078d 31ED     		xor	ebp, ebp	# free_bits
 20193 078f 49C1E205 		sal	r10, 5	# tmp400,
 20194              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20195              		.loc 1 1187 134 view .LVU6898
 20196 0793 48C1E30D 		sal	rbx, 13	# ivtmp.791,
 20197 0797 4F8D3C13 		lea	r15, [r11+r10]	# ivtmp.790,
 20198 079b EB44     		jmp	.L1755	#
 20199              	.LVL1237:
 20200 079d 0F1F00   		.p2align 4,,7
 20201              		.p2align 3
 20202              	.L1752:
 20203              	.LBB1097:
1204:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20204              		.loc 1 1204 29 is_stmt 1 view .LVU6899
1205:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20205              		.loc 1 1205 29 view .LVU6900
1206:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 20206              		.loc 1 1206 29 view .LVU6901
1207:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 20207              		.loc 1 1207 29 view .LVU6902
1208:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 20208              		.loc 1 1208 29 view .LVU6903
1209:sieve_extend.c ****                         }
 20209              		.loc 1 1209 29 view .LVU6904
 20210              	# sieve_extend.c:1209:                             if (option_verboselevel >=2) { printf(".(>)"); t
1209:sieve_extend.c ****                         }
 20211              		.loc 1 1209 32 is_stmt 0 view .LVU6905
 20212 07a0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20212      01
 20213 07a5 0F8FDD03 		jg	.L1862	#,
 20213      0000
1209:sieve_extend.c ****                         }
 20214              		.loc 1 1209 32 view .LVU6906
 20215 07ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20215      20
 20216 07b0 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 20216      48
 20217              	# sieve_extend.c:1204:                             best_avg = tuning_result[tuning_result_index].av
1204:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20218              		.loc 1 1204 38 view .LVU6907
 20219 07b5 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 20219      2428
 20220              	# sieve_extend.c:1205:                             best_blocksize_bits = blocksize_bits;
1205:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20221              		.loc 1 1205 49 view .LVU6908
GAS LISTING /tmp/ccH5HMHD.s 			page 538


 20222 07bb 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.791
 20222      38
 20223 07c0 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, smallstep_faster
 20223      40
 20224              	.LVL1238:
 20225              	.L1750:
1212:sieve_extend.c ****                     }
 20226              		.loc 1 1212 25 is_stmt 1 view .LVU6909
1212:sieve_extend.c ****                     }
 20227              		.loc 1 1212 25 is_stmt 0 view .LVU6910
 20228              	.LBE1097:
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20229              		.loc 1 1187 141 is_stmt 1 view .LVU6911
 20230              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20231              		.loc 1 1187 151 is_stmt 0 view .LVU6912
 20232 07c5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 20232      60
 20233 07ca 4983C760 		add	r15, 96	# ivtmp.790,
 20234 07ce 4801CD   		add	rbp, rcx	# free_bits, freebits_steps
 20235              	.LVL1239:
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20236              		.loc 1 1187 49 is_stmt 1 view .LVU6913
 20237 07d1 4829CB   		sub	rbx, rcx	# ivtmp.791, freebits_steps
 20238              	.LVL1240:
 20239              	# sieve_extend.c:1187:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1187:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20240              		.loc 1 1187 21 is_stmt 0 view .LVU6914
 20241 07d4 4881FDFF 		cmp	rbp, 4095	# free_bits,
 20241      0F0000
 20242 07db 0F87E700 		ja	.L1751	#,
 20242      0000
 20243              	.LVL1241:
 20244              	.L1755:
 20245              	.LBB1114:
1188:sieve_extend.c **** 
 20246              		.loc 1 1188 25 is_stmt 1 view .LVU6915
1191:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20247              		.loc 1 1191 25 view .LVU6916
 20248              	# sieve_extend.c:1198:                         tuning_result[tuning_result_index].smallstep_faster 
1198:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20249              		.loc 1 1198 77 is_stmt 0 view .LVU6917
 20250 07e1 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20250      20
 20251 07e6 4C89EE   		mov	rsi, r13	# tuning_results, tuning_results
 20252              	# sieve_extend.c:1192:                         tuning_result[tuning_result_index].maxints = maxints
1192:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20253              		.loc 1 1192 68 view .LVU6918
 20254 07e9 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 20254      78
 20255              	# sieve_extend.c:1191:                         tuning_results++;
1191:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20256              		.loc 1 1191 39 view .LVU6919
 20257 07ee 4983C501 		add	r13, 1	# tuning_results,
 20258              	.LVL1242:
1192:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20259              		.loc 1 1192 25 is_stmt 1 view .LVU6920
GAS LISTING /tmp/ccH5HMHD.s 			page 539


 20260              	# sieve_extend.c:1194:                         tuning_result[tuning_result_index].sample_max = samp
1194:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20261              		.loc 1 1194 71 is_stmt 0 view .LVU6921
 20262 07f2 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 20262      68
 20263              	# sieve_extend.c:1200:                         tuning_result[tuning_result_index].vectorstep_faster
1200:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20264              		.loc 1 1200 78 view .LVU6922
 20265 07f7 488B4424 		mov	rax, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20265      30
 20266              	# sieve_extend.c:1198:                         tuning_result[tuning_result_index].smallstep_faster 
1198:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20267              		.loc 1 1198 77 view .LVU6923
 20268 07fc 49897F20 		mov	QWORD PTR 32[r15], rdi	# MEM[base: _500, offset: 32B], smallstep_faster
 20269              	# sieve_extend.c:1201:                         tune_benchmark(tuning_result, tuning_result_index);
1201:sieve_extend.c **** 
 20270              		.loc 1 1201 25 view .LVU6924
 20271 0800 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	#, %sfp
 20271      50
 20272              	# sieve_extend.c:1193:                         tuning_result[tuning_result_index].sample_duration =
1193:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20273              		.loc 1 1193 76 view .LVU6925
 20274 0805 C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 20274      2470
 20275              	# sieve_extend.c:1192:                         tuning_result[tuning_result_index].maxints = maxints
1192:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20276              		.loc 1 1192 68 view .LVU6926
 20277 080b 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _500, offset: 0B], option_maxFactor.42_64
1193:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20278              		.loc 1 1193 25 is_stmt 1 view .LVU6927
 20279              	# sieve_extend.c:1194:                         tuning_result[tuning_result_index].sample_max = samp
1194:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20280              		.loc 1 1194 71 is_stmt 0 view .LVU6928
 20281 080e 4D894F38 		mov	QWORD PTR 56[r15], r9	# MEM[base: _500, offset: 56B], sample_max
 20282              	# sieve_extend.c:1195:                         tuning_result[tuning_result_index].blocksize_kb = bl
1195:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20283              		.loc 1 1195 73 view .LVU6929
 20284 0812 4D896710 		mov	QWORD PTR 16[r15], r12	# MEM[base: _500, offset: 16B], blocksize_kb
 20285              	# sieve_extend.c:1196:                         tuning_result[tuning_result_index].free_bits = free_
1196:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20286              		.loc 1 1196 70 view .LVU6930
 20287 0816 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _500, offset: 24B], free_bits
 20288              	# sieve_extend.c:1197:                         tuning_result[tuning_result_index].blocksize_bits = 
1197:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20289              		.loc 1 1197 75 view .LVU6931
 20290 081a 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _500, offset: 8B], ivtmp.791
 20291              	# sieve_extend.c:1199:                         tuning_result[tuning_result_index].mediumstep_faster
1199:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20292              		.loc 1 1199 78 view .LVU6932
 20293 081e 4D897728 		mov	QWORD PTR 40[r15], r14	# MEM[base: _500, offset: 40B], mediumstep_faster
 20294              	# sieve_extend.c:1200:                         tuning_result[tuning_result_index].vectorstep_faster
1200:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20295              		.loc 1 1200 78 view .LVU6933
 20296 0822 49894730 		mov	QWORD PTR 48[r15], rax	# MEM[base: _500, offset: 48B], vectorstep_faster
 20297              	# sieve_extend.c:1193:                         tuning_result[tuning_result_index].sample_duration =
1193:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20298              		.loc 1 1193 76 view .LVU6934
GAS LISTING /tmp/ccH5HMHD.s 			page 540


 20299 0826 C4C17B11 		vmovsd	QWORD PTR 64[r15], xmm4	# MEM[base: _500, offset: 64B], sample_duration
 20299      6740
1194:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20300              		.loc 1 1194 25 is_stmt 1 view .LVU6935
1195:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20301              		.loc 1 1195 25 view .LVU6936
1196:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20302              		.loc 1 1196 25 view .LVU6937
1197:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20303              		.loc 1 1197 25 view .LVU6938
1198:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20304              		.loc 1 1198 25 view .LVU6939
1199:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20305              		.loc 1 1199 25 view .LVU6940
1200:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20306              		.loc 1 1200 25 view .LVU6941
1201:sieve_extend.c **** 
 20307              		.loc 1 1201 25 view .LVU6942
 20308 082c E8000000 		call	tune_benchmark	#
 20308      00
 20309              	.LVL1243:
1203:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20310              		.loc 1 1203 25 view .LVU6943
 20311              	# sieve_extend.c:1203:                         if ( tuning_result[tuning_result_index].avg > best_a
1203:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20312              		.loc 1 1203 64 is_stmt 0 view .LVU6944
 20313 0831 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r15]	# _253, MEM[base: _500, offset: 88B]
 20313      5F58
 20314              	# sieve_extend.c:1203:                         if ( tuning_result[tuning_result_index].avg > best_a
1203:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20315              		.loc 1 1203 28 view .LVU6945
 20316 0837 C5F92F5C 		vcomisd	xmm3, QWORD PTR 40[rsp]	# _253, %sfp
 20316      2428
 20317 083d 0F875DFF 		ja	.L1752	#,
 20317      FFFF
 20318              	.L1753:
1211:sieve_extend.c ****                         tuning_result_index++;
 20319              		.loc 1 1211 25 is_stmt 1 view .LVU6946
 20320              	# sieve_extend.c:1211:                         if (option_verboselevel >= 3) { printf("...."); tuni
1211:sieve_extend.c ****                         tuning_result_index++;
 20321              		.loc 1 1211 28 is_stmt 0 view .LVU6947
 20322 0843 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 20322      02
 20323 0848 0F8E77FF 		jle	.L1750	#,
 20323      FFFF
1211:sieve_extend.c ****                         tuning_result_index++;
 20324              		.loc 1 1211 57 is_stmt 1 view .LVU6948
 20325              	.LVL1244:
 20326              	.LBB1098:
 20327              	.LBI1098:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20328              		.loc 3 105 1 view .LVU6949
 20329              	.LBB1099:
 20330              		.loc 3 107 3 view .LVU6950
 20331              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20332              		.loc 3 107 10 is_stmt 0 view .LVU6951
 20333 084e 488D3500 		lea	rsi, .LC52[rip]	#,
GAS LISTING /tmp/ccH5HMHD.s 			page 541


 20333      000000
 20334 0855 BF010000 		mov	edi, 1	#,
 20334      00
 20335 085a 31C0     		xor	eax, eax	#
 20336 085c E8000000 		call	__printf_chk@PLT	#
 20336      00
 20337              	.LVL1245:
 20338              		.loc 3 107 10 view .LVU6952
 20339              	.LBE1099:
 20340              	.LBE1098:
1211:sieve_extend.c ****                         tuning_result_index++;
 20341              		.loc 1 1211 73 is_stmt 1 view .LVU6953
 20342              	.LBB1100:
 20343              	.LBI1100:
1126:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20344              		.loc 1 1126 20 view .LVU6954
 20345              	.LBB1101:
1127:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20346              		.loc 1 1127 5 view .LVU6955
 20347              	.LBB1102:
 20348              	.LBI1102:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20349              		.loc 3 105 1 view .LVU6956
 20350              	.LBB1103:
 20351              		.loc 3 107 3 view .LVU6957
 20352              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20353              		.loc 3 107 10 is_stmt 0 view .LVU6958
 20354 0861 498B7F38 		mov	rdi, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20355 0865 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20355      4750
 20356 086b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20357 086f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20358 0873 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _500, offset: 56B]
 20358      18
 20359 0878 BF010000 		mov	edi, 1	#,
 20359      00
 20360 087d 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20361 0881 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _500, offset: 72B]
 20361      10
 20362 0886 B8030000 		mov	eax, 3	#,
 20362      00
 20363 088b 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20364 088f 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _500, offset: 48B]
 20364      08
 20365 0894 488D3500 		lea	rsi, .LC51[rip]	#,
 20365      000000
 20366 089b 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 20367 089f 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _500, offset: 40B]
 20368 08a3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 20369 08a7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 20370 08ab C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 20370      5758
 20371 08b1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 20371      4F40
 20372 08b7 E8000000 		call	__printf_chk@PLT	#
 20372      00
 20373              	.LVL1246:
GAS LISTING /tmp/ccH5HMHD.s 			page 542


 20374              		.loc 3 107 10 view .LVU6959
 20375              	.LBE1103:
 20376              	.LBE1102:
 20377              	# sieve_extend.c:1132: }
1132:sieve_extend.c **** 
 20378              		.loc 1 1132 1 view .LVU6960
 20379 08bc E904FFFF 		jmp	.L1750	#
 20379      FF
 20380              	.LVL1247:
 20381              		.p2align 4,,7
 20382 08c1 0F1F8000 		.p2align 3
 20382      000000
 20383              	.L1751:
1132:sieve_extend.c **** 
 20384              		.loc 1 1132 1 view .LVU6961
 20385              	.LBE1101:
 20386              	.LBE1100:
 20387              	.LBE1114:
 20388              	.LBE1116:
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20389              		.loc 1 1186 67 is_stmt 1 view .LVU6962
 20390              	# sieve_extend.c:1186:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20391              		.loc 1 1186 80 is_stmt 0 view .LVU6963
 20392 08c8 49D1EC   		shr	r12	# blocksize_kb
 20393              	.LVL1248:
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20394              		.loc 1 1186 50 is_stmt 1 view .LVU6964
 20395              	# sieve_extend.c:1186:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1186:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20396              		.loc 1 1186 17 is_stmt 0 view .LVU6965
 20397 08cb 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 20397      01
 20398 08d0 0F85AAFE 		jne	.L1757	#,
 20398      FFFF
 20399              	.LBE1118:
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20400              		.loc 1 1185 101 is_stmt 1 view .LVU6966
 20401              	# sieve_extend.c:1185:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20402              		.loc 1 1185 119 is_stmt 0 view .LVU6967
 20403 08d6 4C8BA424 		mov	r12, QWORD PTR 128[rsp]	# vectorstep_faster_steps, %sfp
 20403      80000000 
 20404              	.LVL1249:
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20405              		.loc 1 1185 119 view .LVU6968
 20406 08de 4C016424 		add	QWORD PTR 48[rsp], r12	# %sfp, vectorstep_faster_steps
 20406      30
 20407              	.LVL1250:
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20408              		.loc 1 1185 119 view .LVU6969
 20409 08e3 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20409      30
 20410              	.LVL1251:
1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20411              		.loc 1 1185 67 is_stmt 1 view .LVU6970
 20412              	# sieve_extend.c:1185:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
GAS LISTING /tmp/ccH5HMHD.s 			page 543


1185:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20413              		.loc 1 1185 13 is_stmt 0 view .LVU6971
 20414 08e8 4881FB00 		cmp	rbx, 256	# vectorstep_faster,
 20414      010000
 20415 08ef 0F867BFE 		jbe	.L1759	#,
 20415      FFFF
 20416              	.LBE1094:
1184:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20417              		.loc 1 1184 94 is_stmt 1 view .LVU6972
 20418              	# sieve_extend.c:1184:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1184:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20419              		.loc 1 1184 112 is_stmt 0 view .LVU6973
 20420 08f5 4C03B424 		add	r14, QWORD PTR 136[rsp]	# mediumstep_faster, %sfp
 20420      88000000 
 20421              	.LVL1252:
1184:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20422              		.loc 1 1184 62 is_stmt 1 view .LVU6974
 20423              	# sieve_extend.c:1184:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1184:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20424              		.loc 1 1184 9 is_stmt 0 view .LVU6975
 20425 08fd 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 20426 0901 0F8659FE 		jbe	.L1761	#,
 20426      FFFF
 20427              	.LBE1093:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20428              		.loc 1 1183 75 is_stmt 1 view .LVU6976
 20429              	# sieve_extend.c:1183:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20430              		.loc 1 1183 92 is_stmt 0 view .LVU6977
 20431 0907 4C8BB424 		mov	r14, QWORD PTR 136[rsp]	# smallstep_faster_steps, %sfp
 20431      88000000 
 20432              	.LVL1253:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20433              		.loc 1 1183 92 view .LVU6978
 20434 090f 4C017424 		add	QWORD PTR 32[rsp], r14	# %sfp, smallstep_faster_steps
 20434      20
 20435              	.LVL1254:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20436              		.loc 1 1183 92 view .LVU6979
 20437 0914 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20437      20
 20438              	.LVL1255:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20439              		.loc 1 1183 42 is_stmt 1 view .LVU6980
 20440              	# sieve_extend.c:1183:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20441              		.loc 1 1183 5 is_stmt 0 view .LVU6981
 20442 0919 4983FF20 		cmp	r15, 32	# smallstep_faster,
 20443 091d 0F8634FE 		jbe	.L1749	#,
 20443      FFFF
 20444 0923 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20444      50
 20445              	.LVL1256:
1183:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20446              		.loc 1 1183 5 view .LVU6982
 20447              	.LBE1123:
1218:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
GAS LISTING /tmp/ccH5HMHD.s 			page 544


 20448              		.loc 1 1218 5 is_stmt 1 view .LVU6983
 20449              	# sieve_extend.c:1218:     if (option_verboselevel >= 2) {
1218:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20450              		.loc 1 1218 8 is_stmt 0 view .LVU6984
 20451 0928 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20451      01
 20452 092d 7E31     		jle	.L1762	#,
1219:sieve_extend.c ****         printf("Best options\n");
 20453              		.loc 1 1219 9 is_stmt 1 view .LVU6985
 20454              	.LVL1257:
 20455              	.LBB1124:
 20456              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20457              		.loc 3 105 1 view .LVU6986
 20458              	.LBB1125:
 20459              		.loc 3 107 3 view .LVU6987
 20460              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20461              		.loc 3 107 10 is_stmt 0 view .LVU6988
 20462 092f 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 20462      48
 20463 0934 BF010000 		mov	edi, 1	#,
 20463      00
 20464 0939 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 20464      40
 20465 093e 4C89EA   		mov	rdx, r13	#, tuning_results
 20466 0941 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 20466      38
 20467 0946 488D3500 		lea	rsi, .LC53[rip]	#,
 20467      000000
 20468 094d 31C0     		xor	eax, eax	#
 20469 094f E8000000 		call	__printf_chk@PLT	#
 20469      00
 20470              	.LVL1258:
 20471              		.loc 3 107 10 view .LVU6989
 20472              	.LBE1125:
 20473              	.LBE1124:
1220:sieve_extend.c ****     }
 20474              		.loc 1 1220 9 is_stmt 1 view .LVU6990
 20475              	.LBB1126:
 20476              	.LBI1126:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20477              		.loc 3 105 1 view .LVU6991
 20478              	.LBB1127:
 20479              		.loc 3 107 3 view .LVU6992
 20480              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20481              		.loc 3 107 10 is_stmt 0 view .LVU6993
 20482 0954 488D3D00 		lea	rdi, .LC54[rip]	#,
 20482      000000
 20483 095b E8000000 		call	puts@PLT	#
 20483      00
 20484              	.LVL1259:
 20485              	.L1762:
 20486              		.loc 3 107 10 view .LVU6994
 20487              	.LBE1127:
 20488              	.LBE1126:
 20489              	.LBB1128:
 20490              	# sieve_extend.c:1230:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
GAS LISTING /tmp/ccH5HMHD.s 			page 545


1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20491              		.loc 1 1230 75 view .LVU6995
 20492 0960 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 20492      68
 20493              	.LBE1128:
 20494              	.LBB1137:
 20495              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20496              		.loc 1 1238 24 view .LVU6996
 20497 0965 4531E4   		xor	r12d, r12d	# step
 20498              	.LVL1260:
 20499              	.L1767:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20500              		.loc 1 1238 24 view .LVU6997
 20501              	.LBE1137:
1223:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 20502              		.loc 1 1223 11 is_stmt 1 view .LVU6998
 20503 0968 4983FD04 		cmp	r13, 4	# tuning_results,
 20504 096c 0F861404 		jbe	.L1863	#,
 20504      0000
1224:sieve_extend.c ****         step++;
 20505              		.loc 1 1224 9 view .LVU6999
 20506 0972 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 20506      000000
 20507 0979 BA600000 		mov	edx, 96	#,
 20507      00
 20508 097e 4C89EE   		mov	rsi, r13	#, tuning_results
 20509 0981 4C89FF   		mov	rdi, r15	#, tuning_result
 20510 0984 E8000000 		call	qsort@PLT	#
 20510      00
 20511              	.LVL1261:
1225:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20512              		.loc 1 1225 9 view .LVU7000
 20513              	# sieve_extend.c:1225:         step++;
1225:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20514              		.loc 1 1225 13 is_stmt 0 view .LVU7001
 20515 0989 4983C401 		add	r12, 1	# step,
 20516              	.LVL1262:
1226:sieve_extend.c ****             tuning_result_index = 0;
 20517              		.loc 1 1226 9 is_stmt 1 view .LVU7002
 20518              	# sieve_extend.c:1226:         if (option_verboselevel >= 2) {
1226:sieve_extend.c ****             tuning_result_index = 0;
 20519              		.loc 1 1226 12 is_stmt 0 view .LVU7003
 20520 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20520      01
 20521 0992 0F8F7D02 		jg	.L1763	#,
 20521      0000
 20522              	.L1765:
1236:sieve_extend.c **** 
 20523              		.loc 1 1236 9 is_stmt 1 view .LVU7004
 20524              	# sieve_extend.c:1236:         tuning_results = tuning_results / 2;
1236:sieve_extend.c **** 
 20525              		.loc 1 1236 24 is_stmt 0 view .LVU7005
 20526 0998 49D1ED   		shr	r13	# tuning_results
 20527              	.LVL1263:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20528              		.loc 1 1238 9 is_stmt 1 view .LVU7006
GAS LISTING /tmp/ccH5HMHD.s 			page 546


 20529              	.LBB1138:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20530              		.loc 1 1238 14 view .LVU7007
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20531              		.loc 1 1238 29 view .LVU7008
 20532              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20533              		.loc 1 1238 24 is_stmt 0 view .LVU7009
 20534 099b 31ED     		xor	ebp, ebp	# i
 20535 099d 4D89E8   		mov	r8, r13	# tmp487, tuning_results
 20536 09a0 498D5F38 		lea	rbx, 56[r15]	# ivtmp.772,
 20537 09a4 4183E007 		and	r8d, 7	# tmp487,
 20538 09a8 0F84D200 		je	.L1764	#,
 20538      0000
 20539 09ae 4983F801 		cmp	r8, 1	# tmp487,
 20540 09b2 0F84A900 		je	.L1822	#,
 20540      0000
 20541 09b8 4983F802 		cmp	r8, 2	# tmp487,
 20542 09bc 0F848900 		je	.L1823	#,
 20542      0000
 20543 09c2 4983F803 		cmp	r8, 3	# tmp487,
 20544 09c6 746D     		je	.L1824	#,
 20545 09c8 4983F804 		cmp	r8, 4	# tmp487,
 20546 09cc 7451     		je	.L1825	#,
 20547 09ce 4983F805 		cmp	r8, 5	# tmp487,
 20548 09d2 7435     		je	.L1826	#,
 20549 09d4 4983F806 		cmp	r8, 6	# tmp487,
 20550 09d8 7419     		je	.L1827	#,
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20551              		.loc 1 1239 13 is_stmt 1 view .LVU7010
 20552 09da 31F6     		xor	esi, esi	#
 20553 09dc 4C89FF   		mov	rdi, r15	#, tuning_result
 20554 09df E8000000 		call	tune_benchmark	#
 20554      00
 20555              	.LVL1264:
1240:sieve_extend.c ****         }
 20556              		.loc 1 1240 13 view .LVU7011
 20557              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20558              		.loc 1 1238 48 is_stmt 0 view .LVU7012
 20559 09e4 BD010000 		mov	ebp, 1	# i,
 20559      00
 20560              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20561              		.loc 1 1240 41 view .LVU7013
 20562 09e9 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20563              		.loc 1 1238 47 is_stmt 1 view .LVU7014
 20564              	.LVL1265:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20565              		.loc 1 1238 29 view .LVU7015
 20566 09ec 498D9F98 		lea	rbx, 152[r15]	# ivtmp.772,
 20566      000000
 20567              	.L1827:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20568              		.loc 1 1239 13 view .LVU7016
 20569 09f3 4889EE   		mov	rsi, rbp	#, i
GAS LISTING /tmp/ccH5HMHD.s 			page 547


 20570 09f6 4C89FF   		mov	rdi, r15	#, tuning_result
 20571 09f9 E8000000 		call	tune_benchmark	#
 20571      00
 20572              	.LVL1266:
1240:sieve_extend.c ****         }
 20573              		.loc 1 1240 13 view .LVU7017
 20574              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20575              		.loc 1 1238 48 is_stmt 0 view .LVU7018
 20576 09fe 4883C501 		add	rbp, 1	# i,
 20577              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20578              		.loc 1 1240 41 view .LVU7019
 20579 0a02 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20580              		.loc 1 1238 47 is_stmt 1 view .LVU7020
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20581              		.loc 1 1238 29 view .LVU7021
 20582 0a05 4883C360 		add	rbx, 96	# ivtmp.772,
 20583              	.L1826:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20584              		.loc 1 1239 13 view .LVU7022
 20585 0a09 4889EE   		mov	rsi, rbp	#, i
 20586 0a0c 4C89FF   		mov	rdi, r15	#, tuning_result
 20587 0a0f E8000000 		call	tune_benchmark	#
 20587      00
 20588              	.LVL1267:
1240:sieve_extend.c ****         }
 20589              		.loc 1 1240 13 view .LVU7023
 20590              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20591              		.loc 1 1238 48 is_stmt 0 view .LVU7024
 20592 0a14 4883C501 		add	rbp, 1	# i,
 20593              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20594              		.loc 1 1240 41 view .LVU7025
 20595 0a18 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20596              		.loc 1 1238 47 is_stmt 1 view .LVU7026
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20597              		.loc 1 1238 29 view .LVU7027
 20598 0a1b 4883C360 		add	rbx, 96	# ivtmp.772,
 20599              	.L1825:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20600              		.loc 1 1239 13 view .LVU7028
 20601 0a1f 4889EE   		mov	rsi, rbp	#, i
 20602 0a22 4C89FF   		mov	rdi, r15	#, tuning_result
 20603 0a25 E8000000 		call	tune_benchmark	#
 20603      00
 20604              	.LVL1268:
1240:sieve_extend.c ****         }
 20605              		.loc 1 1240 13 view .LVU7029
 20606              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20607              		.loc 1 1238 48 is_stmt 0 view .LVU7030
 20608 0a2a 4883C501 		add	rbp, 1	# i,
 20609              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccH5HMHD.s 			page 548


1240:sieve_extend.c ****         }
 20610              		.loc 1 1240 41 view .LVU7031
 20611 0a2e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20612              		.loc 1 1238 47 is_stmt 1 view .LVU7032
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20613              		.loc 1 1238 29 view .LVU7033
 20614 0a31 4883C360 		add	rbx, 96	# ivtmp.772,
 20615              	.L1824:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20616              		.loc 1 1239 13 view .LVU7034
 20617 0a35 4889EE   		mov	rsi, rbp	#, i
 20618 0a38 4C89FF   		mov	rdi, r15	#, tuning_result
 20619 0a3b E8000000 		call	tune_benchmark	#
 20619      00
 20620              	.LVL1269:
1240:sieve_extend.c ****         }
 20621              		.loc 1 1240 13 view .LVU7035
 20622              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20623              		.loc 1 1238 48 is_stmt 0 view .LVU7036
 20624 0a40 4883C501 		add	rbp, 1	# i,
 20625              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20626              		.loc 1 1240 41 view .LVU7037
 20627 0a44 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20628              		.loc 1 1238 47 is_stmt 1 view .LVU7038
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20629              		.loc 1 1238 29 view .LVU7039
 20630 0a47 4883C360 		add	rbx, 96	# ivtmp.772,
 20631              	.L1823:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20632              		.loc 1 1239 13 view .LVU7040
 20633 0a4b 4889EE   		mov	rsi, rbp	#, i
 20634 0a4e 4C89FF   		mov	rdi, r15	#, tuning_result
 20635 0a51 E8000000 		call	tune_benchmark	#
 20635      00
 20636              	.LVL1270:
1240:sieve_extend.c ****         }
 20637              		.loc 1 1240 13 view .LVU7041
 20638              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20639              		.loc 1 1238 48 is_stmt 0 view .LVU7042
 20640 0a56 4883C501 		add	rbp, 1	# i,
 20641              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20642              		.loc 1 1240 41 view .LVU7043
 20643 0a5a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20644              		.loc 1 1238 47 is_stmt 1 view .LVU7044
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20645              		.loc 1 1238 29 view .LVU7045
 20646 0a5d 4883C360 		add	rbx, 96	# ivtmp.772,
 20647              	.L1822:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20648              		.loc 1 1239 13 view .LVU7046
GAS LISTING /tmp/ccH5HMHD.s 			page 549


 20649 0a61 4889EE   		mov	rsi, rbp	#, i
 20650 0a64 4C89FF   		mov	rdi, r15	#, tuning_result
 20651              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20652              		.loc 1 1238 48 is_stmt 0 view .LVU7047
 20653 0a67 4883C501 		add	rbp, 1	# i,
 20654              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20655              		.loc 1 1239 13 view .LVU7048
 20656 0a6b E8000000 		call	tune_benchmark	#
 20656      00
 20657              	.LVL1271:
1240:sieve_extend.c ****         }
 20658              		.loc 1 1240 13 is_stmt 1 view .LVU7049
 20659              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20660              		.loc 1 1240 41 is_stmt 0 view .LVU7050
 20661 0a70 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20662              		.loc 1 1238 47 is_stmt 1 view .LVU7051
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20663              		.loc 1 1238 29 view .LVU7052
 20664 0a73 4883C360 		add	rbx, 96	# ivtmp.772,
 20665              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20666              		.loc 1 1238 9 is_stmt 0 view .LVU7053
 20667 0a77 4939ED   		cmp	r13, rbp	# tuning_results, i
 20668 0a7a 0F84E8FE 		je	.L1767	#,
 20668      FFFF
 20669              	.L1764:
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20670              		.loc 1 1239 13 is_stmt 1 view .LVU7054
 20671 0a80 4889EE   		mov	rsi, rbp	#, i
 20672 0a83 4C89FF   		mov	rdi, r15	#, tuning_result
 20673 0a86 E8000000 		call	tune_benchmark	#
 20673      00
 20674              	.LVL1272:
1240:sieve_extend.c ****         }
 20675              		.loc 1 1240 13 view .LVU7055
 20676 0a8b 4C8D5360 		lea	r10, 96[rbx]	# tmp489,
 20677              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20678              		.loc 1 1240 41 is_stmt 0 view .LVU7056
 20679 0a8f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20680              		.loc 1 1238 47 is_stmt 1 view .LVU7057
 20681              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20682              		.loc 1 1238 48 is_stmt 0 view .LVU7058
 20683 0a92 488D7501 		lea	rsi, 1[rbp]	# tmp488,
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20684              		.loc 1 1238 29 is_stmt 1 view .LVU7059
 20685              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20686              		.loc 1 1239 13 is_stmt 0 view .LVU7060
 20687 0a96 4C89FF   		mov	rdi, r15	#, tuning_result
 20688 0a99 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp489
GAS LISTING /tmp/ccH5HMHD.s 			page 550


 20688      20
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20689              		.loc 1 1239 13 is_stmt 1 view .LVU7061
 20690 0a9e E8000000 		call	tune_benchmark	#
 20690      00
 20691              	.LVL1273:
1240:sieve_extend.c ****         }
 20692              		.loc 1 1240 13 view .LVU7062
 20693              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20694              		.loc 1 1240 41 is_stmt 0 view .LVU7063
 20695 0aa3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp489, %sfp
 20695      20
 20696 0aa8 4C8D8BC0 		lea	r9, 192[rbx]	# ivtmp.772,
 20696      000000
 20697              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20698              		.loc 1 1238 48 view .LVU7064
 20699 0aaf 488D7502 		lea	rsi, 2[rbp]	# i,
 20700              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20701              		.loc 1 1239 13 view .LVU7065
 20702 0ab3 4C89FF   		mov	rdi, r15	#, tuning_result
 20703 0ab6 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.772
 20703      20
 20704              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20705              		.loc 1 1240 41 view .LVU7066
 20706 0abb 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20707              		.loc 1 1238 47 is_stmt 1 view .LVU7067
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20708              		.loc 1 1238 29 view .LVU7068
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20709              		.loc 1 1239 13 view .LVU7069
 20710 0abe E8000000 		call	tune_benchmark	#
 20710      00
 20711              	.LVL1274:
1240:sieve_extend.c ****         }
 20712              		.loc 1 1240 13 view .LVU7070
 20713              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20714              		.loc 1 1240 41 is_stmt 0 view .LVU7071
 20715 0ac3 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20715      20
 20716 0ac8 488D8320 		lea	rax, 288[rbx]	# ivtmp.772,
 20716      010000
 20717 0acf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.772
 20717      20
 20718              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20719              		.loc 1 1238 48 view .LVU7072
 20720 0ad4 488D7503 		lea	rsi, 3[rbp]	# i,
 20721              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20722              		.loc 1 1240 41 view .LVU7073
 20723 0ad8 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _116, offset: 0B], sample_max
GAS LISTING /tmp/ccH5HMHD.s 			page 551


1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20724              		.loc 1 1238 47 is_stmt 1 view .LVU7074
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20725              		.loc 1 1238 29 view .LVU7075
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20726              		.loc 1 1239 13 view .LVU7076
 20727 0adb 4C89FF   		mov	rdi, r15	#, tuning_result
 20728 0ade E8000000 		call	tune_benchmark	#
 20728      00
 20729              	.LVL1275:
1240:sieve_extend.c ****         }
 20730              		.loc 1 1240 13 view .LVU7077
 20731              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20732              		.loc 1 1240 41 is_stmt 0 view .LVU7078
 20733 0ae3 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20733      20
 20734 0ae8 488D8B80 		lea	rcx, 384[rbx]	# ivtmp.772,
 20734      010000
 20735              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20736              		.loc 1 1238 48 view .LVU7079
 20737 0aef 488D7504 		lea	rsi, 4[rbp]	# i,
 20738              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20739              		.loc 1 1239 13 view .LVU7080
 20740 0af3 4C89FF   		mov	rdi, r15	#, tuning_result
 20741 0af6 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, ivtmp.772
 20741      20
 20742              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20743              		.loc 1 1240 41 view .LVU7081
 20744 0afb 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20745              		.loc 1 1238 47 is_stmt 1 view .LVU7082
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20746              		.loc 1 1238 29 view .LVU7083
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20747              		.loc 1 1239 13 view .LVU7084
 20748 0afe E8000000 		call	tune_benchmark	#
 20748      00
 20749              	.LVL1276:
1240:sieve_extend.c ****         }
 20750              		.loc 1 1240 13 view .LVU7085
 20751              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20752              		.loc 1 1240 41 is_stmt 0 view .LVU7086
 20753 0b03 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20753      20
 20754 0b08 4C8D83E0 		lea	r8, 480[rbx]	# ivtmp.772,
 20754      010000
 20755 0b0f 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.772
 20755      20
 20756              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20757              		.loc 1 1239 13 view .LVU7087
 20758 0b14 4C89FF   		mov	rdi, r15	#, tuning_result
GAS LISTING /tmp/ccH5HMHD.s 			page 552


 20759              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20760              		.loc 1 1240 41 view .LVU7088
 20761 0b17 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20762              		.loc 1 1238 47 is_stmt 1 view .LVU7089
 20763              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20764              		.loc 1 1238 48 is_stmt 0 view .LVU7090
 20765 0b1a 488D7505 		lea	rsi, 5[rbp]	# i,
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20766              		.loc 1 1238 29 is_stmt 1 view .LVU7091
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20767              		.loc 1 1239 13 view .LVU7092
 20768 0b1e E8000000 		call	tune_benchmark	#
 20768      00
 20769              	.LVL1277:
1240:sieve_extend.c ****         }
 20770              		.loc 1 1240 13 view .LVU7093
 20771              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20772              		.loc 1 1240 41 is_stmt 0 view .LVU7094
 20773 0b23 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20773      20
 20774 0b28 4C8D9B40 		lea	r11, 576[rbx]	# ivtmp.772,
 20774      020000
 20775              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20776              		.loc 1 1238 48 view .LVU7095
 20777 0b2f 488D7506 		lea	rsi, 6[rbp]	# i,
 20778              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20779              		.loc 1 1239 13 view .LVU7096
 20780 0b33 4C89FF   		mov	rdi, r15	#, tuning_result
 20781 0b36 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.772
 20781      20
 20782              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20783              		.loc 1 1240 41 view .LVU7097
 20784 0b3b 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20785              		.loc 1 1238 47 is_stmt 1 view .LVU7098
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20786              		.loc 1 1238 29 view .LVU7099
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20787              		.loc 1 1239 13 view .LVU7100
 20788 0b3e E8000000 		call	tune_benchmark	#
 20788      00
 20789              	.LVL1278:
1240:sieve_extend.c ****         }
 20790              		.loc 1 1240 13 view .LVU7101
 20791              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20792              		.loc 1 1240 41 is_stmt 0 view .LVU7102
 20793 0b43 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20793      20
 20794 0b48 488DBBA0 		lea	rdi, 672[rbx]	# ivtmp.772,
GAS LISTING /tmp/ccH5HMHD.s 			page 553


 20794      020000
 20795              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20796              		.loc 1 1238 48 view .LVU7103
 20797 0b4f 488D7507 		lea	rsi, 7[rbp]	# i,
 20798 0b53 4883C508 		add	rbp, 8	# i,
 20799 0b57 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.772
 20799      20
 20800              	# sieve_extend.c:1239:             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20801              		.loc 1 1239 13 view .LVU7104
 20802 0b5c 4C89FF   		mov	rdi, r15	#, tuning_result
 20803              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20804              		.loc 1 1240 41 view .LVU7105
 20805 0b5f 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20806              		.loc 1 1238 47 is_stmt 1 view .LVU7106
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20807              		.loc 1 1238 29 view .LVU7107
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20808              		.loc 1 1239 13 view .LVU7108
 20809 0b62 4881C300 		add	rbx, 768	# ivtmp.772,
 20809      030000
 20810 0b69 E8000000 		call	tune_benchmark	#
 20810      00
 20811              	.LVL1279:
1240:sieve_extend.c ****         }
 20812              		.loc 1 1240 13 view .LVU7109
 20813              	# sieve_extend.c:1240:             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
 20814              		.loc 1 1240 41 is_stmt 0 view .LVU7110
 20815 0b6e 488B4424 		mov	rax, QWORD PTR 32[rsp]	# ivtmp.772, %sfp
 20815      20
 20816 0b73 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _116, offset: 0B], sample_max
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20817              		.loc 1 1238 47 is_stmt 1 view .LVU7111
 20818              	.LVL1280:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20819              		.loc 1 1238 29 view .LVU7112
 20820              	# sieve_extend.c:1238:         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20821              		.loc 1 1238 9 is_stmt 0 view .LVU7113
 20822 0b76 4939ED   		cmp	r13, rbp	# tuning_results, i
 20823 0b79 0F8501FF 		jne	.L1764	#,
 20823      FFFF
 20824 0b7f E9E4FDFF 		jmp	.L1767	#
 20824      FF
 20825              	.LVL1281:
 20826              		.p2align 4,,7
 20827 0b84 0F1F4000 		.p2align 3
 20828              	.L1862:
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20829              		.loc 1 1238 9 view .LVU7114
 20830              	.LBE1138:
 20831              	.LBB1139:
 20832              	.LBB1121:
GAS LISTING /tmp/ccH5HMHD.s 			page 554


 20833              	.LBB1120:
 20834              	.LBB1119:
 20835              	.LBB1117:
 20836              	.LBB1115:
 20837              	.LBB1104:
 20838              	.LBB1105:
 20839              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20840              		.loc 3 107 10 view .LVU7115
 20841 0b88 488D3500 		lea	rsi, .LC50[rip]	#,
 20841      000000
 20842 0b8f BF010000 		mov	edi, 1	#,
 20842      00
 20843 0b94 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 20843      2428
 20844              	.LBE1105:
 20845              	.LBE1104:
1209:sieve_extend.c ****                         }
 20846              		.loc 1 1209 60 is_stmt 1 view .LVU7116
 20847              	.LVL1282:
 20848              	.LBB1107:
 20849              	.LBI1104:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20850              		.loc 3 105 1 view .LVU7117
 20851              	.LBB1106:
 20852              		.loc 3 107 3 view .LVU7118
 20853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20854              		.loc 3 107 10 is_stmt 0 view .LVU7119
 20855 0b9a 31C0     		xor	eax, eax	#
 20856 0b9c E8000000 		call	__printf_chk@PLT	#
 20856      00
 20857              	.LVL1283:
 20858              		.loc 3 107 10 view .LVU7120
 20859              	.LBE1106:
 20860              	.LBE1107:
1209:sieve_extend.c ****                         }
 20861              		.loc 1 1209 76 is_stmt 1 view .LVU7121
 20862              	.LBB1108:
 20863              	.LBI1108:
1126:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20864              		.loc 1 1126 20 view .LVU7122
 20865              	.LBB1109:
1127:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20866              		.loc 1 1127 5 view .LVU7123
 20867              	.LBB1110:
 20868              	.LBI1110:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20869              		.loc 3 105 1 view .LVU7124
 20870              	.LBB1111:
 20871              		.loc 3 107 3 view .LVU7125
 20872              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20873              		.loc 3 107 10 is_stmt 0 view .LVU7126
 20874 0ba1 4D8B4738 		mov	r8, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20875 0ba5 488D3500 		lea	rsi, .LC51[rip]	#,
 20875      000000
 20876 0bac 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20877 0bb0 BF010000 		mov	edi, 1	#,
 20877      00
GAS LISTING /tmp/ccH5HMHD.s 			page 555


 20878 0bb5 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20878      4750
 20879 0bbb B8030000 		mov	eax, 3	#,
 20879      00
 20880 0bc0 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20881 0bc4 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _500, offset: 56B]
 20881      18
 20882 0bc9 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20883 0bcd 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _500, offset: 72B]
 20883      10
 20884 0bd2 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20885 0bd6 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _500, offset: 48B]
 20885      08
 20886 0bdb 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 20887 0bdf 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _500, offset: 40B]
 20888 0be3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 20889 0be7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 20890 0beb C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 20890      5758
 20891 0bf1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 20891      4F40
 20892 0bf7 E8000000 		call	__printf_chk@PLT	#
 20892      00
 20893              	.LVL1284:
 20894              		.loc 3 107 10 view .LVU7127
 20895              	.LBE1111:
 20896              	.LBE1110:
 20897              	# sieve_extend.c:1132: }
1132:sieve_extend.c **** 
 20898              		.loc 1 1132 1 view .LVU7128
 20899 0bfc 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20899      20
 20900 0c01 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 20900      48
 20901              	.LBE1109:
 20902              	.LBE1108:
 20903              	# sieve_extend.c:1205:                             best_blocksize_bits = blocksize_bits;
1205:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20904              		.loc 1 1205 49 view .LVU7129
 20905 0c06 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.791
 20905      38
 20906              	.LBB1113:
 20907              	.LBB1112:
 20908              	# sieve_extend.c:1132: }
1132:sieve_extend.c **** 
 20909              		.loc 1 1132 1 view .LVU7130
 20910 0c0b 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, smallstep_faster
 20910      40
 20911 0c10 E92EFCFF 		jmp	.L1753	#
 20911      FF
 20912              	.LVL1285:
 20913              	.L1763:
1132:sieve_extend.c **** 
 20914              		.loc 1 1132 1 view .LVU7131
 20915              	.LBE1112:
 20916              	.LBE1113:
 20917              	.LBE1115:
GAS LISTING /tmp/ccH5HMHD.s 			page 556


 20918              	.LBE1117:
 20919              	.LBE1119:
 20920              	.LBE1120:
 20921              	.LBE1121:
 20922              	.LBE1139:
1227:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 20923              		.loc 1 1227 13 is_stmt 1 view .LVU7132
1228:sieve_extend.c ****             if (option_verboselevel >= 3) {
 20924              		.loc 1 1228 13 view .LVU7133
 20925              	.LBB1140:
 20926              	.LBI1140:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20927              		.loc 3 105 1 view .LVU7134
 20928              	.LBB1141:
 20929              		.loc 3 107 3 view .LVU7135
 20930              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20931              		.loc 3 107 10 is_stmt 0 view .LVU7136
 20932 0c15 4C89E2   		mov	rdx, r12	#, step
 20933 0c18 488D3500 		lea	rsi, .LC55[rip]	#,
 20933      000000
 20934 0c1f BF010000 		mov	edi, 1	#,
 20934      00
 20935 0c24 31C0     		xor	eax, eax	#
 20936 0c26 E8000000 		call	__printf_chk@PLT	#
 20936      00
 20937              	.LVL1286:
 20938              		.loc 3 107 10 view .LVU7137
 20939              	.LBE1141:
 20940              	.LBE1140:
1228:sieve_extend.c ****             if (option_verboselevel >= 3) {
 20941              		.loc 1 1228 47 is_stmt 1 view .LVU7138
 20942              	.LBB1142:
 20943              	.LBI1142:
1126:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20944              		.loc 1 1126 20 view .LVU7139
 20945              	.LBB1143:
1127:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20946              		.loc 1 1127 5 view .LVU7140
 20947              	.LBB1144:
 20948              	.LBI1144:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20949              		.loc 3 105 1 view .LVU7141
 20950              	.LBB1145:
 20951              		.loc 3 107 3 view .LVU7142
 20952              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20953              		.loc 3 107 10 is_stmt 0 view .LVU7143
 20954 0c2b 498B5F38 		mov	rbx, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 20955 0c2f 488D3500 		lea	rsi, .LC51[rip]	#,
 20955      000000
 20956 0c36 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 20956      4750
 20957 0c3c BF010000 		mov	edi, 1	#,
 20957      00
 20958 0c41 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 20959 0c45 B8030000 		mov	eax, 3	#,
 20959      00
 20960 0c4a 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
GAS LISTING /tmp/ccH5HMHD.s 			page 557


 20961 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 20961      18
 20962 0c53 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 20963 0c57 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 20963      10
 20964 0c5c 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struc
 20965 0c60 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 20965      08
 20966 0c65 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struct
 20967 0c69 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 20968 0c6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 20969 0c71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 20970 0c75 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 20970      5758
 20971 0c7b C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 20971      4F40
 20972 0c81 E8000000 		call	__printf_chk@PLT	#
 20972      00
 20973              	.LVL1287:
 20974              		.loc 3 107 10 view .LVU7144
 20975              	.LBE1145:
 20976              	.LBE1144:
 20977              	.LBE1143:
 20978              	.LBE1142:
1229:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20979              		.loc 1 1229 13 is_stmt 1 view .LVU7145
 20980              	# sieve_extend.c:1229:             if (option_verboselevel >= 3) {
1229:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20981              		.loc 1 1229 16 is_stmt 0 view .LVU7146
 20982 0c86 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 20982      02
 20983 0c8b 0F8407FD 		je	.L1765	#,
 20983      FFFF
 20984 0c91 498D5F08 		lea	rbx, 8[r15]	# ivtmp.778,
 20985              	.LBB1146:
 20986              	# sieve_extend.c:1230:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20987              		.loc 1 1230 32 view .LVU7147
 20988 0c95 31ED     		xor	ebp, ebp	# tuning_result_index
 20989              	.L1766:
 20990              	.LVL1288:
1231:sieve_extend.c ****                 }
 20991              		.loc 1 1231 21 is_stmt 1 view .LVU7148
 20992              	.LBB1129:
 20993              	.LBI1129:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20994              		.loc 3 105 1 view .LVU7149
 20995              	.LBB1130:
 20996              		.loc 3 107 3 view .LVU7150
 20997              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20998              		.loc 3 107 10 is_stmt 0 view .LVU7151
 20999 0c97 488D3500 		lea	rsi, .LC56[rip]	#,
 20999      000000
 21000 0c9e BF010000 		mov	edi, 1	#,
 21000      00
 21001 0ca3 31C0     		xor	eax, eax	#
 21002              	.LBE1130:
GAS LISTING /tmp/ccH5HMHD.s 			page 558


 21003              	.LBE1129:
 21004              	# sieve_extend.c:1230:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21005              		.loc 1 1230 118 view .LVU7152
 21006 0ca5 4883C501 		add	rbp, 1	# tuning_result_index,
 21007              	.LVL1289:
 21008              	.LBB1132:
 21009              	.LBB1131:
 21010              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21011              		.loc 3 107 10 view .LVU7153
 21012 0ca9 E8000000 		call	__printf_chk@PLT	#
 21012      00
 21013              	.LVL1290:
 21014              		.loc 3 107 10 view .LVU7154
 21015              	.LBE1131:
 21016              	.LBE1132:
1231:sieve_extend.c ****                 }
 21017              		.loc 1 1231 36 is_stmt 1 view .LVU7155
 21018              	.LBB1133:
 21019              	.LBI1133:
1126:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21020              		.loc 1 1126 20 view .LVU7156
 21021              	.LBB1134:
1127:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21022              		.loc 1 1127 5 view .LVU7157
 21023              	.LBB1135:
 21024              	.LBI1135:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21025              		.loc 3 105 1 view .LVU7158
 21026              	.LBB1136:
 21027              		.loc 3 107 3 view .LVU7159
 21028              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21029              		.loc 3 107 10 is_stmt 0 view .LVU7160
 21030 0cae 488B7B30 		mov	rdi, QWORD PTR 48[rbx]	# MEM[base: _158, offset: 48B], MEM[base: _158, offset: 48B]
 21031 0cb2 4883C360 		add	rbx, 96	# ivtmp.778,
 21032 0cb6 488B4BA8 		mov	rcx, QWORD PTR -88[rbx]	# MEM[base: _158, offset: 8B], MEM[base: _158, offset: 8B]
 21033 0cba C5FB1043 		vmovsd	xmm0, QWORD PTR -24[rbx]	# MEM[base: _158, offset: 72B], MEM[base: _158, offset: 72B]
 21033      E8
 21034 0cbf 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _158, offset: 48B]
 21034      18
 21035 0cc4 BF010000 		mov	edi, 1	#,
 21035      00
 21036 0cc9 488B43E0 		mov	rax, QWORD PTR -32[rbx]	# MEM[base: _158, offset: 64B], MEM[base: _158, offset: 64B]
 21037 0ccd 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _158, offset: 64B]
 21037      10
 21038 0cd2 B8030000 		mov	eax, 3	#,
 21038      00
 21039 0cd7 488B53C8 		mov	rdx, QWORD PTR -56[rbx]	# MEM[base: _158, offset: 40B], MEM[base: _158, offset: 40B]
 21040 0cdb 48895424 		mov	QWORD PTR 8[rsp], rdx	#, MEM[base: _158, offset: 40B]
 21040      08
 21041 0ce0 488B73C0 		mov	rsi, QWORD PTR -64[rbx]	# MEM[base: _158, offset: 32B], MEM[base: _158, offset: 32B]
 21042 0ce4 48893424 		mov	QWORD PTR [rsp], rsi	#, MEM[base: _158, offset: 32B]
 21043 0ce8 488D3500 		lea	rsi, .LC51[rip]	#,
 21043      000000
 21044 0cef 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _158, offset: 24B]
 21045 0cf3 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _158, offset: 16B]
 21046 0cf7 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _158, offset: 0B]
GAS LISTING /tmp/ccH5HMHD.s 			page 559


 21047 0cfb C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _158, offset: 80B]
 21047      F0
 21048 0d00 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _158, offset: 56B]
 21048      D8
 21049 0d05 E8000000 		call	__printf_chk@PLT	#
 21049      00
 21050              	.LVL1291:
 21051              		.loc 3 107 10 view .LVU7161
 21052              	.LBE1136:
 21053              	.LBE1135:
 21054              	.LBE1134:
 21055              	.LBE1133:
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21056              		.loc 1 1230 99 is_stmt 1 view .LVU7162
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21057              		.loc 1 1230 55 view .LVU7163
 21058              	# sieve_extend.c:1230:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21059              		.loc 1 1230 75 is_stmt 0 view .LVU7164
 21060 0d0a 4983FD0A 		cmp	r13, 10	# tuning_results,
 21061 0d0e B90A0000 		mov	ecx, 10	# tmp422,
 21061      00
 21062 0d13 490F46CD 		cmovbe	rcx, r13	# tuning_results,, tmp422
 21063              	# sieve_extend.c:1230:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21064              		.loc 1 1230 17 view .LVU7165
 21065 0d17 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp422
 21066 0d1a 0F8277FF 		jb	.L1766	#,
 21066      FFFF
 21067 0d20 E973FCFF 		jmp	.L1765	#
 21067      FF
 21068              	.LVL1292:
 21069              	.L1857:
1230:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21070              		.loc 1 1230 17 view .LVU7166
 21071              	.LBE1146:
 21072              	.LBE1091:
 21073              	.LBE1090:
 21074              	.LBE1089:
1324:sieve_extend.c ****     }
 21075              		.loc 1 1324 39 is_stmt 1 view .LVU7167
 21076              	.LBB1165:
 21077              	.LBI1165:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21078              		.loc 3 105 1 view .LVU7168
 21079              	.LBB1166:
 21080              		.loc 3 107 3 view .LVU7169
 21081              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21082              		.loc 3 107 10 is_stmt 0 view .LVU7170
 21083 0d25 488D3D00 		lea	rdi, .LC48[rip]	#,
 21083      000000
 21084              	.LBE1166:
 21085              	.LBE1165:
 21086              	# sieve_extend.c:1327:     counter_t best_blocksize_bits = default_blocksize;
1327:sieve_extend.c ****     if (option_tunelevel) {
 21087              		.loc 1 1327 15 view .LVU7171
 21088 0d2c 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
GAS LISTING /tmp/ccH5HMHD.s 			page 560


 21088      0300
 21089              	.LBB1168:
 21090              	.LBB1167:
 21091              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21092              		.loc 3 107 10 view .LVU7172
 21093 0d32 E8000000 		call	puts@PLT	#
 21093      00
 21094              	.LVL1293:
 21095              		.loc 3 107 10 view .LVU7173
 21096              	.LBE1167:
 21097              	.LBE1168:
1327:sieve_extend.c ****     if (option_tunelevel) {
 21098              		.loc 1 1327 5 is_stmt 1 view .LVU7174
1328:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21099              		.loc 1 1328 5 view .LVU7175
 21100              	# sieve_extend.c:1328:     if (option_tunelevel) {
1328:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21101              		.loc 1 1328 9 is_stmt 0 view .LVU7176
 21102 0d37 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 21102      9C000000 
 21103              	# sieve_extend.c:1328:     if (option_tunelevel) {
1328:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21104              		.loc 1 1328 8 view .LVU7177
 21105 0d3f 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 21106 0d42 0F857D01 		jne	.L1864	#,
 21106      0000
 21107              	.LVL1294:
 21108              	.L1744:
 21109              	.LBB1169:
1338:sieve_extend.c ****         counter_t passes = 0;
 21110              		.loc 1 1338 9 is_stmt 1 view .LVU7178
 21111              	# sieve_extend.c:1338:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1338:sieve_extend.c ****         counter_t passes = 0;
 21112              		.loc 1 1338 12 is_stmt 0 view .LVU7179
 21113 0d48 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 21113      00000000 
 21114 0d50 0F8E98F6 		jle	.L1771	#,
 21114      FFFF
1338:sieve_extend.c ****         counter_t passes = 0;
 21115              		.loc 1 1338 39 is_stmt 1 discriminator 1 view .LVU7180
 21116              	.LVL1295:
 21117              	.LBB1075:
 21118              	.LBI1075:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21119              		.loc 3 105 1 discriminator 1 view .LVU7181
 21120              	.LBB1076:
 21121              		.loc 3 107 3 discriminator 1 view .LVU7182
 21122              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21123              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7183
 21124 0d56 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 21124      000000
 21125 0d5d 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 21126 0d60 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 21126      000000
 21127 0d67 488D3500 		lea	rsi, .LC58[rip]	#,
 21127      000000
 21128 0d6e 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
GAS LISTING /tmp/ccH5HMHD.s 			page 561


 21128      000000
 21129 0d75 BF010000 		mov	edi, 1	#,
 21129      00
 21130 0d7a 31C0     		xor	eax, eax	#
 21131 0d7c E8000000 		call	__printf_chk@PLT	#
 21131      00
 21132              	.LVL1296:
 21133 0d81 E968F6FF 		jmp	.L1771	#
 21133      FF
 21134              	.LVL1297:
 21135              	.L1863:
 21136              		.loc 3 107 10 discriminator 1 view .LVU7184
 21137              	.LBE1076:
 21138              	.LBE1075:
 21139              	.LBE1169:
 21140              	.LBB1170:
 21141              	.LBB1162:
 21142              	.LBB1159:
1244:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21143              		.loc 1 1244 5 is_stmt 1 view .LVU7185
 21144              	# sieve_extend.c:1244:     tuning_result_type best_result = tuning_result[0];
1244:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21145              		.loc 1 1244 24 is_stmt 0 view .LVU7186
 21146 0d86 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 21147              	.LVL1298:
 21148              	# sieve_extend.c:1245:     if (option_verboselevel >= 1) {
1245:sieve_extend.c ****         tuning_result_index = 0;
 21149              		.loc 1 1245 8 view .LVU7187
 21150 0d8a 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 21150      00
 21151              	# sieve_extend.c:1244:     tuning_result_type best_result = tuning_result[0];
1244:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21152              		.loc 1 1244 24 view .LVU7188
 21153 0d8f 4D8B6F20 		mov	r13, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 21154              	.LVL1299:
1244:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21155              		.loc 1 1244 24 view .LVU7189
 21156 0d93 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 21157 0d97 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1245:sieve_extend.c ****         tuning_result_index = 0;
 21158              		.loc 1 1245 5 is_stmt 1 view .LVU7190
 21159              	# sieve_extend.c:1245:     if (option_verboselevel >= 1) {
1245:sieve_extend.c ****         tuning_result_index = 0;
 21160              		.loc 1 1245 8 is_stmt 0 view .LVU7191
 21161 0d9b 7E6E     		jle	.L1769	#,
1246:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 21162              		.loc 1 1246 9 is_stmt 1 view .LVU7192
 21163              	.LVL1300:
1247:sieve_extend.c ****     }
 21164              		.loc 1 1247 9 view .LVU7193
 21165              	.LBB1147:
 21166              	.LBI1147:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21167              		.loc 3 105 1 view .LVU7194
 21168              	.LBB1148:
 21169              		.loc 3 107 3 view .LVU7195
 21170              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccH5HMHD.s 			page 562


 21171              		.loc 3 107 10 is_stmt 0 view .LVU7196
 21172 0d9d 488D3500 		lea	rsi, .LC57[rip]	#,
 21172      000000
 21173 0da4 BF010000 		mov	edi, 1	#,
 21173      00
 21174 0da9 31C0     		xor	eax, eax	#
 21175 0dab E8000000 		call	__printf_chk@PLT	#
 21175      00
 21176              	.LVL1301:
 21177              		.loc 3 107 10 view .LVU7197
 21178              	.LBE1148:
 21179              	.LBE1147:
1247:sieve_extend.c ****     }
 21180              		.loc 1 1247 34 is_stmt 1 view .LVU7198
 21181              	.LBB1149:
 21182              	.LBI1149:
1126:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21183              		.loc 1 1126 20 view .LVU7199
 21184              	.LBB1150:
1127:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21185              		.loc 1 1127 5 view .LVU7200
 21186              	.LBB1151:
 21187              	.LBI1151:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21188              		.loc 3 105 1 view .LVU7201
 21189              	.LBB1152:
 21190              		.loc 3 107 3 view .LVU7202
 21191              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21192              		.loc 3 107 10 is_stmt 0 view .LVU7203
 21193 0db0 4D8B5738 		mov	r10, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21194 0db4 488D3500 		lea	rsi, .LC51[rip]	#,
 21194      000000
 21195 0dbb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21195      4750
 21196 0dc1 B8030000 		mov	eax, 3	#,
 21196      00
 21197 0dc6 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21198 0dca 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21199 0dce 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21199      18
 21200 0dd3 4D8B5F48 		mov	r11, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21201 0dd7 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21201      10
 21202 0ddc 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struct
 21203 0de0 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21203      08
 21204 0de5 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struc
 21205 0de9 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21206 0ded BF010000 		mov	edi, 1	#,
 21206      00
 21207 0df2 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21208 0df6 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21209 0dfa C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21209      5758
 21210 0e00 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21210      4F40
 21211 0e06 E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccH5HMHD.s 			page 563


 21211      00
 21212              	.LVL1302:
 21213              	.L1769:
 21214              		.loc 3 107 10 view .LVU7204
 21215              	.LBE1152:
 21216              	.LBE1151:
 21217              	.LBE1150:
 21218              	.LBE1149:
1250:sieve_extend.c ****     return best_result;
 21219              		.loc 1 1250 5 is_stmt 1 view .LVU7205
 21220 0e0b 4C89FF   		mov	rdi, r15	#, tuning_result
 21221 0e0e E8000000 		call	free@PLT	#
 21221      00
 21222              	.LVL1303:
1251:sieve_extend.c **** }
 21223              		.loc 1 1251 5 view .LVU7206
1251:sieve_extend.c **** }
 21224              		.loc 1 1251 5 is_stmt 0 view .LVU7207
 21225              	.LBE1159:
 21226              	.LBE1162:
1330:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21227              		.loc 1 1330 9 is_stmt 1 view .LVU7208
 21228              	# sieve_extend.c:1330:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1330:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21229              		.loc 1 1330 33 is_stmt 0 view .LVU7209
 21230 0e13 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 21230      000000
1331:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21231              		.loc 1 1331 9 is_stmt 1 view .LVU7210
 21232              	.LBE1170:
 21233              	# sieve_extend.c:1337:     if (best_blocksize_bits > 0) {
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21234              		.loc 1 1337 8 is_stmt 0 view .LVU7211
 21235 0e1a 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 21236              	.LBB1171:
 21237              	# sieve_extend.c:1331:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1331:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21238              		.loc 1 1331 34 view .LVU7212
 21239 0e1d 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 21239      000000
1332:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21240              		.loc 1 1332 9 is_stmt 1 view .LVU7213
 21241              	# sieve_extend.c:1332:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1332:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21242              		.loc 1 1332 34 is_stmt 0 view .LVU7214
 21243 0e24 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 21243      000000
1333:sieve_extend.c ****     }
 21244              		.loc 1 1333 9 is_stmt 1 view .LVU7215
 21245              	.LVL1304:
1333:sieve_extend.c ****     }
 21246              		.loc 1 1333 9 is_stmt 0 view .LVU7216
 21247              	.LBE1171:
1336:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 21248              		.loc 1 1336 5 is_stmt 1 view .LVU7217
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21249              		.loc 1 1337 5 view .LVU7218
GAS LISTING /tmp/ccH5HMHD.s 			page 564


 21250              	# sieve_extend.c:1337:     if (best_blocksize_bits > 0) {
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21251              		.loc 1 1337 8 is_stmt 0 view .LVU7219
 21252 0e2b 0F8411F7 		je	.L1770	#,
 21252      FFFF
 21253 0e31 E912FFFF 		jmp	.L1744	#
 21253      FF
 21254              	.LVL1305:
 21255              	.L1779:
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21256              		.loc 1 1337 8 view .LVU7220
 21257 0e36 488D3D00 		lea	rdi, CSWTCH.128[rip]	# tmp337,
 21257      000000
 21258 0e3d 4C8D0D00 		lea	r9, CSWTCH.129[rip]	# tmp339,
 21258      000000
 21259 0e44 488D2D00 		lea	rbp, CSWTCH.130[rip]	# tmp341,
 21259      000000
 21260              	.LVL1306:
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21261              		.loc 1 1337 8 view .LVU7221
 21262 0e4b 488D1D00 		lea	rbx, CSWTCH.131[rip]	# tmp343,
 21262      000000
 21263              	.LVL1307:
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21264              		.loc 1 1337 8 view .LVU7222
 21265 0e52 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.128
 21266 0e56 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.129
 21267 0e5a 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.130
 21267      00
 21268              	.LVL1308:
1337:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21269              		.loc 1 1337 8 view .LVU7223
 21270 0e5f C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.131
 21270      3CC3
 21271 0e65 48898C24 		mov	QWORD PTR 136[rsp], rcx	# %sfp, smallstep_faster_steps
 21271      88000000 
 21272 0e6d 4C89A424 		mov	QWORD PTR 128[rsp], r12	# %sfp, vectorstep_faster_steps
 21272      80000000 
 21273 0e75 4C897C24 		mov	QWORD PTR 96[rsp], r15	# %sfp, freebits_steps
 21273      60
 21274              	.LBB1172:
 21275              	# sieve_extend.c:1263:     for (int arg=1; arg < argc; arg++) {
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21276              		.loc 1 1263 14 view .LVU7224
 21277 0e7a 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 21277      68080000 
 21277      00
 21278 0e83 C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
 21278      2470
 21279              	.L1745:
 21280              	.LVL1309:
1263:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21281              		.loc 1 1263 14 view .LVU7225
 21282              	.LBE1172:
 21283              	.LBB1173:
 21284              	.LBB1163:
 21285              	.LBB1160:
GAS LISTING /tmp/ccH5HMHD.s 			page 565


1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21286              		.loc 1 1177 5 is_stmt 1 view .LVU7226
 21287              	# sieve_extend.c:1177:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21288              		.loc 1 1177 8 is_stmt 0 view .LVU7227
 21289 0e89 448B6C24 		mov	r13d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 21289      58
 21290              	.LVL1310:
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21291              		.loc 1 1177 8 view .LVU7228
 21292 0e8e 4585ED   		test	r13d, r13d	# option_verboselevel.41_63
 21293 0e91 0F8E43F8 		jle	.L1747	#,
 21293      FFFF
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21294              		.loc 1 1177 35 is_stmt 1 view .LVU7229
 21295              	.LVL1311:
 21296              	.LBB1153:
 21297              	.LBI1153:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21298              		.loc 3 105 1 view .LVU7230
 21299              	.LBB1154:
 21300              		.loc 3 107 3 view .LVU7231
 21301              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21302              		.loc 3 107 10 is_stmt 0 view .LVU7232
 21303 0e97 31C0     		xor	eax, eax	#
 21304 0e99 488D3500 		lea	rsi, .LC49[rip]	#,
 21304      000000
 21305 0ea0 BF010000 		mov	edi, 1	#,
 21305      00
 21306              	.LBE1154:
 21307              	.LBE1153:
 21308              	# sieve_extend.c:1177:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21309              		.loc 1 1177 59 view .LVU7233
 21310 0ea5 4489EB   		mov	ebx, r13d	# option_verboselevel.41_63, option_verboselevel.41_63
 21311              	.LBB1156:
 21312              	.LBB1155:
 21313              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21314              		.loc 3 107 10 view .LVU7234
 21315 0ea8 E8000000 		call	__printf_chk@PLT	#
 21315      00
 21316              	.LVL1312:
 21317              		.loc 3 107 10 view .LVU7235
 21318              	.LBE1155:
 21319              	.LBE1156:
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21320              		.loc 1 1177 56 is_stmt 1 view .LVU7236
 21321              	# sieve_extend.c:1177:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21322              		.loc 1 1177 59 is_stmt 0 view .LVU7237
 21323 0ead 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 21324 0eb0 0F8424F8 		je	.L1747	#,
 21324      FFFF
1177:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21325              		.loc 1 1177 86 is_stmt 1 view .LVU7238
 21326              	.LVL1313:
 21327              	.LBB1157:
GAS LISTING /tmp/ccH5HMHD.s 			page 566


 21328              	.LBI1157:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21329              		.loc 3 105 1 view .LVU7239
 21330              	.LBB1158:
 21331              		.loc 3 107 3 view .LVU7240
 21332              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21333              		.loc 3 107 10 is_stmt 0 view .LVU7241
 21334 0eb6 BF0A0000 		mov	edi, 10	#,
 21334      00
 21335 0ebb E8000000 		call	putchar@PLT	#
 21335      00
 21336              	.LVL1314:
 21337 0ec0 E915F8FF 		jmp	.L1747	#
 21337      FF
 21338              	.LVL1315:
 21339              	.L1864:
 21340              		.loc 3 107 10 view .LVU7242
 21341              	.LBE1158:
 21342              	.LBE1157:
 21343              	.LBE1160:
 21344              	.LBE1163:
1329:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21345              		.loc 1 1329 9 is_stmt 1 view .LVU7243
 21346              	# sieve_extend.c:1329:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1329:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21347              		.loc 1 1329 44 is_stmt 0 view .LVU7244
 21348 0ec5 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 21348      000000
 21349 0ecc 4183E801 		sub	r8d, 1	#,
 21350 0ed0 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 21350      A0000000 
 21351 0ed8 4183F802 		cmp	r8d, 2	# _212,
 21352 0edc 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 21353 0ee0 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 21353      78
 21354              	.LVL1316:
 21355              	.LBB1164:
1134:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 21356              		.loc 1 1134 27 is_stmt 1 view .LVU7245
 21357              	.LBB1161:
1135:sieve_extend.c **** 
 21358              		.loc 1 1135 5 view .LVU7246
1137:sieve_extend.c ****     best_blocksize_bits = 0;
 21359              		.loc 1 1137 5 view .LVU7247
1138:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 21360              		.loc 1 1138 5 view .LVU7248
1139:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 21361              		.loc 1 1139 5 view .LVU7249
1140:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 21362              		.loc 1 1140 5 view .LVU7250
1141:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 21363              		.loc 1 1141 5 view .LVU7251
1142:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 21364              		.loc 1 1142 5 view .LVU7252
1143:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 21365              		.loc 1 1143 5 view .LVU7253
1144:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
GAS LISTING /tmp/ccH5HMHD.s 			page 567


 21366              		.loc 1 1144 5 view .LVU7254
1145:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 21367              		.loc 1 1145 5 view .LVU7255
1146:sieve_extend.c ****     double sample_duration = default_sample_duration;
 21368              		.loc 1 1146 5 view .LVU7256
1147:sieve_extend.c **** 
 21369              		.loc 1 1147 5 view .LVU7257
1150:sieve_extend.c ****         case 1:
 21370              		.loc 1 1150 5 view .LVU7258
 21371 0ee5 0F864BFF 		jbe	.L1779	#,
 21371      FFFF
 21372 0eeb C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 21372      00000000 
 21373 0ef3 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 21373      68050000 
 21373      00
 21374 0efc 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 21374      60800000 
 21374      00
 21375 0f05 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 21375      80000000 
 21375      20000000 
 21376 0f11 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 21376      88000000 
 21376      04000000 
 21377 0f1d C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
 21377      2470
 21378 0f23 E961FFFF 		jmp	.L1745	#
 21378      FF
 21379              	.LVL1317:
 21380              	.L1850:
1150:sieve_extend.c ****         case 1:
 21381              		.loc 1 1150 5 is_stmt 0 view .LVU7259
 21382              	.LBE1161:
 21383              	.LBE1164:
 21384              	.LBE1173:
 21385              	.LBB1174:
1266:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21386              		.loc 1 1266 34 is_stmt 1 discriminator 1 view .LVU7260
 21387              	.LBB1012:
 21388              	.LBI1012:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21389              		.loc 3 98 1 discriminator 1 view .LVU7261
 21390              	.LBB1013:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21391              		.loc 3 100 3 discriminator 1 view .LVU7262
 21392              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21393              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7263
 21394 0f28 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21394      000000
 21395 0f2f BA1B0000 		mov	edx, 27	#,
 21395      00
 21396 0f34 BE010000 		mov	esi, 1	#,
 21396      00
 21397 0f39 488D3D00 		lea	rdi, .LC30[rip]	#,
 21397      000000
GAS LISTING /tmp/ccH5HMHD.s 			page 568


 21398 0f40 E8000000 		call	fwrite@PLT	#
 21398      00
 21399              	.LVL1318:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21400              		.loc 3 100 10 discriminator 1 view .LVU7264
 21401              	.LBE1013:
 21402              	.LBE1012:
1266:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21403              		.loc 1 1266 83 is_stmt 1 discriminator 1 view .LVU7265
 21404 0f45 E967F6FF 		jmp	.L1848	#
 21404      FF
 21405              	.L1728:
1276:sieve_extend.c ****             }
 21406              		.loc 1 1276 17 view .LVU7266
 21407              	.LVL1319:
 21408              	.LBB1014:
 21409              	.LBI1009:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21410              		.loc 3 98 1 view .LVU7267
 21411              	.LBB1011:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21412              		.loc 3 100 3 view .LVU7268
 21413              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21414              		.loc 3 100 10 is_stmt 0 view .LVU7269
 21415 0f4a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 21416 0f4d 488D1500 		lea	rdx, .LC37[rip]	#,
 21416      000000
 21417 0f54 E945F6FF 		jmp	.L1847	#
 21417      FF
 21418              	.LVL1320:
 21419              	.L1732:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21420              		.loc 3 100 10 view .LVU7270
 21421              	.LBE1011:
 21422              	.LBE1014:
1283:sieve_extend.c ****             }
 21423              		.loc 1 1283 17 is_stmt 1 view .LVU7271
 21424              	.LBB1015:
 21425              	.LBI1015:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21426              		.loc 3 98 1 view .LVU7272
 21427              	.LBB1016:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21428              		.loc 3 100 3 view .LVU7273
 21429              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21430              		.loc 3 100 10 is_stmt 0 view .LVU7274
 21431 0f59 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 21432 0f5c 488D1500 		lea	rdx, .LC42[rip]	#,
 21432      000000
 21433 0f63 E936F6FF 		jmp	.L1847	#
 21433      FF
 21434              	.LVL1321:
 21435              	.L1853:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21436              		.loc 3 100 10 view .LVU7275
GAS LISTING /tmp/ccH5HMHD.s 			page 569


 21437              	.LBE1016:
 21438              	.LBE1015:
1274:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21439              		.loc 1 1274 34 is_stmt 1 discriminator 1 view .LVU7276
 21440              	.LBB1017:
 21441              	.LBI1017:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21442              		.loc 3 98 1 discriminator 1 view .LVU7277
 21443              	.LBB1018:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21444              		.loc 3 100 3 discriminator 1 view .LVU7278
 21445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21446              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7279
 21447 0f68 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21447      000000
 21448 0f6f 488D3D00 		lea	rdi, .LC36[rip]	#,
 21448      000000
 21449 0f76 BA180000 		mov	edx, 24	#,
 21449      00
 21450 0f7b BE010000 		mov	esi, 1	#,
 21450      00
 21451 0f80 E8000000 		call	fwrite@PLT	#
 21451      00
 21452              	.LVL1322:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21453              		.loc 3 100 10 discriminator 1 view .LVU7280
 21454              	.LBE1018:
 21455              	.LBE1017:
1274:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21456              		.loc 1 1274 80 is_stmt 1 discriminator 1 view .LVU7281
 21457 0f85 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21458 0f89 E8000000 		call	usage	#
 21458      00
 21459              	.LVL1323:
 21460              	.L1861:
1274:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21461              		.loc 1 1274 80 is_stmt 0 discriminator 1 view .LVU7282
 21462              	.LBE1174:
 21463              	# sieve_extend.c:1362: }
 21464              		.loc 1 1362 1 view .LVU7283
 21465 0f8e E8000000 		call	__stack_chk_fail@PLT	#
 21465      00
 21466              	.LVL1324:
 21467              	.L1856:
 21468              	.LBB1175:
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21469              		.loc 1 1281 34 is_stmt 1 discriminator 1 view .LVU7284
 21470              	.LBB1019:
 21471              	.LBI1019:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21472              		.loc 3 98 1 discriminator 1 view .LVU7285
 21473              	.LBB1020:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21474              		.loc 3 100 3 discriminator 1 view .LVU7286
 21475              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccH5HMHD.s 			page 570


 21476              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7287
 21477 0f93 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21477      000000
 21478 0f9a 488D3D00 		lea	rdi, .LC40[rip]	#,
 21478      000000
 21479 0fa1 BA1A0000 		mov	edx, 26	#,
 21479      00
 21480 0fa6 BE010000 		mov	esi, 1	#,
 21480      00
 21481 0fab E8000000 		call	fwrite@PLT	#
 21481      00
 21482              	.LVL1325:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21483              		.loc 3 100 10 discriminator 1 view .LVU7288
 21484              	.LBE1020:
 21485              	.LBE1019:
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21486              		.loc 1 1281 82 is_stmt 1 discriminator 1 view .LVU7289
 21487 0fb0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21488 0fb4 E8000000 		call	usage	#
 21488      00
 21489              	.LVL1326:
 21490              	.LBE1175:
 21491              		.cfi_endproc
 21492              	.LFE85:
 21494              		.section	.rodata
 21495              		.align 16
 21498              	CSWTCH.131:
 21499 0000 9A999999 		.long	2576980378
 21500 0004 9999B93F 		.long	1069128089
 21501 0008 9A999999 		.long	2576980378
 21502 000c 9999C93F 		.long	1070176665
 21503 0010 9A999999 		.long	2576980378
 21504 0014 9999C93F 		.long	1070176665
 21505 0018 00000000 		.align 16
 21505      00000000 
 21508              	CSWTCH.130:
 21509 0020 00080000 		.quad	2048
 21509      00000000 
 21510 0028 00040000 		.quad	1024
 21510      00000000 
 21511 0030 40000000 		.quad	64
 21511      00000000 
 21512 0038 00000000 		.align 16
 21512      00000000 
 21515              	CSWTCH.129:
 21516 0040 20000000 		.quad	32
 21516      00000000 
 21517 0048 10000000 		.quad	16
 21517      00000000 
 21518 0050 04000000 		.quad	4
 21518      00000000 
 21519 0058 00000000 		.align 16
 21519      00000000 
 21522              	CSWTCH.128:
 21523 0060 10000000 		.quad	16
 21523      00000000 
GAS LISTING /tmp/ccH5HMHD.s 			page 571


 21524 0068 08000000 		.quad	8
 21524      00000000 
 21525 0070 04000000 		.quad	4
 21525      00000000 
 21526              		.globl	debug_hitpoint
 21527              		.bss
 21528              		.align 32
 21531              	debug_hitpoint:
 21532 0000 00000000 		.zero	40
 21532      00000000 
 21532      00000000 
 21532      00000000 
 21532      00000000 
 21533              		.globl	global_VECTORSTEP_FASTER
 21534              		.data
 21535              		.align 8
 21538              	global_VECTORSTEP_FASTER:
 21539 0000 60000000 		.quad	96
 21539      00000000 
 21540              		.globl	global_MEDIUMSTEP_FASTER
 21541              		.align 8
 21544              	global_MEDIUMSTEP_FASTER:
 21545 0008 10000000 		.quad	16
 21545      00000000 
 21546              		.globl	global_SMALLSTEP_FASTER
 21547              		.bss
 21548              		.align 8
 21551              	global_SMALLSTEP_FASTER:
 21552 0028 00000000 		.zero	8
 21552      00000000 
 21553              		.section	.rodata.cst32,"aM",@progbits,32
 21554              		.align 32
 21555              	.LC0:
 21556 0000 00000000 		.quad	0
 21556      00000000 
 21557 0008 01000000 		.quad	1
 21557      00000000 
 21558 0010 02000000 		.quad	2
 21558      00000000 
 21559 0018 03000000 		.quad	3
 21559      00000000 
 21560              		.align 32
 21561              	.LC1:
 21562 0020 08000000 		.quad	8
 21562      00000000 
 21563 0028 08000000 		.quad	8
 21563      00000000 
 21564 0030 08000000 		.quad	8
 21564      00000000 
 21565 0038 08000000 		.quad	8
 21565      00000000 
 21566              		.align 32
 21567              	.LC2:
 21568 0040 04000000 		.quad	4
 21568      00000000 
 21569 0048 04000000 		.quad	4
 21569      00000000 
GAS LISTING /tmp/ccH5HMHD.s 			page 572


 21570 0050 04000000 		.quad	4
 21570      00000000 
 21571 0058 04000000 		.quad	4
 21571      00000000 
 21572              		.align 32
 21573              	.LC3:
 21574 0060 3F000000 		.long	63
 21575 0064 3F000000 		.long	63
 21576 0068 3F000000 		.long	63
 21577 006c 3F000000 		.long	63
 21578 0070 3F000000 		.long	63
 21579 0074 3F000000 		.long	63
 21580 0078 3F000000 		.long	63
 21581 007c 3F000000 		.long	63
 21582              		.section	.rodata.cst8,"aM",@progbits,8
 21583              		.align 8
 21584              	.LC7:
 21585 0000 00000000 		.long	0
 21586 0004 0000F87F 		.long	2146959360
 21587              		.align 8
 21588              	.LC8:
 21589 0008 95D626E8 		.long	3894859413
 21590 000c 0B2E113E 		.long	1041313291
 21591              		.align 8
 21592              	.LC26:
 21593 0010 9A999999 		.long	2576980378
 21594 0014 9999B93F 		.long	1069128089
 21595              		.align 8
 21596              	.LC59:
 21597 0018 00000000 		.long	0
 21598 001c 00001440 		.long	1075052544
 21599              		.text
 21600              	.Letext0:
 21601              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 21602              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 21603              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 21604              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 21605              		.file 8 "/usr/include/stdio.h"
 21606              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 21607              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 21608              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 21609              		.file 12 "/usr/include/stdint.h"
 21610              		.file 13 "/usr/include/time.h"
 21611              		.file 14 "/usr/include/math.h"
 21612              		.file 15 "/usr/include/stdlib.h"
 21613              		.file 16 "<built-in>"
 49481              		.section	.note.gnu.property,"a"
 49482              		.align 8
 49483 0000 04000000 		.long	 1f - 0f
 49484 0004 10000000 		.long	 4f - 1f
 49485 0008 05000000 		.long	 5
 49486              	0:
 49487 000c 474E5500 		.string	 "GNU"
 49488              	1:
 49489              		.align 8
 49490 0010 020000C0 		.long	 0xc0000002
 49491 0014 04000000 		.long	 3f - 2f
GAS LISTING /tmp/ccH5HMHD.s 			page 573


 49492              	2:
 49493 0018 03000000 		.long	 0x3
 49494              	3:
 49495 001c 00000000 		.align 8
 49496              	4:
GAS LISTING /tmp/ccH5HMHD.s 			page 574


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccH5HMHD.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccH5HMHD.s:21555  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccH5HMHD.s:21561  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccH5HMHD.s:21567  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccH5HMHD.s:21573  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccH5HMHD.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccH5HMHD.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/ccH5HMHD.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/ccH5HMHD.s:5107   .text:0000000000001f50 extendSieve_aligned
     /tmp/ccH5HMHD.s:5996   .text:00000000000024d0 extendSieve_shiftleft
     /tmp/ccH5HMHD.s:8964   .text:00000000000037d0 show_primes.isra.0
     /tmp/ccH5HMHD.s:8959   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccH5HMHD.s:8957   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccH5HMHD.s:9371   .text:0000000000003970 sieve
     /tmp/ccH5HMHD.s:21551  .bss:0000000000000028 global_SMALLSTEP_FASTER
     /tmp/ccH5HMHD.s:21544  .data:0000000000000008 global_MEDIUMSTEP_FASTER
     /tmp/ccH5HMHD.s:21538  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccH5HMHD.s:15974  .text:0000000000005630 tune_benchmark
     /tmp/ccH5HMHD.s:21584  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccH5HMHD.s:21588  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccH5HMHD.s:16191  .text:0000000000005770 shiftvec
     /tmp/ccH5HMHD.s:17353  .text:0000000000005b30 validatePrimeCount
     /tmp/ccH5HMHD.s:17334  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccH5HMHD.s:17340  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccH5HMHD.s:17344  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccH5HMHD.s:17337  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccH5HMHD.s:17347  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccH5HMHD.s:18607  .text:00000000000062c0 usage
     /tmp/ccH5HMHD.s:18567  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccH5HMHD.s:18570  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccH5HMHD.s:18574  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccH5HMHD.s:18577  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccH5HMHD.s:18580  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccH5HMHD.s:18583  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccH5HMHD.s:18586  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccH5HMHD.s:18589  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccH5HMHD.s:18592  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccH5HMHD.s:18595  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccH5HMHD.s:18598  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccH5HMHD.s:18601  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccH5HMHD.s:18938  .text.startup:0000000000000000 main
     /tmp/ccH5HMHD.s:18846  .rodata.str1.1:000000000000004a .LC28
     /tmp/ccH5HMHD.s:18848  .rodata.str1.1:0000000000000051 .LC29
     /tmp/ccH5HMHD.s:18852  .rodata.str1.1:0000000000000077 .LC31
     /tmp/ccH5HMHD.s:18859  .rodata.str1.1:000000000000007a .LC33
     /tmp/ccH5HMHD.s:18861  .rodata.str1.1:0000000000000093 .LC34
     /tmp/ccH5HMHD.s:18863  .rodata.str1.1:000000000000009b .LC35
     /tmp/ccH5HMHD.s:18872  .rodata.str1.1:00000000000000bb .LC38
     /tmp/ccH5HMHD.s:18891  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccH5HMHD.s:18889  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccH5HMHD.s:18874  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/ccH5HMHD.s:18878  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/ccH5HMHD.s:18885  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/ccH5HMHD.s:18887  .rodata.str1.1:0000000000000110 .LC44
     /tmp/ccH5HMHD.s:18893  .rodata.str1.1:000000000000014a .LC47
GAS LISTING /tmp/ccH5HMHD.s 			page 575


     /tmp/ccH5HMHD.s:21596  .rodata.cst8:0000000000000018 .LC59
     /tmp/ccH5HMHD.s:18926  .rodata.str1.8:0000000000000538 .LC60
     /tmp/ccH5HMHD.s:18844  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccH5HMHD.s:18856  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/ccH5HMHD.s:18932  .rodata.str1.1:000000000000019e .LC62
     /tmp/ccH5HMHD.s:18929  .rodata.str1.8:0000000000000580 .LC61
     /tmp/ccH5HMHD.s:21592  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccH5HMHD.s:18906  .rodata.str1.1:0000000000000173 .LC52
     /tmp/ccH5HMHD.s:18903  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccH5HMHD.s:18910  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/ccH5HMHD.s:18913  .rodata.str1.1:0000000000000178 .LC54
     /tmp/ccH5HMHD.s:18899  .rodata.str1.1:000000000000016e .LC50
     /tmp/ccH5HMHD.s:18915  .rodata.str1.1:0000000000000185 .LC55
     /tmp/ccH5HMHD.s:18917  .rodata.str1.1:000000000000018c .LC56
     /tmp/ccH5HMHD.s:18895  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccH5HMHD.s:18923  .rodata.str1.8:0000000000000500 .LC58
     /tmp/ccH5HMHD.s:18919  .rodata.str1.1:0000000000000190 .LC57
     /tmp/ccH5HMHD.s:21522  .rodata:0000000000000060 CSWTCH.128
     /tmp/ccH5HMHD.s:21515  .rodata:0000000000000040 CSWTCH.129
     /tmp/ccH5HMHD.s:21508  .rodata:0000000000000020 CSWTCH.130
     /tmp/ccH5HMHD.s:21498  .rodata:0000000000000000 CSWTCH.131
     /tmp/ccH5HMHD.s:18897  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccH5HMHD.s:18850  .rodata.str1.1:000000000000005b .LC30
     /tmp/ccH5HMHD.s:18869  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/ccH5HMHD.s:18882  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/ccH5HMHD.s:18865  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/ccH5HMHD.s:18876  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/ccH5HMHD.s:21531  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
