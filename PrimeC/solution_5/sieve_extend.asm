GAS LISTING /tmp/ccmX4xFB.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.text
   3              	.Ltext0:
   4              		.p2align 4
   6              	extendSieve_smallSize:
   7              	.LVL0:
   8              	.LFB63:
   9              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 1
  18:sieve_extend.c **** #define default_tune_level 0
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** //typedef uint32_t vector __attribute__ ((vector_size(32)));
  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t TYPE
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(TYPE)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)(sizeof(TYPE)*8))
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)(sizeof(TYPE)*8))
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  38:sieve_extend.c **** 
  39:sieve_extend.c **** // globals for tuning
  40:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 16;
  41:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  42:sieve_extend.c **** 
  43:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  44:sieve_extend.c **** #define SAFE_ZERO  (bitshift_t)0U
  45:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  46:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  47:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  48:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  49:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
GAS LISTING /tmp/ccmX4xFB.s 			page 2


  50:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  51:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  52:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)))
  53:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  54:sieve_extend.c **** #define  markmask_calc(index) (SAFE_SHIFTBIT << bitindex_calc(index))
  55:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  56:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  57:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  58:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  59:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  60:sieve_extend.c **** #define real(bit) (bit*2+1)
  61:sieve_extend.c **** 
  62:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  63:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  64:sieve_extend.c **** 
  65:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  66:sieve_extend.c **** 
  67:sieve_extend.c **** struct sieve_state {
  68:sieve_extend.c ****     bitword_t* bitarray;
  69:sieve_extend.c ****     counter_t  bits;
  70:sieve_extend.c ****     counter_t  size;
  71:sieve_extend.c **** };
  72:sieve_extend.c **** 
  73:sieve_extend.c **** #include "debugtools.h"
  74:sieve_extend.c **** 
  75:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  76:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  77:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t maxints) {
  78:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  79:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
  80:sieve_extend.c **** 
  81:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  82:sieve_extend.c ****     sieve->bits     = maxints >> 1;
  83:sieve_extend.c ****     sieve->size     = maxints;
  84:sieve_extend.c **** 
  85:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
  86:sieve_extend.c ****     // it gave weird malloc problems at this point
  87:sieve_extend.c ****     return sieve;
  88:sieve_extend.c **** }
  89:sieve_extend.c **** 
  90:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
  91:sieve_extend.c ****     free(sieve->bitarray);
  92:sieve_extend.c ****     free(sieve);
  93:sieve_extend.c **** }
  94:sieve_extend.c **** 
  95:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
  96:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, counter_t index) {
  97:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
  98:sieve_extend.c ****     return index;
  99:sieve_extend.c ****     
 100:sieve_extend.c **** //    counter_t index_word = wordindex(index);
 101:sieve_extend.c **** //    bitshift_t index_bit  = bitindex_calc(index);
 102:sieve_extend.c **** //    bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bit));  /
 103:sieve_extend.c **** //    index += distance;
 104:sieve_extend.c **** //    distance += index_bit;
 105:sieve_extend.c **** //
 106:sieve_extend.c **** //    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
GAS LISTING /tmp/ccmX4xFB.s 			page 3


 107:sieve_extend.c **** //        index_word++;
 108:sieve_extend.c **** //        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 109:sieve_extend.c **** //        index += distance;
 110:sieve_extend.c **** //    }
 111:sieve_extend.c **** //
 112:sieve_extend.c **** //    return index;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 116:sieve_extend.c **** static inline counter_t searchBitFalse_safe(bitword_t* bitarray, counter_t index) {
 117:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 119:sieve_extend.c **** }
 120:sieve_extend.c **** 
 121:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 122:sieve_extend.c **** // #if __APPLE__
 123:sieve_extend.c ****     // register const counter_t step_2 = step * 2;
 124:sieve_extend.c ****     // register const counter_t step_3 = step * 3;
 125:sieve_extend.c ****     // register const counter_t step_4 = step * 4;
 126:sieve_extend.c ****     // register const counter_t range_stop_word = wordindex(range_stop);
 127:sieve_extend.c ****     // register const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - st
 128:sieve_extend.c **** 
 129:sieve_extend.c ****     // #pragma ivdep
 130:sieve_extend.c ****     // while (index_word < loop_stop_word) {
 131:sieve_extend.c ****     //     bitarray[index_word         ] |= mask;
 132:sieve_extend.c ****     //     bitarray[index_word + step  ] |= mask;
 133:sieve_extend.c ****     //     bitarray[index_word + step_2] |= mask;
 134:sieve_extend.c ****     //     bitarray[index_word + step_3] |= mask;
 135:sieve_extend.c ****     //     index_word += step_4;
 136:sieve_extend.c ****     // }
 137:sieve_extend.c ****  
 138:sieve_extend.c ****     // #pragma ivdep
 139:sieve_extend.c ****     // while (index_word < range_stop_word) {
 140:sieve_extend.c ****     //     bitarray[index_word] |= mask;
 141:sieve_extend.c ****     //     index_word += step;
 142:sieve_extend.c ****     // }
 143:sieve_extend.c **** 
 144:sieve_extend.c ****     // if (index_word == wordindex(range_stop)) {
 145:sieve_extend.c ****     //     bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 146:sieve_extend.c ****     // }
 147:sieve_extend.c **** // #endif
 148:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 149:sieve_extend.c **** // #if __linux__
 150:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 151:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 152:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 153:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 154:sieve_extend.c **** 
 155:sieve_extend.c ****    #pragma simd
 156:sieve_extend.c ****    while ( index_ptr < fast_loop_ptr) {
 157:sieve_extend.c ****        *index_ptr |= mask;
 158:sieve_extend.c ****        index_ptr+=step;
 159:sieve_extend.c ****        *index_ptr |= mask;
 160:sieve_extend.c ****        index_ptr+=step;
 161:sieve_extend.c ****        *index_ptr |= mask;
 162:sieve_extend.c ****        index_ptr+=step;
 163:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 4


 164:sieve_extend.c ****        index_ptr+=step;
 165:sieve_extend.c ****        *index_ptr |= mask;
 166:sieve_extend.c ****        index_ptr+=step;
 167:sieve_extend.c ****    }
 168:sieve_extend.c **** 
 169:sieve_extend.c ****    while ( index_ptr < range_stop_ptr) {
 170:sieve_extend.c ****        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 172:sieve_extend.c ****    }
 173:sieve_extend.c **** 
 174:sieve_extend.c ****    if (index_ptr == range_stop_ptr) {
 175:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 176:sieve_extend.c ****    }
 177:sieve_extend.c **** 
 178:sieve_extend.c **** // #endif
 179:sieve_extend.c **** }
 180:sieve_extend.c **** 
 181:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 182:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* bitarray, const counter_t range_start, const bi
 183:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 184:sieve_extend.c **** 
 185:sieve_extend.c ****     // build the pattern in a word
 186:sieve_extend.c **** 	bitword_t pattern = SAFE_SHIFTBIT;
 187:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 188:sieve_extend.c ****         pattern |= (pattern << patternsize);
 189:sieve_extend.c ****     }
 190:sieve_extend.c **** 
 191:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 192:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 193:sieve_extend.c ****  
 194:sieve_extend.c ****     if (copy_word == range_stop_word) { // shortcut
 195:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask2(range_stop)) ;
 196:sieve_extend.c ****        return;
 197:sieve_extend.c ****     }
 198:sieve_extend.c **** 
 199:sieve_extend.c ****     // from now on, we are before range_stop_word
 200:sieve_extend.c ****     // first word is special, because it should not set bits before the range_start_bit
 201:sieve_extend.c ****     bitarray[copy_word] |= (pattern << (bitshift_t)bitindex(range_start));
 202:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 203:sieve_extend.c **** 
 204:sieve_extend.c ****     bitshift_t pattern_shift = (bitshift_t) WORD_SIZE % step;
 205:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 206:sieve_extend.c ****     copy_word++;
 207:sieve_extend.c **** 
 208:sieve_extend.c ****     while (copy_word < range_stop_word) {
 209:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 210:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 211:sieve_extend.c ****         copy_word++;
 212:sieve_extend.c ****     } 
 213:sieve_extend.c **** 
 214:sieve_extend.c ****     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 215:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 216:sieve_extend.c **** }
 217:sieve_extend.c **** 
 218:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 219:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 220:sieve_extend.c **** // This is especially true for small steps over long ranges
GAS LISTING /tmp/ccmX4xFB.s 			page 5


 221:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 222:sieve_extend.c **** static void inline setBitsTrue_mediumStep(bitword_t* bitarray, const counter_t range_start, const c
 223:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 224:sieve_extend.c **** 
 225:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 226:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 227:sieve_extend.c **** 
 228:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 229:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 230:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 231:sieve_extend.c ****             do {
 232:sieve_extend.c ****                 mask |= markmask(index);
 233:sieve_extend.c ****                 index += step;
 234:sieve_extend.c ****             } while (index_word == wordindex(index));
 235:sieve_extend.c ****             bitarray[index_word] |= mask;
 236:sieve_extend.c ****         }
 237:sieve_extend.c ****     }
 238:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 239:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 240:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 241:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 242:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 243:sieve_extend.c ****             do {
 244:sieve_extend.c ****                 mask |= markmask(index);
 245:sieve_extend.c ****                 index += step;
 246:sieve_extend.c ****             } while (index_word == wordindex(index));
 247:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 248:sieve_extend.c ****         }
 249:sieve_extend.c ****     }
 250:sieve_extend.c **** }
 251:sieve_extend.c **** 
 252:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 253:sieve_extend.c **** static inline void setBitsTrue_smallRange(bitword_t* bitarray, const counter_t range_start, const c
 254:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallrange (%ju occurances
 255:sieve_extend.c ****     
 256:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 257:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 258:sieve_extend.c ****     }
 259:sieve_extend.c **** }
 260:sieve_extend.c **** 
 261:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 262:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 263:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 264:sieve_extend.c **** 
 265:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 266:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 267:sieve_extend.c ****     
 268:sieve_extend.c ****     while (1) {
 269:sieve_extend.c ****         if (index1_word == index2_word) {
 270:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 271:sieve_extend.c ****             counter_t index_word = index1_word;
 272:sieve_extend.c ****             do {
 273:sieve_extend.c ****                 mask |= markmask(index1);
 274:sieve_extend.c ****                 index1 += step1;
 275:sieve_extend.c ****                 index1_word = wordindex(index1);
 276:sieve_extend.c ****             } while (index1_word == index_word);
 277:sieve_extend.c ****             do {
GAS LISTING /tmp/ccmX4xFB.s 			page 6


 278:sieve_extend.c ****                 mask |= markmask(index2);
 279:sieve_extend.c ****                 index2 += step2;
 280:sieve_extend.c ****                 index2_word = wordindex(index2);
 281:sieve_extend.c ****             } while (index2_word == index_word);
 282:sieve_extend.c ****             bitarray[index_word] |= mask;
 283:sieve_extend.c ****         }
 284:sieve_extend.c **** 
 285:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 286:sieve_extend.c ****         if (index2 > range_stop) {
 287:sieve_extend.c ****             while (index1 <= range_stop) {
 288:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 289:sieve_extend.c ****                 index1 += step1;
 290:sieve_extend.c ****             }
 291:sieve_extend.c ****             return;
 292:sieve_extend.c ****         }
 293:sieve_extend.c **** 
 294:sieve_extend.c ****         if (index1 > range_stop) {
 295:sieve_extend.c ****             while (index2 <= range_stop) {
 296:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 297:sieve_extend.c ****                 index2 += step2;
 298:sieve_extend.c ****             }
 299:sieve_extend.c ****             return;
 300:sieve_extend.c ****         }
 301:sieve_extend.c **** 
 302:sieve_extend.c ****         while (index1_word < index2_word) {
 303:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 304:sieve_extend.c ****             index1 += step1;
 305:sieve_extend.c ****             index1_word = wordindex(index1);
 306:sieve_extend.c ****         }
 307:sieve_extend.c ****         
 308:sieve_extend.c ****         while (index2_word < index1_word){
 309:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 310:sieve_extend.c ****             index2 += step2;
 311:sieve_extend.c ****             index2_word = wordindex(index2);
 312:sieve_extend.c ****         }
 313:sieve_extend.c **** 
 314:sieve_extend.c ****     }
 315:sieve_extend.c **** }
 316:sieve_extend.c **** 
 317:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 318:sieve_extend.c **** static void setBitsTrue_largeRange(bitword_t* bitarray, const counter_t range_start, const counter_
 319:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 320:sieve_extend.c **** 
 321:sieve_extend.c ****     counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 322:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 323:sieve_extend.c ****         bitword_t mask = markmask(index);
 324:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 325:sieve_extend.c ****     }
 326:sieve_extend.c **** }
 327:sieve_extend.c **** 
 328:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source_start, const counter_
  10              		.loc 1 328 142 view -0
  11              		.cfi_startproc
 329:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  12              		.loc 1 329 5 view .LVU1
 330:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 331:sieve_extend.c **** 
GAS LISTING /tmp/ccmX4xFB.s 			page 7


 332:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
  13              		.loc 1 332 5 view .LVU2
 333:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
  14              		.loc 1 333 5 view .LVU3
 328:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  15              		.loc 1 328 142 is_stmt 0 view .LVU4
  16 0000 4156     		pushq	%r14
  17              		.cfi_def_cfa_offset 16
  18              		.cfi_offset 14, -16
 332:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
  19              		.loc 1 332 15 view .LVU5
  20 0002 4889F0   		movq	%rsi, %rax
 328:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  21              		.loc 1 328 142 view .LVU6
  22 0005 4989D2   		movq	%rdx, %r10
  23 0008 4155     		pushq	%r13
  24              		.cfi_def_cfa_offset 24
  25              		.cfi_offset 13, -24
 332:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
  26              		.loc 1 332 15 view .LVU7
  27 000a 48C1E806 		shrq	$6, %rax
  28              	.LVL1:
  29              		.loc 1 333 125 view .LVU8
  30 000e 89F2     		movl	%esi, %edx
  31              	.LVL2:
 328:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  32              		.loc 1 328 142 view .LVU9
  33 0010 4154     		pushq	%r12
  34              		.cfi_def_cfa_offset 32
  35              		.cfi_offset 12, -32
  36              		.loc 1 333 125 view .LVU10
  37 0012 83E23F   		andl	$63, %edx
  38              		.loc 1 333 124 view .LVU11
  39 0015 41B84000 		movl	$64, %r8d
  39      0000
 328:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  40              		.loc 1 328 142 view .LVU12
  41 001b 55       		pushq	%rbp
  42              		.cfi_def_cfa_offset 40
  43              		.cfi_offset 6, -40
  44              		.loc 1 333 124 view .LVU13
  45 001c 4129D0   		subl	%edx, %r8d
  46              		.loc 1 333 158 view .LVU14
  47 001f 4589D1   		movl	%r10d, %r9d
 328:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  48              		.loc 1 328 142 view .LVU15
  49 0022 53       		pushq	%rbx
  50              		.cfi_def_cfa_offset 48
  51              		.cfi_offset 3, -48
  52              		.loc 1 333 49 view .LVU16
  53 0023 488B1CC7 		movq	(%rdi,%rax,8), %rbx
  54              		.loc 1 333 158 view .LVU17
  55 0027 41F7D1   		notl	%r9d
  56 002a 49C7C3FF 		movq	$-1, %r11
  56      FFFFFF
  57              		.loc 1 333 103 view .LVU18
  58 0031 C462B9F7 		shlx	%r8, 8(%rdi,%rax,8), %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 8


  58      44C708
  59              		.loc 1 333 49 view .LVU19
  60 0038 C4E2CBF7 		shrx	%rsi, %rbx, %rbp
  60      EB
  61              		.loc 1 333 76 view .LVU20
  62 003d 4909E8   		orq	%rbp, %r8
  63              		.loc 1 333 158 view .LVU21
  64 0040 C442B3F7 		shrx	%r9, %r11, %r12
  64      E3
  65              		.loc 1 333 15 view .LVU22
  66 0045 4D21E0   		andq	%r12, %r8
  67              	.LVL3:
 334:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
  68              		.loc 1 334 5 is_stmt 1 view .LVU23
  69              	.LBB281:
  70              		.loc 1 334 10 view .LVU24
  71              		.loc 1 334 54 view .LVU25
  72              		.loc 1 334 5 is_stmt 0 view .LVU26
  73 0048 4983FA40 		cmpq	$64, %r10
  74 004c 0F87BE00 		ja	.L2
  74      0000
  75 0052 4D89D5   		movq	%r10, %r13
  76              	.LVL4:
  77              	.L3:
  78              		.loc 1 334 120 is_stmt 1 discriminator 3 view .LVU27
  79              		.loc 1 334 103 is_stmt 0 discriminator 3 view .LVU28
  80 0055 4B8D442D 		leaq	(%r13,%r13), %rax
  80      00
  81              		.loc 1 334 140 discriminator 3 view .LVU29
  82 005a C44291F7 		shlx	%r13, %r8, %r14
  82      F0
  83              		.loc 1 334 128 discriminator 3 view .LVU30
  84 005f 4D09F0   		orq	%r14, %r8
  85              	.LVL5:
  86              		.loc 1 334 90 is_stmt 1 discriminator 3 view .LVU31
  87              		.loc 1 334 54 discriminator 3 view .LVU32
  88              		.loc 1 334 5 is_stmt 0 discriminator 3 view .LVU33
  89 0062 4883F840 		cmpq	$64, %rax
  90 0066 0F87A400 		ja	.L2
  90      0000
  91              		.loc 1 334 120 is_stmt 1 view .LVU34
  92              		.loc 1 334 103 is_stmt 0 view .LVU35
  93 006c 4A8D1CAD 		leaq	0(,%r13,4), %rbx
  93      00000000 
  94              		.loc 1 334 140 view .LVU36
  95 0074 C4C2F9F7 		shlx	%rax, %r8, %rdx
  95      D0
  96              		.loc 1 334 128 view .LVU37
  97 0079 4909D0   		orq	%rdx, %r8
  98              	.LVL6:
  99              		.loc 1 334 90 is_stmt 1 view .LVU38
 100              		.loc 1 334 54 view .LVU39
 101              		.loc 1 334 5 is_stmt 0 view .LVU40
 102 007c 4883FB40 		cmpq	$64, %rbx
 103 0080 0F878A00 		ja	.L2
 103      0000
 104              		.loc 1 334 120 is_stmt 1 view .LVU41
GAS LISTING /tmp/ccmX4xFB.s 			page 9


 105              		.loc 1 334 103 is_stmt 0 view .LVU42
 106 0086 4E8D0CED 		leaq	0(,%r13,8), %r9
 106      00000000 
 107              		.loc 1 334 140 view .LVU43
 108 008e C4C2E1F7 		shlx	%rbx, %r8, %rbp
 108      E8
 109              		.loc 1 334 128 view .LVU44
 110 0093 4909E8   		orq	%rbp, %r8
 111              	.LVL7:
 112              		.loc 1 334 90 is_stmt 1 view .LVU45
 113              		.loc 1 334 54 view .LVU46
 114              		.loc 1 334 5 is_stmt 0 view .LVU47
 115 0096 4983F940 		cmpq	$64, %r9
 116 009a 7774     		ja	.L2
 117              		.loc 1 334 120 is_stmt 1 view .LVU48
 118              		.loc 1 334 103 is_stmt 0 view .LVU49
 119 009c 4D89EC   		movq	%r13, %r12
 120 009f 49C1E404 		salq	$4, %r12
 121              		.loc 1 334 140 view .LVU50
 122 00a3 C442B1F7 		shlx	%r9, %r8, %r11
 122      D8
 123              		.loc 1 334 128 view .LVU51
 124 00a8 4D09D8   		orq	%r11, %r8
 125              	.LVL8:
 126              		.loc 1 334 90 is_stmt 1 view .LVU52
 127              		.loc 1 334 54 view .LVU53
 128              		.loc 1 334 5 is_stmt 0 view .LVU54
 129 00ab 4983FC40 		cmpq	$64, %r12
 130 00af 775F     		ja	.L2
 131              		.loc 1 334 120 is_stmt 1 view .LVU55
 132              		.loc 1 334 103 is_stmt 0 view .LVU56
 133 00b1 4C89E8   		movq	%r13, %rax
 134 00b4 48C1E005 		salq	$5, %rax
 135              		.loc 1 334 140 view .LVU57
 136 00b8 C44299F7 		shlx	%r12, %r8, %r14
 136      F0
 137              		.loc 1 334 128 view .LVU58
 138 00bd 4D09F0   		orq	%r14, %r8
 139              	.LVL9:
 140              		.loc 1 334 90 is_stmt 1 view .LVU59
 141              		.loc 1 334 54 view .LVU60
 142              		.loc 1 334 5 is_stmt 0 view .LVU61
 143 00c0 4883F840 		cmpq	$64, %rax
 144 00c4 774A     		ja	.L2
 145              		.loc 1 334 120 is_stmt 1 view .LVU62
 146              		.loc 1 334 103 is_stmt 0 view .LVU63
 147 00c6 4C89EB   		movq	%r13, %rbx
 148 00c9 48C1E306 		salq	$6, %rbx
 149              		.loc 1 334 140 view .LVU64
 150 00cd C4C2F9F7 		shlx	%rax, %r8, %rdx
 150      D0
 151              		.loc 1 334 128 view .LVU65
 152 00d2 4909D0   		orq	%rdx, %r8
 153              	.LVL10:
 154              		.loc 1 334 90 is_stmt 1 view .LVU66
 155              		.loc 1 334 54 view .LVU67
 156              		.loc 1 334 5 is_stmt 0 view .LVU68
GAS LISTING /tmp/ccmX4xFB.s 			page 10


 157 00d5 4883FB40 		cmpq	$64, %rbx
 158 00d9 7735     		ja	.L2
 159              		.loc 1 334 120 is_stmt 1 view .LVU69
 160              		.loc 1 334 103 is_stmt 0 view .LVU70
 161 00db 4D89E9   		movq	%r13, %r9
 162 00de 49C1E107 		salq	$7, %r9
 163              		.loc 1 334 140 view .LVU71
 164 00e2 C4C2E1F7 		shlx	%rbx, %r8, %rbp
 164      E8
 165              		.loc 1 334 128 view .LVU72
 166 00e7 4909E8   		orq	%rbp, %r8
 167              	.LVL11:
 168              		.loc 1 334 90 is_stmt 1 view .LVU73
 169              		.loc 1 334 54 view .LVU74
 170              		.loc 1 334 5 is_stmt 0 view .LVU75
 171 00ea 4983F940 		cmpq	$64, %r9
 172 00ee 7720     		ja	.L2
 173              		.loc 1 334 120 is_stmt 1 view .LVU76
 174              		.loc 1 334 103 is_stmt 0 view .LVU77
 175 00f0 49C1E508 		salq	$8, %r13
 176              		.loc 1 334 140 view .LVU78
 177 00f4 C442B1F7 		shlx	%r9, %r8, %r11
 177      D8
 178              		.loc 1 334 128 view .LVU79
 179 00f9 4D09D8   		orq	%r11, %r8
 180              	.LVL12:
 181              		.loc 1 334 90 is_stmt 1 view .LVU80
 182              		.loc 1 334 54 view .LVU81
 183              		.loc 1 334 5 is_stmt 0 view .LVU82
 184 00fc 4983FD40 		cmpq	$64, %r13
 185 0100 0F864FFF 		jbe	.L3
 185      FFFF
 186              	.LVL13:
 187 0106 662E0F1F 		.p2align 4,,10
 187      84000000 
 187      0000
 188              		.p2align 3
 189              	.L2:
 190              		.loc 1 334 5 view .LVU83
 191              	.LBE281:
 335:sieve_extend.c **** 
 336:sieve_extend.c ****     counter_t copy_start = source_start + size;
 192              		.loc 1 336 5 is_stmt 1 view .LVU84
 193              		.loc 1 336 15 is_stmt 0 view .LVU85
 194 0110 4E8D1C16 		leaq	(%rsi,%r10), %r11
 195              	.LVL14:
 337:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 196              		.loc 1 337 5 is_stmt 1 view .LVU86
 197              		.loc 1 337 15 is_stmt 0 view .LVU87
 198 0114 4D89DE   		movq	%r11, %r14
 199 0117 49C1EE06 		shrq	$6, %r14
 200              	.LVL15:
 338:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 201              		.loc 1 338 5 is_stmt 1 view .LVU88
 202              		.loc 1 338 25 is_stmt 0 view .LVU89
 203 011b 4E8D2CF5 		leaq	0(,%r14,8), %r13
 203      00000000 
GAS LISTING /tmp/ccmX4xFB.s 			page 11


 204 0123 4A8D2C2F 		leaq	(%rdi,%r13), %rbp
 339:sieve_extend.c **** 
 340:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 205              		.loc 1 340 15 view .LVU90
 206 0127 4989CC   		movq	%rcx, %r12
 207 012a 48C7C6FF 		movq	$-1, %rsi
 207      FFFFFF
 208              	.LVL16:
 209              		.loc 1 340 15 view .LVU91
 210 0131 F7D1     		notl	%ecx
 211              	.LVL17:
 338:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 212              		.loc 1 338 37 view .LVU92
 213 0133 C4C2A1F7 		shlx	%r11, %r8, %rbx
 213      D8
 214              		.loc 1 340 15 view .LVU93
 215 0138 49C1EC06 		shrq	$6, %r12
 216              	.LVL18:
 338:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 217              		.loc 1 338 25 view .LVU94
 218 013c 480B5D00 		orq	0(%rbp), %rbx
 219 0140 48895D00 		movq	%rbx, 0(%rbp)
 220              		.loc 1 340 5 is_stmt 1 view .LVU95
 221              	.LVL19:
 341:sieve_extend.c ****     // debug { printf("...After first word. "); dump_bitarray(bitarray, 4); }
 342:sieve_extend.c ****     if (copy_word == destination_stop_word) {
 222              		.loc 1 342 5 view .LVU96
 223 0144 C462F3F7 		shrx	%rcx, %rsi, %r9
 223      CE
 224              		.loc 1 342 8 is_stmt 0 view .LVU97
 225 0149 4D39E6   		cmpq	%r12, %r14
 226 014c 0F845302 		je	.L6
 226      0000
 343:sieve_extend.c ****         bitarray[copy_word] &= chopmask(destination_stop);
 344:sieve_extend.c ****         // debug { printf("...Returning after first word. "); dump_bitarray(bitarray, 4); }
 345:sieve_extend.c ****         return;
 346:sieve_extend.c ****     }
 347:sieve_extend.c **** 
 348:sieve_extend.c ****     bitshift_t pattern_shift = WORD_SIZE_counter % size;
 227              		.loc 1 348 5 is_stmt 1 view .LVU98
 228              		.loc 1 348 16 is_stmt 0 view .LVU99
 229 0152 B9400000 		movl	$64, %ecx
 229      00
 230 0157 4889C8   		movq	%rcx, %rax
 231 015a 31D2     		xorl	%edx, %edx
 232 015c 49F7F2   		divq	%r10
 233              	.LVL20:
 349:sieve_extend.c ****     bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 234              		.loc 1 349 5 is_stmt 1 view .LVU100
 235              		.loc 1 349 16 is_stmt 0 view .LVU101
 236 015f 4889CE   		movq	%rcx, %rsi
 350:sieve_extend.c ****     bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start);
 237              		.loc 1 350 45 view .LVU102
 238 0162 4183E33F 		andl	$63, %r11d
 239              	.LVL21:
 240              		.loc 1 350 16 view .LVU103
 241 0166 4889C8   		movq	%rcx, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 12


 242 0169 4C29D8   		subq	%r11, %rax
 349:sieve_extend.c ****     bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 243              		.loc 1 349 16 view .LVU104
 244 016c 4829D6   		subq	%rdx, %rsi
 245              	.LVL22:
 246              		.loc 1 350 5 is_stmt 1 view .LVU105
 351:sieve_extend.c **** 
 352:sieve_extend.c ****     while (copy_word < destination_stop_word) { // = will be handled as well because increment is a
 247              		.loc 1 352 5 view .LVU106
 248              		.loc 1 352 11 view .LVU107
 249 016f 4D39E6   		cmpq	%r12, %r14
 250 0172 0F832D02 		jnb	.L6
 250      0000
 251 0178 4E8D1CE5 		leaq	8(,%r12,8), %r11
 251      08000000 
 252 0180 4E8D141F 		leaq	(%rdi,%r11), %r10
 253              	.LVL23:
 254              		.loc 1 352 11 is_stmt 0 view .LVU108
 255 0184 4E8D742F 		leaq	8(%rdi,%r13), %r14
 255      08
 256              	.LVL24:
 257              		.loc 1 352 11 view .LVU109
 258 0189 4C89D3   		movq	%r10, %rbx
 259 018c 4C29F3   		subq	%r14, %rbx
 260 018f 4883EB08 		subq	$8, %rbx
 261 0193 48C1EB03 		shrq	$3, %rbx
 262 0197 48FFC3   		incq	%rbx
 263 019a 83E307   		andl	$7, %ebx
 264 019d 0F841101 		je	.L7
 264      0000
 265 01a3 4883FB01 		cmpq	$1, %rbx
 266 01a7 0F84E000 		je	.L39
 266      0000
 267 01ad 4883FB02 		cmpq	$2, %rbx
 268 01b1 0F84B600 		je	.L40
 268      0000
 269 01b7 4883FB03 		cmpq	$3, %rbx
 270 01bb 0F848C00 		je	.L41
 270      0000
 271 01c1 4883FB04 		cmpq	$4, %rbx
 272 01c5 7468     		je	.L42
 273 01c7 4883FB05 		cmpq	$5, %rbx
 274 01cb 7442     		je	.L43
 275 01cd 4883FB06 		cmpq	$6, %rbx
 276 01d1 741E     		je	.L44
 277              	.LVL25:
 353:sieve_extend.c ****         copy_word++;
 278              		.loc 1 353 9 is_stmt 1 view .LVU110
 354:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 279              		.loc 1 354 9 view .LVU111
 280              		.loc 1 354 56 is_stmt 0 view .LVU112
 281 01d3 89F5     		movl	%esi, %ebp
 282 01d5 29C5     		subl	%eax, %ebp
 283              		.loc 1 354 76 view .LVU113
 284 01d7 C442FBF7 		shrx	%rax, %r8, %r12
 284      E0
 285              	.LVL26:
GAS LISTING /tmp/ccmX4xFB.s 			page 13


 286              		.loc 1 354 40 view .LVU114
 287 01dc C442D1F7 		shlx	%rbp, %r8, %r13
 287      E8
 355:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 288              		.loc 1 355 24 view .LVU115
 289 01e1 4801D0   		addq	%rdx, %rax
 290              	.LVL27:
 354:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 291              		.loc 1 354 65 view .LVU116
 292 01e4 4D09E5   		orq	%r12, %r13
 354:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 293              		.loc 1 354 29 view .LVU117
 294 01e7 4D892E   		movq	%r13, (%r14)
 295              		.loc 1 355 9 is_stmt 1 view .LVU118
 296              	.LVL28:
 297              		.loc 1 355 15 is_stmt 0 view .LVU119
 298 01ea 83E03F   		andl	$63, %eax
 299              	.LVL29:
 352:sieve_extend.c ****         copy_word++;
 300              		.loc 1 352 11 is_stmt 1 view .LVU120
 301 01ed 4983C608 		addq	$8, %r14
 302              	.L44:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 303              		.loc 1 353 9 view .LVU121
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 304              		.loc 1 354 9 view .LVU122
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 305              		.loc 1 354 56 is_stmt 0 view .LVU123
 306 01f1 89F1     		movl	%esi, %ecx
 307 01f3 29C1     		subl	%eax, %ecx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 308              		.loc 1 354 76 view .LVU124
 309 01f5 C4C2FBF7 		shrx	%rax, %r8, %rbp
 309      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 310              		.loc 1 354 40 view .LVU125
 311 01fa C4C2F1F7 		shlx	%rcx, %r8, %rbx
 311      D8
 312              		.loc 1 355 24 view .LVU126
 313 01ff 4801D0   		addq	%rdx, %rax
 314              	.LVL30:
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 315              		.loc 1 354 65 view .LVU127
 316 0202 4809EB   		orq	%rbp, %rbx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 317              		.loc 1 354 29 view .LVU128
 318 0205 49891E   		movq	%rbx, (%r14)
 319              		.loc 1 355 9 is_stmt 1 view .LVU129
 320              	.LVL31:
 321              		.loc 1 355 15 is_stmt 0 view .LVU130
 322 0208 83E03F   		andl	$63, %eax
 323              	.LVL32:
 352:sieve_extend.c ****         copy_word++;
 324              		.loc 1 352 11 is_stmt 1 view .LVU131
 325 020b 4983C608 		addq	$8, %r14
 326              	.L43:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
GAS LISTING /tmp/ccmX4xFB.s 			page 14


 327              		.loc 1 353 9 view .LVU132
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 328              		.loc 1 354 9 view .LVU133
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 329              		.loc 1 354 56 is_stmt 0 view .LVU134
 330 020f 4189F5   		movl	%esi, %r13d
 331 0212 4129C5   		subl	%eax, %r13d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 332              		.loc 1 354 76 view .LVU135
 333 0215 C4C2FBF7 		shrx	%rax, %r8, %rcx
 333      C8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 334              		.loc 1 354 40 view .LVU136
 335 021a C44291F7 		shlx	%r13, %r8, %r12
 335      E0
 336              		.loc 1 355 24 view .LVU137
 337 021f 4801D0   		addq	%rdx, %rax
 338              	.LVL33:
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 339              		.loc 1 354 65 view .LVU138
 340 0222 4909CC   		orq	%rcx, %r12
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 341              		.loc 1 354 29 view .LVU139
 342 0225 4D8926   		movq	%r12, (%r14)
 343              		.loc 1 355 9 is_stmt 1 view .LVU140
 344              	.LVL34:
 345              		.loc 1 355 15 is_stmt 0 view .LVU141
 346 0228 83E03F   		andl	$63, %eax
 347              	.LVL35:
 352:sieve_extend.c ****         copy_word++;
 348              		.loc 1 352 11 is_stmt 1 view .LVU142
 349 022b 4983C608 		addq	$8, %r14
 350              	.L42:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 351              		.loc 1 353 9 view .LVU143
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 352              		.loc 1 354 9 view .LVU144
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 353              		.loc 1 354 56 is_stmt 0 view .LVU145
 354 022f 89F3     		movl	%esi, %ebx
 355 0231 29C3     		subl	%eax, %ebx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 356              		.loc 1 354 76 view .LVU146
 357 0233 C4C2FBF7 		shrx	%rax, %r8, %rbp
 357      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 358              		.loc 1 354 40 view .LVU147
 359 0238 C442E1F7 		shlx	%rbx, %r8, %r13
 359      E8
 360              		.loc 1 355 24 view .LVU148
 361 023d 4801D0   		addq	%rdx, %rax
 362              	.LVL36:
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 363              		.loc 1 354 65 view .LVU149
 364 0240 4909ED   		orq	%rbp, %r13
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 365              		.loc 1 354 29 view .LVU150
GAS LISTING /tmp/ccmX4xFB.s 			page 15


 366 0243 4D892E   		movq	%r13, (%r14)
 367              		.loc 1 355 9 is_stmt 1 view .LVU151
 368              	.LVL37:
 369              		.loc 1 355 15 is_stmt 0 view .LVU152
 370 0246 83E03F   		andl	$63, %eax
 371              	.LVL38:
 352:sieve_extend.c ****         copy_word++;
 372              		.loc 1 352 11 is_stmt 1 view .LVU153
 373 0249 4983C608 		addq	$8, %r14
 374              	.L41:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 375              		.loc 1 353 9 view .LVU154
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 376              		.loc 1 354 9 view .LVU155
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 377              		.loc 1 354 56 is_stmt 0 view .LVU156
 378 024d 4189F4   		movl	%esi, %r12d
 379 0250 4129C4   		subl	%eax, %r12d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 380              		.loc 1 354 76 view .LVU157
 381 0253 C4C2FBF7 		shrx	%rax, %r8, %rbx
 381      D8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 382              		.loc 1 354 40 view .LVU158
 383 0258 C4C299F7 		shlx	%r12, %r8, %rcx
 383      C8
 384              		.loc 1 355 24 view .LVU159
 385 025d 4801D0   		addq	%rdx, %rax
 386              	.LVL39:
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 387              		.loc 1 354 65 view .LVU160
 388 0260 4809D9   		orq	%rbx, %rcx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 389              		.loc 1 354 29 view .LVU161
 390 0263 49890E   		movq	%rcx, (%r14)
 391              		.loc 1 355 9 is_stmt 1 view .LVU162
 392              	.LVL40:
 393              		.loc 1 355 15 is_stmt 0 view .LVU163
 394 0266 83E03F   		andl	$63, %eax
 395              	.LVL41:
 352:sieve_extend.c ****         copy_word++;
 396              		.loc 1 352 11 is_stmt 1 view .LVU164
 397 0269 4983C608 		addq	$8, %r14
 398              	.L40:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 399              		.loc 1 353 9 view .LVU165
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 400              		.loc 1 354 9 view .LVU166
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 401              		.loc 1 354 56 is_stmt 0 view .LVU167
 402 026d 4189F5   		movl	%esi, %r13d
 403 0270 4129C5   		subl	%eax, %r13d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 404              		.loc 1 354 76 view .LVU168
 405 0273 C4C2FBF7 		shrx	%rax, %r8, %rbp
 405      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
GAS LISTING /tmp/ccmX4xFB.s 			page 16


 406              		.loc 1 354 40 view .LVU169
 407 0278 C44291F7 		shlx	%r13, %r8, %r12
 407      E0
 408              		.loc 1 355 24 view .LVU170
 409 027d 4801D0   		addq	%rdx, %rax
 410              	.LVL42:
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 411              		.loc 1 354 65 view .LVU171
 412 0280 4909EC   		orq	%rbp, %r12
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 413              		.loc 1 354 29 view .LVU172
 414 0283 4D8926   		movq	%r12, (%r14)
 415              		.loc 1 355 9 is_stmt 1 view .LVU173
 416              	.LVL43:
 417              		.loc 1 355 15 is_stmt 0 view .LVU174
 418 0286 83E03F   		andl	$63, %eax
 419              	.LVL44:
 352:sieve_extend.c ****         copy_word++;
 420              		.loc 1 352 11 is_stmt 1 view .LVU175
 421 0289 4983C608 		addq	$8, %r14
 422              	.L39:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 423              		.loc 1 353 9 view .LVU176
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 424              		.loc 1 354 9 view .LVU177
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 425              		.loc 1 354 56 is_stmt 0 view .LVU178
 426 028d 89F1     		movl	%esi, %ecx
 427 028f 29C1     		subl	%eax, %ecx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 428              		.loc 1 354 76 view .LVU179
 429 0291 C442FBF7 		shrx	%rax, %r8, %r13
 429      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 430              		.loc 1 354 40 view .LVU180
 431 0296 C4C2F1F7 		shlx	%rcx, %r8, %rbx
 431      D8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 432              		.loc 1 354 65 view .LVU181
 433 029b 4C09EB   		orq	%r13, %rbx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 434              		.loc 1 354 29 view .LVU182
 435 029e 49891E   		movq	%rbx, (%r14)
 436              		.loc 1 355 9 is_stmt 1 view .LVU183
 437              		.loc 1 355 24 is_stmt 0 view .LVU184
 438 02a1 4801D0   		addq	%rdx, %rax
 439              	.LVL45:
 440              		.loc 1 355 24 view .LVU185
 441 02a4 4983C608 		addq	$8, %r14
 442              		.loc 1 355 15 view .LVU186
 443 02a8 83E03F   		andl	$63, %eax
 444              	.LVL46:
 352:sieve_extend.c ****         copy_word++;
 445              		.loc 1 352 11 is_stmt 1 view .LVU187
 446 02ab 4D39F2   		cmpq	%r14, %r10
 447 02ae 0F84EC00 		je	.L59
 447      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 17


 448              	.L7:
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 449              		.loc 1 353 9 view .LVU188
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 450              		.loc 1 354 9 view .LVU189
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 451              		.loc 1 354 56 is_stmt 0 view .LVU190
 452 02b4 4189F4   		movl	%esi, %r12d
 453 02b7 4129C4   		subl	%eax, %r12d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 454              		.loc 1 354 76 view .LVU191
 455 02ba C4C2FBF7 		shrx	%rax, %r8, %rbp
 455      E8
 456              		.loc 1 355 24 view .LVU192
 457 02bf 4801D0   		addq	%rdx, %rax
 458              	.LVL47:
 459              		.loc 1 355 15 view .LVU193
 460 02c2 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 461              		.loc 1 354 56 view .LVU194
 462 02c5 89F3     		movl	%esi, %ebx
 463 02c7 29C3     		subl	%eax, %ebx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 464              		.loc 1 354 40 view .LVU195
 465 02c9 C4C299F7 		shlx	%r12, %r8, %rcx
 465      C8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 466              		.loc 1 354 76 view .LVU196
 467 02ce C442FBF7 		shrx	%rax, %r8, %r12
 467      E0
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 468              		.loc 1 354 65 view .LVU197
 469 02d3 4809E9   		orq	%rbp, %rcx
 470              		.loc 1 355 24 view .LVU198
 471 02d6 4801D0   		addq	%rdx, %rax
 472              		.loc 1 355 15 view .LVU199
 473 02d9 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 474              		.loc 1 354 29 view .LVU200
 475 02dc 49890E   		movq	%rcx, (%r14)
 476              		.loc 1 355 9 is_stmt 1 view .LVU201
 352:sieve_extend.c ****         copy_word++;
 477              		.loc 1 352 11 view .LVU202
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 478              		.loc 1 353 9 view .LVU203
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 479              		.loc 1 354 9 view .LVU204
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 480              		.loc 1 354 56 is_stmt 0 view .LVU205
 481 02df 89F1     		movl	%esi, %ecx
 482 02e1 29C1     		subl	%eax, %ecx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 483              		.loc 1 354 76 view .LVU206
 484 02e3 C4C2FBF7 		shrx	%rax, %r8, %rbp
 484      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 485              		.loc 1 354 40 view .LVU207
GAS LISTING /tmp/ccmX4xFB.s 			page 18


 486 02e8 C442E1F7 		shlx	%rbx, %r8, %r13
 486      E8
 487              		.loc 1 355 24 view .LVU208
 488 02ed 4801D0   		addq	%rdx, %rax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 489              		.loc 1 354 65 view .LVU209
 490 02f0 4D09E5   		orq	%r12, %r13
 491              		.loc 1 355 15 view .LVU210
 492 02f3 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 493              		.loc 1 354 29 view .LVU211
 494 02f6 4D896E08 		movq	%r13, 8(%r14)
 495              		.loc 1 355 9 is_stmt 1 view .LVU212
 352:sieve_extend.c ****         copy_word++;
 496              		.loc 1 352 11 view .LVU213
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 497              		.loc 1 353 9 view .LVU214
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 498              		.loc 1 354 9 view .LVU215
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 499              		.loc 1 354 56 is_stmt 0 view .LVU216
 500 02fa 4189F5   		movl	%esi, %r13d
 501 02fd 4129C5   		subl	%eax, %r13d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 502              		.loc 1 354 40 view .LVU217
 503 0300 C4C2F1F7 		shlx	%rcx, %r8, %rbx
 503      D8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 504              		.loc 1 354 76 view .LVU218
 505 0305 C4C2FBF7 		shrx	%rax, %r8, %rcx
 505      C8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 506              		.loc 1 354 65 view .LVU219
 507 030a 4809EB   		orq	%rbp, %rbx
 508              		.loc 1 355 24 view .LVU220
 509 030d 4801D0   		addq	%rdx, %rax
 510              		.loc 1 355 15 view .LVU221
 511 0310 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 512              		.loc 1 354 29 view .LVU222
 513 0313 49895E10 		movq	%rbx, 16(%r14)
 514              		.loc 1 355 9 is_stmt 1 view .LVU223
 352:sieve_extend.c ****         copy_word++;
 515              		.loc 1 352 11 view .LVU224
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 516              		.loc 1 353 9 view .LVU225
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 517              		.loc 1 354 9 view .LVU226
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 518              		.loc 1 354 56 is_stmt 0 view .LVU227
 519 0317 89F3     		movl	%esi, %ebx
 520 0319 29C3     		subl	%eax, %ebx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 521              		.loc 1 354 76 view .LVU228
 522 031b C4C2FBF7 		shrx	%rax, %r8, %rbp
 522      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
GAS LISTING /tmp/ccmX4xFB.s 			page 19


 523              		.loc 1 354 40 view .LVU229
 524 0320 C44291F7 		shlx	%r13, %r8, %r12
 524      E0
 525              		.loc 1 355 24 view .LVU230
 526 0325 4801D0   		addq	%rdx, %rax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 527              		.loc 1 354 65 view .LVU231
 528 0328 4909CC   		orq	%rcx, %r12
 529              		.loc 1 355 15 view .LVU232
 530 032b 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 531              		.loc 1 354 29 view .LVU233
 532 032e 4D896618 		movq	%r12, 24(%r14)
 533              		.loc 1 355 9 is_stmt 1 view .LVU234
 352:sieve_extend.c ****         copy_word++;
 534              		.loc 1 352 11 view .LVU235
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 535              		.loc 1 353 9 view .LVU236
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 536              		.loc 1 354 9 view .LVU237
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 537              		.loc 1 354 56 is_stmt 0 view .LVU238
 538 0332 4189F4   		movl	%esi, %r12d
 539 0335 4129C4   		subl	%eax, %r12d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 540              		.loc 1 354 40 view .LVU239
 541 0338 C442E1F7 		shlx	%rbx, %r8, %r13
 541      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 542              		.loc 1 354 76 view .LVU240
 543 033d C4C2FBF7 		shrx	%rax, %r8, %rbx
 543      D8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 544              		.loc 1 354 65 view .LVU241
 545 0342 4909ED   		orq	%rbp, %r13
 546              		.loc 1 355 24 view .LVU242
 547 0345 4801D0   		addq	%rdx, %rax
 548              		.loc 1 355 15 view .LVU243
 549 0348 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 550              		.loc 1 354 29 view .LVU244
 551 034b 4D896E20 		movq	%r13, 32(%r14)
 552              		.loc 1 355 9 is_stmt 1 view .LVU245
 352:sieve_extend.c ****         copy_word++;
 553              		.loc 1 352 11 view .LVU246
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 554              		.loc 1 353 9 view .LVU247
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 555              		.loc 1 354 9 view .LVU248
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 556              		.loc 1 354 56 is_stmt 0 view .LVU249
 557 034f 4189F5   		movl	%esi, %r13d
 558 0352 4129C5   		subl	%eax, %r13d
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 559              		.loc 1 354 40 view .LVU250
 560 0355 C4C299F7 		shlx	%r12, %r8, %rcx
 560      C8
GAS LISTING /tmp/ccmX4xFB.s 			page 20


 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 561              		.loc 1 354 76 view .LVU251
 562 035a C4C2FBF7 		shrx	%rax, %r8, %rbp
 562      E8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 563              		.loc 1 354 65 view .LVU252
 564 035f 4809D9   		orq	%rbx, %rcx
 565              		.loc 1 355 24 view .LVU253
 566 0362 4801D0   		addq	%rdx, %rax
 567              		.loc 1 355 15 view .LVU254
 568 0365 83E03F   		andl	$63, %eax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 569              		.loc 1 354 29 view .LVU255
 570 0368 49894E28 		movq	%rcx, 40(%r14)
 571              		.loc 1 355 9 is_stmt 1 view .LVU256
 352:sieve_extend.c ****         copy_word++;
 572              		.loc 1 352 11 view .LVU257
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 573              		.loc 1 353 9 view .LVU258
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 574              		.loc 1 354 9 view .LVU259
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 575              		.loc 1 354 56 is_stmt 0 view .LVU260
 576 036c 89F1     		movl	%esi, %ecx
 577 036e 29C1     		subl	%eax, %ecx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 578              		.loc 1 354 40 view .LVU261
 579 0370 C44291F7 		shlx	%r13, %r8, %r12
 579      E0
 580 0375 C4C2F1F7 		shlx	%rcx, %r8, %rbx
 580      D8
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 581              		.loc 1 354 65 view .LVU262
 582 037a 4909EC   		orq	%rbp, %r12
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 583              		.loc 1 354 76 view .LVU263
 584 037d C442FBF7 		shrx	%rax, %r8, %r13
 584      E8
 585              		.loc 1 355 24 view .LVU264
 586 0382 4801D0   		addq	%rdx, %rax
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 587              		.loc 1 354 65 view .LVU265
 588 0385 4C09EB   		orq	%r13, %rbx
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 589              		.loc 1 354 29 view .LVU266
 590 0388 4D896630 		movq	%r12, 48(%r14)
 591              		.loc 1 355 9 is_stmt 1 view .LVU267
 352:sieve_extend.c ****         copy_word++;
 592              		.loc 1 352 11 view .LVU268
 353:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 593              		.loc 1 353 9 view .LVU269
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 594              		.loc 1 354 9 view .LVU270
 354:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 595              		.loc 1 354 29 is_stmt 0 view .LVU271
 596 038c 49895E38 		movq	%rbx, 56(%r14)
 597              		.loc 1 355 9 is_stmt 1 view .LVU272
GAS LISTING /tmp/ccmX4xFB.s 			page 21


 598              	.LVL48:
 599              		.loc 1 355 15 is_stmt 0 view .LVU273
 600 0390 83E03F   		andl	$63, %eax
 601              	.LVL49:
 352:sieve_extend.c ****         copy_word++;
 602              		.loc 1 352 11 is_stmt 1 view .LVU274
 603 0393 4983C640 		addq	$64, %r14
 604 0397 4D39F2   		cmpq	%r14, %r10
 605 039a 0F8514FF 		jne	.L7
 605      FFFF
 606              	.L59:
 352:sieve_extend.c ****         copy_word++;
 607              		.loc 1 352 11 is_stmt 0 view .LVU275
 608 03a0 4A8D6C1F 		leaq	-8(%rdi,%r11), %rbp
 608      F8
 609              	.LVL50:
 610              	.L6:
 356:sieve_extend.c ****     }
 357:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 611              		.loc 1 357 5 is_stmt 1 view .LVU276
 612              		.loc 1 357 25 is_stmt 0 view .LVU277
 613 03a5 4921D9   		andq	%rbx, %r9
 614 03a8 4C894D00 		movq	%r9, 0(%rbp)
 358:sieve_extend.c ****     // debug { printf("...After copies. "); dump_bitarray(bitarray, 4); }
 359:sieve_extend.c **** }
 615              		.loc 1 359 1 view .LVU278
 616 03ac 5B       		popq	%rbx
 617              		.cfi_def_cfa_offset 40
 618 03ad 5D       		popq	%rbp
 619              		.cfi_def_cfa_offset 32
 620 03ae 415C     		popq	%r12
 621              		.cfi_def_cfa_offset 24
 622 03b0 415D     		popq	%r13
 623              		.cfi_def_cfa_offset 16
 624 03b2 415E     		popq	%r14
 625              		.cfi_def_cfa_offset 8
 626 03b4 C3       		ret
 627              		.cfi_endproc
 628              	.LFE63:
 630 03b5 66662E0F 		.p2align 4
 630      1F840000 
 630      000000
 632              	extendSieve_shiftright_ivdep:
 633              	.LVL51:
 634              	.LFB68:
 360:sieve_extend.c **** 
 361:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 362:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 363:sieve_extend.c **** 
 364:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 365:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 366:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 367:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 368:sieve_extend.c ****     
 369:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 370:sieve_extend.c **** 
 371:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
GAS LISTING /tmp/ccmX4xFB.s 			page 22


 372:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 373:sieve_extend.c ****         copy_word += size;
 374:sieve_extend.c ****     }
 375:sieve_extend.c **** 
 376:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 377:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 378:sieve_extend.c ****         source_word++;
 379:sieve_extend.c ****         copy_word++;
 380:sieve_extend.c ****     }
 381:sieve_extend.c **** 
 382:sieve_extend.c **** }
 383:sieve_extend.c **** 
 384:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 385:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 386:sieve_extend.c **** 
 387:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 388:sieve_extend.c **** {
 389:sieve_extend.c ****     int i = 0;
 390:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 391:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 392:sieve_extend.c ****     {
 393:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 394:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 395:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 396:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 397:sieve_extend.c ****     }
 398:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 399:sieve_extend.c ****     {
 400:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 401:sieve_extend.c ****     }    
 402:sieve_extend.c **** }
 403:sieve_extend.c **** 
 404:sieve_extend.c **** #define forward_distance 3
 405:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 406:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 407:sieve_extend.c ****    
 408:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 409:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 410:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 411:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 412:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 413:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 414:sieve_extend.c **** 
 415:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 416:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 417:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 418:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 419:sieve_extend.c ****         return; // rapid exit for one word variant
 420:sieve_extend.c ****     }
 421:sieve_extend.c **** 
 422:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 423:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 424:sieve_extend.c ****                                 & keepmask(copy_start);
 425:sieve_extend.c **** 
 426:sieve_extend.c ****     copy_word++;
 427:sieve_extend.c **** 
 428:sieve_extend.c ****     debug printf("..copy distance %ju\n",copy_word - source_word);
GAS LISTING /tmp/ccmX4xFB.s 			page 23


 429:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 430:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 431:sieve_extend.c ****         
 432:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 433:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 434:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 435:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 436:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 437:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 438:sieve_extend.c **** 
 439:sieve_extend.c ****         #pragma ivdep 
 440:sieve_extend.c ****         for (counter_t i = 0; (i+forward_distance) < size_word; i+=forward_distance, copy_ptr+=forw
 441:sieve_extend.c ****             #pragma ivdep
 442:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 443:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 444:sieve_extend.c ****             #pragma ivdep
 445:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 446:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 447:sieve_extend.c ****         }
 448:sieve_extend.c **** 
 449:sieve_extend.c ****         size_word = dest_ptr - copy_ptr;
 450:sieve_extend.c ****         for (counter_t i=0; i <= size_word; i++) 
 451:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 452:sieve_extend.c **** 
 453:sieve_extend.c ****         // #pragma GCC ivdep
 454:sieve_extend.c ****         // for (; i <= size_word; i++) 
 455:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 456:sieve_extend.c ****     }
 457:sieve_extend.c ****     else {
 458:sieve_extend.c ****         register counter_t i = 0;
 459:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 460:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 461:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 462:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 463:sieve_extend.c ****         for (; i <= size_word; i++) 
 464:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 465:sieve_extend.c ****     }
 466:sieve_extend.c **** 
 467:sieve_extend.c ****     // for (; i <= size_word; i++) 
 468:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 469:sieve_extend.c **** 
 470:sieve_extend.c ****     // for (; i <= size_word; i++) 
 471:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 472:sieve_extend.c **** 
 473:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 474:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 475:sieve_extend.c **** }
 476:sieve_extend.c **** 
 477:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 478:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 479:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 480:sieve_extend.c ****     counter_t distance = 0;
 481:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 482:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 483:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 484:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 485:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccmX4xFB.s 			page 24


 486:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 487:sieve_extend.c ****         copy_word += 2;
 488:sieve_extend.c ****         source_word += 2;
 489:sieve_extend.c ****         distance += 2;
 490:sieve_extend.c ****     }
 491:sieve_extend.c ****     return distance;
 492:sieve_extend.c **** }
 493:sieve_extend.c **** 
 494:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 495:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 496:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 497:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 498:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 499:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 500:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 501:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 502:sieve_extend.c **** //
 503:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 504:sieve_extend.c **** //    copy_ptr++;
 505:sieve_extend.c **** //    source_ptr++;
 506:sieve_extend.c **** //
 507:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 508:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 509:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 510:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 511:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 512:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 513:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 514:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 515:sieve_extend.c **** //
 516:sieve_extend.c **** //        copy_ptr+=3;
 517:sieve_extend.c **** //        source_ptr+=3;
 518:sieve_extend.c **** //    }
 519:sieve_extend.c **** //
 520:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 521:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 522:sieve_extend.c **** //        source_ptr++;
 523:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 524:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 525:sieve_extend.c **** //        copy_ptr++;
 526:sieve_extend.c **** //    }
 527:sieve_extend.c **** //
 528:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 529:sieve_extend.c **** //
 530:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 531:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 532:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 533:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 534:sieve_extend.c **** //         copy_ptr += size;
 535:sieve_extend.c **** //     }
 536:sieve_extend.c **** //
 537:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 538:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 539:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 540:sieve_extend.c **** //        copy_ptr++;
 541:sieve_extend.c **** //        source_ptr++;
 542:sieve_extend.c **** //    }
GAS LISTING /tmp/ccmX4xFB.s 			page 25


 543:sieve_extend.c **** //
 544:sieve_extend.c **** //}
 545:sieve_extend.c **** 
 546:sieve_extend.c **** 
 547:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 635              		.loc 1 547 149 is_stmt 1 view -0
 636              		.cfi_startproc
 548:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 637              		.loc 1 548 5 view .LVU280
 549:sieve_extend.c ****    
 550:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 638              		.loc 1 550 5 view .LVU281
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 639              		.loc 1 547 149 is_stmt 0 view .LVU282
 640 03c0 55       		pushq	%rbp
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 6, -16
 551:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 643              		.loc 1 551 21 view .LVU283
 644 03c1 4C8D0416 		leaq	(%rsi,%rdx), %r8
 550:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 645              		.loc 1 550 21 view .LVU284
 646 03c5 4889C8   		movq	%rcx, %rax
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 647              		.loc 1 547 149 view .LVU285
 648 03c8 4889E5   		movq	%rsp, %rbp
 649              		.cfi_def_cfa_register 6
 650 03cb 4157     		pushq	%r15
 552:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 651              		.loc 1 552 39 view .LVU286
 652 03cd 4D89C2   		movq	%r8, %r10
 653 03d0 4183E23F 		andl	$63, %r10d
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 654              		.loc 1 547 149 view .LVU287
 655 03d4 4156     		pushq	%r14
 550:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 656              		.loc 1 550 21 view .LVU288
 657 03d6 48C1E806 		shrq	$6, %rax
 658 03da F7D1     		notl	%ecx
 659              	.LVL52:
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 660              		.loc 1 547 149 view .LVU289
 661 03dc 4155     		pushq	%r13
 662 03de 4154     		pushq	%r12
 663              		.cfi_offset 15, -24
 664              		.cfi_offset 14, -32
 665              		.cfi_offset 13, -40
 666              		.cfi_offset 12, -48
 667              		.loc 1 552 67 view .LVU290
 668 03e0 4989F4   		movq	%rsi, %r12
 553:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 554:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 669              		.loc 1 554 24 view .LVU291
 670 03e3 48C1EE06 		shrq	$6, %rsi
 671              	.LVL53:
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 672              		.loc 1 547 149 view .LVU292
GAS LISTING /tmp/ccmX4xFB.s 			page 26


 673 03e7 53       		pushq	%rbx
 674              		.loc 1 554 24 view .LVU293
 675 03e8 4989F1   		movq	%rsi, %r9
 676 03eb 4E8D3CCD 		leaq	0(,%r9,8), %r15
 676      00000000 
 547:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 677              		.loc 1 547 149 view .LVU294
 678 03f3 4883E4E0 		andq	$-32, %rsp
 679              		.cfi_offset 3, -56
 680              	.LVL54:
 551:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 681              		.loc 1 551 5 is_stmt 1 view .LVU295
 552:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 682              		.loc 1 552 5 view .LVU296
 683              		.loc 1 554 24 is_stmt 0 view .LVU297
 684 03f7 48897424 		movq	%rsi, -32(%rsp)
 684      E0
 555:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 685              		.loc 1 555 24 view .LVU298
 686 03fc 4C89C6   		movq	%r8, %rsi
 687 03ff 48C1EE06 		shrq	$6, %rsi
 688 0403 488D1CF5 		leaq	0(,%rsi,8), %rbx
 688      00000000 
 552:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 689              		.loc 1 552 67 view .LVU299
 690 040b 4183E43F 		andl	$63, %r12d
 691              	.LVL55:
 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 692              		.loc 1 553 5 is_stmt 1 view .LVU300
 554:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 693              		.loc 1 554 5 view .LVU301
 694              		.loc 1 555 5 view .LVU302
 556:sieve_extend.c **** 
 557:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 695              		.loc 1 557 5 view .LVU303
 552:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 696              		.loc 1 552 31 is_stmt 0 view .LVU304
 697 040f 4D89D1   		movq	%r10, %r9
 550:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 698              		.loc 1 550 21 view .LVU305
 699 0412 48894424 		movq	%rax, -8(%rsp)
 699      F8
 700              	.LVL56:
 550:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 701              		.loc 1 550 21 view .LVU306
 702 0417 4C8D2C1F 		leaq	(%rdi,%rbx), %r13
 552:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 703              		.loc 1 552 31 view .LVU307
 704 041b 4D29E1   		subq	%r12, %r9
 705              	.LVL57:
 552:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 706              		.loc 1 552 31 view .LVU308
 707 041e 4D8B7500 		movq	0(%r13), %r14
 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 708              		.loc 1 553 31 view .LVU309
 709 0422 4983C440 		addq	$64, %r12
 710              	.LVL58:
GAS LISTING /tmp/ccmX4xFB.s 			page 27


 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 711              		.loc 1 553 31 view .LVU310
 712 0426 4E8D1C3F 		leaq	(%rdi,%r15), %r11
 713 042a 4D29D4   		subq	%r10, %r12
 714              	.LVL59:
 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 715              		.loc 1 553 31 view .LVU311
 716 042d 4C897C24 		movq	%r15, -24(%rsp)
 716      E8
 717 0432 49C7C7FF 		movq	$-1, %r15
 717      FFFFFF
 718 0439 C4C2B1F7 		shlx	%r9, (%r11), %rax
 718      03
 719 043e C4429BF7 		shrx	%r12, %r14, %r8
 719      C6
 720              	.LVL60:
 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 721              		.loc 1 553 31 view .LVU312
 722 0443 C442A9F7 		shlx	%r10, %r15, %r10
 722      D7
 723              	.LVL61:
 553:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 724              		.loc 1 553 31 view .LVU313
 725 0448 44894C24 		movl	%r9d, -12(%rsp)
 725      F4
 726 044d 4C09C0   		orq	%r8, %rax
 727 0450 C442F3F7 		shrx	%rcx, %r15, %r15
 727      FF
 728              		.loc 1 557 8 view .LVU314
 729 0455 48397424 		cmpq	%rsi, -8(%rsp)
 729      F8
 730 045a 0F865009 		jbe	.L260
 730      0000
 558:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 559:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 560:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 561:sieve_extend.c ****         return; // rapid exit for one word variant
 562:sieve_extend.c ****     }
 563:sieve_extend.c **** 
 564:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 565:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 566:sieve_extend.c ****                                 & keepmask(copy_start);
 731              		.loc 1 566 33 view .LVU315
 732 0460 4C21D0   		andq	%r10, %rax
 564:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 733              		.loc 1 564 25 view .LVU316
 734 0463 4C09F0   		orq	%r14, %rax
 735 0466 49894500 		movq	%rax, 0(%r13)
 736 046a 4589E0   		movl	%r12d, %r8d
 564:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 737              		.loc 1 564 5 is_stmt 1 view .LVU317
 567:sieve_extend.c **** 
 568:sieve_extend.c ****     copy_word++;
 738              		.loc 1 568 5 view .LVU318
 739              		.loc 1 568 14 is_stmt 0 view .LVU319
 740 046d 4C8D7601 		leaq	1(%rsi), %r14
 741              	.LVL62:
GAS LISTING /tmp/ccmX4xFB.s 			page 28


 569:sieve_extend.c **** 
 570:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 742              		.loc 1 570 5 is_stmt 1 view .LVU320
 571:sieve_extend.c **** 
 572:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 743              		.loc 1 572 5 view .LVU321
 744              		.loc 1 572 8 is_stmt 0 view .LVU322
 745 0471 4883FA3F 		cmpq	$63, %rdx
 746 0475 0F87AD03 		ja	.L261
 746      0000
 573:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 574:sieve_extend.c ****         #pragma ivdep
 575:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 576:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 577:sieve_extend.c ****         }
 578:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 579:sieve_extend.c ****     }
 580:sieve_extend.c **** 
 581:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 747              		.loc 1 581 12 is_stmt 1 discriminator 1 view .LVU323
 748              		.loc 1 581 5 is_stmt 0 discriminator 1 view .LVU324
 749 047b 488B5424 		movq	-8(%rsp), %rdx
 749      F8
 750              	.LVL63:
 751              		.loc 1 581 5 discriminator 1 view .LVU325
 752 0480 4C39F2   		cmpq	%r14, %rdx
 753 0483 0F828503 		jb	.L76
 753      0000
 754 0489 4C8B5C24 		movq	-32(%rsp), %r11
 754      E0
 755 048e 488D4A01 		leaq	1(%rdx), %rcx
 756 0492 4989D5   		movq	%rdx, %r13
 757 0495 4A8D14F5 		leaq	0(,%r14,8), %rdx
 757      00000000 
 758 049d 4A8D04DD 		leaq	0(,%r11,8), %rax
 758      00000000 
 759 04a5 4C8D5220 		leaq	32(%rdx), %r10
 760 04a9 48894C24 		movq	%rcx, -24(%rsp)
 760      E8
 761 04ae 4D29F5   		subq	%r14, %r13
 762 04b1 4A8D0CDD 		leaq	40(,%r11,8), %rcx
 762      28000000 
 763 04b9 4C39D0   		cmpq	%r10, %rax
 764 04bc 410F9DC3 		setge	%r11b
 765 04c0 4839CA   		cmpq	%rcx, %rdx
 766 04c3 410F9DC2 		setge	%r10b
 767 04c7 4508D3   		orb	%r10b, %r11b
 768 04ca 488D5E02 		leaq	2(%rsi), %rbx
 769 04ce 0F84C506 		je	.L68
 769      0000
 770 04d4 4983FD03 		cmpq	$3, %r13
 771 04d8 410F97C3 		seta	%r11b
 772 04dc 483B5C24 		cmpq	-24(%rsp), %rbx
 772      E8
 773 04e1 410F96C2 		setbe	%r10b
 774 04e5 4584D3   		testb	%r10b, %r11b
 775 04e8 0F84AB06 		je	.L68
GAS LISTING /tmp/ccmX4xFB.s 			page 29


 775      0000
 776 04ee 4C8B5424 		movq	-8(%rsp), %r10
 776      F8
 777 04f3 C5F96E4C 		vmovd	-12(%rsp), %xmm1
 777      24F4
 778 04f9 4929F2   		subq	%rsi, %r10
 779 04fc 483B5C24 		cmpq	-24(%rsp), %rbx
 779      E8
 780 0501 BE010000 		movl	$1, %esi
 780      00
 781 0506 4C0F47D6 		cmova	%rsi, %r10
 782 050a C4C1796E 		vmovd	%r12d, %xmm0
 782      C4
 783 050f 4D89D3   		movq	%r10, %r11
 784 0512 49C1EB02 		shrq	$2, %r11
 785 0516 49C1E305 		salq	$5, %r11
 786 051a 4D8D43E0 		leaq	-32(%r11), %r8
 787 051e 49C1E805 		shrq	$5, %r8
 788 0522 49FFC0   		incq	%r8
 789 0525 488D740F 		leaq	-32(%rdi,%rcx), %rsi
 789      E0
 790 052a 4801F8   		addq	%rdi, %rax
 791 052d 4801FA   		addq	%rdi, %rdx
 792              		.loc 1 581 5 view .LVU326
 793 0530 31C9     		xorl	%ecx, %ecx
 794 0532 4183E007 		andl	$7, %r8d
 795 0536 0F841301 		je	.L77
 795      0000
 796 053c 4983F801 		cmpq	$1, %r8
 797 0540 0F84E100 		je	.L194
 797      0000
 798 0546 4983F802 		cmpq	$2, %r8
 799 054a 0F84B800 		je	.L195
 799      0000
 800 0550 4983F803 		cmpq	$3, %r8
 801 0554 0F848E00 		je	.L196
 801      0000
 802 055a 4983F804 		cmpq	$4, %r8
 803 055e 7469     		je	.L197
 804 0560 4983F805 		cmpq	$5, %r8
 805 0564 7443     		je	.L198
 806 0566 4983F806 		cmpq	$6, %r8
 807 056a 741D     		je	.L199
 808              	.LVL64:
 582:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 809              		.loc 1 582 9 is_stmt 1 view .LVU327
 810              		.loc 1 582 99 is_stmt 0 view .LVU328
 811 056c C5FE6F36 		vmovdqu	(%rsi), %ymm6
 812              		.loc 1 582 54 view .LVU329
 813 0570 C5FE6F38 		vmovdqu	(%rax), %ymm7
 814              		.loc 1 582 99 view .LVU330
 815 0574 C5CDF3D1 		vpsllq	%xmm1, %ymm6, %ymm2
 816              		.loc 1 582 54 view .LVU331
 817 0578 C5C5D3D8 		vpsrlq	%xmm0, %ymm7, %ymm3
 818 057c B9200000 		movl	$32, %ecx
 818      00
 819              		.loc 1 582 72 view .LVU332
GAS LISTING /tmp/ccmX4xFB.s 			page 30


 820 0581 C5EDEBE3 		vpor	%ymm3, %ymm2, %ymm4
 821              		.loc 1 582 29 view .LVU333
 822 0585 C5FE7F22 		vmovdqu	%ymm4, (%rdx)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 823              		.loc 1 581 48 is_stmt 1 view .LVU334
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 824              		.loc 1 581 12 view .LVU335
 825              	.L199:
 826              		.loc 1 582 9 view .LVU336
 827              		.loc 1 582 99 is_stmt 0 view .LVU337
 828 0589 C5FE6F2C 		vmovdqu	(%rsi,%rcx), %ymm5
 828      0E
 829              		.loc 1 582 54 view .LVU338
 830 058e C57E6F0C 		vmovdqu	(%rax,%rcx), %ymm9
 830      08
 831              		.loc 1 582 99 view .LVU339
 832 0593 C555F3C1 		vpsllq	%xmm1, %ymm5, %ymm8
 833              		.loc 1 582 54 view .LVU340
 834 0597 C535D3D0 		vpsrlq	%xmm0, %ymm9, %ymm10
 835              		.loc 1 582 72 view .LVU341
 836 059b C4413DEB 		vpor	%ymm10, %ymm8, %ymm11
 836      DA
 837              		.loc 1 582 29 view .LVU342
 838 05a0 C57E7F1C 		vmovdqu	%ymm11, (%rdx,%rcx)
 838      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 839              		.loc 1 581 48 is_stmt 1 view .LVU343
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 840              		.loc 1 581 12 view .LVU344
 841 05a5 4883C120 		addq	$32, %rcx
 842              	.L198:
 843              		.loc 1 582 9 view .LVU345
 844              		.loc 1 582 99 is_stmt 0 view .LVU346
 845 05a9 C57E6F24 		vmovdqu	(%rsi,%rcx), %ymm12
 845      0E
 846              		.loc 1 582 54 view .LVU347
 847 05ae C57E6F34 		vmovdqu	(%rax,%rcx), %ymm14
 847      08
 848              		.loc 1 582 99 view .LVU348
 849 05b3 C51DF3E9 		vpsllq	%xmm1, %ymm12, %ymm13
 850              		.loc 1 582 54 view .LVU349
 851 05b7 C50DD3F8 		vpsrlq	%xmm0, %ymm14, %ymm15
 852              		.loc 1 582 72 view .LVU350
 853 05bb C4C115EB 		vpor	%ymm15, %ymm13, %ymm6
 853      F7
 854              		.loc 1 582 29 view .LVU351
 855 05c0 C5FE7F34 		vmovdqu	%ymm6, (%rdx,%rcx)
 855      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 856              		.loc 1 581 48 is_stmt 1 view .LVU352
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 857              		.loc 1 581 12 view .LVU353
 858 05c5 4883C120 		addq	$32, %rcx
 859              	.L197:
 860              		.loc 1 582 9 view .LVU354
 861              		.loc 1 582 99 is_stmt 0 view .LVU355
 862 05c9 C5FE6F14 		vmovdqu	(%rsi,%rcx), %ymm2
GAS LISTING /tmp/ccmX4xFB.s 			page 31


 862      0E
 863              		.loc 1 582 54 view .LVU356
 864 05ce C5FE6F1C 		vmovdqu	(%rax,%rcx), %ymm3
 864      08
 865              		.loc 1 582 99 view .LVU357
 866 05d3 C5EDF3F9 		vpsllq	%xmm1, %ymm2, %ymm7
 867              		.loc 1 582 54 view .LVU358
 868 05d7 C5E5D3E0 		vpsrlq	%xmm0, %ymm3, %ymm4
 869              		.loc 1 582 72 view .LVU359
 870 05db C5C5EBEC 		vpor	%ymm4, %ymm7, %ymm5
 871              		.loc 1 582 29 view .LVU360
 872 05df C5FE7F2C 		vmovdqu	%ymm5, (%rdx,%rcx)
 872      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 873              		.loc 1 581 48 is_stmt 1 view .LVU361
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 874              		.loc 1 581 12 view .LVU362
 875 05e4 4883C120 		addq	$32, %rcx
 876              	.L196:
 877              		.loc 1 582 9 view .LVU363
 878              		.loc 1 582 99 is_stmt 0 view .LVU364
 879 05e8 C57E6F04 		vmovdqu	(%rsi,%rcx), %ymm8
 879      0E
 880              		.loc 1 582 54 view .LVU365
 881 05ed C57E6F14 		vmovdqu	(%rax,%rcx), %ymm10
 881      08
 882              		.loc 1 582 99 view .LVU366
 883 05f2 C53DF3C9 		vpsllq	%xmm1, %ymm8, %ymm9
 884              		.loc 1 582 54 view .LVU367
 885 05f6 C52DD3D8 		vpsrlq	%xmm0, %ymm10, %ymm11
 886              		.loc 1 582 72 view .LVU368
 887 05fa C44135EB 		vpor	%ymm11, %ymm9, %ymm12
 887      E3
 888              		.loc 1 582 29 view .LVU369
 889 05ff C57E7F24 		vmovdqu	%ymm12, (%rdx,%rcx)
 889      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 890              		.loc 1 581 48 is_stmt 1 view .LVU370
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 891              		.loc 1 581 12 view .LVU371
 892 0604 4883C120 		addq	$32, %rcx
 893              	.L195:
 894              		.loc 1 582 9 view .LVU372
 895              		.loc 1 582 99 is_stmt 0 view .LVU373
 896 0608 C57E6F2C 		vmovdqu	(%rsi,%rcx), %ymm13
 896      0E
 897              		.loc 1 582 54 view .LVU374
 898 060d C57E6F3C 		vmovdqu	(%rax,%rcx), %ymm15
 898      08
 899              		.loc 1 582 99 view .LVU375
 900 0612 C515F3F1 		vpsllq	%xmm1, %ymm13, %ymm14
 901              		.loc 1 582 54 view .LVU376
 902 0616 C585D3F0 		vpsrlq	%xmm0, %ymm15, %ymm6
 903              		.loc 1 582 72 view .LVU377
 904 061a C58DEBD6 		vpor	%ymm6, %ymm14, %ymm2
 905              		.loc 1 582 29 view .LVU378
 906 061e C5FE7F14 		vmovdqu	%ymm2, (%rdx,%rcx)
GAS LISTING /tmp/ccmX4xFB.s 			page 32


 906      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 907              		.loc 1 581 48 is_stmt 1 view .LVU379
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 908              		.loc 1 581 12 view .LVU380
 909 0623 4883C120 		addq	$32, %rcx
 910              	.L194:
 911              		.loc 1 582 9 view .LVU381
 912              		.loc 1 582 99 is_stmt 0 view .LVU382
 913 0627 C5FE6F3C 		vmovdqu	(%rsi,%rcx), %ymm7
 913      0E
 914              		.loc 1 582 54 view .LVU383
 915 062c C5FE6F1C 		vmovdqu	(%rax,%rcx), %ymm3
 915      08
 916              		.loc 1 582 99 view .LVU384
 917 0631 C5C5F3E1 		vpsllq	%xmm1, %ymm7, %ymm4
 918              		.loc 1 582 54 view .LVU385
 919 0635 C5E5D3E8 		vpsrlq	%xmm0, %ymm3, %ymm5
 920              		.loc 1 582 72 view .LVU386
 921 0639 C55DEBC5 		vpor	%ymm5, %ymm4, %ymm8
 922              		.loc 1 582 29 view .LVU387
 923 063d C57E7F04 		vmovdqu	%ymm8, (%rdx,%rcx)
 923      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 924              		.loc 1 581 48 is_stmt 1 view .LVU388
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 925              		.loc 1 581 12 view .LVU389
 926 0642 4883C120 		addq	$32, %rcx
 927 0646 4C39D9   		cmpq	%r11, %rcx
 928 0649 0F842601 		je	.L244
 928      0000
 929              	.L77:
 930              		.loc 1 582 9 discriminator 2 view .LVU390
 931              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU391
 932 064f C57E6F0C 		vmovdqu	(%rsi,%rcx), %ymm9
 932      0E
 933              		.loc 1 582 54 discriminator 2 view .LVU392
 934 0654 C57E6F1C 		vmovdqu	(%rax,%rcx), %ymm11
 934      08
 935              		.loc 1 582 99 discriminator 2 view .LVU393
 936 0659 C535F3D1 		vpsllq	%xmm1, %ymm9, %ymm10
 937              		.loc 1 582 54 discriminator 2 view .LVU394
 938 065d C525D3E0 		vpsrlq	%xmm0, %ymm11, %ymm12
 939              		.loc 1 582 72 discriminator 2 view .LVU395
 940 0661 C4412DEB 		vpor	%ymm12, %ymm10, %ymm13
 940      EC
 941              		.loc 1 582 29 discriminator 2 view .LVU396
 942 0666 C57E7F2C 		vmovdqu	%ymm13, (%rdx,%rcx)
 942      0A
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 943              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU397
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 944              		.loc 1 581 12 discriminator 2 view .LVU398
 945              		.loc 1 582 9 discriminator 2 view .LVU399
 946              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU400
 947 066b C57E6F74 		vmovdqu	32(%rsi,%rcx), %ymm14
 947      0E20
GAS LISTING /tmp/ccmX4xFB.s 			page 33


 948              		.loc 1 582 54 discriminator 2 view .LVU401
 949 0671 C5FE6F74 		vmovdqu	32(%rax,%rcx), %ymm6
 949      0820
 950              		.loc 1 582 99 discriminator 2 view .LVU402
 951 0677 C50DF3F9 		vpsllq	%xmm1, %ymm14, %ymm15
 952              		.loc 1 582 54 discriminator 2 view .LVU403
 953 067b C5CDD3D0 		vpsrlq	%xmm0, %ymm6, %ymm2
 954              		.loc 1 582 72 discriminator 2 view .LVU404
 955 067f C585EBFA 		vpor	%ymm2, %ymm15, %ymm7
 956              		.loc 1 582 29 discriminator 2 view .LVU405
 957 0683 C5FE7F7C 		vmovdqu	%ymm7, 32(%rdx,%rcx)
 957      0A20
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 958              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU406
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 959              		.loc 1 581 12 discriminator 2 view .LVU407
 960              		.loc 1 582 9 discriminator 2 view .LVU408
 961              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU409
 962 0689 C5FE6F64 		vmovdqu	64(%rsi,%rcx), %ymm4
 962      0E40
 963              		.loc 1 582 54 discriminator 2 view .LVU410
 964 068f C5FE6F5C 		vmovdqu	64(%rax,%rcx), %ymm3
 964      0840
 965              		.loc 1 582 99 discriminator 2 view .LVU411
 966 0695 C5DDF3E9 		vpsllq	%xmm1, %ymm4, %ymm5
 967              		.loc 1 582 54 discriminator 2 view .LVU412
 968 0699 C565D3C0 		vpsrlq	%xmm0, %ymm3, %ymm8
 969              		.loc 1 582 72 discriminator 2 view .LVU413
 970 069d C44155EB 		vpor	%ymm8, %ymm5, %ymm9
 970      C8
 971              		.loc 1 582 29 discriminator 2 view .LVU414
 972 06a2 C57E7F4C 		vmovdqu	%ymm9, 64(%rdx,%rcx)
 972      0A40
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 973              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU415
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 974              		.loc 1 581 12 discriminator 2 view .LVU416
 975              		.loc 1 582 9 discriminator 2 view .LVU417
 976              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU418
 977 06a8 C57E6F54 		vmovdqu	96(%rsi,%rcx), %ymm10
 977      0E60
 978              		.loc 1 582 54 discriminator 2 view .LVU419
 979 06ae C57E6F64 		vmovdqu	96(%rax,%rcx), %ymm12
 979      0860
 980              		.loc 1 582 99 discriminator 2 view .LVU420
 981 06b4 C52DF3D9 		vpsllq	%xmm1, %ymm10, %ymm11
 982              		.loc 1 582 54 discriminator 2 view .LVU421
 983 06b8 C51DD3E8 		vpsrlq	%xmm0, %ymm12, %ymm13
 984              		.loc 1 582 72 discriminator 2 view .LVU422
 985 06bc C44125EB 		vpor	%ymm13, %ymm11, %ymm14
 985      F5
 986              		.loc 1 582 29 discriminator 2 view .LVU423
 987 06c1 C57E7F74 		vmovdqu	%ymm14, 96(%rdx,%rcx)
 987      0A60
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 988              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU424
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccmX4xFB.s 			page 34


 989              		.loc 1 581 12 discriminator 2 view .LVU425
 990              		.loc 1 582 9 discriminator 2 view .LVU426
 991              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU427
 992 06c7 C57E6FBC 		vmovdqu	128(%rsi,%rcx), %ymm15
 992      0E800000 
 992      00
 993              		.loc 1 582 54 discriminator 2 view .LVU428
 994 06d0 C5FE6F94 		vmovdqu	128(%rax,%rcx), %ymm2
 994      08800000 
 994      00
 995              		.loc 1 582 99 discriminator 2 view .LVU429
 996 06d9 C585F3F1 		vpsllq	%xmm1, %ymm15, %ymm6
 997              		.loc 1 582 54 discriminator 2 view .LVU430
 998 06dd C5EDD3F8 		vpsrlq	%xmm0, %ymm2, %ymm7
 999              		.loc 1 582 72 discriminator 2 view .LVU431
 1000 06e1 C5CDEBE7 		vpor	%ymm7, %ymm6, %ymm4
 1001              		.loc 1 582 29 discriminator 2 view .LVU432
 1002 06e5 C5FE7FA4 		vmovdqu	%ymm4, 128(%rdx,%rcx)
 1002      0A800000 
 1002      00
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1003              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU433
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1004              		.loc 1 581 12 discriminator 2 view .LVU434
 1005              		.loc 1 582 9 discriminator 2 view .LVU435
 1006              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU436
 1007 06ee C5FE6FAC 		vmovdqu	160(%rsi,%rcx), %ymm5
 1007      0EA00000 
 1007      00
 1008              		.loc 1 582 54 discriminator 2 view .LVU437
 1009 06f7 C5FE6F9C 		vmovdqu	160(%rax,%rcx), %ymm3
 1009      08A00000 
 1009      00
 1010              		.loc 1 582 99 discriminator 2 view .LVU438
 1011 0700 C555F3C1 		vpsllq	%xmm1, %ymm5, %ymm8
 1012              		.loc 1 582 54 discriminator 2 view .LVU439
 1013 0704 C565D3C8 		vpsrlq	%xmm0, %ymm3, %ymm9
 1014              		.loc 1 582 72 discriminator 2 view .LVU440
 1015 0708 C4413DEB 		vpor	%ymm9, %ymm8, %ymm10
 1015      D1
 1016              		.loc 1 582 29 discriminator 2 view .LVU441
 1017 070d C57E7F94 		vmovdqu	%ymm10, 160(%rdx,%rcx)
 1017      0AA00000 
 1017      00
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1018              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU442
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1019              		.loc 1 581 12 discriminator 2 view .LVU443
 1020              		.loc 1 582 9 discriminator 2 view .LVU444
 1021              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU445
 1022 0716 C57E6F9C 		vmovdqu	192(%rsi,%rcx), %ymm11
 1022      0EC00000 
 1022      00
 1023              		.loc 1 582 54 discriminator 2 view .LVU446
 1024 071f C57E6FAC 		vmovdqu	192(%rax,%rcx), %ymm13
 1024      08C00000 
 1024      00
GAS LISTING /tmp/ccmX4xFB.s 			page 35


 1025              		.loc 1 582 99 discriminator 2 view .LVU447
 1026 0728 C525F3E1 		vpsllq	%xmm1, %ymm11, %ymm12
 1027              		.loc 1 582 54 discriminator 2 view .LVU448
 1028 072c C515D3F0 		vpsrlq	%xmm0, %ymm13, %ymm14
 1029              		.loc 1 582 72 discriminator 2 view .LVU449
 1030 0730 C4411DEB 		vpor	%ymm14, %ymm12, %ymm15
 1030      FE
 1031              		.loc 1 582 29 discriminator 2 view .LVU450
 1032 0735 C57E7FBC 		vmovdqu	%ymm15, 192(%rdx,%rcx)
 1032      0AC00000 
 1032      00
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1033              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU451
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1034              		.loc 1 581 12 discriminator 2 view .LVU452
 1035              		.loc 1 582 9 discriminator 2 view .LVU453
 1036              		.loc 1 582 99 is_stmt 0 discriminator 2 view .LVU454
 1037 073e C5FE6FB4 		vmovdqu	224(%rsi,%rcx), %ymm6
 1037      0EE00000 
 1037      00
 1038              		.loc 1 582 54 discriminator 2 view .LVU455
 1039 0747 C5FE6FBC 		vmovdqu	224(%rax,%rcx), %ymm7
 1039      08E00000 
 1039      00
 1040              		.loc 1 582 99 discriminator 2 view .LVU456
 1041 0750 C5CDF3D1 		vpsllq	%xmm1, %ymm6, %ymm2
 1042              		.loc 1 582 54 discriminator 2 view .LVU457
 1043 0754 C5C5D3E0 		vpsrlq	%xmm0, %ymm7, %ymm4
 1044              		.loc 1 582 72 discriminator 2 view .LVU458
 1045 0758 C5EDEBEC 		vpor	%ymm4, %ymm2, %ymm5
 1046              		.loc 1 582 29 discriminator 2 view .LVU459
 1047 075c C5FE7FAC 		vmovdqu	%ymm5, 224(%rdx,%rcx)
 1047      0AE00000 
 1047      00
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1048              		.loc 1 581 48 is_stmt 1 discriminator 2 view .LVU460
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1049              		.loc 1 581 12 discriminator 2 view .LVU461
 1050 0765 4881C100 		addq	$256, %rcx
 1050      010000
 1051 076c 4C39D9   		cmpq	%r11, %rcx
 1052 076f 0F85DAFE 		jne	.L77
 1052      FFFF
 1053              	.L244:
 1054 0775 488B7424 		movq	-32(%rsp), %rsi
 1054      E0
 1055 077a 4C89D2   		movq	%r10, %rdx
 1056 077d 4883E2FC 		andq	$-4, %rdx
 1057 0781 4901D6   		addq	%rdx, %r14
 1058 0784 4801D6   		addq	%rdx, %rsi
 1059 0787 4C39D2   		cmpq	%r10, %rdx
 1060 078a 0F845006 		je	.L257
 1060      0000
 1061              	.LVL65:
 1062              		.loc 1 582 9 view .LVU462
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1063              		.loc 1 581 5 is_stmt 0 view .LVU463
GAS LISTING /tmp/ccmX4xFB.s 			page 36


 1064 0790 4C8B4424 		movq	-8(%rsp), %r8
 1064      F8
 1065              		.loc 1 582 99 view .LVU464
 1066 0795 C4E2B1F7 		shlx	%r9, 8(%rdi,%rsi,8), %rax
 1066      44F708
 1067              		.loc 1 582 54 view .LVU465
 1068 079c C4629BF7 		shrx	%r12, (%rdi,%rsi,8), %r11
 1068      1CF7
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1069              		.loc 1 581 57 view .LVU466
 1070 07a2 498D5601 		leaq	1(%r14), %rdx
 1071              		.loc 1 582 72 view .LVU467
 1072 07a6 4C09D8   		orq	%r11, %rax
 1073 07a9 4A8904F7 		movq	%rax, (%rdi,%r14,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1074              		.loc 1 581 48 is_stmt 1 view .LVU468
 1075              	.LVL66:
 1076              		.loc 1 582 83 is_stmt 0 view .LVU469
 1077 07ad 4C8D5601 		leaq	1(%rsi), %r10
 1078              	.LVL67:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1079              		.loc 1 581 12 is_stmt 1 view .LVU470
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1080              		.loc 1 581 5 is_stmt 0 view .LVU471
 1081 07b1 4939D0   		cmpq	%rdx, %r8
 1082 07b4 0F822606 		jb	.L257
 1082      0000
 1083              		.loc 1 582 9 is_stmt 1 view .LVU472
 1084              		.loc 1 582 54 is_stmt 0 view .LVU473
 1085 07ba 4A8B0CD7 		movq	(%rdi,%r10,8), %rcx
 1086              		.loc 1 582 99 view .LVU474
 1087 07be C4A2B1F7 		shlx	%r9, 8(%rdi,%r10,8), %rax
 1087      44D708
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1088              		.loc 1 581 57 view .LVU475
 1089 07c5 4983C602 		addq	$2, %r14
 1090              		.loc 1 582 54 view .LVU476
 1091 07c9 C4629BF7 		shrx	%r12, %rcx, %r10
 1091      D1
 1092              	.LVL68:
 1093              		.loc 1 582 72 view .LVU477
 1094 07ce 4C09D0   		orq	%r10, %rax
 1095 07d1 488904D7 		movq	%rax, (%rdi,%rdx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1096              		.loc 1 581 48 is_stmt 1 view .LVU478
 1097              	.LVL69:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1098              		.loc 1 581 12 view .LVU479
 1099              		.loc 1 582 83 is_stmt 0 view .LVU480
 1100 07d5 4883C602 		addq	$2, %rsi
 1101              	.LVL70:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1102              		.loc 1 581 5 view .LVU481
 1103 07d9 4D39F0   		cmpq	%r14, %r8
 1104 07dc 0F82FE05 		jb	.L257
 1104      0000
 1105              		.loc 1 582 9 is_stmt 1 view .LVU482
GAS LISTING /tmp/ccmX4xFB.s 			page 37


 1106              		.loc 1 582 99 is_stmt 0 view .LVU483
 1107 07e2 C462B1F7 		shlx	%r9, 8(%rdi,%rsi,8), %r9
 1107      4CF708
 1108              	.LVL71:
 1109              		.loc 1 582 54 view .LVU484
 1110 07e9 488B34F7 		movq	(%rdi,%rsi,8), %rsi
 1111              	.LVL72:
 1112              		.loc 1 582 54 view .LVU485
 1113 07ed C4629BF7 		shrx	%r12, %rsi, %r12
 1113      E6
 1114              		.loc 1 582 72 view .LVU486
 1115 07f2 4D09E1   		orq	%r12, %r9
 1116 07f5 4E890CF7 		movq	%r9, (%rdi,%r14,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1117              		.loc 1 581 48 is_stmt 1 view .LVU487
 1118              	.LVL73:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1119              		.loc 1 581 12 view .LVU488
 1120 07f9 C5F877   		vzeroupper
 1121              	.LVL74:
 1122              	.L81:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1123              		.loc 1 581 12 is_stmt 0 view .LVU489
 1124 07fc 483B5C24 		cmpq	-24(%rsp), %rbx
 1124      E8
 1125 0801 41BE0000 		movl	$0, %r14d
 1125      0000
 1126 0807 4D0F46F5 		cmovbe	%r13, %r14
 1127 080b 4901DE   		addq	%rbx, %r14
 1128              	.L76:
 583:sieve_extend.c ****     }
 584:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1129              		.loc 1 584 5 is_stmt 1 view .LVU490
 1130              		.loc 1 584 25 is_stmt 0 view .LVU491
 1131 080e 4E213CF7 		andq	%r15, (%rdi,%r14,8)
 585:sieve_extend.c **** 
 586:sieve_extend.c **** }
 1132              		.loc 1 586 1 view .LVU492
 1133 0812 488D65D8 		leaq	-40(%rbp), %rsp
 1134 0816 5B       		popq	%rbx
 1135 0817 415C     		popq	%r12
 1136 0819 415D     		popq	%r13
 1137 081b 415E     		popq	%r14
 1138 081d 415F     		popq	%r15
 1139 081f 5D       		popq	%rbp
 1140              		.cfi_remember_state
 1141              		.cfi_def_cfa 7, 8
 1142 0820 C3       		ret
 1143              	.LVL75:
 1144              		.p2align 4,,10
 1145 0821 0F1F8000 		.p2align 3
 1145      000000
 1146              	.L261:
 1147              		.cfi_restore_state
 1148              	.LBB282:
 573:sieve_extend.c ****         #pragma ivdep
 1149              		.loc 1 573 9 is_stmt 1 view .LVU493
GAS LISTING /tmp/ccmX4xFB.s 			page 38


 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1150              		.loc 1 575 9 view .LVU494
 1151              	.LBB283:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1152              		.loc 1 575 14 view .LVU495
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1153              		.loc 1 575 40 view .LVU496
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1154              		.loc 1 575 9 is_stmt 0 view .LVU497
 1155 0828 488B4C24 		movq	-8(%rsp), %rcx
 1155      F8
 1156 082d 488B4424 		movq	-32(%rsp), %rax
 1156      E0
 1157 0832 4C29F1   		subq	%r14, %rcx
 1158 0835 0F844903 		je	.L72
 1158      0000
 1159 083b 4C8B5424 		movq	-24(%rsp), %r10
 1159      E8
 1160 0840 488D4308 		leaq	8(%rbx), %rax
 1161 0844 4D8D6A28 		leaq	40(%r10), %r13
 1162 0848 4C39E8   		cmpq	%r13, %rax
 1163 084b 410F9DC5 		setge	%r13b
 1164 084f 498D5208 		leaq	8(%r10), %rdx
 1165              	.LVL76:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1166              		.loc 1 575 9 view .LVU498
 1167 0853 4883C328 		addq	$40, %rbx
 1168 0857 4839D3   		cmpq	%rdx, %rbx
 1169 085a 410F9EC2 		setle	%r10b
 1170 085e 4509D5   		orl	%r10d, %r13d
 1171 0861 4C8B5424 		movq	-24(%rsp), %r10
 1171      E8
 1172 0866 4983C220 		addq	$32, %r10
 1173 086a 4939C2   		cmpq	%rax, %r10
 1174 086d 410F9EC2 		setle	%r10b
 1175 0871 483B5C24 		cmpq	-24(%rsp), %rbx
 1175      E8
 1176 0876 0F9EC3   		setle	%bl
 1177 0879 4109DA   		orl	%ebx, %r10d
 1178 087c 4584D5   		testb	%r10b, %r13b
 1179 087f 0F846305 		je	.L69
 1179      0000
 1180 0885 4C8D69FF 		leaq	-1(%rcx), %r13
 1181 0889 4983FD03 		cmpq	$3, %r13
 1182 088d 0F865505 		jbe	.L69
 1182      0000
 1183 0893 4889CB   		movq	%rcx, %rbx
 1184 0896 48C1EB02 		shrq	$2, %rbx
 1185 089a 48C1E305 		salq	$5, %rbx
 1186 089e 4C8D53E0 		leaq	-32(%rbx), %r10
 1187 08a2 49C1EA05 		shrq	$5, %r10
 1188 08a6 49FFC2   		incq	%r10
 1189 08a9 C5F96E44 		vmovd	-12(%rsp), %xmm0
 1189      24F4
 1190 08af 4801FA   		addq	%rdi, %rdx
 1191 08b2 4801F8   		addq	%rdi, %rax
 1192 08b5 31F6     		xorl	%esi, %esi
GAS LISTING /tmp/ccmX4xFB.s 			page 39


 1193 08b7 C4C1796E 		vmovd	%r12d, %xmm1
 1193      CC
 1194 08bc 4183E207 		andl	$7, %r10d
 1195 08c0 0F84FD00 		je	.L70
 1195      0000
 1196 08c6 4983FA01 		cmpq	$1, %r10
 1197 08ca 0F84C900 		je	.L182
 1197      0000
 1198 08d0 4983FA02 		cmpq	$2, %r10
 1199 08d4 0F849E00 		je	.L183
 1199      0000
 1200 08da 4983FA03 		cmpq	$3, %r10
 1201 08de 7478     		je	.L184
 1202 08e0 4983FA04 		cmpq	$4, %r10
 1203 08e4 7451     		je	.L185
 1204 08e6 4983FA05 		cmpq	$5, %r10
 1205 08ea 742B     		je	.L186
 1206 08ec 4983FA06 		cmpq	$6, %r10
 1207 08f0 0F85F106 		jne	.L262
 1207      0000
 1208              	.LVL77:
 1209              	.L187:
 576:sieve_extend.c ****         }
 1210              		.loc 1 576 13 is_stmt 1 view .LVU499
 576:sieve_extend.c ****         }
 1211              		.loc 1 576 62 is_stmt 0 view .LVU500
 1212 08f6 C4417E6F 		vmovdqu	(%r11,%rsi), %ymm12
 1212      2433
 576:sieve_extend.c ****         }
 1213              		.loc 1 576 109 view .LVU501
 1214 08fc C57E6F34 		vmovdqu	(%rdx,%rsi), %ymm14
 1214      32
 576:sieve_extend.c ****         }
 1215              		.loc 1 576 62 view .LVU502
 1216 0901 C51DD3E9 		vpsrlq	%xmm1, %ymm12, %ymm13
 576:sieve_extend.c ****         }
 1217              		.loc 1 576 109 view .LVU503
 1218 0905 C50DF3F8 		vpsllq	%xmm0, %ymm14, %ymm15
 576:sieve_extend.c ****         }
 1219              		.loc 1 576 80 view .LVU504
 1220 0909 C4C115EB 		vpor	%ymm15, %ymm13, %ymm6
 1220      F7
 576:sieve_extend.c ****         }
 1221              		.loc 1 576 35 view .LVU505
 1222 090e C5FE7F34 		vmovdqu	%ymm6, (%rax,%rsi)
 1222      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1223              		.loc 1 575 58 is_stmt 1 view .LVU506
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1224              		.loc 1 575 40 view .LVU507
 1225 0913 4883C620 		addq	$32, %rsi
 1226              	.L186:
 576:sieve_extend.c ****         }
 1227              		.loc 1 576 13 view .LVU508
 576:sieve_extend.c ****         }
 1228              		.loc 1 576 62 is_stmt 0 view .LVU509
 1229 0917 C4C17E6F 		vmovdqu	(%r11,%rsi), %ymm2
GAS LISTING /tmp/ccmX4xFB.s 			page 40


 1229      1433
 576:sieve_extend.c ****         }
 1230              		.loc 1 576 109 view .LVU510
 1231 091d C5FE6F24 		vmovdqu	(%rdx,%rsi), %ymm4
 1231      32
 576:sieve_extend.c ****         }
 1232              		.loc 1 576 62 view .LVU511
 1233 0922 C5EDD3F9 		vpsrlq	%xmm1, %ymm2, %ymm7
 576:sieve_extend.c ****         }
 1234              		.loc 1 576 109 view .LVU512
 1235 0926 C5DDF3E8 		vpsllq	%xmm0, %ymm4, %ymm5
 576:sieve_extend.c ****         }
 1236              		.loc 1 576 80 view .LVU513
 1237 092a C545EBC5 		vpor	%ymm5, %ymm7, %ymm8
 576:sieve_extend.c ****         }
 1238              		.loc 1 576 35 view .LVU514
 1239 092e C57E7F04 		vmovdqu	%ymm8, (%rax,%rsi)
 1239      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1240              		.loc 1 575 58 is_stmt 1 view .LVU515
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1241              		.loc 1 575 40 view .LVU516
 1242 0933 4883C620 		addq	$32, %rsi
 1243              	.L185:
 576:sieve_extend.c ****         }
 1244              		.loc 1 576 13 view .LVU517
 576:sieve_extend.c ****         }
 1245              		.loc 1 576 62 is_stmt 0 view .LVU518
 1246 0937 C4417E6F 		vmovdqu	(%r11,%rsi), %ymm9
 1246      0C33
 576:sieve_extend.c ****         }
 1247              		.loc 1 576 109 view .LVU519
 1248 093d C5FE6F1C 		vmovdqu	(%rdx,%rsi), %ymm3
 1248      32
 576:sieve_extend.c ****         }
 1249              		.loc 1 576 62 view .LVU520
 1250 0942 C535D3D1 		vpsrlq	%xmm1, %ymm9, %ymm10
 576:sieve_extend.c ****         }
 1251              		.loc 1 576 109 view .LVU521
 1252 0946 C565F3D8 		vpsllq	%xmm0, %ymm3, %ymm11
 576:sieve_extend.c ****         }
 1253              		.loc 1 576 80 view .LVU522
 1254 094a C4412DEB 		vpor	%ymm11, %ymm10, %ymm12
 1254      E3
 576:sieve_extend.c ****         }
 1255              		.loc 1 576 35 view .LVU523
 1256 094f C57E7F24 		vmovdqu	%ymm12, (%rax,%rsi)
 1256      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1257              		.loc 1 575 58 is_stmt 1 view .LVU524
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1258              		.loc 1 575 40 view .LVU525
 1259 0954 4883C620 		addq	$32, %rsi
 1260              	.L184:
 576:sieve_extend.c ****         }
 1261              		.loc 1 576 13 view .LVU526
 576:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 41


 1262              		.loc 1 576 62 is_stmt 0 view .LVU527
 1263 0958 C4417E6F 		vmovdqu	(%r11,%rsi), %ymm13
 1263      2C33
 576:sieve_extend.c ****         }
 1264              		.loc 1 576 109 view .LVU528
 1265 095e C57E6F3C 		vmovdqu	(%rdx,%rsi), %ymm15
 1265      32
 576:sieve_extend.c ****         }
 1266              		.loc 1 576 62 view .LVU529
 1267 0963 C515D3F1 		vpsrlq	%xmm1, %ymm13, %ymm14
 576:sieve_extend.c ****         }
 1268              		.loc 1 576 109 view .LVU530
 1269 0967 C585F3F0 		vpsllq	%xmm0, %ymm15, %ymm6
 576:sieve_extend.c ****         }
 1270              		.loc 1 576 80 view .LVU531
 1271 096b C58DEBD6 		vpor	%ymm6, %ymm14, %ymm2
 576:sieve_extend.c ****         }
 1272              		.loc 1 576 35 view .LVU532
 1273 096f C5FE7F14 		vmovdqu	%ymm2, (%rax,%rsi)
 1273      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1274              		.loc 1 575 58 is_stmt 1 view .LVU533
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1275              		.loc 1 575 40 view .LVU534
 1276 0974 4883C620 		addq	$32, %rsi
 1277              	.L183:
 576:sieve_extend.c ****         }
 1278              		.loc 1 576 13 view .LVU535
 576:sieve_extend.c ****         }
 1279              		.loc 1 576 62 is_stmt 0 view .LVU536
 1280 0978 C4C17E6F 		vmovdqu	(%r11,%rsi), %ymm7
 1280      3C33
 576:sieve_extend.c ****         }
 1281              		.loc 1 576 109 view .LVU537
 1282 097e C5FE6F2C 		vmovdqu	(%rdx,%rsi), %ymm5
 1282      32
 576:sieve_extend.c ****         }
 1283              		.loc 1 576 62 view .LVU538
 1284 0983 C5C5D3E1 		vpsrlq	%xmm1, %ymm7, %ymm4
 576:sieve_extend.c ****         }
 1285              		.loc 1 576 109 view .LVU539
 1286 0987 C555F3C0 		vpsllq	%xmm0, %ymm5, %ymm8
 576:sieve_extend.c ****         }
 1287              		.loc 1 576 80 view .LVU540
 1288 098b C4415DEB 		vpor	%ymm8, %ymm4, %ymm9
 1288      C8
 576:sieve_extend.c ****         }
 1289              		.loc 1 576 35 view .LVU541
 1290 0990 C57E7F0C 		vmovdqu	%ymm9, (%rax,%rsi)
 1290      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1291              		.loc 1 575 58 is_stmt 1 view .LVU542
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1292              		.loc 1 575 40 view .LVU543
 1293 0995 4883C620 		addq	$32, %rsi
 1294              	.L182:
 576:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 42


 1295              		.loc 1 576 13 view .LVU544
 576:sieve_extend.c ****         }
 1296              		.loc 1 576 62 is_stmt 0 view .LVU545
 1297 0999 C4417E6F 		vmovdqu	(%r11,%rsi), %ymm10
 1297      1433
 576:sieve_extend.c ****         }
 1298              		.loc 1 576 109 view .LVU546
 1299 099f C5FE6F1C 		vmovdqu	(%rdx,%rsi), %ymm3
 1299      32
 576:sieve_extend.c ****         }
 1300              		.loc 1 576 62 view .LVU547
 1301 09a4 C52DD3D9 		vpsrlq	%xmm1, %ymm10, %ymm11
 576:sieve_extend.c ****         }
 1302              		.loc 1 576 109 view .LVU548
 1303 09a8 C565F3E0 		vpsllq	%xmm0, %ymm3, %ymm12
 576:sieve_extend.c ****         }
 1304              		.loc 1 576 80 view .LVU549
 1305 09ac C44125EB 		vpor	%ymm12, %ymm11, %ymm13
 1305      EC
 576:sieve_extend.c ****         }
 1306              		.loc 1 576 35 view .LVU550
 1307 09b1 C57E7F2C 		vmovdqu	%ymm13, (%rax,%rsi)
 1307      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1308              		.loc 1 575 58 is_stmt 1 view .LVU551
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1309              		.loc 1 575 40 view .LVU552
 1310 09b6 4883C620 		addq	$32, %rsi
 1311 09ba 4839DE   		cmpq	%rbx, %rsi
 1312 09bd 0F842E01 		je	.L243
 1312      0000
 1313              	.L70:
 576:sieve_extend.c ****         }
 1314              		.loc 1 576 13 discriminator 3 view .LVU553
 576:sieve_extend.c ****         }
 1315              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU554
 1316 09c3 C4417E6F 		vmovdqu	(%r11,%rsi), %ymm14
 1316      3433
 576:sieve_extend.c ****         }
 1317              		.loc 1 576 109 discriminator 3 view .LVU555
 1318 09c9 C5FE6F34 		vmovdqu	(%rdx,%rsi), %ymm6
 1318      32
 576:sieve_extend.c ****         }
 1319              		.loc 1 576 62 discriminator 3 view .LVU556
 1320 09ce C50DD3F9 		vpsrlq	%xmm1, %ymm14, %ymm15
 576:sieve_extend.c ****         }
 1321              		.loc 1 576 109 discriminator 3 view .LVU557
 1322 09d2 C5CDF3D0 		vpsllq	%xmm0, %ymm6, %ymm2
 576:sieve_extend.c ****         }
 1323              		.loc 1 576 80 discriminator 3 view .LVU558
 1324 09d6 C585EBFA 		vpor	%ymm2, %ymm15, %ymm7
 576:sieve_extend.c ****         }
 1325              		.loc 1 576 35 discriminator 3 view .LVU559
 1326 09da C5FE7F3C 		vmovdqu	%ymm7, (%rax,%rsi)
 1326      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1327              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU560
GAS LISTING /tmp/ccmX4xFB.s 			page 43


 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1328              		.loc 1 575 40 discriminator 3 view .LVU561
 576:sieve_extend.c ****         }
 1329              		.loc 1 576 13 discriminator 3 view .LVU562
 576:sieve_extend.c ****         }
 1330              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU563
 1331 09df C4C17E6F 		vmovdqu	32(%r11,%rsi), %ymm4
 1331      643320
 576:sieve_extend.c ****         }
 1332              		.loc 1 576 109 discriminator 3 view .LVU564
 1333 09e6 C5FE6F6C 		vmovdqu	32(%rdx,%rsi), %ymm5
 1333      3220
 576:sieve_extend.c ****         }
 1334              		.loc 1 576 62 discriminator 3 view .LVU565
 1335 09ec C55DD3C1 		vpsrlq	%xmm1, %ymm4, %ymm8
 576:sieve_extend.c ****         }
 1336              		.loc 1 576 109 discriminator 3 view .LVU566
 1337 09f0 C555F3C8 		vpsllq	%xmm0, %ymm5, %ymm9
 576:sieve_extend.c ****         }
 1338              		.loc 1 576 80 discriminator 3 view .LVU567
 1339 09f4 C4413DEB 		vpor	%ymm9, %ymm8, %ymm10
 1339      D1
 576:sieve_extend.c ****         }
 1340              		.loc 1 576 35 discriminator 3 view .LVU568
 1341 09f9 C57E7F54 		vmovdqu	%ymm10, 32(%rax,%rsi)
 1341      3020
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1342              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU569
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1343              		.loc 1 575 40 discriminator 3 view .LVU570
 576:sieve_extend.c ****         }
 1344              		.loc 1 576 13 discriminator 3 view .LVU571
 576:sieve_extend.c ****         }
 1345              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU572
 1346 09ff C4417E6F 		vmovdqu	64(%r11,%rsi), %ymm11
 1346      5C3340
 576:sieve_extend.c ****         }
 1347              		.loc 1 576 109 discriminator 3 view .LVU573
 1348 0a06 C5FE6F5C 		vmovdqu	64(%rdx,%rsi), %ymm3
 1348      3240
 576:sieve_extend.c ****         }
 1349              		.loc 1 576 62 discriminator 3 view .LVU574
 1350 0a0c C525D3E1 		vpsrlq	%xmm1, %ymm11, %ymm12
 576:sieve_extend.c ****         }
 1351              		.loc 1 576 109 discriminator 3 view .LVU575
 1352 0a10 C565F3E8 		vpsllq	%xmm0, %ymm3, %ymm13
 576:sieve_extend.c ****         }
 1353              		.loc 1 576 80 discriminator 3 view .LVU576
 1354 0a14 C4411DEB 		vpor	%ymm13, %ymm12, %ymm14
 1354      F5
 576:sieve_extend.c ****         }
 1355              		.loc 1 576 35 discriminator 3 view .LVU577
 1356 0a19 C57E7F74 		vmovdqu	%ymm14, 64(%rax,%rsi)
 1356      3040
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1357              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU578
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccmX4xFB.s 			page 44


 1358              		.loc 1 575 40 discriminator 3 view .LVU579
 576:sieve_extend.c ****         }
 1359              		.loc 1 576 13 discriminator 3 view .LVU580
 576:sieve_extend.c ****         }
 1360              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU581
 1361 0a1f C4417E6F 		vmovdqu	96(%r11,%rsi), %ymm15
 1361      7C3360
 576:sieve_extend.c ****         }
 1362              		.loc 1 576 109 discriminator 3 view .LVU582
 1363 0a26 C5FE6F54 		vmovdqu	96(%rdx,%rsi), %ymm2
 1363      3260
 576:sieve_extend.c ****         }
 1364              		.loc 1 576 62 discriminator 3 view .LVU583
 1365 0a2c C585D3F1 		vpsrlq	%xmm1, %ymm15, %ymm6
 576:sieve_extend.c ****         }
 1366              		.loc 1 576 109 discriminator 3 view .LVU584
 1367 0a30 C5EDF3F8 		vpsllq	%xmm0, %ymm2, %ymm7
 576:sieve_extend.c ****         }
 1368              		.loc 1 576 80 discriminator 3 view .LVU585
 1369 0a34 C5CDEBE7 		vpor	%ymm7, %ymm6, %ymm4
 576:sieve_extend.c ****         }
 1370              		.loc 1 576 35 discriminator 3 view .LVU586
 1371 0a38 C5FE7F64 		vmovdqu	%ymm4, 96(%rax,%rsi)
 1371      3060
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1372              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU587
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1373              		.loc 1 575 40 discriminator 3 view .LVU588
 576:sieve_extend.c ****         }
 1374              		.loc 1 576 13 discriminator 3 view .LVU589
 576:sieve_extend.c ****         }
 1375              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU590
 1376 0a3e C4417E6F 		vmovdqu	128(%r11,%rsi), %ymm8
 1376      84338000 
 1376      0000
 576:sieve_extend.c ****         }
 1377              		.loc 1 576 109 discriminator 3 view .LVU591
 1378 0a48 C57E6F8C 		vmovdqu	128(%rdx,%rsi), %ymm9
 1378      32800000 
 1378      00
 576:sieve_extend.c ****         }
 1379              		.loc 1 576 62 discriminator 3 view .LVU592
 1380 0a51 C5BDD3E9 		vpsrlq	%xmm1, %ymm8, %ymm5
 576:sieve_extend.c ****         }
 1381              		.loc 1 576 109 discriminator 3 view .LVU593
 1382 0a55 C535F3D0 		vpsllq	%xmm0, %ymm9, %ymm10
 576:sieve_extend.c ****         }
 1383              		.loc 1 576 80 discriminator 3 view .LVU594
 1384 0a59 C44155EB 		vpor	%ymm10, %ymm5, %ymm11
 1384      DA
 576:sieve_extend.c ****         }
 1385              		.loc 1 576 35 discriminator 3 view .LVU595
 1386 0a5e C57E7F9C 		vmovdqu	%ymm11, 128(%rax,%rsi)
 1386      30800000 
 1386      00
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1387              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU596
GAS LISTING /tmp/ccmX4xFB.s 			page 45


 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1388              		.loc 1 575 40 discriminator 3 view .LVU597
 576:sieve_extend.c ****         }
 1389              		.loc 1 576 13 discriminator 3 view .LVU598
 576:sieve_extend.c ****         }
 1390              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU599
 1391 0a67 C4417E6F 		vmovdqu	160(%r11,%rsi), %ymm12
 1391      A433A000 
 1391      0000
 576:sieve_extend.c ****         }
 1392              		.loc 1 576 109 discriminator 3 view .LVU600
 1393 0a71 C5FE6F9C 		vmovdqu	160(%rdx,%rsi), %ymm3
 1393      32A00000 
 1393      00
 576:sieve_extend.c ****         }
 1394              		.loc 1 576 62 discriminator 3 view .LVU601
 1395 0a7a C51DD3E9 		vpsrlq	%xmm1, %ymm12, %ymm13
 576:sieve_extend.c ****         }
 1396              		.loc 1 576 109 discriminator 3 view .LVU602
 1397 0a7e C565F3F0 		vpsllq	%xmm0, %ymm3, %ymm14
 576:sieve_extend.c ****         }
 1398              		.loc 1 576 80 discriminator 3 view .LVU603
 1399 0a82 C44115EB 		vpor	%ymm14, %ymm13, %ymm15
 1399      FE
 576:sieve_extend.c ****         }
 1400              		.loc 1 576 35 discriminator 3 view .LVU604
 1401 0a87 C57E7FBC 		vmovdqu	%ymm15, 160(%rax,%rsi)
 1401      30A00000 
 1401      00
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1402              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU605
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1403              		.loc 1 575 40 discriminator 3 view .LVU606
 576:sieve_extend.c ****         }
 1404              		.loc 1 576 13 discriminator 3 view .LVU607
 576:sieve_extend.c ****         }
 1405              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU608
 1406 0a90 C4C17E6F 		vmovdqu	192(%r11,%rsi), %ymm6
 1406      B433C000 
 1406      0000
 576:sieve_extend.c ****         }
 1407              		.loc 1 576 109 discriminator 3 view .LVU609
 1408 0a9a C5FE6FBC 		vmovdqu	192(%rdx,%rsi), %ymm7
 1408      32C00000 
 1408      00
 576:sieve_extend.c ****         }
 1409              		.loc 1 576 62 discriminator 3 view .LVU610
 1410 0aa3 C5CDD3D1 		vpsrlq	%xmm1, %ymm6, %ymm2
 576:sieve_extend.c ****         }
 1411              		.loc 1 576 109 discriminator 3 view .LVU611
 1412 0aa7 C5C5F3E0 		vpsllq	%xmm0, %ymm7, %ymm4
 576:sieve_extend.c ****         }
 1413              		.loc 1 576 80 discriminator 3 view .LVU612
 1414 0aab C56DEBC4 		vpor	%ymm4, %ymm2, %ymm8
 576:sieve_extend.c ****         }
 1415              		.loc 1 576 35 discriminator 3 view .LVU613
 1416 0aaf C57E7F84 		vmovdqu	%ymm8, 192(%rax,%rsi)
GAS LISTING /tmp/ccmX4xFB.s 			page 46


 1416      30C00000 
 1416      00
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1417              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU614
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1418              		.loc 1 575 40 discriminator 3 view .LVU615
 576:sieve_extend.c ****         }
 1419              		.loc 1 576 13 discriminator 3 view .LVU616
 576:sieve_extend.c ****         }
 1420              		.loc 1 576 62 is_stmt 0 discriminator 3 view .LVU617
 1421 0ab8 C4C17E6F 		vmovdqu	224(%r11,%rsi), %ymm5
 1421      AC33E000 
 1421      0000
 576:sieve_extend.c ****         }
 1422              		.loc 1 576 109 discriminator 3 view .LVU618
 1423 0ac2 C57E6F94 		vmovdqu	224(%rdx,%rsi), %ymm10
 1423      32E00000 
 1423      00
 576:sieve_extend.c ****         }
 1424              		.loc 1 576 62 discriminator 3 view .LVU619
 1425 0acb C555D3C9 		vpsrlq	%xmm1, %ymm5, %ymm9
 576:sieve_extend.c ****         }
 1426              		.loc 1 576 109 discriminator 3 view .LVU620
 1427 0acf C52DF3D8 		vpsllq	%xmm0, %ymm10, %ymm11
 576:sieve_extend.c ****         }
 1428              		.loc 1 576 80 discriminator 3 view .LVU621
 1429 0ad3 C44135EB 		vpor	%ymm11, %ymm9, %ymm12
 1429      E3
 576:sieve_extend.c ****         }
 1430              		.loc 1 576 35 discriminator 3 view .LVU622
 1431 0ad8 C57E7FA4 		vmovdqu	%ymm12, 224(%rax,%rsi)
 1431      30E00000 
 1431      00
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1432              		.loc 1 575 58 is_stmt 1 discriminator 3 view .LVU623
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1433              		.loc 1 575 40 discriminator 3 view .LVU624
 1434 0ae1 4881C600 		addq	$256, %rsi
 1434      010000
 1435 0ae8 4839DE   		cmpq	%rbx, %rsi
 1436 0aeb 0F85D2FE 		jne	.L70
 1436      FFFF
 1437              	.L243:
 1438 0af1 4C8B6C24 		movq	-32(%rsp), %r13
 1438      E0
 1439 0af6 4889CA   		movq	%rcx, %rdx
 1440 0af9 4883E2FC 		andq	$-4, %rdx
 1441 0afd 498D440D 		leaq	0(%r13,%rcx), %rax
 1441      00
 1442 0b02 F6C103   		testb	$3, %cl
 1443 0b05 0F84C502 		je	.L255
 1443      0000
 1444              	.LVL78:
 576:sieve_extend.c ****         }
 1445              		.loc 1 576 13 view .LVU625
 576:sieve_extend.c ****         }
 1446              		.loc 1 576 58 is_stmt 0 view .LVU626
GAS LISTING /tmp/ccmX4xFB.s 			page 47


 1447 0b0b 498D5C15 		leaq	0(%r13,%rdx), %rbx
 1447      00
 576:sieve_extend.c ****         }
 1448              		.loc 1 576 62 view .LVU627
 1449 0b10 4C8B14DF 		movq	(%rdi,%rbx,8), %r10
 576:sieve_extend.c ****         }
 1450              		.loc 1 576 109 view .LVU628
 1451 0b14 C4E2B1F7 		shlx	%r9, 8(%rdi,%rbx,8), %rsi
 1451      74DF08
 576:sieve_extend.c ****         }
 1452              		.loc 1 576 21 view .LVU629
 1453 0b1b 4D8D1C16 		leaq	(%r14,%rdx), %r11
 576:sieve_extend.c ****         }
 1454              		.loc 1 576 62 view .LVU630
 1455 0b1f C4C29BF7 		shrx	%r12, %r10, %rbx
 1455      DA
 576:sieve_extend.c ****         }
 1456              		.loc 1 576 80 view .LVU631
 1457 0b24 4809DE   		orq	%rbx, %rsi
 1458 0b27 4A8934DF 		movq	%rsi, (%rdi,%r11,8)
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1459              		.loc 1 575 58 is_stmt 1 view .LVU632
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1460              		.loc 1 575 59 is_stmt 0 view .LVU633
 1461 0b2b 488D7201 		leaq	1(%rdx), %rsi
 1462              	.LVL79:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1463              		.loc 1 575 40 is_stmt 1 view .LVU634
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1464              		.loc 1 575 9 is_stmt 0 view .LVU635
 1465 0b2f 4839F1   		cmpq	%rsi, %rcx
 1466 0b32 0F869802 		jbe	.L255
 1466      0000
 576:sieve_extend.c ****         }
 1467              		.loc 1 576 13 is_stmt 1 view .LVU636
 576:sieve_extend.c ****         }
 1468              		.loc 1 576 58 is_stmt 0 view .LVU637
 1469 0b38 4D8D5C35 		leaq	0(%r13,%rsi), %r11
 1469      00
 576:sieve_extend.c ****         }
 1470              		.loc 1 576 62 view .LVU638
 1471 0b3d 4A8B1CDF 		movq	(%rdi,%r11,8), %rbx
 576:sieve_extend.c ****         }
 1472              		.loc 1 576 109 view .LVU639
 1473 0b41 C422B1F7 		shlx	%r9, 8(%rdi,%r11,8), %r10
 1473      54DF08
 576:sieve_extend.c ****         }
 1474              		.loc 1 576 21 view .LVU640
 1475 0b48 4C01F6   		addq	%r14, %rsi
 1476              	.LVL80:
 576:sieve_extend.c ****         }
 1477              		.loc 1 576 62 view .LVU641
 1478 0b4b C4629BF7 		shrx	%r12, %rbx, %r11
 1478      DB
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1479              		.loc 1 575 59 view .LVU642
 1480 0b50 4883C202 		addq	$2, %rdx
GAS LISTING /tmp/ccmX4xFB.s 			page 48


 1481              	.LVL81:
 576:sieve_extend.c ****         }
 1482              		.loc 1 576 80 view .LVU643
 1483 0b54 4D09DA   		orq	%r11, %r10
 1484 0b57 4C8914F7 		movq	%r10, (%rdi,%rsi,8)
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1485              		.loc 1 575 58 is_stmt 1 view .LVU644
 1486              	.LVL82:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1487              		.loc 1 575 40 view .LVU645
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1488              		.loc 1 575 9 is_stmt 0 view .LVU646
 1489 0b5b 4839D1   		cmpq	%rdx, %rcx
 1490 0b5e 0F866C02 		jbe	.L255
 1490      0000
 576:sieve_extend.c ****         }
 1491              		.loc 1 576 13 is_stmt 1 view .LVU647
 576:sieve_extend.c ****         }
 1492              		.loc 1 576 58 is_stmt 0 view .LVU648
 1493 0b64 4901D5   		addq	%rdx, %r13
 576:sieve_extend.c ****         }
 1494              		.loc 1 576 21 view .LVU649
 1495 0b67 4C01F2   		addq	%r14, %rdx
 576:sieve_extend.c ****         }
 1496              		.loc 1 576 109 view .LVU650
 1497 0b6a C422B1F7 		shlx	%r9, 8(%rdi,%r13,8), %r14
 1497      74EF08
 1498              	.LVL83:
 576:sieve_extend.c ****         }
 1499              		.loc 1 576 62 view .LVU651
 1500 0b71 4E8B0CEF 		movq	(%rdi,%r13,8), %r9
 1501              	.LVL84:
 576:sieve_extend.c ****         }
 1502              		.loc 1 576 62 view .LVU652
 1503 0b75 C4429BF7 		shrx	%r12, %r9, %r12
 1503      E1
 576:sieve_extend.c ****         }
 1504              		.loc 1 576 80 view .LVU653
 1505 0b7a 4D09E6   		orq	%r12, %r14
 1506 0b7d 4C8934D7 		movq	%r14, (%rdi,%rdx,8)
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1507              		.loc 1 575 58 is_stmt 1 view .LVU654
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1508              		.loc 1 575 40 view .LVU655
 1509 0b81 C5F877   		vzeroupper
 1510              	.L72:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1511              		.loc 1 575 40 is_stmt 0 view .LVU656
 1512              	.LBE283:
 578:sieve_extend.c ****     }
 1513              		.loc 1 578 9 is_stmt 1 view .LVU657
 578:sieve_extend.c ****     }
 1514              		.loc 1 578 39 view .LVU658
 1515              	.LVL85:
 578:sieve_extend.c ****     }
 1516              		.loc 1 578 39 is_stmt 0 view .LVU659
 1517              	.LBE282:
GAS LISTING /tmp/ccmX4xFB.s 			page 49


 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1518              		.loc 1 581 12 is_stmt 1 view .LVU660
 1519 0b84 4C8B7424 		movq	-8(%rsp), %r14
 1519      F8
 1520 0b89 48C1E003 		salq	$3, %rax
 1521              	.LVL86:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1522              		.loc 1 581 12 is_stmt 0 view .LVU661
 1523 0b8d 498D5E01 		leaq	1(%r14), %rbx
 1524 0b91 48895C24 		movq	%rbx, -24(%rsp)
 1524      E8
 1525              	.LBB285:
 578:sieve_extend.c ****     }
 1526              		.loc 1 578 21 view .LVU662
 1527 0b96 4531ED   		xorl	%r13d, %r13d
 1528              	.LVL87:
 1529              	.L68:
 578:sieve_extend.c ****     }
 1530              		.loc 1 578 21 view .LVU663
 1531 0b99 4C8B5C24 		movq	-8(%rsp), %r11
 1531      F8
 1532              	.LBE285:
 582:sieve_extend.c ****     }
 1533              		.loc 1 582 99 view .LVU664
 1534 0b9e 0FB64C24 		movzbl	-12(%rsp), %ecx
 1534      F4
 1535 0ba3 4801F8   		addq	%rdi, %rax
 1536 0ba6 4C89DE   		movq	%r11, %rsi
 1537 0ba9 C462F1F7 		shlx	%rcx, 8(%rax), %r9
 1537      4808
 582:sieve_extend.c ****     }
 1538              		.loc 1 582 54 view .LVU665
 1539 0baf C462BBF7 		shrx	%r8, (%rax), %r10
 1539      10
 1540 0bb4 4C29F6   		subq	%r14, %rsi
 582:sieve_extend.c ****     }
 1541              		.loc 1 582 72 view .LVU666
 1542 0bb7 4D09D1   		orq	%r10, %r9
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1543              		.loc 1 581 57 view .LVU667
 1544 0bba 498D4E01 		leaq	1(%r14), %rcx
 582:sieve_extend.c ****     }
 1545              		.loc 1 582 72 view .LVU668
 1546 0bbe 4E890CF7 		movq	%r9, (%rdi,%r14,8)
 1547 0bc2 83E607   		andl	$7, %esi
 1548              	.LVL88:
 582:sieve_extend.c ****     }
 1549              		.loc 1 582 9 is_stmt 1 view .LVU669
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1550              		.loc 1 581 48 view .LVU670
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1551              		.loc 1 581 12 view .LVU671
 1552 0bc5 4C8D5008 		leaq	8(%rax), %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1553              		.loc 1 581 5 is_stmt 0 view .LVU672
 1554 0bc9 4939CB   		cmpq	%rcx, %r11
 1555 0bcc 0F822AFC 		jb	.L81
GAS LISTING /tmp/ccmX4xFB.s 			page 50


 1555      FFFF
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1556              		.loc 1 581 5 view .LVU673
 1557 0bd2 4885F6   		testq	%rsi, %rsi
 1558 0bd5 0F841501 		je	.L249
 1558      0000
 1559 0bdb 4883FE01 		cmpq	$1, %rsi
 1560 0bdf 0F84E100 		je	.L201
 1560      0000
 1561 0be5 4883FE02 		cmpq	$2, %rsi
 1562 0be9 0F84B900 		je	.L202
 1562      0000
 1563 0bef 4883FE03 		cmpq	$3, %rsi
 1564 0bf3 0F849000 		je	.L203
 1564      0000
 1565 0bf9 4883FE04 		cmpq	$4, %rsi
 1566 0bfd 746C     		je	.L204
 1567 0bff 4883FE05 		cmpq	$5, %rsi
 1568 0c03 7447     		je	.L205
 1569 0c05 4883FE06 		cmpq	$6, %rsi
 1570 0c09 7423     		je	.L206
 582:sieve_extend.c ****     }
 1571              		.loc 1 582 9 is_stmt 1 view .LVU674
 582:sieve_extend.c ****     }
 1572              		.loc 1 582 54 is_stmt 0 view .LVU675
 1573 0c0b 498B12   		movq	(%r10), %rdx
 582:sieve_extend.c ****     }
 1574              		.loc 1 582 99 view .LVU676
 1575 0c0e 440FB664 		movzbl	-12(%rsp), %r12d
 1575      24F4
 582:sieve_extend.c ****     }
 1576              		.loc 1 582 54 view .LVU677
 1577 0c14 C4E2BBF7 		shrx	%r8, %rdx, %rsi
 1577      F2
 582:sieve_extend.c ****     }
 1578              		.loc 1 582 99 view .LVU678
 1579 0c19 C44299F7 		shlx	%r12, 8(%r10), %r11
 1579      5A08
 582:sieve_extend.c ****     }
 1580              		.loc 1 582 72 view .LVU679
 1581 0c1f 4C09DE   		orq	%r11, %rsi
 1582 0c22 488934CF 		movq	%rsi, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1583              		.loc 1 581 48 is_stmt 1 view .LVU680
 1584 0c26 4C8D5010 		leaq	16(%rax), %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1585              		.loc 1 581 57 is_stmt 0 view .LVU681
 1586 0c2a 498D4E02 		leaq	2(%r14), %rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1587              		.loc 1 581 12 is_stmt 1 view .LVU682
 1588              	.L206:
 582:sieve_extend.c ****     }
 1589              		.loc 1 582 9 view .LVU683
 582:sieve_extend.c ****     }
 1590              		.loc 1 582 99 is_stmt 0 view .LVU684
 1591 0c2e 0FB64424 		movzbl	-12(%rsp), %eax
 1591      F4
GAS LISTING /tmp/ccmX4xFB.s 			page 51


 582:sieve_extend.c ****     }
 1592              		.loc 1 582 54 view .LVU685
 1593 0c33 C442BBF7 		shrx	%r8, (%r10), %r9
 1593      0A
 582:sieve_extend.c ****     }
 1594              		.loc 1 582 99 view .LVU686
 1595 0c38 C442F9F7 		shlx	%rax, 8(%r10), %r14
 1595      7208
 1596              	.LVL89:
 582:sieve_extend.c ****     }
 1597              		.loc 1 582 72 view .LVU687
 1598 0c3e 4D09CE   		orq	%r9, %r14
 1599 0c41 4C8934CF 		movq	%r14, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1600              		.loc 1 581 48 is_stmt 1 view .LVU688
 1601 0c45 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1602              		.loc 1 581 57 is_stmt 0 view .LVU689
 1603 0c49 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1604              		.loc 1 581 12 is_stmt 1 view .LVU690
 1605              	.L205:
 582:sieve_extend.c ****     }
 1606              		.loc 1 582 9 view .LVU691
 582:sieve_extend.c ****     }
 1607              		.loc 1 582 99 is_stmt 0 view .LVU692
 1608 0c4c 440FB664 		movzbl	-12(%rsp), %r12d
 1608      24F4
 582:sieve_extend.c ****     }
 1609              		.loc 1 582 54 view .LVU693
 1610 0c52 C4C2BBF7 		shrx	%r8, (%r10), %rdx
 1610      12
 582:sieve_extend.c ****     }
 1611              		.loc 1 582 99 view .LVU694
 1612 0c57 C44299F7 		shlx	%r12, 8(%r10), %r11
 1612      5A08
 582:sieve_extend.c ****     }
 1613              		.loc 1 582 72 view .LVU695
 1614 0c5d 4909D3   		orq	%rdx, %r11
 1615 0c60 4C891CCF 		movq	%r11, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 581 48 is_stmt 1 view .LVU696
 1617 0c64 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1618              		.loc 1 581 57 is_stmt 0 view .LVU697
 1619 0c68 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1620              		.loc 1 581 12 is_stmt 1 view .LVU698
 1621              	.L204:
 582:sieve_extend.c ****     }
 1622              		.loc 1 582 9 view .LVU699
 582:sieve_extend.c ****     }
 1623              		.loc 1 582 99 is_stmt 0 view .LVU700
 1624 0c6b 0FB67424 		movzbl	-12(%rsp), %esi
 1624      F4
 582:sieve_extend.c ****     }
 1625              		.loc 1 582 54 view .LVU701
GAS LISTING /tmp/ccmX4xFB.s 			page 52


 1626 0c70 C442BBF7 		shrx	%r8, (%r10), %r14
 1626      32
 582:sieve_extend.c ****     }
 1627              		.loc 1 582 99 view .LVU702
 1628 0c75 C4C2C9F7 		shlx	%rsi, 8(%r10), %rax
 1628      4208
 582:sieve_extend.c ****     }
 1629              		.loc 1 582 72 view .LVU703
 1630 0c7b 4C09F0   		orq	%r14, %rax
 1631 0c7e 488904CF 		movq	%rax, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1632              		.loc 1 581 48 is_stmt 1 view .LVU704
 1633 0c82 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1634              		.loc 1 581 57 is_stmt 0 view .LVU705
 1635 0c86 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1636              		.loc 1 581 12 is_stmt 1 view .LVU706
 1637              	.L203:
 582:sieve_extend.c ****     }
 1638              		.loc 1 582 9 view .LVU707
 582:sieve_extend.c ****     }
 1639              		.loc 1 582 99 is_stmt 0 view .LVU708
 1640 0c89 440FB64C 		movzbl	-12(%rsp), %r9d
 1640      24F4
 582:sieve_extend.c ****     }
 1641              		.loc 1 582 54 view .LVU709
 1642 0c8f C442BBF7 		shrx	%r8, (%r10), %r11
 1642      1A
 582:sieve_extend.c ****     }
 1643              		.loc 1 582 99 view .LVU710
 1644 0c94 C442B1F7 		shlx	%r9, 8(%r10), %r12
 1644      6208
 582:sieve_extend.c ****     }
 1645              		.loc 1 582 72 view .LVU711
 1646 0c9a 4D09DC   		orq	%r11, %r12
 1647 0c9d 4C8924CF 		movq	%r12, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1648              		.loc 1 581 48 is_stmt 1 view .LVU712
 1649 0ca1 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1650              		.loc 1 581 57 is_stmt 0 view .LVU713
 1651 0ca5 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1652              		.loc 1 581 12 is_stmt 1 view .LVU714
 1653              	.L202:
 582:sieve_extend.c ****     }
 1654              		.loc 1 582 9 view .LVU715
 582:sieve_extend.c ****     }
 1655              		.loc 1 582 99 is_stmt 0 view .LVU716
 1656 0ca8 0FB65424 		movzbl	-12(%rsp), %edx
 1656      F4
 582:sieve_extend.c ****     }
 1657              		.loc 1 582 54 view .LVU717
 1658 0cad C4C2BBF7 		shrx	%r8, (%r10), %rsi
 1658      32
 582:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 53


 1659              		.loc 1 582 99 view .LVU718
 1660 0cb2 C4C2E9F7 		shlx	%rdx, 8(%r10), %rax
 1660      4208
 582:sieve_extend.c ****     }
 1661              		.loc 1 582 72 view .LVU719
 1662 0cb8 4809F0   		orq	%rsi, %rax
 1663 0cbb 488904CF 		movq	%rax, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1664              		.loc 1 581 48 is_stmt 1 view .LVU720
 1665 0cbf 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1666              		.loc 1 581 57 is_stmt 0 view .LVU721
 1667 0cc3 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1668              		.loc 1 581 12 is_stmt 1 view .LVU722
 1669              	.L201:
 582:sieve_extend.c ****     }
 1670              		.loc 1 582 9 view .LVU723
 582:sieve_extend.c ****     }
 1671              		.loc 1 582 99 is_stmt 0 view .LVU724
 1672 0cc6 440FB674 		movzbl	-12(%rsp), %r14d
 1672      24F4
 582:sieve_extend.c ****     }
 1673              		.loc 1 582 54 view .LVU725
 1674 0ccc C442BBF7 		shrx	%r8, (%r10), %r12
 1674      22
 582:sieve_extend.c ****     }
 1675              		.loc 1 582 99 view .LVU726
 1676 0cd1 C44289F7 		shlx	%r14, 8(%r10), %r9
 1676      4A08
 582:sieve_extend.c ****     }
 1677              		.loc 1 582 72 view .LVU727
 1678 0cd7 4D09E1   		orq	%r12, %r9
 1679 0cda 4C890CCF 		movq	%r9, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1680              		.loc 1 581 48 is_stmt 1 view .LVU728
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1681              		.loc 1 581 57 is_stmt 0 view .LVU729
 1682 0cde 48FFC1   		incq	%rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1683              		.loc 1 581 12 is_stmt 1 view .LVU730
 1684 0ce1 4983C208 		addq	$8, %r10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 581 5 is_stmt 0 view .LVU731
 1686 0ce5 48394C24 		cmpq	%rcx, -8(%rsp)
 1686      F8
 1687 0cea 0F820CFB 		jb	.L81
 1687      FFFF
 1688              	.L249:
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1689              		.loc 1 581 5 view .LVU732
 1690 0cf0 448B5C24 		movl	-12(%rsp), %r11d
 1690      F4
 1691              	.L80:
 582:sieve_extend.c ****     }
 1692              		.loc 1 582 9 is_stmt 1 view .LVU733
 582:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 54


 1693              		.loc 1 582 54 is_stmt 0 view .LVU734
 1694 0cf5 C4C2BBF7 		shrx	%r8, (%r10), %rax
 1694      02
 582:sieve_extend.c ****     }
 1695              		.loc 1 582 99 view .LVU735
 1696 0cfa C4C2A1F7 		shlx	%r11, 8(%r10), %rdx
 1696      5208
 582:sieve_extend.c ****     }
 1697              		.loc 1 582 72 view .LVU736
 1698 0d00 4809C2   		orq	%rax, %rdx
 1699 0d03 488914CF 		movq	%rdx, (%rdi,%rcx,8)
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1700              		.loc 1 581 48 is_stmt 1 view .LVU737
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1701              		.loc 1 581 12 view .LVU738
 582:sieve_extend.c ****     }
 1702              		.loc 1 582 9 view .LVU739
 1703 0d07 4983C240 		addq	$64, %r10
 582:sieve_extend.c ****     }
 1704              		.loc 1 582 54 is_stmt 0 view .LVU740
 1705 0d0b C442BBF7 		shrx	%r8, -56(%r10), %r14
 1705      72C8
 582:sieve_extend.c ****     }
 1706              		.loc 1 582 99 view .LVU741
 1707 0d11 C4C2A1F7 		shlx	%r11, -48(%r10), %rsi
 1707      72D0
 582:sieve_extend.c ****     }
 1708              		.loc 1 582 72 view .LVU742
 1709 0d17 4C09F6   		orq	%r14, %rsi
 1710 0d1a 488974CF 		movq	%rsi, 8(%rdi,%rcx,8)
 1710      08
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1711              		.loc 1 581 48 is_stmt 1 view .LVU743
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1712              		.loc 1 581 12 view .LVU744
 582:sieve_extend.c ****     }
 1713              		.loc 1 582 9 view .LVU745
 582:sieve_extend.c ****     }
 1714              		.loc 1 582 54 is_stmt 0 view .LVU746
 1715 0d1f C442BBF7 		shrx	%r8, -48(%r10), %r9
 1715      4AD0
 582:sieve_extend.c ****     }
 1716              		.loc 1 582 99 view .LVU747
 1717 0d25 C442A1F7 		shlx	%r11, -40(%r10), %r12
 1717      62D8
 582:sieve_extend.c ****     }
 1718              		.loc 1 582 72 view .LVU748
 1719 0d2b 4D09CC   		orq	%r9, %r12
 1720 0d2e 4C8964CF 		movq	%r12, 16(%rdi,%rcx,8)
 1720      10
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1721              		.loc 1 581 48 is_stmt 1 view .LVU749
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1722              		.loc 1 581 12 view .LVU750
 582:sieve_extend.c ****     }
 1723              		.loc 1 582 9 view .LVU751
 582:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 55


 1724              		.loc 1 582 54 is_stmt 0 view .LVU752
 1725 0d33 C4C2BBF7 		shrx	%r8, -40(%r10), %rax
 1725      42D8
 582:sieve_extend.c ****     }
 1726              		.loc 1 582 99 view .LVU753
 1727 0d39 C4C2A1F7 		shlx	%r11, -32(%r10), %rdx
 1727      52E0
 582:sieve_extend.c ****     }
 1728              		.loc 1 582 72 view .LVU754
 1729 0d3f 4809C2   		orq	%rax, %rdx
 1730 0d42 488954CF 		movq	%rdx, 24(%rdi,%rcx,8)
 1730      18
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 581 48 is_stmt 1 view .LVU755
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1732              		.loc 1 581 12 view .LVU756
 582:sieve_extend.c ****     }
 1733              		.loc 1 582 9 view .LVU757
 582:sieve_extend.c ****     }
 1734              		.loc 1 582 54 is_stmt 0 view .LVU758
 1735 0d47 C442BBF7 		shrx	%r8, -32(%r10), %r14
 1735      72E0
 582:sieve_extend.c ****     }
 1736              		.loc 1 582 99 view .LVU759
 1737 0d4d C4C2A1F7 		shlx	%r11, -24(%r10), %rsi
 1737      72E8
 582:sieve_extend.c ****     }
 1738              		.loc 1 582 72 view .LVU760
 1739 0d53 4C09F6   		orq	%r14, %rsi
 1740 0d56 488974CF 		movq	%rsi, 32(%rdi,%rcx,8)
 1740      20
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1741              		.loc 1 581 48 is_stmt 1 view .LVU761
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1742              		.loc 1 581 12 view .LVU762
 582:sieve_extend.c ****     }
 1743              		.loc 1 582 9 view .LVU763
 582:sieve_extend.c ****     }
 1744              		.loc 1 582 99 is_stmt 0 view .LVU764
 1745 0d5b C442A1F7 		shlx	%r11, -16(%r10), %r12
 1745      62F0
 582:sieve_extend.c ****     }
 1746              		.loc 1 582 54 view .LVU765
 1747 0d61 C442BBF7 		shrx	%r8, -24(%r10), %r9
 1747      4AE8
 582:sieve_extend.c ****     }
 1748              		.loc 1 582 72 view .LVU766
 1749 0d67 4D09CC   		orq	%r9, %r12
 1750 0d6a 4C8964CF 		movq	%r12, 40(%rdi,%rcx,8)
 1750      28
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 581 48 is_stmt 1 view .LVU767
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 581 12 view .LVU768
 582:sieve_extend.c ****     }
 1753              		.loc 1 582 9 view .LVU769
 582:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 56


 1754              		.loc 1 582 99 is_stmt 0 view .LVU770
 1755 0d6f C4C2A1F7 		shlx	%r11, -8(%r10), %rdx
 1755      52F8
 582:sieve_extend.c ****     }
 1756              		.loc 1 582 54 view .LVU771
 1757 0d75 C4C2BBF7 		shrx	%r8, -16(%r10), %rax
 1757      42F0
 582:sieve_extend.c ****     }
 1758              		.loc 1 582 72 view .LVU772
 1759 0d7b 4809C2   		orq	%rax, %rdx
 1760 0d7e 488954CF 		movq	%rdx, 48(%rdi,%rcx,8)
 1760      30
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1761              		.loc 1 581 48 is_stmt 1 view .LVU773
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1762              		.loc 1 581 12 view .LVU774
 582:sieve_extend.c ****     }
 1763              		.loc 1 582 9 view .LVU775
 582:sieve_extend.c ****     }
 1764              		.loc 1 582 99 is_stmt 0 view .LVU776
 1765 0d83 C4C2A1F7 		shlx	%r11, (%r10), %rsi
 1765      32
 582:sieve_extend.c ****     }
 1766              		.loc 1 582 54 view .LVU777
 1767 0d88 C442BBF7 		shrx	%r8, -8(%r10), %r14
 1767      72F8
 582:sieve_extend.c ****     }
 1768              		.loc 1 582 72 view .LVU778
 1769 0d8e 4C09F6   		orq	%r14, %rsi
 1770 0d91 488974CF 		movq	%rsi, 56(%rdi,%rcx,8)
 1770      38
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1771              		.loc 1 581 48 is_stmt 1 view .LVU779
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 581 57 is_stmt 0 view .LVU780
 1773 0d96 4883C108 		addq	$8, %rcx
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1774              		.loc 1 581 12 is_stmt 1 view .LVU781
 581:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1775              		.loc 1 581 5 is_stmt 0 view .LVU782
 1776 0d9a 48394C24 		cmpq	%rcx, -8(%rsp)
 1776      F8
 1777 0d9f 0F8350FF 		jnb	.L80
 1777      FFFF
 1778 0da5 E952FAFF 		jmp	.L81
 1778      FF
 1779              	.LVL90:
 1780 0daa 660F1F44 		.p2align 4,,10
 1780      0000
 1781              		.p2align 3
 1782              	.L260:
 558:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1783              		.loc 1 558 9 is_stmt 1 view .LVU783
 560:sieve_extend.c ****         return; // rapid exit for one word variant
 1784              		.loc 1 560 56 is_stmt 0 view .LVU784
 1785 0db0 4D21D7   		andq	%r10, %r15
 1786 0db3 4C21F8   		andq	%r15, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 57


 558:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1787              		.loc 1 558 29 view .LVU785
 1788 0db6 4909C6   		orq	%rax, %r14
 1789 0db9 4D897500 		movq	%r14, 0(%r13)
 561:sieve_extend.c ****     }
 1790              		.loc 1 561 9 is_stmt 1 view .LVU786
 1791              		.loc 1 586 1 is_stmt 0 view .LVU787
 1792 0dbd 488D65D8 		leaq	-40(%rbp), %rsp
 1793 0dc1 5B       		popq	%rbx
 1794 0dc2 415C     		popq	%r12
 1795 0dc4 415D     		popq	%r13
 1796 0dc6 415E     		popq	%r14
 1797 0dc8 415F     		popq	%r15
 1798 0dca 5D       		popq	%rbp
 1799              		.cfi_remember_state
 1800              		.cfi_def_cfa 7, 8
 1801 0dcb C3       		ret
 1802              	.LVL91:
 1803 0dcc 0F1F4000 		.p2align 4,,10
 1804              		.p2align 3
 1805              	.L255:
 1806              		.cfi_restore_state
 1807              		.loc 1 586 1 view .LVU788
 1808 0dd0 C5F877   		vzeroupper
 1809 0dd3 E9ACFDFF 		jmp	.L72
 1809      FF
 1810              	.LVL92:
 1811 0dd8 0F1F8400 		.p2align 4,,10
 1811      00000000 
 1812              		.p2align 3
 1813              	.L257:
 1814              		.loc 1 586 1 view .LVU789
 1815 0de0 C5F877   		vzeroupper
 1816 0de3 E914FAFF 		jmp	.L81
 1816      FF
 1817              	.LVL93:
 1818              	.L69:
 1819              		.loc 1 586 1 view .LVU790
 1820 0de8 488B5424 		movq	-32(%rsp), %rdx
 1820      E0
 1821 0ded 488D040A 		leaq	(%rdx,%rcx), %rax
 1822 0df1 488D0CC7 		leaq	(%rdi,%rax,8), %rcx
 1823 0df5 4989CD   		movq	%rcx, %r13
 1824 0df8 4D29DD   		subq	%r11, %r13
 1825 0dfb 4983ED08 		subq	$8, %r13
 1826 0dff 49C1ED03 		shrq	$3, %r13
 1827 0e03 49FFC5   		incq	%r13
 1828              	.LBB286:
 1829              	.LBB284:
 576:sieve_extend.c ****         }
 1830              		.loc 1 576 35 view .LVU791
 1831 0e06 4829D6   		subq	%rdx, %rsi
 1832 0e09 4183E507 		andl	$7, %r13d
 1833 0e0d 0F840201 		je	.L250
 1833      0000
 1834 0e13 4983FD01 		cmpq	$1, %r13
 1835 0e17 0F84D300 		je	.L188
GAS LISTING /tmp/ccmX4xFB.s 			page 58


 1835      0000
 1836 0e1d 4983FD02 		cmpq	$2, %r13
 1837 0e21 0F84AC00 		je	.L189
 1837      0000
 1838 0e27 4983FD03 		cmpq	$3, %r13
 1839 0e2b 0F848500 		je	.L190
 1839      0000
 1840 0e31 4983FD04 		cmpq	$4, %r13
 1841 0e35 7463     		je	.L191
 1842 0e37 4983FD05 		cmpq	$5, %r13
 1843 0e3b 7440     		je	.L192
 1844 0e3d 4983FD06 		cmpq	$6, %r13
 1845 0e41 741D     		je	.L193
 1846              	.LVL94:
 576:sieve_extend.c ****         }
 1847              		.loc 1 576 13 is_stmt 1 view .LVU792
 576:sieve_extend.c ****         }
 1848              		.loc 1 576 109 is_stmt 0 view .LVU793
 1849 0e43 440FB654 		movzbl	-12(%rsp), %r10d
 1849      24F4
 576:sieve_extend.c ****         }
 1850              		.loc 1 576 62 view .LVU794
 1851 0e49 C442BBF7 		shrx	%r8, (%r11), %r14
 1851      33
 1852              	.LVL95:
 576:sieve_extend.c ****         }
 1853              		.loc 1 576 109 view .LVU795
 1854 0e4e C4C2A9F7 		shlx	%r10, 8(%r11), %rbx
 1854      5B08
 576:sieve_extend.c ****         }
 1855              		.loc 1 576 80 view .LVU796
 1856 0e54 4909DE   		orq	%rbx, %r14
 1857 0e57 4D8974F3 		movq	%r14, 8(%r11,%rsi,8)
 1857      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1858              		.loc 1 575 58 is_stmt 1 view .LVU797
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1859              		.loc 1 575 40 view .LVU798
 1860 0e5c 4983C308 		addq	$8, %r11
 1861              	.L193:
 576:sieve_extend.c ****         }
 1862              		.loc 1 576 13 view .LVU799
 576:sieve_extend.c ****         }
 1863              		.loc 1 576 109 is_stmt 0 view .LVU800
 1864 0e60 440FB664 		movzbl	-12(%rsp), %r12d
 1864      24F4
 576:sieve_extend.c ****         }
 1865              		.loc 1 576 62 view .LVU801
 1866 0e66 C442BBF7 		shrx	%r8, (%r11), %r9
 1866      0B
 1867              	.LVL96:
 576:sieve_extend.c ****         }
 1868              		.loc 1 576 109 view .LVU802
 1869 0e6b C4C299F7 		shlx	%r12, 8(%r11), %rdx
 1869      5308
 576:sieve_extend.c ****         }
 1870              		.loc 1 576 80 view .LVU803
GAS LISTING /tmp/ccmX4xFB.s 			page 59


 1871 0e71 4909D1   		orq	%rdx, %r9
 1872 0e74 4D894CF3 		movq	%r9, 8(%r11,%rsi,8)
 1872      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1873              		.loc 1 575 58 is_stmt 1 view .LVU804
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1874              		.loc 1 575 40 view .LVU805
 1875 0e79 4983C308 		addq	$8, %r11
 1876              	.L192:
 576:sieve_extend.c ****         }
 1877              		.loc 1 576 13 view .LVU806
 576:sieve_extend.c ****         }
 1878              		.loc 1 576 109 is_stmt 0 view .LVU807
 1879 0e7d 440FB674 		movzbl	-12(%rsp), %r14d
 1879      24F4
 576:sieve_extend.c ****         }
 1880              		.loc 1 576 62 view .LVU808
 1881 0e83 C442BBF7 		shrx	%r8, (%r11), %r13
 1881      2B
 576:sieve_extend.c ****         }
 1882              		.loc 1 576 109 view .LVU809
 1883 0e88 C44289F7 		shlx	%r14, 8(%r11), %r10
 1883      5308
 576:sieve_extend.c ****         }
 1884              		.loc 1 576 80 view .LVU810
 1885 0e8e 4D09D5   		orq	%r10, %r13
 1886 0e91 4D896CF3 		movq	%r13, 8(%r11,%rsi,8)
 1886      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1887              		.loc 1 575 58 is_stmt 1 view .LVU811
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1888              		.loc 1 575 40 view .LVU812
 1889 0e96 4983C308 		addq	$8, %r11
 1890              	.L191:
 576:sieve_extend.c ****         }
 1891              		.loc 1 576 13 view .LVU813
 576:sieve_extend.c ****         }
 1892              		.loc 1 576 109 is_stmt 0 view .LVU814
 1893 0e9a 0FB65C24 		movzbl	-12(%rsp), %ebx
 1893      F4
 576:sieve_extend.c ****         }
 1894              		.loc 1 576 62 view .LVU815
 1895 0e9f C442BBF7 		shrx	%r8, (%r11), %r9
 1895      0B
 576:sieve_extend.c ****         }
 1896              		.loc 1 576 109 view .LVU816
 1897 0ea4 C442E1F7 		shlx	%rbx, 8(%r11), %r12
 1897      6308
 576:sieve_extend.c ****         }
 1898              		.loc 1 576 80 view .LVU817
 1899 0eaa 4D09E1   		orq	%r12, %r9
 1900 0ead 4D894CF3 		movq	%r9, 8(%r11,%rsi,8)
 1900      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1901              		.loc 1 575 58 is_stmt 1 view .LVU818
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1902              		.loc 1 575 40 view .LVU819
GAS LISTING /tmp/ccmX4xFB.s 			page 60


 1903 0eb2 4983C308 		addq	$8, %r11
 1904              	.L190:
 576:sieve_extend.c ****         }
 1905              		.loc 1 576 13 view .LVU820
 576:sieve_extend.c ****         }
 1906              		.loc 1 576 109 is_stmt 0 view .LVU821
 1907 0eb6 440FB66C 		movzbl	-12(%rsp), %r13d
 1907      24F4
 576:sieve_extend.c ****         }
 1908              		.loc 1 576 62 view .LVU822
 1909 0ebc C4C2BBF7 		shrx	%r8, (%r11), %rdx
 1909      13
 576:sieve_extend.c ****         }
 1910              		.loc 1 576 109 view .LVU823
 1911 0ec1 C44291F7 		shlx	%r13, 8(%r11), %r14
 1911      7308
 576:sieve_extend.c ****         }
 1912              		.loc 1 576 80 view .LVU824
 1913 0ec7 4C09F2   		orq	%r14, %rdx
 1914 0eca 498954F3 		movq	%rdx, 8(%r11,%rsi,8)
 1914      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1915              		.loc 1 575 58 is_stmt 1 view .LVU825
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1916              		.loc 1 575 40 view .LVU826
 1917 0ecf 4983C308 		addq	$8, %r11
 1918              	.L189:
 576:sieve_extend.c ****         }
 1919              		.loc 1 576 13 view .LVU827
 576:sieve_extend.c ****         }
 1920              		.loc 1 576 109 is_stmt 0 view .LVU828
 1921 0ed3 440FB654 		movzbl	-12(%rsp), %r10d
 1921      24F4
 576:sieve_extend.c ****         }
 1922              		.loc 1 576 62 view .LVU829
 1923 0ed9 C442BBF7 		shrx	%r8, (%r11), %r9
 1923      0B
 576:sieve_extend.c ****         }
 1924              		.loc 1 576 109 view .LVU830
 1925 0ede C4C2A9F7 		shlx	%r10, 8(%r11), %rbx
 1925      5B08
 576:sieve_extend.c ****         }
 1926              		.loc 1 576 80 view .LVU831
 1927 0ee4 4909D9   		orq	%rbx, %r9
 1928 0ee7 4D894CF3 		movq	%r9, 8(%r11,%rsi,8)
 1928      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1929              		.loc 1 575 58 is_stmt 1 view .LVU832
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1930              		.loc 1 575 40 view .LVU833
 1931 0eec 4983C308 		addq	$8, %r11
 1932              	.L188:
 576:sieve_extend.c ****         }
 1933              		.loc 1 576 13 view .LVU834
 576:sieve_extend.c ****         }
 1934              		.loc 1 576 109 is_stmt 0 view .LVU835
 1935 0ef0 0FB65424 		movzbl	-12(%rsp), %edx
GAS LISTING /tmp/ccmX4xFB.s 			page 61


 1935      F4
 576:sieve_extend.c ****         }
 1936              		.loc 1 576 62 view .LVU836
 1937 0ef5 C442BBF7 		shrx	%r8, (%r11), %r12
 1937      23
 576:sieve_extend.c ****         }
 1938              		.loc 1 576 109 view .LVU837
 1939 0efa C442E9F7 		shlx	%rdx, 8(%r11), %r13
 1939      6B08
 576:sieve_extend.c ****         }
 1940              		.loc 1 576 80 view .LVU838
 1941 0f00 4D09EC   		orq	%r13, %r12
 1942 0f03 4D8964F3 		movq	%r12, 8(%r11,%rsi,8)
 1942      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1943              		.loc 1 575 58 is_stmt 1 view .LVU839
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1944              		.loc 1 575 40 view .LVU840
 1945 0f08 4983C308 		addq	$8, %r11
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1946              		.loc 1 575 9 is_stmt 0 view .LVU841
 1947 0f0c 4939CB   		cmpq	%rcx, %r11
 1948 0f0f 0F846FFC 		je	.L72
 1948      FFFF
 1949              	.L250:
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1950              		.loc 1 575 9 view .LVU842
 1951 0f15 448B7424 		movl	-12(%rsp), %r14d
 1951      F4
 1952              	.L74:
 576:sieve_extend.c ****         }
 1953              		.loc 1 576 13 is_stmt 1 view .LVU843
 576:sieve_extend.c ****         }
 1954              		.loc 1 576 109 is_stmt 0 view .LVU844
 1955 0f1a C44289F7 		shlx	%r14, 8(%r11), %r10
 1955      5308
 576:sieve_extend.c ****         }
 1956              		.loc 1 576 62 view .LVU845
 1957 0f20 C442BBF7 		shrx	%r8, (%r11), %r9
 1957      0B
 576:sieve_extend.c ****         }
 1958              		.loc 1 576 80 view .LVU846
 1959 0f25 4D09D1   		orq	%r10, %r9
 1960 0f28 4D894CF3 		movq	%r9, 8(%r11,%rsi,8)
 1960      08
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1961              		.loc 1 575 58 is_stmt 1 view .LVU847
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1962              		.loc 1 575 40 view .LVU848
 1963 0f2d 4D8D6B10 		leaq	16(%r11), %r13
 1964 0f31 498D5B08 		leaq	8(%r11), %rbx
 576:sieve_extend.c ****         }
 1965              		.loc 1 576 13 view .LVU849
 576:sieve_extend.c ****         }
 1966              		.loc 1 576 109 is_stmt 0 view .LVU850
 1967 0f35 C4E289F7 		shlx	%r14, 8(%rbx), %rdx
 1967      5308
GAS LISTING /tmp/ccmX4xFB.s 			page 62


 576:sieve_extend.c ****         }
 1968              		.loc 1 576 62 view .LVU851
 1969 0f3b C442BBF7 		shrx	%r8, 8(%r11), %r12
 1969      6308
 576:sieve_extend.c ****         }
 1970              		.loc 1 576 80 view .LVU852
 1971 0f41 4909D4   		orq	%rdx, %r12
 1972 0f44 4D8964F3 		movq	%r12, 16(%r11,%rsi,8)
 1972      10
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1973              		.loc 1 575 58 is_stmt 1 view .LVU853
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1974              		.loc 1 575 40 view .LVU854
 576:sieve_extend.c ****         }
 1975              		.loc 1 576 13 view .LVU855
 1976 0f49 498D5B18 		leaq	24(%r11), %rbx
 576:sieve_extend.c ****         }
 1977              		.loc 1 576 109 is_stmt 0 view .LVU856
 1978 0f4d C44289F7 		shlx	%r14, 8(%r13), %r10
 1978      5508
 576:sieve_extend.c ****         }
 1979              		.loc 1 576 62 view .LVU857
 1980 0f53 C442BBF7 		shrx	%r8, 16(%r11), %r9
 1980      4B10
 576:sieve_extend.c ****         }
 1981              		.loc 1 576 80 view .LVU858
 1982 0f59 4D09D1   		orq	%r10, %r9
 1983 0f5c 4D894CF3 		movq	%r9, 24(%r11,%rsi,8)
 1983      18
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1984              		.loc 1 575 58 is_stmt 1 view .LVU859
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1985              		.loc 1 575 40 view .LVU860
 576:sieve_extend.c ****         }
 1986              		.loc 1 576 13 view .LVU861
 1987 0f61 4D8D6B20 		leaq	32(%r11), %r13
 576:sieve_extend.c ****         }
 1988              		.loc 1 576 109 is_stmt 0 view .LVU862
 1989 0f65 C4E289F7 		shlx	%r14, 8(%rbx), %rdx
 1989      5308
 576:sieve_extend.c ****         }
 1990              		.loc 1 576 62 view .LVU863
 1991 0f6b C442BBF7 		shrx	%r8, 24(%r11), %r12
 1991      6318
 576:sieve_extend.c ****         }
 1992              		.loc 1 576 80 view .LVU864
 1993 0f71 4909D4   		orq	%rdx, %r12
 1994 0f74 4D8964F3 		movq	%r12, 32(%r11,%rsi,8)
 1994      20
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1995              		.loc 1 575 58 is_stmt 1 view .LVU865
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1996              		.loc 1 575 40 view .LVU866
 576:sieve_extend.c ****         }
 1997              		.loc 1 576 13 view .LVU867
 1998 0f79 498D5B28 		leaq	40(%r11), %rbx
 576:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 63


 1999              		.loc 1 576 109 is_stmt 0 view .LVU868
 2000 0f7d C44289F7 		shlx	%r14, 8(%r13), %r10
 2000      5508
 576:sieve_extend.c ****         }
 2001              		.loc 1 576 62 view .LVU869
 2002 0f83 C442BBF7 		shrx	%r8, 32(%r11), %r9
 2002      4B20
 576:sieve_extend.c ****         }
 2003              		.loc 1 576 80 view .LVU870
 2004 0f89 4D09D1   		orq	%r10, %r9
 2005 0f8c 4D894CF3 		movq	%r9, 40(%r11,%rsi,8)
 2005      28
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2006              		.loc 1 575 58 is_stmt 1 view .LVU871
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2007              		.loc 1 575 40 view .LVU872
 576:sieve_extend.c ****         }
 2008              		.loc 1 576 13 view .LVU873
 2009 0f91 4D8D6B30 		leaq	48(%r11), %r13
 576:sieve_extend.c ****         }
 2010              		.loc 1 576 109 is_stmt 0 view .LVU874
 2011 0f95 C4E289F7 		shlx	%r14, 8(%rbx), %rdx
 2011      5308
 576:sieve_extend.c ****         }
 2012              		.loc 1 576 62 view .LVU875
 2013 0f9b C442BBF7 		shrx	%r8, 40(%r11), %r12
 2013      6328
 576:sieve_extend.c ****         }
 2014              		.loc 1 576 80 view .LVU876
 2015 0fa1 4909D4   		orq	%rdx, %r12
 2016 0fa4 4D8964F3 		movq	%r12, 48(%r11,%rsi,8)
 2016      30
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2017              		.loc 1 575 58 is_stmt 1 view .LVU877
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2018              		.loc 1 575 40 view .LVU878
 576:sieve_extend.c ****         }
 2019              		.loc 1 576 13 view .LVU879
 2020 0fa9 498D5B38 		leaq	56(%r11), %rbx
 576:sieve_extend.c ****         }
 2021              		.loc 1 576 62 is_stmt 0 view .LVU880
 2022 0fad C442BBF7 		shrx	%r8, 48(%r11), %r9
 2022      4B30
 576:sieve_extend.c ****         }
 2023              		.loc 1 576 109 view .LVU881
 2024 0fb3 C44289F7 		shlx	%r14, 8(%r13), %r10
 2024      5508
 576:sieve_extend.c ****         }
 2025              		.loc 1 576 80 view .LVU882
 2026 0fb9 4D09D1   		orq	%r10, %r9
 2027 0fbc 4D894CF3 		movq	%r9, 56(%r11,%rsi,8)
 2027      38
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2028              		.loc 1 575 58 is_stmt 1 view .LVU883
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2029              		.loc 1 575 40 view .LVU884
 576:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 64


 2030              		.loc 1 576 13 view .LVU885
 576:sieve_extend.c ****         }
 2031              		.loc 1 576 62 is_stmt 0 view .LVU886
 2032 0fc1 C442BBF7 		shrx	%r8, 56(%r11), %r12
 2032      6338
 576:sieve_extend.c ****         }
 2033              		.loc 1 576 109 view .LVU887
 2034 0fc7 C4E289F7 		shlx	%r14, 8(%rbx), %rdx
 2034      5308
 576:sieve_extend.c ****         }
 2035              		.loc 1 576 80 view .LVU888
 2036 0fcd 4909D4   		orq	%rdx, %r12
 2037 0fd0 4D8964F3 		movq	%r12, 64(%r11,%rsi,8)
 2037      40
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2038              		.loc 1 575 58 is_stmt 1 view .LVU889
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 575 40 view .LVU890
 2040 0fd5 4983C340 		addq	$64, %r11
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2041              		.loc 1 575 9 is_stmt 0 view .LVU891
 2042 0fd9 4939CB   		cmpq	%rcx, %r11
 2043 0fdc 0F8538FF 		jne	.L74
 2043      FFFF
 2044 0fe2 E99DFBFF 		jmp	.L72
 2044      FF
 2045              	.LVL97:
 2046              	.L262:
 576:sieve_extend.c ****         }
 2047              		.loc 1 576 13 is_stmt 1 view .LVU892
 576:sieve_extend.c ****         }
 2048              		.loc 1 576 62 is_stmt 0 view .LVU893
 2049 0fe7 C4417E6F 		vmovdqu	(%r11), %ymm8
 2049      03
 576:sieve_extend.c ****         }
 2050              		.loc 1 576 109 view .LVU894
 2051 0fec C5FE6F1A 		vmovdqu	(%rdx), %ymm3
 576:sieve_extend.c ****         }
 2052              		.loc 1 576 62 view .LVU895
 2053 0ff0 C53DD3C9 		vpsrlq	%xmm1, %ymm8, %ymm9
 576:sieve_extend.c ****         }
 2054              		.loc 1 576 109 view .LVU896
 2055 0ff4 C565F3D0 		vpsllq	%xmm0, %ymm3, %ymm10
 2056 0ff8 BE200000 		movl	$32, %esi
 2056      00
 576:sieve_extend.c ****         }
 2057              		.loc 1 576 80 view .LVU897
 2058 0ffd C44135EB 		vpor	%ymm10, %ymm9, %ymm11
 2058      DA
 576:sieve_extend.c ****         }
 2059              		.loc 1 576 35 view .LVU898
 2060 1002 C57E7F18 		vmovdqu	%ymm11, (%rax)
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2061              		.loc 1 575 58 is_stmt 1 view .LVU899
 575:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2062              		.loc 1 575 40 view .LVU900
 2063 1006 E9EBF8FF 		jmp	.L187
GAS LISTING /tmp/ccmX4xFB.s 			page 65


 2063      FF
 2064              	.LBE284:
 2065              	.LBE286:
 2066              		.cfi_endproc
 2067              	.LFE68:
 2069 100b 0F1F4400 		.p2align 4
 2069      00
 2070              		.globl	compare_tuning_result
 2072              	compare_tuning_result:
 2073              	.LVL98:
 2074              	.LFB80:
 587:sieve_extend.c **** 
 588:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 589:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 590:sieve_extend.c ****    
 591:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 592:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 593:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 594:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 595:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 596:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 597:sieve_extend.c **** 
 598:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 599:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 600:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 601:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 602:sieve_extend.c ****         return; // rapid exit for one word variant
 603:sieve_extend.c ****     }
 604:sieve_extend.c **** 
 605:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 606:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 607:sieve_extend.c ****                                 & keepmask(copy_start);
 608:sieve_extend.c ****     
 609:sieve_extend.c ****     copy_word++;
 610:sieve_extend.c **** 
 611:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 612:sieve_extend.c **** 
 613:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 614:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 615:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 616:sieve_extend.c **** 
 617:sieve_extend.c **** }
 618:sieve_extend.c **** 
 619:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 620:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 621:sieve_extend.c **** 
 622:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 623:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 624:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 625:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 626:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 627:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 628:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 629:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 630:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 631:sieve_extend.c **** 
 632:sieve_extend.c ****     copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 66


 633:sieve_extend.c ****     source_word++;
 634:sieve_extend.c **** 
 635:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 636:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 637:sieve_extend.c ****     source_word += distance;
 638:sieve_extend.c ****     copy_word += distance;
 639:sieve_extend.c **** 
 640:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 641:sieve_extend.c **** 
 642:sieve_extend.c ****     while (copy_word <= aligned_copy_word) {
 643:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 644:sieve_extend.c ****         source_word++;
 645:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 646:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 647:sieve_extend.c ****         copy_word++;
 648:sieve_extend.c ****     }
 649:sieve_extend.c **** 
 650:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 651:sieve_extend.c **** 
 652:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 653:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 654:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 655:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 656:sieve_extend.c ****         copy_word += size;
 657:sieve_extend.c ****     }
 658:sieve_extend.c **** 
 659:sieve_extend.c ****     while (copy_word <= destination_stop_word) {
 660:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 661:sieve_extend.c ****      copy_word++;
 662:sieve_extend.c ****      source_word++;
 663:sieve_extend.c ****     }
 664:sieve_extend.c **** 
 665:sieve_extend.c ****  }
 666:sieve_extend.c **** 
 667:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 668:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 669:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 670:sieve_extend.c ****         return; // rapid exit for small sizes
 671:sieve_extend.c ****     }
 672:sieve_extend.c **** 
 673:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 674:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 675:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 676:sieve_extend.c **** 
 677:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 678:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 679:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 680:sieve_extend.c **** }
 681:sieve_extend.c **** 
 682:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 683:sieve_extend.c ****     counter_t prime = prime_start;
 684:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 685:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 686:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 687:sieve_extend.c ****     
 688:sieve_extend.c ****     while (start <= block_stop) {
 689:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccmX4xFB.s 			page 67


 690:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 691:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 692:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 693:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 694:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 695:sieve_extend.c ****     }
 696:sieve_extend.c ****     
 697:sieve_extend.c ****     while (start <= block_stop) {
 698:sieve_extend.c ****         step  = prime * 2 + 1;
 699:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 700:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 701:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 702:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 703:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 704:sieve_extend.c ****     }
 705:sieve_extend.c **** 
 706:sieve_extend.c ****     counter_t start1 = 0; // save value
 707:sieve_extend.c ****     counter_t step1 = 0; // save value
 708:sieve_extend.c ****     while (start <= block_stop) {
 709:sieve_extend.c ****         step  = prime * 2 + 1;
 710:sieve_extend.c ****         if (step > 64) break;
 711:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 712:sieve_extend.c ****         start1 = start; // save value
 713:sieve_extend.c ****         step1 = step; // save value
 714:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 715:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 716:sieve_extend.c ****         step  = prime * 2 + 1;
 717:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 718:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 719:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 720:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 721:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 722:sieve_extend.c ****     }
 723:sieve_extend.c ****     
 724:sieve_extend.c ****     while (start <= block_stop) {
 725:sieve_extend.c ****         step  = prime * 2 + 1;
 726:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 727:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 728:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 729:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 730:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 731:sieve_extend.c ****     }
 732:sieve_extend.c **** 
 733:sieve_extend.c ****     while (start <= block_stop) {
 734:sieve_extend.c ****         step  = prime * 2 + 1;
 735:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 736:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 737:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 738:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 739:sieve_extend.c ****     }
 740:sieve_extend.c **** }
 741:sieve_extend.c **** 
 742:sieve_extend.c **** struct block {
 743:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 744:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 745:sieve_extend.c ****     counter_t prime; // next prime to be striped
 746:sieve_extend.c **** };
GAS LISTING /tmp/ccmX4xFB.s 			page 68


 747:sieve_extend.c **** 
 748:sieve_extend.c **** // returns prime that could not be handled:
 749:sieve_extend.c **** // start is too large
 750:sieve_extend.c **** // range is too big
 751:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 752:sieve_extend.c ****     counter_t prime            = 0;
 753:sieve_extend.c ****     counter_t patternsize_bits = 1;
 754:sieve_extend.c ****     counter_t pattern_start    = 0;
 755:sieve_extend.c ****     counter_t range_stop       = block_stop;
 756:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 757:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 758:sieve_extend.c **** 
 759:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 760:sieve_extend.c ****     
 761:sieve_extend.c ****     do {
 762:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 763:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 764:sieve_extend.c ****         if (start > block_stop) break;
 765:sieve_extend.c **** 
 766:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 767:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 768:sieve_extend.c **** 
 769:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 770:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 771:sieve_extend.c ****         block.pattern_start = pattern_start;
 772:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 773:sieve_extend.c **** 
 774:sieve_extend.c ****         if (patternsize_bits>1) {
 775:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 776:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 777:sieve_extend.c ****         }
 778:sieve_extend.c ****         patternsize_bits *= step;
 779:sieve_extend.c **** 
 780:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)  setBitsTrue_smallStep (bitarray, start, (bitshift_t)step
 781:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 782:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitarray, start, step, range_stop
 783:sieve_extend.c ****         block.prime = prime;
 784:sieve_extend.c ****     } while (range_stop < block_stop);
 785:sieve_extend.c **** 
 786:sieve_extend.c ****     return block;
 787:sieve_extend.c **** }
 788:sieve_extend.c **** 
 789:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 790:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 791:sieve_extend.c ****     counter_t prime         = 0;
 792:sieve_extend.c ****     counter_t block_start   = 0;
 793:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
 794:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 795:sieve_extend.c **** 
 796:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 797:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 798:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 799:sieve_extend.c ****     prime = block.prime;
 800:sieve_extend.c **** 
 801:sieve_extend.c ****     do {
 802:sieve_extend.c ****         if (block_stop > sieve->bits) block_stop = sieve->bits;
 803:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
GAS LISTING /tmp/ccmX4xFB.s 			page 69


 804:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 805:sieve_extend.c ****         // sieve_block_stripe(bitarray, block_start, block_stop, prime+1);
 806:sieve_extend.c ****         block_start += blocksize;
 807:sieve_extend.c ****         block_stop += blocksize;
 808:sieve_extend.c ****     } while (block_start <= sieve->bits);
 809:sieve_extend.c **** 
 810:sieve_extend.c ****     return sieve;
 811:sieve_extend.c **** }
 812:sieve_extend.c **** 
 813:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 814:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 815:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse_safe(sieve->bitarray, fa
 816:sieve_extend.c ****         primeCount++;
 817:sieve_extend.c ****         if (factor < maxFactor/2) {
 818:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 819:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 820:sieve_extend.c ****         }
 821:sieve_extend.c ****     }
 822:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 823:sieve_extend.c **** }
 824:sieve_extend.c **** 
 825:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
 826:sieve_extend.c ****     counter_t primeCount = 1;
 827:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse_safe(sieve->bitarray, fa
 828:sieve_extend.c ****     return primeCount;
 829:sieve_extend.c **** }
 830:sieve_extend.c **** 
 831:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
 832:sieve_extend.c ****     printf("DeepAnalyzing\n");
 833:sieve_extend.c ****     counter_t warn_prime = 0;
 834:sieve_extend.c ****     counter_t warn_nonprime = 0;
 835:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 836:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 837:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 838:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 839:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 840:sieve_extend.c ****                 }
 841:sieve_extend.c ****             }
 842:sieve_extend.c ****         }
 843:sieve_extend.c ****         else {
 844:sieve_extend.c ****             counter_t c_prime = 0;
 845:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 846:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 847:sieve_extend.c ****             }
 848:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 849:sieve_extend.c ****         }
 850:sieve_extend.c ****     }
 851:sieve_extend.c **** }
 852:sieve_extend.c **** 
 853:sieve_extend.c **** 
 854:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 855:sieve_extend.c **** 
 856:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 857:sieve_extend.c ****     counter_t valid_primes = 0;
 858:sieve_extend.c ****     switch(sieve->size) {
 859:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 860:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
GAS LISTING /tmp/ccmX4xFB.s 			page 70


 861:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 862:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 863:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 864:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 865:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 866:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 867:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 868:sieve_extend.c ****         default:            valid_primes= 0;
 869:sieve_extend.c ****     }
 870:sieve_extend.c **** 
 871:sieve_extend.c ****     int valid = (valid_primes == primecount);
 872:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 873:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 874:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 875:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 876:sieve_extend.c ****     }
 877:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
 878:sieve_extend.c ****     return (valid);
 879:sieve_extend.c **** }
 880:sieve_extend.c **** 
 881:sieve_extend.c **** void usage(char *name) {
 882:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 883:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 884:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 885:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 886:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 887:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 888:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 889:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 890:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 891:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 892:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 893:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 894:sieve_extend.c ****     exit(1);
 895:sieve_extend.c **** }
 896:sieve_extend.c **** 
 897:sieve_extend.c **** typedef struct  {
 898:sieve_extend.c ****     counter_t maxints;
 899:sieve_extend.c ****     counter_t blocksize_bits;
 900:sieve_extend.c ****     counter_t blocksize_kb;
 901:sieve_extend.c ****     counter_t free_bits;
 902:sieve_extend.c ****     counter_t smallstep_faster;
 903:sieve_extend.c ****     counter_t mediumstep_faster;
 904:sieve_extend.c ****     counter_t sample_max;
 905:sieve_extend.c ****     double    sample_duration;
 906:sieve_extend.c ****     counter_t passes;
 907:sieve_extend.c ****     double    elapsed_time;
 908:sieve_extend.c ****     double    avg;
 909:sieve_extend.c **** } tuning_result_type;
 910:sieve_extend.c **** 
 911:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 2075              		.loc 1 911 57 view -0
 2076              		.cfi_startproc
 2077              		.loc 1 911 57 is_stmt 0 view .LVU902
 2078 1010 F30F1EFA 		endbr64
 912:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 2079              		.loc 1 912 5 is_stmt 1 view .LVU903
GAS LISTING /tmp/ccmX4xFB.s 			page 71


 2080              	.LVL99:
 913:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 2081              		.loc 1 913 5 view .LVU904
 914:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 2082              		.loc 1 914 5 view .LVU905
 2083              		.loc 1 914 45 is_stmt 0 view .LVU906
 2084 1014 C5FB1046 		vmovsd	80(%rsi), %xmm0
 2084      50
 2085 1019 31C0     		xorl	%eax, %eax
 2086 101b C5F92F47 		vcomisd	80(%rdi), %xmm0
 2086      50
 2087 1020 0F97C0   		seta	%al
 2088 1023 8D4400FF 		leal	-1(%rax,%rax), %eax
 915:sieve_extend.c **** }
 2089              		.loc 1 915 1 view .LVU907
 2090 1027 C3       		ret
 2091              		.cfi_endproc
 2092              	.LFE80:
 2094 1028 0F1F8400 		.p2align 4
 2094      00000000 
 2096              	extendSieve_aligned:
 2097              	.LVL100:
 2098              	.LFB64:
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2099              		.loc 1 361 140 is_stmt 1 view -0
 2100              		.cfi_startproc
 362:sieve_extend.c **** 
 2101              		.loc 1 362 5 view .LVU909
 364:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2102              		.loc 1 364 5 view .LVU910
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2103              		.loc 1 361 140 is_stmt 0 view .LVU911
 2104 1030 55       		pushq	%rbp
 2105              		.cfi_def_cfa_offset 16
 2106              		.cfi_offset 6, -16
 2107 1031 4889E5   		movq	%rsp, %rbp
 2108              		.cfi_def_cfa_register 6
 2109 1034 4157     		pushq	%r15
 2110 1036 4156     		pushq	%r14
 2111              		.cfi_offset 15, -24
 2112              		.cfi_offset 14, -32
 369:sieve_extend.c **** 
 2113              		.loc 1 369 35 view .LVU912
 2114 1038 4989FE   		movq	%rdi, %r14
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2115              		.loc 1 361 140 view .LVU913
 2116 103b 4155     		pushq	%r13
 2117 103d 4154     		pushq	%r12
 2118              		.cfi_offset 13, -40
 2119              		.cfi_offset 12, -48
 2120 103f 4989D4   		movq	%rdx, %r12
 365:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2121              		.loc 1 365 21 view .LVU914
 2122 1042 4801F2   		addq	%rsi, %rdx
 2123              	.LVL101:
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2124              		.loc 1 361 140 view .LVU915
GAS LISTING /tmp/ccmX4xFB.s 			page 72


 2125 1045 53       		pushq	%rbx
 366:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2126              		.loc 1 366 15 view .LVU916
 2127 1046 48C1EE06 		shrq	$6, %rsi
 2128              	.LVL102:
 367:sieve_extend.c ****     
 2129              		.loc 1 367 15 view .LVU917
 2130 104a 4889D0   		movq	%rdx, %rax
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2131              		.loc 1 361 140 view .LVU918
 2132 104d 4883E4E0 		andq	$-32, %rsp
 2133 1051 4883EC20 		subq	$32, %rsp
 2134              		.cfi_offset 3, -56
 364:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2135              		.loc 1 364 21 view .LVU919
 2136 1055 4889CB   		movq	%rcx, %rbx
 367:sieve_extend.c ****     
 2137              		.loc 1 367 15 view .LVU920
 2138 1058 48C1E806 		shrq	$6, %rax
 369:sieve_extend.c **** 
 2139              		.loc 1 369 52 view .LVU921
 2140 105c 89D1     		movl	%edx, %ecx
 2141              	.LVL103:
 366:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2142              		.loc 1 366 15 view .LVU922
 2143 105e 48893424 		movq	%rsi, (%rsp)
 369:sieve_extend.c **** 
 2144              		.loc 1 369 35 view .LVU923
 2145 1062 48C1E603 		salq	$3, %rsi
 2146 1066 4901F6   		addq	%rsi, %r14
 369:sieve_extend.c **** 
 2147              		.loc 1 369 52 view .LVU924
 2148 1069 F7D1     		notl	%ecx
 2149 106b 48C7C2FF 		movq	$-1, %rdx
 2149      FFFFFF
 364:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2150              		.loc 1 364 21 view .LVU925
 2151 1072 48C1EB06 		shrq	$6, %rbx
 2152              	.LVL104:
 365:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2153              		.loc 1 365 5 is_stmt 1 view .LVU926
 366:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2154              		.loc 1 366 5 view .LVU927
 367:sieve_extend.c ****     
 2155              		.loc 1 367 5 view .LVU928
 369:sieve_extend.c **** 
 2156              		.loc 1 369 5 view .LVU929
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2157              		.loc 1 371 22 is_stmt 0 view .LVU930
 2158 1076 4D8D0C04 		leaq	(%r12,%rax), %r9
 369:sieve_extend.c **** 
 2159              		.loc 1 369 35 view .LVU931
 2160 107a 48897424 		movq	%rsi, 8(%rsp)
 2160      08
 361:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2161              		.loc 1 361 140 view .LVU932
 2162 107f 48897C24 		movq	%rdi, 16(%rsp)
GAS LISTING /tmp/ccmX4xFB.s 			page 73


 2162      10
 369:sieve_extend.c **** 
 2163              		.loc 1 369 52 view .LVU933
 2164 1084 C4E2F3F7 		shrx	%rcx, %rdx, %rsi
 2164      F2
 369:sieve_extend.c **** 
 2165              		.loc 1 369 49 view .LVU934
 2166 1089 C442C8F2 		andn	(%r14), %rsi, %r8
 2166      06
 369:sieve_extend.c **** 
 2167              		.loc 1 369 25 view .LVU935
 2168 108e 4C8904C7 		movq	%r8, (%rdi,%rax,8)
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2169              		.loc 1 371 5 is_stmt 1 view .LVU936
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2170              		.loc 1 371 11 view .LVU937
 2171 1092 4C39CB   		cmpq	%r9, %rbx
 2172 1095 0F824D01 		jb	.L267
 2172      0000
 2173 109b 4C8D2CC5 		leaq	0(,%rax,8), %r13
 2173      00000000 
 2174 10a3 4901FD   		addq	%rdi, %r13
 2175 10a6 4A8D04CD 		leaq	0(,%r9,8), %rax
 2175      00000000 
 372:sieve_extend.c ****         copy_word += size;
 2176              		.loc 1 372 9 is_stmt 0 view .LVU938
 2177 10ae 4E8D3CE5 		leaq	0(,%r12,8), %r15
 2177      00000000 
 2178 10b6 4929C5   		subq	%rax, %r13
 2179              	.LVL105:
 2180              	.L268:
 372:sieve_extend.c ****         copy_word += size;
 2181              		.loc 1 372 9 is_stmt 1 view .LVU939
 2182              	.LBB287:
 2183              	.LBI287:
 2184              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
GAS LISTING /tmp/ccmX4xFB.s 			page 74


  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 2185              		.loc 2 31 1 view .LVU940
 2186              	.LBB288:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 2187              		.loc 2 34 3 view .LVU941
 2188              		.loc 2 34 10 is_stmt 0 view .LVU942
 2189 10b9 4B8D7CCD 		leaq	0(%r13,%r9,8), %rdi
 2189      00
 2190 10be 4C89FA   		movq	%r15, %rdx
 2191 10c1 4C89F6   		movq	%r14, %rsi
 2192 10c4 4C894C24 		movq	%r9, 24(%rsp)
 2192      18
 2193 10c9 E8000000 		call	memcpy@PLT
 2193      00
 2194              	.LVL106:
 2195              		.loc 2 34 10 view .LVU943
 2196              	.LBE288:
 2197              	.LBE287:
 373:sieve_extend.c ****     }
 2198              		.loc 1 373 9 is_stmt 1 view .LVU944
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2199              		.loc 1 371 11 view .LVU945
 2200 10ce 488B4424 		movq	24(%rsp), %rax
 2200      18
 2201 10d3 4E8D0C20 		leaq	(%rax,%r12), %r9
 2202 10d7 4C39CB   		cmpq	%r9, %rbx
 2203 10da 0F820801 		jb	.L267
 2203      0000
 372:sieve_extend.c ****         copy_word += size;
 2204              		.loc 1 372 9 view .LVU946
 2205              	.LVL107:
 2206              	.LBB296:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2207              		.loc 2 31 1 view .LVU947
 2208              	.LBB289:
 2209              		.loc 2 34 3 view .LVU948
 2210              		.loc 2 34 10 is_stmt 0 view .LVU949
 2211 10e0 4B8D7CCD 		leaq	0(%r13,%r9,8), %rdi
 2211      00
 2212 10e5 4C89FA   		movq	%r15, %rdx
 2213 10e8 4C89F6   		movq	%r14, %rsi
 2214 10eb 4C894C24 		movq	%r9, 24(%rsp)
 2214      18
 2215              	.LVL108:
 2216              		.loc 2 34 10 view .LVU950
 2217 10f0 E8000000 		call	memcpy@PLT
GAS LISTING /tmp/ccmX4xFB.s 			page 75


 2217      00
 2218              	.LVL109:
 2219              		.loc 2 34 10 view .LVU951
 2220              	.LBE289:
 2221              	.LBE296:
 373:sieve_extend.c ****     }
 2222              		.loc 1 373 9 is_stmt 1 view .LVU952
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2223              		.loc 1 371 11 view .LVU953
 2224 10f5 488B4424 		movq	24(%rsp), %rax
 2224      18
 2225 10fa 4E8D1420 		leaq	(%rax,%r12), %r10
 2226 10fe 4C39D3   		cmpq	%r10, %rbx
 2227 1101 0F82E100 		jb	.L267
 2227      0000
 372:sieve_extend.c ****         copy_word += size;
 2228              		.loc 1 372 9 view .LVU954
 2229              	.LVL110:
 2230              	.LBB297:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2231              		.loc 2 31 1 view .LVU955
 2232              	.LBB290:
 2233              		.loc 2 34 3 view .LVU956
 2234              		.loc 2 34 10 is_stmt 0 view .LVU957
 2235 1107 4B8D7CD5 		leaq	0(%r13,%r10,8), %rdi
 2235      00
 2236 110c 4C89FA   		movq	%r15, %rdx
 2237 110f 4C89F6   		movq	%r14, %rsi
 2238 1112 4C895424 		movq	%r10, 24(%rsp)
 2238      18
 2239 1117 E8000000 		call	memcpy@PLT
 2239      00
 2240              	.LVL111:
 2241              		.loc 2 34 10 view .LVU958
 2242              	.LBE290:
 2243              	.LBE297:
 373:sieve_extend.c ****     }
 2244              		.loc 1 373 9 is_stmt 1 view .LVU959
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2245              		.loc 1 371 11 view .LVU960
 2246 111c 488B4424 		movq	24(%rsp), %rax
 2246      18
 2247 1121 4E8D1C20 		leaq	(%rax,%r12), %r11
 2248 1125 4C39DB   		cmpq	%r11, %rbx
 2249 1128 0F82BA00 		jb	.L267
 2249      0000
 372:sieve_extend.c ****         copy_word += size;
 2250              		.loc 1 372 9 view .LVU961
 2251              	.LVL112:
 2252              	.LBB298:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2253              		.loc 2 31 1 view .LVU962
 2254              	.LBB291:
 2255              		.loc 2 34 3 view .LVU963
 2256              		.loc 2 34 10 is_stmt 0 view .LVU964
 2257 112e 4B8D7CDD 		leaq	0(%r13,%r11,8), %rdi
 2257      00
GAS LISTING /tmp/ccmX4xFB.s 			page 76


 2258 1133 4C89FA   		movq	%r15, %rdx
 2259 1136 4C89F6   		movq	%r14, %rsi
 2260 1139 4C895C24 		movq	%r11, 24(%rsp)
 2260      18
 2261 113e E8000000 		call	memcpy@PLT
 2261      00
 2262              	.LVL113:
 2263              		.loc 2 34 10 view .LVU965
 2264              	.LBE291:
 2265              	.LBE298:
 373:sieve_extend.c ****     }
 2266              		.loc 1 373 9 is_stmt 1 view .LVU966
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2267              		.loc 1 371 11 view .LVU967
 2268 1143 488B4424 		movq	24(%rsp), %rax
 2268      18
 2269 1148 4A8D0C20 		leaq	(%rax,%r12), %rcx
 2270 114c 4839CB   		cmpq	%rcx, %rbx
 2271 114f 0F829300 		jb	.L267
 2271      0000
 372:sieve_extend.c ****         copy_word += size;
 2272              		.loc 1 372 9 view .LVU968
 2273              	.LVL114:
 2274              	.LBB299:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2275              		.loc 2 31 1 view .LVU969
 2276              	.LBB292:
 2277              		.loc 2 34 3 view .LVU970
 2278              		.loc 2 34 10 is_stmt 0 view .LVU971
 2279 1155 4C89FA   		movq	%r15, %rdx
 2280 1158 498D7CCD 		leaq	0(%r13,%rcx,8), %rdi
 2280      00
 2281 115d 4C89F6   		movq	%r14, %rsi
 2282 1160 48894C24 		movq	%rcx, 24(%rsp)
 2282      18
 2283 1165 E8000000 		call	memcpy@PLT
 2283      00
 2284              	.LVL115:
 2285              		.loc 2 34 10 view .LVU972
 2286              	.LBE292:
 2287              	.LBE299:
 373:sieve_extend.c ****     }
 2288              		.loc 1 373 9 is_stmt 1 view .LVU973
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2289              		.loc 1 371 11 view .LVU974
 2290 116a 488B4424 		movq	24(%rsp), %rax
 2290      18
 2291 116f 4A8D1420 		leaq	(%rax,%r12), %rdx
 2292 1173 4839D3   		cmpq	%rdx, %rbx
 2293 1176 7270     		jb	.L267
 372:sieve_extend.c ****         copy_word += size;
 2294              		.loc 1 372 9 view .LVU975
 2295              	.LVL116:
 2296              	.LBB300:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2297              		.loc 2 31 1 view .LVU976
 2298              	.LBB293:
GAS LISTING /tmp/ccmX4xFB.s 			page 77


 2299              		.loc 2 34 3 view .LVU977
 2300              		.loc 2 34 10 is_stmt 0 view .LVU978
 2301 1178 48895424 		movq	%rdx, 24(%rsp)
 2301      18
 2302 117d 498D7CD5 		leaq	0(%r13,%rdx,8), %rdi
 2302      00
 2303 1182 4C89F6   		movq	%r14, %rsi
 2304 1185 4C89FA   		movq	%r15, %rdx
 2305 1188 E8000000 		call	memcpy@PLT
 2305      00
 2306              	.LVL117:
 2307              		.loc 2 34 10 view .LVU979
 2308              	.LBE293:
 2309              	.LBE300:
 373:sieve_extend.c ****     }
 2310              		.loc 1 373 9 is_stmt 1 view .LVU980
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2311              		.loc 1 371 11 view .LVU981
 2312 118d 488B4424 		movq	24(%rsp), %rax
 2312      18
 2313 1192 4A8D3420 		leaq	(%rax,%r12), %rsi
 2314 1196 4839F3   		cmpq	%rsi, %rbx
 2315 1199 724D     		jb	.L267
 372:sieve_extend.c ****         copy_word += size;
 2316              		.loc 1 372 9 view .LVU982
 2317              	.LVL118:
 2318              	.LBB301:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2319              		.loc 2 31 1 view .LVU983
 2320              	.LBB294:
 2321              		.loc 2 34 3 view .LVU984
 2322              		.loc 2 34 10 is_stmt 0 view .LVU985
 2323 119b 48897424 		movq	%rsi, 24(%rsp)
 2323      18
 2324 11a0 498D7CF5 		leaq	0(%r13,%rsi,8), %rdi
 2324      00
 2325 11a5 4C89FA   		movq	%r15, %rdx
 2326 11a8 4C89F6   		movq	%r14, %rsi
 2327 11ab E8000000 		call	memcpy@PLT
 2327      00
 2328              	.LVL119:
 2329              		.loc 2 34 10 view .LVU986
 2330              	.LBE294:
 2331              	.LBE301:
 373:sieve_extend.c ****     }
 2332              		.loc 1 373 9 is_stmt 1 view .LVU987
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2333              		.loc 1 371 11 view .LVU988
 2334 11b0 488B4424 		movq	24(%rsp), %rax
 2334      18
 2335 11b5 4E8D0420 		leaq	(%rax,%r12), %r8
 2336 11b9 4C39C3   		cmpq	%r8, %rbx
 2337 11bc 722A     		jb	.L267
 372:sieve_extend.c ****         copy_word += size;
 2338              		.loc 1 372 9 view .LVU989
 2339              	.LVL120:
 2340              	.LBB302:
GAS LISTING /tmp/ccmX4xFB.s 			page 78


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2341              		.loc 2 31 1 view .LVU990
 2342              	.LBB295:
 2343              		.loc 2 34 3 view .LVU991
 2344              		.loc 2 34 10 is_stmt 0 view .LVU992
 2345 11be 4B8D7CC5 		leaq	0(%r13,%r8,8), %rdi
 2345      00
 2346 11c3 4C89FA   		movq	%r15, %rdx
 2347 11c6 4C89F6   		movq	%r14, %rsi
 2348 11c9 4C894424 		movq	%r8, 24(%rsp)
 2348      18
 2349 11ce E8000000 		call	memcpy@PLT
 2349      00
 2350              	.LVL121:
 2351              		.loc 2 34 10 view .LVU993
 2352              	.LBE295:
 2353              	.LBE302:
 373:sieve_extend.c ****     }
 2354              		.loc 1 373 9 is_stmt 1 view .LVU994
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2355              		.loc 1 371 11 view .LVU995
 2356 11d3 488B4424 		movq	24(%rsp), %rax
 2356      18
 2357              	.LVL122:
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2358              		.loc 1 371 11 is_stmt 0 view .LVU996
 2359 11d8 4E8D0C20 		leaq	(%rax,%r12), %r9
 2360              	.LVL123:
 371:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2361              		.loc 1 371 11 view .LVU997
 2362 11dc 4C39CB   		cmpq	%r9, %rbx
 2363 11df 0F83D4FE 		jnb	.L268
 2363      FFFF
 2364              	.LVL124:
 2365              		.p2align 4,,10
 2366 11e5 0F1F00   		.p2align 3
 2367              	.L267:
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2368              		.loc 1 376 10 is_stmt 1 view .LVU998
 2369 11e8 4839C3   		cmpq	%rax, %rbx
 2370 11eb 0F86F701 		jbe	.L372
 2370      0000
 2371 11f1 4C8B6C24 		movq	8(%rsp), %r13
 2371      08
 2372 11f6 4C8D24C5 		leaq	0(,%rax,8), %r12
 2372      00000000 
 2373              	.LVL125:
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2374              		.loc 1 376 10 is_stmt 0 view .LVU999
 2375 11fe 498D7C24 		leaq	32(%r12), %rdi
 2375      20
 2376 1203 4939FD   		cmpq	%rdi, %r13
 2377 1206 4D8D5520 		leaq	32(%r13), %r10
 2378 120a 410F9DC7 		setge	%r15b
 2379 120e 4D39D4   		cmpq	%r10, %r12
 2380 1211 410F9DC3 		setge	%r11b
 2381 1215 4508DF   		orb	%r11b, %r15b
GAS LISTING /tmp/ccmX4xFB.s 			page 79


 2382 1218 0F84FA01 		je	.L270
 2382      0000
 2383 121e 488D4BFF 		leaq	-1(%rbx), %rcx
 2384 1222 4829C1   		subq	%rax, %rcx
 2385 1225 4883F908 		cmpq	$8, %rcx
 2386 1229 0F86E901 		jbe	.L270
 2386      0000
 2387 122f 4989D9   		movq	%rbx, %r9
 2388 1232 4929C1   		subq	%rax, %r9
 2389 1235 4C89CE   		movq	%r9, %rsi
 2390 1238 48C1EE02 		shrq	$2, %rsi
 2391 123c 48C1E605 		salq	$5, %rsi
 2392 1240 4C8D46E0 		leaq	-32(%rsi), %r8
 2393 1244 49C1E805 		shrq	$5, %r8
 2394 1248 49FFC0   		incq	%r8
 2395 124b 4C036424 		addq	16(%rsp), %r12
 2395      10
 2396 1250 31D2     		xorl	%edx, %edx
 2397 1252 4183E007 		andl	$7, %r8d
 2398 1256 0F849D00 		je	.L271
 2398      0000
 2399 125c 4983F801 		cmpq	$1, %r8
 2400 1260 747E     		je	.L332
 2401 1262 4983F802 		cmpq	$2, %r8
 2402 1266 7468     		je	.L333
 2403 1268 4983F803 		cmpq	$3, %r8
 2404 126c 7452     		je	.L334
 2405 126e 4983F804 		cmpq	$4, %r8
 2406 1272 743C     		je	.L335
 2407 1274 4983F805 		cmpq	$5, %r8
 2408 1278 7426     		je	.L336
 2409 127a 4983F806 		cmpq	$6, %r8
 2410 127e 7410     		je	.L337
 2411              	.LVL126:
 377:sieve_extend.c ****         source_word++;
 2412              		.loc 1 377 9 is_stmt 1 view .LVU1000
 377:sieve_extend.c ****         source_word++;
 2413              		.loc 1 377 29 is_stmt 0 view .LVU1001
 2414 1280 C4C17E6F 		vmovdqu	(%r14), %ymm1
 2414      0E
 2415 1285 BA200000 		movl	$32, %edx
 2415      00
 2416 128a C4C17E7F 		vmovdqu	%ymm1, (%r12)
 2416      0C24
 378:sieve_extend.c ****         copy_word++;
 2417              		.loc 1 378 9 is_stmt 1 view .LVU1002
 379:sieve_extend.c ****     }
 2418              		.loc 1 379 9 view .LVU1003
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2419              		.loc 1 376 10 view .LVU1004
 2420              	.L337:
 377:sieve_extend.c ****         source_word++;
 2421              		.loc 1 377 9 view .LVU1005
 377:sieve_extend.c ****         source_word++;
 2422              		.loc 1 377 29 is_stmt 0 view .LVU1006
 2423 1290 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm7
 2423      3C16
GAS LISTING /tmp/ccmX4xFB.s 			page 80


 2424 1296 C4C17E7F 		vmovdqu	%ymm7, (%r12,%rdx)
 2424      3C14
 378:sieve_extend.c ****         copy_word++;
 2425              		.loc 1 378 9 is_stmt 1 view .LVU1007
 379:sieve_extend.c ****     }
 2426              		.loc 1 379 9 view .LVU1008
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2427              		.loc 1 376 10 view .LVU1009
 2428 129c 4883C220 		addq	$32, %rdx
 2429              	.L336:
 377:sieve_extend.c ****         source_word++;
 2430              		.loc 1 377 9 view .LVU1010
 377:sieve_extend.c ****         source_word++;
 2431              		.loc 1 377 29 is_stmt 0 view .LVU1011
 2432 12a0 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm6
 2432      3416
 2433 12a6 C4C17E7F 		vmovdqu	%ymm6, (%r12,%rdx)
 2433      3414
 378:sieve_extend.c ****         copy_word++;
 2434              		.loc 1 378 9 is_stmt 1 view .LVU1012
 379:sieve_extend.c ****     }
 2435              		.loc 1 379 9 view .LVU1013
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2436              		.loc 1 376 10 view .LVU1014
 2437 12ac 4883C220 		addq	$32, %rdx
 2438              	.L335:
 377:sieve_extend.c ****         source_word++;
 2439              		.loc 1 377 9 view .LVU1015
 377:sieve_extend.c ****         source_word++;
 2440              		.loc 1 377 29 is_stmt 0 view .LVU1016
 2441 12b0 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm5
 2441      2C16
 2442 12b6 C4C17E7F 		vmovdqu	%ymm5, (%r12,%rdx)
 2442      2C14
 378:sieve_extend.c ****         copy_word++;
 2443              		.loc 1 378 9 is_stmt 1 view .LVU1017
 379:sieve_extend.c ****     }
 2444              		.loc 1 379 9 view .LVU1018
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2445              		.loc 1 376 10 view .LVU1019
 2446 12bc 4883C220 		addq	$32, %rdx
 2447              	.L334:
 377:sieve_extend.c ****         source_word++;
 2448              		.loc 1 377 9 view .LVU1020
 377:sieve_extend.c ****         source_word++;
 2449              		.loc 1 377 29 is_stmt 0 view .LVU1021
 2450 12c0 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm4
 2450      2416
 2451 12c6 C4C17E7F 		vmovdqu	%ymm4, (%r12,%rdx)
 2451      2414
 378:sieve_extend.c ****         copy_word++;
 2452              		.loc 1 378 9 is_stmt 1 view .LVU1022
 379:sieve_extend.c ****     }
 2453              		.loc 1 379 9 view .LVU1023
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2454              		.loc 1 376 10 view .LVU1024
 2455 12cc 4883C220 		addq	$32, %rdx
GAS LISTING /tmp/ccmX4xFB.s 			page 81


 2456              	.L333:
 377:sieve_extend.c ****         source_word++;
 2457              		.loc 1 377 9 view .LVU1025
 377:sieve_extend.c ****         source_word++;
 2458              		.loc 1 377 29 is_stmt 0 view .LVU1026
 2459 12d0 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm0
 2459      0416
 2460 12d6 C4C17E7F 		vmovdqu	%ymm0, (%r12,%rdx)
 2460      0414
 378:sieve_extend.c ****         copy_word++;
 2461              		.loc 1 378 9 is_stmt 1 view .LVU1027
 379:sieve_extend.c ****     }
 2462              		.loc 1 379 9 view .LVU1028
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2463              		.loc 1 376 10 view .LVU1029
 2464 12dc 4883C220 		addq	$32, %rdx
 2465              	.L332:
 377:sieve_extend.c ****         source_word++;
 2466              		.loc 1 377 9 view .LVU1030
 377:sieve_extend.c ****         source_word++;
 2467              		.loc 1 377 29 is_stmt 0 view .LVU1031
 2468 12e0 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm2
 2468      1416
 2469 12e6 C4C17E7F 		vmovdqu	%ymm2, (%r12,%rdx)
 2469      1414
 378:sieve_extend.c ****         copy_word++;
 2470              		.loc 1 378 9 is_stmt 1 view .LVU1032
 379:sieve_extend.c ****     }
 2471              		.loc 1 379 9 view .LVU1033
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2472              		.loc 1 376 10 view .LVU1034
 2473 12ec 4883C220 		addq	$32, %rdx
 2474 12f0 4839F2   		cmpq	%rsi, %rdx
 2475 12f3 0F849600 		je	.L368
 2475      0000
 2476              	.L271:
 377:sieve_extend.c ****         source_word++;
 2477              		.loc 1 377 9 view .LVU1035
 377:sieve_extend.c ****         source_word++;
 2478              		.loc 1 377 29 is_stmt 0 view .LVU1036
 2479 12f9 C4C17E6F 		vmovdqu	(%r14,%rdx), %ymm3
 2479      1C16
 2480 12ff C4C17E7F 		vmovdqu	%ymm3, (%r12,%rdx)
 2480      1C14
 378:sieve_extend.c ****         copy_word++;
 2481              		.loc 1 378 9 is_stmt 1 view .LVU1037
 379:sieve_extend.c ****     }
 2482              		.loc 1 379 9 view .LVU1038
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2483              		.loc 1 376 10 view .LVU1039
 377:sieve_extend.c ****         source_word++;
 2484              		.loc 1 377 9 view .LVU1040
 377:sieve_extend.c ****         source_word++;
 2485              		.loc 1 377 29 is_stmt 0 view .LVU1041
 2486 1305 C4417E6F 		vmovdqu	32(%r14,%rdx), %ymm8
 2486      441620
 2487 130c C4417E7F 		vmovdqu	%ymm8, 32(%r12,%rdx)
GAS LISTING /tmp/ccmX4xFB.s 			page 82


 2487      441420
 378:sieve_extend.c ****         copy_word++;
 2488              		.loc 1 378 9 is_stmt 1 view .LVU1042
 379:sieve_extend.c ****     }
 2489              		.loc 1 379 9 view .LVU1043
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2490              		.loc 1 376 10 view .LVU1044
 377:sieve_extend.c ****         source_word++;
 2491              		.loc 1 377 9 view .LVU1045
 377:sieve_extend.c ****         source_word++;
 2492              		.loc 1 377 29 is_stmt 0 view .LVU1046
 2493 1313 C4417E6F 		vmovdqu	64(%r14,%rdx), %ymm9
 2493      4C1640
 2494 131a C4417E7F 		vmovdqu	%ymm9, 64(%r12,%rdx)
 2494      4C1440
 378:sieve_extend.c ****         copy_word++;
 2495              		.loc 1 378 9 is_stmt 1 view .LVU1047
 379:sieve_extend.c ****     }
 2496              		.loc 1 379 9 view .LVU1048
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2497              		.loc 1 376 10 view .LVU1049
 377:sieve_extend.c ****         source_word++;
 2498              		.loc 1 377 9 view .LVU1050
 377:sieve_extend.c ****         source_word++;
 2499              		.loc 1 377 29 is_stmt 0 view .LVU1051
 2500 1321 C4417E6F 		vmovdqu	96(%r14,%rdx), %ymm10
 2500      541660
 2501 1328 C4417E7F 		vmovdqu	%ymm10, 96(%r12,%rdx)
 2501      541460
 378:sieve_extend.c ****         copy_word++;
 2502              		.loc 1 378 9 is_stmt 1 view .LVU1052
 379:sieve_extend.c ****     }
 2503              		.loc 1 379 9 view .LVU1053
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2504              		.loc 1 376 10 view .LVU1054
 377:sieve_extend.c ****         source_word++;
 2505              		.loc 1 377 9 view .LVU1055
 377:sieve_extend.c ****         source_word++;
 2506              		.loc 1 377 29 is_stmt 0 view .LVU1056
 2507 132f C4417E6F 		vmovdqu	128(%r14,%rdx), %ymm11
 2507      9C168000 
 2507      0000
 2508 1339 C4417E7F 		vmovdqu	%ymm11, 128(%r12,%rdx)
 2508      9C148000 
 2508      0000
 378:sieve_extend.c ****         copy_word++;
 2509              		.loc 1 378 9 is_stmt 1 view .LVU1057
 379:sieve_extend.c ****     }
 2510              		.loc 1 379 9 view .LVU1058
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2511              		.loc 1 376 10 view .LVU1059
 377:sieve_extend.c ****         source_word++;
 2512              		.loc 1 377 9 view .LVU1060
 377:sieve_extend.c ****         source_word++;
 2513              		.loc 1 377 29 is_stmt 0 view .LVU1061
 2514 1343 C4417E6F 		vmovdqu	160(%r14,%rdx), %ymm12
 2514      A416A000 
GAS LISTING /tmp/ccmX4xFB.s 			page 83


 2514      0000
 2515 134d C4417E7F 		vmovdqu	%ymm12, 160(%r12,%rdx)
 2515      A414A000 
 2515      0000
 378:sieve_extend.c ****         copy_word++;
 2516              		.loc 1 378 9 is_stmt 1 view .LVU1062
 379:sieve_extend.c ****     }
 2517              		.loc 1 379 9 view .LVU1063
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2518              		.loc 1 376 10 view .LVU1064
 377:sieve_extend.c ****         source_word++;
 2519              		.loc 1 377 9 view .LVU1065
 377:sieve_extend.c ****         source_word++;
 2520              		.loc 1 377 29 is_stmt 0 view .LVU1066
 2521 1357 C4417E6F 		vmovdqu	192(%r14,%rdx), %ymm13
 2521      AC16C000 
 2521      0000
 2522 1361 C4417E7F 		vmovdqu	%ymm13, 192(%r12,%rdx)
 2522      AC14C000 
 2522      0000
 378:sieve_extend.c ****         copy_word++;
 2523              		.loc 1 378 9 is_stmt 1 view .LVU1067
 379:sieve_extend.c ****     }
 2524              		.loc 1 379 9 view .LVU1068
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2525              		.loc 1 376 10 view .LVU1069
 377:sieve_extend.c ****         source_word++;
 2526              		.loc 1 377 9 view .LVU1070
 377:sieve_extend.c ****         source_word++;
 2527              		.loc 1 377 29 is_stmt 0 view .LVU1071
 2528 136b C4417E6F 		vmovdqu	224(%r14,%rdx), %ymm14
 2528      B416E000 
 2528      0000
 2529 1375 C4417E7F 		vmovdqu	%ymm14, 224(%r12,%rdx)
 2529      B414E000 
 2529      0000
 378:sieve_extend.c ****         copy_word++;
 2530              		.loc 1 378 9 is_stmt 1 view .LVU1072
 379:sieve_extend.c ****     }
 2531              		.loc 1 379 9 view .LVU1073
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2532              		.loc 1 376 10 view .LVU1074
 2533 137f 4881C200 		addq	$256, %rdx
 2533      010000
 2534 1386 4839F2   		cmpq	%rsi, %rdx
 2535 1389 0F856AFF 		jne	.L271
 2535      FFFF
 2536              	.L368:
 2537 138f 4C8B2424 		movq	(%rsp), %r12
 2538 1393 4D89CE   		movq	%r9, %r14
 2539 1396 4983E6FC 		andq	$-4, %r14
 2540 139a 4D01F4   		addq	%r14, %r12
 2541 139d 4C01F0   		addq	%r14, %rax
 2542 13a0 4D39F1   		cmpq	%r14, %r9
 2543 13a3 745B     		je	.L371
 2544              	.LVL127:
 377:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 84


 2545              		.loc 1 377 9 view .LVU1075
 377:sieve_extend.c ****         source_word++;
 2546              		.loc 1 377 39 is_stmt 0 view .LVU1076
 2547 13a5 4C8B6C24 		movq	16(%rsp), %r13
 2547      10
 379:sieve_extend.c ****     }
 2548              		.loc 1 379 18 view .LVU1077
 2549 13aa 4C8D7801 		leaq	1(%rax), %r15
 377:sieve_extend.c ****         source_word++;
 2550              		.loc 1 377 39 view .LVU1078
 2551 13ae 4B8B7CE5 		movq	0(%r13,%r12,8), %rdi
 2551      00
 378:sieve_extend.c ****         copy_word++;
 2552              		.loc 1 378 20 view .LVU1079
 2553 13b3 49FFC4   		incq	%r12
 2554              	.LVL128:
 377:sieve_extend.c ****         source_word++;
 2555              		.loc 1 377 29 view .LVU1080
 2556 13b6 49897CC5 		movq	%rdi, 0(%r13,%rax,8)
 2556      00
 378:sieve_extend.c ****         copy_word++;
 2557              		.loc 1 378 9 is_stmt 1 view .LVU1081
 2558              	.LVL129:
 379:sieve_extend.c ****     }
 2559              		.loc 1 379 9 view .LVU1082
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2560              		.loc 1 376 10 view .LVU1083
 2561 13bb 4C39FB   		cmpq	%r15, %rbx
 2562 13be 7640     		jbe	.L371
 377:sieve_extend.c ****         source_word++;
 2563              		.loc 1 377 9 view .LVU1084
 377:sieve_extend.c ****         source_word++;
 2564              		.loc 1 377 39 is_stmt 0 view .LVU1085
 2565 13c0 4F8B5CE5 		movq	0(%r13,%r12,8), %r11
 2565      00
 379:sieve_extend.c ****     }
 2566              		.loc 1 379 18 view .LVU1086
 2567 13c5 4883C002 		addq	$2, %rax
 377:sieve_extend.c ****         source_word++;
 2568              		.loc 1 377 29 view .LVU1087
 2569 13c9 4F895CFD 		movq	%r11, 0(%r13,%r15,8)
 2569      00
 378:sieve_extend.c ****         copy_word++;
 2570              		.loc 1 378 9 is_stmt 1 view .LVU1088
 379:sieve_extend.c ****     }
 2571              		.loc 1 379 9 view .LVU1089
 2572              	.LVL130:
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2573              		.loc 1 376 10 view .LVU1090
 377:sieve_extend.c ****         source_word++;
 2574              		.loc 1 377 39 is_stmt 0 view .LVU1091
 2575 13ce 4E8D14E5 		leaq	0(,%r12,8), %r10
 2575      00000000 
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2576              		.loc 1 376 10 view .LVU1092
 2577 13d6 4839C3   		cmpq	%rax, %rbx
 2578 13d9 7625     		jbe	.L371
GAS LISTING /tmp/ccmX4xFB.s 			page 85


 377:sieve_extend.c ****         source_word++;
 2579              		.loc 1 377 9 is_stmt 1 view .LVU1093
 377:sieve_extend.c ****         source_word++;
 2580              		.loc 1 377 39 is_stmt 0 view .LVU1094
 2581 13db 4F8B4C15 		movq	8(%r13,%r10), %r9
 2581      08
 377:sieve_extend.c ****         source_word++;
 2582              		.loc 1 377 29 view .LVU1095
 2583 13e0 4D894CC5 		movq	%r9, 0(%r13,%rax,8)
 2583      00
 378:sieve_extend.c ****         copy_word++;
 2584              		.loc 1 378 9 is_stmt 1 view .LVU1096
 379:sieve_extend.c ****     }
 2585              		.loc 1 379 9 view .LVU1097
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2586              		.loc 1 376 10 view .LVU1098
 2587 13e5 C5F877   		vzeroupper
 2588              	.LVL131:
 2589              	.L372:
 382:sieve_extend.c **** 
 2590              		.loc 1 382 1 is_stmt 0 view .LVU1099
 2591 13e8 488D65D8 		leaq	-40(%rbp), %rsp
 2592              	.LVL132:
 382:sieve_extend.c **** 
 2593              		.loc 1 382 1 view .LVU1100
 2594 13ec 5B       		popq	%rbx
 2595 13ed 415C     		popq	%r12
 2596 13ef 415D     		popq	%r13
 2597 13f1 415E     		popq	%r14
 2598 13f3 415F     		popq	%r15
 2599 13f5 5D       		popq	%rbp
 2600              		.cfi_remember_state
 2601              		.cfi_def_cfa 7, 8
 2602              	.LVL133:
 382:sieve_extend.c **** 
 2603              		.loc 1 382 1 view .LVU1101
 2604 13f6 C3       		ret
 2605              	.LVL134:
 2606 13f7 660F1F84 		.p2align 4,,10
 2606      00000000 
 2606      00
 2607              		.p2align 3
 2608              	.L371:
 2609              		.cfi_restore_state
 382:sieve_extend.c **** 
 2610              		.loc 1 382 1 view .LVU1102
 2611 1400 C5F877   		vzeroupper
 2612 1403 488D65D8 		leaq	-40(%rbp), %rsp
 2613              	.LVL135:
 382:sieve_extend.c **** 
 2614              		.loc 1 382 1 view .LVU1103
 2615 1407 5B       		popq	%rbx
 2616              	.LVL136:
 382:sieve_extend.c **** 
 2617              		.loc 1 382 1 view .LVU1104
 2618 1408 415C     		popq	%r12
 2619 140a 415D     		popq	%r13
GAS LISTING /tmp/ccmX4xFB.s 			page 86


 2620 140c 415E     		popq	%r14
 2621 140e 415F     		popq	%r15
 2622 1410 5D       		popq	%rbp
 2623              		.cfi_remember_state
 2624              		.cfi_def_cfa 7, 8
 2625              	.LVL137:
 382:sieve_extend.c **** 
 2626              		.loc 1 382 1 view .LVU1105
 2627 1411 C3       		ret
 2628              	.LVL138:
 2629              		.p2align 4,,10
 2630 1412 660F1F44 		.p2align 3
 2630      0000
 2631              	.L270:
 2632              		.cfi_restore_state
 382:sieve_extend.c **** 
 2633              		.loc 1 382 1 view .LVU1106
 2634 1418 488B7424 		movq	16(%rsp), %rsi
 2634      10
 377:sieve_extend.c ****         source_word++;
 2635              		.loc 1 377 39 view .LVU1107
 2636 141d 488B1424 		movq	(%rsp), %rdx
 2637 1421 4C8D04DE 		leaq	(%rsi,%rbx,8), %r8
 2638 1425 4901F4   		addq	%rsi, %r12
 2639 1428 4829C2   		subq	%rax, %rdx
 2640 142b 4C89C0   		movq	%r8, %rax
 2641 142e 4C29E0   		subq	%r12, %rax
 2642 1431 4883E808 		subq	$8, %rax
 2643 1435 48C1E803 		shrq	$3, %rax
 2644 1439 48FFC0   		incq	%rax
 2645 143c 83E007   		andl	$7, %eax
 2646 143f 0F848800 		je	.L273
 2646      0000
 2647 1445 4883F801 		cmpq	$1, %rax
 2648 1449 746C     		je	.L338
 2649 144b 4883F802 		cmpq	$2, %rax
 2650 144f 7459     		je	.L339
 2651 1451 4883F803 		cmpq	$3, %rax
 2652 1455 7446     		je	.L340
 2653 1457 4883F804 		cmpq	$4, %rax
 2654 145b 7433     		je	.L341
 2655 145d 4883F805 		cmpq	$5, %rax
 2656 1461 7420     		je	.L342
 2657 1463 4883F806 		cmpq	$6, %rax
 2658 1467 740D     		je	.L343
 2659              	.LVL139:
 377:sieve_extend.c ****         source_word++;
 2660              		.loc 1 377 9 is_stmt 1 view .LVU1108
 377:sieve_extend.c ****         source_word++;
 2661              		.loc 1 377 39 is_stmt 0 view .LVU1109
 2662 1469 4D8B34D4 		movq	(%r12,%rdx,8), %r14
 2663 146d 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2664              		.loc 1 377 29 view .LVU1110
 2665 1471 4D897424 		movq	%r14, -8(%r12)
 2665      F8
 378:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 87


 2666              		.loc 1 378 9 is_stmt 1 view .LVU1111
 379:sieve_extend.c ****     }
 2667              		.loc 1 379 9 view .LVU1112
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2668              		.loc 1 376 10 view .LVU1113
 2669              	.L343:
 377:sieve_extend.c ****         source_word++;
 2670              		.loc 1 377 9 view .LVU1114
 377:sieve_extend.c ****         source_word++;
 2671              		.loc 1 377 39 is_stmt 0 view .LVU1115
 2672 1476 4D8B2CD4 		movq	(%r12,%rdx,8), %r13
 2673 147a 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2674              		.loc 1 377 29 view .LVU1116
 2675 147e 4D896C24 		movq	%r13, -8(%r12)
 2675      F8
 378:sieve_extend.c ****         copy_word++;
 2676              		.loc 1 378 9 is_stmt 1 view .LVU1117
 379:sieve_extend.c ****     }
 2677              		.loc 1 379 9 view .LVU1118
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2678              		.loc 1 376 10 view .LVU1119
 2679              	.L342:
 377:sieve_extend.c ****         source_word++;
 2680              		.loc 1 377 9 view .LVU1120
 377:sieve_extend.c ****         source_word++;
 2681              		.loc 1 377 39 is_stmt 0 view .LVU1121
 2682 1483 498B3CD4 		movq	(%r12,%rdx,8), %rdi
 2683 1487 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2684              		.loc 1 377 29 view .LVU1122
 2685 148b 49897C24 		movq	%rdi, -8(%r12)
 2685      F8
 378:sieve_extend.c ****         copy_word++;
 2686              		.loc 1 378 9 is_stmt 1 view .LVU1123
 379:sieve_extend.c ****     }
 2687              		.loc 1 379 9 view .LVU1124
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2688              		.loc 1 376 10 view .LVU1125
 2689              	.L341:
 377:sieve_extend.c ****         source_word++;
 2690              		.loc 1 377 9 view .LVU1126
 377:sieve_extend.c ****         source_word++;
 2691              		.loc 1 377 39 is_stmt 0 view .LVU1127
 2692 1490 4D8B3CD4 		movq	(%r12,%rdx,8), %r15
 2693 1494 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2694              		.loc 1 377 29 view .LVU1128
 2695 1498 4D897C24 		movq	%r15, -8(%r12)
 2695      F8
 378:sieve_extend.c ****         copy_word++;
 2696              		.loc 1 378 9 is_stmt 1 view .LVU1129
 379:sieve_extend.c ****     }
 2697              		.loc 1 379 9 view .LVU1130
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2698              		.loc 1 376 10 view .LVU1131
 2699              	.L340:
GAS LISTING /tmp/ccmX4xFB.s 			page 88


 377:sieve_extend.c ****         source_word++;
 2700              		.loc 1 377 9 view .LVU1132
 377:sieve_extend.c ****         source_word++;
 2701              		.loc 1 377 39 is_stmt 0 view .LVU1133
 2702 149d 4D8B14D4 		movq	(%r12,%rdx,8), %r10
 2703 14a1 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2704              		.loc 1 377 29 view .LVU1134
 2705 14a5 4D895424 		movq	%r10, -8(%r12)
 2705      F8
 378:sieve_extend.c ****         copy_word++;
 2706              		.loc 1 378 9 is_stmt 1 view .LVU1135
 379:sieve_extend.c ****     }
 2707              		.loc 1 379 9 view .LVU1136
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2708              		.loc 1 376 10 view .LVU1137
 2709              	.L339:
 377:sieve_extend.c ****         source_word++;
 2710              		.loc 1 377 9 view .LVU1138
 377:sieve_extend.c ****         source_word++;
 2711              		.loc 1 377 39 is_stmt 0 view .LVU1139
 2712 14aa 4D8B1CD4 		movq	(%r12,%rdx,8), %r11
 2713 14ae 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2714              		.loc 1 377 29 view .LVU1140
 2715 14b2 4D895C24 		movq	%r11, -8(%r12)
 2715      F8
 378:sieve_extend.c ****         copy_word++;
 2716              		.loc 1 378 9 is_stmt 1 view .LVU1141
 379:sieve_extend.c ****     }
 2717              		.loc 1 379 9 view .LVU1142
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2718              		.loc 1 376 10 view .LVU1143
 2719              	.L338:
 377:sieve_extend.c ****         source_word++;
 2720              		.loc 1 377 9 view .LVU1144
 377:sieve_extend.c ****         source_word++;
 2721              		.loc 1 377 39 is_stmt 0 view .LVU1145
 2722 14b7 498B0CD4 		movq	(%r12,%rdx,8), %rcx
 2723 14bb 4983C408 		addq	$8, %r12
 377:sieve_extend.c ****         source_word++;
 2724              		.loc 1 377 29 view .LVU1146
 2725 14bf 49894C24 		movq	%rcx, -8(%r12)
 2725      F8
 378:sieve_extend.c ****         copy_word++;
 2726              		.loc 1 378 9 is_stmt 1 view .LVU1147
 379:sieve_extend.c ****     }
 2727              		.loc 1 379 9 view .LVU1148
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2728              		.loc 1 376 10 view .LVU1149
 2729 14c4 4D39C4   		cmpq	%r8, %r12
 2730 14c7 0F841BFF 		je	.L372
 2730      FFFF
 2731              	.LVL140:
 2732              	.L273:
 377:sieve_extend.c ****         source_word++;
 2733              		.loc 1 377 9 view .LVU1150
GAS LISTING /tmp/ccmX4xFB.s 			page 89


 377:sieve_extend.c ****         source_word++;
 2734              		.loc 1 377 39 is_stmt 0 view .LVU1151
 2735 14cd 498B1CD4 		movq	(%r12,%rdx,8), %rbx
 377:sieve_extend.c ****         source_word++;
 2736              		.loc 1 377 29 view .LVU1152
 2737 14d1 49891C24 		movq	%rbx, (%r12)
 378:sieve_extend.c ****         copy_word++;
 2738              		.loc 1 378 9 is_stmt 1 view .LVU1153
 379:sieve_extend.c ****     }
 2739              		.loc 1 379 9 view .LVU1154
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2740              		.loc 1 376 10 view .LVU1155
 377:sieve_extend.c ****         source_word++;
 2741              		.loc 1 377 9 view .LVU1156
 377:sieve_extend.c ****         source_word++;
 2742              		.loc 1 377 39 is_stmt 0 view .LVU1157
 2743 14d5 4D8B4CD4 		movq	8(%r12,%rdx,8), %r9
 2743      08
 377:sieve_extend.c ****         source_word++;
 2744              		.loc 1 377 29 view .LVU1158
 2745 14da 4D894C24 		movq	%r9, 8(%r12)
 2745      08
 378:sieve_extend.c ****         copy_word++;
 2746              		.loc 1 378 9 is_stmt 1 view .LVU1159
 379:sieve_extend.c ****     }
 2747              		.loc 1 379 9 view .LVU1160
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2748              		.loc 1 376 10 view .LVU1161
 377:sieve_extend.c ****         source_word++;
 2749              		.loc 1 377 9 view .LVU1162
 377:sieve_extend.c ****         source_word++;
 2750              		.loc 1 377 39 is_stmt 0 view .LVU1163
 2751 14df 498B74D4 		movq	16(%r12,%rdx,8), %rsi
 2751      10
 377:sieve_extend.c ****         source_word++;
 2752              		.loc 1 377 29 view .LVU1164
 2753 14e4 49897424 		movq	%rsi, 16(%r12)
 2753      10
 378:sieve_extend.c ****         copy_word++;
 2754              		.loc 1 378 9 is_stmt 1 view .LVU1165
 379:sieve_extend.c ****     }
 2755              		.loc 1 379 9 view .LVU1166
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2756              		.loc 1 376 10 view .LVU1167
 377:sieve_extend.c ****         source_word++;
 2757              		.loc 1 377 9 view .LVU1168
 377:sieve_extend.c ****         source_word++;
 2758              		.loc 1 377 39 is_stmt 0 view .LVU1169
 2759 14e9 498B44D4 		movq	24(%r12,%rdx,8), %rax
 2759      18
 377:sieve_extend.c ****         source_word++;
 2760              		.loc 1 377 29 view .LVU1170
 2761 14ee 49894424 		movq	%rax, 24(%r12)
 2761      18
 378:sieve_extend.c ****         copy_word++;
 2762              		.loc 1 378 9 is_stmt 1 view .LVU1171
 379:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 90


 2763              		.loc 1 379 9 view .LVU1172
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2764              		.loc 1 376 10 view .LVU1173
 377:sieve_extend.c ****         source_word++;
 2765              		.loc 1 377 9 view .LVU1174
 377:sieve_extend.c ****         source_word++;
 2766              		.loc 1 377 39 is_stmt 0 view .LVU1175
 2767 14f3 4D8B74D4 		movq	32(%r12,%rdx,8), %r14
 2767      20
 377:sieve_extend.c ****         source_word++;
 2768              		.loc 1 377 29 view .LVU1176
 2769 14f8 4D897424 		movq	%r14, 32(%r12)
 2769      20
 378:sieve_extend.c ****         copy_word++;
 2770              		.loc 1 378 9 is_stmt 1 view .LVU1177
 379:sieve_extend.c ****     }
 2771              		.loc 1 379 9 view .LVU1178
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2772              		.loc 1 376 10 view .LVU1179
 377:sieve_extend.c ****         source_word++;
 2773              		.loc 1 377 9 view .LVU1180
 377:sieve_extend.c ****         source_word++;
 2774              		.loc 1 377 39 is_stmt 0 view .LVU1181
 2775 14fd 4D8B6CD4 		movq	40(%r12,%rdx,8), %r13
 2775      28
 377:sieve_extend.c ****         source_word++;
 2776              		.loc 1 377 29 view .LVU1182
 2777 1502 4D896C24 		movq	%r13, 40(%r12)
 2777      28
 378:sieve_extend.c ****         copy_word++;
 2778              		.loc 1 378 9 is_stmt 1 view .LVU1183
 379:sieve_extend.c ****     }
 2779              		.loc 1 379 9 view .LVU1184
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2780              		.loc 1 376 10 view .LVU1185
 377:sieve_extend.c ****         source_word++;
 2781              		.loc 1 377 9 view .LVU1186
 377:sieve_extend.c ****         source_word++;
 2782              		.loc 1 377 39 is_stmt 0 view .LVU1187
 2783 1507 498B7CD4 		movq	48(%r12,%rdx,8), %rdi
 2783      30
 377:sieve_extend.c ****         source_word++;
 2784              		.loc 1 377 29 view .LVU1188
 2785 150c 49897C24 		movq	%rdi, 48(%r12)
 2785      30
 378:sieve_extend.c ****         copy_word++;
 2786              		.loc 1 378 9 is_stmt 1 view .LVU1189
 379:sieve_extend.c ****     }
 2787              		.loc 1 379 9 view .LVU1190
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2788              		.loc 1 376 10 view .LVU1191
 377:sieve_extend.c ****         source_word++;
 2789              		.loc 1 377 9 view .LVU1192
 377:sieve_extend.c ****         source_word++;
 2790              		.loc 1 377 39 is_stmt 0 view .LVU1193
 2791 1511 4D8B7CD4 		movq	56(%r12,%rdx,8), %r15
 2791      38
GAS LISTING /tmp/ccmX4xFB.s 			page 91


 2792 1516 4983C440 		addq	$64, %r12
 377:sieve_extend.c ****         source_word++;
 2793              		.loc 1 377 29 view .LVU1194
 2794 151a 4D897C24 		movq	%r15, -8(%r12)
 2794      F8
 378:sieve_extend.c ****         copy_word++;
 2795              		.loc 1 378 9 is_stmt 1 view .LVU1195
 379:sieve_extend.c ****     }
 2796              		.loc 1 379 9 view .LVU1196
 376:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 2797              		.loc 1 376 10 view .LVU1197
 2798 151f 4D39C4   		cmpq	%r8, %r12
 2799 1522 75A9     		jne	.L273
 2800 1524 E9BFFEFF 		jmp	.L372
 2800      FF
 2801              		.cfi_endproc
 2802              	.LFE64:
 2804 1529 0F1F8000 		.p2align 4
 2804      000000
 2806              	extendSieve_shiftleft:
 2807              	.LVL141:
 2808              	.LFB70:
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2809              		.loc 1 619 142 view -0
 2810              		.cfi_startproc
 620:sieve_extend.c **** 
 2811              		.loc 1 620 5 view .LVU1199
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2812              		.loc 1 622 5 view .LVU1200
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2813              		.loc 1 619 142 is_stmt 0 view .LVU1201
 2814 1530 55       		pushq	%rbp
 2815              		.cfi_def_cfa_offset 16
 2816              		.cfi_offset 6, -16
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2817              		.loc 1 622 21 view .LVU1202
 2818 1531 48C1E906 		shrq	$6, %rcx
 2819              	.LVL142:
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2820              		.loc 1 622 21 view .LVU1203
 2821 1535 4989CA   		movq	%rcx, %r10
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2822              		.loc 1 619 142 view .LVU1204
 2823 1538 4889E5   		movq	%rsp, %rbp
 2824              		.cfi_def_cfa_register 6
 2825 153b 4157     		pushq	%r15
 2826 153d 4989D1   		movq	%rdx, %r9
 2827 1540 4156     		pushq	%r14
 2828 1542 4155     		pushq	%r13
 2829 1544 4154     		pushq	%r12
 2830 1546 53       		pushq	%rbx
 2831              		.cfi_offset 15, -24
 2832              		.cfi_offset 14, -32
 2833              		.cfi_offset 13, -40
 2834              		.cfi_offset 12, -48
 2835              		.cfi_offset 3, -56
 2836 1547 4889FB   		movq	%rdi, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 92


 623:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 2837              		.loc 1 623 21 view .LVU1205
 2838 154a 488D3C16 		leaq	(%rsi,%rdx), %rdi
 2839              	.LVL143:
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2840              		.loc 1 619 142 view .LVU1206
 2841 154e 4883E4E0 		andq	$-32, %rsp
 2842 1552 4883EC60 		subq	$96, %rsp
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2843              		.loc 1 622 21 view .LVU1207
 2844 1556 48894C24 		movq	%rcx, 80(%rsp)
 2844      50
 2845              	.LVL144:
 623:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 2846              		.loc 1 623 5 is_stmt 1 view .LVU1208
 624:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2847              		.loc 1 624 5 view .LVU1209
 624:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2848              		.loc 1 624 39 is_stmt 0 view .LVU1210
 2849 155b 4889F1   		movq	%rsi, %rcx
 2850              	.LVL145:
 626:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2851              		.loc 1 626 24 view .LVU1211
 2852 155e 48C1EE06 		shrq	$6, %rsi
 2853              	.LVL146:
 626:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2854              		.loc 1 626 24 view .LVU1212
 2855 1562 4989F0   		movq	%rsi, %r8
 624:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2856              		.loc 1 624 39 view .LVU1213
 2857 1565 83E13F   		andl	$63, %ecx
 2858              	.LVL147:
 624:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2859              		.loc 1 624 69 view .LVU1214
 2860 1568 4889F8   		movq	%rdi, %rax
 2861 156b 83E03F   		andl	$63, %eax
 2862              	.LVL148:
 625:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2863              		.loc 1 625 5 is_stmt 1 view .LVU1215
 626:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2864              		.loc 1 626 5 view .LVU1216
 627:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 2865              		.loc 1 627 5 view .LVU1217
 629:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2866              		.loc 1 629 41 is_stmt 0 view .LVU1218
 2867 156e 4D8D7001 		leaq	1(%r8), %r14
 624:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2868              		.loc 1 624 31 view .LVU1219
 2869 1572 4989CF   		movq	%rcx, %r15
 2870 1575 4929C7   		subq	%rax, %r15
 2871              	.LVL149:
 629:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2872              		.loc 1 629 41 view .LVU1220
 2873 1578 4C897424 		movq	%r14, 88(%rsp)
 2873      58
 625:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2874              		.loc 1 625 31 view .LVU1221
GAS LISTING /tmp/ccmX4xFB.s 			page 93


 2875 157d 4829C8   		subq	%rcx, %rax
 2876              	.LVL150:
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2877              		.loc 1 628 52 view .LVU1222
 2878 1580 4A8B0CC3 		movq	(%rbx,%r8,8), %rcx
 2879              	.LVL151:
 625:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2880              		.loc 1 625 31 view .LVU1223
 2881 1584 4C8D7040 		leaq	64(%rax), %r14
 2882              	.LVL152:
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2883              		.loc 1 619 142 view .LVU1224
 2884 1588 48895424 		movq	%rdx, 24(%rsp)
 2884      18
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2885              		.loc 1 628 38 view .LVU1225
 2886 158d 4A8D14C5 		leaq	0(,%r8,8), %rdx
 2886      00000000 
 2887              	.LVL153:
 629:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2888              		.loc 1 629 57 view .LVU1226
 2889 1595 C4E289F7 		shlx	%r14, 8(%rbx,%rdx), %rax
 2889      441308
 627:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 2890              		.loc 1 627 24 view .LVU1227
 2891 159c 4989FB   		movq	%rdi, %r11
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2892              		.loc 1 628 52 view .LVU1228
 2893 159f C46283F7 		shrx	%r15, %rcx, %r8
 2893      C1
 630:sieve_extend.c **** 
 2894              		.loc 1 630 33 view .LVU1229
 2895 15a4 F7D7     		notl	%edi
 2896              	.LVL154:
 629:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2897              		.loc 1 629 30 view .LVU1230
 2898 15a6 4909C0   		orq	%rax, %r8
 630:sieve_extend.c **** 
 2899              		.loc 1 630 33 view .LVU1231
 2900 15a9 48C7C0FF 		movq	$-1, %rax
 2900      FFFFFF
 2901 15b0 C4E2C3F7 		shrx	%rdi, %rax, %rdi
 2901      F8
 630:sieve_extend.c **** 
 2902              		.loc 1 630 30 view .LVU1232
 2903 15b5 C4C2C0F2 		andn	%r8, %rdi, %rcx
 2903      C8
 635:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 2904              		.loc 1 635 41 view .LVU1233
 2905 15ba 4C8B4424 		movq	88(%rsp), %r8
 2905      58
 627:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 2906              		.loc 1 627 24 view .LVU1234
 2907 15bf 49C1EB06 		shrq	$6, %r11
 2908              	.LVL155:
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2909              		.loc 1 628 5 is_stmt 1 view .LVU1235
GAS LISTING /tmp/ccmX4xFB.s 			page 94


 635:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 2910              		.loc 1 635 41 is_stmt 0 view .LVU1236
 2911 15c3 4D01C8   		addq	%r9, %r8
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2912              		.loc 1 628 25 view .LVU1237
 2913 15c6 4A8D34DD 		leaq	0(,%r11,8), %rsi
 2913      00000000 
 2914 15ce 48090C33 		orq	%rcx, (%rbx,%rsi)
 632:sieve_extend.c ****     source_word++;
 2915              		.loc 1 632 5 is_stmt 1 view .LVU1238
 635:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 2916              		.loc 1 635 21 is_stmt 0 view .LVU1239
 2917 15d2 4D39D0   		cmpq	%r10, %r8
 2918 15d5 4D0F47C2 		cmova	%r10, %r8
 2919              	.LBB309:
 2920              	.LBB310:
 478:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2921              		.loc 1 478 91 view .LVU1240
 2922 15d9 41BA0200 		movl	$2, %r10d
 2922      0000
 2923              	.LVL156:
 478:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2924              		.loc 1 478 91 view .LVU1241
 2925 15df 4983F802 		cmpq	$2, %r8
 2926 15e3 4D0F43D0 		cmovnb	%r8, %r10
 2927              	.LBE310:
 2928              	.LBE309:
 632:sieve_extend.c ****     source_word++;
 2929              		.loc 1 632 14 view .LVU1242
 2930 15e7 498D4301 		leaq	1(%r11), %rax
 2931              	.LVL157:
 633:sieve_extend.c **** 
 2932              		.loc 1 633 5 is_stmt 1 view .LVU1243
 635:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 2933              		.loc 1 635 5 view .LVU1244
 2934              	.LBB332:
 2935              	.LBB327:
 478:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2936              		.loc 1 478 21 is_stmt 0 view .LVU1245
 2937 15eb 498D7AFE 		leaq	-2(%r10), %rdi
 2938              	.LBE327:
 2939              	.LBE332:
 635:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 2940              		.loc 1 635 21 view .LVU1246
 2941 15ef 4C894424 		movq	%r8, 56(%rsp)
 2941      38
 2942              	.LVL158:
 636:sieve_extend.c ****     source_word += distance;
 2943              		.loc 1 636 5 is_stmt 1 view .LVU1247
 2944              	.LBB333:
 2945              	.LBI309:
 477:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 2946              		.loc 1 477 25 view .LVU1248
 2947              	.LBB328:
 478:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2948              		.loc 1 478 5 view .LVU1249
 478:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 95


 2949              		.loc 1 478 21 is_stmt 0 view .LVU1250
 2950 15f4 48897C24 		movq	%rdi, 72(%rsp)
 2950      48
 2951              	.LVL159:
 479:sieve_extend.c ****     counter_t distance = 0;
 2952              		.loc 1 479 5 is_stmt 1 view .LVU1251
 480:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 2953              		.loc 1 480 5 view .LVU1252
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 2954              		.loc 1 481 5 view .LVU1253
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 2955              		.loc 1 481 11 view .LVU1254
 2956              	.LBE328:
 2957              	.LBE333:
 628:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 2958              		.loc 1 628 52 is_stmt 0 view .LVU1255
 2959 15f9 4589FC   		movl	%r15d, %r12d
 629:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2960              		.loc 1 629 57 view .LVU1256
 2961 15fc 4589F5   		movl	%r14d, %r13d
 2962              	.LBB334:
 2963              	.LBB329:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 2964              		.loc 1 481 11 view .LVU1257
 2965 15ff 4839F8   		cmpq	%rdi, %rax
 2966 1602 0F832104 		jnb	.L375
 2966      0000
 2967 1608 4D29DA   		subq	%r11, %r10
 2968 160b 4C8D4A40 		leaq	64(%rdx), %r9
 2969              	.LVL160:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 2970              		.loc 1 481 11 view .LVU1258
 2971 160f 498D4AFC 		leaq	-4(%r10), %rcx
 2972 1613 4C8D4610 		leaq	16(%rsi), %r8
 2973 1617 4C8D5648 		leaq	72(%rsi), %r10
 2974 161b 48894C24 		movq	%rcx, 48(%rsp)
 2974      30
 2975 1620 4D39C1   		cmpq	%r8, %r9
 2976 1623 488D4A08 		leaq	8(%rdx), %rcx
 2977 1627 4C894C24 		movq	%r9, 40(%rsp)
 2977      28
 2978 162c 410F9EC1 		setle	%r9b
 2979 1630 4939CA   		cmpq	%rcx, %r10
 2980 1633 4C895424 		movq	%r10, 64(%rsp)
 2980      40
 2981 1638 410F9EC2 		setle	%r10b
 2982 163c 4509D1   		orl	%r10d, %r9d
 2983 163f 4589CA   		movl	%r9d, %r10d
 2984 1642 4C8D4A50 		leaq	80(%rdx), %r9
 2985 1646 4D39C1   		cmpq	%r8, %r9
 2986 1649 4C894C24 		movq	%r9, 32(%rsp)
 2986      20
 2987 164e 410F9EC1 		setle	%r9b
 2988 1652 4883C210 		addq	$16, %rdx
 2989 1656 48395424 		cmpq	%rdx, 64(%rsp)
 2989      40
 2990 165b 400F9EC7 		setle	%dil
GAS LISTING /tmp/ccmX4xFB.s 			page 96


 2991              	.LVL161:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 2992              		.loc 1 481 11 view .LVU1259
 2993 165f 4409CF   		orl	%r9d, %edi
 2994 1662 4421D7   		andl	%r10d, %edi
 2995 1665 48837C24 		cmpq	$11, 48(%rsp)
 2995      300B
 2996 166b 410F97C2 		seta	%r10b
 2997 166f 4C8D4E08 		leaq	8(%rsi), %r9
 2998 1673 4421D7   		andl	%r10d, %edi
 2999 1676 4C394C24 		cmpq	%r9, 40(%rsp)
 2999      28
 3000 167b 410F9EC2 		setle	%r10b
 3001 167f 4883C640 		addq	$64, %rsi
 3002 1683 4839CE   		cmpq	%rcx, %rsi
 3003 1686 0F9E4424 		setle	40(%rsp)
 3003      28
 3004 168b 440A5424 		orb	40(%rsp), %r10b
 3004      28
 3005 1690 4421D7   		andl	%r10d, %edi
 3006 1693 4C394C24 		cmpq	%r9, 32(%rsp)
 3006      20
 3007 1698 410F9EC2 		setle	%r10b
 3008 169c 4839D6   		cmpq	%rdx, %rsi
 3009 169f 0F9E4424 		setle	40(%rsp)
 3009      28
 3010 16a4 440A5424 		orb	40(%rsp), %r10b
 3010      28
 3011 16a9 4484D7   		testb	%r10b, %dil
 3012 16ac 0F84660E 		je	.L376
 3012      0000
 3013 16b2 4C394C24 		cmpq	%r9, 64(%rsp)
 3013      40
 3014 16b7 400F9EC7 		setle	%dil
 3015 16bb 4C39C6   		cmpq	%r8, %rsi
 3016 16be 400F9EC6 		setle	%sil
 3017 16c2 4008F7   		orb	%sil, %dil
 3018 16c5 0F844D0E 		je	.L376
 3018      0000
 3019 16cb 4801D9   		addq	%rbx, %rcx
 3020              	.LBB311:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3021              		.loc 1 482 19 view .LVU1260
 3022 16ce C5FE6F39 		vmovdqu	(%rcx), %ymm7
 3023 16d2 4801DA   		addq	%rbx, %rdx
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3024              		.loc 1 483 19 view .LVU1261
 3025 16d5 C5FE6F0A 		vmovdqu	(%rdx), %ymm1
 3026 16d9 C5FE6F42 		vmovdqu	32(%rdx), %ymm0
 3026      20
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3027              		.loc 1 482 19 view .LVU1262
 3028 16de C5C56C51 		vpunpcklqdq	32(%rcx), %ymm7, %ymm2
 3028      20
 3029 16e3 4C8B5C24 		movq	48(%rsp), %r11
 3029      30
 3030              	.LVL162:
GAS LISTING /tmp/ccmX4xFB.s 			page 97


 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3031              		.loc 1 483 19 view .LVU1263
 3032 16e8 C5F56CE8 		vpunpcklqdq	%ymm0, %ymm1, %ymm5
 3033 16ec C5756DF0 		vpunpckhqdq	%ymm0, %ymm1, %ymm14
 3034 16f0 49C1EB03 		shrq	$3, %r11
 3035 16f4 C463FD00 		vpermq	$216, %ymm5, %ymm8
 3035      C5D8
 3036 16fa C4C1796E 		vmovd	%r15d, %xmm3
 3036      DF
 3037 16ff C4C1796E 		vmovd	%r14d, %xmm4
 3037      E6
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3038              		.loc 1 482 19 view .LVU1264
 3039 1704 C4E3FD00 		vpermq	$216, %ymm2, %ymm6
 3039      F2D8
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3040              		.loc 1 483 19 view .LVU1265
 3041 170a C443FD00 		vpermq	$216, %ymm14, %ymm15
 3041      FED8
 3042 1710 4C895C24 		movq	%r11, 64(%rsp)
 3042      40
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3043              		.loc 1 484 42 view .LVU1266
 3044 1715 C54DD3CB 		vpsrlq	%xmm3, %ymm6, %ymm9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3045              		.loc 1 484 63 view .LVU1267
 3046 1719 C53DF3D4 		vpsllq	%xmm4, %ymm8, %ymm10
 486:sieve_extend.c ****         copy_word += 2;
 3047              		.loc 1 486 63 view .LVU1268
 3048 171d C585F3CC 		vpsllq	%xmm4, %ymm15, %ymm1
 486:sieve_extend.c ****         copy_word += 2;
 3049              		.loc 1 486 42 view .LVU1269
 3050 1721 C5BDD3C3 		vpsrlq	%xmm3, %ymm8, %ymm0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3051              		.loc 1 484 52 view .LVU1270
 3052 1725 C44135EB 		vpor	%ymm10, %ymm9, %ymm11
 3052      DA
 486:sieve_extend.c ****         copy_word += 2;
 3053              		.loc 1 486 52 view .LVU1271
 3054 172a C5F5EBE8 		vpor	%ymm0, %ymm1, %ymm5
 3055 172e 49FFCB   		decq	%r11
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3056              		.loc 1 484 31 view .LVU1272
 3057 1731 C4437D39 		vextracti128	$0x1, %ymm11, %xmm13
 3057      DD01
 486:sieve_extend.c ****         copy_word += 2;
 3058              		.loc 1 486 31 view .LVU1273
 3059 1737 C4E37D39 		vextracti128	$0x1, %ymm5, %xmm7
 3059      EF01
 3060 173d 4183E301 		andl	$1, %r11d
 3061              	.LVL163:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3062              		.loc 1 482 9 is_stmt 1 view .LVU1274
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3063              		.loc 1 483 9 view .LVU1275
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3064              		.loc 1 484 9 view .LVU1276
GAS LISTING /tmp/ccmX4xFB.s 			page 98


 3065 1741 48837C24 		cmpq	$1, 64(%rsp)
 3065      4001
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3066              		.loc 1 484 31 is_stmt 0 view .LVU1277
 3067 1747 C42179D6 		vmovq	%xmm11, (%rbx,%r9)
 3067      1C0B
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3068              		.loc 1 484 31 view .LVU1278
 3069 174d C42179D6 		vmovq	%xmm13, 32(%rbx,%r9)
 3069      6C0B20
 3070 1754 C423F916 		vpextrq	$1, %xmm11, 16(%rbx,%r9)
 3070      5C0B1001 
 3071 175c C423F916 		vpextrq	$1, %xmm13, 48(%rbx,%r9)
 3071      6C0B3001 
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3072              		.loc 1 485 9 is_stmt 1 view .LVU1279
 3073              	.LVL164:
 486:sieve_extend.c ****         copy_word += 2;
 3074              		.loc 1 486 9 view .LVU1280
 3075 1764 4E8D140B 		leaq	(%rbx,%r9), %r10
 3076 1768 4A8D3C03 		leaq	(%rbx,%r8), %rdi
 486:sieve_extend.c ****         copy_word += 2;
 3077              		.loc 1 486 31 is_stmt 0 view .LVU1281
 3078 176c C4A179D6 		vmovq	%xmm5, (%rbx,%r8)
 3078      2C03
 486:sieve_extend.c ****         copy_word += 2;
 3079              		.loc 1 486 31 view .LVU1282
 3080 1772 C4A179D6 		vmovq	%xmm7, 32(%rbx,%r8)
 3080      7C0320
 3081 1779 C4A3F916 		vpextrq	$1, %xmm5, 16(%rbx,%r8)
 3081      6C031001 
 3082 1781 C4A3F916 		vpextrq	$1, %xmm7, 48(%rbx,%r8)
 3082      7C033001 
 487:sieve_extend.c ****         source_word += 2;
 3083              		.loc 1 487 9 is_stmt 1 view .LVU1283
 488:sieve_extend.c ****         distance += 2;
 3084              		.loc 1 488 9 view .LVU1284
 489:sieve_extend.c ****     }
 3085              		.loc 1 489 9 view .LVU1285
 489:sieve_extend.c ****     }
 3086              		.loc 1 489 9 is_stmt 0 view .LVU1286
 3087              	.LBE311:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3088              		.loc 1 481 11 is_stmt 1 view .LVU1287
 3089 1789 41B94000 		movl	$64, %r9d
 3089      0000
 3090 178f 41B80100 		movl	$1, %r8d
 3090      0000
 3091 1795 0F864A01 		jbe	.L594
 3091      0000
 3092 179b 4D85DB   		testq	%r11, %r11
 3093 179e 0F859C0A 		jne	.L627
 3093      0000
 3094              	.L620:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3095              		.loc 1 481 11 is_stmt 0 view .LVU1288
 3096 17a4 488B7424 		movq	64(%rsp), %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 99


 3096      40
 3097              	.L377:
 3098              	.LBB312:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3099              		.loc 1 482 9 is_stmt 1 view .LVU1289
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3100              		.loc 1 483 9 view .LVU1290
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3101              		.loc 1 482 19 is_stmt 0 view .LVU1291
 3102 17a9 C4A17E6F 		vmovdqu	(%rcx,%r9), %ymm1
 3102      0C09
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3103              		.loc 1 483 19 view .LVU1292
 3104 17af C4217E6F 		vmovdqu	(%rdx,%r9), %ymm12
 3104      240A
 3105 17b5 C4217E6F 		vmovdqu	32(%rdx,%r9), %ymm13
 3105      6C0A20
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3106              		.loc 1 482 19 view .LVU1293
 3107 17bc C4A1756C 		vpunpcklqdq	32(%rcx,%r9), %ymm1, %ymm0
 3107      440920
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3108              		.loc 1 483 19 view .LVU1294
 3109 17c3 C4411D6C 		vpunpcklqdq	%ymm13, %ymm12, %ymm14
 3109      F5
 3110 17c8 C4411D6D 		vpunpckhqdq	%ymm13, %ymm12, %ymm11
 3110      DD
 3111 17cd C443FD00 		vpermq	$216, %ymm14, %ymm15
 3111      FED8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3112              		.loc 1 484 9 is_stmt 1 view .LVU1295
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3113              		.loc 1 482 19 is_stmt 0 view .LVU1296
 3114 17d3 C4E3FD00 		vpermq	$216, %ymm0, %ymm5
 3114      E8D8
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3115              		.loc 1 483 19 view .LVU1297
 3116 17d9 C4C3FD00 		vpermq	$216, %ymm11, %ymm6
 3116      F3D8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3117              		.loc 1 484 42 view .LVU1298
 3118 17df C555D3C3 		vpsrlq	%xmm3, %ymm5, %ymm8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3119              		.loc 1 484 63 view .LVU1299
 3120 17e3 C585F3FC 		vpsllq	%xmm4, %ymm15, %ymm7
 486:sieve_extend.c ****         copy_word += 2;
 3121              		.loc 1 486 63 view .LVU1300
 3122 17e7 C54DF3E4 		vpsllq	%xmm4, %ymm6, %ymm12
 486:sieve_extend.c ****         copy_word += 2;
 3123              		.loc 1 486 42 view .LVU1301
 3124 17eb C505D3EB 		vpsrlq	%xmm3, %ymm15, %ymm13
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3125              		.loc 1 484 52 view .LVU1302
 3126 17ef C53DEBCF 		vpor	%ymm7, %ymm8, %ymm9
 486:sieve_extend.c ****         copy_word += 2;
 3127              		.loc 1 486 52 view .LVU1303
 3128 17f3 C4411DEB 		vpor	%ymm13, %ymm12, %ymm14
GAS LISTING /tmp/ccmX4xFB.s 			page 100


 3128      F5
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3129              		.loc 1 484 31 view .LVU1304
 3130 17f8 C4637D39 		vextracti128	$0x1, %ymm9, %xmm2
 3130      CA01
 486:sieve_extend.c ****         copy_word += 2;
 3131              		.loc 1 486 31 view .LVU1305
 3132 17fe C4637D39 		vextracti128	$0x1, %ymm14, %xmm1
 3132      F101
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3133              		.loc 1 484 31 view .LVU1306
 3134 1804 C40179D6 		vmovq	%xmm9, (%r10,%r9)
 3134      0C0A
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3135              		.loc 1 484 31 view .LVU1307
 3136 180a C48179D6 		vmovq	%xmm2, 32(%r10,%r9)
 3136      540A20
 3137 1811 C403F916 		vpextrq	$1, %xmm9, 16(%r10,%r9)
 3137      4C0A1001 
 3138 1819 C483F916 		vpextrq	$1, %xmm2, 48(%r10,%r9)
 3138      540A3001 
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3139              		.loc 1 485 9 is_stmt 1 view .LVU1308
 486:sieve_extend.c ****         copy_word += 2;
 3140              		.loc 1 486 9 view .LVU1309
 486:sieve_extend.c ****         copy_word += 2;
 3141              		.loc 1 486 31 is_stmt 0 view .LVU1310
 3142 1821 C42179D6 		vmovq	%xmm14, (%rdi,%r9)
 3142      340F
 486:sieve_extend.c ****         copy_word += 2;
 3143              		.loc 1 486 31 view .LVU1311
 3144 1827 C4A179D6 		vmovq	%xmm1, 32(%rdi,%r9)
 3144      4C0F20
 3145 182e C423F916 		vpextrq	$1, %xmm14, 16(%rdi,%r9)
 3145      740F1001 
 3146 1836 C4A3F916 		vpextrq	$1, %xmm1, 48(%rdi,%r9)
 3146      4C0F3001 
 487:sieve_extend.c ****         source_word += 2;
 3147              		.loc 1 487 9 is_stmt 1 view .LVU1312
 488:sieve_extend.c ****         distance += 2;
 3148              		.loc 1 488 9 view .LVU1313
 489:sieve_extend.c ****     }
 3149              		.loc 1 489 9 view .LVU1314
 489:sieve_extend.c ****     }
 3150              		.loc 1 489 9 is_stmt 0 view .LVU1315
 3151              	.LBE312:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3152              		.loc 1 481 11 is_stmt 1 view .LVU1316
 3153              	.LBB313:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3154              		.loc 1 482 9 view .LVU1317
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3155              		.loc 1 483 9 view .LVU1318
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3156              		.loc 1 482 19 is_stmt 0 view .LVU1319
 3157 183e C4A17E6F 		vmovdqu	64(%rcx,%r9), %ymm7
 3157      7C0940
GAS LISTING /tmp/ccmX4xFB.s 			page 101


 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3158              		.loc 1 483 19 view .LVU1320
 3159 1845 C4217E6F 		vmovdqu	64(%rdx,%r9), %ymm8
 3159      440A40
 3160 184c C4A17E6F 		vmovdqu	96(%rdx,%r9), %ymm0
 3160      440A60
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3161              		.loc 1 482 19 view .LVU1321
 3162 1853 C421456C 		vpunpcklqdq	96(%rcx,%r9), %ymm7, %ymm10
 3162      540960
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3163              		.loc 1 483 19 view .LVU1322
 3164 185a C5BD6CE8 		vpunpcklqdq	%ymm0, %ymm8, %ymm5
 3165 185e C53D6DF8 		vpunpckhqdq	%ymm0, %ymm8, %ymm15
 3166 1862 C463FD00 		vpermq	$216, %ymm5, %ymm9
 3166      CDD8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3167              		.loc 1 484 9 is_stmt 1 view .LVU1323
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3168              		.loc 1 482 19 is_stmt 0 view .LVU1324
 3169 1868 C4C3FD00 		vpermq	$216, %ymm10, %ymm2
 3169      D2D8
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3170              		.loc 1 483 19 view .LVU1325
 3171 186e C4C3FD00 		vpermq	$216, %ymm15, %ymm1
 3171      CFD8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3172              		.loc 1 484 42 view .LVU1326
 3173 1874 C56DD3DB 		vpsrlq	%xmm3, %ymm2, %ymm11
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3174              		.loc 1 484 63 view .LVU1327
 3175 1878 C5B5F3F4 		vpsllq	%xmm4, %ymm9, %ymm6
 486:sieve_extend.c ****         copy_word += 2;
 3176              		.loc 1 486 63 view .LVU1328
 3177 187c C575F3C4 		vpsllq	%xmm4, %ymm1, %ymm8
 486:sieve_extend.c ****         copy_word += 2;
 3178              		.loc 1 486 42 view .LVU1329
 3179 1880 C5B5D3C3 		vpsrlq	%xmm3, %ymm9, %ymm0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3180              		.loc 1 484 52 view .LVU1330
 3181 1884 C525EBE6 		vpor	%ymm6, %ymm11, %ymm12
 486:sieve_extend.c ****         copy_word += 2;
 3182              		.loc 1 486 52 view .LVU1331
 3183 1888 C5BDEBE8 		vpor	%ymm0, %ymm8, %ymm5
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3184              		.loc 1 484 31 view .LVU1332
 3185 188c C4437D39 		vextracti128	$0x1, %ymm12, %xmm14
 3185      E601
 486:sieve_extend.c ****         copy_word += 2;
 3186              		.loc 1 486 31 view .LVU1333
 3187 1892 C4E37D39 		vextracti128	$0x1, %ymm5, %xmm7
 3187      EF01
 3188 1898 4983C002 		addq	$2, %r8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3189              		.loc 1 484 31 view .LVU1334
 3190 189c C40179D6 		vmovq	%xmm12, 64(%r10,%r9)
 3190      640A40
GAS LISTING /tmp/ccmX4xFB.s 			page 102


 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3191              		.loc 1 484 31 view .LVU1335
 3192 18a3 C40179D6 		vmovq	%xmm14, 96(%r10,%r9)
 3192      740A60
 3193 18aa C403F916 		vpextrq	$1, %xmm12, 80(%r10,%r9)
 3193      640A5001 
 3194 18b2 C403F916 		vpextrq	$1, %xmm14, 112(%r10,%r9)
 3194      740A7001 
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3195              		.loc 1 485 9 is_stmt 1 view .LVU1336
 486:sieve_extend.c ****         copy_word += 2;
 3196              		.loc 1 486 9 view .LVU1337
 486:sieve_extend.c ****         copy_word += 2;
 3197              		.loc 1 486 31 is_stmt 0 view .LVU1338
 3198 18ba C4A179D6 		vmovq	%xmm5, 64(%rdi,%r9)
 3198      6C0F40
 486:sieve_extend.c ****         copy_word += 2;
 3199              		.loc 1 486 31 view .LVU1339
 3200 18c1 C4A179D6 		vmovq	%xmm7, 96(%rdi,%r9)
 3200      7C0F60
 3201 18c8 C4A3F916 		vpextrq	$1, %xmm5, 80(%rdi,%r9)
 3201      6C0F5001 
 3202 18d0 C4A3F916 		vpextrq	$1, %xmm7, 112(%rdi,%r9)
 3202      7C0F7001 
 487:sieve_extend.c ****         source_word += 2;
 3203              		.loc 1 487 9 is_stmt 1 view .LVU1340
 488:sieve_extend.c ****         distance += 2;
 3204              		.loc 1 488 9 view .LVU1341
 489:sieve_extend.c ****     }
 3205              		.loc 1 489 9 view .LVU1342
 489:sieve_extend.c ****     }
 3206              		.loc 1 489 9 is_stmt 0 view .LVU1343
 3207              	.LBE313:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3208              		.loc 1 481 11 is_stmt 1 view .LVU1344
 3209 18d8 4983E980 		subq	$-128, %r9
 3210 18dc 4C39C6   		cmpq	%r8, %rsi
 3211 18df 0F87C4FE 		ja	.L377
 3211      FFFF
 3212              	.L594:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3213              		.loc 1 481 11 is_stmt 0 view .LVU1345
 3214 18e5 4C8B5C24 		movq	64(%rsp), %r11
 3214      40
 3215 18ea 488B5424 		movq	88(%rsp), %rdx
 3215      58
 3216 18ef 49C1E303 		salq	$3, %r11
 3217 18f3 4A8D0C1A 		leaq	(%rdx,%r11), %rcx
 3218              	.LBB314:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3219              		.loc 1 482 37 view .LVU1346
 3220 18f7 4C8D14CD 		leaq	0(,%rcx,8), %r10
 3220      00000000 
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3221              		.loc 1 483 19 view .LVU1347
 3222 18ff 4A8B7C13 		movq	8(%rbx,%r10), %rdi
 3222      08
GAS LISTING /tmp/ccmX4xFB.s 			page 103


 3223 1904 4A8D1418 		leaq	(%rax,%r11), %rdx
 3224              	.LVL165:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3225              		.loc 1 482 9 is_stmt 1 view .LVU1348
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3226              		.loc 1 483 9 view .LVU1349
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3227              		.loc 1 484 9 view .LVU1350
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3228              		.loc 1 484 42 is_stmt 0 view .LVU1351
 3229 1908 C46283F7 		shrx	%r15, (%rbx,%rcx,8), %r8
 3229      04CB
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3230              		.loc 1 484 63 view .LVU1352
 3231 190e C46289F7 		shlx	%r14, %rdi, %r9
 3231      CF
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3232              		.loc 1 484 52 view .LVU1353
 3233 1913 4D09C8   		orq	%r9, %r8
 3234 1916 4C8904D3 		movq	%r8, (%rbx,%rdx,8)
 3235              	.LVL166:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3236              		.loc 1 485 9 is_stmt 1 view .LVU1354
 486:sieve_extend.c ****         copy_word += 2;
 3237              		.loc 1 486 42 is_stmt 0 view .LVU1355
 3238 191a C4E283F7 		shrx	%r15, %rdi, %rdi
 3238      FF
 3239              	.LVL167:
 487:sieve_extend.c ****         source_word += 2;
 3240              		.loc 1 487 19 view .LVU1356
 3241 191f 4C8D4202 		leaq	2(%rdx), %r8
 486:sieve_extend.c ****         copy_word += 2;
 3242              		.loc 1 486 63 view .LVU1357
 3243 1923 4A8B7413 		movq	16(%rbx,%r10), %rsi
 3243      10
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3244              		.loc 1 485 37 view .LVU1358
 3245 1928 4C8D4902 		leaq	2(%rcx), %r9
 3246              	.LVL168:
 486:sieve_extend.c ****         copy_word += 2;
 3247              		.loc 1 486 9 is_stmt 1 view .LVU1359
 486:sieve_extend.c ****         copy_word += 2;
 3248              		.loc 1 486 63 is_stmt 0 view .LVU1360
 3249 192c C46289F7 		shlx	%r14, %rsi, %r10
 3249      D6
 486:sieve_extend.c ****         copy_word += 2;
 3250              		.loc 1 486 52 view .LVU1361
 3251 1931 4C09D7   		orq	%r10, %rdi
 3252 1934 48897CD3 		movq	%rdi, 8(%rbx,%rdx,8)
 3252      08
 487:sieve_extend.c ****         source_word += 2;
 3253              		.loc 1 487 9 is_stmt 1 view .LVU1362
 3254              	.LVL169:
 488:sieve_extend.c ****         distance += 2;
 3255              		.loc 1 488 9 view .LVU1363
 489:sieve_extend.c ****     }
 3256              		.loc 1 489 9 view .LVU1364
GAS LISTING /tmp/ccmX4xFB.s 			page 104


 489:sieve_extend.c ****     }
 3257              		.loc 1 489 18 is_stmt 0 view .LVU1365
 3258 1939 4D8D5302 		leaq	2(%r11), %r10
 3259              	.LVL170:
 489:sieve_extend.c ****     }
 3260              		.loc 1 489 18 view .LVU1366
 3261              	.LBE314:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3262              		.loc 1 481 11 is_stmt 1 view .LVU1367
 3263 193d 4C394424 		cmpq	%r8, 72(%rsp)
 3263      48
 3264 1942 0F86D900 		jbe	.L380
 3264      0000
 3265              	.LBB315:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3266              		.loc 1 482 9 view .LVU1368
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3267              		.loc 1 482 37 is_stmt 0 view .LVU1369
 3268 1948 4E8D14CD 		leaq	0(,%r9,8), %r10
 3268      00000000 
 3269              	.LVL171:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3270              		.loc 1 483 9 is_stmt 1 view .LVU1370
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3271              		.loc 1 483 19 is_stmt 0 view .LVU1371
 3272 1950 4A8B7C13 		movq	8(%rbx,%r10), %rdi
 3272      08
 3273              	.LVL172:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3274              		.loc 1 484 9 is_stmt 1 view .LVU1372
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3275              		.loc 1 484 42 is_stmt 0 view .LVU1373
 3276 1955 4E8B0CCB 		movq	(%rbx,%r9,8), %r9
 3277              	.LVL173:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3278              		.loc 1 484 42 view .LVU1374
 3279 1959 C4C283F7 		shrx	%r15, %r9, %rsi
 3279      F1
 3280              	.LVL174:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3281              		.loc 1 484 63 view .LVU1375
 3282 195e C46289F7 		shlx	%r14, %rdi, %r9
 3282      CF
 3283              	.LVL175:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3284              		.loc 1 484 52 view .LVU1376
 3285 1963 4C09CE   		orq	%r9, %rsi
 3286 1966 4A8934C3 		movq	%rsi, (%rbx,%r8,8)
 3287              	.LVL176:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3288              		.loc 1 485 9 is_stmt 1 view .LVU1377
 486:sieve_extend.c ****         copy_word += 2;
 3289              		.loc 1 486 42 is_stmt 0 view .LVU1378
 3290 196a C4E283F7 		shrx	%r15, %rdi, %rdi
 3290      FF
 3291              	.LVL177:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccmX4xFB.s 			page 105


 3292              		.loc 1 485 37 view .LVU1379
 3293 196f 4C8D4904 		leaq	4(%rcx), %r9
 3294              	.LVL178:
 486:sieve_extend.c ****         copy_word += 2;
 3295              		.loc 1 486 9 is_stmt 1 view .LVU1380
 486:sieve_extend.c ****         copy_word += 2;
 3296              		.loc 1 486 63 is_stmt 0 view .LVU1381
 3297 1973 4E8B5413 		movq	16(%rbx,%r10), %r10
 3297      10
 3298              	.LVL179:
 486:sieve_extend.c ****         copy_word += 2;
 3299              		.loc 1 486 63 view .LVU1382
 3300 1978 C4C289F7 		shlx	%r14, %r10, %rsi
 3300      F2
 486:sieve_extend.c ****         copy_word += 2;
 3301              		.loc 1 486 52 view .LVU1383
 3302 197d 4809F7   		orq	%rsi, %rdi
 3303 1980 4A897CC3 		movq	%rdi, 8(%rbx,%r8,8)
 3303      08
 487:sieve_extend.c ****         source_word += 2;
 3304              		.loc 1 487 9 is_stmt 1 view .LVU1384
 487:sieve_extend.c ****         source_word += 2;
 3305              		.loc 1 487 19 is_stmt 0 view .LVU1385
 3306 1985 4C8D4204 		leaq	4(%rdx), %r8
 3307              	.LVL180:
 488:sieve_extend.c ****         distance += 2;
 3308              		.loc 1 488 9 is_stmt 1 view .LVU1386
 489:sieve_extend.c ****     }
 3309              		.loc 1 489 9 view .LVU1387
 489:sieve_extend.c ****     }
 3310              		.loc 1 489 18 is_stmt 0 view .LVU1388
 3311 1989 4D8D5304 		leaq	4(%r11), %r10
 3312              	.LVL181:
 489:sieve_extend.c ****     }
 3313              		.loc 1 489 18 view .LVU1389
 3314              	.LBE315:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3315              		.loc 1 481 11 is_stmt 1 view .LVU1390
 3316 198d 4C394424 		cmpq	%r8, 72(%rsp)
 3316      48
 3317 1992 0F868900 		jbe	.L380
 3317      0000
 3318              	.LBB316:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3319              		.loc 1 482 9 view .LVU1391
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3320              		.loc 1 482 37 is_stmt 0 view .LVU1392
 3321 1998 4E8D14CD 		leaq	0(,%r9,8), %r10
 3321      00000000 
 3322              	.LVL182:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3323              		.loc 1 483 9 is_stmt 1 view .LVU1393
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3324              		.loc 1 483 19 is_stmt 0 view .LVU1394
 3325 19a0 4A8B7C13 		movq	8(%rbx,%r10), %rdi
 3325      08
 3326              	.LVL183:
GAS LISTING /tmp/ccmX4xFB.s 			page 106


 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3327              		.loc 1 484 9 is_stmt 1 view .LVU1395
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3328              		.loc 1 484 42 is_stmt 0 view .LVU1396
 3329 19a5 4E8B0CCB 		movq	(%rbx,%r9,8), %r9
 3330              	.LVL184:
 487:sieve_extend.c ****         source_word += 2;
 3331              		.loc 1 487 19 view .LVU1397
 3332 19a9 4883C206 		addq	$6, %rdx
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3333              		.loc 1 484 42 view .LVU1398
 3334 19ad C4C283F7 		shrx	%r15, %r9, %rsi
 3334      F1
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3335              		.loc 1 484 63 view .LVU1399
 3336 19b2 C46289F7 		shlx	%r14, %rdi, %r9
 3336      CF
 3337              	.LVL185:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3338              		.loc 1 484 52 view .LVU1400
 3339 19b7 4C09CE   		orq	%r9, %rsi
 3340 19ba 4A8934C3 		movq	%rsi, (%rbx,%r8,8)
 3341              	.LVL186:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3342              		.loc 1 485 9 is_stmt 1 view .LVU1401
 486:sieve_extend.c ****         copy_word += 2;
 3343              		.loc 1 486 42 is_stmt 0 view .LVU1402
 3344 19be C4E283F7 		shrx	%r15, %rdi, %rdi
 3344      FF
 3345              	.LVL187:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3346              		.loc 1 485 37 view .LVU1403
 3347 19c3 4883C106 		addq	$6, %rcx
 3348              	.LVL188:
 486:sieve_extend.c ****         copy_word += 2;
 3349              		.loc 1 486 9 is_stmt 1 view .LVU1404
 486:sieve_extend.c ****         copy_word += 2;
 3350              		.loc 1 486 63 is_stmt 0 view .LVU1405
 3351 19c7 4E8B5413 		movq	16(%rbx,%r10), %r10
 3351      10
 3352              	.LVL189:
 486:sieve_extend.c ****         copy_word += 2;
 3353              		.loc 1 486 63 view .LVU1406
 3354 19cc C4C289F7 		shlx	%r14, %r10, %rsi
 3354      F2
 486:sieve_extend.c ****         copy_word += 2;
 3355              		.loc 1 486 52 view .LVU1407
 3356 19d1 4809F7   		orq	%rsi, %rdi
 3357 19d4 4A897CC3 		movq	%rdi, 8(%rbx,%r8,8)
 3357      08
 487:sieve_extend.c ****         source_word += 2;
 3358              		.loc 1 487 9 is_stmt 1 view .LVU1408
 3359              	.LVL190:
 488:sieve_extend.c ****         distance += 2;
 3360              		.loc 1 488 9 view .LVU1409
 489:sieve_extend.c ****     }
 3361              		.loc 1 489 9 view .LVU1410
GAS LISTING /tmp/ccmX4xFB.s 			page 107


 489:sieve_extend.c ****     }
 3362              		.loc 1 489 18 is_stmt 0 view .LVU1411
 3363 19d9 4D8D5306 		leaq	6(%r11), %r10
 3364              	.LVL191:
 489:sieve_extend.c ****     }
 3365              		.loc 1 489 18 view .LVU1412
 3366              	.LBE316:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3367              		.loc 1 481 11 is_stmt 1 view .LVU1413
 3368 19dd 48395424 		cmpq	%rdx, 72(%rsp)
 3368      48
 3369 19e2 763D     		jbe	.L380
 3370              	.LBB317:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3371              		.loc 1 482 9 view .LVU1414
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3372              		.loc 1 482 37 is_stmt 0 view .LVU1415
 3373 19e4 4C8D0CCD 		leaq	0(,%rcx,8), %r9
 3373      00000000 
 3374              	.LVL192:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3375              		.loc 1 483 9 is_stmt 1 view .LVU1416
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3376              		.loc 1 483 19 is_stmt 0 view .LVU1417
 3377 19ec 4E8B540B 		movq	8(%rbx,%r9), %r10
 3377      08
 3378              	.LVL193:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3379              		.loc 1 484 9 is_stmt 1 view .LVU1418
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3380              		.loc 1 484 42 is_stmt 0 view .LVU1419
 3381 19f1 488B0CCB 		movq	(%rbx,%rcx,8), %rcx
 3382              	.LVL194:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3383              		.loc 1 484 63 view .LVU1420
 3384 19f5 C44289F7 		shlx	%r14, %r10, %r8
 3384      C2
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3385              		.loc 1 484 42 view .LVU1421
 3386 19fa C4E283F7 		shrx	%r15, %rcx, %rsi
 3386      F1
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3387              		.loc 1 484 52 view .LVU1422
 3388 19ff 4C09C6   		orq	%r8, %rsi
 3389 1a02 488934D3 		movq	%rsi, (%rbx,%rdx,8)
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3390              		.loc 1 485 9 is_stmt 1 view .LVU1423
 3391              	.LVL195:
 486:sieve_extend.c ****         copy_word += 2;
 3392              		.loc 1 486 9 view .LVU1424
 486:sieve_extend.c ****         copy_word += 2;
 3393              		.loc 1 486 42 is_stmt 0 view .LVU1425
 3394 1a06 C44283F7 		shrx	%r15, %r10, %r10
 3394      D2
 3395              	.LVL196:
 486:sieve_extend.c ****         copy_word += 2;
 3396              		.loc 1 486 63 view .LVU1426
GAS LISTING /tmp/ccmX4xFB.s 			page 108


 3397 1a0b 4A8B7C0B 		movq	16(%rbx,%r9), %rdi
 3397      10
 3398 1a10 C46289F7 		shlx	%r14, %rdi, %r9
 3398      CF
 3399              	.LVL197:
 486:sieve_extend.c ****         copy_word += 2;
 3400              		.loc 1 486 52 view .LVU1427
 3401 1a15 4D09CA   		orq	%r9, %r10
 3402 1a18 4C8954D3 		movq	%r10, 8(%rbx,%rdx,8)
 3402      08
 487:sieve_extend.c ****         source_word += 2;
 3403              		.loc 1 487 9 is_stmt 1 view .LVU1428
 488:sieve_extend.c ****         distance += 2;
 3404              		.loc 1 488 9 view .LVU1429
 3405              	.LVL198:
 489:sieve_extend.c ****     }
 3406              		.loc 1 489 9 view .LVU1430
 489:sieve_extend.c ****     }
 3407              		.loc 1 489 18 is_stmt 0 view .LVU1431
 3408 1a1d 4D8D5308 		leaq	8(%r11), %r10
 3409              	.LVL199:
 489:sieve_extend.c ****     }
 3410              		.loc 1 489 18 view .LVU1432
 3411              	.LBE317:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3412              		.loc 1 481 11 is_stmt 1 view .LVU1433
 3413              	.L380:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3414              		.loc 1 481 11 is_stmt 0 view .LVU1434
 3415 1a21 4C015424 		addq	%r10, 88(%rsp)
 3415      58
 3416              	.LVL200:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3417              		.loc 1 481 11 view .LVU1435
 3418 1a26 4C01D0   		addq	%r10, %rax
 3419              	.L375:
 491:sieve_extend.c **** }
 3420              		.loc 1 491 5 is_stmt 1 view .LVU1436
 3421              	.LVL201:
 491:sieve_extend.c **** }
 3422              		.loc 1 491 5 is_stmt 0 view .LVU1437
 3423              	.LBE329:
 3424              	.LBE334:
 637:sieve_extend.c ****     copy_word += distance;
 3425              		.loc 1 637 5 is_stmt 1 view .LVU1438
 638:sieve_extend.c **** 
 3426              		.loc 1 638 5 view .LVU1439
 640:sieve_extend.c **** 
 3427              		.loc 1 640 6 view .LVU1440
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3428              		.loc 1 642 11 view .LVU1441
 3429 1a29 4C8B5C24 		movq	56(%rsp), %r11
 3429      38
 3430 1a2e 4939C3   		cmpq	%rax, %r11
 3431 1a31 0F829F03 		jb	.L381
 3431      0000
 3432 1a37 488B7C24 		movq	88(%rsp), %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 109


 3432      58
 3433 1a3c 488D34C5 		leaq	0(,%rax,8), %rsi
 3433      00000000 
 3434 1a44 488D14FD 		leaq	40(,%rdi,8), %rdx
 3434      28000000 
 3435 1a4c 4C8D4620 		leaq	32(%rsi), %r8
 3436 1a50 4C8D4AE0 		leaq	-32(%rdx), %r9
 3437 1a54 4D39C8   		cmpq	%r9, %r8
 3438 1a57 410F9EC2 		setle	%r10b
 3439 1a5b 4839D6   		cmpq	%rdx, %rsi
 3440 1a5e 488D0CFD 		leaq	0(,%rdi,8), %rcx
 3440      00000000 
 3441 1a66 400F9DC7 		setge	%dil
 3442 1a6a 4883EA08 		subq	$8, %rdx
 3443 1a6e 4409D7   		orl	%r10d, %edi
 3444 1a71 4839F2   		cmpq	%rsi, %rdx
 3445 1a74 0F9EC2   		setle	%dl
 3446 1a77 4939C8   		cmpq	%rcx, %r8
 3447 1a7a 410F9EC0 		setle	%r8b
 3448 1a7e 4409C2   		orl	%r8d, %edx
 3449 1a81 4084D7   		testb	%dl, %dil
 3450 1a84 0F84B608 		je	.L382
 3450      0000
 3451 1a8a 4D89DA   		movq	%r11, %r10
 3452 1a8d 4929C2   		subq	%rax, %r10
 3453 1a90 4983FA03 		cmpq	$3, %r10
 3454 1a94 0F86A608 		jbe	.L382
 3454      0000
 3455 1a9a 4D8D4301 		leaq	1(%r11), %r8
 3456 1a9e 4C89C7   		movq	%r8, %rdi
 3457 1aa1 4829C7   		subq	%rax, %rdi
 3458 1aa4 4989FA   		movq	%rdi, %r10
 3459 1aa7 49C1EA02 		shrq	$2, %r10
 3460 1aab 49C1E205 		salq	$5, %r10
 3461 1aaf C441796E 		vmovd	%r12d, %xmm10
 3461      D4
 3462 1ab4 4D8D62E0 		leaq	-32(%r10), %r12
 3463 1ab8 49C1EC05 		shrq	$5, %r12
 3464 1abc 49FFC4   		incq	%r12
 3465 1abf 4801D9   		addq	%rbx, %rcx
 3466 1ac2 4901D9   		addq	%rbx, %r9
 3467 1ac5 4801DE   		addq	%rbx, %rsi
 3468 1ac8 4531DB   		xorl	%r11d, %r11d
 3469 1acb C441796E 		vmovd	%r13d, %xmm11
 3469      DD
 3470 1ad0 4183E407 		andl	$7, %r12d
 3471 1ad4 0F843501 		je	.L383
 3471      0000
 3472 1ada 4983FC01 		cmpq	$1, %r12
 3473 1ade 0F84FD00 		je	.L523
 3473      0000
 3474 1ae4 4983FC02 		cmpq	$2, %r12
 3475 1ae8 0F84CF00 		je	.L524
 3475      0000
 3476 1aee 4983FC03 		cmpq	$3, %r12
 3477 1af2 0F84A000 		je	.L525
 3477      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 110


 3478 1af8 4983FC04 		cmpq	$4, %r12
 3479 1afc 7475     		je	.L526
 3480 1afe 4983FC05 		cmpq	$5, %r12
 3481 1b02 744B     		je	.L527
 3482 1b04 4983FC06 		cmpq	$6, %r12
 3483 1b08 7421     		je	.L528
 3484              	.LBB335:
 643:sieve_extend.c ****         source_word++;
 3485              		.loc 1 643 9 view .LVU1442
 3486              	.LVL202:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3487              		.loc 1 644 9 view .LVU1443
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3488              		.loc 1 645 9 view .LVU1444
 646:sieve_extend.c ****         copy_word++;
 3489              		.loc 1 646 9 view .LVU1445
 643:sieve_extend.c ****         source_word++;
 3490              		.loc 1 643 28 is_stmt 0 view .LVU1446
 3491 1b0a C5FE6F19 		vmovdqu	(%rcx), %ymm3
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3492              		.loc 1 645 28 view .LVU1447
 3493 1b0e C4C17E6F 		vmovdqu	(%r9), %ymm4
 3493      21
 643:sieve_extend.c ****         source_word++;
 3494              		.loc 1 643 28 view .LVU1448
 3495 1b13 C4C165D3 		vpsrlq	%xmm10, %ymm3, %ymm2
 3495      D2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3496              		.loc 1 645 28 view .LVU1449
 3497 1b18 C4C15DF3 		vpsllq	%xmm11, %ymm4, %ymm6
 3497      F3
 3498 1b1d 41BB2000 		movl	$32, %r11d
 3498      0000
 646:sieve_extend.c ****         copy_word++;
 3499              		.loc 1 646 39 view .LVU1450
 3500 1b23 C56DEBE6 		vpor	%ymm6, %ymm2, %ymm12
 646:sieve_extend.c ****         copy_word++;
 3501              		.loc 1 646 29 view .LVU1451
 3502 1b27 C57E7F26 		vmovdqu	%ymm12, (%rsi)
 647:sieve_extend.c ****     }
 3503              		.loc 1 647 9 is_stmt 1 view .LVU1452
 647:sieve_extend.c ****     }
 3504              		.loc 1 647 9 is_stmt 0 view .LVU1453
 3505              	.LBE335:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3506              		.loc 1 642 11 is_stmt 1 view .LVU1454
 3507              	.L528:
 3508              	.LBB336:
 643:sieve_extend.c ****         source_word++;
 3509              		.loc 1 643 9 view .LVU1455
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3510              		.loc 1 644 9 view .LVU1456
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3511              		.loc 1 645 9 view .LVU1457
 646:sieve_extend.c ****         copy_word++;
 3512              		.loc 1 646 9 view .LVU1458
 643:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 111


 3513              		.loc 1 643 28 is_stmt 0 view .LVU1459
 3514 1b2b C4217E6F 		vmovdqu	(%rcx,%r11), %ymm13
 3514      2C19
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3515              		.loc 1 645 28 view .LVU1460
 3516 1b31 C4017E6F 		vmovdqu	(%r9,%r11), %ymm15
 3516      3C19
 643:sieve_extend.c ****         source_word++;
 3517              		.loc 1 643 28 view .LVU1461
 3518 1b37 C44115D3 		vpsrlq	%xmm10, %ymm13, %ymm14
 3518      F2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3519              		.loc 1 645 28 view .LVU1462
 3520 1b3c C4C105F3 		vpsllq	%xmm11, %ymm15, %ymm1
 3520      CB
 646:sieve_extend.c ****         copy_word++;
 3521              		.loc 1 646 39 view .LVU1463
 3522 1b41 C50DEBC1 		vpor	%ymm1, %ymm14, %ymm8
 646:sieve_extend.c ****         copy_word++;
 3523              		.loc 1 646 29 view .LVU1464
 3524 1b45 C4217E7F 		vmovdqu	%ymm8, (%rsi,%r11)
 3524      041E
 647:sieve_extend.c ****     }
 3525              		.loc 1 647 9 is_stmt 1 view .LVU1465
 647:sieve_extend.c ****     }
 3526              		.loc 1 647 9 is_stmt 0 view .LVU1466
 3527              	.LBE336:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3528              		.loc 1 642 11 is_stmt 1 view .LVU1467
 3529 1b4b 4983C320 		addq	$32, %r11
 3530              	.L527:
 3531              	.LBB337:
 643:sieve_extend.c ****         source_word++;
 3532              		.loc 1 643 9 view .LVU1468
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3533              		.loc 1 644 9 view .LVU1469
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3534              		.loc 1 645 9 view .LVU1470
 646:sieve_extend.c ****         copy_word++;
 3535              		.loc 1 646 9 view .LVU1471
 643:sieve_extend.c ****         source_word++;
 3536              		.loc 1 643 28 is_stmt 0 view .LVU1472
 3537 1b4f C4A17E6F 		vmovdqu	(%rcx,%r11), %ymm0
 3537      0419
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3538              		.loc 1 645 28 view .LVU1473
 3539 1b55 C4017E6F 		vmovdqu	(%r9,%r11), %ymm9
 3539      0C19
 643:sieve_extend.c ****         source_word++;
 3540              		.loc 1 643 28 view .LVU1474
 3541 1b5b C4C17DD3 		vpsrlq	%xmm10, %ymm0, %ymm5
 3541      EA
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3542              		.loc 1 645 28 view .LVU1475
 3543 1b60 C4C135F3 		vpsllq	%xmm11, %ymm9, %ymm7
 3543      FB
 646:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 112


 3544              		.loc 1 646 39 view .LVU1476
 3545 1b65 C5D5EBDF 		vpor	%ymm7, %ymm5, %ymm3
 646:sieve_extend.c ****         copy_word++;
 3546              		.loc 1 646 29 view .LVU1477
 3547 1b69 C4A17E7F 		vmovdqu	%ymm3, (%rsi,%r11)
 3547      1C1E
 647:sieve_extend.c ****     }
 3548              		.loc 1 647 9 is_stmt 1 view .LVU1478
 647:sieve_extend.c ****     }
 3549              		.loc 1 647 9 is_stmt 0 view .LVU1479
 3550              	.LBE337:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3551              		.loc 1 642 11 is_stmt 1 view .LVU1480
 3552 1b6f 4983C320 		addq	$32, %r11
 3553              	.L526:
 3554              	.LBB338:
 643:sieve_extend.c ****         source_word++;
 3555              		.loc 1 643 9 view .LVU1481
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3556              		.loc 1 644 9 view .LVU1482
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3557              		.loc 1 645 9 view .LVU1483
 646:sieve_extend.c ****         copy_word++;
 3558              		.loc 1 646 9 view .LVU1484
 643:sieve_extend.c ****         source_word++;
 3559              		.loc 1 643 28 is_stmt 0 view .LVU1485
 3560 1b73 C4A17E6F 		vmovdqu	(%rcx,%r11), %ymm2
 3560      1419
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3561              		.loc 1 645 28 view .LVU1486
 3562 1b79 C4817E6F 		vmovdqu	(%r9,%r11), %ymm6
 3562      3419
 643:sieve_extend.c ****         source_word++;
 3563              		.loc 1 643 28 view .LVU1487
 3564 1b7f C4C16DD3 		vpsrlq	%xmm10, %ymm2, %ymm4
 3564      E2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3565              		.loc 1 645 28 view .LVU1488
 3566 1b84 C4414DF3 		vpsllq	%xmm11, %ymm6, %ymm12
 3566      E3
 646:sieve_extend.c ****         copy_word++;
 3567              		.loc 1 646 39 view .LVU1489
 3568 1b89 C4415DEB 		vpor	%ymm12, %ymm4, %ymm13
 3568      EC
 646:sieve_extend.c ****         copy_word++;
 3569              		.loc 1 646 29 view .LVU1490
 3570 1b8e C4217E7F 		vmovdqu	%ymm13, (%rsi,%r11)
 3570      2C1E
 647:sieve_extend.c ****     }
 3571              		.loc 1 647 9 is_stmt 1 view .LVU1491
 647:sieve_extend.c ****     }
 3572              		.loc 1 647 9 is_stmt 0 view .LVU1492
 3573              	.LBE338:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3574              		.loc 1 642 11 is_stmt 1 view .LVU1493
 3575 1b94 4983C320 		addq	$32, %r11
 3576              	.L525:
GAS LISTING /tmp/ccmX4xFB.s 			page 113


 3577              	.LBB339:
 643:sieve_extend.c ****         source_word++;
 3578              		.loc 1 643 9 view .LVU1494
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3579              		.loc 1 644 9 view .LVU1495
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3580              		.loc 1 645 9 view .LVU1496
 646:sieve_extend.c ****         copy_word++;
 3581              		.loc 1 646 9 view .LVU1497
 643:sieve_extend.c ****         source_word++;
 3582              		.loc 1 643 28 is_stmt 0 view .LVU1498
 3583 1b98 C4217E6F 		vmovdqu	(%rcx,%r11), %ymm14
 3583      3419
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3584              		.loc 1 645 28 view .LVU1499
 3585 1b9e C4817E6F 		vmovdqu	(%r9,%r11), %ymm1
 3585      0C19
 643:sieve_extend.c ****         source_word++;
 3586              		.loc 1 643 28 view .LVU1500
 3587 1ba4 C4410DD3 		vpsrlq	%xmm10, %ymm14, %ymm15
 3587      FA
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3588              		.loc 1 645 28 view .LVU1501
 3589 1ba9 C44175F3 		vpsllq	%xmm11, %ymm1, %ymm8
 3589      C3
 646:sieve_extend.c ****         copy_word++;
 3590              		.loc 1 646 39 view .LVU1502
 3591 1bae C4C105EB 		vpor	%ymm8, %ymm15, %ymm0
 3591      C0
 646:sieve_extend.c ****         copy_word++;
 3592              		.loc 1 646 29 view .LVU1503
 3593 1bb3 C4A17E7F 		vmovdqu	%ymm0, (%rsi,%r11)
 3593      041E
 647:sieve_extend.c ****     }
 3594              		.loc 1 647 9 is_stmt 1 view .LVU1504
 647:sieve_extend.c ****     }
 3595              		.loc 1 647 9 is_stmt 0 view .LVU1505
 3596              	.LBE339:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3597              		.loc 1 642 11 is_stmt 1 view .LVU1506
 3598 1bb9 4983C320 		addq	$32, %r11
 3599              	.L524:
 3600              	.LBB340:
 643:sieve_extend.c ****         source_word++;
 3601              		.loc 1 643 9 view .LVU1507
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3602              		.loc 1 644 9 view .LVU1508
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3603              		.loc 1 645 9 view .LVU1509
 646:sieve_extend.c ****         copy_word++;
 3604              		.loc 1 646 9 view .LVU1510
 643:sieve_extend.c ****         source_word++;
 3605              		.loc 1 643 28 is_stmt 0 view .LVU1511
 3606 1bbd C4A17E6F 		vmovdqu	(%rcx,%r11), %ymm5
 3606      2C19
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3607              		.loc 1 645 28 view .LVU1512
GAS LISTING /tmp/ccmX4xFB.s 			page 114


 3608 1bc3 C4817E6F 		vmovdqu	(%r9,%r11), %ymm7
 3608      3C19
 643:sieve_extend.c ****         source_word++;
 3609              		.loc 1 643 28 view .LVU1513
 3610 1bc9 C44155D3 		vpsrlq	%xmm10, %ymm5, %ymm9
 3610      CA
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3611              		.loc 1 645 28 view .LVU1514
 3612 1bce C4C145F3 		vpsllq	%xmm11, %ymm7, %ymm3
 3612      DB
 646:sieve_extend.c ****         copy_word++;
 3613              		.loc 1 646 39 view .LVU1515
 3614 1bd3 C5B5EBD3 		vpor	%ymm3, %ymm9, %ymm2
 646:sieve_extend.c ****         copy_word++;
 3615              		.loc 1 646 29 view .LVU1516
 3616 1bd7 C4A17E7F 		vmovdqu	%ymm2, (%rsi,%r11)
 3616      141E
 647:sieve_extend.c ****     }
 3617              		.loc 1 647 9 is_stmt 1 view .LVU1517
 647:sieve_extend.c ****     }
 3618              		.loc 1 647 9 is_stmt 0 view .LVU1518
 3619              	.LBE340:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3620              		.loc 1 642 11 is_stmt 1 view .LVU1519
 3621 1bdd 4983C320 		addq	$32, %r11
 3622              	.L523:
 3623              	.LBB341:
 643:sieve_extend.c ****         source_word++;
 3624              		.loc 1 643 9 view .LVU1520
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3625              		.loc 1 644 9 view .LVU1521
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3626              		.loc 1 645 9 view .LVU1522
 646:sieve_extend.c ****         copy_word++;
 3627              		.loc 1 646 9 view .LVU1523
 643:sieve_extend.c ****         source_word++;
 3628              		.loc 1 643 28 is_stmt 0 view .LVU1524
 3629 1be1 C4A17E6F 		vmovdqu	(%rcx,%r11), %ymm4
 3629      2419
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3630              		.loc 1 645 28 view .LVU1525
 3631 1be7 C4017E6F 		vmovdqu	(%r9,%r11), %ymm12
 3631      2419
 643:sieve_extend.c ****         source_word++;
 3632              		.loc 1 643 28 view .LVU1526
 3633 1bed C4C15DD3 		vpsrlq	%xmm10, %ymm4, %ymm6
 3633      F2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3634              		.loc 1 645 28 view .LVU1527
 3635 1bf2 C4411DF3 		vpsllq	%xmm11, %ymm12, %ymm13
 3635      EB
 646:sieve_extend.c ****         copy_word++;
 3636              		.loc 1 646 39 view .LVU1528
 3637 1bf7 C4414DEB 		vpor	%ymm13, %ymm6, %ymm14
 3637      F5
 646:sieve_extend.c ****         copy_word++;
 3638              		.loc 1 646 29 view .LVU1529
GAS LISTING /tmp/ccmX4xFB.s 			page 115


 3639 1bfc C4217E7F 		vmovdqu	%ymm14, (%rsi,%r11)
 3639      341E
 647:sieve_extend.c ****     }
 3640              		.loc 1 647 9 is_stmt 1 view .LVU1530
 647:sieve_extend.c ****     }
 3641              		.loc 1 647 9 is_stmt 0 view .LVU1531
 3642              	.LBE341:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3643              		.loc 1 642 11 is_stmt 1 view .LVU1532
 3644 1c02 4983C320 		addq	$32, %r11
 3645 1c06 4D39D3   		cmpq	%r10, %r11
 3646 1c09 0F844C01 		je	.L602
 3646      0000
 3647              	.L383:
 3648              	.LBB342:
 643:sieve_extend.c ****         source_word++;
 3649              		.loc 1 643 9 view .LVU1533
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3650              		.loc 1 644 9 view .LVU1534
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3651              		.loc 1 645 9 view .LVU1535
 646:sieve_extend.c ****         copy_word++;
 3652              		.loc 1 646 9 view .LVU1536
 643:sieve_extend.c ****         source_word++;
 3653              		.loc 1 643 28 is_stmt 0 view .LVU1537
 3654 1c0f C4217E6F 		vmovdqu	(%rcx,%r11), %ymm15
 3654      3C19
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3655              		.loc 1 645 28 view .LVU1538
 3656 1c15 C4017E6F 		vmovdqu	(%r9,%r11), %ymm8
 3656      0419
 643:sieve_extend.c ****         source_word++;
 3657              		.loc 1 643 28 view .LVU1539
 3658 1c1b C4C105D3 		vpsrlq	%xmm10, %ymm15, %ymm1
 3658      CA
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3659              		.loc 1 645 28 view .LVU1540
 3660 1c20 C4C13DF3 		vpsllq	%xmm11, %ymm8, %ymm0
 3660      C3
 646:sieve_extend.c ****         copy_word++;
 3661              		.loc 1 646 39 view .LVU1541
 3662 1c25 C5F5EBE8 		vpor	%ymm0, %ymm1, %ymm5
 646:sieve_extend.c ****         copy_word++;
 3663              		.loc 1 646 29 view .LVU1542
 3664 1c29 C4A17E7F 		vmovdqu	%ymm5, (%rsi,%r11)
 3664      2C1E
 647:sieve_extend.c ****     }
 3665              		.loc 1 647 9 is_stmt 1 view .LVU1543
 647:sieve_extend.c ****     }
 3666              		.loc 1 647 9 is_stmt 0 view .LVU1544
 3667              	.LBE342:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3668              		.loc 1 642 11 is_stmt 1 view .LVU1545
 3669              	.LBB343:
 643:sieve_extend.c ****         source_word++;
 3670              		.loc 1 643 9 view .LVU1546
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
GAS LISTING /tmp/ccmX4xFB.s 			page 116


 3671              		.loc 1 644 9 view .LVU1547
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3672              		.loc 1 645 9 view .LVU1548
 646:sieve_extend.c ****         copy_word++;
 3673              		.loc 1 646 9 view .LVU1549
 643:sieve_extend.c ****         source_word++;
 3674              		.loc 1 643 28 is_stmt 0 view .LVU1550
 3675 1c2f C4217E6F 		vmovdqu	32(%rcx,%r11), %ymm9
 3675      4C1920
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3676              		.loc 1 645 28 view .LVU1551
 3677 1c36 C4817E6F 		vmovdqu	32(%r9,%r11), %ymm7
 3677      7C1920
 643:sieve_extend.c ****         source_word++;
 3678              		.loc 1 643 28 view .LVU1552
 3679 1c3d C4C135D3 		vpsrlq	%xmm10, %ymm9, %ymm2
 3679      D2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3680              		.loc 1 645 28 view .LVU1553
 3681 1c42 C4C145F3 		vpsllq	%xmm11, %ymm7, %ymm3
 3681      DB
 646:sieve_extend.c ****         copy_word++;
 3682              		.loc 1 646 39 view .LVU1554
 3683 1c47 C5EDEBE3 		vpor	%ymm3, %ymm2, %ymm4
 646:sieve_extend.c ****         copy_word++;
 3684              		.loc 1 646 29 view .LVU1555
 3685 1c4b C4A17E7F 		vmovdqu	%ymm4, 32(%rsi,%r11)
 3685      641E20
 647:sieve_extend.c ****     }
 3686              		.loc 1 647 9 is_stmt 1 view .LVU1556
 647:sieve_extend.c ****     }
 3687              		.loc 1 647 9 is_stmt 0 view .LVU1557
 3688              	.LBE343:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3689              		.loc 1 642 11 is_stmt 1 view .LVU1558
 3690              	.LBB344:
 643:sieve_extend.c ****         source_word++;
 3691              		.loc 1 643 9 view .LVU1559
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3692              		.loc 1 644 9 view .LVU1560
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3693              		.loc 1 645 9 view .LVU1561
 646:sieve_extend.c ****         copy_word++;
 3694              		.loc 1 646 9 view .LVU1562
 643:sieve_extend.c ****         source_word++;
 3695              		.loc 1 643 28 is_stmt 0 view .LVU1563
 3696 1c52 C4A17E6F 		vmovdqu	64(%rcx,%r11), %ymm6
 3696      741940
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3697              		.loc 1 645 28 view .LVU1564
 3698 1c59 C4017E6F 		vmovdqu	64(%r9,%r11), %ymm13
 3698      6C1940
 643:sieve_extend.c ****         source_word++;
 3699              		.loc 1 643 28 view .LVU1565
 3700 1c60 C4414DD3 		vpsrlq	%xmm10, %ymm6, %ymm12
 3700      E2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
GAS LISTING /tmp/ccmX4xFB.s 			page 117


 3701              		.loc 1 645 28 view .LVU1566
 3702 1c65 C44115F3 		vpsllq	%xmm11, %ymm13, %ymm14
 3702      F3
 646:sieve_extend.c ****         copy_word++;
 3703              		.loc 1 646 39 view .LVU1567
 3704 1c6a C4411DEB 		vpor	%ymm14, %ymm12, %ymm15
 3704      FE
 646:sieve_extend.c ****         copy_word++;
 3705              		.loc 1 646 29 view .LVU1568
 3706 1c6f C4217E7F 		vmovdqu	%ymm15, 64(%rsi,%r11)
 3706      7C1E40
 647:sieve_extend.c ****     }
 3707              		.loc 1 647 9 is_stmt 1 view .LVU1569
 647:sieve_extend.c ****     }
 3708              		.loc 1 647 9 is_stmt 0 view .LVU1570
 3709              	.LBE344:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3710              		.loc 1 642 11 is_stmt 1 view .LVU1571
 3711              	.LBB345:
 643:sieve_extend.c ****         source_word++;
 3712              		.loc 1 643 9 view .LVU1572
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3713              		.loc 1 644 9 view .LVU1573
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3714              		.loc 1 645 9 view .LVU1574
 646:sieve_extend.c ****         copy_word++;
 3715              		.loc 1 646 9 view .LVU1575
 643:sieve_extend.c ****         source_word++;
 3716              		.loc 1 643 28 is_stmt 0 view .LVU1576
 3717 1c76 C4A17E6F 		vmovdqu	96(%rcx,%r11), %ymm1
 3717      4C1960
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3718              		.loc 1 645 28 view .LVU1577
 3719 1c7d C4817E6F 		vmovdqu	96(%r9,%r11), %ymm0
 3719      441960
 643:sieve_extend.c ****         source_word++;
 3720              		.loc 1 643 28 view .LVU1578
 3721 1c84 C44175D3 		vpsrlq	%xmm10, %ymm1, %ymm8
 3721      C2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3722              		.loc 1 645 28 view .LVU1579
 3723 1c89 C4C17DF3 		vpsllq	%xmm11, %ymm0, %ymm5
 3723      EB
 646:sieve_extend.c ****         copy_word++;
 3724              		.loc 1 646 39 view .LVU1580
 3725 1c8e C53DEBCD 		vpor	%ymm5, %ymm8, %ymm9
 646:sieve_extend.c ****         copy_word++;
 3726              		.loc 1 646 29 view .LVU1581
 3727 1c92 C4217E7F 		vmovdqu	%ymm9, 96(%rsi,%r11)
 3727      4C1E60
 647:sieve_extend.c ****     }
 3728              		.loc 1 647 9 is_stmt 1 view .LVU1582
 647:sieve_extend.c ****     }
 3729              		.loc 1 647 9 is_stmt 0 view .LVU1583
 3730              	.LBE345:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3731              		.loc 1 642 11 is_stmt 1 view .LVU1584
GAS LISTING /tmp/ccmX4xFB.s 			page 118


 3732              	.LBB346:
 643:sieve_extend.c ****         source_word++;
 3733              		.loc 1 643 9 view .LVU1585
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3734              		.loc 1 644 9 view .LVU1586
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3735              		.loc 1 645 9 view .LVU1587
 646:sieve_extend.c ****         copy_word++;
 3736              		.loc 1 646 9 view .LVU1588
 643:sieve_extend.c ****         source_word++;
 3737              		.loc 1 643 28 is_stmt 0 view .LVU1589
 3738 1c99 C4A17E6F 		vmovdqu	128(%rcx,%r11), %ymm2
 3738      94198000 
 3738      0000
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3739              		.loc 1 645 28 view .LVU1590
 3740 1ca3 C4817E6F 		vmovdqu	128(%r9,%r11), %ymm7
 3740      BC198000 
 3740      0000
 643:sieve_extend.c ****         source_word++;
 3741              		.loc 1 643 28 view .LVU1591
 3742 1cad C4C16DD3 		vpsrlq	%xmm10, %ymm2, %ymm4
 3742      E2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3743              		.loc 1 645 28 view .LVU1592
 3744 1cb2 C4C145F3 		vpsllq	%xmm11, %ymm7, %ymm3
 3744      DB
 646:sieve_extend.c ****         copy_word++;
 3745              		.loc 1 646 39 view .LVU1593
 3746 1cb7 C5DDEBF3 		vpor	%ymm3, %ymm4, %ymm6
 646:sieve_extend.c ****         copy_word++;
 3747              		.loc 1 646 29 view .LVU1594
 3748 1cbb C4A17E7F 		vmovdqu	%ymm6, 128(%rsi,%r11)
 3748      B41E8000 
 3748      0000
 647:sieve_extend.c ****     }
 3749              		.loc 1 647 9 is_stmt 1 view .LVU1595
 647:sieve_extend.c ****     }
 3750              		.loc 1 647 9 is_stmt 0 view .LVU1596
 3751              	.LBE346:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3752              		.loc 1 642 11 is_stmt 1 view .LVU1597
 3753              	.LBB347:
 643:sieve_extend.c ****         source_word++;
 3754              		.loc 1 643 9 view .LVU1598
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3755              		.loc 1 644 9 view .LVU1599
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3756              		.loc 1 645 9 view .LVU1600
 646:sieve_extend.c ****         copy_word++;
 3757              		.loc 1 646 9 view .LVU1601
 643:sieve_extend.c ****         source_word++;
 3758              		.loc 1 643 28 is_stmt 0 view .LVU1602
 3759 1cc5 C4217E6F 		vmovdqu	160(%rcx,%r11), %ymm12
 3759      A419A000 
 3759      0000
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
GAS LISTING /tmp/ccmX4xFB.s 			page 119


 3760              		.loc 1 645 28 view .LVU1603
 3761 1ccf C4017E6F 		vmovdqu	160(%r9,%r11), %ymm14
 3761      B419A000 
 3761      0000
 643:sieve_extend.c ****         source_word++;
 3762              		.loc 1 643 28 view .LVU1604
 3763 1cd9 C4411DD3 		vpsrlq	%xmm10, %ymm12, %ymm13
 3763      EA
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3764              		.loc 1 645 28 view .LVU1605
 3765 1cde C4410DF3 		vpsllq	%xmm11, %ymm14, %ymm15
 3765      FB
 646:sieve_extend.c ****         copy_word++;
 3766              		.loc 1 646 39 view .LVU1606
 3767 1ce3 C4C115EB 		vpor	%ymm15, %ymm13, %ymm1
 3767      CF
 646:sieve_extend.c ****         copy_word++;
 3768              		.loc 1 646 29 view .LVU1607
 3769 1ce8 C4A17E7F 		vmovdqu	%ymm1, 160(%rsi,%r11)
 3769      8C1EA000 
 3769      0000
 647:sieve_extend.c ****     }
 3770              		.loc 1 647 9 is_stmt 1 view .LVU1608
 647:sieve_extend.c ****     }
 3771              		.loc 1 647 9 is_stmt 0 view .LVU1609
 3772              	.LBE347:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3773              		.loc 1 642 11 is_stmt 1 view .LVU1610
 3774              	.LBB348:
 643:sieve_extend.c ****         source_word++;
 3775              		.loc 1 643 9 view .LVU1611
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3776              		.loc 1 644 9 view .LVU1612
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3777              		.loc 1 645 9 view .LVU1613
 646:sieve_extend.c ****         copy_word++;
 3778              		.loc 1 646 9 view .LVU1614
 643:sieve_extend.c ****         source_word++;
 3779              		.loc 1 643 28 is_stmt 0 view .LVU1615
 3780 1cf2 C4217E6F 		vmovdqu	192(%rcx,%r11), %ymm8
 3780      8419C000 
 3780      0000
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3781              		.loc 1 645 28 view .LVU1616
 3782 1cfc C4817E6F 		vmovdqu	192(%r9,%r11), %ymm5
 3782      AC19C000 
 3782      0000
 643:sieve_extend.c ****         source_word++;
 3783              		.loc 1 643 28 view .LVU1617
 3784 1d06 C4C13DD3 		vpsrlq	%xmm10, %ymm8, %ymm0
 3784      C2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3785              		.loc 1 645 28 view .LVU1618
 3786 1d0b C44155F3 		vpsllq	%xmm11, %ymm5, %ymm9
 3786      CB
 646:sieve_extend.c ****         copy_word++;
 3787              		.loc 1 646 39 view .LVU1619
GAS LISTING /tmp/ccmX4xFB.s 			page 120


 3788 1d10 C4C17DEB 		vpor	%ymm9, %ymm0, %ymm2
 3788      D1
 646:sieve_extend.c ****         copy_word++;
 3789              		.loc 1 646 29 view .LVU1620
 3790 1d15 C4A17E7F 		vmovdqu	%ymm2, 192(%rsi,%r11)
 3790      941EC000 
 3790      0000
 647:sieve_extend.c ****     }
 3791              		.loc 1 647 9 is_stmt 1 view .LVU1621
 647:sieve_extend.c ****     }
 3792              		.loc 1 647 9 is_stmt 0 view .LVU1622
 3793              	.LBE348:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3794              		.loc 1 642 11 is_stmt 1 view .LVU1623
 3795              	.LBB349:
 643:sieve_extend.c ****         source_word++;
 3796              		.loc 1 643 9 view .LVU1624
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3797              		.loc 1 644 9 view .LVU1625
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3798              		.loc 1 645 9 view .LVU1626
 646:sieve_extend.c ****         copy_word++;
 3799              		.loc 1 646 9 view .LVU1627
 643:sieve_extend.c ****         source_word++;
 3800              		.loc 1 643 28 is_stmt 0 view .LVU1628
 3801 1d1f C4A17E6F 		vmovdqu	224(%rcx,%r11), %ymm4
 3801      A419E000 
 3801      0000
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3802              		.loc 1 645 28 view .LVU1629
 3803 1d29 C4817E6F 		vmovdqu	224(%r9,%r11), %ymm7
 3803      BC19E000 
 3803      0000
 643:sieve_extend.c ****         source_word++;
 3804              		.loc 1 643 28 view .LVU1630
 3805 1d33 C4C15DD3 		vpsrlq	%xmm10, %ymm4, %ymm6
 3805      F2
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3806              		.loc 1 645 28 view .LVU1631
 3807 1d38 C4C145F3 		vpsllq	%xmm11, %ymm7, %ymm3
 3807      DB
 646:sieve_extend.c ****         copy_word++;
 3808              		.loc 1 646 39 view .LVU1632
 3809 1d3d C54DEBE3 		vpor	%ymm3, %ymm6, %ymm12
 646:sieve_extend.c ****         copy_word++;
 3810              		.loc 1 646 29 view .LVU1633
 3811 1d41 C4217E7F 		vmovdqu	%ymm12, 224(%rsi,%r11)
 3811      A41EE000 
 3811      0000
 647:sieve_extend.c ****     }
 3812              		.loc 1 647 9 is_stmt 1 view .LVU1634
 647:sieve_extend.c ****     }
 3813              		.loc 1 647 9 is_stmt 0 view .LVU1635
 3814              	.LBE349:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3815              		.loc 1 642 11 is_stmt 1 view .LVU1636
 3816 1d4b 4981C300 		addq	$256, %r11
GAS LISTING /tmp/ccmX4xFB.s 			page 121


 3816      010000
 3817 1d52 4D39D3   		cmpq	%r10, %r11
 3818 1d55 0F85B4FE 		jne	.L383
 3818      FFFF
 3819              	.L602:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3820              		.loc 1 642 11 is_stmt 0 view .LVU1637
 3821 1d5b 488B5424 		movq	88(%rsp), %rdx
 3821      58
 3822 1d60 4989FD   		movq	%rdi, %r13
 3823 1d63 4983E5FC 		andq	$-4, %r13
 3824 1d67 4C01EA   		addq	%r13, %rdx
 3825 1d6a 4C01E8   		addq	%r13, %rax
 3826 1d6d 4C39EF   		cmpq	%r13, %rdi
 3827 1d70 7461     		je	.L386
 3828              	.LVL203:
 3829              	.LBB350:
 643:sieve_extend.c ****         source_word++;
 3830              		.loc 1 643 9 is_stmt 1 view .LVU1638
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3831              		.loc 1 644 9 view .LVU1639
 3832              	.LBE350:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3833              		.loc 1 642 11 is_stmt 0 view .LVU1640
 3834 1d72 4C8B5424 		movq	56(%rsp), %r10
 3834      38
 3835              	.LBB351:
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3836              		.loc 1 645 28 view .LVU1641
 3837 1d77 C4E289F7 		shlx	%r14, 8(%rbx,%rdx,8), %rcx
 3837      4CD308
 643:sieve_extend.c ****         source_word++;
 3838              		.loc 1 643 28 view .LVU1642
 3839 1d7e C4E283F7 		shrx	%r15, (%rbx,%rdx,8), %rsi
 3839      34D3
 647:sieve_extend.c ****     }
 3840              		.loc 1 647 18 view .LVU1643
 3841 1d84 4C8D4801 		leaq	1(%rax), %r9
 646:sieve_extend.c ****         copy_word++;
 3842              		.loc 1 646 39 view .LVU1644
 3843 1d88 4809F1   		orq	%rsi, %rcx
 3844 1d8b 48890CC3 		movq	%rcx, (%rbx,%rax,8)
 3845              	.LVL204:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3846              		.loc 1 644 20 view .LVU1645
 3847 1d8f 488D7A01 		leaq	1(%rdx), %rdi
 3848              	.LVL205:
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3849              		.loc 1 645 9 is_stmt 1 view .LVU1646
 646:sieve_extend.c ****         copy_word++;
 3850              		.loc 1 646 9 view .LVU1647
 647:sieve_extend.c ****     }
 3851              		.loc 1 647 9 view .LVU1648
 647:sieve_extend.c ****     }
 3852              		.loc 1 647 9 is_stmt 0 view .LVU1649
 3853              	.LBE351:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 122


 3854              		.loc 1 642 11 is_stmt 1 view .LVU1650
 3855 1d93 4D39CA   		cmpq	%r9, %r10
 3856 1d96 723B     		jb	.L386
 3857              	.LBB352:
 643:sieve_extend.c ****         source_word++;
 3858              		.loc 1 643 9 view .LVU1651
 3859              	.LVL206:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3860              		.loc 1 644 9 view .LVU1652
 643:sieve_extend.c ****         source_word++;
 3861              		.loc 1 643 28 is_stmt 0 view .LVU1653
 3862 1d98 4C8B2CFB 		movq	(%rbx,%rdi,8), %r13
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3863              		.loc 1 645 28 view .LVU1654
 3864 1d9c C46289F7 		shlx	%r14, 8(%rbx,%rdi,8), %r11
 3864      5CFB08
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3865              		.loc 1 644 20 view .LVU1655
 3866 1da3 4C8D6202 		leaq	2(%rdx), %r12
 3867              	.LVL207:
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3868              		.loc 1 645 9 is_stmt 1 view .LVU1656
 646:sieve_extend.c ****         copy_word++;
 3869              		.loc 1 646 9 view .LVU1657
 647:sieve_extend.c ****     }
 3870              		.loc 1 647 18 is_stmt 0 view .LVU1658
 3871 1da7 4883C002 		addq	$2, %rax
 643:sieve_extend.c ****         source_word++;
 3872              		.loc 1 643 28 view .LVU1659
 3873 1dab C4C283F7 		shrx	%r15, %r13, %rdx
 3873      D5
 646:sieve_extend.c ****         copy_word++;
 3874              		.loc 1 646 39 view .LVU1660
 3875 1db0 4909D3   		orq	%rdx, %r11
 3876 1db3 4E891CCB 		movq	%r11, (%rbx,%r9,8)
 3877              	.LVL208:
 647:sieve_extend.c ****     }
 3878              		.loc 1 647 9 is_stmt 1 view .LVU1661
 647:sieve_extend.c ****     }
 3879              		.loc 1 647 9 is_stmt 0 view .LVU1662
 3880              	.LBE352:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3881              		.loc 1 642 11 is_stmt 1 view .LVU1663
 3882 1db7 4939C2   		cmpq	%rax, %r10
 3883 1dba 7217     		jb	.L386
 3884              	.LBB353:
 643:sieve_extend.c ****         source_word++;
 3885              		.loc 1 643 9 view .LVU1664
 3886              	.LVL209:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 3887              		.loc 1 644 9 view .LVU1665
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3888              		.loc 1 645 9 view .LVU1666
 646:sieve_extend.c ****         copy_word++;
 3889              		.loc 1 646 9 view .LVU1667
 643:sieve_extend.c ****         source_word++;
 3890              		.loc 1 643 28 is_stmt 0 view .LVU1668
GAS LISTING /tmp/ccmX4xFB.s 			page 123


 3891 1dbc 4A8B3CE3 		movq	(%rbx,%r12,8), %rdi
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 3892              		.loc 1 645 28 view .LVU1669
 3893 1dc0 C42289F7 		shlx	%r14, 8(%rbx,%r12,8), %r14
 3893      74E308
 3894              	.LVL210:
 643:sieve_extend.c ****         source_word++;
 3895              		.loc 1 643 28 view .LVU1670
 3896 1dc7 C46283F7 		shrx	%r15, %rdi, %r15
 3896      FF
 3897              	.LVL211:
 646:sieve_extend.c ****         copy_word++;
 3898              		.loc 1 646 39 view .LVU1671
 3899 1dcc 4D09FE   		orq	%r15, %r14
 3900 1dcf 4C8934C3 		movq	%r14, (%rbx,%rax,8)
 3901              	.LVL212:
 647:sieve_extend.c ****     }
 3902              		.loc 1 647 9 is_stmt 1 view .LVU1672
 647:sieve_extend.c ****     }
 3903              		.loc 1 647 9 is_stmt 0 view .LVU1673
 3904              	.LBE353:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3905              		.loc 1 642 11 is_stmt 1 view .LVU1674
 3906              	.L386:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 3907              		.loc 1 642 11 is_stmt 0 view .LVU1675
 3908 1dd3 4C89C0   		movq	%r8, %rax
 3909              	.L381:
 650:sieve_extend.c **** 
 3910              		.loc 1 650 5 is_stmt 1 view .LVU1676
 650:sieve_extend.c **** 
 3911              		.loc 1 650 8 is_stmt 0 view .LVU1677
 3912 1dd6 4C8B4C24 		movq	80(%rsp), %r9
 3912      50
 3913 1ddb 4939C1   		cmpq	%rax, %r9
 3914 1dde 0F864804 		jbe	.L624
 3914      0000
 652:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3915              		.loc 1 652 5 is_stmt 1 view .LVU1678
 652:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3916              		.loc 1 652 17 is_stmt 0 view .LVU1679
 3917 1de4 488B7424 		movq	24(%rsp), %rsi
 3917      18
 3918 1de9 4989C5   		movq	%rax, %r13
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 3919              		.loc 1 654 22 view .LVU1680
 3920 1dec 488D0C06 		leaq	(%rsi,%rax), %rcx
 652:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3921              		.loc 1 652 17 view .LVU1681
 3922 1df0 4929F5   		subq	%rsi, %r13
 3923              	.LVL213:
 653:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 3924              		.loc 1 653 5 is_stmt 1 view .LVU1682
 653:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 3925              		.loc 1 653 18 is_stmt 0 view .LVU1683
 3926 1df3 4C8D34F5 		leaq	0(,%rsi,8), %r14
 3926      00000000 
GAS LISTING /tmp/ccmX4xFB.s 			page 124


 3927              	.LVL214:
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 3928              		.loc 1 654 5 is_stmt 1 view .LVU1684
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 3929              		.loc 1 654 11 view .LVU1685
 3930 1dfb 4939C9   		cmpq	%rcx, %r9
 3931 1dfe 0F826101 		jb	.L388
 3931      0000
 3932 1e04 4C8D24C3 		leaq	(%rbx,%rax,8), %r12
 3933 1e08 488D3CCD 		leaq	0(,%rcx,8), %rdi
 3933      00000000 
 655:sieve_extend.c ****         copy_word += size;
 3934              		.loc 1 655 38 is_stmt 0 view .LVU1686
 3935 1e10 4E8D3CEB 		leaq	(%rbx,%r13,8), %r15
 3936 1e14 4C896C24 		movq	%r13, 72(%rsp)
 3936      48
 3937 1e19 48895C24 		movq	%rbx, 64(%rsp)
 3937      40
 3938 1e1e 4929FC   		subq	%rdi, %r12
 3939 1e21 4C89CB   		movq	%r9, %rbx
 3940              	.LVL215:
 655:sieve_extend.c ****         copy_word += size;
 3941              		.loc 1 655 38 view .LVU1687
 3942 1e24 4989F5   		movq	%rsi, %r13
 3943              	.LVL216:
 655:sieve_extend.c ****         copy_word += size;
 3944              		.loc 1 655 38 view .LVU1688
 3945 1e27 C5F877   		vzeroupper
 3946              	.L389:
 655:sieve_extend.c ****         copy_word += size;
 3947              		.loc 1 655 9 is_stmt 1 view .LVU1689
 3948              	.LVL217:
 3949              	.LBB354:
 3950              	.LBI354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3951              		.loc 2 31 1 view .LVU1690
 3952              	.LBB355:
 3953              		.loc 2 34 3 view .LVU1691
 3954              		.loc 2 34 10 is_stmt 0 view .LVU1692
 3955 1e2a 498D3CCC 		leaq	(%r12,%rcx,8), %rdi
 3956 1e2e 4C89F2   		movq	%r14, %rdx
 3957 1e31 4C89FE   		movq	%r15, %rsi
 3958 1e34 48894C24 		movq	%rcx, 88(%rsp)
 3958      58
 3959 1e39 E8000000 		call	memcpy@PLT
 3959      00
 3960              	.LVL218:
 3961              		.loc 2 34 10 view .LVU1693
 3962              	.LBE355:
 3963              	.LBE354:
 656:sieve_extend.c ****     }
 3964              		.loc 1 656 9 is_stmt 1 view .LVU1694
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 3965              		.loc 1 654 11 view .LVU1695
 3966 1e3e 488B4424 		movq	88(%rsp), %rax
 3966      58
 3967 1e43 4A8D0C28 		leaq	(%rax,%r13), %rcx
GAS LISTING /tmp/ccmX4xFB.s 			page 125


 3968 1e47 4839CB   		cmpq	%rcx, %rbx
 3969 1e4a 0F820001 		jb	.L614
 3969      0000
 655:sieve_extend.c ****         copy_word += size;
 3970              		.loc 1 655 9 view .LVU1696
 3971              	.LVL219:
 3972              	.LBB363:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3973              		.loc 2 31 1 view .LVU1697
 3974              	.LBB356:
 3975              		.loc 2 34 3 view .LVU1698
 3976              		.loc 2 34 10 is_stmt 0 view .LVU1699
 3977 1e50 498D3CCC 		leaq	(%r12,%rcx,8), %rdi
 3978 1e54 4C89F2   		movq	%r14, %rdx
 3979 1e57 4C89FE   		movq	%r15, %rsi
 3980 1e5a 48894C24 		movq	%rcx, 88(%rsp)
 3980      58
 3981              	.LVL220:
 3982              		.loc 2 34 10 view .LVU1700
 3983 1e5f E8000000 		call	memcpy@PLT
 3983      00
 3984              	.LVL221:
 3985              		.loc 2 34 10 view .LVU1701
 3986              	.LBE356:
 3987              	.LBE363:
 656:sieve_extend.c ****     }
 3988              		.loc 1 656 9 is_stmt 1 view .LVU1702
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 3989              		.loc 1 654 11 view .LVU1703
 3990 1e64 488B4424 		movq	88(%rsp), %rax
 3990      58
 3991 1e69 4E8D1428 		leaq	(%rax,%r13), %r10
 3992 1e6d 4C39D3   		cmpq	%r10, %rbx
 3993 1e70 0F82DA00 		jb	.L614
 3993      0000
 655:sieve_extend.c ****         copy_word += size;
 3994              		.loc 1 655 9 view .LVU1704
 3995              	.LVL222:
 3996              	.LBB364:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3997              		.loc 2 31 1 view .LVU1705
 3998              	.LBB357:
 3999              		.loc 2 34 3 view .LVU1706
 4000              		.loc 2 34 10 is_stmt 0 view .LVU1707
 4001 1e76 4B8D3CD4 		leaq	(%r12,%r10,8), %rdi
 4002 1e7a 4C89F2   		movq	%r14, %rdx
 4003 1e7d 4C89FE   		movq	%r15, %rsi
 4004 1e80 4C895424 		movq	%r10, 88(%rsp)
 4004      58
 4005 1e85 E8000000 		call	memcpy@PLT
 4005      00
 4006              	.LVL223:
 4007              		.loc 2 34 10 view .LVU1708
 4008              	.LBE357:
 4009              	.LBE364:
 656:sieve_extend.c ****     }
 4010              		.loc 1 656 9 is_stmt 1 view .LVU1709
GAS LISTING /tmp/ccmX4xFB.s 			page 126


 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4011              		.loc 1 654 11 view .LVU1710
 4012 1e8a 488B4424 		movq	88(%rsp), %rax
 4012      58
 4013 1e8f 4E8D1C28 		leaq	(%rax,%r13), %r11
 4014 1e93 4C39DB   		cmpq	%r11, %rbx
 4015 1e96 0F82B400 		jb	.L614
 4015      0000
 655:sieve_extend.c ****         copy_word += size;
 4016              		.loc 1 655 9 view .LVU1711
 4017              	.LVL224:
 4018              	.LBB365:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4019              		.loc 2 31 1 view .LVU1712
 4020              	.LBB358:
 4021              		.loc 2 34 3 view .LVU1713
 4022              		.loc 2 34 10 is_stmt 0 view .LVU1714
 4023 1e9c 4C89F2   		movq	%r14, %rdx
 4024 1e9f 4B8D3CDC 		leaq	(%r12,%r11,8), %rdi
 4025 1ea3 4C89FE   		movq	%r15, %rsi
 4026 1ea6 4C895C24 		movq	%r11, 88(%rsp)
 4026      58
 4027 1eab E8000000 		call	memcpy@PLT
 4027      00
 4028              	.LVL225:
 4029              		.loc 2 34 10 view .LVU1715
 4030              	.LBE358:
 4031              	.LBE365:
 656:sieve_extend.c ****     }
 4032              		.loc 1 656 9 is_stmt 1 view .LVU1716
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4033              		.loc 1 654 11 view .LVU1717
 4034 1eb0 488B4424 		movq	88(%rsp), %rax
 4034      58
 4035 1eb5 4A8D1428 		leaq	(%rax,%r13), %rdx
 4036 1eb9 4839D3   		cmpq	%rdx, %rbx
 4037 1ebc 0F828E00 		jb	.L614
 4037      0000
 655:sieve_extend.c ****         copy_word += size;
 4038              		.loc 1 655 9 view .LVU1718
 4039              	.LVL226:
 4040              	.LBB366:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4041              		.loc 2 31 1 view .LVU1719
 4042              	.LBB359:
 4043              		.loc 2 34 3 view .LVU1720
 4044              		.loc 2 34 10 is_stmt 0 view .LVU1721
 4045 1ec2 48895424 		movq	%rdx, 88(%rsp)
 4045      58
 4046 1ec7 498D3CD4 		leaq	(%r12,%rdx,8), %rdi
 4047 1ecb 4C89FE   		movq	%r15, %rsi
 4048 1ece 4C89F2   		movq	%r14, %rdx
 4049 1ed1 E8000000 		call	memcpy@PLT
 4049      00
 4050              	.LVL227:
 4051              		.loc 2 34 10 view .LVU1722
 4052              	.LBE359:
GAS LISTING /tmp/ccmX4xFB.s 			page 127


 4053              	.LBE366:
 656:sieve_extend.c ****     }
 4054              		.loc 1 656 9 is_stmt 1 view .LVU1723
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4055              		.loc 1 654 11 view .LVU1724
 4056 1ed6 488B4424 		movq	88(%rsp), %rax
 4056      58
 4057 1edb 4E8D0428 		leaq	(%rax,%r13), %r8
 4058 1edf 4C39C3   		cmpq	%r8, %rbx
 4059 1ee2 726C     		jb	.L614
 655:sieve_extend.c ****         copy_word += size;
 4060              		.loc 1 655 9 view .LVU1725
 4061              	.LVL228:
 4062              	.LBB367:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4063              		.loc 2 31 1 view .LVU1726
 4064              	.LBB360:
 4065              		.loc 2 34 3 view .LVU1727
 4066              		.loc 2 34 10 is_stmt 0 view .LVU1728
 4067 1ee4 4B8D3CC4 		leaq	(%r12,%r8,8), %rdi
 4068 1ee8 4C89F2   		movq	%r14, %rdx
 4069 1eeb 4C89FE   		movq	%r15, %rsi
 4070 1eee 4C894424 		movq	%r8, 88(%rsp)
 4070      58
 4071 1ef3 E8000000 		call	memcpy@PLT
 4071      00
 4072              	.LVL229:
 4073              		.loc 2 34 10 view .LVU1729
 4074              	.LBE360:
 4075              	.LBE367:
 656:sieve_extend.c ****     }
 4076              		.loc 1 656 9 is_stmt 1 view .LVU1730
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4077              		.loc 1 654 11 view .LVU1731
 4078 1ef8 488B4424 		movq	88(%rsp), %rax
 4078      58
 4079 1efd 4E8D0C28 		leaq	(%rax,%r13), %r9
 4080 1f01 4C39CB   		cmpq	%r9, %rbx
 4081 1f04 724A     		jb	.L614
 655:sieve_extend.c ****         copy_word += size;
 4082              		.loc 1 655 9 view .LVU1732
 4083              	.LVL230:
 4084              	.LBB368:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4085              		.loc 2 31 1 view .LVU1733
 4086              	.LBB361:
 4087              		.loc 2 34 3 view .LVU1734
 4088              		.loc 2 34 10 is_stmt 0 view .LVU1735
 4089 1f06 4C89FE   		movq	%r15, %rsi
 4090 1f09 4B8D3CCC 		leaq	(%r12,%r9,8), %rdi
 4091 1f0d 4C89F2   		movq	%r14, %rdx
 4092 1f10 4C894C24 		movq	%r9, 88(%rsp)
 4092      58
 4093 1f15 E8000000 		call	memcpy@PLT
 4093      00
 4094              	.LVL231:
 4095              		.loc 2 34 10 view .LVU1736
GAS LISTING /tmp/ccmX4xFB.s 			page 128


 4096              	.LBE361:
 4097              	.LBE368:
 656:sieve_extend.c ****     }
 4098              		.loc 1 656 9 is_stmt 1 view .LVU1737
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4099              		.loc 1 654 11 view .LVU1738
 4100 1f1a 488B4424 		movq	88(%rsp), %rax
 4100      58
 4101 1f1f 4A8D3428 		leaq	(%rax,%r13), %rsi
 4102 1f23 4839F3   		cmpq	%rsi, %rbx
 4103 1f26 7228     		jb	.L614
 655:sieve_extend.c ****         copy_word += size;
 4104              		.loc 1 655 9 view .LVU1739
 4105              	.LVL232:
 4106              	.LBB369:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4107              		.loc 2 31 1 view .LVU1740
 4108              	.LBB362:
 4109              		.loc 2 34 3 view .LVU1741
 4110              		.loc 2 34 10 is_stmt 0 view .LVU1742
 4111 1f28 48897424 		movq	%rsi, 88(%rsp)
 4111      58
 4112 1f2d 498D3CF4 		leaq	(%r12,%rsi,8), %rdi
 4113 1f31 4C89F2   		movq	%r14, %rdx
 4114 1f34 4C89FE   		movq	%r15, %rsi
 4115 1f37 E8000000 		call	memcpy@PLT
 4115      00
 4116              	.LVL233:
 4117              		.loc 2 34 10 view .LVU1743
 4118              	.LBE362:
 4119              	.LBE369:
 656:sieve_extend.c ****     }
 4120              		.loc 1 656 9 is_stmt 1 view .LVU1744
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4121              		.loc 1 654 11 view .LVU1745
 4122 1f3c 488B4424 		movq	88(%rsp), %rax
 4122      58
 4123              	.LVL234:
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4124              		.loc 1 654 11 is_stmt 0 view .LVU1746
 4125 1f41 4A8D0C28 		leaq	(%rax,%r13), %rcx
 4126              	.LVL235:
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4127              		.loc 1 654 11 view .LVU1747
 4128 1f45 4839CB   		cmpq	%rcx, %rbx
 4129 1f48 0F83DCFE 		jnb	.L389
 4129      FFFF
 4130              	.LVL236:
 4131 1f4e 6690     		.p2align 4,,10
 4132              		.p2align 3
 4133              	.L614:
 654:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4134              		.loc 1 654 11 view .LVU1748
 4135 1f50 4C8B6C24 		movq	72(%rsp), %r13
 4135      48
 4136 1f55 488B5C24 		movq	64(%rsp), %rbx
 4136      40
GAS LISTING /tmp/ccmX4xFB.s 			page 129


 4137              	.LVL237:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4138              		.loc 1 659 11 is_stmt 1 view .LVU1749
 4139 1f5a 48394424 		cmpq	%rax, 80(%rsp)
 4139      50
 4140 1f5f 0F820702 		jb	.L625
 4140      0000
 4141              	.LVL238:
 4142              	.L388:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4143              		.loc 1 659 11 is_stmt 0 view .LVU1750
 4144 1f65 4C8D3CC5 		leaq	0(,%rax,8), %r15
 4144      00000000 
 4145 1f6d 4E8D24ED 		leaq	0(,%r13,8), %r12
 4145      00000000 
 4146 1f75 498D7F20 		leaq	32(%r15), %rdi
 4147 1f79 4939FC   		cmpq	%rdi, %r12
 4148 1f7c 4E8D34ED 		leaq	32(,%r13,8), %r14
 4148      20000000 
 4149              	.LVL239:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4150              		.loc 1 659 11 view .LVU1751
 4151 1f84 410F9DC2 		setge	%r10b
 4152 1f88 4D39F7   		cmpq	%r14, %r15
 4153 1f8b 410F9DC3 		setge	%r11b
 4154 1f8f 4508DA   		orb	%r11b, %r10b
 4155 1f92 0F84E801 		je	.L391
 4155      0000
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4156              		.loc 1 659 11 view .LVU1752
 4157 1f98 4C8B4424 		movq	80(%rsp), %r8
 4157      50
 4158 1f9d 4C89C2   		movq	%r8, %rdx
 4159 1fa0 4829C2   		subq	%rax, %rdx
 4160 1fa3 4883FA08 		cmpq	$8, %rdx
 4161 1fa7 0F86D301 		jbe	.L391
 4161      0000
 4162 1fad 498D4801 		leaq	1(%r8), %rcx
 4163 1fb1 4829C1   		subq	%rax, %rcx
 4164 1fb4 4989C9   		movq	%rcx, %r9
 4165 1fb7 49C1E902 		shrq	$2, %r9
 4166 1fbb 49C1E105 		salq	$5, %r9
 4167 1fbf 498D71E0 		leaq	-32(%r9), %rsi
 4168 1fc3 48C1EE05 		shrq	$5, %rsi
 4169 1fc7 48FFC6   		incq	%rsi
 4170 1fca 4901DC   		addq	%rbx, %r12
 4171 1fcd 4901DF   		addq	%rbx, %r15
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4172              		.loc 1 642 11 view .LVU1753
 4173 1fd0 4531F6   		xorl	%r14d, %r14d
 4174 1fd3 83E607   		andl	$7, %esi
 4175 1fd6 0F849E00 		je	.L392
 4175      0000
 4176 1fdc 4883FE01 		cmpq	$1, %rsi
 4177 1fe0 747F     		je	.L536
 4178 1fe2 4883FE02 		cmpq	$2, %rsi
 4179 1fe6 7469     		je	.L537
GAS LISTING /tmp/ccmX4xFB.s 			page 130


 4180 1fe8 4883FE03 		cmpq	$3, %rsi
 4181 1fec 7453     		je	.L538
 4182 1fee 4883FE04 		cmpq	$4, %rsi
 4183 1ff2 743D     		je	.L539
 4184 1ff4 4883FE05 		cmpq	$5, %rsi
 4185 1ff8 7427     		je	.L540
 4186 1ffa 4883FE06 		cmpq	$6, %rsi
 4187 1ffe 7411     		je	.L541
 4188              	.LVL240:
 660:sieve_extend.c ****      copy_word++;
 4189              		.loc 1 660 6 is_stmt 1 view .LVU1754
 660:sieve_extend.c ****      copy_word++;
 4190              		.loc 1 660 26 is_stmt 0 view .LVU1755
 4191 2000 C4417E6F 		vmovdqu	(%r12), %ymm10
 4191      1424
 4192 2006 41BE2000 		movl	$32, %r14d
 4192      0000
 4193 200c C4417E7F 		vmovdqu	%ymm10, (%r15)
 4193      17
 661:sieve_extend.c ****      source_word++;
 4194              		.loc 1 661 6 is_stmt 1 view .LVU1756
 662:sieve_extend.c ****     }
 4195              		.loc 1 662 6 view .LVU1757
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4196              		.loc 1 659 11 view .LVU1758
 4197              	.L541:
 660:sieve_extend.c ****      copy_word++;
 4198              		.loc 1 660 6 view .LVU1759
 660:sieve_extend.c ****      copy_word++;
 4199              		.loc 1 660 26 is_stmt 0 view .LVU1760
 4200 2011 C4017E6F 		vmovdqu	(%r12,%r14), %ymm11
 4200      1C34
 4201 2017 C4017E7F 		vmovdqu	%ymm11, (%r15,%r14)
 4201      1C37
 661:sieve_extend.c ****      source_word++;
 4202              		.loc 1 661 6 is_stmt 1 view .LVU1761
 662:sieve_extend.c ****     }
 4203              		.loc 1 662 6 view .LVU1762
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4204              		.loc 1 659 11 view .LVU1763
 4205 201d 4983C620 		addq	$32, %r14
 4206              	.L540:
 660:sieve_extend.c ****      copy_word++;
 4207              		.loc 1 660 6 view .LVU1764
 660:sieve_extend.c ****      copy_word++;
 4208              		.loc 1 660 26 is_stmt 0 view .LVU1765
 4209 2021 C4017E6F 		vmovdqu	(%r12,%r14), %ymm13
 4209      2C34
 4210 2027 C4017E7F 		vmovdqu	%ymm13, (%r15,%r14)
 4210      2C37
 661:sieve_extend.c ****      source_word++;
 4211              		.loc 1 661 6 is_stmt 1 view .LVU1766
 662:sieve_extend.c ****     }
 4212              		.loc 1 662 6 view .LVU1767
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4213              		.loc 1 659 11 view .LVU1768
 4214 202d 4983C620 		addq	$32, %r14
GAS LISTING /tmp/ccmX4xFB.s 			page 131


 4215              	.L539:
 660:sieve_extend.c ****      copy_word++;
 4216              		.loc 1 660 6 view .LVU1769
 660:sieve_extend.c ****      copy_word++;
 4217              		.loc 1 660 26 is_stmt 0 view .LVU1770
 4218 2031 C4017E6F 		vmovdqu	(%r12,%r14), %ymm14
 4218      3434
 4219 2037 C4017E7F 		vmovdqu	%ymm14, (%r15,%r14)
 4219      3437
 661:sieve_extend.c ****      source_word++;
 4220              		.loc 1 661 6 is_stmt 1 view .LVU1771
 662:sieve_extend.c ****     }
 4221              		.loc 1 662 6 view .LVU1772
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4222              		.loc 1 659 11 view .LVU1773
 4223 203d 4983C620 		addq	$32, %r14
 4224              	.L538:
 660:sieve_extend.c ****      copy_word++;
 4225              		.loc 1 660 6 view .LVU1774
 660:sieve_extend.c ****      copy_word++;
 4226              		.loc 1 660 26 is_stmt 0 view .LVU1775
 4227 2041 C4017E6F 		vmovdqu	(%r12,%r14), %ymm15
 4227      3C34
 4228 2047 C4017E7F 		vmovdqu	%ymm15, (%r15,%r14)
 4228      3C37
 661:sieve_extend.c ****      source_word++;
 4229              		.loc 1 661 6 is_stmt 1 view .LVU1776
 662:sieve_extend.c ****     }
 4230              		.loc 1 662 6 view .LVU1777
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4231              		.loc 1 659 11 view .LVU1778
 4232 204d 4983C620 		addq	$32, %r14
 4233              	.L537:
 660:sieve_extend.c ****      copy_word++;
 4234              		.loc 1 660 6 view .LVU1779
 660:sieve_extend.c ****      copy_word++;
 4235              		.loc 1 660 26 is_stmt 0 view .LVU1780
 4236 2051 C4817E6F 		vmovdqu	(%r12,%r14), %ymm1
 4236      0C34
 4237 2057 C4817E7F 		vmovdqu	%ymm1, (%r15,%r14)
 4237      0C37
 661:sieve_extend.c ****      source_word++;
 4238              		.loc 1 661 6 is_stmt 1 view .LVU1781
 662:sieve_extend.c ****     }
 4239              		.loc 1 662 6 view .LVU1782
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4240              		.loc 1 659 11 view .LVU1783
 4241 205d 4983C620 		addq	$32, %r14
 4242              	.L536:
 660:sieve_extend.c ****      copy_word++;
 4243              		.loc 1 660 6 view .LVU1784
 660:sieve_extend.c ****      copy_word++;
 4244              		.loc 1 660 26 is_stmt 0 view .LVU1785
 4245 2061 C4017E6F 		vmovdqu	(%r12,%r14), %ymm8
 4245      0434
 4246 2067 C4017E7F 		vmovdqu	%ymm8, (%r15,%r14)
 4246      0437
GAS LISTING /tmp/ccmX4xFB.s 			page 132


 661:sieve_extend.c ****      source_word++;
 4247              		.loc 1 661 6 is_stmt 1 view .LVU1786
 662:sieve_extend.c ****     }
 4248              		.loc 1 662 6 view .LVU1787
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4249              		.loc 1 659 11 view .LVU1788
 4250 206d 4983C620 		addq	$32, %r14
 4251 2071 4D39CE   		cmpq	%r9, %r14
 4252 2074 0F849600 		je	.L599
 4252      0000
 4253              	.L392:
 660:sieve_extend.c ****      copy_word++;
 4254              		.loc 1 660 6 view .LVU1789
 660:sieve_extend.c ****      copy_word++;
 4255              		.loc 1 660 26 is_stmt 0 view .LVU1790
 4256 207a C4817E6F 		vmovdqu	(%r12,%r14), %ymm0
 4256      0434
 4257 2080 C4817E7F 		vmovdqu	%ymm0, (%r15,%r14)
 4257      0437
 661:sieve_extend.c ****      source_word++;
 4258              		.loc 1 661 6 is_stmt 1 view .LVU1791
 662:sieve_extend.c ****     }
 4259              		.loc 1 662 6 view .LVU1792
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4260              		.loc 1 659 11 view .LVU1793
 660:sieve_extend.c ****      copy_word++;
 4261              		.loc 1 660 6 view .LVU1794
 660:sieve_extend.c ****      copy_word++;
 4262              		.loc 1 660 26 is_stmt 0 view .LVU1795
 4263 2086 C4817E6F 		vmovdqu	32(%r12,%r14), %ymm5
 4263      6C3420
 4264 208d C4817E7F 		vmovdqu	%ymm5, 32(%r15,%r14)
 4264      6C3720
 661:sieve_extend.c ****      source_word++;
 4265              		.loc 1 661 6 is_stmt 1 view .LVU1796
 662:sieve_extend.c ****     }
 4266              		.loc 1 662 6 view .LVU1797
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4267              		.loc 1 659 11 view .LVU1798
 660:sieve_extend.c ****      copy_word++;
 4268              		.loc 1 660 6 view .LVU1799
 660:sieve_extend.c ****      copy_word++;
 4269              		.loc 1 660 26 is_stmt 0 view .LVU1800
 4270 2094 C4017E6F 		vmovdqu	64(%r12,%r14), %ymm9
 4270      4C3440
 4271 209b C4017E7F 		vmovdqu	%ymm9, 64(%r15,%r14)
 4271      4C3740
 661:sieve_extend.c ****      source_word++;
 4272              		.loc 1 661 6 is_stmt 1 view .LVU1801
 662:sieve_extend.c ****     }
 4273              		.loc 1 662 6 view .LVU1802
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4274              		.loc 1 659 11 view .LVU1803
 660:sieve_extend.c ****      copy_word++;
 4275              		.loc 1 660 6 view .LVU1804
 660:sieve_extend.c ****      copy_word++;
 4276              		.loc 1 660 26 is_stmt 0 view .LVU1805
GAS LISTING /tmp/ccmX4xFB.s 			page 133


 4277 20a2 C4817E6F 		vmovdqu	96(%r12,%r14), %ymm2
 4277      543460
 4278 20a9 C4817E7F 		vmovdqu	%ymm2, 96(%r15,%r14)
 4278      543760
 661:sieve_extend.c ****      source_word++;
 4279              		.loc 1 661 6 is_stmt 1 view .LVU1806
 662:sieve_extend.c ****     }
 4280              		.loc 1 662 6 view .LVU1807
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4281              		.loc 1 659 11 view .LVU1808
 660:sieve_extend.c ****      copy_word++;
 4282              		.loc 1 660 6 view .LVU1809
 660:sieve_extend.c ****      copy_word++;
 4283              		.loc 1 660 26 is_stmt 0 view .LVU1810
 4284 20b0 C4817E6F 		vmovdqu	128(%r12,%r14), %ymm4
 4284      A4348000 
 4284      0000
 4285 20ba C4817E7F 		vmovdqu	%ymm4, 128(%r15,%r14)
 4285      A4378000 
 4285      0000
 661:sieve_extend.c ****      source_word++;
 4286              		.loc 1 661 6 is_stmt 1 view .LVU1811
 662:sieve_extend.c ****     }
 4287              		.loc 1 662 6 view .LVU1812
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4288              		.loc 1 659 11 view .LVU1813
 660:sieve_extend.c ****      copy_word++;
 4289              		.loc 1 660 6 view .LVU1814
 660:sieve_extend.c ****      copy_word++;
 4290              		.loc 1 660 26 is_stmt 0 view .LVU1815
 4291 20c4 C4817E6F 		vmovdqu	160(%r12,%r14), %ymm6
 4291      B434A000 
 4291      0000
 4292 20ce C4817E7F 		vmovdqu	%ymm6, 160(%r15,%r14)
 4292      B437A000 
 4292      0000
 661:sieve_extend.c ****      source_word++;
 4293              		.loc 1 661 6 is_stmt 1 view .LVU1816
 662:sieve_extend.c ****     }
 4294              		.loc 1 662 6 view .LVU1817
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4295              		.loc 1 659 11 view .LVU1818
 660:sieve_extend.c ****      copy_word++;
 4296              		.loc 1 660 6 view .LVU1819
 660:sieve_extend.c ****      copy_word++;
 4297              		.loc 1 660 26 is_stmt 0 view .LVU1820
 4298 20d8 C4817E6F 		vmovdqu	192(%r12,%r14), %ymm7
 4298      BC34C000 
 4298      0000
 4299 20e2 C4817E7F 		vmovdqu	%ymm7, 192(%r15,%r14)
 4299      BC37C000 
 4299      0000
 661:sieve_extend.c ****      source_word++;
 4300              		.loc 1 661 6 is_stmt 1 view .LVU1821
 662:sieve_extend.c ****     }
 4301              		.loc 1 662 6 view .LVU1822
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccmX4xFB.s 			page 134


 4302              		.loc 1 659 11 view .LVU1823
 660:sieve_extend.c ****      copy_word++;
 4303              		.loc 1 660 6 view .LVU1824
 660:sieve_extend.c ****      copy_word++;
 4304              		.loc 1 660 26 is_stmt 0 view .LVU1825
 4305 20ec C4817E6F 		vmovdqu	224(%r12,%r14), %ymm3
 4305      9C34E000 
 4305      0000
 4306 20f6 C4817E7F 		vmovdqu	%ymm3, 224(%r15,%r14)
 4306      9C37E000 
 4306      0000
 661:sieve_extend.c ****      source_word++;
 4307              		.loc 1 661 6 is_stmt 1 view .LVU1826
 662:sieve_extend.c ****     }
 4308              		.loc 1 662 6 view .LVU1827
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4309              		.loc 1 659 11 view .LVU1828
 4310 2100 4981C600 		addq	$256, %r14
 4310      010000
 4311 2107 4D39CE   		cmpq	%r9, %r14
 4312 210a 0F856AFF 		jne	.L392
 4312      FFFF
 4313              	.L599:
 4314 2110 4989CF   		movq	%rcx, %r15
 4315 2113 4983E7FC 		andq	$-4, %r15
 4316 2117 4D01FD   		addq	%r15, %r13
 4317 211a 4C01F8   		addq	%r15, %rax
 4318 211d 4939CF   		cmpq	%rcx, %r15
 4319 2120 0F840601 		je	.L624
 4319      0000
 4320              	.LVL241:
 660:sieve_extend.c ****      copy_word++;
 4321              		.loc 1 660 6 view .LVU1829
 660:sieve_extend.c ****      copy_word++;
 4322              		.loc 1 660 36 is_stmt 0 view .LVU1830
 4323 2126 4E8B24EB 		movq	(%rbx,%r13,8), %r12
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4324              		.loc 1 659 11 view .LVU1831
 4325 212a 488B7C24 		movq	80(%rsp), %rdi
 4325      50
 661:sieve_extend.c ****      source_word++;
 4326              		.loc 1 661 15 view .LVU1832
 4327 212f 4C8D5001 		leaq	1(%rax), %r10
 660:sieve_extend.c ****      copy_word++;
 4328              		.loc 1 660 26 view .LVU1833
 4329 2133 4C8924C3 		movq	%r12, (%rbx,%rax,8)
 661:sieve_extend.c ****      source_word++;
 4330              		.loc 1 661 6 is_stmt 1 view .LVU1834
 4331              	.LVL242:
 662:sieve_extend.c ****     }
 4332              		.loc 1 662 6 view .LVU1835
 662:sieve_extend.c ****     }
 4333              		.loc 1 662 17 is_stmt 0 view .LVU1836
 4334 2137 49FFC5   		incq	%r13
 4335              	.LVL243:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4336              		.loc 1 659 11 is_stmt 1 view .LVU1837
GAS LISTING /tmp/ccmX4xFB.s 			page 135


 4337 213a 4C39D7   		cmpq	%r10, %rdi
 4338 213d 0F82E900 		jb	.L624
 4338      0000
 660:sieve_extend.c ****      copy_word++;
 4339              		.loc 1 660 6 view .LVU1838
 660:sieve_extend.c ****      copy_word++;
 4340              		.loc 1 660 36 is_stmt 0 view .LVU1839
 4341 2143 4E8D1CED 		leaq	0(,%r13,8), %r11
 4341      00000000 
 4342 214b 4E8B2CEB 		movq	(%rbx,%r13,8), %r13
 4343              	.LVL244:
 661:sieve_extend.c ****      source_word++;
 4344              		.loc 1 661 15 view .LVU1840
 4345 214f 4883C002 		addq	$2, %rax
 660:sieve_extend.c ****      copy_word++;
 4346              		.loc 1 660 26 view .LVU1841
 4347 2153 4E892CD3 		movq	%r13, (%rbx,%r10,8)
 661:sieve_extend.c ****      source_word++;
 4348              		.loc 1 661 6 is_stmt 1 view .LVU1842
 4349              	.LVL245:
 662:sieve_extend.c ****     }
 4350              		.loc 1 662 6 view .LVU1843
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4351              		.loc 1 659 11 view .LVU1844
 4352 2157 4839C7   		cmpq	%rax, %rdi
 4353 215a 0F82CC00 		jb	.L624
 4353      0000
 660:sieve_extend.c ****      copy_word++;
 4354              		.loc 1 660 6 view .LVU1845
 660:sieve_extend.c ****      copy_word++;
 4355              		.loc 1 660 36 is_stmt 0 view .LVU1846
 4356 2160 4E8B441B 		movq	8(%rbx,%r11), %r8
 4356      08
 660:sieve_extend.c ****      copy_word++;
 4357              		.loc 1 660 26 view .LVU1847
 4358 2165 4C8904C3 		movq	%r8, (%rbx,%rax,8)
 661:sieve_extend.c ****      source_word++;
 4359              		.loc 1 661 6 is_stmt 1 view .LVU1848
 662:sieve_extend.c ****     }
 4360              		.loc 1 662 6 view .LVU1849
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4361              		.loc 1 659 11 view .LVU1850
 4362 2169 C5F877   		vzeroupper
 4363              	.L625:
 665:sieve_extend.c **** 
 4364              		.loc 1 665 2 is_stmt 0 view .LVU1851
 4365 216c 488D65D8 		leaq	-40(%rbp), %rsp
 4366              	.LVL246:
 665:sieve_extend.c **** 
 4367              		.loc 1 665 2 view .LVU1852
 4368 2170 5B       		popq	%rbx
 4369 2171 415C     		popq	%r12
 4370 2173 415D     		popq	%r13
 4371 2175 415E     		popq	%r14
 4372 2177 415F     		popq	%r15
 4373 2179 5D       		popq	%rbp
 4374              		.cfi_remember_state
GAS LISTING /tmp/ccmX4xFB.s 			page 136


 4375              		.cfi_def_cfa 7, 8
 4376              	.LVL247:
 665:sieve_extend.c **** 
 4377              		.loc 1 665 2 view .LVU1853
 4378 217a C3       		ret
 4379              	.LVL248:
 4380 217b 0F1F4400 		.p2align 4,,10
 4380      00
 4381              		.p2align 3
 4382              	.L391:
 4383              		.cfi_restore_state
 665:sieve_extend.c **** 
 4384              		.loc 1 665 2 view .LVU1854
 4385 2180 488B4C24 		movq	80(%rsp), %rcx
 4385      50
 4386 2185 4A8D143B 		leaq	(%rbx,%r15), %rdx
 4387 2189 488D5CCB 		leaq	8(%rbx,%rcx,8), %rbx
 4387      08
 660:sieve_extend.c ****      copy_word++;
 4388              		.loc 1 660 36 view .LVU1855
 4389 218e 4929C5   		subq	%rax, %r13
 4390              	.LVL249:
 660:sieve_extend.c ****      copy_word++;
 4391              		.loc 1 660 36 view .LVU1856
 4392 2191 4889D8   		movq	%rbx, %rax
 4393 2194 4829D0   		subq	%rdx, %rax
 4394 2197 4883E808 		subq	$8, %rax
 4395 219b 48C1E803 		shrq	$3, %rax
 4396 219f 48FFC0   		incq	%rax
 4397 21a2 83E007   		andl	$7, %eax
 4398 21a5 0F843D01 		je	.L395
 4398      0000
 4399 21ab 4883F801 		cmpq	$1, %rax
 4400 21af 7466     		je	.L542
 4401 21b1 4883F802 		cmpq	$2, %rax
 4402 21b5 7454     		je	.L543
 4403 21b7 4883F803 		cmpq	$3, %rax
 4404 21bb 7442     		je	.L544
 4405 21bd 4883F804 		cmpq	$4, %rax
 4406 21c1 7430     		je	.L545
 4407 21c3 4883F805 		cmpq	$5, %rax
 4408 21c7 741E     		je	.L546
 4409 21c9 4883F806 		cmpq	$6, %rax
 4410 21cd 740C     		je	.L547
 660:sieve_extend.c ****      copy_word++;
 4411              		.loc 1 660 6 is_stmt 1 view .LVU1857
 660:sieve_extend.c ****      copy_word++;
 4412              		.loc 1 660 36 is_stmt 0 view .LVU1858
 4413 21cf 4E8B0CEA 		movq	(%rdx,%r13,8), %r9
 4414 21d3 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4415              		.loc 1 660 26 view .LVU1859
 4416 21d7 4C894AF8 		movq	%r9, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4417              		.loc 1 661 6 is_stmt 1 view .LVU1860
 662:sieve_extend.c ****     }
 4418              		.loc 1 662 6 view .LVU1861
GAS LISTING /tmp/ccmX4xFB.s 			page 137


 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4419              		.loc 1 659 11 view .LVU1862
 4420              	.L547:
 660:sieve_extend.c ****      copy_word++;
 4421              		.loc 1 660 6 view .LVU1863
 660:sieve_extend.c ****      copy_word++;
 4422              		.loc 1 660 36 is_stmt 0 view .LVU1864
 4423 21db 4A8B34EA 		movq	(%rdx,%r13,8), %rsi
 4424 21df 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4425              		.loc 1 660 26 view .LVU1865
 4426 21e3 488972F8 		movq	%rsi, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4427              		.loc 1 661 6 is_stmt 1 view .LVU1866
 662:sieve_extend.c ****     }
 4428              		.loc 1 662 6 view .LVU1867
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4429              		.loc 1 659 11 view .LVU1868
 4430              	.L546:
 660:sieve_extend.c ****      copy_word++;
 4431              		.loc 1 660 6 view .LVU1869
 660:sieve_extend.c ****      copy_word++;
 4432              		.loc 1 660 36 is_stmt 0 view .LVU1870
 4433 21e7 4E8B34EA 		movq	(%rdx,%r13,8), %r14
 4434 21eb 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4435              		.loc 1 660 26 view .LVU1871
 4436 21ef 4C8972F8 		movq	%r14, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4437              		.loc 1 661 6 is_stmt 1 view .LVU1872
 662:sieve_extend.c ****     }
 4438              		.loc 1 662 6 view .LVU1873
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4439              		.loc 1 659 11 view .LVU1874
 4440              	.L545:
 660:sieve_extend.c ****      copy_word++;
 4441              		.loc 1 660 6 view .LVU1875
 660:sieve_extend.c ****      copy_word++;
 4442              		.loc 1 660 36 is_stmt 0 view .LVU1876
 4443 21f3 4E8B3CEA 		movq	(%rdx,%r13,8), %r15
 4444 21f7 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4445              		.loc 1 660 26 view .LVU1877
 4446 21fb 4C897AF8 		movq	%r15, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4447              		.loc 1 661 6 is_stmt 1 view .LVU1878
 662:sieve_extend.c ****     }
 4448              		.loc 1 662 6 view .LVU1879
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4449              		.loc 1 659 11 view .LVU1880
 4450              	.L544:
 660:sieve_extend.c ****      copy_word++;
 4451              		.loc 1 660 6 view .LVU1881
 660:sieve_extend.c ****      copy_word++;
 4452              		.loc 1 660 36 is_stmt 0 view .LVU1882
 4453 21ff 4E8B24EA 		movq	(%rdx,%r13,8), %r12
 4454 2203 4883C208 		addq	$8, %rdx
GAS LISTING /tmp/ccmX4xFB.s 			page 138


 660:sieve_extend.c ****      copy_word++;
 4455              		.loc 1 660 26 view .LVU1883
 4456 2207 4C8962F8 		movq	%r12, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4457              		.loc 1 661 6 is_stmt 1 view .LVU1884
 662:sieve_extend.c ****     }
 4458              		.loc 1 662 6 view .LVU1885
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4459              		.loc 1 659 11 view .LVU1886
 4460              	.L543:
 660:sieve_extend.c ****      copy_word++;
 4461              		.loc 1 660 6 view .LVU1887
 660:sieve_extend.c ****      copy_word++;
 4462              		.loc 1 660 36 is_stmt 0 view .LVU1888
 4463 220b 4E8B14EA 		movq	(%rdx,%r13,8), %r10
 4464 220f 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4465              		.loc 1 660 26 view .LVU1889
 4466 2213 4C8952F8 		movq	%r10, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4467              		.loc 1 661 6 is_stmt 1 view .LVU1890
 662:sieve_extend.c ****     }
 4468              		.loc 1 662 6 view .LVU1891
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4469              		.loc 1 659 11 view .LVU1892
 4470              	.L542:
 660:sieve_extend.c ****      copy_word++;
 4471              		.loc 1 660 6 view .LVU1893
 660:sieve_extend.c ****      copy_word++;
 4472              		.loc 1 660 36 is_stmt 0 view .LVU1894
 4473 2217 4A8B3CEA 		movq	(%rdx,%r13,8), %rdi
 4474 221b 4883C208 		addq	$8, %rdx
 660:sieve_extend.c ****      copy_word++;
 4475              		.loc 1 660 26 view .LVU1895
 4476 221f 48897AF8 		movq	%rdi, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4477              		.loc 1 661 6 is_stmt 1 view .LVU1896
 662:sieve_extend.c ****     }
 4478              		.loc 1 662 6 view .LVU1897
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4479              		.loc 1 659 11 view .LVU1898
 4480 2223 4839DA   		cmpq	%rbx, %rdx
 4481 2226 0F85BC00 		jne	.L395
 4481      0000
 4482              	.LVL250:
 4483              	.L624:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4484              		.loc 1 659 11 is_stmt 0 view .LVU1899
 4485 222c C5F877   		vzeroupper
 665:sieve_extend.c **** 
 4486              		.loc 1 665 2 view .LVU1900
 4487 222f 488D65D8 		leaq	-40(%rbp), %rsp
 4488              	.LVL251:
 665:sieve_extend.c **** 
 4489              		.loc 1 665 2 view .LVU1901
 4490 2233 5B       		popq	%rbx
 4491 2234 415C     		popq	%r12
GAS LISTING /tmp/ccmX4xFB.s 			page 139


 4492 2236 415D     		popq	%r13
 4493 2238 415E     		popq	%r14
 4494 223a 415F     		popq	%r15
 4495 223c 5D       		popq	%rbp
 4496              		.cfi_remember_state
 4497              		.cfi_def_cfa 7, 8
 4498              	.LVL252:
 665:sieve_extend.c **** 
 4499              		.loc 1 665 2 view .LVU1902
 4500 223d C3       		ret
 4501              	.LVL253:
 4502 223e 6690     		.p2align 4,,10
 4503              		.p2align 3
 4504              	.L627:
 4505              		.cfi_restore_state
 4506              	.LBB370:
 4507              	.LBB330:
 4508              	.LBB318:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4509              		.loc 1 482 9 is_stmt 1 view .LVU1903
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4510              		.loc 1 483 9 view .LVU1904
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4511              		.loc 1 482 19 is_stmt 0 view .LVU1905
 4512 2240 C5FE6F71 		vmovdqu	64(%rcx), %ymm6
 4512      40
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4513              		.loc 1 483 19 view .LVU1906
 4514 2245 C57E6F4A 		vmovdqu	64(%rdx), %ymm9
 4514      40
 4515 224a C57E6F52 		vmovdqu	96(%rdx), %ymm10
 4515      60
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4516              		.loc 1 482 19 view .LVU1907
 4517 224f C54D6C61 		vpunpcklqdq	96(%rcx), %ymm6, %ymm12
 4517      60
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4518              		.loc 1 483 19 view .LVU1908
 4519 2254 C4C1356C 		vpunpcklqdq	%ymm10, %ymm9, %ymm2
 4519      D2
 4520 2259 C441356D 		vpunpckhqdq	%ymm10, %ymm9, %ymm8
 4520      C2
 4521 225e C463FD00 		vpermq	$216, %ymm2, %ymm11
 4521      DAD8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4522              		.loc 1 484 9 is_stmt 1 view .LVU1909
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4523              		.loc 1 482 19 is_stmt 0 view .LVU1910
 4524 2264 C443FD00 		vpermq	$216, %ymm12, %ymm13
 4524      ECD8
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4525              		.loc 1 483 19 view .LVU1911
 4526 226a C4C3FD00 		vpermq	$216, %ymm8, %ymm7
 4526      F8D8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4527              		.loc 1 484 42 view .LVU1912
 4528 2270 C515D3F3 		vpsrlq	%xmm3, %ymm13, %ymm14
GAS LISTING /tmp/ccmX4xFB.s 			page 140


 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4529              		.loc 1 484 63 view .LVU1913
 4530 2274 C525F3FC 		vpsllq	%xmm4, %ymm11, %ymm15
 486:sieve_extend.c ****         copy_word += 2;
 4531              		.loc 1 486 63 view .LVU1914
 4532 2278 C545F3CC 		vpsllq	%xmm4, %ymm7, %ymm9
 486:sieve_extend.c ****         copy_word += 2;
 4533              		.loc 1 486 42 view .LVU1915
 4534 227c C525D3D3 		vpsrlq	%xmm3, %ymm11, %ymm10
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4535              		.loc 1 484 52 view .LVU1916
 4536 2280 C4C10DEB 		vpor	%ymm15, %ymm14, %ymm1
 4536      CF
 486:sieve_extend.c ****         copy_word += 2;
 4537              		.loc 1 486 52 view .LVU1917
 4538 2285 C4C135EB 		vpor	%ymm10, %ymm9, %ymm2
 4538      D2
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4539              		.loc 1 484 31 view .LVU1918
 4540 228a C4E37D39 		vextracti128	$0x1, %ymm1, %xmm5
 4540      CD01
 486:sieve_extend.c ****         copy_word += 2;
 4541              		.loc 1 486 31 view .LVU1919
 4542 2290 C4E37D39 		vextracti128	$0x1, %ymm2, %xmm6
 4542      D601
 4543 2296 48837C24 		cmpq	$2, 64(%rsp)
 4543      4002
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4544              		.loc 1 484 31 view .LVU1920
 4545 229c C4C179D6 		vmovq	%xmm1, 64(%r10)
 4545      4A40
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4546              		.loc 1 484 31 view .LVU1921
 4547 22a2 C4C179D6 		vmovq	%xmm5, 96(%r10)
 4547      6A60
 4548 22a8 C4C3F916 		vpextrq	$1, %xmm1, 80(%r10)
 4548      4A5001
 4549 22af C4C3F916 		vpextrq	$1, %xmm5, 112(%r10)
 4549      6A7001
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4550              		.loc 1 485 9 is_stmt 1 view .LVU1922
 486:sieve_extend.c ****         copy_word += 2;
 4551              		.loc 1 486 9 view .LVU1923
 4552 22b6 41B80200 		movl	$2, %r8d
 4552      0000
 486:sieve_extend.c ****         copy_word += 2;
 4553              		.loc 1 486 31 is_stmt 0 view .LVU1924
 4554 22bc C5F9D657 		vmovq	%xmm2, 64(%rdi)
 4554      40
 486:sieve_extend.c ****         copy_word += 2;
 4555              		.loc 1 486 31 view .LVU1925
 4556 22c1 C5F9D677 		vmovq	%xmm6, 96(%rdi)
 4556      60
 4557 22c6 41B98000 		movl	$128, %r9d
 4557      0000
 4558 22cc C4E3F916 		vpextrq	$1, %xmm2, 80(%rdi)
 4558      575001
GAS LISTING /tmp/ccmX4xFB.s 			page 141


 4559 22d3 C4E3F916 		vpextrq	$1, %xmm6, 112(%rdi)
 4559      777001
 487:sieve_extend.c ****         source_word += 2;
 4560              		.loc 1 487 9 is_stmt 1 view .LVU1926
 488:sieve_extend.c ****         distance += 2;
 4561              		.loc 1 488 9 view .LVU1927
 489:sieve_extend.c ****     }
 4562              		.loc 1 489 9 view .LVU1928
 489:sieve_extend.c ****     }
 4563              		.loc 1 489 9 is_stmt 0 view .LVU1929
 4564              	.LBE318:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4565              		.loc 1 481 11 is_stmt 1 view .LVU1930
 4566 22da 0F87C4F4 		ja	.L620
 4566      FFFF
 4567 22e0 E900F6FF 		jmp	.L594
 4567      FF
 4568              	.LVL254:
 4569              		.p2align 4,,10
 4570 22e5 0F1F00   		.p2align 3
 4571              	.L395:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4572              		.loc 1 481 11 is_stmt 0 view .LVU1931
 4573              	.LBE330:
 4574              	.LBE370:
 660:sieve_extend.c ****      copy_word++;
 4575              		.loc 1 660 6 is_stmt 1 view .LVU1932
 660:sieve_extend.c ****      copy_word++;
 4576              		.loc 1 660 36 is_stmt 0 view .LVU1933
 4577 22e8 4E8B1CEA 		movq	(%rdx,%r13,8), %r11
 660:sieve_extend.c ****      copy_word++;
 4578              		.loc 1 660 26 view .LVU1934
 4579 22ec 4C891A   		movq	%r11, (%rdx)
 661:sieve_extend.c ****      source_word++;
 4580              		.loc 1 661 6 is_stmt 1 view .LVU1935
 662:sieve_extend.c ****     }
 4581              		.loc 1 662 6 view .LVU1936
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4582              		.loc 1 659 11 view .LVU1937
 660:sieve_extend.c ****      copy_word++;
 4583              		.loc 1 660 6 view .LVU1938
 660:sieve_extend.c ****      copy_word++;
 4584              		.loc 1 660 36 is_stmt 0 view .LVU1939
 4585 22ef 4E8B44EA 		movq	8(%rdx,%r13,8), %r8
 4585      08
 660:sieve_extend.c ****      copy_word++;
 4586              		.loc 1 660 26 view .LVU1940
 4587 22f4 4C894208 		movq	%r8, 8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4588              		.loc 1 661 6 is_stmt 1 view .LVU1941
 662:sieve_extend.c ****     }
 4589              		.loc 1 662 6 view .LVU1942
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4590              		.loc 1 659 11 view .LVU1943
 660:sieve_extend.c ****      copy_word++;
 4591              		.loc 1 660 6 view .LVU1944
 660:sieve_extend.c ****      copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 142


 4592              		.loc 1 660 36 is_stmt 0 view .LVU1945
 4593 22f8 4A8B4CEA 		movq	16(%rdx,%r13,8), %rcx
 4593      10
 660:sieve_extend.c ****      copy_word++;
 4594              		.loc 1 660 26 view .LVU1946
 4595 22fd 48894A10 		movq	%rcx, 16(%rdx)
 661:sieve_extend.c ****      source_word++;
 4596              		.loc 1 661 6 is_stmt 1 view .LVU1947
 662:sieve_extend.c ****     }
 4597              		.loc 1 662 6 view .LVU1948
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4598              		.loc 1 659 11 view .LVU1949
 660:sieve_extend.c ****      copy_word++;
 4599              		.loc 1 660 6 view .LVU1950
 660:sieve_extend.c ****      copy_word++;
 4600              		.loc 1 660 36 is_stmt 0 view .LVU1951
 4601 2301 4A8B44EA 		movq	24(%rdx,%r13,8), %rax
 4601      18
 660:sieve_extend.c ****      copy_word++;
 4602              		.loc 1 660 26 view .LVU1952
 4603 2306 48894218 		movq	%rax, 24(%rdx)
 661:sieve_extend.c ****      source_word++;
 4604              		.loc 1 661 6 is_stmt 1 view .LVU1953
 662:sieve_extend.c ****     }
 4605              		.loc 1 662 6 view .LVU1954
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4606              		.loc 1 659 11 view .LVU1955
 660:sieve_extend.c ****      copy_word++;
 4607              		.loc 1 660 6 view .LVU1956
 660:sieve_extend.c ****      copy_word++;
 4608              		.loc 1 660 36 is_stmt 0 view .LVU1957
 4609 230a 4E8B4CEA 		movq	32(%rdx,%r13,8), %r9
 4609      20
 660:sieve_extend.c ****      copy_word++;
 4610              		.loc 1 660 26 view .LVU1958
 4611 230f 4C894A20 		movq	%r9, 32(%rdx)
 661:sieve_extend.c ****      source_word++;
 4612              		.loc 1 661 6 is_stmt 1 view .LVU1959
 662:sieve_extend.c ****     }
 4613              		.loc 1 662 6 view .LVU1960
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4614              		.loc 1 659 11 view .LVU1961
 660:sieve_extend.c ****      copy_word++;
 4615              		.loc 1 660 6 view .LVU1962
 660:sieve_extend.c ****      copy_word++;
 4616              		.loc 1 660 36 is_stmt 0 view .LVU1963
 4617 2313 4A8B74EA 		movq	40(%rdx,%r13,8), %rsi
 4617      28
 660:sieve_extend.c ****      copy_word++;
 4618              		.loc 1 660 26 view .LVU1964
 4619 2318 48897228 		movq	%rsi, 40(%rdx)
 661:sieve_extend.c ****      source_word++;
 4620              		.loc 1 661 6 is_stmt 1 view .LVU1965
 662:sieve_extend.c ****     }
 4621              		.loc 1 662 6 view .LVU1966
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4622              		.loc 1 659 11 view .LVU1967
GAS LISTING /tmp/ccmX4xFB.s 			page 143


 660:sieve_extend.c ****      copy_word++;
 4623              		.loc 1 660 6 view .LVU1968
 660:sieve_extend.c ****      copy_word++;
 4624              		.loc 1 660 36 is_stmt 0 view .LVU1969
 4625 231c 4E8B74EA 		movq	48(%rdx,%r13,8), %r14
 4625      30
 660:sieve_extend.c ****      copy_word++;
 4626              		.loc 1 660 26 view .LVU1970
 4627 2321 4C897230 		movq	%r14, 48(%rdx)
 661:sieve_extend.c ****      source_word++;
 4628              		.loc 1 661 6 is_stmt 1 view .LVU1971
 662:sieve_extend.c ****     }
 4629              		.loc 1 662 6 view .LVU1972
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4630              		.loc 1 659 11 view .LVU1973
 660:sieve_extend.c ****      copy_word++;
 4631              		.loc 1 660 6 view .LVU1974
 660:sieve_extend.c ****      copy_word++;
 4632              		.loc 1 660 36 is_stmt 0 view .LVU1975
 4633 2325 4E8B7CEA 		movq	56(%rdx,%r13,8), %r15
 4633      38
 4634 232a 4883C240 		addq	$64, %rdx
 660:sieve_extend.c ****      copy_word++;
 4635              		.loc 1 660 26 view .LVU1976
 4636 232e 4C897AF8 		movq	%r15, -8(%rdx)
 661:sieve_extend.c ****      source_word++;
 4637              		.loc 1 661 6 is_stmt 1 view .LVU1977
 662:sieve_extend.c ****     }
 4638              		.loc 1 662 6 view .LVU1978
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4639              		.loc 1 659 11 view .LVU1979
 4640 2332 4839DA   		cmpq	%rbx, %rdx
 4641 2335 75B1     		jne	.L395
 4642 2337 E9F0FEFF 		jmp	.L624
 4642      FF
 4643              	.LVL255:
 4644 233c 0F1F4000 		.p2align 4,,10
 4645              		.p2align 3
 4646              	.L382:
 659:sieve_extend.c ****      bitarray[copy_word] = bitarray[source_word];
 4647              		.loc 1 659 11 is_stmt 0 view .LVU1980
 4648 2340 4C8B4C24 		movq	88(%rsp), %r9
 4648      58
 4649 2345 4C8B4424 		movq	56(%rsp), %r8
 4649      38
 4650 234a 4801D9   		addq	%rbx, %rcx
 4651 234d 4D01C8   		addq	%r9, %r8
 4652 2350 4E8D54C3 		leaq	8(%rbx,%r8,8), %r10
 4652      08
 4653 2355 4929F2   		subq	%rsi, %r10
 4654 2358 4C89D6   		movq	%r10, %rsi
 4655 235b 4929CA   		subq	%rcx, %r10
 4656 235e 4983EA08 		subq	$8, %r10
 4657 2362 49C1EA03 		shrq	$3, %r10
 4658 2366 49FFC2   		incq	%r10
 4659              	.LBB371:
 646:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 144


 4660              		.loc 1 646 29 view .LVU1981
 4661 2369 4C29C8   		subq	%r9, %rax
 4662 236c 4183E207 		andl	$7, %r10d
 4663 2370 0F84CF00 		je	.L385
 4663      0000
 4664 2376 4983FA01 		cmpq	$1, %r10
 4665 237a 0F84A600 		je	.L529
 4665      0000
 4666 2380 4983FA02 		cmpq	$2, %r10
 4667 2384 0F848600 		je	.L530
 4667      0000
 4668 238a 4983FA03 		cmpq	$3, %r10
 4669 238e 746A     		je	.L531
 4670 2390 4983FA04 		cmpq	$4, %r10
 4671 2394 744E     		je	.L532
 4672 2396 4983FA05 		cmpq	$5, %r10
 4673 239a 7432     		je	.L533
 4674 239c 4983FA06 		cmpq	$6, %r10
 4675 23a0 7416     		je	.L534
 643:sieve_extend.c ****         source_word++;
 4676              		.loc 1 643 9 is_stmt 1 view .LVU1982
 4677              	.LVL256:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4678              		.loc 1 644 9 view .LVU1983
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4679              		.loc 1 645 9 view .LVU1984
 646:sieve_extend.c ****         copy_word++;
 4680              		.loc 1 646 9 view .LVU1985
 643:sieve_extend.c ****         source_word++;
 4681              		.loc 1 643 28 is_stmt 0 view .LVU1986
 4682 23a2 C4629BF7 		shrx	%r12, (%rcx), %r11
 4682      19
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4683              		.loc 1 645 28 view .LVU1987
 4684 23a7 C4E291F7 		shlx	%r13, 8(%rcx), %rdx
 4684      5108
 646:sieve_extend.c ****         copy_word++;
 4685              		.loc 1 646 39 view .LVU1988
 4686 23ad 4909D3   		orq	%rdx, %r11
 4687 23b0 4C891CC1 		movq	%r11, (%rcx,%rax,8)
 4688              	.LVL257:
 647:sieve_extend.c ****     }
 4689              		.loc 1 647 9 is_stmt 1 view .LVU1989
 647:sieve_extend.c ****     }
 4690              		.loc 1 647 9 is_stmt 0 view .LVU1990
 4691              	.LBE371:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4692              		.loc 1 642 11 is_stmt 1 view .LVU1991
 4693 23b4 4883C108 		addq	$8, %rcx
 4694              	.L534:
 4695              	.LBB372:
 643:sieve_extend.c ****         source_word++;
 4696              		.loc 1 643 9 view .LVU1992
 4697              	.LVL258:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4698              		.loc 1 644 9 view .LVU1993
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
GAS LISTING /tmp/ccmX4xFB.s 			page 145


 4699              		.loc 1 645 9 view .LVU1994
 646:sieve_extend.c ****         copy_word++;
 4700              		.loc 1 646 9 view .LVU1995
 643:sieve_extend.c ****         source_word++;
 4701              		.loc 1 643 28 is_stmt 0 view .LVU1996
 4702 23b8 C4629BF7 		shrx	%r12, (%rcx), %r14
 4702      31
 4703              	.LVL259:
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4704              		.loc 1 645 28 view .LVU1997
 4705 23bd C4E291F7 		shlx	%r13, 8(%rcx), %rdi
 4705      7908
 646:sieve_extend.c ****         copy_word++;
 4706              		.loc 1 646 39 view .LVU1998
 4707 23c3 4909FE   		orq	%rdi, %r14
 4708 23c6 4C8934C1 		movq	%r14, (%rcx,%rax,8)
 4709              	.LVL260:
 647:sieve_extend.c ****     }
 4710              		.loc 1 647 9 is_stmt 1 view .LVU1999
 647:sieve_extend.c ****     }
 4711              		.loc 1 647 9 is_stmt 0 view .LVU2000
 4712              	.LBE372:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4713              		.loc 1 642 11 is_stmt 1 view .LVU2001
 4714 23ca 4883C108 		addq	$8, %rcx
 4715              	.L533:
 4716              	.LBB373:
 643:sieve_extend.c ****         source_word++;
 4717              		.loc 1 643 9 view .LVU2002
 4718              	.LVL261:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4719              		.loc 1 644 9 view .LVU2003
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4720              		.loc 1 645 9 view .LVU2004
 646:sieve_extend.c ****         copy_word++;
 4721              		.loc 1 646 9 view .LVU2005
 643:sieve_extend.c ****         source_word++;
 4722              		.loc 1 643 28 is_stmt 0 view .LVU2006
 4723 23ce C4629BF7 		shrx	%r12, (%rcx), %r15
 4723      39
 4724              	.LVL262:
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4725              		.loc 1 645 28 view .LVU2007
 4726 23d3 C46291F7 		shlx	%r13, 8(%rcx), %r8
 4726      4108
 646:sieve_extend.c ****         copy_word++;
 4727              		.loc 1 646 39 view .LVU2008
 4728 23d9 4D09C7   		orq	%r8, %r15
 4729 23dc 4C893CC1 		movq	%r15, (%rcx,%rax,8)
 4730              	.LVL263:
 647:sieve_extend.c ****     }
 4731              		.loc 1 647 9 is_stmt 1 view .LVU2009
 647:sieve_extend.c ****     }
 4732              		.loc 1 647 9 is_stmt 0 view .LVU2010
 4733              	.LBE373:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4734              		.loc 1 642 11 is_stmt 1 view .LVU2011
GAS LISTING /tmp/ccmX4xFB.s 			page 146


 4735 23e0 4883C108 		addq	$8, %rcx
 4736              	.L532:
 4737              	.LBB374:
 643:sieve_extend.c ****         source_word++;
 4738              		.loc 1 643 9 view .LVU2012
 4739              	.LVL264:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4740              		.loc 1 644 9 view .LVU2013
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4741              		.loc 1 645 9 view .LVU2014
 646:sieve_extend.c ****         copy_word++;
 4742              		.loc 1 646 9 view .LVU2015
 643:sieve_extend.c ****         source_word++;
 4743              		.loc 1 643 28 is_stmt 0 view .LVU2016
 4744 23e4 C4629BF7 		shrx	%r12, (%rcx), %r9
 4744      09
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4745              		.loc 1 645 28 view .LVU2017
 4746 23e9 C46291F7 		shlx	%r13, 8(%rcx), %r10
 4746      5108
 646:sieve_extend.c ****         copy_word++;
 4747              		.loc 1 646 39 view .LVU2018
 4748 23ef 4D09D1   		orq	%r10, %r9
 4749 23f2 4C890CC1 		movq	%r9, (%rcx,%rax,8)
 4750              	.LVL265:
 647:sieve_extend.c ****     }
 4751              		.loc 1 647 9 is_stmt 1 view .LVU2019
 647:sieve_extend.c ****     }
 4752              		.loc 1 647 9 is_stmt 0 view .LVU2020
 4753              	.LBE374:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4754              		.loc 1 642 11 is_stmt 1 view .LVU2021
 4755 23f6 4883C108 		addq	$8, %rcx
 4756              	.L531:
 4757              	.LBB375:
 643:sieve_extend.c ****         source_word++;
 4758              		.loc 1 643 9 view .LVU2022
 4759              	.LVL266:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4760              		.loc 1 644 9 view .LVU2023
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4761              		.loc 1 645 9 view .LVU2024
 646:sieve_extend.c ****         copy_word++;
 4762              		.loc 1 646 9 view .LVU2025
 643:sieve_extend.c ****         source_word++;
 4763              		.loc 1 643 28 is_stmt 0 view .LVU2026
 4764 23fa C4629BF7 		shrx	%r12, (%rcx), %r11
 4764      19
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4765              		.loc 1 645 28 view .LVU2027
 4766 23ff C4E291F7 		shlx	%r13, 8(%rcx), %rdx
 4766      5108
 646:sieve_extend.c ****         copy_word++;
 4767              		.loc 1 646 39 view .LVU2028
 4768 2405 4909D3   		orq	%rdx, %r11
 4769 2408 4C891CC1 		movq	%r11, (%rcx,%rax,8)
 4770              	.LVL267:
GAS LISTING /tmp/ccmX4xFB.s 			page 147


 647:sieve_extend.c ****     }
 4771              		.loc 1 647 9 is_stmt 1 view .LVU2029
 647:sieve_extend.c ****     }
 4772              		.loc 1 647 9 is_stmt 0 view .LVU2030
 4773              	.LBE375:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4774              		.loc 1 642 11 is_stmt 1 view .LVU2031
 4775 240c 4883C108 		addq	$8, %rcx
 4776              	.L530:
 4777              	.LBB376:
 643:sieve_extend.c ****         source_word++;
 4778              		.loc 1 643 9 view .LVU2032
 4779              	.LVL268:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4780              		.loc 1 644 9 view .LVU2033
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4781              		.loc 1 645 9 view .LVU2034
 646:sieve_extend.c ****         copy_word++;
 4782              		.loc 1 646 9 view .LVU2035
 643:sieve_extend.c ****         source_word++;
 4783              		.loc 1 643 28 is_stmt 0 view .LVU2036
 4784 2410 C4629BF7 		shrx	%r12, (%rcx), %r14
 4784      31
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4785              		.loc 1 645 28 view .LVU2037
 4786 2415 C4E291F7 		shlx	%r13, 8(%rcx), %rdi
 4786      7908
 646:sieve_extend.c ****         copy_word++;
 4787              		.loc 1 646 39 view .LVU2038
 4788 241b 4909FE   		orq	%rdi, %r14
 4789 241e 4C8934C1 		movq	%r14, (%rcx,%rax,8)
 4790              	.LVL269:
 647:sieve_extend.c ****     }
 4791              		.loc 1 647 9 is_stmt 1 view .LVU2039
 647:sieve_extend.c ****     }
 4792              		.loc 1 647 9 is_stmt 0 view .LVU2040
 4793              	.LBE376:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4794              		.loc 1 642 11 is_stmt 1 view .LVU2041
 4795 2422 4883C108 		addq	$8, %rcx
 4796              	.L529:
 4797              	.LBB377:
 643:sieve_extend.c ****         source_word++;
 4798              		.loc 1 643 9 view .LVU2042
 4799              	.LVL270:
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4800              		.loc 1 644 9 view .LVU2043
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4801              		.loc 1 645 9 view .LVU2044
 646:sieve_extend.c ****         copy_word++;
 4802              		.loc 1 646 9 view .LVU2045
 643:sieve_extend.c ****         source_word++;
 4803              		.loc 1 643 28 is_stmt 0 view .LVU2046
 4804 2426 C4629BF7 		shrx	%r12, (%rcx), %r15
 4804      39
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4805              		.loc 1 645 28 view .LVU2047
GAS LISTING /tmp/ccmX4xFB.s 			page 148


 4806 242b C46291F7 		shlx	%r13, 8(%rcx), %r8
 4806      4108
 646:sieve_extend.c ****         copy_word++;
 4807              		.loc 1 646 39 view .LVU2048
 4808 2431 4D09C7   		orq	%r8, %r15
 4809 2434 4C893CC1 		movq	%r15, (%rcx,%rax,8)
 4810              	.LVL271:
 647:sieve_extend.c ****     }
 4811              		.loc 1 647 9 is_stmt 1 view .LVU2049
 647:sieve_extend.c ****     }
 4812              		.loc 1 647 9 is_stmt 0 view .LVU2050
 4813              	.LBE377:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4814              		.loc 1 642 11 is_stmt 1 view .LVU2051
 4815 2438 4883C108 		addq	$8, %rcx
 4816 243c 4839F1   		cmpq	%rsi, %rcx
 4817 243f 0F84C000 		je	.L601
 4817      0000
 4818              	.L385:
 4819              	.LBB378:
 643:sieve_extend.c ****         source_word++;
 4820              		.loc 1 643 9 view .LVU2052
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4821              		.loc 1 644 9 view .LVU2053
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4822              		.loc 1 645 9 view .LVU2054
 646:sieve_extend.c ****         copy_word++;
 4823              		.loc 1 646 9 view .LVU2055
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4824              		.loc 1 645 28 is_stmt 0 view .LVU2056
 4825 2445 C46291F7 		shlx	%r13, 8(%rcx), %r10
 4825      5108
 643:sieve_extend.c ****         source_word++;
 4826              		.loc 1 643 28 view .LVU2057
 4827 244b C4629BF7 		shrx	%r12, (%rcx), %r9
 4827      09
 646:sieve_extend.c ****         copy_word++;
 4828              		.loc 1 646 39 view .LVU2058
 4829 2450 4D09D1   		orq	%r10, %r9
 4830 2453 4C890CC1 		movq	%r9, (%rcx,%rax,8)
 647:sieve_extend.c ****     }
 4831              		.loc 1 647 9 is_stmt 1 view .LVU2059
 647:sieve_extend.c ****     }
 4832              		.loc 1 647 9 is_stmt 0 view .LVU2060
 4833              	.LBE378:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4834              		.loc 1 642 11 is_stmt 1 view .LVU2061
 4835 2457 4C8D5908 		leaq	8(%rcx), %r11
 4836              	.LBB379:
 643:sieve_extend.c ****         source_word++;
 4837              		.loc 1 643 9 view .LVU2062
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4838              		.loc 1 644 9 view .LVU2063
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4839              		.loc 1 645 9 view .LVU2064
 646:sieve_extend.c ****         copy_word++;
 4840              		.loc 1 646 9 view .LVU2065
GAS LISTING /tmp/ccmX4xFB.s 			page 149


 4841 245b 4C8D7910 		leaq	16(%rcx), %r15
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4842              		.loc 1 645 28 is_stmt 0 view .LVU2066
 4843 245f C44291F7 		shlx	%r13, 8(%r11), %r14
 4843      7308
 643:sieve_extend.c ****         source_word++;
 4844              		.loc 1 643 28 view .LVU2067
 4845 2465 C4E29BF7 		shrx	%r12, 8(%rcx), %rdx
 4845      5108
 646:sieve_extend.c ****         copy_word++;
 4846              		.loc 1 646 39 view .LVU2068
 4847 246b 4C09F2   		orq	%r14, %rdx
 4848 246e 498914C3 		movq	%rdx, (%r11,%rax,8)
 647:sieve_extend.c ****     }
 4849              		.loc 1 647 9 is_stmt 1 view .LVU2069
 647:sieve_extend.c ****     }
 4850              		.loc 1 647 9 is_stmt 0 view .LVU2070
 4851              	.LBE379:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4852              		.loc 1 642 11 is_stmt 1 view .LVU2071
 4853              	.LBB380:
 643:sieve_extend.c ****         source_word++;
 4854              		.loc 1 643 9 view .LVU2072
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4855              		.loc 1 644 9 view .LVU2073
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4856              		.loc 1 645 9 view .LVU2074
 646:sieve_extend.c ****         copy_word++;
 4857              		.loc 1 646 9 view .LVU2075
 4858 2472 4C8D4918 		leaq	24(%rcx), %r9
 4859 2476 4C8D7120 		leaq	32(%rcx), %r14
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4860              		.loc 1 645 28 is_stmt 0 view .LVU2076
 4861 247a C4C291F7 		shlx	%r13, 8(%r15), %rdi
 4861      7F08
 643:sieve_extend.c ****         source_word++;
 4862              		.loc 1 643 28 view .LVU2077
 4863 2480 C4629BF7 		shrx	%r12, 16(%rcx), %r8
 4863      4110
 646:sieve_extend.c ****         copy_word++;
 4864              		.loc 1 646 39 view .LVU2078
 4865 2486 4909F8   		orq	%rdi, %r8
 4866 2489 4D8904C7 		movq	%r8, (%r15,%rax,8)
 647:sieve_extend.c ****     }
 4867              		.loc 1 647 9 is_stmt 1 view .LVU2079
 647:sieve_extend.c ****     }
 4868              		.loc 1 647 9 is_stmt 0 view .LVU2080
 4869              	.LBE380:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4870              		.loc 1 642 11 is_stmt 1 view .LVU2081
 4871              	.LBB381:
 643:sieve_extend.c ****         source_word++;
 4872              		.loc 1 643 9 view .LVU2082
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4873              		.loc 1 644 9 view .LVU2083
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4874              		.loc 1 645 9 view .LVU2084
GAS LISTING /tmp/ccmX4xFB.s 			page 150


 646:sieve_extend.c ****         copy_word++;
 4875              		.loc 1 646 9 view .LVU2085
 4876 248d 4C8D4128 		leaq	40(%rcx), %r8
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4877              		.loc 1 645 28 is_stmt 0 view .LVU2086
 4878 2491 C44291F7 		shlx	%r13, 8(%r9), %r11
 4878      5908
 643:sieve_extend.c ****         source_word++;
 4879              		.loc 1 643 28 view .LVU2087
 4880 2497 C4629BF7 		shrx	%r12, 24(%rcx), %r10
 4880      5118
 646:sieve_extend.c ****         copy_word++;
 4881              		.loc 1 646 39 view .LVU2088
 4882 249d 4D09DA   		orq	%r11, %r10
 4883 24a0 4D8914C1 		movq	%r10, (%r9,%rax,8)
 647:sieve_extend.c ****     }
 4884              		.loc 1 647 9 is_stmt 1 view .LVU2089
 647:sieve_extend.c ****     }
 4885              		.loc 1 647 9 is_stmt 0 view .LVU2090
 4886              	.LBE381:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4887              		.loc 1 642 11 is_stmt 1 view .LVU2091
 4888              	.LBB382:
 643:sieve_extend.c ****         source_word++;
 4889              		.loc 1 643 9 view .LVU2092
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4890              		.loc 1 644 9 view .LVU2093
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4891              		.loc 1 645 9 view .LVU2094
 646:sieve_extend.c ****         copy_word++;
 4892              		.loc 1 646 9 view .LVU2095
 4893 24a4 4C8D5130 		leaq	48(%rcx), %r10
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4894              		.loc 1 645 28 is_stmt 0 view .LVU2096
 4895 24a8 C44291F7 		shlx	%r13, 8(%r14), %r15
 4895      7E08
 643:sieve_extend.c ****         source_word++;
 4896              		.loc 1 643 28 view .LVU2097
 4897 24ae C4E29BF7 		shrx	%r12, 32(%rcx), %rdx
 4897      5120
 646:sieve_extend.c ****         copy_word++;
 4898              		.loc 1 646 39 view .LVU2098
 4899 24b4 4C09FA   		orq	%r15, %rdx
 4900 24b7 498914C6 		movq	%rdx, (%r14,%rax,8)
 647:sieve_extend.c ****     }
 4901              		.loc 1 647 9 is_stmt 1 view .LVU2099
 647:sieve_extend.c ****     }
 4902              		.loc 1 647 9 is_stmt 0 view .LVU2100
 4903              	.LBE382:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4904              		.loc 1 642 11 is_stmt 1 view .LVU2101
 4905              	.LBB383:
 643:sieve_extend.c ****         source_word++;
 4906              		.loc 1 643 9 view .LVU2102
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4907              		.loc 1 644 9 view .LVU2103
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
GAS LISTING /tmp/ccmX4xFB.s 			page 151


 4908              		.loc 1 645 9 view .LVU2104
 646:sieve_extend.c ****         copy_word++;
 4909              		.loc 1 646 9 view .LVU2105
 4910 24bb 4C8D7938 		leaq	56(%rcx), %r15
 4911 24bf 4883C140 		addq	$64, %rcx
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4912              		.loc 1 645 28 is_stmt 0 view .LVU2106
 4913 24c3 C4C291F7 		shlx	%r13, 8(%r8), %rdi
 4913      7808
 643:sieve_extend.c ****         source_word++;
 4914              		.loc 1 643 28 view .LVU2107
 4915 24c9 C4629BF7 		shrx	%r12, -24(%rcx), %r9
 4915      49E8
 646:sieve_extend.c ****         copy_word++;
 4916              		.loc 1 646 39 view .LVU2108
 4917 24cf 4909F9   		orq	%rdi, %r9
 4918 24d2 4D890CC0 		movq	%r9, (%r8,%rax,8)
 647:sieve_extend.c ****     }
 4919              		.loc 1 647 9 is_stmt 1 view .LVU2109
 647:sieve_extend.c ****     }
 4920              		.loc 1 647 9 is_stmt 0 view .LVU2110
 4921              	.LBE383:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4922              		.loc 1 642 11 is_stmt 1 view .LVU2111
 4923              	.LBB384:
 643:sieve_extend.c ****         source_word++;
 4924              		.loc 1 643 9 view .LVU2112
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4925              		.loc 1 644 9 view .LVU2113
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4926              		.loc 1 645 9 view .LVU2114
 646:sieve_extend.c ****         copy_word++;
 4927              		.loc 1 646 9 view .LVU2115
 643:sieve_extend.c ****         source_word++;
 4928              		.loc 1 643 28 is_stmt 0 view .LVU2116
 4929 24d6 C4629BF7 		shrx	%r12, -16(%rcx), %r11
 4929      59F0
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4930              		.loc 1 645 28 view .LVU2117
 4931 24dc C44291F7 		shlx	%r13, 8(%r10), %r14
 4931      7208
 646:sieve_extend.c ****         copy_word++;
 4932              		.loc 1 646 39 view .LVU2118
 4933 24e2 4D09F3   		orq	%r14, %r11
 4934 24e5 4D891CC2 		movq	%r11, (%r10,%rax,8)
 647:sieve_extend.c ****     }
 4935              		.loc 1 647 9 is_stmt 1 view .LVU2119
 647:sieve_extend.c ****     }
 4936              		.loc 1 647 9 is_stmt 0 view .LVU2120
 4937              	.LBE384:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4938              		.loc 1 642 11 is_stmt 1 view .LVU2121
 4939              	.LBB385:
 643:sieve_extend.c ****         source_word++;
 4940              		.loc 1 643 9 view .LVU2122
 644:sieve_extend.c ****         register bitword_t source1 = bitarray[source_word  ] << shift_flipped;
 4941              		.loc 1 644 9 view .LVU2123
GAS LISTING /tmp/ccmX4xFB.s 			page 152


 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4942              		.loc 1 645 9 view .LVU2124
 646:sieve_extend.c ****         copy_word++;
 4943              		.loc 1 646 9 view .LVU2125
 643:sieve_extend.c ****         source_word++;
 4944              		.loc 1 643 28 is_stmt 0 view .LVU2126
 4945 24e9 C4E29BF7 		shrx	%r12, -8(%rcx), %rdx
 4945      51F8
 645:sieve_extend.c ****         bitarray[copy_word] = source0 | source1;
 4946              		.loc 1 645 28 view .LVU2127
 4947 24ef C44291F7 		shlx	%r13, 8(%r15), %r8
 4947      4708
 646:sieve_extend.c ****         copy_word++;
 4948              		.loc 1 646 39 view .LVU2128
 4949 24f5 4C09C2   		orq	%r8, %rdx
 4950 24f8 498914C7 		movq	%rdx, (%r15,%rax,8)
 647:sieve_extend.c ****     }
 4951              		.loc 1 647 9 is_stmt 1 view .LVU2129
 647:sieve_extend.c ****     }
 4952              		.loc 1 647 9 is_stmt 0 view .LVU2130
 4953              	.LBE385:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4954              		.loc 1 642 11 is_stmt 1 view .LVU2131
 4955 24fc 4839F1   		cmpq	%rsi, %rcx
 4956 24ff 0F8540FF 		jne	.L385
 4956      FFFF
 4957              	.L601:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4958              		.loc 1 642 11 is_stmt 0 view .LVU2132
 4959 2505 488B4424 		movq	56(%rsp), %rax
 4959      38
 4960 250a 4C8D4001 		leaq	1(%rax), %r8
 4961 250e E9C0F8FF 		jmp	.L386
 4961      FF
 4962              	.LVL272:
 4963              		.p2align 4,,10
 4964 2513 0F1F4400 		.p2align 3
 4964      00
 4965              	.L376:
 642:sieve_extend.c ****         register bitword_t source0 = bitarray[source_word  ] >> shift;
 4966              		.loc 1 642 11 view .LVU2133
 4967 2518 4801D9   		addq	%rbx, %rcx
 4968              	.LBB386:
 4969              	.LBB331:
 4970              	.LBB319:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4971              		.loc 1 483 19 view .LVU2134
 4972 251b 488B7108 		movq	8(%rcx), %rsi
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4973              		.loc 1 484 42 view .LVU2135
 4974 251f C4E29BF7 		shrx	%r12, (%rcx), %rdx
 4974      11
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4975              		.loc 1 484 63 view .LVU2136
 4976 2524 C4E291F7 		shlx	%r13, %rsi, %rdi
 4976      FE
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccmX4xFB.s 			page 153


 4977              		.loc 1 484 52 view .LVU2137
 4978 2529 4809FA   		orq	%rdi, %rdx
 4979 252c 488914C3 		movq	%rdx, (%rbx,%rax,8)
 4980 2530 4C8B4C24 		movq	72(%rsp), %r9
 4980      48
 4981 2535 4989C0   		movq	%rax, %r8
 4982 2538 49F7D0   		notq	%r8
 4983 253b 4D01C8   		addq	%r9, %r8
 486:sieve_extend.c ****         copy_word += 2;
 4984              		.loc 1 486 63 view .LVU2138
 4985 253e C46291F7 		shlx	%r13, 16(%rcx), %r10
 4985      5110
 4986 2544 49F7D3   		notq	%r11
 4987              	.LVL273:
 486:sieve_extend.c ****         copy_word += 2;
 4988              		.loc 1 486 63 view .LVU2139
 4989 2547 49D1E8   		shrq	%r8
 487:sieve_extend.c ****         source_word += 2;
 4990              		.loc 1 487 19 view .LVU2140
 4991 254a 488D7802 		leaq	2(%rax), %rdi
 486:sieve_extend.c ****         copy_word += 2;
 4992              		.loc 1 486 42 view .LVU2141
 4993 254e C4E29BF7 		shrx	%r12, %rsi, %rsi
 4993      F6
 486:sieve_extend.c ****         copy_word += 2;
 4994              		.loc 1 486 52 view .LVU2142
 4995 2553 4C09D6   		orq	%r10, %rsi
 4996 2556 488974C3 		movq	%rsi, 8(%rbx,%rax,8)
 4996      08
 4997 255b 4183E003 		andl	$3, %r8d
 4998              	.LVL274:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4999              		.loc 1 482 9 is_stmt 1 view .LVU2143
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5000              		.loc 1 483 9 view .LVU2144
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5001              		.loc 1 484 9 view .LVU2145
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5002              		.loc 1 485 9 view .LVU2146
 486:sieve_extend.c ****         copy_word += 2;
 5003              		.loc 1 486 9 view .LVU2147
 487:sieve_extend.c ****         source_word += 2;
 5004              		.loc 1 487 9 view .LVU2148
 488:sieve_extend.c ****         distance += 2;
 5005              		.loc 1 488 9 view .LVU2149
 489:sieve_extend.c ****     }
 5006              		.loc 1 489 9 view .LVU2150
 5007 255f 4D8D143B 		leaq	(%r11,%rdi), %r10
 489:sieve_extend.c ****     }
 5008              		.loc 1 489 9 is_stmt 0 view .LVU2151
 5009              	.LBE319:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5010              		.loc 1 481 11 is_stmt 1 view .LVU2152
 5011 2563 488D5110 		leaq	16(%rcx), %rdx
 5012 2567 4939F9   		cmpq	%rdi, %r9
 5013 256a 0F86B1F4 		jbe	.L380
 5013      FFFF
GAS LISTING /tmp/ccmX4xFB.s 			page 154


 5014 2570 4D85C0   		testq	%r8, %r8
 5015 2573 747D     		je	.L379
 5016 2575 4983F801 		cmpq	$1, %r8
 5017 2579 7439     		je	.L554
 5018 257b 4983F802 		cmpq	$2, %r8
 5019 257f 0F854001 		jne	.L628
 5019      0000
 5020              	.LVL275:
 5021              	.L555:
 5022              	.LBB320:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5023              		.loc 1 482 9 view .LVU2153
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5024              		.loc 1 483 9 view .LVU2154
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5025              		.loc 1 483 19 is_stmt 0 view .LVU2155
 5026 2585 4C8B4A08 		movq	8(%rdx), %r9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5027              		.loc 1 484 9 is_stmt 1 view .LVU2156
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5028              		.loc 1 484 42 is_stmt 0 view .LVU2157
 5029 2589 C4E29BF7 		shrx	%r12, (%rdx), %rcx
 5029      0A
 5030              	.LVL276:
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5031              		.loc 1 484 63 view .LVU2158
 5032 258e C44291F7 		shlx	%r13, %r9, %r8
 5032      C1
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5033              		.loc 1 484 52 view .LVU2159
 5034 2593 4C09C1   		orq	%r8, %rcx
 5035 2596 48890CFB 		movq	%rcx, (%rbx,%rdi,8)
 5036              	.LVL277:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5037              		.loc 1 485 9 is_stmt 1 view .LVU2160
 486:sieve_extend.c ****         copy_word += 2;
 5038              		.loc 1 486 9 view .LVU2161
 486:sieve_extend.c ****         copy_word += 2;
 5039              		.loc 1 486 42 is_stmt 0 view .LVU2162
 5040 259a C4C29BF7 		shrx	%r12, %r9, %rsi
 5040      F1
 5041 259f 4883C210 		addq	$16, %rdx
 486:sieve_extend.c ****         copy_word += 2;
 5042              		.loc 1 486 63 view .LVU2163
 5043 25a3 C46291F7 		shlx	%r13, (%rdx), %r10
 5043      12
 486:sieve_extend.c ****         copy_word += 2;
 5044              		.loc 1 486 52 view .LVU2164
 5045 25a8 4C09D6   		orq	%r10, %rsi
 5046 25ab 488974FB 		movq	%rsi, 8(%rbx,%rdi,8)
 5046      08
 5047              	.LVL278:
 487:sieve_extend.c ****         source_word += 2;
 5048              		.loc 1 487 9 is_stmt 1 view .LVU2165
 487:sieve_extend.c ****         source_word += 2;
 5049              		.loc 1 487 19 is_stmt 0 view .LVU2166
 5050 25b0 4883C702 		addq	$2, %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 155


 488:sieve_extend.c ****         distance += 2;
 5051              		.loc 1 488 9 is_stmt 1 view .LVU2167
 489:sieve_extend.c ****     }
 5052              		.loc 1 489 9 view .LVU2168
 489:sieve_extend.c ****     }
 5053              		.loc 1 489 9 is_stmt 0 view .LVU2169
 5054              	.LBE320:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5055              		.loc 1 481 11 is_stmt 1 view .LVU2170
 5056              	.LVL279:
 5057              	.L554:
 5058              	.LBB321:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5059              		.loc 1 482 9 view .LVU2171
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5060              		.loc 1 483 9 view .LVU2172
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5061              		.loc 1 483 19 is_stmt 0 view .LVU2173
 5062 25b4 4C8B4A08 		movq	8(%rdx), %r9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5063              		.loc 1 484 9 is_stmt 1 view .LVU2174
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5064              		.loc 1 484 42 is_stmt 0 view .LVU2175
 5065 25b8 C4E29BF7 		shrx	%r12, (%rdx), %rcx
 5065      0A
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5066              		.loc 1 484 63 view .LVU2176
 5067 25bd C44291F7 		shlx	%r13, %r9, %r8
 5067      C1
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5068              		.loc 1 484 52 view .LVU2177
 5069 25c2 4C09C1   		orq	%r8, %rcx
 5070 25c5 48890CFB 		movq	%rcx, (%rbx,%rdi,8)
 5071              	.LVL280:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5072              		.loc 1 485 9 is_stmt 1 view .LVU2178
 486:sieve_extend.c ****         copy_word += 2;
 5073              		.loc 1 486 9 view .LVU2179
 486:sieve_extend.c ****         copy_word += 2;
 5074              		.loc 1 486 42 is_stmt 0 view .LVU2180
 5075 25c9 C4C29BF7 		shrx	%r12, %r9, %rsi
 5075      F1
 5076 25ce 4883C210 		addq	$16, %rdx
 486:sieve_extend.c ****         copy_word += 2;
 5077              		.loc 1 486 63 view .LVU2181
 5078 25d2 C46291F7 		shlx	%r13, (%rdx), %r10
 5078      12
 486:sieve_extend.c ****         copy_word += 2;
 5079              		.loc 1 486 52 view .LVU2182
 5080 25d7 4C09D6   		orq	%r10, %rsi
 5081 25da 488974FB 		movq	%rsi, 8(%rbx,%rdi,8)
 5081      08
 5082              	.LVL281:
 487:sieve_extend.c ****         source_word += 2;
 5083              		.loc 1 487 9 is_stmt 1 view .LVU2183
 487:sieve_extend.c ****         source_word += 2;
 5084              		.loc 1 487 19 is_stmt 0 view .LVU2184
GAS LISTING /tmp/ccmX4xFB.s 			page 156


 5085 25df 4883C702 		addq	$2, %rdi
 488:sieve_extend.c ****         distance += 2;
 5086              		.loc 1 488 9 is_stmt 1 view .LVU2185
 489:sieve_extend.c ****     }
 5087              		.loc 1 489 9 view .LVU2186
 5088 25e3 4D8D143B 		leaq	(%r11,%rdi), %r10
 489:sieve_extend.c ****     }
 5089              		.loc 1 489 9 is_stmt 0 view .LVU2187
 5090              	.LBE321:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5091              		.loc 1 481 11 is_stmt 1 view .LVU2188
 5092 25e7 48397C24 		cmpq	%rdi, 72(%rsp)
 5092      48
 5093 25ec 0F862FF4 		jbe	.L380
 5093      FFFF
 5094              	.LVL282:
 5095              	.L379:
 5096              	.LBB322:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5097              		.loc 1 482 9 view .LVU2189
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5098              		.loc 1 483 9 view .LVU2190
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5099              		.loc 1 483 19 is_stmt 0 view .LVU2191
 5100 25f2 4C8B4A08 		movq	8(%rdx), %r9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5101              		.loc 1 484 9 is_stmt 1 view .LVU2192
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5102              		.loc 1 484 42 is_stmt 0 view .LVU2193
 5103 25f6 C4629BF7 		shrx	%r12, (%rdx), %r8
 5103      02
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5104              		.loc 1 484 63 view .LVU2194
 5105 25fb C4C291F7 		shlx	%r13, %r9, %rcx
 5105      C9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5106              		.loc 1 484 52 view .LVU2195
 5107 2600 4909C8   		orq	%rcx, %r8
 5108 2603 4C8904FB 		movq	%r8, (%rbx,%rdi,8)
 5109              	.LVL283:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5110              		.loc 1 485 9 is_stmt 1 view .LVU2196
 486:sieve_extend.c ****         copy_word += 2;
 5111              		.loc 1 486 9 view .LVU2197
 486:sieve_extend.c ****         copy_word += 2;
 5112              		.loc 1 486 42 is_stmt 0 view .LVU2198
 5113 2607 C4429BF7 		shrx	%r12, %r9, %r10
 5113      D1
 487:sieve_extend.c ****         source_word += 2;
 5114              		.loc 1 487 19 view .LVU2199
 5115 260c 4C8D4F02 		leaq	2(%rdi), %r9
 486:sieve_extend.c ****         copy_word += 2;
 5116              		.loc 1 486 63 view .LVU2200
 5117 2610 C4E291F7 		shlx	%r13, 16(%rdx), %rsi
 5117      7210
 486:sieve_extend.c ****         copy_word += 2;
 5118              		.loc 1 486 52 view .LVU2201
GAS LISTING /tmp/ccmX4xFB.s 			page 157


 5119 2616 4C09D6   		orq	%r10, %rsi
 5120 2619 488974FB 		movq	%rsi, 8(%rbx,%rdi,8)
 5120      08
 5121              	.LVL284:
 487:sieve_extend.c ****         source_word += 2;
 5122              		.loc 1 487 9 is_stmt 1 view .LVU2202
 488:sieve_extend.c ****         distance += 2;
 5123              		.loc 1 488 9 view .LVU2203
 489:sieve_extend.c ****     }
 5124              		.loc 1 489 9 view .LVU2204
 489:sieve_extend.c ****     }
 5125              		.loc 1 489 9 is_stmt 0 view .LVU2205
 5126              	.LBE322:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5127              		.loc 1 481 11 is_stmt 1 view .LVU2206
 5128              	.LBB323:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5129              		.loc 1 482 9 view .LVU2207
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5130              		.loc 1 483 9 view .LVU2208
 5131 261e 4883C240 		addq	$64, %rdx
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5132              		.loc 1 483 19 is_stmt 0 view .LVU2209
 5133 2622 4C8B42D8 		movq	-40(%rdx), %r8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5134              		.loc 1 484 9 is_stmt 1 view .LVU2210
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5135              		.loc 1 484 42 is_stmt 0 view .LVU2211
 5136 2626 C4E29BF7 		shrx	%r12, -48(%rdx), %rcx
 5136      4AD0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5137              		.loc 1 484 63 view .LVU2212
 5138 262c C4C291F7 		shlx	%r13, %r8, %rsi
 5138      F0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5139              		.loc 1 484 52 view .LVU2213
 5140 2631 4809F1   		orq	%rsi, %rcx
 5141 2634 4A890CCB 		movq	%rcx, (%rbx,%r9,8)
 5142              	.LVL285:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5143              		.loc 1 485 9 is_stmt 1 view .LVU2214
 486:sieve_extend.c ****         copy_word += 2;
 5144              		.loc 1 486 9 view .LVU2215
 486:sieve_extend.c ****         copy_word += 2;
 5145              		.loc 1 486 42 is_stmt 0 view .LVU2216
 5146 2638 C4429BF7 		shrx	%r12, %r8, %r8
 5146      C0
 486:sieve_extend.c ****         copy_word += 2;
 5147              		.loc 1 486 63 view .LVU2217
 5148 263d 4C8B52E0 		movq	-32(%rdx), %r10
 5149 2641 C4C291F7 		shlx	%r13, %r10, %rcx
 5149      CA
 486:sieve_extend.c ****         copy_word += 2;
 5150              		.loc 1 486 52 view .LVU2218
 5151 2646 4909C8   		orq	%rcx, %r8
 5152 2649 4E8944CB 		movq	%r8, 8(%rbx,%r9,8)
 5152      08
GAS LISTING /tmp/ccmX4xFB.s 			page 158


 5153              	.LVL286:
 487:sieve_extend.c ****         source_word += 2;
 5154              		.loc 1 487 9 is_stmt 1 view .LVU2219
 487:sieve_extend.c ****         source_word += 2;
 5155              		.loc 1 487 19 is_stmt 0 view .LVU2220
 5156 264e 4C8D4F04 		leaq	4(%rdi), %r9
 488:sieve_extend.c ****         distance += 2;
 5157              		.loc 1 488 9 is_stmt 1 view .LVU2221
 489:sieve_extend.c ****     }
 5158              		.loc 1 489 9 view .LVU2222
 489:sieve_extend.c ****     }
 5159              		.loc 1 489 9 is_stmt 0 view .LVU2223
 5160              	.LBE323:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5161              		.loc 1 481 11 is_stmt 1 view .LVU2224
 5162              	.LBB324:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5163              		.loc 1 482 9 view .LVU2225
 5164              	.LVL287:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5165              		.loc 1 483 9 view .LVU2226
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5166              		.loc 1 483 19 is_stmt 0 view .LVU2227
 5167 2652 488B72E8 		movq	-24(%rdx), %rsi
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5168              		.loc 1 484 9 is_stmt 1 view .LVU2228
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5169              		.loc 1 484 42 is_stmt 0 view .LVU2229
 5170 2656 C4E29BF7 		shrx	%r12, -32(%rdx), %rcx
 5170      4AE0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5171              		.loc 1 484 63 view .LVU2230
 5172 265c C46291F7 		shlx	%r13, %rsi, %r10
 5172      D6
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5173              		.loc 1 484 52 view .LVU2231
 5174 2661 4C09D1   		orq	%r10, %rcx
 5175 2664 4A890CCB 		movq	%rcx, (%rbx,%r9,8)
 5176              	.LVL288:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5177              		.loc 1 485 9 is_stmt 1 view .LVU2232
 486:sieve_extend.c ****         copy_word += 2;
 5178              		.loc 1 486 9 view .LVU2233
 486:sieve_extend.c ****         copy_word += 2;
 5179              		.loc 1 486 42 is_stmt 0 view .LVU2234
 5180 2668 C4E29BF7 		shrx	%r12, %rsi, %rsi
 5180      F6
 486:sieve_extend.c ****         copy_word += 2;
 5181              		.loc 1 486 63 view .LVU2235
 5182 266d 4C8B42F0 		movq	-16(%rdx), %r8
 5183 2671 C4C291F7 		shlx	%r13, %r8, %rcx
 5183      C8
 486:sieve_extend.c ****         copy_word += 2;
 5184              		.loc 1 486 52 view .LVU2236
 5185 2676 4809CE   		orq	%rcx, %rsi
 5186 2679 4A8974CB 		movq	%rsi, 8(%rbx,%r9,8)
 5186      08
GAS LISTING /tmp/ccmX4xFB.s 			page 159


 5187              	.LVL289:
 487:sieve_extend.c ****         source_word += 2;
 5188              		.loc 1 487 9 is_stmt 1 view .LVU2237
 487:sieve_extend.c ****         source_word += 2;
 5189              		.loc 1 487 19 is_stmt 0 view .LVU2238
 5190 267e 4C8D4F06 		leaq	6(%rdi), %r9
 488:sieve_extend.c ****         distance += 2;
 5191              		.loc 1 488 9 is_stmt 1 view .LVU2239
 489:sieve_extend.c ****     }
 5192              		.loc 1 489 9 view .LVU2240
 489:sieve_extend.c ****     }
 5193              		.loc 1 489 9 is_stmt 0 view .LVU2241
 5194              	.LBE324:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5195              		.loc 1 481 11 is_stmt 1 view .LVU2242
 5196              	.LBB325:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5197              		.loc 1 482 9 view .LVU2243
 5198              	.LVL290:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5199              		.loc 1 483 9 view .LVU2244
 487:sieve_extend.c ****         source_word += 2;
 5200              		.loc 1 487 19 is_stmt 0 view .LVU2245
 5201 2682 4883C708 		addq	$8, %rdi
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5202              		.loc 1 483 19 view .LVU2246
 5203 2686 4C8B42F8 		movq	-8(%rdx), %r8
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5204              		.loc 1 484 9 is_stmt 1 view .LVU2247
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5205              		.loc 1 484 42 is_stmt 0 view .LVU2248
 5206 268a C4E29BF7 		shrx	%r12, -16(%rdx), %rcx
 5206      4AF0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5207              		.loc 1 484 63 view .LVU2249
 5208 2690 C44291F7 		shlx	%r13, %r8, %r10
 5208      D0
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5209              		.loc 1 484 52 view .LVU2250
 5210 2695 4C09D1   		orq	%r10, %rcx
 5211 2698 4A890CCB 		movq	%rcx, (%rbx,%r9,8)
 5212              	.LVL291:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5213              		.loc 1 485 9 is_stmt 1 view .LVU2251
 486:sieve_extend.c ****         copy_word += 2;
 5214              		.loc 1 486 9 view .LVU2252
 486:sieve_extend.c ****         copy_word += 2;
 5215              		.loc 1 486 42 is_stmt 0 view .LVU2253
 5216 269c C4429BF7 		shrx	%r12, %r8, %r8
 5216      C0
 5217 26a1 4D8D143B 		leaq	(%r11,%rdi), %r10
 486:sieve_extend.c ****         copy_word += 2;
 5218              		.loc 1 486 63 view .LVU2254
 5219 26a5 488B32   		movq	(%rdx), %rsi
 5220 26a8 C4E291F7 		shlx	%r13, %rsi, %rcx
 5220      CE
 486:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccmX4xFB.s 			page 160


 5221              		.loc 1 486 52 view .LVU2255
 5222 26ad 4909C8   		orq	%rcx, %r8
 5223 26b0 4E8944CB 		movq	%r8, 8(%rbx,%r9,8)
 5223      08
 5224              	.LVL292:
 487:sieve_extend.c ****         source_word += 2;
 5225              		.loc 1 487 9 is_stmt 1 view .LVU2256
 488:sieve_extend.c ****         distance += 2;
 5226              		.loc 1 488 9 view .LVU2257
 489:sieve_extend.c ****     }
 5227              		.loc 1 489 9 view .LVU2258
 489:sieve_extend.c ****     }
 5228              		.loc 1 489 9 is_stmt 0 view .LVU2259
 5229              	.LBE325:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5230              		.loc 1 481 11 is_stmt 1 view .LVU2260
 5231 26b5 48397C24 		cmpq	%rdi, 72(%rsp)
 5231      48
 5232 26ba 0F8732FF 		ja	.L379
 5232      FFFF
 5233 26c0 E95CF3FF 		jmp	.L380
 5233      FF
 5234              	.L628:
 5235              	.LBB326:
 482:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5236              		.loc 1 482 9 view .LVU2261
 5237              	.LVL293:
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5238              		.loc 1 483 9 view .LVU2262
 483:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5239              		.loc 1 483 19 is_stmt 0 view .LVU2263
 5240 26c5 4C8B4A08 		movq	8(%rdx), %r9
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5241              		.loc 1 484 9 is_stmt 1 view .LVU2264
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5242              		.loc 1 484 42 is_stmt 0 view .LVU2265
 5243 26c9 C4629BF7 		shrx	%r12, (%rdx), %r10
 5243      12
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5244              		.loc 1 484 63 view .LVU2266
 5245 26ce C44291F7 		shlx	%r13, %r9, %r8
 5245      C1
 484:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5246              		.loc 1 484 52 view .LVU2267
 5247 26d3 4D09C2   		orq	%r8, %r10
 5248 26d6 4C8914FB 		movq	%r10, (%rbx,%rdi,8)
 5249              	.LVL294:
 485:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5250              		.loc 1 485 9 is_stmt 1 view .LVU2268
 486:sieve_extend.c ****         copy_word += 2;
 5251              		.loc 1 486 9 view .LVU2269
 486:sieve_extend.c ****         copy_word += 2;
 5252              		.loc 1 486 42 is_stmt 0 view .LVU2270
 5253 26da C4C29BF7 		shrx	%r12, %r9, %rsi
 5253      F1
 486:sieve_extend.c ****         copy_word += 2;
 5254              		.loc 1 486 63 view .LVU2271
GAS LISTING /tmp/ccmX4xFB.s 			page 161


 5255 26df 488B5210 		movq	16(%rdx), %rdx
 5256 26e3 C46291F7 		shlx	%r13, %rdx, %r10
 5256      D2
 486:sieve_extend.c ****         copy_word += 2;
 5257              		.loc 1 486 52 view .LVU2272
 5258 26e8 4909F2   		orq	%rsi, %r10
 5259 26eb 4C8954FB 		movq	%r10, 8(%rbx,%rdi,8)
 5259      08
 5260              	.LVL295:
 487:sieve_extend.c ****         source_word += 2;
 5261              		.loc 1 487 9 is_stmt 1 view .LVU2273
 5262 26f0 488D5120 		leaq	32(%rcx), %rdx
 487:sieve_extend.c ****         source_word += 2;
 5263              		.loc 1 487 19 is_stmt 0 view .LVU2274
 5264 26f4 488D7804 		leaq	4(%rax), %rdi
 488:sieve_extend.c ****         distance += 2;
 5265              		.loc 1 488 9 is_stmt 1 view .LVU2275
 489:sieve_extend.c ****     }
 5266              		.loc 1 489 9 view .LVU2276
 489:sieve_extend.c ****     }
 5267              		.loc 1 489 9 is_stmt 0 view .LVU2277
 5268              	.LBE326:
 481:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5269              		.loc 1 481 11 is_stmt 1 view .LVU2278
 5270 26f8 E988FEFF 		jmp	.L555
 5270      FF
 5271              	.LBE331:
 5272              	.LBE386:
 5273              		.cfi_endproc
 5274              	.LFE70:
 5276              		.section	.rodata.str1.1,"aMS",@progbits,1
 5277              	.LC0:
 5278 0000 25336A75 		.string	"%3ju "
 5278      2000
 5279              	.LC1:
 5280 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 5280      6E642025 
 5280      6A752070 
 5280      72696D65 
 5280      7320756E 
 5281              		.text
 5282 26fd 0F1F00   		.p2align 4
 5284              	show_primes.isra.0:
 5285              	.LVL296:
 5286              	.LFB87:
 813:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 5287              		.loc 1 813 13 view -0
 5288              		.cfi_startproc
 5289              	.LBB387:
 815:sieve_extend.c ****         primeCount++;
 5290              		.loc 1 815 30 view .LVU2280
 5291              	.LBE387:
 813:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 5292              		.loc 1 813 13 is_stmt 0 view .LVU2281
 5293 2700 4157     		pushq	%r15
 5294              		.cfi_def_cfa_offset 16
 5295              		.cfi_offset 15, -16
GAS LISTING /tmp/ccmX4xFB.s 			page 162


 5296 2702 4156     		pushq	%r14
 5297              		.cfi_def_cfa_offset 24
 5298              		.cfi_offset 14, -24
 5299 2704 4155     		pushq	%r13
 5300              		.cfi_def_cfa_offset 32
 5301              		.cfi_offset 13, -32
 5302 2706 4154     		pushq	%r12
 5303              		.cfi_def_cfa_offset 40
 5304              		.cfi_offset 12, -40
 5305 2708 55       		pushq	%rbp
 5306              		.cfi_def_cfa_offset 48
 5307              		.cfi_offset 6, -48
 5308 2709 4889F5   		movq	%rsi, %rbp
 5309 270c 53       		pushq	%rbx
 5310              		.cfi_def_cfa_offset 56
 5311              		.cfi_offset 3, -56
 5312 270d 4883EC08 		subq	$8, %rsp
 5313              		.cfi_def_cfa_offset 64
 5314              	.LBB404:
 815:sieve_extend.c ****         primeCount++;
 5315              		.loc 1 815 44 view .LVU2282
 5316 2711 488B36   		movq	(%rsi), %rsi
 815:sieve_extend.c ****         primeCount++;
 5317              		.loc 1 815 5 view .LVU2283
 5318 2714 4883FE01 		cmpq	$1, %rsi
 5319 2718 0F867601 		jbe	.L636
 5319      0000
 817:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5320              		.loc 1 817 31 view .LVU2284
 5321 271e 48D1EA   		shrq	%rdx
 5322              	.LVL297:
 817:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5323              		.loc 1 817 31 view .LVU2285
 5324 2721 4989FC   		movq	%rdi, %r12
 5325 2724 4989D7   		movq	%rdx, %r15
 815:sieve_extend.c ****         primeCount++;
 5326              		.loc 1 815 20 view .LVU2286
 5327 2727 BB010000 		movl	$1, %ebx
 5327      00
 5328              	.LBE404:
 814:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse_safe(sieve->bitarray, fa
 5329              		.loc 1 814 15 view .LVU2287
 5330 272c 41BE0100 		movl	$1, %r14d
 5330      0000
 5331              	.LBB405:
 5332              	.LBB388:
 5333              	.LBB389:
 5334              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccmX4xFB.s 			page 163


  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccmX4xFB.s 			page 164


  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 5335              		.loc 3 107 10 view .LVU2288
 5336 2732 49BDCDCC 		movabsq	$-3689348814741910323, %r13
 5336      CCCCCCCC 
 5336      CCCC
 5337              	.LVL298:
 5338 273c 0F1F4000 		.p2align 4,,10
 5339              		.p2align 3
 5340              	.L635:
 5341              		.loc 3 107 10 view .LVU2289
 5342              	.LBE389:
 5343              	.LBE388:
 816:sieve_extend.c ****         if (factor < maxFactor/2) {
 5344              		.loc 1 816 9 is_stmt 1 view .LVU2290
 816:sieve_extend.c ****         if (factor < maxFactor/2) {
 5345              		.loc 1 816 19 is_stmt 0 view .LVU2291
 5346 2740 49FFC6   		incq	%r14
GAS LISTING /tmp/ccmX4xFB.s 			page 165


 5347              	.LVL299:
 817:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5348              		.loc 1 817 9 is_stmt 1 view .LVU2292
 817:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5349              		.loc 1 817 12 is_stmt 0 view .LVU2293
 5350 2743 4939DF   		cmpq	%rbx, %r15
 5351 2746 0F87FC00 		ja	.L659
 5351      0000
 5352              	.L631:
 815:sieve_extend.c ****         primeCount++;
 5353              		.loc 1 815 52 is_stmt 1 view .LVU2294
 5354              	.LVL300:
 815:sieve_extend.c ****         primeCount++;
 5355              		.loc 1 815 61 is_stmt 0 view .LVU2295
 5356 274c 4D8B0424 		movq	(%r12), %r8
 5357 2750 48FFC3   		incq	%rbx
 5358              	.LVL301:
 5359              	.L658:
 5360              	.LBB394:
 5361              	.LBI394:
 116:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 5362              		.loc 1 116 25 is_stmt 1 view .LVU2296
 5363              	.LBB395:
 117:sieve_extend.c ****     return index;
 5364              		.loc 1 117 5 view .LVU2297
 117:sieve_extend.c ****     return index;
 5365              		.loc 1 117 11 view .LVU2298
 117:sieve_extend.c ****     return index;
 5366              		.loc 1 117 21 is_stmt 0 view .LVU2299
 5367 2753 4889D9   		movq	%rbx, %rcx
 5368 2756 48C1E906 		shrq	$6, %rcx
 117:sieve_extend.c ****     return index;
 5369              		.loc 1 117 12 view .LVU2300
 5370 275a 4D8B0CC8 		movq	(%r8,%rcx,8), %r9
 117:sieve_extend.c ****     return index;
 5371              		.loc 1 117 11 view .LVU2301
 5372 275e 490FA3D9 		btq	%rbx, %r9
 5373 2762 0F83A800 		jnc	.L633
 5373      0000
 117:sieve_extend.c ****     return index;
 5374              		.loc 1 117 58 is_stmt 1 view .LVU2302
 117:sieve_extend.c ****     return index;
 5375              		.loc 1 117 63 is_stmt 0 view .LVU2303
 5376 2768 4C8D5301 		leaq	1(%rbx), %r10
 5377              	.LVL302:
 117:sieve_extend.c ****     return index;
 5378              		.loc 1 117 21 view .LVU2304
 5379 276c 4D89D3   		movq	%r10, %r11
 5380 276f 49C1EB06 		shrq	$6, %r11
 117:sieve_extend.c ****     return index;
 5381              		.loc 1 117 12 view .LVU2305
 5382 2773 4B8B04D8 		movq	(%r8,%r11,8), %rax
 117:sieve_extend.c ****     return index;
 5383              		.loc 1 117 63 view .LVU2306
 5384 2777 4C89D3   		movq	%r10, %rbx
 117:sieve_extend.c ****     return index;
 5385              		.loc 1 117 11 is_stmt 1 view .LVU2307
GAS LISTING /tmp/ccmX4xFB.s 			page 166


 5386 277a 4C0FA3D0 		btq	%r10, %rax
 5387 277e 0F838C00 		jnc	.L633
 5387      0000
 117:sieve_extend.c ****     return index;
 5388              		.loc 1 117 58 view .LVU2308
 5389              	.LVL303:
 117:sieve_extend.c ****     return index;
 5390              		.loc 1 117 63 is_stmt 0 view .LVU2309
 5391 2784 48FFC3   		incq	%rbx
 5392              	.LVL304:
 117:sieve_extend.c ****     return index;
 5393              		.loc 1 117 11 is_stmt 1 view .LVU2310
 117:sieve_extend.c ****     return index;
 5394              		.loc 1 117 21 is_stmt 0 view .LVU2311
 5395 2787 4889DA   		movq	%rbx, %rdx
 5396 278a 48C1EA06 		shrq	$6, %rdx
 117:sieve_extend.c ****     return index;
 5397              		.loc 1 117 12 view .LVU2312
 5398 278e 498B3CD0 		movq	(%r8,%rdx,8), %rdi
 117:sieve_extend.c ****     return index;
 5399              		.loc 1 117 11 view .LVU2313
 5400 2792 480FA3DF 		btq	%rbx, %rdi
 5401 2796 7378     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5402              		.loc 1 117 58 is_stmt 1 view .LVU2314
 5403              	.LVL305:
 117:sieve_extend.c ****     return index;
 5404              		.loc 1 117 63 is_stmt 0 view .LVU2315
 5405 2798 498D5A02 		leaq	2(%r10), %rbx
 5406              	.LVL306:
 117:sieve_extend.c ****     return index;
 5407              		.loc 1 117 11 is_stmt 1 view .LVU2316
 117:sieve_extend.c ****     return index;
 5408              		.loc 1 117 21 is_stmt 0 view .LVU2317
 5409 279c 4889D9   		movq	%rbx, %rcx
 5410 279f 48C1E906 		shrq	$6, %rcx
 117:sieve_extend.c ****     return index;
 5411              		.loc 1 117 12 view .LVU2318
 5412 27a3 4D8B0CC8 		movq	(%r8,%rcx,8), %r9
 117:sieve_extend.c ****     return index;
 5413              		.loc 1 117 11 view .LVU2319
 5414 27a7 490FA3D9 		btq	%rbx, %r9
 5415 27ab 7363     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5416              		.loc 1 117 58 is_stmt 1 view .LVU2320
 5417              	.LVL307:
 117:sieve_extend.c ****     return index;
 5418              		.loc 1 117 63 is_stmt 0 view .LVU2321
 5419 27ad 498D5A03 		leaq	3(%r10), %rbx
 5420              	.LVL308:
 117:sieve_extend.c ****     return index;
 5421              		.loc 1 117 11 is_stmt 1 view .LVU2322
 117:sieve_extend.c ****     return index;
 5422              		.loc 1 117 21 is_stmt 0 view .LVU2323
 5423 27b1 4989DB   		movq	%rbx, %r11
 5424 27b4 49C1EB06 		shrq	$6, %r11
 117:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 167


 5425              		.loc 1 117 12 view .LVU2324
 5426 27b8 4B8B04D8 		movq	(%r8,%r11,8), %rax
 117:sieve_extend.c ****     return index;
 5427              		.loc 1 117 11 view .LVU2325
 5428 27bc 480FA3D8 		btq	%rbx, %rax
 5429 27c0 734E     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5430              		.loc 1 117 58 is_stmt 1 view .LVU2326
 5431              	.LVL309:
 117:sieve_extend.c ****     return index;
 5432              		.loc 1 117 63 is_stmt 0 view .LVU2327
 5433 27c2 498D5A04 		leaq	4(%r10), %rbx
 5434              	.LVL310:
 117:sieve_extend.c ****     return index;
 5435              		.loc 1 117 11 is_stmt 1 view .LVU2328
 117:sieve_extend.c ****     return index;
 5436              		.loc 1 117 21 is_stmt 0 view .LVU2329
 5437 27c6 4889DA   		movq	%rbx, %rdx
 5438 27c9 48C1EA06 		shrq	$6, %rdx
 117:sieve_extend.c ****     return index;
 5439              		.loc 1 117 12 view .LVU2330
 5440 27cd 498B3CD0 		movq	(%r8,%rdx,8), %rdi
 117:sieve_extend.c ****     return index;
 5441              		.loc 1 117 11 view .LVU2331
 5442 27d1 480FA3DF 		btq	%rbx, %rdi
 5443 27d5 7339     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5444              		.loc 1 117 58 is_stmt 1 view .LVU2332
 5445              	.LVL311:
 117:sieve_extend.c ****     return index;
 5446              		.loc 1 117 63 is_stmt 0 view .LVU2333
 5447 27d7 498D5A05 		leaq	5(%r10), %rbx
 5448              	.LVL312:
 117:sieve_extend.c ****     return index;
 5449              		.loc 1 117 11 is_stmt 1 view .LVU2334
 117:sieve_extend.c ****     return index;
 5450              		.loc 1 117 21 is_stmt 0 view .LVU2335
 5451 27db 4889D9   		movq	%rbx, %rcx
 5452 27de 48C1E906 		shrq	$6, %rcx
 117:sieve_extend.c ****     return index;
 5453              		.loc 1 117 12 view .LVU2336
 5454 27e2 4D8B0CC8 		movq	(%r8,%rcx,8), %r9
 117:sieve_extend.c ****     return index;
 5455              		.loc 1 117 11 view .LVU2337
 5456 27e6 490FA3D9 		btq	%rbx, %r9
 5457 27ea 7324     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5458              		.loc 1 117 58 is_stmt 1 view .LVU2338
 5459              	.LVL313:
 117:sieve_extend.c ****     return index;
 5460              		.loc 1 117 63 is_stmt 0 view .LVU2339
 5461 27ec 498D5A06 		leaq	6(%r10), %rbx
 5462              	.LVL314:
 117:sieve_extend.c ****     return index;
 5463              		.loc 1 117 11 is_stmt 1 view .LVU2340
 117:sieve_extend.c ****     return index;
 5464              		.loc 1 117 21 is_stmt 0 view .LVU2341
GAS LISTING /tmp/ccmX4xFB.s 			page 168


 5465 27f0 4989DB   		movq	%rbx, %r11
 5466 27f3 49C1EB06 		shrq	$6, %r11
 117:sieve_extend.c ****     return index;
 5467              		.loc 1 117 12 view .LVU2342
 5468 27f7 4B8B04D8 		movq	(%r8,%r11,8), %rax
 117:sieve_extend.c ****     return index;
 5469              		.loc 1 117 11 view .LVU2343
 5470 27fb 480FA3D8 		btq	%rbx, %rax
 5471 27ff 730F     		jnc	.L633
 117:sieve_extend.c ****     return index;
 5472              		.loc 1 117 58 is_stmt 1 view .LVU2344
 5473              	.LVL315:
 117:sieve_extend.c ****     return index;
 5474              		.loc 1 117 63 is_stmt 0 view .LVU2345
 5475 2801 498D5A07 		leaq	7(%r10), %rbx
 5476              	.LVL316:
 117:sieve_extend.c ****     return index;
 5477              		.loc 1 117 11 is_stmt 1 view .LVU2346
 5478 2805 E949FFFF 		jmp	.L658
 5478      FF
 5479 280a 660F1F44 		.p2align 4,,10
 5479      0000
 5480              		.p2align 3
 5481              	.L633:
 5482              	.LVL317:
 117:sieve_extend.c ****     return index;
 5483              		.loc 1 117 11 is_stmt 0 view .LVU2347
 5484              	.LBE395:
 5485              	.LBE394:
 815:sieve_extend.c ****         primeCount++;
 5486              		.loc 1 815 30 is_stmt 1 view .LVU2348
 815:sieve_extend.c ****         primeCount++;
 5487              		.loc 1 815 5 is_stmt 0 view .LVU2349
 5488 2810 4839F3   		cmpq	%rsi, %rbx
 5489 2813 0F8227FF 		jb	.L635
 5489      FFFF
 5490              	.LVL318:
 5491              	.L630:
 815:sieve_extend.c ****         primeCount++;
 5492              		.loc 1 815 5 view .LVU2350
 5493              	.LBE405:
 822:sieve_extend.c **** }
 5494              		.loc 1 822 5 is_stmt 1 view .LVU2351
 5495              	.LBB406:
 5496              	.LBI406:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5497              		.loc 3 105 1 view .LVU2352
 5498              	.LBB407:
 5499              		.loc 3 107 3 view .LVU2353
 5500              	.LBE407:
 5501              	.LBE406:
 823:sieve_extend.c **** 
 5502              		.loc 1 823 1 is_stmt 0 view .LVU2354
 5503 2819 4883C408 		addq	$8, %rsp
 5504              		.cfi_remember_state
 5505              		.cfi_def_cfa_offset 56
 5506 281d 5B       		popq	%rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 169


 5507              		.cfi_def_cfa_offset 48
 5508 281e 5D       		popq	%rbp
 5509              		.cfi_def_cfa_offset 40
 5510 281f 415C     		popq	%r12
 5511              		.cfi_def_cfa_offset 32
 5512 2821 415D     		popq	%r13
 5513              		.cfi_def_cfa_offset 24
 5514              	.LBB411:
 5515              	.LBB408:
 5516              		.loc 3 107 10 view .LVU2355
 5517 2823 4C89F2   		movq	%r14, %rdx
 5518              	.LBE408:
 5519              	.LBE411:
 823:sieve_extend.c **** 
 5520              		.loc 1 823 1 view .LVU2356
 5521 2826 415E     		popq	%r14
 5522              		.cfi_def_cfa_offset 16
 822:sieve_extend.c **** }
 5523              		.loc 1 822 5 view .LVU2357
 5524 2828 488D4C36 		leaq	1(%rsi,%rsi), %rcx
 5524      01
 5525              	.LBB412:
 5526              	.LBB409:
 5527              		.loc 3 107 10 view .LVU2358
 5528 282d BF010000 		movl	$1, %edi
 5528      00
 5529 2832 488D3500 		leaq	.LC1(%rip), %rsi
 5529      000000
 5530 2839 31C0     		xorl	%eax, %eax
 5531              	.LBE409:
 5532              	.LBE412:
 823:sieve_extend.c **** 
 5533              		.loc 1 823 1 view .LVU2359
 5534 283b 415F     		popq	%r15
 5535              		.cfi_def_cfa_offset 8
 5536              	.LBB413:
 5537              	.LBB410:
 5538              		.loc 3 107 10 view .LVU2360
 5539 283d E9000000 		jmp	__printf_chk@PLT
 5539      00
 5540              	.LVL319:
 5541              		.p2align 4,,10
 5542 2842 660F1F44 		.p2align 3
 5542      0000
 5543              	.L659:
 5544              		.cfi_restore_state
 5545              		.loc 3 107 10 view .LVU2361
 5546              	.LBE410:
 5547              	.LBE413:
 5548              	.LBB414:
 818:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5549              		.loc 1 818 13 is_stmt 1 view .LVU2362
 5550              	.LBB396:
 5551              	.LBI388:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5552              		.loc 3 105 1 view .LVU2363
 5553              	.LBB390:
GAS LISTING /tmp/ccmX4xFB.s 			page 170


 5554              		.loc 3 107 3 view .LVU2364
 5555              	.LBE390:
 5556              	.LBE396:
 818:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5557              		.loc 1 818 13 is_stmt 0 view .LVU2365
 5558 2848 488D541B 		leaq	1(%rbx,%rbx), %rdx
 5558      01
 5559              	.LBB397:
 5560              	.LBB391:
 5561              		.loc 3 107 10 view .LVU2366
 5562 284d BF010000 		movl	$1, %edi
 5562      00
 5563 2852 488D3500 		leaq	.LC0(%rip), %rsi
 5563      000000
 5564 2859 31C0     		xorl	%eax, %eax
 5565 285b E8000000 		call	__printf_chk@PLT
 5565      00
 5566              	.LVL320:
 5567              		.loc 3 107 10 view .LVU2367
 5568              	.LBE391:
 5569              	.LBE397:
 819:sieve_extend.c ****         }
 5570              		.loc 1 819 13 is_stmt 1 view .LVU2368
 5571              	.LBB398:
 5572              	.LBB392:
 5573              		.loc 3 107 10 is_stmt 0 view .LVU2369
 5574 2860 4C89F0   		movq	%r14, %rax
 5575 2863 490FAFC5 		imulq	%r13, %rax
 5576              	.LBE392:
 5577              	.LBE398:
 819:sieve_extend.c ****         }
 5578              		.loc 1 819 16 view .LVU2370
 5579 2867 48BF9999 		movabsq	$1844674407370955161, %rdi
 5579      99999999 
 5579      9919
 5580              	.LBB399:
 5581              	.LBB393:
 5582              		.loc 3 107 10 view .LVU2371
 5583 2871 C4E3FBF0 		rorx	$1, %rax, %rdx
 5583      D001
 5584              	.LBE393:
 5585              	.LBE399:
 819:sieve_extend.c ****         }
 5586              		.loc 1 819 16 view .LVU2372
 5587 2877 4839FA   		cmpq	%rdi, %rdx
 5588 287a 760C     		jbe	.L632
 5589              	.L657:
 5590 287c 488B7500 		movq	0(%rbp), %rsi
 5591              	.LBB400:
 5592              	.LBB401:
 5593              		.loc 3 107 10 view .LVU2373
 5594 2880 E9C7FEFF 		jmp	.L631
 5594      FF
 5595              		.p2align 4,,10
 5596 2885 0F1F00   		.p2align 3
 5597              	.L632:
 5598              	.LBE401:
GAS LISTING /tmp/ccmX4xFB.s 			page 171


 5599              	.LBE400:
 819:sieve_extend.c ****         }
 5600              		.loc 1 819 39 is_stmt 1 view .LVU2374
 5601              	.LVL321:
 5602              	.LBB403:
 5603              	.LBI400:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5604              		.loc 3 105 1 view .LVU2375
 5605              	.LBB402:
 5606              		.loc 3 107 3 view .LVU2376
 5607              		.loc 3 107 10 is_stmt 0 view .LVU2377
 5608 2888 BF0A0000 		movl	$10, %edi
 5608      00
 5609 288d E8000000 		call	putchar@PLT
 5609      00
 5610              	.LVL322:
 5611 2892 EBE8     		jmp	.L657
 5612              	.LVL323:
 5613              	.L636:
 5614              		.loc 3 107 10 view .LVU2378
 5615              	.LBE402:
 5616              	.LBE403:
 5617              	.LBE414:
 814:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse_safe(sieve->bitarray, fa
 5618              		.loc 1 814 15 view .LVU2379
 5619 2894 41BE0100 		movl	$1, %r14d
 5619      0000
 5620 289a E97AFFFF 		jmp	.L630
 5620      FF
 5621              		.cfi_endproc
 5622              	.LFE87:
 5624 289f 90       		.p2align 4
 5626              	sieve:
 5627              	.LVL324:
 5628              	.LFB74:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 5629              		.loc 1 789 86 is_stmt 1 view -0
 5630              		.cfi_startproc
 790:sieve_extend.c ****     counter_t prime         = 0;
 5631              		.loc 1 790 5 view .LVU2381
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 5632              		.loc 1 789 86 is_stmt 0 view .LVU2382
 5633 28a0 4157     		pushq	%r15
 5634              		.cfi_def_cfa_offset 16
 5635              		.cfi_offset 15, -16
 5636 28a2 4156     		pushq	%r14
 5637              		.cfi_def_cfa_offset 24
 5638              		.cfi_offset 14, -24
 5639 28a4 4155     		pushq	%r13
 5640              		.cfi_def_cfa_offset 32
 5641              		.cfi_offset 13, -32
 5642              	.LBB493:
 5643              	.LBB494:
 753:sieve_extend.c ****     counter_t pattern_start    = 0;
 5644              		.loc 1 753 15 view .LVU2383
 5645 28a6 41BD0100 		movl	$1, %r13d
 5645      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 172


 5646              	.LBE494:
 5647              	.LBE493:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 5648              		.loc 1 789 86 view .LVU2384
 5649 28ac 4154     		pushq	%r12
 5650              		.cfi_def_cfa_offset 40
 5651              		.cfi_offset 12, -40
 5652 28ae 55       		pushq	%rbp
 5653              		.cfi_def_cfa_offset 48
 5654              		.cfi_offset 6, -48
 5655 28af 4889F5   		movq	%rsi, %rbp
 5656 28b2 53       		pushq	%rbx
 5657              		.cfi_def_cfa_offset 56
 5658              		.cfi_offset 3, -56
 5659 28b3 4889FB   		movq	%rdi, %rbx
 5660              	.LVL325:
 5661              	.LBB564:
 5662              	.LBI564:
  77:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 5663              		.loc 1 77 28 is_stmt 1 view .LVU2385
 5664              	.LBB565:
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5665              		.loc 1 78 5 view .LVU2386
  79:sieve_extend.c **** 
 5666              		.loc 1 79 22 is_stmt 0 view .LVU2387
 5667 28b6 4989DE   		movq	%rbx, %r14
 5668              	.LBE565:
 5669              	.LBE564:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 5670              		.loc 1 789 86 view .LVU2388
 5671 28b9 4883EC68 		subq	$104, %rsp
 5672              		.cfi_def_cfa_offset 160
 5673              	.LBB570:
 5674              	.LBB566:
  79:sieve_extend.c **** 
 5675              		.loc 1 79 22 view .LVU2389
 5676 28bd 49D1EE   		shrq	%r14
 5677              	.LBE566:
 5678              	.LBE570:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 5679              		.loc 1 789 86 view .LVU2390
 5680 28c0 48897424 		movq	%rsi, 72(%rsp)
 5680      48
 5681              	.LBB571:
 5682              	.LBB567:
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5683              		.loc 1 78 33 view .LVU2391
 5684 28c5 BF080000 		movl	$8, %edi
 5684      00
 5685              	.LVL326:
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5686              		.loc 1 78 33 view .LVU2392
 5687 28ca BE180000 		movl	$24, %esi
 5687      00
 5688              	.LVL327:
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5689              		.loc 1 78 33 view .LVU2393
GAS LISTING /tmp/ccmX4xFB.s 			page 173


 5690 28cf E8000000 		call	aligned_alloc@PLT
 5690      00
 5691              	.LVL328:
  79:sieve_extend.c **** 
 5692              		.loc 1 79 22 view .LVU2394
 5693 28d4 498DB600 		leaq	1024(%r14), %rsi
 5693      040000
 5694 28db 48C1EE0A 		shrq	$10, %rsi
  79:sieve_extend.c **** 
 5695              		.loc 1 79 12 view .LVU2395
 5696 28df 48C1E607 		salq	$7, %rsi
  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5697              		.loc 1 81 23 view .LVU2396
 5698 28e3 BF800000 		movl	$128, %edi
 5698      00
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5699              		.loc 1 78 33 view .LVU2397
 5700 28e8 4989C7   		movq	%rax, %r15
  79:sieve_extend.c **** 
 5701              		.loc 1 79 22 view .LVU2398
 5702 28eb 4C897424 		movq	%r14, 8(%rsp)
 5702      08
  78:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 5703              		.loc 1 78 33 view .LVU2399
 5704 28f0 48894424 		movq	%rax, 56(%rsp)
 5704      38
 5705              	.LVL329:
  79:sieve_extend.c **** 
 5706              		.loc 1 79 5 is_stmt 1 view .LVU2400
  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5707              		.loc 1 81 5 view .LVU2401
  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5708              		.loc 1 81 23 is_stmt 0 view .LVU2402
 5709 28f5 E8000000 		call	aligned_alloc@PLT
 5709      00
 5710              	.LVL330:
  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5711              		.loc 1 81 23 view .LVU2403
 5712              	.LBE567:
 5713              	.LBE571:
 5714              	.LBB572:
 5715              	.LBB556:
 5716              	.LBB495:
 762:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 5717              		.loc 1 762 17 view .LVU2404
 5718 28fa 48C74424 		movq	$1, 16(%rsp)
 5718      10010000 
 5718      00
 5719              	.LBE495:
 5720              	.LBE556:
 5721              	.LBE572:
 5722              	.LBB573:
 5723              	.LBB568:
  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5724              		.loc 1 81 23 view .LVU2405
 5725 2903 48894424 		movq	%rax, 64(%rsp)
 5725      40
GAS LISTING /tmp/ccmX4xFB.s 			page 174


  81:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 5726              		.loc 1 81 21 view .LVU2406
 5727 2908 498907   		movq	%rax, (%r15)
  82:sieve_extend.c ****     sieve->size     = maxints;
 5728              		.loc 1 82 5 is_stmt 1 view .LVU2407
  83:sieve_extend.c **** 
 5729              		.loc 1 83 21 is_stmt 0 view .LVU2408
 5730 290b 49895F10 		movq	%rbx, 16(%r15)
 5731              	.LBE568:
 5732              	.LBE573:
 5733              	.LBB574:
 5734              	.LBB557:
 759:sieve_extend.c ****     
 5735              		.loc 1 759 24 view .LVU2409
 5736 290f 48C70000 		movq	$0, (%rax)
 5736      000000
 754:sieve_extend.c ****     counter_t range_stop       = block_stop;
 5737              		.loc 1 754 15 view .LVU2410
 5738 2916 48C74424 		movq	$0, 24(%rsp)
 5738      18000000 
 5738      00
 5739              	.LBE557:
 5740              	.LBE574:
 793:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 5741              		.loc 1 793 15 view .LVU2411
 5742 291f 488D55FF 		leaq	-1(%rbp), %rdx
 5743 2923 488B4C24 		movq	16(%rsp), %rcx
 5743      10
 5744              	.LBB575:
 5745              	.LBB569:
  82:sieve_extend.c ****     sieve->size     = maxints;
 5746              		.loc 1 82 21 view .LVU2412
 5747 2928 4D897708 		movq	%r14, 8(%r15)
  83:sieve_extend.c **** 
 5748              		.loc 1 83 5 is_stmt 1 view .LVU2413
  87:sieve_extend.c **** }
 5749              		.loc 1 87 5 view .LVU2414
 5750              	.LVL331:
  87:sieve_extend.c **** }
 5751              		.loc 1 87 5 is_stmt 0 view .LVU2415
 5752              	.LBE569:
 5753              	.LBE575:
 791:sieve_extend.c ****     counter_t block_start   = 0;
 5754              		.loc 1 791 5 is_stmt 1 view .LVU2416
 792:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
 5755              		.loc 1 792 5 view .LVU2417
 793:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 5756              		.loc 1 793 5 view .LVU2418
 793:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 5757              		.loc 1 793 15 is_stmt 0 view .LVU2419
 5758 292c 48895424 		movq	%rdx, 88(%rsp)
 5758      58
 5759              	.LVL332:
 794:sieve_extend.c **** 
 5760              		.loc 1 794 5 is_stmt 1 view .LVU2420
 797:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 5761              		.loc 1 797 5 view .LVU2421
GAS LISTING /tmp/ccmX4xFB.s 			page 175


 5762              	.LBB576:
 5763              	.LBI493:
 751:sieve_extend.c ****     counter_t prime            = 0;
 5764              		.loc 1 751 21 view .LVU2422
 5765              	.LBB558:
 752:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5766              		.loc 1 752 5 view .LVU2423
 753:sieve_extend.c ****     counter_t pattern_start    = 0;
 5767              		.loc 1 753 5 view .LVU2424
 754:sieve_extend.c ****     counter_t range_stop       = block_stop;
 5768              		.loc 1 754 5 view .LVU2425
 755:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 5769              		.loc 1 755 5 view .LVU2426
 756:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 5770              		.loc 1 756 5 view .LVU2427
 757:sieve_extend.c **** 
 5771              		.loc 1 757 5 view .LVU2428
 759:sieve_extend.c ****     
 5772              		.loc 1 759 5 view .LVU2429
 761:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 5773              		.loc 1 761 5 view .LVU2430
 5774              	.LBB549:
 762:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 5775              		.loc 1 762 9 view .LVU2431
 5776              	.LBB496:
 5777              	.LBI496:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 5778              		.loc 1 96 25 view .LVU2432
 5779              	.LBB497:
  97:sieve_extend.c ****     return index;
 5780              		.loc 1 97 5 view .LVU2433
  97:sieve_extend.c ****     return index;
 5781              		.loc 1 97 11 view .LVU2434
 5782              	.LBE497:
 5783              	.LBE496:
 5784              	.LBE549:
 757:sieve_extend.c **** 
 5785              		.loc 1 757 18 is_stmt 0 view .LVU2435
 5786 2931 31F6     		xorl	%esi, %esi
 5787 2933 31D2     		xorl	%edx, %edx
 5788              	.LVL333:
 752:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5789              		.loc 1 752 15 view .LVU2436
 5790 2935 4531C0   		xorl	%r8d, %r8d
 5791 2938 4989C6   		movq	%rax, %r14
 5792              	.LVL334:
 5793 293b 0F1F4400 		.p2align 4,,10
 5793      00
 5794              		.p2align 3
 5795              	.L661:
 5796              	.LBB550:
 5797              	.LBB500:
 5798              	.LBB498:
  98:sieve_extend.c ****     
 5799              		.loc 1 98 5 is_stmt 1 view .LVU2437
  98:sieve_extend.c ****     
 5800              		.loc 1 98 5 is_stmt 0 view .LVU2438
GAS LISTING /tmp/ccmX4xFB.s 			page 176


 5801              	.LBE498:
 5802              	.LBE500:
 763:sieve_extend.c ****         if (start > block_stop) break;
 5803              		.loc 1 763 9 is_stmt 1 view .LVU2439
 763:sieve_extend.c ****         if (start > block_stop) break;
 5804              		.loc 1 763 45 is_stmt 0 view .LVU2440
 5805 2940 4C8D6101 		leaq	1(%rcx), %r12
 5806 2944 488D2C09 		leaq	(%rcx,%rcx), %rbp
 763:sieve_extend.c ****         if (start > block_stop) break;
 5807              		.loc 1 763 19 view .LVU2441
 5808 2948 4C89E3   		movq	%r12, %rbx
 5809 294b 480FAFDD 		imulq	%rbp, %rbx
 5810              	.LVL335:
 764:sieve_extend.c **** 
 5811              		.loc 1 764 9 is_stmt 1 view .LVU2442
 764:sieve_extend.c **** 
 5812              		.loc 1 764 12 is_stmt 0 view .LVU2443
 5813 294f 483B5C24 		cmpq	8(%rsp), %rbx
 5813      08
 5814 2954 0F87170B 		ja	.L1349
 5814      0000
 766:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5815              		.loc 1 766 9 is_stmt 1 view .LVU2444
 766:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5816              		.loc 1 766 25 is_stmt 0 view .LVU2445
 5817 295a 48FFC5   		incq	%rbp
 5818              	.LVL336:
 767:sieve_extend.c **** 
 5819              		.loc 1 767 9 is_stmt 1 view .LVU2446
 767:sieve_extend.c **** 
 5820              		.loc 1 767 12 is_stmt 0 view .LVU2447
 5821 295d 4D85E4   		testq	%r12, %r12
 5822 2960 7516     		jne	.L665
 767:sieve_extend.c **** 
 5823              		.loc 1 767 41 is_stmt 1 view .LVU2448
 767:sieve_extend.c **** 
 5824              		.loc 1 767 102 is_stmt 0 view .LVU2449
 5825 2962 48C7C0FF 		movq	$-1, %rax
 5825      FFFFFF
 5826 2969 31D2     		xorl	%edx, %edx
 5827 296b 48F7F5   		divq	%rbp
 767:sieve_extend.c **** 
 5828              		.loc 1 767 47 view .LVU2450
 5829 296e 48C7C3FE 		movq	$-2, %rbx
 5829      FFFFFF
 5830              	.LVL337:
 767:sieve_extend.c **** 
 5831              		.loc 1 767 47 view .LVU2451
 5832 2975 4829D3   		subq	%rdx, %rbx
 5833              	.LVL338:
 5834              	.L665:
 769:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5835              		.loc 1 769 9 is_stmt 1 view .LVU2452
 769:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5836              		.loc 1 769 53 is_stmt 0 view .LVU2453
 5837 2978 4889EE   		movq	%rbp, %rsi
 5838 297b 490FAFF5 		imulq	%r13, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 177


 769:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5839              		.loc 1 769 60 view .LVU2454
 5840 297f 4C8D3C36 		leaq	(%rsi,%rsi), %r15
 5841              	.LVL339:
 770:sieve_extend.c ****         block.pattern_start = pattern_start;
 5842              		.loc 1 770 9 is_stmt 1 view .LVU2455
 771:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 5843              		.loc 1 771 9 view .LVU2456
 772:sieve_extend.c **** 
 5844              		.loc 1 772 9 view .LVU2457
 769:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5845              		.loc 1 769 53 is_stmt 0 view .LVU2458
 5846 2983 48897424 		movq	%rsi, 40(%rsp)
 5846      28
 772:sieve_extend.c **** 
 5847              		.loc 1 772 12 view .LVU2459
 5848 2988 4C3B7C24 		cmpq	8(%rsp), %r15
 5848      08
 5849 298d 0F877923 		ja	.L785
 5849      0000
 774:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5850              		.loc 1 774 9 is_stmt 1 view .LVU2460
 5851 2993 488B4C24 		movq	24(%rsp), %rcx
 5851      18
 5852 2998 48894C24 		movq	%rcx, 32(%rsp)
 5852      20
 774:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5853              		.loc 1 774 12 is_stmt 0 view .LVU2461
 5854 299d 4983FD01 		cmpq	$1, %r13
 5855 29a1 0F87E903 		ja	.L1552
 5855      0000
 5856              	.L667:
 5857              	.LVL340:
 778:sieve_extend.c **** 
 5858              		.loc 1 778 9 is_stmt 1 view .LVU2462
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 5859              		.loc 1 780 9 view .LVU2463
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 5860              		.loc 1 780 17 is_stmt 0 view .LVU2464
 5861 29a7 483B2D00 		cmpq	global_SMALLSTEP_FASTER(%rip), %rbp
 5861      000000
 5862 29ae 0F822C04 		jb	.L1553
 5862      0000
 5863              	.L671:
 781:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitarray, start, step, range_stop
 5864              		.loc 1 781 14 is_stmt 1 view .LVU2465
 5865 29b4 4989EA   		movq	%rbp, %r10
 5866 29b7 49C1E206 		salq	$6, %r10
 5867 29bb 4531C9   		xorl	%r9d, %r9d
 5868 29be 4901DA   		addq	%rbx, %r10
 5869 29c1 410F92C1 		setc	%r9b
 781:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitarray, start, step, range_stop
 5870              		.loc 1 781 17 is_stmt 0 view .LVU2466
 5871 29c5 483B2D00 		cmpq	global_MEDIUMSTEP_FASTER(%rip), %rbp
 5871      000000
 5872 29cc 0F833607 		jnb	.L680
 5872      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 178


 781:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitarray, start, step, range_stop
 5873              		.loc 1 781 44 is_stmt 1 view .LVU2467
 5874              	.LVL341:
 5875              	.LBB501:
 5876              	.LBI501:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 5877              		.loc 1 222 20 view .LVU2468
 5878              	.LBB502:
 223:sieve_extend.c **** 
 5879              		.loc 1 223 5 view .LVU2469
 225:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 5880              		.loc 1 225 5 view .LVU2470
 225:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 5881              		.loc 1 225 8 is_stmt 0 view .LVU2471
 5882 29d2 4D39D7   		cmpq	%r10, %r15
 5883 29d5 0F823509 		jb	.L681
 5883      0000
 5884              	.LVL342:
 5885              	.LBB503:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 5886              		.loc 1 240 54 is_stmt 1 view .LVU2472
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 5887              		.loc 1 240 9 is_stmt 0 view .LVU2473
 5888 29db 4D85C9   		testq	%r9, %r9
 5889 29de 0F85B302 		jne	.L675
 5889      0000
 5890              	.LBB504:
 5891              	.LBB505:
 5892              	.LBB506:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 5893              		.loc 1 150 20 view .LVU2474
 5894 29e4 4C89F8   		movq	%r15, %rax
 5895 29e7 48C1E806 		shrq	$6, %rax
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 5896              		.loc 1 152 83 view .LVU2475
 5897 29eb 488D7CAD 		leaq	0(%rbp,%rbp,4), %rdi
 5897      00
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 5898              		.loc 1 152 106 view .LVU2476
 5899 29f0 4889C2   		movq	%rax, %rdx
 175:sieve_extend.c ****    }
 5900              		.loc 1 175 34 view .LVU2477
 5901 29f3 4589F9   		movl	%r15d, %r9d
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 5902              		.loc 1 152 106 view .LVU2478
 5903 29f6 4829FA   		subq	%rdi, %rdx
 175:sieve_extend.c ****    }
 5904              		.loc 1 175 34 view .LVU2479
 5905 29f9 41F7D1   		notl	%r9d
 5906 29fc 49C7C3FF 		movq	$-1, %r11
 5906      FFFFFF
 5907 2a03 4839F8   		cmpq	%rdi, %rax
 5908 2a06 C4C2B3F7 		shrx	%r9, %r11, %rsi
 5908      F3
 153:sieve_extend.c **** 
 5909              		.loc 1 153 35 view .LVU2480
 5910 2a0b 4D8D04C6 		leaq	(%r14,%rax,8), %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 179


 5911 2a0f 4D8D0CD6 		leaq	(%r14,%rdx,8), %r9
 5912 2a13 4889E8   		movq	%rbp, %rax
 175:sieve_extend.c ****    }
 5913              		.loc 1 175 34 view .LVU2481
 5914 2a16 48897424 		movq	%rsi, 48(%rsp)
 5914      30
 5915 2a1b 4D0F46CE 		cmovbe	%r14, %r9
 5916 2a1f 48C1E004 		salq	$4, %rax
 5917              	.LBE506:
 5918              	.LBE505:
 244:sieve_extend.c ****                 index += step;
 5919              		.loc 1 244 25 view .LVU2482
 5920 2a23 4C896424 		movq	%r12, 80(%rsp)
 5920      50
 5921              	.LBB510:
 5922              	.LBB507:
 158:sieve_extend.c ****        *index_ptr |= mask;
 5923              		.loc 1 158 17 view .LVU2483
 5924 2a28 488D0CED 		leaq	0(,%rbp,8), %rcx
 5924      00000000 
 5925 2a30 48C1E703 		salq	$3, %rdi
 5926              	.LBE507:
 5927              	.LBE510:
 244:sieve_extend.c ****                 index += step;
 5928              		.loc 1 244 25 view .LVU2484
 5929 2a34 41BB0100 		movl	$1, %r11d
 5929      0000
 5930 2a3a 4989C4   		movq	%rax, %r12
 5931              	.LVL343:
 5932 2a3d 0F1F00   		.p2align 4,,10
 5933              		.p2align 3
 5934              	.L692:
 241:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 5935              		.loc 1 241 13 is_stmt 1 view .LVU2485
 241:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 5936              		.loc 1 241 32 is_stmt 0 view .LVU2486
 5937 2a40 4889D8   		movq	%rbx, %rax
 5938 2a43 48C1E806 		shrq	$6, %rax
 5939              	.LVL344:
 242:sieve_extend.c ****             do {
 5940              		.loc 1 242 13 is_stmt 1 view .LVU2487
 242:sieve_extend.c ****             do {
 5941              		.loc 1 242 32 is_stmt 0 view .LVU2488
 5942 2a47 31D2     		xorl	%edx, %edx
 5943              	.LVL345:
 5944              	.L686:
 243:sieve_extend.c ****                 mask |= markmask(index);
 5945              		.loc 1 243 13 is_stmt 1 view .LVU2489
 244:sieve_extend.c ****                 index += step;
 5946              		.loc 1 244 17 view .LVU2490
 244:sieve_extend.c ****                 index += step;
 5947              		.loc 1 244 25 is_stmt 0 view .LVU2491
 5948 2a49 C4C2E1F7 		shlx	%rbx, %r11, %rsi
 5948      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5949              		.loc 1 245 23 view .LVU2492
 5950 2a4e 4801EB   		addq	%rbp, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 180


 5951              	.LVL346:
 244:sieve_extend.c ****                 index += step;
 5952              		.loc 1 244 22 view .LVU2493
 5953 2a51 4809F2   		orq	%rsi, %rdx
 5954              	.LVL347:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5955              		.loc 1 245 17 is_stmt 1 view .LVU2494
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5956              		.loc 1 246 21 view .LVU2495
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5957              		.loc 1 246 36 is_stmt 0 view .LVU2496
 5958 2a54 4889DE   		movq	%rbx, %rsi
 5959 2a57 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5960              		.loc 1 246 13 view .LVU2497
 5961 2a5b 4839F0   		cmpq	%rsi, %rax
 5962 2a5e 0F85AC00 		jne	.L1348
 5962      0000
 243:sieve_extend.c ****                 mask |= markmask(index);
 5963              		.loc 1 243 13 is_stmt 1 view .LVU2498
 244:sieve_extend.c ****                 index += step;
 5964              		.loc 1 244 17 view .LVU2499
 244:sieve_extend.c ****                 index += step;
 5965              		.loc 1 244 25 is_stmt 0 view .LVU2500
 5966 2a64 C4C2E1F7 		shlx	%rbx, %r11, %rsi
 5966      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5967              		.loc 1 245 23 view .LVU2501
 5968 2a69 4801EB   		addq	%rbp, %rbx
 5969              	.LVL348:
 244:sieve_extend.c ****                 index += step;
 5970              		.loc 1 244 22 view .LVU2502
 5971 2a6c 4809F2   		orq	%rsi, %rdx
 5972              	.LVL349:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5973              		.loc 1 245 17 is_stmt 1 view .LVU2503
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5974              		.loc 1 246 21 view .LVU2504
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5975              		.loc 1 246 36 is_stmt 0 view .LVU2505
 5976 2a6f 4889DE   		movq	%rbx, %rsi
 5977 2a72 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5978              		.loc 1 246 13 view .LVU2506
 5979 2a76 4839F0   		cmpq	%rsi, %rax
 5980 2a79 0F859100 		jne	.L1348
 5980      0000
 243:sieve_extend.c ****                 mask |= markmask(index);
 5981              		.loc 1 243 13 is_stmt 1 view .LVU2507
 244:sieve_extend.c ****                 index += step;
 5982              		.loc 1 244 17 view .LVU2508
 244:sieve_extend.c ****                 index += step;
 5983              		.loc 1 244 25 is_stmt 0 view .LVU2509
 5984 2a7f C4C2E1F7 		shlx	%rbx, %r11, %rsi
 5984      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5985              		.loc 1 245 23 view .LVU2510
GAS LISTING /tmp/ccmX4xFB.s 			page 181


 5986 2a84 4801EB   		addq	%rbp, %rbx
 5987              	.LVL350:
 244:sieve_extend.c ****                 index += step;
 5988              		.loc 1 244 22 view .LVU2511
 5989 2a87 4809F2   		orq	%rsi, %rdx
 5990              	.LVL351:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 5991              		.loc 1 245 17 is_stmt 1 view .LVU2512
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5992              		.loc 1 246 21 view .LVU2513
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5993              		.loc 1 246 36 is_stmt 0 view .LVU2514
 5994 2a8a 4889DE   		movq	%rbx, %rsi
 5995 2a8d 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 5996              		.loc 1 246 13 view .LVU2515
 5997 2a91 4839F0   		cmpq	%rsi, %rax
 5998 2a94 757A     		jne	.L1348
 243:sieve_extend.c ****                 mask |= markmask(index);
 5999              		.loc 1 243 13 is_stmt 1 view .LVU2516
 244:sieve_extend.c ****                 index += step;
 6000              		.loc 1 244 17 view .LVU2517
 244:sieve_extend.c ****                 index += step;
 6001              		.loc 1 244 25 is_stmt 0 view .LVU2518
 6002 2a96 C4C2E1F7 		shlx	%rbx, %r11, %rsi
 6002      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6003              		.loc 1 245 23 view .LVU2519
 6004 2a9b 4801EB   		addq	%rbp, %rbx
 6005              	.LVL352:
 244:sieve_extend.c ****                 index += step;
 6006              		.loc 1 244 22 view .LVU2520
 6007 2a9e 4809F2   		orq	%rsi, %rdx
 6008              	.LVL353:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6009              		.loc 1 245 17 is_stmt 1 view .LVU2521
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6010              		.loc 1 246 21 view .LVU2522
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6011              		.loc 1 246 36 is_stmt 0 view .LVU2523
 6012 2aa1 4889DE   		movq	%rbx, %rsi
 6013 2aa4 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6014              		.loc 1 246 13 view .LVU2524
 6015 2aa8 4839F0   		cmpq	%rsi, %rax
 6016 2aab 7563     		jne	.L1348
 243:sieve_extend.c ****                 mask |= markmask(index);
 6017              		.loc 1 243 13 is_stmt 1 view .LVU2525
 244:sieve_extend.c ****                 index += step;
 6018              		.loc 1 244 17 view .LVU2526
 244:sieve_extend.c ****                 index += step;
 6019              		.loc 1 244 25 is_stmt 0 view .LVU2527
 6020 2aad C4C2E1F7 		shlx	%rbx, %r11, %rsi
 6020      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6021              		.loc 1 245 23 view .LVU2528
 6022 2ab2 4801EB   		addq	%rbp, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 182


 6023              	.LVL354:
 244:sieve_extend.c ****                 index += step;
 6024              		.loc 1 244 22 view .LVU2529
 6025 2ab5 4809F2   		orq	%rsi, %rdx
 6026              	.LVL355:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6027              		.loc 1 245 17 is_stmt 1 view .LVU2530
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6028              		.loc 1 246 21 view .LVU2531
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6029              		.loc 1 246 36 is_stmt 0 view .LVU2532
 6030 2ab8 4889DE   		movq	%rbx, %rsi
 6031 2abb 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6032              		.loc 1 246 13 view .LVU2533
 6033 2abf 4839F0   		cmpq	%rsi, %rax
 6034 2ac2 754C     		jne	.L1348
 243:sieve_extend.c ****                 mask |= markmask(index);
 6035              		.loc 1 243 13 is_stmt 1 view .LVU2534
 244:sieve_extend.c ****                 index += step;
 6036              		.loc 1 244 17 view .LVU2535
 244:sieve_extend.c ****                 index += step;
 6037              		.loc 1 244 25 is_stmt 0 view .LVU2536
 6038 2ac4 C4C2E1F7 		shlx	%rbx, %r11, %rsi
 6038      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6039              		.loc 1 245 23 view .LVU2537
 6040 2ac9 4801EB   		addq	%rbp, %rbx
 6041              	.LVL356:
 244:sieve_extend.c ****                 index += step;
 6042              		.loc 1 244 22 view .LVU2538
 6043 2acc 4809F2   		orq	%rsi, %rdx
 6044              	.LVL357:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6045              		.loc 1 245 17 is_stmt 1 view .LVU2539
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6046              		.loc 1 246 21 view .LVU2540
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6047              		.loc 1 246 36 is_stmt 0 view .LVU2541
 6048 2acf 4889DE   		movq	%rbx, %rsi
 6049 2ad2 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6050              		.loc 1 246 13 view .LVU2542
 6051 2ad6 4839F0   		cmpq	%rsi, %rax
 6052 2ad9 7535     		jne	.L1348
 243:sieve_extend.c ****                 mask |= markmask(index);
 6053              		.loc 1 243 13 is_stmt 1 view .LVU2543
 244:sieve_extend.c ****                 index += step;
 6054              		.loc 1 244 17 view .LVU2544
 244:sieve_extend.c ****                 index += step;
 6055              		.loc 1 244 25 is_stmt 0 view .LVU2545
 6056 2adb C4C2E1F7 		shlx	%rbx, %r11, %rsi
 6056      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6057              		.loc 1 245 23 view .LVU2546
 6058 2ae0 4801EB   		addq	%rbp, %rbx
 6059              	.LVL358:
GAS LISTING /tmp/ccmX4xFB.s 			page 183


 244:sieve_extend.c ****                 index += step;
 6060              		.loc 1 244 22 view .LVU2547
 6061 2ae3 4809F2   		orq	%rsi, %rdx
 6062              	.LVL359:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6063              		.loc 1 245 17 is_stmt 1 view .LVU2548
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6064              		.loc 1 246 21 view .LVU2549
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6065              		.loc 1 246 36 is_stmt 0 view .LVU2550
 6066 2ae6 4889DE   		movq	%rbx, %rsi
 6067 2ae9 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6068              		.loc 1 246 13 view .LVU2551
 6069 2aed 4839F0   		cmpq	%rsi, %rax
 6070 2af0 751E     		jne	.L1348
 243:sieve_extend.c ****                 mask |= markmask(index);
 6071              		.loc 1 243 13 is_stmt 1 view .LVU2552
 244:sieve_extend.c ****                 index += step;
 6072              		.loc 1 244 17 view .LVU2553
 244:sieve_extend.c ****                 index += step;
 6073              		.loc 1 244 25 is_stmt 0 view .LVU2554
 6074 2af2 C4C2E1F7 		shlx	%rbx, %r11, %rsi
 6074      F3
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6075              		.loc 1 245 23 view .LVU2555
 6076 2af7 4801EB   		addq	%rbp, %rbx
 6077              	.LVL360:
 244:sieve_extend.c ****                 index += step;
 6078              		.loc 1 244 22 view .LVU2556
 6079 2afa 4809F2   		orq	%rsi, %rdx
 6080              	.LVL361:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 6081              		.loc 1 245 17 is_stmt 1 view .LVU2557
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6082              		.loc 1 246 21 view .LVU2558
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6083              		.loc 1 246 36 is_stmt 0 view .LVU2559
 6084 2afd 4889DE   		movq	%rbx, %rsi
 6085 2b00 48C1EE06 		shrq	$6, %rsi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 6086              		.loc 1 246 13 view .LVU2560
 6087 2b04 4839F0   		cmpq	%rsi, %rax
 6088 2b07 0F843CFF 		je	.L686
 6088      FFFF
 6089 2b0d 0F1F00   		.p2align 4,,10
 6090              		.p2align 3
 6091              	.L1348:
 247:sieve_extend.c ****         }
 6092              		.loc 1 247 13 is_stmt 1 view .LVU2561
 6093              	.LVL362:
 6094              	.LBB511:
 6095              	.LBI505:
 121:sieve_extend.c **** // #if __APPLE__
 6096              		.loc 1 121 20 view .LVU2562
 6097              	.LBB508:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
GAS LISTING /tmp/ccmX4xFB.s 			page 184


 6098              		.loc 1 150 4 view .LVU2563
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 6099              		.loc 1 151 4 view .LVU2564
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 6100              		.loc 1 151 35 is_stmt 0 view .LVU2565
 6101 2b10 498D04C6 		leaq	(%r14,%rax,8), %rax
 6102              	.LVL363:
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 6103              		.loc 1 152 4 is_stmt 1 view .LVU2566
 153:sieve_extend.c **** 
 6104              		.loc 1 153 4 view .LVU2567
 156:sieve_extend.c ****        *index_ptr |= mask;
 6105              		.loc 1 156 4 view .LVU2568
 156:sieve_extend.c ****        *index_ptr |= mask;
 6106              		.loc 1 156 10 view .LVU2569
 6107 2b14 4C39C8   		cmpq	%r9, %rax
 6108 2b17 0F830301 		jnb	.L687
 6108      0000
 156:sieve_extend.c ****        *index_ptr |= mask;
 6109              		.loc 1 156 10 is_stmt 0 view .LVU2570
 6110 2b1d 4A8D3420 		leaq	(%rax,%r12), %rsi
 6111              	.L688:
 157:sieve_extend.c ****        index_ptr+=step;
 6112              		.loc 1 157 8 is_stmt 1 view .LVU2571
 157:sieve_extend.c ****        index_ptr+=step;
 6113              		.loc 1 157 19 is_stmt 0 view .LVU2572
 6114 2b21 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6115              		.loc 1 158 8 is_stmt 1 view .LVU2573
 6116              	.LVL364:
 159:sieve_extend.c ****        index_ptr+=step;
 6117              		.loc 1 159 8 view .LVU2574
 159:sieve_extend.c ****        index_ptr+=step;
 6118              		.loc 1 159 19 is_stmt 0 view .LVU2575
 6119 2b24 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6120              		.loc 1 160 8 is_stmt 1 view .LVU2576
 6121              	.LVL365:
 161:sieve_extend.c ****        index_ptr+=step;
 6122              		.loc 1 161 8 view .LVU2577
 161:sieve_extend.c ****        index_ptr+=step;
 6123              		.loc 1 161 19 is_stmt 0 view .LVU2578
 6124 2b28 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6125              		.loc 1 162 8 is_stmt 1 view .LVU2579
 6126              	.LVL366:
 163:sieve_extend.c ****        index_ptr+=step;
 6127              		.loc 1 163 8 view .LVU2580
 163:sieve_extend.c ****        index_ptr+=step;
 6128              		.loc 1 163 19 is_stmt 0 view .LVU2581
 6129 2b2b 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6130              		.loc 1 164 8 is_stmt 1 view .LVU2582
 6131              	.LVL367:
 165:sieve_extend.c ****        index_ptr+=step;
 6132              		.loc 1 165 8 view .LVU2583
 6133 2b2f 4801FE   		addq	%rdi, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 185


 165:sieve_extend.c ****        index_ptr+=step;
 6134              		.loc 1 165 19 is_stmt 0 view .LVU2584
 6135 2b32 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6136              		.loc 1 166 8 is_stmt 1 view .LVU2585
 6137 2b36 4801F8   		addq	%rdi, %rax
 6138              	.LVL368:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6139              		.loc 1 156 10 view .LVU2586
 6140 2b39 4C39C8   		cmpq	%r9, %rax
 6141 2b3c 0F83DE00 		jnb	.L687
 6141      0000
 157:sieve_extend.c ****        index_ptr+=step;
 6142              		.loc 1 157 8 view .LVU2587
 157:sieve_extend.c ****        index_ptr+=step;
 6143              		.loc 1 157 19 is_stmt 0 view .LVU2588
 6144 2b42 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6145              		.loc 1 158 8 is_stmt 1 view .LVU2589
 6146              	.LVL369:
 159:sieve_extend.c ****        index_ptr+=step;
 6147              		.loc 1 159 8 view .LVU2590
 159:sieve_extend.c ****        index_ptr+=step;
 6148              		.loc 1 159 19 is_stmt 0 view .LVU2591
 6149 2b45 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6150              		.loc 1 160 8 is_stmt 1 view .LVU2592
 6151              	.LVL370:
 161:sieve_extend.c ****        index_ptr+=step;
 6152              		.loc 1 161 8 view .LVU2593
 161:sieve_extend.c ****        index_ptr+=step;
 6153              		.loc 1 161 19 is_stmt 0 view .LVU2594
 6154 2b49 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6155              		.loc 1 162 8 is_stmt 1 view .LVU2595
 6156              	.LVL371:
 163:sieve_extend.c ****        index_ptr+=step;
 6157              		.loc 1 163 8 view .LVU2596
 163:sieve_extend.c ****        index_ptr+=step;
 6158              		.loc 1 163 19 is_stmt 0 view .LVU2597
 6159 2b4c 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6160              		.loc 1 164 8 is_stmt 1 view .LVU2598
 6161              	.LVL372:
 165:sieve_extend.c ****        index_ptr+=step;
 6162              		.loc 1 165 8 view .LVU2599
 6163 2b50 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6164              		.loc 1 165 19 is_stmt 0 view .LVU2600
 6165 2b53 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6166              		.loc 1 166 8 is_stmt 1 view .LVU2601
 6167 2b57 4801F8   		addq	%rdi, %rax
 6168              	.LVL373:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6169              		.loc 1 156 10 view .LVU2602
 6170 2b5a 4C39C8   		cmpq	%r9, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 186


 6171 2b5d 0F83BD00 		jnb	.L687
 6171      0000
 157:sieve_extend.c ****        index_ptr+=step;
 6172              		.loc 1 157 8 view .LVU2603
 157:sieve_extend.c ****        index_ptr+=step;
 6173              		.loc 1 157 19 is_stmt 0 view .LVU2604
 6174 2b63 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6175              		.loc 1 158 8 is_stmt 1 view .LVU2605
 6176              	.LVL374:
 159:sieve_extend.c ****        index_ptr+=step;
 6177              		.loc 1 159 8 view .LVU2606
 159:sieve_extend.c ****        index_ptr+=step;
 6178              		.loc 1 159 19 is_stmt 0 view .LVU2607
 6179 2b66 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6180              		.loc 1 160 8 is_stmt 1 view .LVU2608
 6181              	.LVL375:
 161:sieve_extend.c ****        index_ptr+=step;
 6182              		.loc 1 161 8 view .LVU2609
 161:sieve_extend.c ****        index_ptr+=step;
 6183              		.loc 1 161 19 is_stmt 0 view .LVU2610
 6184 2b6a 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6185              		.loc 1 162 8 is_stmt 1 view .LVU2611
 6186              	.LVL376:
 163:sieve_extend.c ****        index_ptr+=step;
 6187              		.loc 1 163 8 view .LVU2612
 163:sieve_extend.c ****        index_ptr+=step;
 6188              		.loc 1 163 19 is_stmt 0 view .LVU2613
 6189 2b6d 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6190              		.loc 1 164 8 is_stmt 1 view .LVU2614
 6191              	.LVL377:
 165:sieve_extend.c ****        index_ptr+=step;
 6192              		.loc 1 165 8 view .LVU2615
 6193 2b71 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6194              		.loc 1 165 19 is_stmt 0 view .LVU2616
 6195 2b74 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6196              		.loc 1 166 8 is_stmt 1 view .LVU2617
 6197 2b78 4801F8   		addq	%rdi, %rax
 6198              	.LVL378:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6199              		.loc 1 156 10 view .LVU2618
 6200 2b7b 4C39C8   		cmpq	%r9, %rax
 6201 2b7e 0F839C00 		jnb	.L687
 6201      0000
 157:sieve_extend.c ****        index_ptr+=step;
 6202              		.loc 1 157 8 view .LVU2619
 157:sieve_extend.c ****        index_ptr+=step;
 6203              		.loc 1 157 19 is_stmt 0 view .LVU2620
 6204 2b84 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6205              		.loc 1 158 8 is_stmt 1 view .LVU2621
 6206              	.LVL379:
GAS LISTING /tmp/ccmX4xFB.s 			page 187


 159:sieve_extend.c ****        index_ptr+=step;
 6207              		.loc 1 159 8 view .LVU2622
 159:sieve_extend.c ****        index_ptr+=step;
 6208              		.loc 1 159 19 is_stmt 0 view .LVU2623
 6209 2b87 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6210              		.loc 1 160 8 is_stmt 1 view .LVU2624
 6211              	.LVL380:
 161:sieve_extend.c ****        index_ptr+=step;
 6212              		.loc 1 161 8 view .LVU2625
 161:sieve_extend.c ****        index_ptr+=step;
 6213              		.loc 1 161 19 is_stmt 0 view .LVU2626
 6214 2b8b 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6215              		.loc 1 162 8 is_stmt 1 view .LVU2627
 6216              	.LVL381:
 163:sieve_extend.c ****        index_ptr+=step;
 6217              		.loc 1 163 8 view .LVU2628
 163:sieve_extend.c ****        index_ptr+=step;
 6218              		.loc 1 163 19 is_stmt 0 view .LVU2629
 6219 2b8e 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6220              		.loc 1 164 8 is_stmt 1 view .LVU2630
 6221              	.LVL382:
 165:sieve_extend.c ****        index_ptr+=step;
 6222              		.loc 1 165 8 view .LVU2631
 6223 2b92 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6224              		.loc 1 165 19 is_stmt 0 view .LVU2632
 6225 2b95 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6226              		.loc 1 166 8 is_stmt 1 view .LVU2633
 6227 2b99 4801F8   		addq	%rdi, %rax
 6228              	.LVL383:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6229              		.loc 1 156 10 view .LVU2634
 6230 2b9c 4C39C8   		cmpq	%r9, %rax
 6231 2b9f 737F     		jnb	.L687
 157:sieve_extend.c ****        index_ptr+=step;
 6232              		.loc 1 157 8 view .LVU2635
 157:sieve_extend.c ****        index_ptr+=step;
 6233              		.loc 1 157 19 is_stmt 0 view .LVU2636
 6234 2ba1 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6235              		.loc 1 158 8 is_stmt 1 view .LVU2637
 6236              	.LVL384:
 159:sieve_extend.c ****        index_ptr+=step;
 6237              		.loc 1 159 8 view .LVU2638
 159:sieve_extend.c ****        index_ptr+=step;
 6238              		.loc 1 159 19 is_stmt 0 view .LVU2639
 6239 2ba4 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6240              		.loc 1 160 8 is_stmt 1 view .LVU2640
 6241              	.LVL385:
 161:sieve_extend.c ****        index_ptr+=step;
 6242              		.loc 1 161 8 view .LVU2641
 161:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccmX4xFB.s 			page 188


 6243              		.loc 1 161 19 is_stmt 0 view .LVU2642
 6244 2ba8 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6245              		.loc 1 162 8 is_stmt 1 view .LVU2643
 6246              	.LVL386:
 163:sieve_extend.c ****        index_ptr+=step;
 6247              		.loc 1 163 8 view .LVU2644
 163:sieve_extend.c ****        index_ptr+=step;
 6248              		.loc 1 163 19 is_stmt 0 view .LVU2645
 6249 2bab 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6250              		.loc 1 164 8 is_stmt 1 view .LVU2646
 6251              	.LVL387:
 165:sieve_extend.c ****        index_ptr+=step;
 6252              		.loc 1 165 8 view .LVU2647
 6253 2baf 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6254              		.loc 1 165 19 is_stmt 0 view .LVU2648
 6255 2bb2 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6256              		.loc 1 166 8 is_stmt 1 view .LVU2649
 6257 2bb6 4801F8   		addq	%rdi, %rax
 6258              	.LVL388:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6259              		.loc 1 156 10 view .LVU2650
 6260 2bb9 4C39C8   		cmpq	%r9, %rax
 6261 2bbc 7362     		jnb	.L687
 157:sieve_extend.c ****        index_ptr+=step;
 6262              		.loc 1 157 8 view .LVU2651
 157:sieve_extend.c ****        index_ptr+=step;
 6263              		.loc 1 157 19 is_stmt 0 view .LVU2652
 6264 2bbe 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6265              		.loc 1 158 8 is_stmt 1 view .LVU2653
 6266              	.LVL389:
 159:sieve_extend.c ****        index_ptr+=step;
 6267              		.loc 1 159 8 view .LVU2654
 159:sieve_extend.c ****        index_ptr+=step;
 6268              		.loc 1 159 19 is_stmt 0 view .LVU2655
 6269 2bc1 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6270              		.loc 1 160 8 is_stmt 1 view .LVU2656
 6271              	.LVL390:
 161:sieve_extend.c ****        index_ptr+=step;
 6272              		.loc 1 161 8 view .LVU2657
 161:sieve_extend.c ****        index_ptr+=step;
 6273              		.loc 1 161 19 is_stmt 0 view .LVU2658
 6274 2bc5 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6275              		.loc 1 162 8 is_stmt 1 view .LVU2659
 6276              	.LVL391:
 163:sieve_extend.c ****        index_ptr+=step;
 6277              		.loc 1 163 8 view .LVU2660
 163:sieve_extend.c ****        index_ptr+=step;
 6278              		.loc 1 163 19 is_stmt 0 view .LVU2661
 6279 2bc8 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 189


 6280              		.loc 1 164 8 is_stmt 1 view .LVU2662
 6281              	.LVL392:
 165:sieve_extend.c ****        index_ptr+=step;
 6282              		.loc 1 165 8 view .LVU2663
 6283 2bcc 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6284              		.loc 1 165 19 is_stmt 0 view .LVU2664
 6285 2bcf 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6286              		.loc 1 166 8 is_stmt 1 view .LVU2665
 6287 2bd3 4801F8   		addq	%rdi, %rax
 6288              	.LVL393:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6289              		.loc 1 156 10 view .LVU2666
 6290 2bd6 4C39C8   		cmpq	%r9, %rax
 6291 2bd9 7345     		jnb	.L687
 157:sieve_extend.c ****        index_ptr+=step;
 6292              		.loc 1 157 8 view .LVU2667
 157:sieve_extend.c ****        index_ptr+=step;
 6293              		.loc 1 157 19 is_stmt 0 view .LVU2668
 6294 2bdb 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6295              		.loc 1 158 8 is_stmt 1 view .LVU2669
 6296              	.LVL394:
 159:sieve_extend.c ****        index_ptr+=step;
 6297              		.loc 1 159 8 view .LVU2670
 159:sieve_extend.c ****        index_ptr+=step;
 6298              		.loc 1 159 19 is_stmt 0 view .LVU2671
 6299 2bde 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6300              		.loc 1 160 8 is_stmt 1 view .LVU2672
 6301              	.LVL395:
 161:sieve_extend.c ****        index_ptr+=step;
 6302              		.loc 1 161 8 view .LVU2673
 161:sieve_extend.c ****        index_ptr+=step;
 6303              		.loc 1 161 19 is_stmt 0 view .LVU2674
 6304 2be2 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6305              		.loc 1 162 8 is_stmt 1 view .LVU2675
 6306              	.LVL396:
 163:sieve_extend.c ****        index_ptr+=step;
 6307              		.loc 1 163 8 view .LVU2676
 163:sieve_extend.c ****        index_ptr+=step;
 6308              		.loc 1 163 19 is_stmt 0 view .LVU2677
 6309 2be5 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6310              		.loc 1 164 8 is_stmt 1 view .LVU2678
 6311              	.LVL397:
 165:sieve_extend.c ****        index_ptr+=step;
 6312              		.loc 1 165 8 view .LVU2679
 6313 2be9 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6314              		.loc 1 165 19 is_stmt 0 view .LVU2680
 6315 2bec 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6316              		.loc 1 166 8 is_stmt 1 view .LVU2681
 6317 2bf0 4801F8   		addq	%rdi, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 190


 6318              	.LVL398:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6319              		.loc 1 156 10 view .LVU2682
 6320 2bf3 4C39C8   		cmpq	%r9, %rax
 6321 2bf6 7328     		jnb	.L687
 157:sieve_extend.c ****        index_ptr+=step;
 6322              		.loc 1 157 8 view .LVU2683
 157:sieve_extend.c ****        index_ptr+=step;
 6323              		.loc 1 157 19 is_stmt 0 view .LVU2684
 6324 2bf8 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 6325              		.loc 1 158 8 is_stmt 1 view .LVU2685
 6326              	.LVL399:
 159:sieve_extend.c ****        index_ptr+=step;
 6327              		.loc 1 159 8 view .LVU2686
 159:sieve_extend.c ****        index_ptr+=step;
 6328              		.loc 1 159 19 is_stmt 0 view .LVU2687
 6329 2bfb 48091408 		orq	%rdx, (%rax,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 6330              		.loc 1 160 8 is_stmt 1 view .LVU2688
 6331              	.LVL400:
 161:sieve_extend.c ****        index_ptr+=step;
 6332              		.loc 1 161 8 view .LVU2689
 161:sieve_extend.c ****        index_ptr+=step;
 6333              		.loc 1 161 19 is_stmt 0 view .LVU2690
 6334 2bff 480916   		orq	%rdx, (%rsi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 6335              		.loc 1 162 8 is_stmt 1 view .LVU2691
 6336              	.LVL401:
 163:sieve_extend.c ****        index_ptr+=step;
 6337              		.loc 1 163 8 view .LVU2692
 163:sieve_extend.c ****        index_ptr+=step;
 6338              		.loc 1 163 19 is_stmt 0 view .LVU2693
 6339 2c02 4809140E 		orq	%rdx, (%rsi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 6340              		.loc 1 164 8 is_stmt 1 view .LVU2694
 6341              	.LVL402:
 165:sieve_extend.c ****        index_ptr+=step;
 6342              		.loc 1 165 8 view .LVU2695
 6343 2c06 4801FE   		addq	%rdi, %rsi
 165:sieve_extend.c ****        index_ptr+=step;
 6344              		.loc 1 165 19 is_stmt 0 view .LVU2696
 6345 2c09 48091488 		orq	%rdx, (%rax,%rcx,4)
 166:sieve_extend.c ****    }
 6346              		.loc 1 166 8 is_stmt 1 view .LVU2697
 6347 2c0d 4801F8   		addq	%rdi, %rax
 6348              	.LVL403:
 156:sieve_extend.c ****        *index_ptr |= mask;
 6349              		.loc 1 156 10 view .LVU2698
 6350 2c10 4C39C8   		cmpq	%r9, %rax
 6351 2c13 0F8208FF 		jb	.L688
 6351      FFFF
 6352 2c19 0F1F8000 		.p2align 4,,10
 6352      000000
 6353              		.p2align 3
 6354              	.L687:
 169:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 191


 6355              		.loc 1 169 10 view .LVU2699
 6356 2c20 4939C0   		cmpq	%rax, %r8
 6357 2c23 765B     		jbe	.L689
 6358              	.L690:
 170:sieve_extend.c ****        index_ptr+=step;
 6359              		.loc 1 170 8 view .LVU2700
 170:sieve_extend.c ****        index_ptr+=step;
 6360              		.loc 1 170 19 is_stmt 0 view .LVU2701
 6361 2c25 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6362              		.loc 1 171 8 is_stmt 1 view .LVU2702
 171:sieve_extend.c ****    }
 6363              		.loc 1 171 17 is_stmt 0 view .LVU2703
 6364 2c28 4801C8   		addq	%rcx, %rax
 6365              	.LVL404:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6366              		.loc 1 169 10 is_stmt 1 view .LVU2704
 6367 2c2b 4939C0   		cmpq	%rax, %r8
 6368 2c2e 7650     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6369              		.loc 1 170 8 view .LVU2705
 170:sieve_extend.c ****        index_ptr+=step;
 6370              		.loc 1 170 19 is_stmt 0 view .LVU2706
 6371 2c30 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6372              		.loc 1 171 8 is_stmt 1 view .LVU2707
 171:sieve_extend.c ****    }
 6373              		.loc 1 171 17 is_stmt 0 view .LVU2708
 6374 2c33 4801C8   		addq	%rcx, %rax
 6375              	.LVL405:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6376              		.loc 1 169 10 is_stmt 1 view .LVU2709
 6377 2c36 4939C0   		cmpq	%rax, %r8
 6378 2c39 7645     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6379              		.loc 1 170 8 view .LVU2710
 170:sieve_extend.c ****        index_ptr+=step;
 6380              		.loc 1 170 19 is_stmt 0 view .LVU2711
 6381 2c3b 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6382              		.loc 1 171 8 is_stmt 1 view .LVU2712
 171:sieve_extend.c ****    }
 6383              		.loc 1 171 17 is_stmt 0 view .LVU2713
 6384 2c3e 4801C8   		addq	%rcx, %rax
 6385              	.LVL406:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6386              		.loc 1 169 10 is_stmt 1 view .LVU2714
 6387 2c41 4939C0   		cmpq	%rax, %r8
 6388 2c44 763A     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6389              		.loc 1 170 8 view .LVU2715
 170:sieve_extend.c ****        index_ptr+=step;
 6390              		.loc 1 170 19 is_stmt 0 view .LVU2716
 6391 2c46 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6392              		.loc 1 171 8 is_stmt 1 view .LVU2717
 171:sieve_extend.c ****    }
GAS LISTING /tmp/ccmX4xFB.s 			page 192


 6393              		.loc 1 171 17 is_stmt 0 view .LVU2718
 6394 2c49 4801C8   		addq	%rcx, %rax
 6395              	.LVL407:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6396              		.loc 1 169 10 is_stmt 1 view .LVU2719
 6397 2c4c 4939C0   		cmpq	%rax, %r8
 6398 2c4f 762F     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6399              		.loc 1 170 8 view .LVU2720
 170:sieve_extend.c ****        index_ptr+=step;
 6400              		.loc 1 170 19 is_stmt 0 view .LVU2721
 6401 2c51 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6402              		.loc 1 171 8 is_stmt 1 view .LVU2722
 171:sieve_extend.c ****    }
 6403              		.loc 1 171 17 is_stmt 0 view .LVU2723
 6404 2c54 4801C8   		addq	%rcx, %rax
 6405              	.LVL408:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6406              		.loc 1 169 10 is_stmt 1 view .LVU2724
 6407 2c57 4939C0   		cmpq	%rax, %r8
 6408 2c5a 7624     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6409              		.loc 1 170 8 view .LVU2725
 170:sieve_extend.c ****        index_ptr+=step;
 6410              		.loc 1 170 19 is_stmt 0 view .LVU2726
 6411 2c5c 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6412              		.loc 1 171 8 is_stmt 1 view .LVU2727
 171:sieve_extend.c ****    }
 6413              		.loc 1 171 17 is_stmt 0 view .LVU2728
 6414 2c5f 4801C8   		addq	%rcx, %rax
 6415              	.LVL409:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6416              		.loc 1 169 10 is_stmt 1 view .LVU2729
 6417 2c62 4939C0   		cmpq	%rax, %r8
 6418 2c65 7619     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6419              		.loc 1 170 8 view .LVU2730
 170:sieve_extend.c ****        index_ptr+=step;
 6420              		.loc 1 170 19 is_stmt 0 view .LVU2731
 6421 2c67 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 6422              		.loc 1 171 8 is_stmt 1 view .LVU2732
 171:sieve_extend.c ****    }
 6423              		.loc 1 171 17 is_stmt 0 view .LVU2733
 6424 2c6a 4801C8   		addq	%rcx, %rax
 6425              	.LVL410:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6426              		.loc 1 169 10 is_stmt 1 view .LVU2734
 6427 2c6d 4939C0   		cmpq	%rax, %r8
 6428 2c70 760E     		jbe	.L689
 170:sieve_extend.c ****        index_ptr+=step;
 6429              		.loc 1 170 8 view .LVU2735
 170:sieve_extend.c ****        index_ptr+=step;
 6430              		.loc 1 170 19 is_stmt 0 view .LVU2736
 6431 2c72 480910   		orq	%rdx, (%rax)
GAS LISTING /tmp/ccmX4xFB.s 			page 193


 171:sieve_extend.c ****    }
 6432              		.loc 1 171 8 is_stmt 1 view .LVU2737
 171:sieve_extend.c ****    }
 6433              		.loc 1 171 17 is_stmt 0 view .LVU2738
 6434 2c75 4801C8   		addq	%rcx, %rax
 6435              	.LVL411:
 169:sieve_extend.c ****        *index_ptr |= mask;
 6436              		.loc 1 169 10 is_stmt 1 view .LVU2739
 6437 2c78 4939C0   		cmpq	%rax, %r8
 6438 2c7b 77A8     		ja	.L690
 6439 2c7d 0F1F00   		.p2align 4,,10
 6440              		.p2align 3
 6441              	.L689:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 6442              		.loc 1 174 4 view .LVU2740
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 6443              		.loc 1 174 7 is_stmt 0 view .LVU2741
 6444 2c80 4939C0   		cmpq	%rax, %r8
 6445 2c83 0F846F04 		je	.L1554
 6445      0000
 6446              	.LVL412:
 6447              	.L691:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 6448              		.loc 1 174 7 view .LVU2742
 6449              	.LBE508:
 6450              	.LBE511:
 6451              	.LBE504:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 6452              		.loc 1 240 54 is_stmt 1 view .LVU2743
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 6453              		.loc 1 240 9 is_stmt 0 view .LVU2744
 6454 2c89 4C39D3   		cmpq	%r10, %rbx
 6455 2c8c 0F86AEFD 		jbe	.L692
 6455      FFFF
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 6456              		.loc 1 240 9 view .LVU2745
 6457 2c92 4C8B6424 		movq	80(%rsp), %r12
 6457      50
 6458              	.LVL413:
 6459              	.L675:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 6460              		.loc 1 240 9 view .LVU2746
 6461              	.LBE503:
 6462              	.LBE502:
 6463              	.LBE501:
 783:sieve_extend.c ****     } while (range_stop < block_stop);
 6464              		.loc 1 783 9 is_stmt 1 view .LVU2747
 783:sieve_extend.c ****     } while (range_stop < block_stop);
 6465              		.loc 1 783 9 is_stmt 0 view .LVU2748
 6466              	.LBE550:
 784:sieve_extend.c **** 
 6467              		.loc 1 784 13 is_stmt 1 view .LVU2749
 784:sieve_extend.c **** 
 6468              		.loc 1 784 5 is_stmt 0 view .LVU2750
 6469 2c97 4C3B7C24 		cmpq	8(%rsp), %r15
 6469      08
 6470 2c9c 0F831E04 		jnb	.L1555
GAS LISTING /tmp/ccmX4xFB.s 			page 194


 6470      0000
 6471              	.LVL414:
 6472              	.L699:
 761:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6473              		.loc 1 761 5 is_stmt 1 view .LVU2751
 6474              	.LBB551:
 762:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 6475              		.loc 1 762 9 view .LVU2752
 6476              	.LBB521:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 6477              		.loc 1 96 25 view .LVU2753
 6478              	.LBB499:
  97:sieve_extend.c ****     return index;
 6479              		.loc 1 97 5 view .LVU2754
  97:sieve_extend.c ****     return index;
 6480              		.loc 1 97 11 view .LVU2755
  97:sieve_extend.c ****     return index;
 6481              		.loc 1 97 21 is_stmt 0 view .LVU2756
 6482 2ca2 4D89E7   		movq	%r12, %r15
 6483 2ca5 49C1EF06 		shrq	$6, %r15
  97:sieve_extend.c ****     return index;
 6484              		.loc 1 97 12 view .LVU2757
 6485 2ca9 4F8B1CFE 		movq	(%r14,%r15,8), %r11
  97:sieve_extend.c ****     return index;
 6486              		.loc 1 97 11 view .LVU2758
 6487 2cad 4D0FA3E3 		btq	%r12, %r11
 6488 2cb1 0F83A900 		jnc	.L662
 6488      0000
  97:sieve_extend.c ****     return index;
 6489              		.loc 1 97 58 is_stmt 1 view .LVU2759
  97:sieve_extend.c ****     return index;
 6490              		.loc 1 97 63 is_stmt 0 view .LVU2760
 6491 2cb7 4D8D4424 		leaq	1(%r12), %r8
 6491      01
 6492              	.LVL415:
  97:sieve_extend.c ****     return index;
 6493              		.loc 1 97 21 view .LVU2761
 6494 2cbc 4C89C3   		movq	%r8, %rbx
 6495 2cbf 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 6496              		.loc 1 97 12 view .LVU2762
 6497 2cc3 498B3CDE 		movq	(%r14,%rbx,8), %rdi
  97:sieve_extend.c ****     return index;
 6498              		.loc 1 97 63 view .LVU2763
 6499 2cc7 4D89C4   		movq	%r8, %r12
  97:sieve_extend.c ****     return index;
 6500              		.loc 1 97 11 is_stmt 1 view .LVU2764
 6501 2cca 4C0FA3C7 		btq	%r8, %rdi
 6502 2cce 0F838C00 		jnc	.L662
 6502      0000
  97:sieve_extend.c ****     return index;
 6503              		.loc 1 97 58 view .LVU2765
 6504              	.LVL416:
  97:sieve_extend.c ****     return index;
 6505              		.loc 1 97 63 is_stmt 0 view .LVU2766
 6506 2cd4 49FFC4   		incq	%r12
 6507              	.LVL417:
GAS LISTING /tmp/ccmX4xFB.s 			page 195


  97:sieve_extend.c ****     return index;
 6508              		.loc 1 97 11 is_stmt 1 view .LVU2767
  97:sieve_extend.c ****     return index;
 6509              		.loc 1 97 21 is_stmt 0 view .LVU2768
 6510 2cd7 4C89E0   		movq	%r12, %rax
 6511 2cda 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 6512              		.loc 1 97 12 view .LVU2769
 6513 2cde 498B14C6 		movq	(%r14,%rax,8), %rdx
  97:sieve_extend.c ****     return index;
 6514              		.loc 1 97 11 view .LVU2770
 6515 2ce2 4C0FA3E2 		btq	%r12, %rdx
 6516 2ce6 7378     		jnc	.L662
  97:sieve_extend.c ****     return index;
 6517              		.loc 1 97 58 is_stmt 1 view .LVU2771
 6518              	.LVL418:
  97:sieve_extend.c ****     return index;
 6519              		.loc 1 97 63 is_stmt 0 view .LVU2772
 6520 2ce8 4D8D6002 		leaq	2(%r8), %r12
 6521              	.LVL419:
  97:sieve_extend.c ****     return index;
 6522              		.loc 1 97 11 is_stmt 1 view .LVU2773
  97:sieve_extend.c ****     return index;
 6523              		.loc 1 97 21 is_stmt 0 view .LVU2774
 6524 2cec 4C89E1   		movq	%r12, %rcx
 6525 2cef 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 6526              		.loc 1 97 12 view .LVU2775
 6527 2cf3 498B34CE 		movq	(%r14,%rcx,8), %rsi
  97:sieve_extend.c ****     return index;
 6528              		.loc 1 97 11 view .LVU2776
 6529 2cf7 4C0FA3E6 		btq	%r12, %rsi
 6530 2cfb 7363     		jnc	.L662
  97:sieve_extend.c ****     return index;
 6531              		.loc 1 97 58 is_stmt 1 view .LVU2777
 6532              	.LVL420:
  97:sieve_extend.c ****     return index;
 6533              		.loc 1 97 63 is_stmt 0 view .LVU2778
 6534 2cfd 4D8D6003 		leaq	3(%r8), %r12
 6535              	.LVL421:
  97:sieve_extend.c ****     return index;
 6536              		.loc 1 97 11 is_stmt 1 view .LVU2779
  97:sieve_extend.c ****     return index;
 6537              		.loc 1 97 21 is_stmt 0 view .LVU2780
 6538 2d01 4C89E5   		movq	%r12, %rbp
 6539 2d04 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
 6540              		.loc 1 97 12 view .LVU2781
 6541 2d08 4D8B14EE 		movq	(%r14,%rbp,8), %r10
  97:sieve_extend.c ****     return index;
 6542              		.loc 1 97 11 view .LVU2782
 6543 2d0c 4D0FA3E2 		btq	%r12, %r10
 6544 2d10 734E     		jnc	.L662
  97:sieve_extend.c ****     return index;
 6545              		.loc 1 97 58 is_stmt 1 view .LVU2783
 6546              	.LVL422:
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 196


 6547              		.loc 1 97 63 is_stmt 0 view .LVU2784
 6548 2d12 4D8D6004 		leaq	4(%r8), %r12
 6549              	.LVL423:
  97:sieve_extend.c ****     return index;
 6550              		.loc 1 97 11 is_stmt 1 view .LVU2785
  97:sieve_extend.c ****     return index;
 6551              		.loc 1 97 21 is_stmt 0 view .LVU2786
 6552 2d16 4D89E1   		movq	%r12, %r9
 6553 2d19 49C1E906 		shrq	$6, %r9
  97:sieve_extend.c ****     return index;
 6554              		.loc 1 97 12 view .LVU2787
 6555 2d1d 4F8B3CCE 		movq	(%r14,%r9,8), %r15
  97:sieve_extend.c ****     return index;
 6556              		.loc 1 97 11 view .LVU2788
 6557 2d21 4D0FA3E7 		btq	%r12, %r15
 6558 2d25 7339     		jnc	.L662
  97:sieve_extend.c ****     return index;
 6559              		.loc 1 97 58 is_stmt 1 view .LVU2789
 6560              	.LVL424:
  97:sieve_extend.c ****     return index;
 6561              		.loc 1 97 63 is_stmt 0 view .LVU2790
 6562 2d27 4D8D6005 		leaq	5(%r8), %r12
 6563              	.LVL425:
  97:sieve_extend.c ****     return index;
 6564              		.loc 1 97 11 is_stmt 1 view .LVU2791
  97:sieve_extend.c ****     return index;
 6565              		.loc 1 97 21 is_stmt 0 view .LVU2792
 6566 2d2b 4D89E3   		movq	%r12, %r11
 6567 2d2e 49C1EB06 		shrq	$6, %r11
  97:sieve_extend.c ****     return index;
 6568              		.loc 1 97 12 view .LVU2793
 6569 2d32 4B8B1CDE 		movq	(%r14,%r11,8), %rbx
  97:sieve_extend.c ****     return index;
 6570              		.loc 1 97 11 view .LVU2794
 6571 2d36 4C0FA3E3 		btq	%r12, %rbx
 6572 2d3a 7324     		jnc	.L662
  97:sieve_extend.c ****     return index;
 6573              		.loc 1 97 58 is_stmt 1 view .LVU2795
 6574              	.LVL426:
  97:sieve_extend.c ****     return index;
 6575              		.loc 1 97 63 is_stmt 0 view .LVU2796
 6576 2d3c 4D8D6006 		leaq	6(%r8), %r12
 6577              	.LVL427:
  97:sieve_extend.c ****     return index;
 6578              		.loc 1 97 11 is_stmt 1 view .LVU2797
  97:sieve_extend.c ****     return index;
 6579              		.loc 1 97 21 is_stmt 0 view .LVU2798
 6580 2d40 4C89E7   		movq	%r12, %rdi
 6581 2d43 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 6582              		.loc 1 97 12 view .LVU2799
 6583 2d47 498B04FE 		movq	(%r14,%rdi,8), %rax
  97:sieve_extend.c ****     return index;
 6584              		.loc 1 97 11 view .LVU2800
 6585 2d4b 4C0FA3E0 		btq	%r12, %rax
 6586 2d4f 730F     		jnc	.L662
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 197


 6587              		.loc 1 97 58 is_stmt 1 view .LVU2801
 6588              	.LVL428:
  97:sieve_extend.c ****     return index;
 6589              		.loc 1 97 63 is_stmt 0 view .LVU2802
 6590 2d51 4D8D6007 		leaq	7(%r8), %r12
 6591              	.LVL429:
  97:sieve_extend.c ****     return index;
 6592              		.loc 1 97 11 is_stmt 1 view .LVU2803
 6593 2d55 E948FFFF 		jmp	.L699
 6593      FF
 6594              	.LVL430:
 6595 2d5a 660F1F44 		.p2align 4,,10
 6595      0000
 6596              		.p2align 3
 6597              	.L662:
  97:sieve_extend.c ****     return index;
 6598              		.loc 1 97 11 is_stmt 0 view .LVU2804
 6599              	.LBE499:
 6600              	.LBE521:
 6601              	.LBE551:
 6602              	.LBE558:
 6603              	.LBE576:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6604              		.loc 1 789 86 view .LVU2805
 6605 2d60 4C89EA   		movq	%r13, %rdx
 6606              	.LVL431:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6607              		.loc 1 789 86 view .LVU2806
 6608 2d63 4C8B6C24 		movq	32(%rsp), %r13
 6608      20
 6609 2d68 488B7424 		movq	24(%rsp), %rsi
 6609      18
 6610              	.LBB577:
 6611              	.LBB559:
 6612              	.LBB552:
 778:sieve_extend.c **** 
 6613              		.loc 1 778 26 view .LVU2807
 6614 2d6d 4C8B4424 		movq	16(%rsp), %r8
 6614      10
 6615              	.LBE552:
 6616              	.LBE559:
 6617              	.LBE577:
 789:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6618              		.loc 1 789 86 view .LVU2808
 6619 2d72 4C896C24 		movq	%r13, 24(%rsp)
 6619      18
 6620              	.LVL432:
 6621              	.LBB578:
 6622              	.LBB560:
 6623              	.LBB553:
 778:sieve_extend.c **** 
 6624              		.loc 1 778 26 view .LVU2809
 6625 2d77 4C896424 		movq	%r12, 16(%rsp)
 6625      10
 6626 2d7c 4C8B6C24 		movq	40(%rsp), %r13
 6626      28
 778:sieve_extend.c **** 
GAS LISTING /tmp/ccmX4xFB.s 			page 198


 6627              		.loc 1 778 26 view .LVU2810
 6628 2d81 4C89E1   		movq	%r12, %rcx
 6629 2d84 E9B7FBFF 		jmp	.L661
 6629      FF
 6630              	.LVL433:
 6631 2d89 0F1F8000 		.p2align 4,,10
 6631      000000
 6632              		.p2align 3
 6633              	.L1552:
 775:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 6634              		.loc 1 775 13 is_stmt 1 view .LVU2811
 776:sieve_extend.c ****         }
 6635              		.loc 1 776 13 view .LVU2812
 6636              	.LBB522:
 6637              	.LBI522:
 667:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 6638              		.loc 1 667 20 view .LVU2813
 6639              	.LBB523:
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 6640              		.loc 1 668 5 view .LVU2814
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 6641              		.loc 1 668 8 is_stmt 0 view .LVU2815
 6642 2d90 4983FD3F 		cmpq	$63, %r13
 6643 2d94 0F869506 		jbe	.L1556
 6643      0000
 673:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 6644              		.loc 1 673 5 is_stmt 1 view .LVU2816
 6645              	.LVL434:
 674:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 6646              		.loc 1 674 5 view .LVU2817
 673:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 6647              		.loc 1 673 21 is_stmt 0 view .LVU2818
 6648 2d9a 4B8D7C2D 		leaq	(%r13,%r13), %rdi
 6648      00
 675:sieve_extend.c **** 
 6649              		.loc 1 675 22 view .LVU2819
 6650 2d9f 4D89E8   		movq	%r13, %r8
 674:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 6651              		.loc 1 674 22 view .LVU2820
 6652 2da2 83E73F   		andl	$63, %edi
 6653              	.LVL435:
 675:sieve_extend.c **** 
 6654              		.loc 1 675 5 is_stmt 1 view .LVU2821
 675:sieve_extend.c **** 
 6655              		.loc 1 675 22 is_stmt 0 view .LVU2822
 6656 2da5 4183E03F 		andl	$63, %r8d
 6657              	.LVL436:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 6658              		.loc 1 677 5 is_stmt 1 view .LVU2823
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 6659              		.loc 1 677 13 is_stmt 0 view .LVU2824
 6660 2da9 4C39C7   		cmpq	%r8, %rdi
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 6661              		.loc 1 677 37 view .LVU2825
 6662 2dac 4C89F9   		movq	%r15, %rcx
 6663 2daf 4C89EA   		movq	%r13, %rdx
 6664 2db2 4C89EE   		movq	%r13, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 199


 6665 2db5 4C89F7   		movq	%r14, %rdi
 6666              	.LVL437:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 6667              		.loc 1 677 13 view .LVU2826
 6668 2db8 0F826206 		jb	.L1557
 6668      0000
 6669              	.LVL438:
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 6670              		.loc 1 678 10 is_stmt 1 view .LVU2827
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 6671              		.loc 1 678 13 is_stmt 0 view .LVU2828
 6672 2dbe 0F864406 		jbe	.L670
 6672      0000
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 6673              		.loc 1 678 37 is_stmt 1 view .LVU2829
 6674 2dc4 E8F7D5FF 		call	extendSieve_shiftright_ivdep
 6674      FF
 6675              	.LVL439:
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 6676              		.loc 1 678 37 is_stmt 0 view .LVU2830
 6677              	.LBE523:
 6678              	.LBE522:
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 6679              		.loc 1 780 17 view .LVU2831
 6680 2dc9 483B2D00 		cmpq	global_SMALLSTEP_FASTER(%rip), %rbp
 6680      000000
 6681              	.LBB526:
 6682              	.LBB524:
 6683 2dd0 4C896C24 		movq	%r13, 32(%rsp)
 6683      20
 6684              	.LVL440:
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 6685              		.loc 1 780 17 view .LVU2832
 6686              	.LBE524:
 6687              	.LBE526:
 778:sieve_extend.c **** 
 6688              		.loc 1 778 9 is_stmt 1 view .LVU2833
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 6689              		.loc 1 780 9 view .LVU2834
 780:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER) setBitsTrue_mediumStep(bitarray, start, step, range_stop
 6690              		.loc 1 780 17 is_stmt 0 view .LVU2835
 6691 2dd5 0F83D9FB 		jnb	.L671
 6691      FFFF
 6692              	.LVL441:
 6693 2ddb 0F1F4400 		.p2align 4,,10
 6693      00
 6694              		.p2align 3
 6695              	.L1553:
 6696              	.LBB527:
 6697              	.LBB528:
 6698              	.LBB529:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6699              		.loc 1 187 41 is_stmt 1 view .LVU2836
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6700              		.loc 1 187 5 is_stmt 0 view .LVU2837
 6701 2de0 4883FD40 		cmpq	$64, %rbp
 6702 2de4 0F87341F 		ja	.L787
GAS LISTING /tmp/ccmX4xFB.s 			page 200


 6702      0000
 6703 2dea 4989EA   		movq	%rbp, %r10
 6704              	.LBE529:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 6705              		.loc 1 186 12 view .LVU2838
 6706 2ded B9010000 		movl	$1, %ecx
 6706      00
 6707              	.LVL442:
 6708              	.L673:
 6709              	.LBB530:
 188:sieve_extend.c ****     }
 6710              		.loc 1 188 9 is_stmt 1 view .LVU2839
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6711              		.loc 1 187 79 is_stmt 0 view .LVU2840
 6712 2df2 4F8D0412 		leaq	(%r10,%r10), %r8
 188:sieve_extend.c ****     }
 6713              		.loc 1 188 29 view .LVU2841
 6714 2df6 C4E2A9F7 		shlx	%r10, %rcx, %rdi
 6714      F9
 188:sieve_extend.c ****     }
 6715              		.loc 1 188 17 view .LVU2842
 6716 2dfb 4809F9   		orq	%rdi, %rcx
 6717              	.LVL443:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6718              		.loc 1 187 67 is_stmt 1 view .LVU2843
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6719              		.loc 1 187 41 view .LVU2844
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6720              		.loc 1 187 5 is_stmt 0 view .LVU2845
 6721 2dfe 4983F840 		cmpq	$64, %r8
 6722 2e02 0F87A000 		ja	.L672
 6722      0000
 188:sieve_extend.c ****     }
 6723              		.loc 1 188 9 is_stmt 1 view .LVU2846
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6724              		.loc 1 187 79 is_stmt 0 view .LVU2847
 6725 2e08 4A8D3495 		leaq	0(,%r10,4), %rsi
 6725      00000000 
 188:sieve_extend.c ****     }
 6726              		.loc 1 188 29 view .LVU2848
 6727 2e10 C4E2B9F7 		shlx	%r8, %rcx, %rax
 6727      C1
 188:sieve_extend.c ****     }
 6728              		.loc 1 188 17 view .LVU2849
 6729 2e15 4809C1   		orq	%rax, %rcx
 6730              	.LVL444:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6731              		.loc 1 187 67 is_stmt 1 view .LVU2850
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6732              		.loc 1 187 41 view .LVU2851
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6733              		.loc 1 187 5 is_stmt 0 view .LVU2852
 6734 2e18 4883FE40 		cmpq	$64, %rsi
 6735 2e1c 0F878600 		ja	.L672
 6735      0000
 188:sieve_extend.c ****     }
 6736              		.loc 1 188 9 is_stmt 1 view .LVU2853
GAS LISTING /tmp/ccmX4xFB.s 			page 201


 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6737              		.loc 1 187 79 is_stmt 0 view .LVU2854
 6738 2e22 4E8D1CD5 		leaq	0(,%r10,8), %r11
 6738      00000000 
 188:sieve_extend.c ****     }
 6739              		.loc 1 188 29 view .LVU2855
 6740 2e2a C462C9F7 		shlx	%rsi, %rcx, %r9
 6740      C9
 188:sieve_extend.c ****     }
 6741              		.loc 1 188 17 view .LVU2856
 6742 2e2f 4C09C9   		orq	%r9, %rcx
 6743              	.LVL445:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6744              		.loc 1 187 67 is_stmt 1 view .LVU2857
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6745              		.loc 1 187 41 view .LVU2858
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6746              		.loc 1 187 5 is_stmt 0 view .LVU2859
 6747 2e32 4983FB40 		cmpq	$64, %r11
 6748 2e36 7770     		ja	.L672
 188:sieve_extend.c ****     }
 6749              		.loc 1 188 9 is_stmt 1 view .LVU2860
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6750              		.loc 1 187 79 is_stmt 0 view .LVU2861
 6751 2e38 4C89D7   		movq	%r10, %rdi
 6752 2e3b 48C1E704 		salq	$4, %rdi
 188:sieve_extend.c ****     }
 6753              		.loc 1 188 29 view .LVU2862
 6754 2e3f C4E2A1F7 		shlx	%r11, %rcx, %rdx
 6754      D1
 188:sieve_extend.c ****     }
 6755              		.loc 1 188 17 view .LVU2863
 6756 2e44 4809D1   		orq	%rdx, %rcx
 6757              	.LVL446:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6758              		.loc 1 187 67 is_stmt 1 view .LVU2864
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6759              		.loc 1 187 41 view .LVU2865
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6760              		.loc 1 187 5 is_stmt 0 view .LVU2866
 6761 2e47 4883FF40 		cmpq	$64, %rdi
 6762 2e4b 775B     		ja	.L672
 188:sieve_extend.c ****     }
 6763              		.loc 1 188 9 is_stmt 1 view .LVU2867
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6764              		.loc 1 187 79 is_stmt 0 view .LVU2868
 6765 2e4d 4C89D0   		movq	%r10, %rax
 6766 2e50 48C1E005 		salq	$5, %rax
 188:sieve_extend.c ****     }
 6767              		.loc 1 188 29 view .LVU2869
 6768 2e54 C462C1F7 		shlx	%rdi, %rcx, %r8
 6768      C1
 188:sieve_extend.c ****     }
 6769              		.loc 1 188 17 view .LVU2870
 6770 2e59 4C09C1   		orq	%r8, %rcx
 6771              	.LVL447:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccmX4xFB.s 			page 202


 6772              		.loc 1 187 67 is_stmt 1 view .LVU2871
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6773              		.loc 1 187 41 view .LVU2872
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6774              		.loc 1 187 5 is_stmt 0 view .LVU2873
 6775 2e5c 4883F840 		cmpq	$64, %rax
 6776 2e60 7746     		ja	.L672
 188:sieve_extend.c ****     }
 6777              		.loc 1 188 9 is_stmt 1 view .LVU2874
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6778              		.loc 1 187 79 is_stmt 0 view .LVU2875
 6779 2e62 4D89D1   		movq	%r10, %r9
 6780 2e65 49C1E106 		salq	$6, %r9
 188:sieve_extend.c ****     }
 6781              		.loc 1 188 29 view .LVU2876
 6782 2e69 C4E2F9F7 		shlx	%rax, %rcx, %rsi
 6782      F1
 188:sieve_extend.c ****     }
 6783              		.loc 1 188 17 view .LVU2877
 6784 2e6e 4809F1   		orq	%rsi, %rcx
 6785              	.LVL448:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6786              		.loc 1 187 67 is_stmt 1 view .LVU2878
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6787              		.loc 1 187 41 view .LVU2879
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6788              		.loc 1 187 5 is_stmt 0 view .LVU2880
 6789 2e71 4983F940 		cmpq	$64, %r9
 6790 2e75 7731     		ja	.L672
 188:sieve_extend.c ****     }
 6791              		.loc 1 188 9 is_stmt 1 view .LVU2881
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6792              		.loc 1 187 79 is_stmt 0 view .LVU2882
 6793 2e77 4C89D2   		movq	%r10, %rdx
 6794 2e7a 48C1E207 		salq	$7, %rdx
 188:sieve_extend.c ****     }
 6795              		.loc 1 188 29 view .LVU2883
 6796 2e7e C462B1F7 		shlx	%r9, %rcx, %r11
 6796      D9
 188:sieve_extend.c ****     }
 6797              		.loc 1 188 17 view .LVU2884
 6798 2e83 4C09D9   		orq	%r11, %rcx
 6799              	.LVL449:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6800              		.loc 1 187 67 is_stmt 1 view .LVU2885
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6801              		.loc 1 187 41 view .LVU2886
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6802              		.loc 1 187 5 is_stmt 0 view .LVU2887
 6803 2e86 4883FA40 		cmpq	$64, %rdx
 6804 2e8a 771C     		ja	.L672
 188:sieve_extend.c ****     }
 6805              		.loc 1 188 9 is_stmt 1 view .LVU2888
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6806              		.loc 1 187 79 is_stmt 0 view .LVU2889
 6807 2e8c 49C1E208 		salq	$8, %r10
 188:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 203


 6808              		.loc 1 188 29 view .LVU2890
 6809 2e90 C4E2E9F7 		shlx	%rdx, %rcx, %rdi
 6809      F9
 188:sieve_extend.c ****     }
 6810              		.loc 1 188 17 view .LVU2891
 6811 2e95 4809F9   		orq	%rdi, %rcx
 6812              	.LVL450:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6813              		.loc 1 187 67 is_stmt 1 view .LVU2892
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6814              		.loc 1 187 41 view .LVU2893
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6815              		.loc 1 187 5 is_stmt 0 view .LVU2894
 6816 2e98 4983FA40 		cmpq	$64, %r10
 6817 2e9c 0F8650FF 		jbe	.L673
 6817      FFFF
 6818              	.LVL451:
 6819              		.p2align 4,,10
 6820 2ea2 660F1F44 		.p2align 3
 6820      0000
 6821              	.L672:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 6822              		.loc 1 187 5 view .LVU2895
 6823              	.LBE530:
 191:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 6824              		.loc 1 191 5 is_stmt 1 view .LVU2896
 192:sieve_extend.c ****  
 6825              		.loc 1 192 15 is_stmt 0 view .LVU2897
 6826 2ea8 4989D9   		movq	%rbx, %r9
 6827 2eab 49C1E906 		shrq	$6, %r9
 191:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 6828              		.loc 1 191 21 view .LVU2898
 6829 2eaf 4D89FA   		movq	%r15, %r10
 6830 2eb2 4A8D34CD 		leaq	0(,%r9,8), %rsi
 6830      00000000 
 6831 2eba 4589F8   		movl	%r15d, %r8d
 6832 2ebd 498D1436 		leaq	(%r14,%rsi), %rdx
 6833 2ec1 41F7D0   		notl	%r8d
 6834 2ec4 49C7C3FF 		movq	$-1, %r11
 6834      FFFFFF
 6835 2ecb 49C1EA06 		shrq	$6, %r10
 6836              	.LVL452:
 192:sieve_extend.c ****  
 6837              		.loc 1 192 5 is_stmt 1 view .LVU2899
 194:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask2(range_stop)) ;
 6838              		.loc 1 194 5 view .LVU2900
 6839 2ecf C442BBF7 		shrx	%r8, %r11, %r8
 6839      C3
 6840 2ed4 488B02   		movq	(%rdx), %rax
 6841 2ed7 4C894424 		movq	%r8, 80(%rsp)
 6841      50
 6842 2edc C4E2E1F7 		shlx	%rbx, %rcx, %rdi
 6842      F9
 194:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask2(range_stop)) ;
 6843              		.loc 1 194 8 is_stmt 0 view .LVU2901
 6844 2ee1 4D39CA   		cmpq	%r9, %r10
 6845 2ee4 0F846005 		je	.L1558
GAS LISTING /tmp/ccmX4xFB.s 			page 204


 6845      0000
 201:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 6846              		.loc 1 201 5 is_stmt 1 view .LVU2902
 201:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 6847              		.loc 1 201 25 is_stmt 0 view .LVU2903
 6848 2eea 4809F8   		orq	%rdi, %rax
 6849 2eed 488902   		movq	%rax, (%rdx)
 202:sieve_extend.c **** 
 6850              		.loc 1 202 5 is_stmt 1 view .LVU2904
 202:sieve_extend.c **** 
 6851              		.loc 1 202 28 is_stmt 0 view .LVU2905
 6852 2ef0 4889D8   		movq	%rbx, %rax
 6853 2ef3 83E03F   		andl	$63, %eax
 202:sieve_extend.c **** 
 6854              		.loc 1 202 55 view .LVU2906
 6855 2ef6 31D2     		xorl	%edx, %edx
 6856 2ef8 48F7F5   		divq	%rbp
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 6857              		.loc 1 204 16 view .LVU2907
 6858 2efb B8400000 		movl	$64, %eax
 6858      00
 205:sieve_extend.c ****     copy_word++;
 6859              		.loc 1 205 78 view .LVU2908
 6860 2f00 BB200000 		movl	$32, %ebx
 6860      00
 6861              	.LVL453:
 202:sieve_extend.c **** 
 6862              		.loc 1 202 13 view .LVU2909
 6863 2f05 C4E2E9F7 		shlx	%rdx, %rcx, %rcx
 6863      C9
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 6864              		.loc 1 204 5 is_stmt 1 view .LVU2910
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 6865              		.loc 1 204 16 is_stmt 0 view .LVU2911
 6866 2f0a 31D2     		xorl	%edx, %edx
 6867 2f0c 48F7F5   		divq	%rbp
 206:sieve_extend.c **** 
 6868              		.loc 1 206 14 view .LVU2912
 6869 2f0f 498D6901 		leaq	1(%r9), %rbp
 6870              	.LVL454:
 205:sieve_extend.c ****     copy_word++;
 6871              		.loc 1 205 78 view .LVU2913
 6872 2f13 4829D3   		subq	%rdx, %rbx
 205:sieve_extend.c ****     copy_word++;
 6873              		.loc 1 205 16 view .LVU2914
 6874 2f16 4801DB   		addq	%rbx, %rbx
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 6875              		.loc 1 204 16 view .LVU2915
 6876 2f19 4989D3   		movq	%rdx, %r11
 6877              	.LVL455:
 205:sieve_extend.c ****     copy_word++;
 6878              		.loc 1 205 5 is_stmt 1 view .LVU2916
 206:sieve_extend.c **** 
 6879              		.loc 1 206 5 view .LVU2917
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6880              		.loc 1 208 5 view .LVU2918
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccmX4xFB.s 			page 205


 6881              		.loc 1 208 11 view .LVU2919
 6882 2f1c 4189D0   		movl	%edx, %r8d
 6883 2f1f 89DF     		movl	%ebx, %edi
 6884 2f21 4939EA   		cmpq	%rbp, %r10
 6885 2f24 0F867501 		jbe	.L676
 6885      0000
 6886 2f2a 4B8D14D6 		leaq	(%r14,%r10,8), %rdx
 6887              	.LVL456:
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6888              		.loc 1 208 11 is_stmt 0 view .LVU2920
 6889 2f2e 498D4436 		leaq	8(%r14,%rsi), %rax
 6889      08
 6890 2f33 4889D6   		movq	%rdx, %rsi
 6891 2f36 4829C6   		subq	%rax, %rsi
 6892 2f39 4883EE08 		subq	$8, %rsi
 6893 2f3d 48C1EE03 		shrq	$3, %rsi
 6894 2f41 48FFC6   		incq	%rsi
 6895 2f44 48895424 		movq	%rdx, 48(%rsp)
 6895      30
 6896 2f49 83E607   		andl	$7, %esi
 6897 2f4c 0F84AF00 		je	.L677
 6897      0000
 6898 2f52 4883FE01 		cmpq	$1, %rsi
 6899 2f56 0F848600 		je	.L1108
 6899      0000
 6900 2f5c 4883FE02 		cmpq	$2, %rsi
 6901 2f60 746C     		je	.L1109
 6902 2f62 4883FE03 		cmpq	$3, %rsi
 6903 2f66 7452     		je	.L1110
 6904 2f68 4883FE04 		cmpq	$4, %rsi
 6905 2f6c 7438     		je	.L1111
 6906 2f6e 4883FE05 		cmpq	$5, %rsi
 6907 2f72 741E     		je	.L1112
 6908 2f74 4883FE06 		cmpq	$6, %rsi
 6909 2f78 0F85DA04 		jne	.L1559
 6909      0000
 6910              	.LVL457:
 6911              	.L1113:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6912              		.loc 1 209 9 is_stmt 1 view .LVU2921
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6913              		.loc 1 209 28 is_stmt 0 view .LVU2922
 6914 2f7e C4E2BBF7 		shrx	%r8, %rcx, %rsi
 6914      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6915              		.loc 1 209 57 view .LVU2923
 6916 2f83 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 6916      C9
 6917              	.LVL458:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6918              		.loc 1 209 17 view .LVU2924
 6919 2f88 4809F1   		orq	%rsi, %rcx
 6920              	.LVL459:
 210:sieve_extend.c ****         copy_word++;
 6921              		.loc 1 210 9 is_stmt 1 view .LVU2925
 210:sieve_extend.c ****         copy_word++;
 6922              		.loc 1 210 29 is_stmt 0 view .LVU2926
GAS LISTING /tmp/ccmX4xFB.s 			page 206


 6923 2f8b 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 6924              		.loc 1 211 9 is_stmt 1 view .LVU2927
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6925              		.loc 1 208 11 view .LVU2928
 6926 2f8e 4883C008 		addq	$8, %rax
 6927              	.LVL460:
 6928              	.L1112:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6929              		.loc 1 209 9 view .LVU2929
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6930              		.loc 1 209 28 is_stmt 0 view .LVU2930
 6931 2f92 C4E2BBF7 		shrx	%r8, %rcx, %rdx
 6931      D1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6932              		.loc 1 209 57 view .LVU2931
 6933 2f97 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 6933      C9
 6934              	.LVL461:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6935              		.loc 1 209 17 view .LVU2932
 6936 2f9c 4809D1   		orq	%rdx, %rcx
 6937              	.LVL462:
 210:sieve_extend.c ****         copy_word++;
 6938              		.loc 1 210 9 is_stmt 1 view .LVU2933
 210:sieve_extend.c ****         copy_word++;
 6939              		.loc 1 210 29 is_stmt 0 view .LVU2934
 6940 2f9f 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 6941              		.loc 1 211 9 is_stmt 1 view .LVU2935
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6942              		.loc 1 208 11 view .LVU2936
 6943 2fa2 4883C008 		addq	$8, %rax
 6944              	.LVL463:
 6945              	.L1111:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6946              		.loc 1 209 9 view .LVU2937
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6947              		.loc 1 209 28 is_stmt 0 view .LVU2938
 6948 2fa6 C4E2BBF7 		shrx	%r8, %rcx, %rsi
 6948      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6949              		.loc 1 209 57 view .LVU2939
 6950 2fab C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 6950      C9
 6951              	.LVL464:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6952              		.loc 1 209 17 view .LVU2940
 6953 2fb0 4809F1   		orq	%rsi, %rcx
 6954              	.LVL465:
 210:sieve_extend.c ****         copy_word++;
 6955              		.loc 1 210 9 is_stmt 1 view .LVU2941
 210:sieve_extend.c ****         copy_word++;
 6956              		.loc 1 210 29 is_stmt 0 view .LVU2942
 6957 2fb3 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 6958              		.loc 1 211 9 is_stmt 1 view .LVU2943
GAS LISTING /tmp/ccmX4xFB.s 			page 207


 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6959              		.loc 1 208 11 view .LVU2944
 6960 2fb6 4883C008 		addq	$8, %rax
 6961              	.LVL466:
 6962              	.L1110:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6963              		.loc 1 209 9 view .LVU2945
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6964              		.loc 1 209 28 is_stmt 0 view .LVU2946
 6965 2fba C4E2BBF7 		shrx	%r8, %rcx, %rdx
 6965      D1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6966              		.loc 1 209 57 view .LVU2947
 6967 2fbf C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 6967      C9
 6968              	.LVL467:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6969              		.loc 1 209 17 view .LVU2948
 6970 2fc4 4809D1   		orq	%rdx, %rcx
 6971              	.LVL468:
 210:sieve_extend.c ****         copy_word++;
 6972              		.loc 1 210 9 is_stmt 1 view .LVU2949
 210:sieve_extend.c ****         copy_word++;
 6973              		.loc 1 210 29 is_stmt 0 view .LVU2950
 6974 2fc7 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 6975              		.loc 1 211 9 is_stmt 1 view .LVU2951
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6976              		.loc 1 208 11 view .LVU2952
 6977 2fca 4883C008 		addq	$8, %rax
 6978              	.LVL469:
 6979              	.L1109:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6980              		.loc 1 209 9 view .LVU2953
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6981              		.loc 1 209 28 is_stmt 0 view .LVU2954
 6982 2fce C4E2BBF7 		shrx	%r8, %rcx, %rsi
 6982      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6983              		.loc 1 209 57 view .LVU2955
 6984 2fd3 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 6984      C9
 6985              	.LVL470:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6986              		.loc 1 209 17 view .LVU2956
 6987 2fd8 4809F1   		orq	%rsi, %rcx
 6988              	.LVL471:
 210:sieve_extend.c ****         copy_word++;
 6989              		.loc 1 210 9 is_stmt 1 view .LVU2957
 210:sieve_extend.c ****         copy_word++;
 6990              		.loc 1 210 29 is_stmt 0 view .LVU2958
 6991 2fdb 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 6992              		.loc 1 211 9 is_stmt 1 view .LVU2959
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 6993              		.loc 1 208 11 view .LVU2960
 6994 2fde 4883C008 		addq	$8, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 208


 6995              	.LVL472:
 6996              	.L1108:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6997              		.loc 1 209 9 view .LVU2961
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 6998              		.loc 1 209 28 is_stmt 0 view .LVU2962
 6999 2fe2 C4E2BBF7 		shrx	%r8, %rcx, %rdx
 6999      D1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7000              		.loc 1 209 57 view .LVU2963
 7001 2fe7 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 7001      C9
 7002              	.LVL473:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7003              		.loc 1 209 17 view .LVU2964
 7004 2fec 4809D1   		orq	%rdx, %rcx
 7005              	.LVL474:
 210:sieve_extend.c ****         copy_word++;
 7006              		.loc 1 210 9 is_stmt 1 view .LVU2965
 210:sieve_extend.c ****         copy_word++;
 7007              		.loc 1 210 29 is_stmt 0 view .LVU2966
 7008 2fef 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 7009              		.loc 1 211 9 is_stmt 1 view .LVU2967
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7010              		.loc 1 208 11 view .LVU2968
 7011 2ff2 4883C008 		addq	$8, %rax
 7012 2ff6 48394424 		cmpq	%rax, 48(%rsp)
 7012      30
 7013 2ffb 0F849600 		je	.L1346
 7013      0000
 7014              	.LVL475:
 7015              	.L677:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7016              		.loc 1 209 9 view .LVU2969
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7017              		.loc 1 209 28 is_stmt 0 view .LVU2970
 7018 3001 C4E2BBF7 		shrx	%r8, %rcx, %rsi
 7018      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7019              		.loc 1 209 57 view .LVU2971
 7020 3006 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 7020      C9
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7021              		.loc 1 209 17 view .LVU2972
 7022 300b 4809F1   		orq	%rsi, %rcx
 210:sieve_extend.c ****         copy_word++;
 7023              		.loc 1 210 9 is_stmt 1 view .LVU2973
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7024              		.loc 1 209 28 is_stmt 0 view .LVU2974
 7025 300e C4E2BBF7 		shrx	%r8, %rcx, %rdx
 7025      D1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7026              		.loc 1 209 57 view .LVU2975
 7027 3013 C4E2C1F7 		shlx	%rdi, %rcx, %rsi
 7027      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/ccmX4xFB.s 			page 209


 7028              		.loc 1 209 17 view .LVU2976
 7029 3018 4809D6   		orq	%rdx, %rsi
 210:sieve_extend.c ****         copy_word++;
 7030              		.loc 1 210 29 view .LVU2977
 7031 301b 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 7032              		.loc 1 211 9 is_stmt 1 view .LVU2978
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7033              		.loc 1 208 11 view .LVU2979
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7034              		.loc 1 209 9 view .LVU2980
 210:sieve_extend.c ****         copy_word++;
 7035              		.loc 1 210 9 view .LVU2981
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7036              		.loc 1 209 28 is_stmt 0 view .LVU2982
 7037 301e C4E2BBF7 		shrx	%r8, %rsi, %rdx
 7037      D6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7038              		.loc 1 209 57 view .LVU2983
 7039 3023 C4E2C1F7 		shlx	%rdi, %rsi, %rcx
 7039      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7040              		.loc 1 209 17 view .LVU2984
 7041 3028 4809CA   		orq	%rcx, %rdx
 210:sieve_extend.c ****         copy_word++;
 7042              		.loc 1 210 29 view .LVU2985
 7043 302b 48097008 		orq	%rsi, 8(%rax)
 211:sieve_extend.c ****     } 
 7044              		.loc 1 211 9 is_stmt 1 view .LVU2986
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7045              		.loc 1 208 11 view .LVU2987
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7046              		.loc 1 209 9 view .LVU2988
 210:sieve_extend.c ****         copy_word++;
 7047              		.loc 1 210 9 view .LVU2989
 210:sieve_extend.c ****         copy_word++;
 7048              		.loc 1 210 29 is_stmt 0 view .LVU2990
 7049 302f 48095010 		orq	%rdx, 16(%rax)
 211:sieve_extend.c ****     } 
 7050              		.loc 1 211 9 is_stmt 1 view .LVU2991
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7051              		.loc 1 208 11 view .LVU2992
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7052              		.loc 1 209 9 view .LVU2993
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7053              		.loc 1 209 28 is_stmt 0 view .LVU2994
 7054 3033 C4E2BBF7 		shrx	%r8, %rdx, %rsi
 7054      F2
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7055              		.loc 1 209 57 view .LVU2995
 7056 3038 C4E2C1F7 		shlx	%rdi, %rdx, %rdx
 7056      D2
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7057              		.loc 1 209 17 view .LVU2996
 7058 303d 4809D6   		orq	%rdx, %rsi
 210:sieve_extend.c ****         copy_word++;
 7059              		.loc 1 210 9 is_stmt 1 view .LVU2997
GAS LISTING /tmp/ccmX4xFB.s 			page 210


 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7060              		.loc 1 209 57 is_stmt 0 view .LVU2998
 7061 3040 C4E2C1F7 		shlx	%rdi, %rsi, %rcx
 7061      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7062              		.loc 1 209 28 view .LVU2999
 7063 3045 C4E2BBF7 		shrx	%r8, %rsi, %rdx
 7063      D6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7064              		.loc 1 209 17 view .LVU3000
 7065 304a 4809CA   		orq	%rcx, %rdx
 210:sieve_extend.c ****         copy_word++;
 7066              		.loc 1 210 29 view .LVU3001
 7067 304d 48097018 		orq	%rsi, 24(%rax)
 211:sieve_extend.c ****     } 
 7068              		.loc 1 211 9 is_stmt 1 view .LVU3002
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7069              		.loc 1 208 11 view .LVU3003
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7070              		.loc 1 209 9 view .LVU3004
 210:sieve_extend.c ****         copy_word++;
 7071              		.loc 1 210 9 view .LVU3005
 210:sieve_extend.c ****         copy_word++;
 7072              		.loc 1 210 29 is_stmt 0 view .LVU3006
 7073 3051 48095020 		orq	%rdx, 32(%rax)
 211:sieve_extend.c ****     } 
 7074              		.loc 1 211 9 is_stmt 1 view .LVU3007
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7075              		.loc 1 208 11 view .LVU3008
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7076              		.loc 1 209 9 view .LVU3009
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7077              		.loc 1 209 28 is_stmt 0 view .LVU3010
 7078 3055 C4E2BBF7 		shrx	%r8, %rdx, %rsi
 7078      F2
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7079              		.loc 1 209 57 view .LVU3011
 7080 305a C4E2C1F7 		shlx	%rdi, %rdx, %rdx
 7080      D2
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7081              		.loc 1 209 17 view .LVU3012
 7082 305f 4809D6   		orq	%rdx, %rsi
 210:sieve_extend.c ****         copy_word++;
 7083              		.loc 1 210 9 is_stmt 1 view .LVU3013
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7084              		.loc 1 209 57 is_stmt 0 view .LVU3014
 7085 3062 C4E2C1F7 		shlx	%rdi, %rsi, %rcx
 7085      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7086              		.loc 1 209 28 view .LVU3015
 7087 3067 C4E2BBF7 		shrx	%r8, %rsi, %rdx
 7087      D6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7088              		.loc 1 209 17 view .LVU3016
 7089 306c 4809CA   		orq	%rcx, %rdx
 210:sieve_extend.c ****         copy_word++;
 7090              		.loc 1 210 29 view .LVU3017
GAS LISTING /tmp/ccmX4xFB.s 			page 211


 7091 306f 48097028 		orq	%rsi, 40(%rax)
 211:sieve_extend.c ****     } 
 7092              		.loc 1 211 9 is_stmt 1 view .LVU3018
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7093              		.loc 1 208 11 view .LVU3019
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7094              		.loc 1 209 9 view .LVU3020
 210:sieve_extend.c ****         copy_word++;
 7095              		.loc 1 210 9 view .LVU3021
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7096              		.loc 1 209 28 is_stmt 0 view .LVU3022
 7097 3073 C4E2BBF7 		shrx	%r8, %rdx, %rcx
 7097      CA
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7098              		.loc 1 209 57 view .LVU3023
 7099 3078 C4E2C1F7 		shlx	%rdi, %rdx, %rsi
 7099      F2
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7100              		.loc 1 209 17 view .LVU3024
 7101 307d 4809F1   		orq	%rsi, %rcx
 210:sieve_extend.c ****         copy_word++;
 7102              		.loc 1 210 29 view .LVU3025
 7103 3080 48095030 		orq	%rdx, 48(%rax)
 211:sieve_extend.c ****     } 
 7104              		.loc 1 211 9 is_stmt 1 view .LVU3026
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7105              		.loc 1 208 11 view .LVU3027
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7106              		.loc 1 209 9 view .LVU3028
 210:sieve_extend.c ****         copy_word++;
 7107              		.loc 1 210 9 view .LVU3029
 210:sieve_extend.c ****         copy_word++;
 7108              		.loc 1 210 29 is_stmt 0 view .LVU3030
 7109 3084 48094838 		orq	%rcx, 56(%rax)
 211:sieve_extend.c ****     } 
 7110              		.loc 1 211 9 is_stmt 1 view .LVU3031
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7111              		.loc 1 208 11 view .LVU3032
 7112 3088 4883C040 		addq	$64, %rax
 7113 308c 48394424 		cmpq	%rax, 48(%rsp)
 7113      30
 7114 3091 0F856AFF 		jne	.L677
 7114      FFFF
 7115              	.L1346:
 7116 3097 498D6C2A 		leaq	-1(%r10,%rbp), %rbp
 7116      FF
 7117 309c 4C29CD   		subq	%r9, %rbp
 7118              	.L676:
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 7119              		.loc 1 214 5 view .LVU3033
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 7120              		.loc 1 214 24 is_stmt 0 view .LVU3034
 7121 309f C462A3F7 		shrx	%r11, %rcx, %r10
 7121      D1
 7122              	.LVL476:
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 7123              		.loc 1 214 53 view .LVU3035
GAS LISTING /tmp/ccmX4xFB.s 			page 212


 7124 30a4 C462E1F7 		shlx	%rbx, %rcx, %r9
 7124      C9
 7125              	.LVL477:
 215:sieve_extend.c **** }
 7126              		.loc 1 215 5 is_stmt 1 view .LVU3036
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 7127              		.loc 1 214 13 is_stmt 0 view .LVU3037
 7128 30a9 4D09CA   		orq	%r9, %r10
 7129              	.LVL478:
 215:sieve_extend.c **** }
 7130              		.loc 1 215 36 view .LVU3038
 7131 30ac 4C235424 		andq	80(%rsp), %r10
 7131      50
 7132              	.LVL479:
 215:sieve_extend.c **** }
 7133              		.loc 1 215 25 view .LVU3039
 7134 30b1 4D0914EE 		orq	%r10, (%r14,%rbp,8)
 7135              	.LVL480:
 215:sieve_extend.c **** }
 7136              		.loc 1 215 25 view .LVU3040
 7137              	.LBE528:
 7138              	.LBE527:
 783:sieve_extend.c ****     } while (range_stop < block_stop);
 7139              		.loc 1 783 9 is_stmt 1 view .LVU3041
 783:sieve_extend.c ****     } while (range_stop < block_stop);
 7140              		.loc 1 783 9 is_stmt 0 view .LVU3042
 7141              	.LBE553:
 784:sieve_extend.c **** 
 7142              		.loc 1 784 13 is_stmt 1 view .LVU3043
 784:sieve_extend.c **** 
 7143              		.loc 1 784 5 is_stmt 0 view .LVU3044
 7144 30b5 4C3B7C24 		cmpq	8(%rsp), %r15
 7144      08
 7145 30ba 0F82E2FB 		jb	.L699
 7145      FFFF
 7146              	.LVL481:
 7147              	.L1555:
 784:sieve_extend.c **** 
 7148              		.loc 1 784 5 view .LVU3045
 7149 30c0 4C8B7424 		movq	16(%rsp), %r14
 7149      10
 7150              	.LVL482:
 784:sieve_extend.c **** 
 7151              		.loc 1 784 5 view .LVU3046
 7152 30c5 4C89EA   		movq	%r13, %rdx
 786:sieve_extend.c **** }
 7153              		.loc 1 786 5 is_stmt 1 view .LVU3047
 7154              	.LVL483:
 786:sieve_extend.c **** }
 7155              		.loc 1 786 5 is_stmt 0 view .LVU3048
 7156 30c8 4C897424 		movq	%r14, 48(%rsp)
 7156      30
 7157              	.LBE560:
 7158              	.LBE578:
 798:sieve_extend.c ****     prime = block.prime;
 7159              		.loc 1 798 5 view .LVU3049
 7160 30cd 4C8B7424 		movq	56(%rsp), %r14
GAS LISTING /tmp/ccmX4xFB.s 			page 213


 7160      38
 7161              	.LVL484:
 7162              	.LBB579:
 7163              	.LBB561:
 798:sieve_extend.c ****     prime = block.prime;
 7164              		.loc 1 798 5 view .LVU3050
 7165 30d2 488B7424 		movq	24(%rsp), %rsi
 7165      18
 7166              	.LVL485:
 798:sieve_extend.c ****     prime = block.prime;
 7167              		.loc 1 798 5 view .LVU3051
 7168              	.LBE561:
 7169              	.LBE579:
 798:sieve_extend.c ****     prime = block.prime;
 7170              		.loc 1 798 5 is_stmt 1 view .LVU3052
 7171 30d7 498B4E08 		movq	8(%r14), %rcx
 7172              	.LVL486:
 7173              	.LBB580:
 7174              	.LBI580:
 667:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 7175              		.loc 1 667 20 view .LVU3053
 7176              	.LBB581:
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7177              		.loc 1 668 5 view .LVU3054
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7178              		.loc 1 668 8 is_stmt 0 view .LVU3055
 7179 30db 4883FA3F 		cmpq	$63, %rdx
 7180 30df 0F87A403 		ja	.L700
 7180      0000
 7181              	.LVL487:
 7182              	.L1561:
 669:sieve_extend.c ****         return; // rapid exit for small sizes
 7183              		.loc 1 669 9 is_stmt 1 view .LVU3056
 7184 30e5 488B7C24 		movq	64(%rsp), %rdi
 7184      40
 7185 30ea E811CFFF 		call	extendSieve_smallSize
 7185      FF
 7186              	.LVL488:
 670:sieve_extend.c ****     }
 7187              		.loc 1 670 9 view .LVU3057
 7188 30ef E9BC0300 		jmp	.L701
 7188      00
 7189              	.LVL489:
 7190              		.p2align 4,,10
 7191 30f4 0F1F4000 		.p2align 3
 7192              	.L1554:
 670:sieve_extend.c ****     }
 7193              		.loc 1 670 9 is_stmt 0 view .LVU3058
 7194              	.LBE581:
 7195              	.LBE580:
 7196              	.LBB584:
 7197              	.LBB562:
 7198              	.LBB554:
 7199              	.LBB533:
 7200              	.LBB519:
 7201              	.LBB514:
 7202              	.LBB513:
GAS LISTING /tmp/ccmX4xFB.s 			page 214


 7203              	.LBB512:
 7204              	.LBB509:
 175:sieve_extend.c ****    }
 7205              		.loc 1 175 7 is_stmt 1 view .LVU3059
 175:sieve_extend.c ****    }
 7206              		.loc 1 175 32 is_stmt 0 view .LVU3060
 7207 30f8 48235424 		andq	48(%rsp), %rdx
 7207      30
 7208              	.LVL490:
 175:sieve_extend.c ****    }
 7209              		.loc 1 175 23 view .LVU3061
 7210 30fd 490910   		orq	%rdx, (%r8)
 7211 3100 E984FBFF 		jmp	.L691
 7211      FF
 7212              	.LVL491:
 7213              		.p2align 4,,10
 7214 3105 0F1F00   		.p2align 3
 7215              	.L680:
 175:sieve_extend.c ****    }
 7216              		.loc 1 175 23 view .LVU3062
 7217              	.LBE509:
 7218              	.LBE512:
 7219              	.LBE513:
 7220              	.LBE514:
 7221              	.LBE519:
 7222              	.LBE533:
 782:sieve_extend.c ****         block.prime = prime;
 7223              		.loc 1 782 44 is_stmt 1 view .LVU3063
 7224              	.LBB534:
 7225              	.LBI534:
 318:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 7226              		.loc 1 318 13 view .LVU3064
 7227              	.LBB535:
 319:sieve_extend.c **** 
 7228              		.loc 1 319 5 view .LVU3065
 321:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 7229              		.loc 1 321 5 view .LVU3066
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7230              		.loc 1 322 5 view .LVU3067
 7231              	.LBB536:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7232              		.loc 1 322 10 view .LVU3068
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7233              		.loc 1 322 41 view .LVU3069
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7234              		.loc 1 322 5 is_stmt 0 view .LVU3070
 7235 3108 4D85C9   		testq	%r9, %r9
 7236 310b 0F8586FB 		jne	.L675
 7236      FFFF
 7237              	.LBB537:
 7238              	.LBB538:
 7239              	.LBB539:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 7240              		.loc 1 150 20 view .LVU3071
 7241 3111 4D89FB   		movq	%r15, %r11
 7242 3114 49C1EB06 		shrq	$6, %r11
 175:sieve_extend.c ****    }
GAS LISTING /tmp/ccmX4xFB.s 			page 215


 7243              		.loc 1 175 34 view .LVU3072
 7244 3118 4489FA   		movl	%r15d, %edx
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 7245              		.loc 1 152 83 view .LVU3073
 7246 311b 488D44AD 		leaq	0(%rbp,%rbp,4), %rax
 7246      00
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 7247              		.loc 1 152 106 view .LVU3074
 7248 3120 4D89D9   		movq	%r11, %r9
 175:sieve_extend.c ****    }
 7249              		.loc 1 175 34 view .LVU3075
 7250 3123 F7D2     		notl	%edx
 7251 3125 48C7C6FF 		movq	$-1, %rsi
 7251      FFFFFF
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 7252              		.loc 1 152 106 view .LVU3076
 7253 312c 4929C1   		subq	%rax, %r9
 175:sieve_extend.c ****    }
 7254              		.loc 1 175 34 view .LVU3077
 7255 312f C4E2EBF7 		shrx	%rdx, %rsi, %rdi
 7255      FE
 7256 3134 48897C24 		movq	%rdi, 48(%rsp)
 7256      30
 7257 3139 4939C3   		cmpq	%rax, %r11
 153:sieve_extend.c **** 
 7258              		.loc 1 153 35 view .LVU3078
 7259 313c 4F8D04DE 		leaq	(%r14,%r11,8), %r8
 7260 3140 4F8D0CCE 		leaq	(%r14,%r9,8), %r9
 7261 3144 4989EB   		movq	%rbp, %r11
 7262 3147 4D0F46CE 		cmovbe	%r14, %r9
 158:sieve_extend.c ****        *index_ptr |= mask;
 7263              		.loc 1 158 17 view .LVU3079
 7264 314b 488D0CED 		leaq	0(,%rbp,8), %rcx
 7264      00000000 
 7265 3153 48C1E003 		salq	$3, %rax
 7266 3157 49C1E304 		salq	$4, %r11
 7267              	.LVL492:
 7268 315b 0F1F4400 		.p2align 4,,10
 7268      00
 7269              		.p2align 3
 7270              	.L698:
 158:sieve_extend.c ****        *index_ptr |= mask;
 7271              		.loc 1 158 17 view .LVU3080
 7272              	.LBE539:
 7273              	.LBE538:
 323:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 7274              		.loc 1 323 9 is_stmt 1 view .LVU3081
 324:sieve_extend.c ****     }
 7275              		.loc 1 324 9 is_stmt 0 view .LVU3082
 7276 3160 4889DF   		movq	%rbx, %rdi
 323:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 7277              		.loc 1 323 19 view .LVU3083
 7278 3163 BA010000 		movl	$1, %edx
 7278      00
 324:sieve_extend.c ****     }
 7279              		.loc 1 324 9 view .LVU3084
 7280 3168 48C1EF06 		shrq	$6, %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 216


 323:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 7281              		.loc 1 323 19 view .LVU3085
 7282 316c C4E2E1F7 		shlx	%rbx, %rdx, %rsi
 7282      F2
 7283              	.LVL493:
 324:sieve_extend.c ****     }
 7284              		.loc 1 324 9 is_stmt 1 view .LVU3086
 7285              	.LBB542:
 7286              	.LBI538:
 121:sieve_extend.c **** // #if __APPLE__
 7287              		.loc 1 121 20 view .LVU3087
 7288              	.LBB540:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 7289              		.loc 1 150 4 view .LVU3088
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 7290              		.loc 1 151 4 view .LVU3089
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 7291              		.loc 1 151 35 is_stmt 0 view .LVU3090
 7292 3171 498D14FE 		leaq	(%r14,%rdi,8), %rdx
 7293              	.LVL494:
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 7294              		.loc 1 152 4 is_stmt 1 view .LVU3091
 153:sieve_extend.c **** 
 7295              		.loc 1 153 4 view .LVU3092
 156:sieve_extend.c ****        *index_ptr |= mask;
 7296              		.loc 1 156 4 view .LVU3093
 156:sieve_extend.c ****        *index_ptr |= mask;
 7297              		.loc 1 156 10 view .LVU3094
 7298 3175 4C39CA   		cmpq	%r9, %rdx
 7299 3178 0F830201 		jnb	.L693
 7299      0000
 156:sieve_extend.c ****        *index_ptr |= mask;
 7300              		.loc 1 156 10 is_stmt 0 view .LVU3095
 7301 317e 4A8D3C1A 		leaq	(%rdx,%r11), %rdi
 7302              	.LVL495:
 7303              	.L694:
 157:sieve_extend.c ****        index_ptr+=step;
 7304              		.loc 1 157 8 is_stmt 1 view .LVU3096
 157:sieve_extend.c ****        index_ptr+=step;
 7305              		.loc 1 157 19 is_stmt 0 view .LVU3097
 7306 3182 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7307              		.loc 1 158 8 is_stmt 1 view .LVU3098
 7308              	.LVL496:
 159:sieve_extend.c ****        index_ptr+=step;
 7309              		.loc 1 159 8 view .LVU3099
 159:sieve_extend.c ****        index_ptr+=step;
 7310              		.loc 1 159 19 is_stmt 0 view .LVU3100
 7311 3185 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7312              		.loc 1 160 8 is_stmt 1 view .LVU3101
 7313              	.LVL497:
 161:sieve_extend.c ****        index_ptr+=step;
 7314              		.loc 1 161 8 view .LVU3102
 161:sieve_extend.c ****        index_ptr+=step;
 7315              		.loc 1 161 19 is_stmt 0 view .LVU3103
 7316 3189 480937   		orq	%rsi, (%rdi)
GAS LISTING /tmp/ccmX4xFB.s 			page 217


 162:sieve_extend.c ****        *index_ptr |= mask;
 7317              		.loc 1 162 8 is_stmt 1 view .LVU3104
 7318              	.LVL498:
 163:sieve_extend.c ****        index_ptr+=step;
 7319              		.loc 1 163 8 view .LVU3105
 163:sieve_extend.c ****        index_ptr+=step;
 7320              		.loc 1 163 19 is_stmt 0 view .LVU3106
 7321 318c 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7322              		.loc 1 164 8 is_stmt 1 view .LVU3107
 7323              	.LVL499:
 165:sieve_extend.c ****        index_ptr+=step;
 7324              		.loc 1 165 8 view .LVU3108
 7325 3190 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7326              		.loc 1 165 19 is_stmt 0 view .LVU3109
 7327 3193 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7328              		.loc 1 166 8 is_stmt 1 view .LVU3110
 7329 3197 4801C2   		addq	%rax, %rdx
 7330              	.LVL500:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7331              		.loc 1 156 10 view .LVU3111
 7332 319a 4C39CA   		cmpq	%r9, %rdx
 7333 319d 0F83DD00 		jnb	.L693
 7333      0000
 157:sieve_extend.c ****        index_ptr+=step;
 7334              		.loc 1 157 8 view .LVU3112
 157:sieve_extend.c ****        index_ptr+=step;
 7335              		.loc 1 157 19 is_stmt 0 view .LVU3113
 7336 31a3 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7337              		.loc 1 158 8 is_stmt 1 view .LVU3114
 7338              	.LVL501:
 159:sieve_extend.c ****        index_ptr+=step;
 7339              		.loc 1 159 8 view .LVU3115
 159:sieve_extend.c ****        index_ptr+=step;
 7340              		.loc 1 159 19 is_stmt 0 view .LVU3116
 7341 31a6 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7342              		.loc 1 160 8 is_stmt 1 view .LVU3117
 7343              	.LVL502:
 161:sieve_extend.c ****        index_ptr+=step;
 7344              		.loc 1 161 8 view .LVU3118
 161:sieve_extend.c ****        index_ptr+=step;
 7345              		.loc 1 161 19 is_stmt 0 view .LVU3119
 7346 31aa 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7347              		.loc 1 162 8 is_stmt 1 view .LVU3120
 7348              	.LVL503:
 163:sieve_extend.c ****        index_ptr+=step;
 7349              		.loc 1 163 8 view .LVU3121
 163:sieve_extend.c ****        index_ptr+=step;
 7350              		.loc 1 163 19 is_stmt 0 view .LVU3122
 7351 31ad 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7352              		.loc 1 164 8 is_stmt 1 view .LVU3123
GAS LISTING /tmp/ccmX4xFB.s 			page 218


 7353              	.LVL504:
 165:sieve_extend.c ****        index_ptr+=step;
 7354              		.loc 1 165 8 view .LVU3124
 7355 31b1 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7356              		.loc 1 165 19 is_stmt 0 view .LVU3125
 7357 31b4 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7358              		.loc 1 166 8 is_stmt 1 view .LVU3126
 7359 31b8 4801C2   		addq	%rax, %rdx
 7360              	.LVL505:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7361              		.loc 1 156 10 view .LVU3127
 7362 31bb 4C39CA   		cmpq	%r9, %rdx
 7363 31be 0F83BC00 		jnb	.L693
 7363      0000
 157:sieve_extend.c ****        index_ptr+=step;
 7364              		.loc 1 157 8 view .LVU3128
 157:sieve_extend.c ****        index_ptr+=step;
 7365              		.loc 1 157 19 is_stmt 0 view .LVU3129
 7366 31c4 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7367              		.loc 1 158 8 is_stmt 1 view .LVU3130
 7368              	.LVL506:
 159:sieve_extend.c ****        index_ptr+=step;
 7369              		.loc 1 159 8 view .LVU3131
 159:sieve_extend.c ****        index_ptr+=step;
 7370              		.loc 1 159 19 is_stmt 0 view .LVU3132
 7371 31c7 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7372              		.loc 1 160 8 is_stmt 1 view .LVU3133
 7373              	.LVL507:
 161:sieve_extend.c ****        index_ptr+=step;
 7374              		.loc 1 161 8 view .LVU3134
 161:sieve_extend.c ****        index_ptr+=step;
 7375              		.loc 1 161 19 is_stmt 0 view .LVU3135
 7376 31cb 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7377              		.loc 1 162 8 is_stmt 1 view .LVU3136
 7378              	.LVL508:
 163:sieve_extend.c ****        index_ptr+=step;
 7379              		.loc 1 163 8 view .LVU3137
 163:sieve_extend.c ****        index_ptr+=step;
 7380              		.loc 1 163 19 is_stmt 0 view .LVU3138
 7381 31ce 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7382              		.loc 1 164 8 is_stmt 1 view .LVU3139
 7383              	.LVL509:
 165:sieve_extend.c ****        index_ptr+=step;
 7384              		.loc 1 165 8 view .LVU3140
 7385 31d2 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7386              		.loc 1 165 19 is_stmt 0 view .LVU3141
 7387 31d5 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7388              		.loc 1 166 8 is_stmt 1 view .LVU3142
 7389 31d9 4801C2   		addq	%rax, %rdx
GAS LISTING /tmp/ccmX4xFB.s 			page 219


 7390              	.LVL510:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7391              		.loc 1 156 10 view .LVU3143
 7392 31dc 4C39CA   		cmpq	%r9, %rdx
 7393 31df 0F839B00 		jnb	.L693
 7393      0000
 157:sieve_extend.c ****        index_ptr+=step;
 7394              		.loc 1 157 8 view .LVU3144
 157:sieve_extend.c ****        index_ptr+=step;
 7395              		.loc 1 157 19 is_stmt 0 view .LVU3145
 7396 31e5 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7397              		.loc 1 158 8 is_stmt 1 view .LVU3146
 7398              	.LVL511:
 159:sieve_extend.c ****        index_ptr+=step;
 7399              		.loc 1 159 8 view .LVU3147
 159:sieve_extend.c ****        index_ptr+=step;
 7400              		.loc 1 159 19 is_stmt 0 view .LVU3148
 7401 31e8 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7402              		.loc 1 160 8 is_stmt 1 view .LVU3149
 7403              	.LVL512:
 161:sieve_extend.c ****        index_ptr+=step;
 7404              		.loc 1 161 8 view .LVU3150
 161:sieve_extend.c ****        index_ptr+=step;
 7405              		.loc 1 161 19 is_stmt 0 view .LVU3151
 7406 31ec 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7407              		.loc 1 162 8 is_stmt 1 view .LVU3152
 7408              	.LVL513:
 163:sieve_extend.c ****        index_ptr+=step;
 7409              		.loc 1 163 8 view .LVU3153
 163:sieve_extend.c ****        index_ptr+=step;
 7410              		.loc 1 163 19 is_stmt 0 view .LVU3154
 7411 31ef 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7412              		.loc 1 164 8 is_stmt 1 view .LVU3155
 7413              	.LVL514:
 165:sieve_extend.c ****        index_ptr+=step;
 7414              		.loc 1 165 8 view .LVU3156
 7415 31f3 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7416              		.loc 1 165 19 is_stmt 0 view .LVU3157
 7417 31f6 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7418              		.loc 1 166 8 is_stmt 1 view .LVU3158
 7419 31fa 4801C2   		addq	%rax, %rdx
 7420              	.LVL515:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7421              		.loc 1 156 10 view .LVU3159
 7422 31fd 4C39CA   		cmpq	%r9, %rdx
 7423 3200 737E     		jnb	.L693
 157:sieve_extend.c ****        index_ptr+=step;
 7424              		.loc 1 157 8 view .LVU3160
 157:sieve_extend.c ****        index_ptr+=step;
 7425              		.loc 1 157 19 is_stmt 0 view .LVU3161
 7426 3202 480932   		orq	%rsi, (%rdx)
GAS LISTING /tmp/ccmX4xFB.s 			page 220


 158:sieve_extend.c ****        *index_ptr |= mask;
 7427              		.loc 1 158 8 is_stmt 1 view .LVU3162
 7428              	.LVL516:
 159:sieve_extend.c ****        index_ptr+=step;
 7429              		.loc 1 159 8 view .LVU3163
 159:sieve_extend.c ****        index_ptr+=step;
 7430              		.loc 1 159 19 is_stmt 0 view .LVU3164
 7431 3205 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7432              		.loc 1 160 8 is_stmt 1 view .LVU3165
 7433              	.LVL517:
 161:sieve_extend.c ****        index_ptr+=step;
 7434              		.loc 1 161 8 view .LVU3166
 161:sieve_extend.c ****        index_ptr+=step;
 7435              		.loc 1 161 19 is_stmt 0 view .LVU3167
 7436 3209 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7437              		.loc 1 162 8 is_stmt 1 view .LVU3168
 7438              	.LVL518:
 163:sieve_extend.c ****        index_ptr+=step;
 7439              		.loc 1 163 8 view .LVU3169
 163:sieve_extend.c ****        index_ptr+=step;
 7440              		.loc 1 163 19 is_stmt 0 view .LVU3170
 7441 320c 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7442              		.loc 1 164 8 is_stmt 1 view .LVU3171
 7443              	.LVL519:
 165:sieve_extend.c ****        index_ptr+=step;
 7444              		.loc 1 165 8 view .LVU3172
 7445 3210 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7446              		.loc 1 165 19 is_stmt 0 view .LVU3173
 7447 3213 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7448              		.loc 1 166 8 is_stmt 1 view .LVU3174
 7449 3217 4801C2   		addq	%rax, %rdx
 7450              	.LVL520:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7451              		.loc 1 156 10 view .LVU3175
 7452 321a 4C39CA   		cmpq	%r9, %rdx
 7453 321d 7361     		jnb	.L693
 157:sieve_extend.c ****        index_ptr+=step;
 7454              		.loc 1 157 8 view .LVU3176
 157:sieve_extend.c ****        index_ptr+=step;
 7455              		.loc 1 157 19 is_stmt 0 view .LVU3177
 7456 321f 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7457              		.loc 1 158 8 is_stmt 1 view .LVU3178
 7458              	.LVL521:
 159:sieve_extend.c ****        index_ptr+=step;
 7459              		.loc 1 159 8 view .LVU3179
 159:sieve_extend.c ****        index_ptr+=step;
 7460              		.loc 1 159 19 is_stmt 0 view .LVU3180
 7461 3222 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7462              		.loc 1 160 8 is_stmt 1 view .LVU3181
 7463              	.LVL522:
GAS LISTING /tmp/ccmX4xFB.s 			page 221


 161:sieve_extend.c ****        index_ptr+=step;
 7464              		.loc 1 161 8 view .LVU3182
 161:sieve_extend.c ****        index_ptr+=step;
 7465              		.loc 1 161 19 is_stmt 0 view .LVU3183
 7466 3226 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7467              		.loc 1 162 8 is_stmt 1 view .LVU3184
 7468              	.LVL523:
 163:sieve_extend.c ****        index_ptr+=step;
 7469              		.loc 1 163 8 view .LVU3185
 163:sieve_extend.c ****        index_ptr+=step;
 7470              		.loc 1 163 19 is_stmt 0 view .LVU3186
 7471 3229 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7472              		.loc 1 164 8 is_stmt 1 view .LVU3187
 7473              	.LVL524:
 165:sieve_extend.c ****        index_ptr+=step;
 7474              		.loc 1 165 8 view .LVU3188
 7475 322d 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7476              		.loc 1 165 19 is_stmt 0 view .LVU3189
 7477 3230 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7478              		.loc 1 166 8 is_stmt 1 view .LVU3190
 7479 3234 4801C2   		addq	%rax, %rdx
 7480              	.LVL525:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7481              		.loc 1 156 10 view .LVU3191
 7482 3237 4C39CA   		cmpq	%r9, %rdx
 7483 323a 7344     		jnb	.L693
 157:sieve_extend.c ****        index_ptr+=step;
 7484              		.loc 1 157 8 view .LVU3192
 157:sieve_extend.c ****        index_ptr+=step;
 7485              		.loc 1 157 19 is_stmt 0 view .LVU3193
 7486 323c 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7487              		.loc 1 158 8 is_stmt 1 view .LVU3194
 7488              	.LVL526:
 159:sieve_extend.c ****        index_ptr+=step;
 7489              		.loc 1 159 8 view .LVU3195
 159:sieve_extend.c ****        index_ptr+=step;
 7490              		.loc 1 159 19 is_stmt 0 view .LVU3196
 7491 323f 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7492              		.loc 1 160 8 is_stmt 1 view .LVU3197
 7493              	.LVL527:
 161:sieve_extend.c ****        index_ptr+=step;
 7494              		.loc 1 161 8 view .LVU3198
 161:sieve_extend.c ****        index_ptr+=step;
 7495              		.loc 1 161 19 is_stmt 0 view .LVU3199
 7496 3243 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7497              		.loc 1 162 8 is_stmt 1 view .LVU3200
 7498              	.LVL528:
 163:sieve_extend.c ****        index_ptr+=step;
 7499              		.loc 1 163 8 view .LVU3201
 163:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccmX4xFB.s 			page 222


 7500              		.loc 1 163 19 is_stmt 0 view .LVU3202
 7501 3246 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7502              		.loc 1 164 8 is_stmt 1 view .LVU3203
 7503              	.LVL529:
 165:sieve_extend.c ****        index_ptr+=step;
 7504              		.loc 1 165 8 view .LVU3204
 7505 324a 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7506              		.loc 1 165 19 is_stmt 0 view .LVU3205
 7507 324d 4809348A 		orq	%rsi, (%rdx,%rcx,4)
 166:sieve_extend.c ****    }
 7508              		.loc 1 166 8 is_stmt 1 view .LVU3206
 7509 3251 4801C2   		addq	%rax, %rdx
 7510              	.LVL530:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7511              		.loc 1 156 10 view .LVU3207
 7512 3254 4C39CA   		cmpq	%r9, %rdx
 7513 3257 7327     		jnb	.L693
 157:sieve_extend.c ****        index_ptr+=step;
 7514              		.loc 1 157 8 view .LVU3208
 157:sieve_extend.c ****        index_ptr+=step;
 7515              		.loc 1 157 19 is_stmt 0 view .LVU3209
 7516 3259 480932   		orq	%rsi, (%rdx)
 158:sieve_extend.c ****        *index_ptr |= mask;
 7517              		.loc 1 158 8 is_stmt 1 view .LVU3210
 7518              	.LVL531:
 159:sieve_extend.c ****        index_ptr+=step;
 7519              		.loc 1 159 8 view .LVU3211
 159:sieve_extend.c ****        index_ptr+=step;
 7520              		.loc 1 159 19 is_stmt 0 view .LVU3212
 7521 325c 4809340A 		orq	%rsi, (%rdx,%rcx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 7522              		.loc 1 160 8 is_stmt 1 view .LVU3213
 7523              	.LVL532:
 161:sieve_extend.c ****        index_ptr+=step;
 7524              		.loc 1 161 8 view .LVU3214
 161:sieve_extend.c ****        index_ptr+=step;
 7525              		.loc 1 161 19 is_stmt 0 view .LVU3215
 7526 3260 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 7527              		.loc 1 162 8 is_stmt 1 view .LVU3216
 7528              	.LVL533:
 163:sieve_extend.c ****        index_ptr+=step;
 7529              		.loc 1 163 8 view .LVU3217
 163:sieve_extend.c ****        index_ptr+=step;
 7530              		.loc 1 163 19 is_stmt 0 view .LVU3218
 7531 3263 4809340F 		orq	%rsi, (%rdi,%rcx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 7532              		.loc 1 164 8 is_stmt 1 view .LVU3219
 7533              	.LVL534:
 165:sieve_extend.c ****        index_ptr+=step;
 7534              		.loc 1 165 8 view .LVU3220
 7535 3267 4801C7   		addq	%rax, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 7536              		.loc 1 165 19 is_stmt 0 view .LVU3221
 7537 326a 4809348A 		orq	%rsi, (%rdx,%rcx,4)
GAS LISTING /tmp/ccmX4xFB.s 			page 223


 166:sieve_extend.c ****    }
 7538              		.loc 1 166 8 is_stmt 1 view .LVU3222
 7539 326e 4801C2   		addq	%rax, %rdx
 7540              	.LVL535:
 156:sieve_extend.c ****        *index_ptr |= mask;
 7541              		.loc 1 156 10 view .LVU3223
 7542 3271 4C39CA   		cmpq	%r9, %rdx
 7543 3274 0F8208FF 		jb	.L694
 7543      FFFF
 7544 327a 660F1F44 		.p2align 4,,10
 7544      0000
 7545              		.p2align 3
 7546              	.L693:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7547              		.loc 1 169 10 view .LVU3224
 7548 3280 4939D0   		cmpq	%rdx, %r8
 7549 3283 765B     		jbe	.L695
 7550              	.L696:
 170:sieve_extend.c ****        index_ptr+=step;
 7551              		.loc 1 170 8 view .LVU3225
 170:sieve_extend.c ****        index_ptr+=step;
 7552              		.loc 1 170 19 is_stmt 0 view .LVU3226
 7553 3285 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7554              		.loc 1 171 8 is_stmt 1 view .LVU3227
 171:sieve_extend.c ****    }
 7555              		.loc 1 171 17 is_stmt 0 view .LVU3228
 7556 3288 4801CA   		addq	%rcx, %rdx
 7557              	.LVL536:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7558              		.loc 1 169 10 is_stmt 1 view .LVU3229
 7559 328b 4939D0   		cmpq	%rdx, %r8
 7560 328e 7650     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7561              		.loc 1 170 8 view .LVU3230
 170:sieve_extend.c ****        index_ptr+=step;
 7562              		.loc 1 170 19 is_stmt 0 view .LVU3231
 7563 3290 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7564              		.loc 1 171 8 is_stmt 1 view .LVU3232
 171:sieve_extend.c ****    }
 7565              		.loc 1 171 17 is_stmt 0 view .LVU3233
 7566 3293 4801CA   		addq	%rcx, %rdx
 7567              	.LVL537:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7568              		.loc 1 169 10 is_stmt 1 view .LVU3234
 7569 3296 4939D0   		cmpq	%rdx, %r8
 7570 3299 7645     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7571              		.loc 1 170 8 view .LVU3235
 170:sieve_extend.c ****        index_ptr+=step;
 7572              		.loc 1 170 19 is_stmt 0 view .LVU3236
 7573 329b 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7574              		.loc 1 171 8 is_stmt 1 view .LVU3237
 171:sieve_extend.c ****    }
 7575              		.loc 1 171 17 is_stmt 0 view .LVU3238
GAS LISTING /tmp/ccmX4xFB.s 			page 224


 7576 329e 4801CA   		addq	%rcx, %rdx
 7577              	.LVL538:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7578              		.loc 1 169 10 is_stmt 1 view .LVU3239
 7579 32a1 4939D0   		cmpq	%rdx, %r8
 7580 32a4 763A     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7581              		.loc 1 170 8 view .LVU3240
 170:sieve_extend.c ****        index_ptr+=step;
 7582              		.loc 1 170 19 is_stmt 0 view .LVU3241
 7583 32a6 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7584              		.loc 1 171 8 is_stmt 1 view .LVU3242
 171:sieve_extend.c ****    }
 7585              		.loc 1 171 17 is_stmt 0 view .LVU3243
 7586 32a9 4801CA   		addq	%rcx, %rdx
 7587              	.LVL539:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7588              		.loc 1 169 10 is_stmt 1 view .LVU3244
 7589 32ac 4939D0   		cmpq	%rdx, %r8
 7590 32af 762F     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7591              		.loc 1 170 8 view .LVU3245
 170:sieve_extend.c ****        index_ptr+=step;
 7592              		.loc 1 170 19 is_stmt 0 view .LVU3246
 7593 32b1 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7594              		.loc 1 171 8 is_stmt 1 view .LVU3247
 171:sieve_extend.c ****    }
 7595              		.loc 1 171 17 is_stmt 0 view .LVU3248
 7596 32b4 4801CA   		addq	%rcx, %rdx
 7597              	.LVL540:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7598              		.loc 1 169 10 is_stmt 1 view .LVU3249
 7599 32b7 4939D0   		cmpq	%rdx, %r8
 7600 32ba 7624     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7601              		.loc 1 170 8 view .LVU3250
 170:sieve_extend.c ****        index_ptr+=step;
 7602              		.loc 1 170 19 is_stmt 0 view .LVU3251
 7603 32bc 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7604              		.loc 1 171 8 is_stmt 1 view .LVU3252
 171:sieve_extend.c ****    }
 7605              		.loc 1 171 17 is_stmt 0 view .LVU3253
 7606 32bf 4801CA   		addq	%rcx, %rdx
 7607              	.LVL541:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7608              		.loc 1 169 10 is_stmt 1 view .LVU3254
 7609 32c2 4939D0   		cmpq	%rdx, %r8
 7610 32c5 7619     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7611              		.loc 1 170 8 view .LVU3255
 170:sieve_extend.c ****        index_ptr+=step;
 7612              		.loc 1 170 19 is_stmt 0 view .LVU3256
 7613 32c7 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
GAS LISTING /tmp/ccmX4xFB.s 			page 225


 7614              		.loc 1 171 8 is_stmt 1 view .LVU3257
 171:sieve_extend.c ****    }
 7615              		.loc 1 171 17 is_stmt 0 view .LVU3258
 7616 32ca 4801CA   		addq	%rcx, %rdx
 7617              	.LVL542:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7618              		.loc 1 169 10 is_stmt 1 view .LVU3259
 7619 32cd 4939D0   		cmpq	%rdx, %r8
 7620 32d0 760E     		jbe	.L695
 170:sieve_extend.c ****        index_ptr+=step;
 7621              		.loc 1 170 8 view .LVU3260
 170:sieve_extend.c ****        index_ptr+=step;
 7622              		.loc 1 170 19 is_stmt 0 view .LVU3261
 7623 32d2 480932   		orq	%rsi, (%rdx)
 171:sieve_extend.c ****    }
 7624              		.loc 1 171 8 is_stmt 1 view .LVU3262
 171:sieve_extend.c ****    }
 7625              		.loc 1 171 17 is_stmt 0 view .LVU3263
 7626 32d5 4801CA   		addq	%rcx, %rdx
 7627              	.LVL543:
 169:sieve_extend.c ****        *index_ptr |= mask;
 7628              		.loc 1 169 10 is_stmt 1 view .LVU3264
 7629 32d8 4939D0   		cmpq	%rdx, %r8
 7630 32db 77A8     		ja	.L696
 7631 32dd 0F1F00   		.p2align 4,,10
 7632              		.p2align 3
 7633              	.L695:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 7634              		.loc 1 174 4 view .LVU3265
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 7635              		.loc 1 174 7 is_stmt 0 view .LVU3266
 7636 32e0 4939D0   		cmpq	%rdx, %r8
 7637 32e3 741B     		je	.L1560
 7638              	.LVL544:
 7639              	.L697:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 7640              		.loc 1 174 7 view .LVU3267
 7641              	.LBE540:
 7642              	.LBE542:
 7643              	.LBE537:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7644              		.loc 1 322 69 is_stmt 1 view .LVU3268
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7645              		.loc 1 322 75 is_stmt 0 view .LVU3269
 7646 32e5 4801EB   		addq	%rbp, %rbx
 7647              	.LVL545:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7648              		.loc 1 322 41 is_stmt 1 view .LVU3270
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 7649              		.loc 1 322 5 is_stmt 0 view .LVU3271
 7650 32e8 4C39D3   		cmpq	%r10, %rbx
 7651 32eb 0F866FFE 		jbe	.L698
 7651      FFFF
 7652 32f1 E9A1F9FF 		jmp	.L675
 7652      FF
 7653              	.LVL546:
 7654 32f6 662E0F1F 		.p2align 4,,10
GAS LISTING /tmp/ccmX4xFB.s 			page 226


 7654      84000000 
 7654      0000
 7655              		.p2align 3
 7656              	.L1560:
 7657              	.LBB544:
 7658              	.LBB543:
 7659              	.LBB541:
 175:sieve_extend.c ****    }
 7660              		.loc 1 175 7 is_stmt 1 view .LVU3272
 175:sieve_extend.c ****    }
 7661              		.loc 1 175 32 is_stmt 0 view .LVU3273
 7662 3300 48237424 		andq	48(%rsp), %rsi
 7662      30
 7663              	.LVL547:
 175:sieve_extend.c ****    }
 7664              		.loc 1 175 23 view .LVU3274
 7665 3305 490930   		orq	%rsi, (%r8)
 7666 3308 EBDB     		jmp	.L697
 7667              	.LVL548:
 7668 330a 660F1F44 		.p2align 4,,10
 7668      0000
 7669              		.p2align 3
 7670              	.L681:
 175:sieve_extend.c ****    }
 7671              		.loc 1 175 23 view .LVU3275
 7672              	.LBE541:
 7673              	.LBE543:
 7674              	.LBE544:
 7675              	.LBE536:
 7676              	.LBE535:
 7677              	.LBE534:
 7678              	.LBB545:
 7679              	.LBB520:
 7680              	.LBB515:
 7681              	.LBB516:
 7682              	.LBB517:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7683              		.loc 1 228 54 is_stmt 1 view .LVU3276
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7684              		.loc 1 228 9 is_stmt 0 view .LVU3277
 7685 3310 4939DF   		cmpq	%rbx, %r15
 7686 3313 0F827EF9 		jb	.L675
 7686      FFFF
 7687              	.LBB518:
 232:sieve_extend.c ****                 index += step;
 7688              		.loc 1 232 25 view .LVU3278
 7689 3319 41BA0100 		movl	$1, %r10d
 7689      0000
 7690              	.LVL549:
 7691 331f 90       		.p2align 4,,10
 7692              		.p2align 3
 7693              	.L685:
 229:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7694              		.loc 1 229 13 is_stmt 1 view .LVU3279
 229:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7695              		.loc 1 229 32 is_stmt 0 view .LVU3280
 7696 3320 4889DF   		movq	%rbx, %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 227


 7697 3323 48C1EF06 		shrq	$6, %rdi
 7698              	.LVL550:
 230:sieve_extend.c ****             do {
 7699              		.loc 1 230 13 is_stmt 1 view .LVU3281
 230:sieve_extend.c ****             do {
 7700              		.loc 1 230 32 is_stmt 0 view .LVU3282
 7701 3327 4531C0   		xorl	%r8d, %r8d
 7702              	.LVL551:
 7703              	.L684:
 231:sieve_extend.c ****                 mask |= markmask(index);
 7704              		.loc 1 231 13 is_stmt 1 view .LVU3283
 232:sieve_extend.c ****                 index += step;
 7705              		.loc 1 232 17 view .LVU3284
 232:sieve_extend.c ****                 index += step;
 7706              		.loc 1 232 25 is_stmt 0 view .LVU3285
 7707 332a C4C2E1F7 		shlx	%rbx, %r10, %rcx
 7707      CA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7708              		.loc 1 233 23 view .LVU3286
 7709 332f 4801EB   		addq	%rbp, %rbx
 7710              	.LVL552:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7711              		.loc 1 234 36 view .LVU3287
 7712 3332 4989D9   		movq	%rbx, %r9
 7713 3335 49C1E906 		shrq	$6, %r9
 232:sieve_extend.c ****                 index += step;
 7714              		.loc 1 232 22 view .LVU3288
 7715 3339 4909C8   		orq	%rcx, %r8
 7716              	.LVL553:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7717              		.loc 1 233 17 is_stmt 1 view .LVU3289
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7718              		.loc 1 234 21 view .LVU3290
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7719              		.loc 1 234 13 is_stmt 0 view .LVU3291
 7720 333c 4C39CF   		cmpq	%r9, %rdi
 7721 333f 0F85AB00 		jne	.L1347
 7721      0000
 231:sieve_extend.c ****                 mask |= markmask(index);
 7722              		.loc 1 231 13 is_stmt 1 view .LVU3292
 232:sieve_extend.c ****                 index += step;
 7723              		.loc 1 232 17 view .LVU3293
 232:sieve_extend.c ****                 index += step;
 7724              		.loc 1 232 25 is_stmt 0 view .LVU3294
 7725 3345 C442E1F7 		shlx	%rbx, %r10, %r11
 7725      DA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7726              		.loc 1 233 23 view .LVU3295
 7727 334a 4801EB   		addq	%rbp, %rbx
 7728              	.LVL554:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7729              		.loc 1 234 36 view .LVU3296
 7730 334d 4889DA   		movq	%rbx, %rdx
 7731 3350 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 7732              		.loc 1 232 22 view .LVU3297
 7733 3354 4D09D8   		orq	%r11, %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 228


 7734              	.LVL555:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7735              		.loc 1 233 17 is_stmt 1 view .LVU3298
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7736              		.loc 1 234 21 view .LVU3299
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7737              		.loc 1 234 13 is_stmt 0 view .LVU3300
 7738 3357 4839D7   		cmpq	%rdx, %rdi
 7739 335a 0F859000 		jne	.L1347
 7739      0000
 231:sieve_extend.c ****                 mask |= markmask(index);
 7740              		.loc 1 231 13 is_stmt 1 view .LVU3301
 232:sieve_extend.c ****                 index += step;
 7741              		.loc 1 232 17 view .LVU3302
 232:sieve_extend.c ****                 index += step;
 7742              		.loc 1 232 25 is_stmt 0 view .LVU3303
 7743 3360 C4C2E1F7 		shlx	%rbx, %r10, %rax
 7743      C2
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7744              		.loc 1 233 23 view .LVU3304
 7745 3365 4801EB   		addq	%rbp, %rbx
 7746              	.LVL556:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7747              		.loc 1 234 36 view .LVU3305
 7748 3368 4889DE   		movq	%rbx, %rsi
 7749 336b 48C1EE06 		shrq	$6, %rsi
 232:sieve_extend.c ****                 index += step;
 7750              		.loc 1 232 22 view .LVU3306
 7751 336f 4909C0   		orq	%rax, %r8
 7752              	.LVL557:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7753              		.loc 1 233 17 is_stmt 1 view .LVU3307
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7754              		.loc 1 234 21 view .LVU3308
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7755              		.loc 1 234 13 is_stmt 0 view .LVU3309
 7756 3372 4839F7   		cmpq	%rsi, %rdi
 7757 3375 7579     		jne	.L1347
 231:sieve_extend.c ****                 mask |= markmask(index);
 7758              		.loc 1 231 13 is_stmt 1 view .LVU3310
 232:sieve_extend.c ****                 index += step;
 7759              		.loc 1 232 17 view .LVU3311
 232:sieve_extend.c ****                 index += step;
 7760              		.loc 1 232 25 is_stmt 0 view .LVU3312
 7761 3377 C4C2E1F7 		shlx	%rbx, %r10, %rcx
 7761      CA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7762              		.loc 1 233 23 view .LVU3313
 7763 337c 4801EB   		addq	%rbp, %rbx
 7764              	.LVL558:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7765              		.loc 1 234 36 view .LVU3314
 7766 337f 4989D9   		movq	%rbx, %r9
 7767 3382 49C1E906 		shrq	$6, %r9
 232:sieve_extend.c ****                 index += step;
 7768              		.loc 1 232 22 view .LVU3315
 7769 3386 4909C8   		orq	%rcx, %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 229


 7770              	.LVL559:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7771              		.loc 1 233 17 is_stmt 1 view .LVU3316
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7772              		.loc 1 234 21 view .LVU3317
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7773              		.loc 1 234 13 is_stmt 0 view .LVU3318
 7774 3389 4C39CF   		cmpq	%r9, %rdi
 7775 338c 7562     		jne	.L1347
 231:sieve_extend.c ****                 mask |= markmask(index);
 7776              		.loc 1 231 13 is_stmt 1 view .LVU3319
 232:sieve_extend.c ****                 index += step;
 7777              		.loc 1 232 17 view .LVU3320
 232:sieve_extend.c ****                 index += step;
 7778              		.loc 1 232 25 is_stmt 0 view .LVU3321
 7779 338e C442E1F7 		shlx	%rbx, %r10, %r11
 7779      DA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7780              		.loc 1 233 23 view .LVU3322
 7781 3393 4801EB   		addq	%rbp, %rbx
 7782              	.LVL560:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7783              		.loc 1 234 36 view .LVU3323
 7784 3396 4889DA   		movq	%rbx, %rdx
 7785 3399 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 7786              		.loc 1 232 22 view .LVU3324
 7787 339d 4D09D8   		orq	%r11, %r8
 7788              	.LVL561:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7789              		.loc 1 233 17 is_stmt 1 view .LVU3325
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7790              		.loc 1 234 21 view .LVU3326
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7791              		.loc 1 234 13 is_stmt 0 view .LVU3327
 7792 33a0 4839D7   		cmpq	%rdx, %rdi
 7793 33a3 754B     		jne	.L1347
 231:sieve_extend.c ****                 mask |= markmask(index);
 7794              		.loc 1 231 13 is_stmt 1 view .LVU3328
 232:sieve_extend.c ****                 index += step;
 7795              		.loc 1 232 17 view .LVU3329
 232:sieve_extend.c ****                 index += step;
 7796              		.loc 1 232 25 is_stmt 0 view .LVU3330
 7797 33a5 C4C2E1F7 		shlx	%rbx, %r10, %rax
 7797      C2
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7798              		.loc 1 233 23 view .LVU3331
 7799 33aa 4801EB   		addq	%rbp, %rbx
 7800              	.LVL562:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7801              		.loc 1 234 36 view .LVU3332
 7802 33ad 4889DE   		movq	%rbx, %rsi
 7803 33b0 48C1EE06 		shrq	$6, %rsi
 232:sieve_extend.c ****                 index += step;
 7804              		.loc 1 232 22 view .LVU3333
 7805 33b4 4909C0   		orq	%rax, %r8
 7806              	.LVL563:
GAS LISTING /tmp/ccmX4xFB.s 			page 230


 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7807              		.loc 1 233 17 is_stmt 1 view .LVU3334
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7808              		.loc 1 234 21 view .LVU3335
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7809              		.loc 1 234 13 is_stmt 0 view .LVU3336
 7810 33b7 4839F7   		cmpq	%rsi, %rdi
 7811 33ba 7534     		jne	.L1347
 231:sieve_extend.c ****                 mask |= markmask(index);
 7812              		.loc 1 231 13 is_stmt 1 view .LVU3337
 232:sieve_extend.c ****                 index += step;
 7813              		.loc 1 232 17 view .LVU3338
 232:sieve_extend.c ****                 index += step;
 7814              		.loc 1 232 25 is_stmt 0 view .LVU3339
 7815 33bc C4C2E1F7 		shlx	%rbx, %r10, %rcx
 7815      CA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7816              		.loc 1 233 23 view .LVU3340
 7817 33c1 4801EB   		addq	%rbp, %rbx
 7818              	.LVL564:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7819              		.loc 1 234 36 view .LVU3341
 7820 33c4 4989D9   		movq	%rbx, %r9
 7821 33c7 49C1E906 		shrq	$6, %r9
 232:sieve_extend.c ****                 index += step;
 7822              		.loc 1 232 22 view .LVU3342
 7823 33cb 4909C8   		orq	%rcx, %r8
 7824              	.LVL565:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7825              		.loc 1 233 17 is_stmt 1 view .LVU3343
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7826              		.loc 1 234 21 view .LVU3344
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7827              		.loc 1 234 13 is_stmt 0 view .LVU3345
 7828 33ce 4C39CF   		cmpq	%r9, %rdi
 7829 33d1 751D     		jne	.L1347
 231:sieve_extend.c ****                 mask |= markmask(index);
 7830              		.loc 1 231 13 is_stmt 1 view .LVU3346
 232:sieve_extend.c ****                 index += step;
 7831              		.loc 1 232 17 view .LVU3347
 232:sieve_extend.c ****                 index += step;
 7832              		.loc 1 232 25 is_stmt 0 view .LVU3348
 7833 33d3 C442E1F7 		shlx	%rbx, %r10, %r11
 7833      DA
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 7834              		.loc 1 233 23 view .LVU3349
 7835 33d8 4801EB   		addq	%rbp, %rbx
 7836              	.LVL566:
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7837              		.loc 1 234 36 view .LVU3350
 7838 33db 4889DA   		movq	%rbx, %rdx
 7839 33de 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 7840              		.loc 1 232 22 view .LVU3351
 7841 33e2 4D09D8   		orq	%r11, %r8
 7842              	.LVL567:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccmX4xFB.s 			page 231


 7843              		.loc 1 233 17 is_stmt 1 view .LVU3352
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7844              		.loc 1 234 21 view .LVU3353
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 7845              		.loc 1 234 13 is_stmt 0 view .LVU3354
 7846 33e5 4839D7   		cmpq	%rdx, %rdi
 7847 33e8 0F843CFF 		je	.L684
 7847      FFFF
 7848 33ee 6690     		.p2align 4,,10
 7849              		.p2align 3
 7850              	.L1347:
 235:sieve_extend.c ****         }
 7851              		.loc 1 235 13 is_stmt 1 view .LVU3355
 235:sieve_extend.c ****         }
 7852              		.loc 1 235 34 is_stmt 0 view .LVU3356
 7853 33f0 4D0904FE 		orq	%r8, (%r14,%rdi,8)
 235:sieve_extend.c ****         }
 7854              		.loc 1 235 34 view .LVU3357
 7855              	.LBE518:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7856              		.loc 1 228 54 is_stmt 1 view .LVU3358
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7857              		.loc 1 228 9 is_stmt 0 view .LVU3359
 7858 33f4 4939DF   		cmpq	%rbx, %r15
 7859 33f7 0F8323FF 		jnb	.L685
 7859      FFFF
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7860              		.loc 1 228 9 view .LVU3360
 7861 33fd E995F8FF 		jmp	.L675
 7861      FF
 7862              	.LVL568:
 7863              		.p2align 4,,10
 7864 3402 660F1F44 		.p2align 3
 7864      0000
 7865              	.L670:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7866              		.loc 1 228 9 view .LVU3361
 7867              	.LBE517:
 7868              	.LBE516:
 7869              	.LBE515:
 7870              	.LBE520:
 7871              	.LBE545:
 7872              	.LBB546:
 7873              	.LBB525:
 679:sieve_extend.c **** }
 7874              		.loc 1 679 37 is_stmt 1 view .LVU3362
 7875 3408 E823DCFF 		call	extendSieve_aligned
 7875      FF
 7876              	.LVL569:
 679:sieve_extend.c **** }
 7877              		.loc 1 679 37 is_stmt 0 view .LVU3363
 7878 340d 4C896C24 		movq	%r13, 32(%rsp)
 7878      20
 7879 3412 E990F5FF 		jmp	.L667
 7879      FF
 7880              	.LVL570:
 7881 3417 660F1F84 		.p2align 4,,10
GAS LISTING /tmp/ccmX4xFB.s 			page 232


 7881      00000000 
 7881      00
 7882              		.p2align 3
 7883              	.L1557:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7884              		.loc 1 677 37 is_stmt 1 view .LVU3364
 7885 3420 E80BE1FF 		call	extendSieve_shiftleft
 7885      FF
 7886              	.LVL571:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7887              		.loc 1 677 37 is_stmt 0 view .LVU3365
 7888 3425 4C896C24 		movq	%r13, 32(%rsp)
 7888      20
 7889 342a E978F5FF 		jmp	.L667
 7889      FF
 7890              	.LVL572:
 7891              	.L1556:
 669:sieve_extend.c ****         return; // rapid exit for small sizes
 7892              		.loc 1 669 9 is_stmt 1 view .LVU3366
 7893 342f 4C89F9   		movq	%r15, %rcx
 7894 3432 4C89EA   		movq	%r13, %rdx
 7895 3435 4C89EE   		movq	%r13, %rsi
 7896 3438 4C89F7   		movq	%r14, %rdi
 7897 343b E8C0CBFF 		call	extendSieve_smallSize
 7897      FF
 7898              	.LVL573:
 670:sieve_extend.c ****     }
 7899              		.loc 1 670 9 view .LVU3367
 7900 3440 4C896C24 		movq	%r13, 32(%rsp)
 7900      20
 7901 3445 E95DF5FF 		jmp	.L667
 7901      FF
 7902              	.LVL574:
 7903              	.L1558:
 670:sieve_extend.c ****     }
 7904              		.loc 1 670 9 is_stmt 0 view .LVU3368
 7905              	.LBE525:
 7906              	.LBE546:
 7907              	.LBB547:
 7908              	.LBB531:
 195:sieve_extend.c ****        return;
 7909              		.loc 1 195 8 is_stmt 1 view .LVU3369
 195:sieve_extend.c ****        return;
 7910              		.loc 1 195 67 is_stmt 0 view .LVU3370
 7911 344a 4C21C7   		andq	%r8, %rdi
 195:sieve_extend.c ****        return;
 7912              		.loc 1 195 28 view .LVU3371
 7913 344d 4809F8   		orq	%rdi, %rax
 7914 3450 488902   		movq	%rax, (%rdx)
 196:sieve_extend.c ****     }
 7915              		.loc 1 196 8 is_stmt 1 view .LVU3372
 7916 3453 E93FF8FF 		jmp	.L675
 7916      FF
 7917              	.LVL575:
 7918              	.L1559:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7919              		.loc 1 209 9 view .LVU3373
GAS LISTING /tmp/ccmX4xFB.s 			page 233


 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7920              		.loc 1 209 28 is_stmt 0 view .LVU3374
 7921 3458 C4E2BBF7 		shrx	%r8, %rcx, %rdx
 7921      D1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7922              		.loc 1 209 57 view .LVU3375
 7923 345d C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 7923      C9
 7924              	.LVL576:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 7925              		.loc 1 209 17 view .LVU3376
 7926 3462 4809D1   		orq	%rdx, %rcx
 7927              	.LVL577:
 210:sieve_extend.c ****         copy_word++;
 7928              		.loc 1 210 9 is_stmt 1 view .LVU3377
 210:sieve_extend.c ****         copy_word++;
 7929              		.loc 1 210 29 is_stmt 0 view .LVU3378
 7930 3465 480908   		orq	%rcx, (%rax)
 211:sieve_extend.c ****     } 
 7931              		.loc 1 211 9 is_stmt 1 view .LVU3379
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7932              		.loc 1 208 11 view .LVU3380
 7933 3468 4883C008 		addq	$8, %rax
 7934 346c E90DFBFF 		jmp	.L1113
 7934      FF
 7935              	.LVL578:
 7936              	.L1349:
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7937              		.loc 1 208 11 is_stmt 0 view .LVU3381
 7938 3471 4C894424 		movq	%r8, 48(%rsp)
 7938      30
 7939              	.L666:
 7940              	.LVL579:
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 7941              		.loc 1 208 11 view .LVU3382
 7942              	.LBE531:
 7943              	.LBE547:
 7944              	.LBE554:
 7945              	.LBE562:
 7946              	.LBE584:
 798:sieve_extend.c ****     prime = block.prime;
 7947              		.loc 1 798 5 is_stmt 1 view .LVU3383
 7948 3476 4C8B7424 		movq	56(%rsp), %r14
 7948      38
 7949              	.LVL580:
 798:sieve_extend.c ****     prime = block.prime;
 7950              		.loc 1 798 5 is_stmt 0 view .LVU3384
 7951 347b 498B4E08 		movq	8(%r14), %rcx
 7952              	.LVL581:
 7953              	.LBB585:
 667:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 7954              		.loc 1 667 20 is_stmt 1 view .LVU3385
 7955              	.LBB582:
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7956              		.loc 1 668 5 view .LVU3386
 668:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7957              		.loc 1 668 8 is_stmt 0 view .LVU3387
GAS LISTING /tmp/ccmX4xFB.s 			page 234


 7958 347f 4883FA3F 		cmpq	$63, %rdx
 7959 3483 0F865CFC 		jbe	.L1561
 7959      FFFF
 7960              	.L700:
 673:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 7961              		.loc 1 673 5 is_stmt 1 view .LVU3388
 7962              	.LVL582:
 674:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7963              		.loc 1 674 5 view .LVU3389
 673:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 7964              		.loc 1 673 21 is_stmt 0 view .LVU3390
 7965 3489 488D2C32 		leaq	(%rdx,%rsi), %rbp
 7966              	.LVL583:
 675:sieve_extend.c **** 
 7967              		.loc 1 675 22 view .LVU3391
 7968 348d 4989F2   		movq	%rsi, %r10
 674:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7969              		.loc 1 674 22 view .LVU3392
 7970 3490 83E53F   		andl	$63, %ebp
 7971              	.LVL584:
 675:sieve_extend.c **** 
 7972              		.loc 1 675 5 is_stmt 1 view .LVU3393
 675:sieve_extend.c **** 
 7973              		.loc 1 675 22 is_stmt 0 view .LVU3394
 7974 3493 4183E23F 		andl	$63, %r10d
 7975              	.LVL585:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7976              		.loc 1 677 5 is_stmt 1 view .LVU3395
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7977              		.loc 1 677 13 is_stmt 0 view .LVU3396
 7978 3497 4C39D5   		cmpq	%r10, %rbp
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7979              		.loc 1 677 37 view .LVU3397
 7980 349a 488B7C24 		movq	64(%rsp), %rdi
 7980      40
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7981              		.loc 1 677 13 view .LVU3398
 7982 349f 0F828D18 		jb	.L1562
 7982      0000
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7983              		.loc 1 678 10 is_stmt 1 view .LVU3399
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7984              		.loc 1 678 13 is_stmt 0 view .LVU3400
 7985 34a5 0F867D18 		jbe	.L703
 7985      0000
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7986              		.loc 1 678 37 is_stmt 1 view .LVU3401
 7987 34ab E810CFFF 		call	extendSieve_shiftright_ivdep
 7987      FF
 7988              	.LVL586:
 7989              	.L701:
 678:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7990              		.loc 1 678 37 is_stmt 0 view .LVU3402
 7991              	.LBE582:
 7992              	.LBE585:
 799:sieve_extend.c **** 
 7993              		.loc 1 799 5 is_stmt 1 view .LVU3403
GAS LISTING /tmp/ccmX4xFB.s 			page 235


 799:sieve_extend.c **** 
 7994              		.loc 1 799 5 is_stmt 0 view .LVU3404
 7995 34b0 488B7424 		movq	56(%rsp), %rsi
 7995      38
 7996 34b5 4C8B5C24 		movq	48(%rsp), %r11
 7996      30
 792:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
 7997              		.loc 1 792 15 view .LVU3405
 7998 34ba 4531C9   		xorl	%r9d, %r9d
 7999              	.LBB586:
 8000              	.LBB587:
 8001              	.LBB588:
 8002              	.LBB589:
 8003              	.LBB590:
 8004              	.LBB591:
 8005              	.LBB592:
 8006              	.LBB593:
 232:sieve_extend.c ****                 index += step;
 8007              		.loc 1 232 25 view .LVU3406
 8008 34bd 4C894C24 		movq	%r9, 8(%rsp)
 8008      08
 8009 34c2 49FFC3   		incq	%r11
 8010 34c5 488B5608 		movq	8(%rsi), %rdx
 8011 34c9 4C8B3E   		movq	(%rsi), %r15
 8012 34cc 4C8B4424 		movq	88(%rsp), %r8
 8012      58
 8013 34d1 4C895C24 		movq	%r11, 40(%rsp)
 8013      28
 8014 34d6 41BB0100 		movl	$1, %r11d
 8014      0000
 8015              	.LVL587:
 8016 34dc 0F1F4000 		.p2align 4,,10
 8017              		.p2align 3
 8018              	.L784:
 232:sieve_extend.c ****                 index += step;
 8019              		.loc 1 232 25 view .LVU3407
 8020              	.LBE593:
 8021              	.LBE592:
 8022              	.LBE591:
 8023              	.LBE590:
 8024              	.LBE589:
 8025              	.LBE588:
 8026              	.LBE587:
 8027              	.LBE586:
 801:sieve_extend.c ****         if (block_stop > sieve->bits) block_stop = sieve->bits;
 8028              		.loc 1 801 5 is_stmt 1 view .LVU3408
 802:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 8029              		.loc 1 802 9 view .LVU3409
 8030              	.LBB677:
 8031              	.LBB678:
  97:sieve_extend.c ****     return index;
 8032              		.loc 1 97 21 is_stmt 0 view .LVU3410
 8033 34e0 488B5C24 		movq	48(%rsp), %rbx
 8033      30
 8034 34e5 4939D0   		cmpq	%rdx, %r8
  97:sieve_extend.c ****     return index;
 8035              		.loc 1 97 12 view .LVU3411
GAS LISTING /tmp/ccmX4xFB.s 			page 236


 8036 34e8 4C8B6C24 		movq	64(%rsp), %r13
 8036      40
  97:sieve_extend.c ****     return index;
 8037              		.loc 1 97 21 view .LVU3412
 8038 34ed 4889DF   		movq	%rbx, %rdi
 8039 34f0 4C0F47C2 		cmova	%rdx, %r8
 8040              	.LVL588:
  97:sieve_extend.c ****     return index;
 8041              		.loc 1 97 21 view .LVU3413
 8042              	.LBE678:
 8043              	.LBE677:
 803:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 8044              		.loc 1 803 9 is_stmt 1 view .LVU3414
 8045              	.LBB680:
 8046              	.LBI677:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8047              		.loc 1 96 25 view .LVU3415
 8048              	.LBB679:
  97:sieve_extend.c ****     return index;
 8049              		.loc 1 97 5 view .LVU3416
  97:sieve_extend.c ****     return index;
 8050              		.loc 1 97 11 view .LVU3417
  97:sieve_extend.c ****     return index;
 8051              		.loc 1 97 21 is_stmt 0 view .LVU3418
 8052 34f4 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 8053              		.loc 1 97 12 view .LVU3419
 8054 34f8 498B44FD 		movq	0(%r13,%rdi,8), %rax
 8054      00
  97:sieve_extend.c ****     return index;
 8055              		.loc 1 97 11 view .LVU3420
 8056 34fd 480FA3D8 		btq	%rbx, %rax
 8057 3501 0F83FB00 		jnc	.L704
 8057      0000
 8058 3507 488B4424 		movq	40(%rsp), %rax
 8058      28
 8059              	.L705:
  97:sieve_extend.c ****     return index;
 8060              		.loc 1 97 58 is_stmt 1 view .LVU3421
 8061              	.LVL589:
  97:sieve_extend.c ****     return index;
 8062              		.loc 1 97 21 is_stmt 0 view .LVU3422
 8063 350c 4889C1   		movq	%rax, %rcx
 8064 350f 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 8065              		.loc 1 97 12 view .LVU3423
 8066 3513 4D8B64CD 		movq	0(%r13,%rcx,8), %r12
 8066      00
  97:sieve_extend.c ****     return index;
 8067              		.loc 1 97 63 view .LVU3424
 8068 3518 4889C6   		movq	%rax, %rsi
  97:sieve_extend.c ****     return index;
 8069              		.loc 1 97 11 is_stmt 1 view .LVU3425
 8070 351b 490FA3C4 		btq	%rax, %r12
 8071 351f 0F83CB00 		jnc	.L1496
 8071      0000
 8072 3525 4C8D7001 		leaq	1(%rax), %r14
GAS LISTING /tmp/ccmX4xFB.s 			page 237


  97:sieve_extend.c ****     return index;
 8073              		.loc 1 97 21 is_stmt 0 view .LVU3426
 8074 3529 4C89F5   		movq	%r14, %rbp
 8075 352c 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
 8076              		.loc 1 97 12 view .LVU3427
 8077 3530 4D8B54ED 		movq	0(%r13,%rbp,8), %r10
 8077      00
 8078 3535 4C89F0   		movq	%r14, %rax
 8079              	.LVL590:
  97:sieve_extend.c ****     return index;
 8080              		.loc 1 97 58 is_stmt 1 view .LVU3428
  97:sieve_extend.c ****     return index;
 8081              		.loc 1 97 11 is_stmt 0 view .LVU3429
 8082 3538 4D0FA3F2 		btq	%r14, %r10
  97:sieve_extend.c ****     return index;
 8083              		.loc 1 97 63 view .LVU3430
 8084 353c 4C89F6   		movq	%r14, %rsi
  97:sieve_extend.c ****     return index;
 8085              		.loc 1 97 11 is_stmt 1 view .LVU3431
 8086 353f 0F83AB00 		jnc	.L1496
 8086      0000
 8087 3545 48FFC0   		incq	%rax
 8088              	.LVL591:
  97:sieve_extend.c ****     return index;
 8089              		.loc 1 97 58 view .LVU3432
  97:sieve_extend.c ****     return index;
 8090              		.loc 1 97 21 is_stmt 0 view .LVU3433
 8091 3548 4989C1   		movq	%rax, %r9
 8092 354b 49C1E906 		shrq	$6, %r9
  97:sieve_extend.c ****     return index;
 8093              		.loc 1 97 12 view .LVU3434
 8094 354f 4B8B5CCD 		movq	0(%r13,%r9,8), %rbx
 8094      00
  97:sieve_extend.c ****     return index;
 8095              		.loc 1 97 63 view .LVU3435
 8096 3554 4889C6   		movq	%rax, %rsi
  97:sieve_extend.c ****     return index;
 8097              		.loc 1 97 11 is_stmt 1 view .LVU3436
 8098 3557 480FA3C3 		btq	%rax, %rbx
 8099 355b 0F838F00 		jnc	.L1496
 8099      0000
 8100 3561 498D4602 		leaq	2(%r14), %rax
 8101              	.LVL592:
  97:sieve_extend.c ****     return index;
 8102              		.loc 1 97 58 view .LVU3437
  97:sieve_extend.c ****     return index;
 8103              		.loc 1 97 21 is_stmt 0 view .LVU3438
 8104 3565 4889C7   		movq	%rax, %rdi
 8105 3568 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 8106              		.loc 1 97 12 view .LVU3439
 8107 356c 498B4CFD 		movq	0(%r13,%rdi,8), %rcx
 8107      00
  97:sieve_extend.c ****     return index;
 8108              		.loc 1 97 63 view .LVU3440
 8109 3571 4889C6   		movq	%rax, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 238


  97:sieve_extend.c ****     return index;
 8110              		.loc 1 97 11 is_stmt 1 view .LVU3441
 8111 3574 480FA3C1 		btq	%rax, %rcx
 8112 3578 7376     		jnc	.L1496
 8113 357a 498D4603 		leaq	3(%r14), %rax
 8114              	.LVL593:
  97:sieve_extend.c ****     return index;
 8115              		.loc 1 97 58 view .LVU3442
  97:sieve_extend.c ****     return index;
 8116              		.loc 1 97 21 is_stmt 0 view .LVU3443
 8117 357e 4989C4   		movq	%rax, %r12
 8118 3581 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 8119              		.loc 1 97 12 view .LVU3444
 8120 3585 4B8B6CE5 		movq	0(%r13,%r12,8), %rbp
 8120      00
  97:sieve_extend.c ****     return index;
 8121              		.loc 1 97 63 view .LVU3445
 8122 358a 4889C6   		movq	%rax, %rsi
  97:sieve_extend.c ****     return index;
 8123              		.loc 1 97 11 is_stmt 1 view .LVU3446
 8124 358d 480FA3C5 		btq	%rax, %rbp
 8125 3591 735D     		jnc	.L1496
 8126 3593 498D4604 		leaq	4(%r14), %rax
 8127              	.LVL594:
  97:sieve_extend.c ****     return index;
 8128              		.loc 1 97 58 view .LVU3447
  97:sieve_extend.c ****     return index;
 8129              		.loc 1 97 21 is_stmt 0 view .LVU3448
 8130 3597 4989C2   		movq	%rax, %r10
 8131 359a 49C1EA06 		shrq	$6, %r10
  97:sieve_extend.c ****     return index;
 8132              		.loc 1 97 12 view .LVU3449
 8133 359e 4F8B4CD5 		movq	0(%r13,%r10,8), %r9
 8133      00
  97:sieve_extend.c ****     return index;
 8134              		.loc 1 97 63 view .LVU3450
 8135 35a3 4889C6   		movq	%rax, %rsi
  97:sieve_extend.c ****     return index;
 8136              		.loc 1 97 11 is_stmt 1 view .LVU3451
 8137 35a6 490FA3C1 		btq	%rax, %r9
 8138 35aa 7344     		jnc	.L1496
 8139 35ac 498D4605 		leaq	5(%r14), %rax
 8140              	.LVL595:
  97:sieve_extend.c ****     return index;
 8141              		.loc 1 97 58 view .LVU3452
  97:sieve_extend.c ****     return index;
 8142              		.loc 1 97 21 is_stmt 0 view .LVU3453
 8143 35b0 4889C3   		movq	%rax, %rbx
 8144 35b3 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 8145              		.loc 1 97 12 view .LVU3454
 8146 35b7 498B7CDD 		movq	0(%r13,%rbx,8), %rdi
 8146      00
  97:sieve_extend.c ****     return index;
 8147              		.loc 1 97 63 view .LVU3455
 8148 35bc 4889C6   		movq	%rax, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 239


  97:sieve_extend.c ****     return index;
 8149              		.loc 1 97 11 is_stmt 1 view .LVU3456
 8150 35bf 480FA3C7 		btq	%rax, %rdi
 8151 35c3 732B     		jnc	.L1496
 8152 35c5 498D4606 		leaq	6(%r14), %rax
 8153              	.LVL596:
  97:sieve_extend.c ****     return index;
 8154              		.loc 1 97 58 view .LVU3457
  97:sieve_extend.c ****     return index;
 8155              		.loc 1 97 21 is_stmt 0 view .LVU3458
 8156 35c9 4889C1   		movq	%rax, %rcx
 8157 35cc 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 8158              		.loc 1 97 12 view .LVU3459
 8159 35d0 4D8B64CD 		movq	0(%r13,%rcx,8), %r12
 8159      00
  97:sieve_extend.c ****     return index;
 8160              		.loc 1 97 63 view .LVU3460
 8161 35d5 4889C6   		movq	%rax, %rsi
  97:sieve_extend.c ****     return index;
 8162              		.loc 1 97 11 is_stmt 1 view .LVU3461
 8163 35d8 490FA3C4 		btq	%rax, %r12
 8164 35dc 7312     		jnc	.L1496
 8165 35de 498D4607 		leaq	7(%r14), %rax
 8166              	.LVL597:
  97:sieve_extend.c ****     return index;
 8167              		.loc 1 97 11 is_stmt 0 view .LVU3462
 8168 35e2 E925FFFF 		jmp	.L705
 8168      FF
 8169              	.LVL598:
 8170 35e7 660F1F84 		.p2align 4,,10
 8170      00000000 
 8170      00
 8171              		.p2align 3
 8172              	.L1496:
  97:sieve_extend.c ****     return index;
 8173              		.loc 1 97 11 view .LVU3463
 8174 35f0 48894424 		movq	%rax, 40(%rsp)
 8174      28
 8175 35f5 48FFC0   		incq	%rax
 8176              	.LVL599:
  97:sieve_extend.c ****     return index;
 8177              		.loc 1 97 11 view .LVU3464
 8178 35f8 48897424 		movq	%rsi, 48(%rsp)
 8178      30
 8179 35fd 48894424 		movq	%rax, 40(%rsp)
 8179      28
 8180              	.LVL600:
 8181              	.L704:
  98:sieve_extend.c ****     
 8182              		.loc 1 98 5 is_stmt 1 view .LVU3465
  98:sieve_extend.c ****     
 8183              		.loc 1 98 5 is_stmt 0 view .LVU3466
 8184              	.LBE679:
 8185              	.LBE680:
 804:sieve_extend.c ****         // sieve_block_stripe(bitarray, block_start, block_stop, prime+1);
 8186              		.loc 1 804 9 is_stmt 1 view .LVU3467
GAS LISTING /tmp/ccmX4xFB.s 			page 240


 8187              	.LBB681:
 8188              	.LBI586:
 682:sieve_extend.c ****     counter_t prime = prime_start;
 8189              		.loc 1 682 13 view .LVU3468
 8190              	.LBB675:
 683:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 8191              		.loc 1 683 5 view .LVU3469
 684:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 8192              		.loc 1 684 5 view .LVU3470
 684:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 8193              		.loc 1 684 15 is_stmt 0 view .LVU3471
 8194 3602 4C8B6C24 		movq	40(%rsp), %r13
 8194      28
 8195 3607 488B7424 		movq	48(%rsp), %rsi
 8195      30
 8196 360c 4C0FAFEE 		imulq	%rsi, %r13
 8197 3610 4D01ED   		addq	%r13, %r13
 8198              	.LVL601:
 685:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 8199              		.loc 1 685 5 is_stmt 1 view .LVU3472
 686:sieve_extend.c ****     
 8200              		.loc 1 686 5 view .LVU3473
 688:sieve_extend.c ****         step  = prime * 2 + 1;
 8201              		.loc 1 688 5 view .LVU3474
 688:sieve_extend.c ****         step  = prime * 2 + 1;
 8202              		.loc 1 688 11 view .LVU3475
 8203 3613 4D39E8   		cmpq	%r13, %r8
 8204 3616 0F821104 		jb	.L706
 8204      0000
 8205              	.LBB610:
 8206              	.LBB611:
 191:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 8207              		.loc 1 191 21 is_stmt 0 view .LVU3476
 8208 361c 4D89C6   		movq	%r8, %r14
 8209 361f 49C1EE06 		shrq	$6, %r14
 215:sieve_extend.c **** }
 8210              		.loc 1 215 38 view .LVU3477
 8211 3623 4489C2   		movl	%r8d, %edx
 8212 3626 48C7C0FF 		movq	$-1, %rax
 8212      FFFFFF
 8213 362d F7D2     		notl	%edx
 8214 362f 4D8D56FF 		leaq	-1(%r14), %r10
 8215 3633 C4E2EBF7 		shrx	%rdx, %rax, %rbp
 8215      E8
 191:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 8216              		.loc 1 191 21 view .LVU3478
 8217 3638 4C897424 		movq	%r14, 24(%rsp)
 8217      18
 215:sieve_extend.c **** }
 8218              		.loc 1 215 38 view .LVU3479
 8219 363d 48896C24 		movq	%rbp, 16(%rsp)
 8219      10
 8220 3642 4C895424 		movq	%r10, 32(%rsp)
 8220      20
 8221 3647 4F8D0CF7 		leaq	(%r15,%r14,8), %r9
 8222 364b 4C89E8   		movq	%r13, %rax
 8223              	.LVL602:
GAS LISTING /tmp/ccmX4xFB.s 			page 241


 8224 364e 6690     		.p2align 4,,10
 8225              		.p2align 3
 8226              	.L718:
 215:sieve_extend.c **** }
 8227              		.loc 1 215 38 view .LVU3480
 8228              	.LBE611:
 8229              	.LBE610:
 689:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 8230              		.loc 1 689 9 is_stmt 1 view .LVU3481
 689:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 8231              		.loc 1 689 15 is_stmt 0 view .LVU3482
 8232 3650 488D6C36 		leaq	1(%rsi,%rsi), %rbp
 8232      01
 8233              	.LVL603:
 690:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8234              		.loc 1 690 9 is_stmt 1 view .LVU3483
 690:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8235              		.loc 1 690 12 is_stmt 0 view .LVU3484
 8236 3655 483B2D00 		cmpq	global_SMALLSTEP_FASTER(%rip), %rbp
 8236      000000
 8237 365c 0F871E04 		ja	.L1563
 8237      0000
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8238              		.loc 1 691 9 is_stmt 1 view .LVU3485
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8239              		.loc 1 691 12 is_stmt 0 view .LVU3486
 8240 3662 488B5C24 		movq	8(%rsp), %rbx
 8240      08
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8241              		.loc 1 691 35 view .LVU3487
 8242 3667 4C8D6601 		leaq	1(%rsi), %r12
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8243              		.loc 1 691 12 view .LVU3488
 8244 366b 4C39E3   		cmpq	%r12, %rbx
 8245 366e 7212     		jb	.L709
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8246              		.loc 1 691 41 is_stmt 1 view .LVU3489
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8247              		.loc 1 691 61 is_stmt 0 view .LVU3490
 8248 3670 488D0433 		leaq	(%rbx,%rsi), %rax
 8249              	.LVL604:
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8250              		.loc 1 691 102 view .LVU3491
 8251 3674 31D2     		xorl	%edx, %edx
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8252              		.loc 1 691 69 view .LVU3492
 8253 3676 4801C6   		addq	%rax, %rsi
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8254              		.loc 1 691 102 view .LVU3493
 8255 3679 48F7F5   		divq	%rbp
 8256              	.LVL605:
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8257              		.loc 1 691 47 view .LVU3494
 8258 367c 4889F0   		movq	%rsi, %rax
 8259 367f 4829D0   		subq	%rdx, %rax
 8260              	.LVL606:
 8261              	.L709:
GAS LISTING /tmp/ccmX4xFB.s 			page 242


 692:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 8262              		.loc 1 692 9 is_stmt 1 view .LVU3495
 8263              	.LBB616:
 8264              	.LBI610:
 182:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 8265              		.loc 1 182 20 view .LVU3496
 8266              	.LBB614:
 183:sieve_extend.c **** 
 8267              		.loc 1 183 5 view .LVU3497
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 8268              		.loc 1 186 2 view .LVU3498
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8269              		.loc 1 187 5 view .LVU3499
 8270              	.LBB612:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8271              		.loc 1 187 10 view .LVU3500
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8272              		.loc 1 187 41 view .LVU3501
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8273              		.loc 1 187 5 is_stmt 0 view .LVU3502
 8274 3682 4883FD40 		cmpq	$64, %rbp
 8275 3686 0F87E403 		ja	.L788
 8275      0000
 8276 368c 4889EE   		movq	%rbp, %rsi
 8277              	.LBE612:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 8278              		.loc 1 186 12 view .LVU3503
 8279 368f BF010000 		movl	$1, %edi
 8279      00
 8280              	.LVL607:
 8281              	.L711:
 8282              	.LBB613:
 188:sieve_extend.c ****     }
 8283              		.loc 1 188 9 is_stmt 1 view .LVU3504
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8284              		.loc 1 187 79 is_stmt 0 view .LVU3505
 8285 3694 4C8D2C36 		leaq	(%rsi,%rsi), %r13
 188:sieve_extend.c ****     }
 8286              		.loc 1 188 29 view .LVU3506
 8287 3698 C4E2C9F7 		shlx	%rsi, %rdi, %rcx
 8287      CF
 188:sieve_extend.c ****     }
 8288              		.loc 1 188 17 view .LVU3507
 8289 369d 4809CF   		orq	%rcx, %rdi
 8290              	.LVL608:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8291              		.loc 1 187 67 is_stmt 1 view .LVU3508
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8292              		.loc 1 187 41 view .LVU3509
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8293              		.loc 1 187 5 is_stmt 0 view .LVU3510
 8294 36a0 4983FD40 		cmpq	$64, %r13
 8295 36a4 0F879E00 		ja	.L710
 8295      0000
 188:sieve_extend.c ****     }
 8296              		.loc 1 188 9 is_stmt 1 view .LVU3511
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccmX4xFB.s 			page 243


 8297              		.loc 1 187 79 is_stmt 0 view .LVU3512
 8298 36aa 488D1CB5 		leaq	0(,%rsi,4), %rbx
 8298      00000000 
 188:sieve_extend.c ****     }
 8299              		.loc 1 188 29 view .LVU3513
 8300 36b2 C46291F7 		shlx	%r13, %rdi, %r10
 8300      D7
 188:sieve_extend.c ****     }
 8301              		.loc 1 188 17 view .LVU3514
 8302 36b7 4C09D7   		orq	%r10, %rdi
 8303              	.LVL609:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8304              		.loc 1 187 67 is_stmt 1 view .LVU3515
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8305              		.loc 1 187 41 view .LVU3516
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8306              		.loc 1 187 5 is_stmt 0 view .LVU3517
 8307 36ba 4883FB40 		cmpq	$64, %rbx
 8308 36be 0F878400 		ja	.L710
 8308      0000
 188:sieve_extend.c ****     }
 8309              		.loc 1 188 9 is_stmt 1 view .LVU3518
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8310              		.loc 1 187 79 is_stmt 0 view .LVU3519
 8311 36c4 488D0CF5 		leaq	0(,%rsi,8), %rcx
 8311      00000000 
 188:sieve_extend.c ****     }
 8312              		.loc 1 188 29 view .LVU3520
 8313 36cc C4E2E1F7 		shlx	%rbx, %rdi, %rdx
 8313      D7
 188:sieve_extend.c ****     }
 8314              		.loc 1 188 17 view .LVU3521
 8315 36d1 4809D7   		orq	%rdx, %rdi
 8316              	.LVL610:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8317              		.loc 1 187 67 is_stmt 1 view .LVU3522
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8318              		.loc 1 187 41 view .LVU3523
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8319              		.loc 1 187 5 is_stmt 0 view .LVU3524
 8320 36d4 4883F940 		cmpq	$64, %rcx
 8321 36d8 776E     		ja	.L710
 188:sieve_extend.c ****     }
 8322              		.loc 1 188 9 is_stmt 1 view .LVU3525
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8323              		.loc 1 187 79 is_stmt 0 view .LVU3526
 8324 36da 4989F2   		movq	%rsi, %r10
 8325 36dd 49C1E204 		salq	$4, %r10
 188:sieve_extend.c ****     }
 8326              		.loc 1 188 29 view .LVU3527
 8327 36e1 C462F1F7 		shlx	%rcx, %rdi, %r13
 8327      EF
 188:sieve_extend.c ****     }
 8328              		.loc 1 188 17 view .LVU3528
 8329 36e6 4C09EF   		orq	%r13, %rdi
 8330              	.LVL611:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccmX4xFB.s 			page 244


 8331              		.loc 1 187 67 is_stmt 1 view .LVU3529
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8332              		.loc 1 187 41 view .LVU3530
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8333              		.loc 1 187 5 is_stmt 0 view .LVU3531
 8334 36e9 4983FA40 		cmpq	$64, %r10
 8335 36ed 7759     		ja	.L710
 188:sieve_extend.c ****     }
 8336              		.loc 1 188 9 is_stmt 1 view .LVU3532
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8337              		.loc 1 187 79 is_stmt 0 view .LVU3533
 8338 36ef 4889F2   		movq	%rsi, %rdx
 8339 36f2 48C1E205 		salq	$5, %rdx
 188:sieve_extend.c ****     }
 8340              		.loc 1 188 29 view .LVU3534
 8341 36f6 C4E2A9F7 		shlx	%r10, %rdi, %rbx
 8341      DF
 188:sieve_extend.c ****     }
 8342              		.loc 1 188 17 view .LVU3535
 8343 36fb 4809DF   		orq	%rbx, %rdi
 8344              	.LVL612:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8345              		.loc 1 187 67 is_stmt 1 view .LVU3536
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8346              		.loc 1 187 41 view .LVU3537
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8347              		.loc 1 187 5 is_stmt 0 view .LVU3538
 8348 36fe 4883FA40 		cmpq	$64, %rdx
 8349 3702 7744     		ja	.L710
 188:sieve_extend.c ****     }
 8350              		.loc 1 188 9 is_stmt 1 view .LVU3539
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8351              		.loc 1 187 79 is_stmt 0 view .LVU3540
 8352 3704 4989F5   		movq	%rsi, %r13
 8353 3707 49C1E506 		salq	$6, %r13
 188:sieve_extend.c ****     }
 8354              		.loc 1 188 29 view .LVU3541
 8355 370b C4E2E9F7 		shlx	%rdx, %rdi, %rcx
 8355      CF
 188:sieve_extend.c ****     }
 8356              		.loc 1 188 17 view .LVU3542
 8357 3710 4809CF   		orq	%rcx, %rdi
 8358              	.LVL613:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8359              		.loc 1 187 67 is_stmt 1 view .LVU3543
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8360              		.loc 1 187 41 view .LVU3544
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8361              		.loc 1 187 5 is_stmt 0 view .LVU3545
 8362 3713 4983FD40 		cmpq	$64, %r13
 8363 3717 772F     		ja	.L710
 188:sieve_extend.c ****     }
 8364              		.loc 1 188 9 is_stmt 1 view .LVU3546
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8365              		.loc 1 187 79 is_stmt 0 view .LVU3547
 8366 3719 4889F3   		movq	%rsi, %rbx
 8367 371c 48C1E307 		salq	$7, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 245


 188:sieve_extend.c ****     }
 8368              		.loc 1 188 29 view .LVU3548
 8369 3720 C46291F7 		shlx	%r13, %rdi, %r10
 8369      D7
 188:sieve_extend.c ****     }
 8370              		.loc 1 188 17 view .LVU3549
 8371 3725 4C09D7   		orq	%r10, %rdi
 8372              	.LVL614:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8373              		.loc 1 187 67 is_stmt 1 view .LVU3550
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8374              		.loc 1 187 41 view .LVU3551
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8375              		.loc 1 187 5 is_stmt 0 view .LVU3552
 8376 3728 4883FB40 		cmpq	$64, %rbx
 8377 372c 771A     		ja	.L710
 188:sieve_extend.c ****     }
 8378              		.loc 1 188 9 is_stmt 1 view .LVU3553
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8379              		.loc 1 187 79 is_stmt 0 view .LVU3554
 8380 372e 48C1E608 		salq	$8, %rsi
 188:sieve_extend.c ****     }
 8381              		.loc 1 188 29 view .LVU3555
 8382 3732 C4E2E1F7 		shlx	%rbx, %rdi, %rdx
 8382      D7
 188:sieve_extend.c ****     }
 8383              		.loc 1 188 17 view .LVU3556
 8384 3737 4809D7   		orq	%rdx, %rdi
 8385              	.LVL615:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8386              		.loc 1 187 67 is_stmt 1 view .LVU3557
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8387              		.loc 1 187 41 view .LVU3558
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8388              		.loc 1 187 5 is_stmt 0 view .LVU3559
 8389 373a 4883FE40 		cmpq	$64, %rsi
 8390 373e 0F8650FF 		jbe	.L711
 8390      FFFF
 8391              	.LVL616:
 8392              		.p2align 4,,10
 8393 3744 0F1F4000 		.p2align 3
 8394              	.L710:
 187:sieve_extend.c ****         pattern |= (pattern << patternsize);
 8395              		.loc 1 187 5 view .LVU3560
 8396              	.LBE613:
 191:sieve_extend.c ****     counter_t copy_word = wordindex(range_start);
 8397              		.loc 1 191 5 is_stmt 1 view .LVU3561
 192:sieve_extend.c ****  
 8398              		.loc 1 192 5 view .LVU3562
 192:sieve_extend.c ****  
 8399              		.loc 1 192 15 is_stmt 0 view .LVU3563
 8400 3748 4989C5   		movq	%rax, %r13
 8401 374b 49C1ED06 		shrq	$6, %r13
 8402              	.LVL617:
 194:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask2(range_stop)) ;
 8403              		.loc 1 194 5 is_stmt 1 view .LVU3564
 8404 374f 4A8D34ED 		leaq	0(,%r13,8), %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 246


 8404      00000000 
 8405 3757 498D0C37 		leaq	(%r15,%rsi), %rcx
 8406 375b 4C8B11   		movq	(%rcx), %r10
 8407 375e C4E2F9F7 		shlx	%rax, %rdi, %rbx
 8407      DF
 194:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask2(range_stop)) ;
 8408              		.loc 1 194 8 is_stmt 0 view .LVU3565
 8409 3763 4D39EE   		cmpq	%r13, %r14
 8410 3766 0F84F402 		je	.L1564
 8410      0000
 201:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 8411              		.loc 1 201 5 is_stmt 1 view .LVU3566
 202:sieve_extend.c **** 
 8412              		.loc 1 202 28 is_stmt 0 view .LVU3567
 8413 376c 83E03F   		andl	$63, %eax
 8414              	.LVL618:
 202:sieve_extend.c **** 
 8415              		.loc 1 202 55 view .LVU3568
 8416 376f 31D2     		xorl	%edx, %edx
 8417 3771 48F7F5   		divq	%rbp
 201:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 8418              		.loc 1 201 25 view .LVU3569
 8419 3774 4909DA   		orq	%rbx, %r10
 8420 3777 4C8911   		movq	%r10, (%rcx)
 202:sieve_extend.c **** 
 8421              		.loc 1 202 5 is_stmt 1 view .LVU3570
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 8422              		.loc 1 204 16 is_stmt 0 view .LVU3571
 8423 377a B8400000 		movl	$64, %eax
 8423      00
 202:sieve_extend.c **** 
 8424              		.loc 1 202 13 view .LVU3572
 8425 377f C4E2E9F7 		shlx	%rdx, %rdi, %rcx
 8425      CF
 8426              	.LVL619:
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 8427              		.loc 1 204 5 is_stmt 1 view .LVU3573
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 8428              		.loc 1 204 16 is_stmt 0 view .LVU3574
 8429 3784 31D2     		xorl	%edx, %edx
 8430              	.LVL620:
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 8431              		.loc 1 204 16 view .LVU3575
 8432 3786 48F7F5   		divq	%rbp
 205:sieve_extend.c ****     copy_word++;
 8433              		.loc 1 205 78 view .LVU3576
 8434 3789 B8200000 		movl	$32, %eax
 8434      00
 206:sieve_extend.c **** 
 8435              		.loc 1 206 14 view .LVU3577
 8436 378e 498D6D01 		leaq	1(%r13), %rbp
 8437              	.LVL621:
 205:sieve_extend.c ****     copy_word++;
 8438              		.loc 1 205 78 view .LVU3578
 8439 3792 4829D0   		subq	%rdx, %rax
 205:sieve_extend.c ****     copy_word++;
 8440              		.loc 1 205 16 view .LVU3579
GAS LISTING /tmp/ccmX4xFB.s 			page 247


 8441 3795 4801C0   		addq	%rax, %rax
 204:sieve_extend.c ****     bitshift_t pattern_shift_flipped = (bitshift_t)WORD_SIZE - pattern_shift - pattern_shift;
 8442              		.loc 1 204 16 view .LVU3580
 8443 3798 4889D3   		movq	%rdx, %rbx
 8444              	.LVL622:
 205:sieve_extend.c ****     copy_word++;
 8445              		.loc 1 205 5 is_stmt 1 view .LVU3581
 206:sieve_extend.c **** 
 8446              		.loc 1 206 5 view .LVU3582
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8447              		.loc 1 208 5 view .LVU3583
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8448              		.loc 1 208 11 view .LVU3584
 8449 379b 4189D2   		movl	%edx, %r10d
 8450 379e 89C7     		movl	%eax, %edi
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8451              		.loc 1 208 11 is_stmt 0 view .LVU3585
 8452 37a0 4939EE   		cmpq	%rbp, %r14
 8453 37a3 0F867801 		jbe	.L714
 8453      0000
 8454 37a9 498D5437 		leaq	8(%r15,%rsi), %rdx
 8454      08
 8455              	.LVL623:
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8456              		.loc 1 208 11 view .LVU3586
 8457 37ae 4C89CE   		movq	%r9, %rsi
 8458 37b1 4829D6   		subq	%rdx, %rsi
 8459 37b4 4883EE08 		subq	$8, %rsi
 8460 37b8 48C1EE03 		shrq	$3, %rsi
 8461 37bc 48FFC6   		incq	%rsi
 8462 37bf 83E607   		andl	$7, %esi
 8463 37c2 0F84BD00 		je	.L715
 8463      0000
 8464 37c8 4883FE01 		cmpq	$1, %rsi
 8465 37cc 0F849600 		je	.L1121
 8465      0000
 8466 37d2 4883FE02 		cmpq	$2, %rsi
 8467 37d6 747C     		je	.L1122
 8468 37d8 4883FE03 		cmpq	$3, %rsi
 8469 37dc 7462     		je	.L1123
 8470 37de 4883FE04 		cmpq	$4, %rsi
 8471 37e2 7448     		je	.L1124
 8472 37e4 4883FE05 		cmpq	$5, %rsi
 8473 37e8 742E     		je	.L1125
 8474 37ea 4883FE06 		cmpq	$6, %rsi
 8475 37ee 7414     		je	.L1126
 8476              	.LVL624:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8477              		.loc 1 209 9 is_stmt 1 view .LVU3587
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8478              		.loc 1 209 28 is_stmt 0 view .LVU3588
 8479 37f0 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8479      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8480              		.loc 1 209 57 view .LVU3589
 8481 37f5 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8481      C9
GAS LISTING /tmp/ccmX4xFB.s 			page 248


 8482              	.LVL625:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8483              		.loc 1 209 17 view .LVU3590
 8484 37fa 4809F1   		orq	%rsi, %rcx
 8485              	.LVL626:
 210:sieve_extend.c ****         copy_word++;
 8486              		.loc 1 210 9 is_stmt 1 view .LVU3591
 210:sieve_extend.c ****         copy_word++;
 8487              		.loc 1 210 29 is_stmt 0 view .LVU3592
 8488 37fd 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8489              		.loc 1 211 9 is_stmt 1 view .LVU3593
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8490              		.loc 1 208 11 view .LVU3594
 8491 3800 4883C208 		addq	$8, %rdx
 8492              	.LVL627:
 8493              	.L1126:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8494              		.loc 1 209 9 view .LVU3595
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8495              		.loc 1 209 28 is_stmt 0 view .LVU3596
 8496 3804 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8496      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8497              		.loc 1 209 57 view .LVU3597
 8498 3809 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8498      C9
 8499              	.LVL628:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8500              		.loc 1 209 17 view .LVU3598
 8501 380e 4809F1   		orq	%rsi, %rcx
 8502              	.LVL629:
 210:sieve_extend.c ****         copy_word++;
 8503              		.loc 1 210 9 is_stmt 1 view .LVU3599
 210:sieve_extend.c ****         copy_word++;
 8504              		.loc 1 210 29 is_stmt 0 view .LVU3600
 8505 3811 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8506              		.loc 1 211 9 is_stmt 1 view .LVU3601
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8507              		.loc 1 208 11 view .LVU3602
 8508 3814 4883C208 		addq	$8, %rdx
 8509              	.LVL630:
 8510              	.L1125:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8511              		.loc 1 209 9 view .LVU3603
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8512              		.loc 1 209 28 is_stmt 0 view .LVU3604
 8513 3818 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8513      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8514              		.loc 1 209 57 view .LVU3605
 8515 381d C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8515      C9
 8516              	.LVL631:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8517              		.loc 1 209 17 view .LVU3606
GAS LISTING /tmp/ccmX4xFB.s 			page 249


 8518 3822 4809F1   		orq	%rsi, %rcx
 8519              	.LVL632:
 210:sieve_extend.c ****         copy_word++;
 8520              		.loc 1 210 9 is_stmt 1 view .LVU3607
 210:sieve_extend.c ****         copy_word++;
 8521              		.loc 1 210 29 is_stmt 0 view .LVU3608
 8522 3825 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8523              		.loc 1 211 9 is_stmt 1 view .LVU3609
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8524              		.loc 1 208 11 view .LVU3610
 8525 3828 4883C208 		addq	$8, %rdx
 8526              	.LVL633:
 8527              	.L1124:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8528              		.loc 1 209 9 view .LVU3611
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8529              		.loc 1 209 28 is_stmt 0 view .LVU3612
 8530 382c C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8530      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8531              		.loc 1 209 57 view .LVU3613
 8532 3831 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8532      C9
 8533              	.LVL634:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8534              		.loc 1 209 17 view .LVU3614
 8535 3836 4809F1   		orq	%rsi, %rcx
 8536              	.LVL635:
 210:sieve_extend.c ****         copy_word++;
 8537              		.loc 1 210 9 is_stmt 1 view .LVU3615
 210:sieve_extend.c ****         copy_word++;
 8538              		.loc 1 210 29 is_stmt 0 view .LVU3616
 8539 3839 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8540              		.loc 1 211 9 is_stmt 1 view .LVU3617
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8541              		.loc 1 208 11 view .LVU3618
 8542 383c 4883C208 		addq	$8, %rdx
 8543              	.LVL636:
 8544              	.L1123:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8545              		.loc 1 209 9 view .LVU3619
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8546              		.loc 1 209 28 is_stmt 0 view .LVU3620
 8547 3840 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8547      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8548              		.loc 1 209 57 view .LVU3621
 8549 3845 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8549      C9
 8550              	.LVL637:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8551              		.loc 1 209 17 view .LVU3622
 8552 384a 4809F1   		orq	%rsi, %rcx
 8553              	.LVL638:
 210:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccmX4xFB.s 			page 250


 8554              		.loc 1 210 9 is_stmt 1 view .LVU3623
 210:sieve_extend.c ****         copy_word++;
 8555              		.loc 1 210 29 is_stmt 0 view .LVU3624
 8556 384d 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8557              		.loc 1 211 9 is_stmt 1 view .LVU3625
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8558              		.loc 1 208 11 view .LVU3626
 8559 3850 4883C208 		addq	$8, %rdx
 8560              	.LVL639:
 8561              	.L1122:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8562              		.loc 1 209 9 view .LVU3627
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8563              		.loc 1 209 28 is_stmt 0 view .LVU3628
 8564 3854 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8564      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8565              		.loc 1 209 57 view .LVU3629
 8566 3859 C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8566      C9
 8567              	.LVL640:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8568              		.loc 1 209 17 view .LVU3630
 8569 385e 4809F1   		orq	%rsi, %rcx
 8570              	.LVL641:
 210:sieve_extend.c ****         copy_word++;
 8571              		.loc 1 210 9 is_stmt 1 view .LVU3631
 210:sieve_extend.c ****         copy_word++;
 8572              		.loc 1 210 29 is_stmt 0 view .LVU3632
 8573 3861 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8574              		.loc 1 211 9 is_stmt 1 view .LVU3633
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8575              		.loc 1 208 11 view .LVU3634
 8576 3864 4883C208 		addq	$8, %rdx
 8577              	.LVL642:
 8578              	.L1121:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8579              		.loc 1 209 9 view .LVU3635
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8580              		.loc 1 209 28 is_stmt 0 view .LVU3636
 8581 3868 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8581      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8582              		.loc 1 209 57 view .LVU3637
 8583 386d C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8583      C9
 8584              	.LVL643:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8585              		.loc 1 209 17 view .LVU3638
 8586 3872 4809F1   		orq	%rsi, %rcx
 8587              	.LVL644:
 210:sieve_extend.c ****         copy_word++;
 8588              		.loc 1 210 9 is_stmt 1 view .LVU3639
 210:sieve_extend.c ****         copy_word++;
 8589              		.loc 1 210 29 is_stmt 0 view .LVU3640
GAS LISTING /tmp/ccmX4xFB.s 			page 251


 8590 3875 48090A   		orq	%rcx, (%rdx)
 211:sieve_extend.c ****     } 
 8591              		.loc 1 211 9 is_stmt 1 view .LVU3641
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8592              		.loc 1 208 11 view .LVU3642
 8593 3878 4883C208 		addq	$8, %rdx
 8594 387c 4939D1   		cmpq	%rdx, %r9
 8595 387f 0F849400 		je	.L1345
 8595      0000
 8596              	.LVL645:
 8597              	.L715:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8598              		.loc 1 209 9 view .LVU3643
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8599              		.loc 1 209 28 is_stmt 0 view .LVU3644
 8600 3885 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8600      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8601              		.loc 1 209 57 view .LVU3645
 8602 388a C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8602      C9
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8603              		.loc 1 209 17 view .LVU3646
 8604 388f 4809CE   		orq	%rcx, %rsi
 210:sieve_extend.c ****         copy_word++;
 8605              		.loc 1 210 9 is_stmt 1 view .LVU3647
 210:sieve_extend.c ****         copy_word++;
 8606              		.loc 1 210 29 is_stmt 0 view .LVU3648
 8607 3892 480932   		orq	%rsi, (%rdx)
 211:sieve_extend.c ****     } 
 8608              		.loc 1 211 9 is_stmt 1 view .LVU3649
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8609              		.loc 1 208 11 view .LVU3650
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8610              		.loc 1 209 9 view .LVU3651
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8611              		.loc 1 209 28 is_stmt 0 view .LVU3652
 8612 3895 C4E2ABF7 		shrx	%r10, %rsi, %rcx
 8612      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8613              		.loc 1 209 57 view .LVU3653
 8614 389a C4E2C1F7 		shlx	%rdi, %rsi, %rsi
 8614      F6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8615              		.loc 1 209 17 view .LVU3654
 8616 389f 4809F1   		orq	%rsi, %rcx
 210:sieve_extend.c ****         copy_word++;
 8617              		.loc 1 210 9 is_stmt 1 view .LVU3655
 210:sieve_extend.c ****         copy_word++;
 8618              		.loc 1 210 29 is_stmt 0 view .LVU3656
 8619 38a2 48094A08 		orq	%rcx, 8(%rdx)
 211:sieve_extend.c ****     } 
 8620              		.loc 1 211 9 is_stmt 1 view .LVU3657
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8621              		.loc 1 208 11 view .LVU3658
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8622              		.loc 1 209 9 view .LVU3659
GAS LISTING /tmp/ccmX4xFB.s 			page 252


 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8623              		.loc 1 209 28 is_stmt 0 view .LVU3660
 8624 38a6 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8624      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8625              		.loc 1 209 57 view .LVU3661
 8626 38ab C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8626      C9
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8627              		.loc 1 209 17 view .LVU3662
 8628 38b0 4809CE   		orq	%rcx, %rsi
 210:sieve_extend.c ****         copy_word++;
 8629              		.loc 1 210 9 is_stmt 1 view .LVU3663
 210:sieve_extend.c ****         copy_word++;
 8630              		.loc 1 210 29 is_stmt 0 view .LVU3664
 8631 38b3 48097210 		orq	%rsi, 16(%rdx)
 211:sieve_extend.c ****     } 
 8632              		.loc 1 211 9 is_stmt 1 view .LVU3665
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8633              		.loc 1 208 11 view .LVU3666
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8634              		.loc 1 209 9 view .LVU3667
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8635              		.loc 1 209 28 is_stmt 0 view .LVU3668
 8636 38b7 C4E2ABF7 		shrx	%r10, %rsi, %rcx
 8636      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8637              		.loc 1 209 57 view .LVU3669
 8638 38bc C4E2C1F7 		shlx	%rdi, %rsi, %rsi
 8638      F6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8639              		.loc 1 209 17 view .LVU3670
 8640 38c1 4809F1   		orq	%rsi, %rcx
 210:sieve_extend.c ****         copy_word++;
 8641              		.loc 1 210 9 is_stmt 1 view .LVU3671
 210:sieve_extend.c ****         copy_word++;
 8642              		.loc 1 210 29 is_stmt 0 view .LVU3672
 8643 38c4 48094A18 		orq	%rcx, 24(%rdx)
 211:sieve_extend.c ****     } 
 8644              		.loc 1 211 9 is_stmt 1 view .LVU3673
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8645              		.loc 1 208 11 view .LVU3674
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8646              		.loc 1 209 9 view .LVU3675
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8647              		.loc 1 209 28 is_stmt 0 view .LVU3676
 8648 38c8 C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8648      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8649              		.loc 1 209 57 view .LVU3677
 8650 38cd C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8650      C9
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8651              		.loc 1 209 17 view .LVU3678
 8652 38d2 4809CE   		orq	%rcx, %rsi
 210:sieve_extend.c ****         copy_word++;
 8653              		.loc 1 210 9 is_stmt 1 view .LVU3679
GAS LISTING /tmp/ccmX4xFB.s 			page 253


 210:sieve_extend.c ****         copy_word++;
 8654              		.loc 1 210 29 is_stmt 0 view .LVU3680
 8655 38d5 48097220 		orq	%rsi, 32(%rdx)
 211:sieve_extend.c ****     } 
 8656              		.loc 1 211 9 is_stmt 1 view .LVU3681
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8657              		.loc 1 208 11 view .LVU3682
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8658              		.loc 1 209 9 view .LVU3683
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8659              		.loc 1 209 28 is_stmt 0 view .LVU3684
 8660 38d9 C4E2ABF7 		shrx	%r10, %rsi, %rcx
 8660      CE
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8661              		.loc 1 209 57 view .LVU3685
 8662 38de C4E2C1F7 		shlx	%rdi, %rsi, %rsi
 8662      F6
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8663              		.loc 1 209 17 view .LVU3686
 8664 38e3 4809F1   		orq	%rsi, %rcx
 210:sieve_extend.c ****         copy_word++;
 8665              		.loc 1 210 9 is_stmt 1 view .LVU3687
 210:sieve_extend.c ****         copy_word++;
 8666              		.loc 1 210 29 is_stmt 0 view .LVU3688
 8667 38e6 48094A28 		orq	%rcx, 40(%rdx)
 211:sieve_extend.c ****     } 
 8668              		.loc 1 211 9 is_stmt 1 view .LVU3689
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8669              		.loc 1 208 11 view .LVU3690
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8670              		.loc 1 209 9 view .LVU3691
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8671              		.loc 1 209 28 is_stmt 0 view .LVU3692
 8672 38ea C4E2ABF7 		shrx	%r10, %rcx, %rsi
 8672      F1
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8673              		.loc 1 209 57 view .LVU3693
 8674 38ef C4E2C1F7 		shlx	%rdi, %rcx, %rcx
 8674      C9
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8675              		.loc 1 209 17 view .LVU3694
 8676 38f4 4809CE   		orq	%rcx, %rsi
 210:sieve_extend.c ****         copy_word++;
 8677              		.loc 1 210 9 is_stmt 1 view .LVU3695
 210:sieve_extend.c ****         copy_word++;
 8678              		.loc 1 210 29 is_stmt 0 view .LVU3696
 8679 38f7 48097230 		orq	%rsi, 48(%rdx)
 211:sieve_extend.c ****     } 
 8680              		.loc 1 211 9 is_stmt 1 view .LVU3697
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8681              		.loc 1 208 11 view .LVU3698
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8682              		.loc 1 209 9 view .LVU3699
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8683              		.loc 1 209 28 is_stmt 0 view .LVU3700
 8684 38fb C4E2ABF7 		shrx	%r10, %rsi, %rcx
 8684      CE
GAS LISTING /tmp/ccmX4xFB.s 			page 254


 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8685              		.loc 1 209 57 view .LVU3701
 8686 3900 C4E2C1F7 		shlx	%rdi, %rsi, %rsi
 8686      F6
 8687              	.LVL646:
 209:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8688              		.loc 1 209 17 view .LVU3702
 8689 3905 4809F1   		orq	%rsi, %rcx
 8690              	.LVL647:
 210:sieve_extend.c ****         copy_word++;
 8691              		.loc 1 210 9 is_stmt 1 view .LVU3703
 210:sieve_extend.c ****         copy_word++;
 8692              		.loc 1 210 29 is_stmt 0 view .LVU3704
 8693 3908 48094A38 		orq	%rcx, 56(%rdx)
 211:sieve_extend.c ****     } 
 8694              		.loc 1 211 9 is_stmt 1 view .LVU3705
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8695              		.loc 1 208 11 view .LVU3706
 8696 390c 4883C240 		addq	$64, %rdx
 8697 3910 4939D1   		cmpq	%rdx, %r9
 8698 3913 0F856CFF 		jne	.L715
 8698      FFFF
 8699              	.L1345:
 208:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8700              		.loc 1 208 11 is_stmt 0 view .LVU3707
 8701 3919 48036C24 		addq	32(%rsp), %rbp
 8701      20
 8702 391e 4C29ED   		subq	%r13, %rbp
 8703              	.LVL648:
 8704              	.L714:
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 8705              		.loc 1 214 5 is_stmt 1 view .LVU3708
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 8706              		.loc 1 214 24 is_stmt 0 view .LVU3709
 8707 3921 C462E3F7 		shrx	%rbx, %rcx, %r13
 8707      E9
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 8708              		.loc 1 214 53 view .LVU3710
 8709 3926 C4E2F9F7 		shlx	%rax, %rcx, %rbx
 8709      D9
 8710              	.LVL649:
 215:sieve_extend.c **** }
 8711              		.loc 1 215 5 is_stmt 1 view .LVU3711
 214:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask2(range_stop);
 8712              		.loc 1 214 13 is_stmt 0 view .LVU3712
 8713 392b 4909DD   		orq	%rbx, %r13
 8714              	.LVL650:
 215:sieve_extend.c **** }
 8715              		.loc 1 215 36 view .LVU3713
 8716 392e 4C236C24 		andq	16(%rsp), %r13
 8716      10
 8717              	.LVL651:
 215:sieve_extend.c **** }
 8718              		.loc 1 215 25 view .LVU3714
 8719 3933 4D092CEF 		orq	%r13, (%r15,%rbp,8)
 8720              	.LVL652:
 8721              	.L713:
GAS LISTING /tmp/ccmX4xFB.s 			page 255


 215:sieve_extend.c **** }
 8722              		.loc 1 215 25 view .LVU3715
 8723              	.LBE614:
 8724              	.LBE616:
 693:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 8725              		.loc 1 693 9 is_stmt 1 view .LVU3716
 8726              	.LBB617:
 8727              	.LBI617:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8728              		.loc 1 96 25 view .LVU3717
 8729              	.LBB618:
  97:sieve_extend.c ****     return index;
 8730              		.loc 1 97 5 view .LVU3718
  97:sieve_extend.c ****     return index;
 8731              		.loc 1 97 11 view .LVU3719
  97:sieve_extend.c ****     return index;
 8732              		.loc 1 97 21 is_stmt 0 view .LVU3720
 8733 3937 4C89E5   		movq	%r12, %rbp
 8734 393a 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
 8735              		.loc 1 97 12 view .LVU3721
 8736 393e 4D8B14EF 		movq	(%r15,%rbp,8), %r10
 8737              	.LBE618:
 8738              	.LBE617:
 691:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 8739              		.loc 1 691 35 view .LVU3722
 8740 3942 4C89E6   		movq	%r12, %rsi
 8741              	.LBB620:
 8742              	.LBB619:
  97:sieve_extend.c ****     return index;
 8743              		.loc 1 97 11 view .LVU3723
 8744 3945 4D0FA3E2 		btq	%r12, %r10
 8745 3949 0F83C100 		jnc	.L716
 8745      0000
 8746              	.LVL653:
 8747              	.L717:
  97:sieve_extend.c ****     return index;
 8748              		.loc 1 97 58 is_stmt 1 view .LVU3724
  97:sieve_extend.c ****     return index;
 8749              		.loc 1 97 63 is_stmt 0 view .LVU3725
 8750 394f 4C8D6601 		leaq	1(%rsi), %r12
 8751              	.LVL654:
  97:sieve_extend.c ****     return index;
 8752              		.loc 1 97 21 view .LVU3726
 8753 3953 4C89E0   		movq	%r12, %rax
 8754 3956 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 8755              		.loc 1 97 12 view .LVU3727
 8756 395a 498B3CC7 		movq	(%r15,%rax,8), %rdi
  97:sieve_extend.c ****     return index;
 8757              		.loc 1 97 63 view .LVU3728
 8758 395e 4C89E6   		movq	%r12, %rsi
  97:sieve_extend.c ****     return index;
 8759              		.loc 1 97 11 is_stmt 1 view .LVU3729
 8760 3961 4C0FA3E7 		btq	%r12, %rdi
 8761 3965 0F83A500 		jnc	.L716
 8761      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 256


  97:sieve_extend.c ****     return index;
 8762              		.loc 1 97 58 view .LVU3730
 8763              	.LVL655:
  97:sieve_extend.c ****     return index;
 8764              		.loc 1 97 63 is_stmt 0 view .LVU3731
 8765 396b 48FFC6   		incq	%rsi
 8766              	.LVL656:
  97:sieve_extend.c ****     return index;
 8767              		.loc 1 97 11 is_stmt 1 view .LVU3732
  97:sieve_extend.c ****     return index;
 8768              		.loc 1 97 21 is_stmt 0 view .LVU3733
 8769 396e 4889F2   		movq	%rsi, %rdx
 8770 3971 48C1EA06 		shrq	$6, %rdx
  97:sieve_extend.c ****     return index;
 8771              		.loc 1 97 12 view .LVU3734
 8772 3975 498B0CD7 		movq	(%r15,%rdx,8), %rcx
  97:sieve_extend.c ****     return index;
 8773              		.loc 1 97 11 view .LVU3735
 8774 3979 480FA3F1 		btq	%rsi, %rcx
 8775 397d 0F838D00 		jnc	.L716
 8775      0000
  97:sieve_extend.c ****     return index;
 8776              		.loc 1 97 58 is_stmt 1 view .LVU3736
 8777              	.LVL657:
  97:sieve_extend.c ****     return index;
 8778              		.loc 1 97 63 is_stmt 0 view .LVU3737
 8779 3983 498D7424 		leaq	2(%r12), %rsi
 8779      02
 8780              	.LVL658:
  97:sieve_extend.c ****     return index;
 8781              		.loc 1 97 11 is_stmt 1 view .LVU3738
  97:sieve_extend.c ****     return index;
 8782              		.loc 1 97 21 is_stmt 0 view .LVU3739
 8783 3988 4989F5   		movq	%rsi, %r13
 8784 398b 49C1ED06 		shrq	$6, %r13
  97:sieve_extend.c ****     return index;
 8785              		.loc 1 97 12 view .LVU3740
 8786 398f 4B8B1CEF 		movq	(%r15,%r13,8), %rbx
  97:sieve_extend.c ****     return index;
 8787              		.loc 1 97 11 view .LVU3741
 8788 3993 480FA3F3 		btq	%rsi, %rbx
 8789 3997 7377     		jnc	.L716
  97:sieve_extend.c ****     return index;
 8790              		.loc 1 97 58 is_stmt 1 view .LVU3742
 8791              	.LVL659:
  97:sieve_extend.c ****     return index;
 8792              		.loc 1 97 63 is_stmt 0 view .LVU3743
 8793 3999 498D7424 		leaq	3(%r12), %rsi
 8793      03
 8794              	.LVL660:
  97:sieve_extend.c ****     return index;
 8795              		.loc 1 97 11 is_stmt 1 view .LVU3744
  97:sieve_extend.c ****     return index;
 8796              		.loc 1 97 21 is_stmt 0 view .LVU3745
 8797 399e 4889F5   		movq	%rsi, %rbp
 8798 39a1 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 257


 8799              		.loc 1 97 12 view .LVU3746
 8800 39a5 4D8B14EF 		movq	(%r15,%rbp,8), %r10
  97:sieve_extend.c ****     return index;
 8801              		.loc 1 97 11 view .LVU3747
 8802 39a9 490FA3F2 		btq	%rsi, %r10
 8803 39ad 7361     		jnc	.L716
  97:sieve_extend.c ****     return index;
 8804              		.loc 1 97 58 is_stmt 1 view .LVU3748
 8805              	.LVL661:
  97:sieve_extend.c ****     return index;
 8806              		.loc 1 97 63 is_stmt 0 view .LVU3749
 8807 39af 498D7424 		leaq	4(%r12), %rsi
 8807      04
 8808              	.LVL662:
  97:sieve_extend.c ****     return index;
 8809              		.loc 1 97 11 is_stmt 1 view .LVU3750
  97:sieve_extend.c ****     return index;
 8810              		.loc 1 97 21 is_stmt 0 view .LVU3751
 8811 39b4 4889F0   		movq	%rsi, %rax
 8812 39b7 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 8813              		.loc 1 97 12 view .LVU3752
 8814 39bb 498B3CC7 		movq	(%r15,%rax,8), %rdi
  97:sieve_extend.c ****     return index;
 8815              		.loc 1 97 11 view .LVU3753
 8816 39bf 480FA3F7 		btq	%rsi, %rdi
 8817 39c3 734B     		jnc	.L716
  97:sieve_extend.c ****     return index;
 8818              		.loc 1 97 58 is_stmt 1 view .LVU3754
 8819              	.LVL663:
  97:sieve_extend.c ****     return index;
 8820              		.loc 1 97 63 is_stmt 0 view .LVU3755
 8821 39c5 498D7424 		leaq	5(%r12), %rsi
 8821      05
 8822              	.LVL664:
  97:sieve_extend.c ****     return index;
 8823              		.loc 1 97 11 is_stmt 1 view .LVU3756
  97:sieve_extend.c ****     return index;
 8824              		.loc 1 97 21 is_stmt 0 view .LVU3757
 8825 39ca 4889F2   		movq	%rsi, %rdx
 8826 39cd 48C1EA06 		shrq	$6, %rdx
  97:sieve_extend.c ****     return index;
 8827              		.loc 1 97 12 view .LVU3758
 8828 39d1 498B0CD7 		movq	(%r15,%rdx,8), %rcx
  97:sieve_extend.c ****     return index;
 8829              		.loc 1 97 11 view .LVU3759
 8830 39d5 480FA3F1 		btq	%rsi, %rcx
 8831 39d9 7335     		jnc	.L716
  97:sieve_extend.c ****     return index;
 8832              		.loc 1 97 58 is_stmt 1 view .LVU3760
 8833              	.LVL665:
  97:sieve_extend.c ****     return index;
 8834              		.loc 1 97 63 is_stmt 0 view .LVU3761
 8835 39db 498D7424 		leaq	6(%r12), %rsi
 8835      06
 8836              	.LVL666:
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 258


 8837              		.loc 1 97 11 is_stmt 1 view .LVU3762
  97:sieve_extend.c ****     return index;
 8838              		.loc 1 97 21 is_stmt 0 view .LVU3763
 8839 39e0 4989F5   		movq	%rsi, %r13
 8840 39e3 49C1ED06 		shrq	$6, %r13
  97:sieve_extend.c ****     return index;
 8841              		.loc 1 97 12 view .LVU3764
 8842 39e7 4B8B1CEF 		movq	(%r15,%r13,8), %rbx
  97:sieve_extend.c ****     return index;
 8843              		.loc 1 97 11 view .LVU3765
 8844 39eb 480FA3F3 		btq	%rsi, %rbx
 8845 39ef 731F     		jnc	.L716
  97:sieve_extend.c ****     return index;
 8846              		.loc 1 97 58 is_stmt 1 view .LVU3766
 8847              	.LVL667:
  97:sieve_extend.c ****     return index;
 8848              		.loc 1 97 63 is_stmt 0 view .LVU3767
 8849 39f1 498D7424 		leaq	7(%r12), %rsi
 8849      07
 8850              	.LVL668:
  97:sieve_extend.c ****     return index;
 8851              		.loc 1 97 11 is_stmt 1 view .LVU3768
  97:sieve_extend.c ****     return index;
 8852              		.loc 1 97 21 is_stmt 0 view .LVU3769
 8853 39f6 4989F4   		movq	%rsi, %r12
 8854 39f9 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 8855              		.loc 1 97 12 view .LVU3770
 8856 39fd 4B8B2CE7 		movq	(%r15,%r12,8), %rbp
  97:sieve_extend.c ****     return index;
 8857              		.loc 1 97 11 view .LVU3771
 8858 3a01 480FA3F5 		btq	%rsi, %rbp
 8859 3a05 0F8244FF 		jc	.L717
 8859      FFFF
 8860              	.LVL669:
 8861 3a0b 0F1F4400 		.p2align 4,,10
 8861      00
 8862              		.p2align 3
 8863              	.L716:
  98:sieve_extend.c ****     
 8864              		.loc 1 98 5 is_stmt 1 view .LVU3772
  98:sieve_extend.c ****     
 8865              		.loc 1 98 5 is_stmt 0 view .LVU3773
 8866              	.LBE619:
 8867              	.LBE620:
 694:sieve_extend.c ****     }
 8868              		.loc 1 694 9 is_stmt 1 view .LVU3774
 694:sieve_extend.c ****     }
 8869              		.loc 1 694 35 is_stmt 0 view .LVU3775
 8870 3a10 488D4601 		leaq	1(%rsi), %rax
 694:sieve_extend.c ****     }
 8871              		.loc 1 694 15 view .LVU3776
 8872 3a14 480FAFC6 		imulq	%rsi, %rax
 8873              	.LVL670:
 694:sieve_extend.c ****     }
 8874              		.loc 1 694 15 view .LVU3777
 8875 3a18 4801C0   		addq	%rax, %rax
GAS LISTING /tmp/ccmX4xFB.s 			page 259


 8876              	.LVL671:
 688:sieve_extend.c ****         step  = prime * 2 + 1;
 8877              		.loc 1 688 11 is_stmt 1 view .LVU3778
 8878 3a1b 4939C0   		cmpq	%rax, %r8
 8879 3a1e 0F832CFC 		jnb	.L718
 8879      FFFF
 8880              	.LVL672:
 8881              	.L1550:
 688:sieve_extend.c ****         step  = prime * 2 + 1;
 8882              		.loc 1 688 11 is_stmt 0 view .LVU3779
 8883 3a24 4C8B4C24 		movq	56(%rsp), %r9
 8883      38
 8884 3a29 498B5108 		movq	8(%r9), %rdx
 8885              	.L706:
 8886              	.LVL673:
 688:sieve_extend.c ****         step  = prime * 2 + 1;
 8887              		.loc 1 688 11 view .LVU3780
 8888              	.LBE675:
 8889              	.LBE681:
 806:sieve_extend.c ****         block_stop += blocksize;
 8890              		.loc 1 806 9 is_stmt 1 view .LVU3781
 806:sieve_extend.c ****         block_stop += blocksize;
 8891              		.loc 1 806 21 is_stmt 0 view .LVU3782
 8892 3a2d 488B7424 		movq	72(%rsp), %rsi
 8892      48
 8893 3a32 48017424 		addq	%rsi, 8(%rsp)
 8893      08
 8894              	.LVL674:
 807:sieve_extend.c ****     } while (block_start <= sieve->bits);
 8895              		.loc 1 807 20 view .LVU3783
 8896 3a37 4901F0   		addq	%rsi, %r8
 8897              	.LVL675:
 806:sieve_extend.c ****         block_stop += blocksize;
 8898              		.loc 1 806 21 view .LVU3784
 8899 3a3a 4C8B7424 		movq	8(%rsp), %r14
 8899      08
 8900              	.LVL676:
 807:sieve_extend.c ****     } while (block_start <= sieve->bits);
 8901              		.loc 1 807 9 is_stmt 1 view .LVU3785
 808:sieve_extend.c **** 
 8902              		.loc 1 808 13 view .LVU3786
 808:sieve_extend.c **** 
 8903              		.loc 1 808 5 is_stmt 0 view .LVU3787
 8904 3a3f 4939D6   		cmpq	%rdx, %r14
 8905 3a42 0F8698FA 		jbe	.L784
 8905      FFFF
 811:sieve_extend.c **** 
 8906              		.loc 1 811 1 view .LVU3788
 8907 3a48 488B4424 		movq	56(%rsp), %rax
 8907      38
 8908 3a4d 4883C468 		addq	$104, %rsp
 8909              		.cfi_remember_state
 8910              		.cfi_def_cfa_offset 56
 8911 3a51 5B       		popq	%rbx
 8912              		.cfi_def_cfa_offset 48
 8913 3a52 5D       		popq	%rbp
 8914              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/ccmX4xFB.s 			page 260


 8915 3a53 415C     		popq	%r12
 8916              		.cfi_def_cfa_offset 32
 8917 3a55 415D     		popq	%r13
 8918              		.cfi_def_cfa_offset 24
 8919 3a57 415E     		popq	%r14
 8920              		.cfi_def_cfa_offset 16
 8921              	.LVL677:
 811:sieve_extend.c **** 
 8922              		.loc 1 811 1 view .LVU3789
 8923 3a59 415F     		popq	%r15
 8924              		.cfi_def_cfa_offset 8
 8925 3a5b C3       		ret
 8926              	.LVL678:
 8927 3a5c 0F1F4000 		.p2align 4,,10
 8928              		.p2align 3
 8929              	.L1564:
 8930              		.cfi_restore_state
 8931              	.LBB682:
 8932              	.LBB676:
 8933              	.LBB621:
 8934              	.LBB615:
 195:sieve_extend.c ****        return;
 8935              		.loc 1 195 8 is_stmt 1 view .LVU3790
 195:sieve_extend.c ****        return;
 8936              		.loc 1 195 67 is_stmt 0 view .LVU3791
 8937 3a60 48235C24 		andq	16(%rsp), %rbx
 8937      10
 195:sieve_extend.c ****        return;
 8938              		.loc 1 195 28 view .LVU3792
 8939 3a65 4909DA   		orq	%rbx, %r10
 8940 3a68 4C8911   		movq	%r10, (%rcx)
 196:sieve_extend.c ****     }
 8941              		.loc 1 196 8 is_stmt 1 view .LVU3793
 8942 3a6b E9C7FEFF 		jmp	.L713
 8942      FF
 8943              	.LVL679:
 8944              		.p2align 4,,10
 8945              		.p2align 3
 8946              	.L788:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 8947              		.loc 1 186 12 is_stmt 0 view .LVU3794
 8948 3a70 BF010000 		movl	$1, %edi
 8948      00
 8949 3a75 E9CEFCFF 		jmp	.L710
 8949      FF
 8950              	.LVL680:
 8951 3a7a 660F1F44 		.p2align 4,,10
 8951      0000
 8952              		.p2align 3
 8953              	.L1563:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 8954              		.loc 1 186 12 view .LVU3795
 8955 3a80 4889C1   		movq	%rax, %rcx
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 8956              		.loc 1 186 12 view .LVU3796
 8957              	.LBE615:
 8958              	.LBE621:
GAS LISTING /tmp/ccmX4xFB.s 			page 261


 697:sieve_extend.c ****         step  = prime * 2 + 1;
 8959              		.loc 1 697 11 is_stmt 1 view .LVU3797
 8960 3a83 4939C0   		cmpq	%rax, %r8
 8961 3a86 729C     		jb	.L1550
 698:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 8962              		.loc 1 698 9 view .LVU3798
 698:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 8963              		.loc 1 698 15 is_stmt 0 view .LVU3799
 8964 3a88 4C8D5436 		leaq	1(%rsi,%rsi), %r10
 8964      01
 8965              	.LVL681:
 699:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8966              		.loc 1 699 9 is_stmt 1 view .LVU3800
 699:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8967              		.loc 1 699 12 is_stmt 0 view .LVU3801
 8968 3a8d 4C3B1500 		cmpq	global_MEDIUMSTEP_FASTER(%rip), %r10
 8968      000000
 8969 3a94 0F87CC03 		ja	.L1565
 8969      0000
 8970              	.LVL682:
 8971 3a9a 660F1F44 		.p2align 4,,10
 8971      0000
 8972              		.p2align 3
 8973              	.L719:
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8974              		.loc 1 700 9 is_stmt 1 view .LVU3802
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8975              		.loc 1 700 12 is_stmt 0 view .LVU3803
 8976 3aa0 488B4424 		movq	8(%rsp), %rax
 8976      08
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8977              		.loc 1 700 35 view .LVU3804
 8978 3aa5 4C8D6601 		leaq	1(%rsi), %r12
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8979              		.loc 1 700 12 view .LVU3805
 8980 3aa9 4C39E0   		cmpq	%r12, %rax
 8981 3aac 720F     		jb	.L723
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8982              		.loc 1 700 41 is_stmt 1 view .LVU3806
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8983              		.loc 1 700 61 is_stmt 0 view .LVU3807
 8984 3aae 4801F0   		addq	%rsi, %rax
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8985              		.loc 1 700 102 view .LVU3808
 8986 3ab1 31D2     		xorl	%edx, %edx
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8987              		.loc 1 700 69 view .LVU3809
 8988 3ab3 488D0C30 		leaq	(%rax,%rsi), %rcx
 8989              	.LVL683:
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8990              		.loc 1 700 102 view .LVU3810
 8991 3ab7 49F7F2   		divq	%r10
 8992              	.LVL684:
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 8993              		.loc 1 700 47 view .LVU3811
 8994 3aba 4829D1   		subq	%rdx, %rcx
 8995              	.LVL685:
GAS LISTING /tmp/ccmX4xFB.s 			page 262


 8996              	.L723:
 701:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 8997              		.loc 1 701 9 is_stmt 1 view .LVU3812
 8998              	.LBB622:
 8999              	.LBI588:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9000              		.loc 1 222 20 view .LVU3813
 9001              	.LBB608:
 223:sieve_extend.c **** 
 9002              		.loc 1 223 5 view .LVU3814
 223:sieve_extend.c **** 
 9003              		.loc 1 223 74 is_stmt 0 view .LVU3815
 9004 3abd 4D89D5   		movq	%r10, %r13
 9005 3ac0 49C1E506 		salq	$6, %r13
 9006 3ac4 4531F6   		xorl	%r14d, %r14d
 9007 3ac7 4901CD   		addq	%rcx, %r13
 9008 3aca 410F92C6 		setc	%r14b
 9009              	.LVL686:
 225:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9010              		.loc 1 225 5 is_stmt 1 view .LVU3816
 225:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9011              		.loc 1 225 8 is_stmt 0 view .LVU3817
 9012 3ace 4D39E8   		cmpq	%r13, %r8
 9013 3ad1 0F82190A 		jb	.L726
 9013      0000
 9014              	.LVL687:
 9015              	.LBB597:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9016              		.loc 1 240 54 is_stmt 1 view .LVU3818
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9017              		.loc 1 240 9 is_stmt 0 view .LVU3819
 9018 3ad7 4D85F6   		testq	%r14, %r14
 9019 3ada 0F858202 		jne	.L730
 9019      0000
 9020              	.LBB598:
 9021              	.LBB599:
 9022              	.LBB600:
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 9023              		.loc 1 152 106 view .LVU3820
 9024 3ae0 488B7C24 		movq	24(%rsp), %rdi
 9024      18
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 9025              		.loc 1 152 83 view .LVU3821
 9026 3ae5 4B8D1C92 		leaq	(%r10,%r10,4), %rbx
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 9027              		.loc 1 152 106 view .LVU3822
 9028 3ae9 4889FD   		movq	%rdi, %rbp
 9029 3aec 4829DD   		subq	%rbx, %rbp
 9030 3aef 498D2CEF 		leaq	(%r15,%rbp,8), %rbp
 9031 3af3 4839DF   		cmpq	%rbx, %rdi
 9032 3af6 4D89D6   		movq	%r10, %r14
 9033 3af9 490F46EF 		cmovbe	%r15, %rbp
 158:sieve_extend.c ****        *index_ptr |= mask;
 9034              		.loc 1 158 17 view .LVU3823
 9035 3afd 4A8D34D5 		leaq	0(,%r10,8), %rsi
 9035      00000000 
 9036 3b05 48C1E303 		salq	$3, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 263


 9037 3b09 49C1E604 		salq	$4, %r14
 9038              	.LVL688:
 9039 3b0d 0F1F00   		.p2align 4,,10
 9040              		.p2align 3
 9041              	.L739:
 158:sieve_extend.c ****        *index_ptr |= mask;
 9042              		.loc 1 158 17 view .LVU3824
 9043              	.LBE600:
 9044              	.LBE599:
 241:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9045              		.loc 1 241 13 is_stmt 1 view .LVU3825
 241:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9046              		.loc 1 241 32 is_stmt 0 view .LVU3826
 9047 3b10 4889C8   		movq	%rcx, %rax
 9048 3b13 48C1E806 		shrq	$6, %rax
 9049              	.LVL689:
 242:sieve_extend.c ****             do {
 9050              		.loc 1 242 13 is_stmt 1 view .LVU3827
 242:sieve_extend.c ****             do {
 9051              		.loc 1 242 32 is_stmt 0 view .LVU3828
 9052 3b17 31D2     		xorl	%edx, %edx
 9053              	.LVL690:
 9054              	.L733:
 243:sieve_extend.c ****                 mask |= markmask(index);
 9055              		.loc 1 243 13 is_stmt 1 view .LVU3829
 244:sieve_extend.c ****                 index += step;
 9056              		.loc 1 244 17 view .LVU3830
 244:sieve_extend.c ****                 index += step;
 9057              		.loc 1 244 25 is_stmt 0 view .LVU3831
 9058 3b19 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9058      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9059              		.loc 1 245 23 view .LVU3832
 9060 3b1e 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9061              		.loc 1 244 22 view .LVU3833
 9062 3b21 4809FA   		orq	%rdi, %rdx
 9063              	.LVL691:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9064              		.loc 1 245 17 is_stmt 1 view .LVU3834
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9065              		.loc 1 246 21 view .LVU3835
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9066              		.loc 1 246 36 is_stmt 0 view .LVU3836
 9067 3b24 4889CF   		movq	%rcx, %rdi
 9068 3b27 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9069              		.loc 1 246 13 view .LVU3837
 9070 3b2b 4839F8   		cmpq	%rdi, %rax
 9071 3b2e 0F85AC00 		jne	.L1344
 9071      0000
 243:sieve_extend.c ****                 mask |= markmask(index);
 9072              		.loc 1 243 13 is_stmt 1 view .LVU3838
 244:sieve_extend.c ****                 index += step;
 9073              		.loc 1 244 17 view .LVU3839
 244:sieve_extend.c ****                 index += step;
 9074              		.loc 1 244 25 is_stmt 0 view .LVU3840
GAS LISTING /tmp/ccmX4xFB.s 			page 264


 9075 3b34 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9075      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9076              		.loc 1 245 23 view .LVU3841
 9077 3b39 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9078              		.loc 1 244 22 view .LVU3842
 9079 3b3c 4809FA   		orq	%rdi, %rdx
 9080              	.LVL692:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9081              		.loc 1 245 17 is_stmt 1 view .LVU3843
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9082              		.loc 1 246 21 view .LVU3844
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9083              		.loc 1 246 36 is_stmt 0 view .LVU3845
 9084 3b3f 4889CF   		movq	%rcx, %rdi
 9085 3b42 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9086              		.loc 1 246 13 view .LVU3846
 9087 3b46 4839F8   		cmpq	%rdi, %rax
 9088 3b49 0F859100 		jne	.L1344
 9088      0000
 243:sieve_extend.c ****                 mask |= markmask(index);
 9089              		.loc 1 243 13 is_stmt 1 view .LVU3847
 244:sieve_extend.c ****                 index += step;
 9090              		.loc 1 244 17 view .LVU3848
 244:sieve_extend.c ****                 index += step;
 9091              		.loc 1 244 25 is_stmt 0 view .LVU3849
 9092 3b4f C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9092      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9093              		.loc 1 245 23 view .LVU3850
 9094 3b54 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9095              		.loc 1 244 22 view .LVU3851
 9096 3b57 4809FA   		orq	%rdi, %rdx
 9097              	.LVL693:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9098              		.loc 1 245 17 is_stmt 1 view .LVU3852
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9099              		.loc 1 246 21 view .LVU3853
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9100              		.loc 1 246 36 is_stmt 0 view .LVU3854
 9101 3b5a 4889CF   		movq	%rcx, %rdi
 9102 3b5d 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9103              		.loc 1 246 13 view .LVU3855
 9104 3b61 4839F8   		cmpq	%rdi, %rax
 9105 3b64 757A     		jne	.L1344
 243:sieve_extend.c ****                 mask |= markmask(index);
 9106              		.loc 1 243 13 is_stmt 1 view .LVU3856
 244:sieve_extend.c ****                 index += step;
 9107              		.loc 1 244 17 view .LVU3857
 244:sieve_extend.c ****                 index += step;
 9108              		.loc 1 244 25 is_stmt 0 view .LVU3858
 9109 3b66 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9109      FB
GAS LISTING /tmp/ccmX4xFB.s 			page 265


 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9110              		.loc 1 245 23 view .LVU3859
 9111 3b6b 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9112              		.loc 1 244 22 view .LVU3860
 9113 3b6e 4809FA   		orq	%rdi, %rdx
 9114              	.LVL694:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9115              		.loc 1 245 17 is_stmt 1 view .LVU3861
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9116              		.loc 1 246 21 view .LVU3862
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9117              		.loc 1 246 36 is_stmt 0 view .LVU3863
 9118 3b71 4889CF   		movq	%rcx, %rdi
 9119 3b74 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9120              		.loc 1 246 13 view .LVU3864
 9121 3b78 4839F8   		cmpq	%rdi, %rax
 9122 3b7b 7563     		jne	.L1344
 243:sieve_extend.c ****                 mask |= markmask(index);
 9123              		.loc 1 243 13 is_stmt 1 view .LVU3865
 244:sieve_extend.c ****                 index += step;
 9124              		.loc 1 244 17 view .LVU3866
 244:sieve_extend.c ****                 index += step;
 9125              		.loc 1 244 25 is_stmt 0 view .LVU3867
 9126 3b7d C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9126      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9127              		.loc 1 245 23 view .LVU3868
 9128 3b82 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9129              		.loc 1 244 22 view .LVU3869
 9130 3b85 4809FA   		orq	%rdi, %rdx
 9131              	.LVL695:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9132              		.loc 1 245 17 is_stmt 1 view .LVU3870
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9133              		.loc 1 246 21 view .LVU3871
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9134              		.loc 1 246 36 is_stmt 0 view .LVU3872
 9135 3b88 4889CF   		movq	%rcx, %rdi
 9136 3b8b 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9137              		.loc 1 246 13 view .LVU3873
 9138 3b8f 4839F8   		cmpq	%rdi, %rax
 9139 3b92 754C     		jne	.L1344
 243:sieve_extend.c ****                 mask |= markmask(index);
 9140              		.loc 1 243 13 is_stmt 1 view .LVU3874
 244:sieve_extend.c ****                 index += step;
 9141              		.loc 1 244 17 view .LVU3875
 244:sieve_extend.c ****                 index += step;
 9142              		.loc 1 244 25 is_stmt 0 view .LVU3876
 9143 3b94 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9143      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9144              		.loc 1 245 23 view .LVU3877
 9145 3b99 4C01D1   		addq	%r10, %rcx
GAS LISTING /tmp/ccmX4xFB.s 			page 266


 244:sieve_extend.c ****                 index += step;
 9146              		.loc 1 244 22 view .LVU3878
 9147 3b9c 4809FA   		orq	%rdi, %rdx
 9148              	.LVL696:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9149              		.loc 1 245 17 is_stmt 1 view .LVU3879
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9150              		.loc 1 246 21 view .LVU3880
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9151              		.loc 1 246 36 is_stmt 0 view .LVU3881
 9152 3b9f 4889CF   		movq	%rcx, %rdi
 9153 3ba2 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9154              		.loc 1 246 13 view .LVU3882
 9155 3ba6 4839F8   		cmpq	%rdi, %rax
 9156 3ba9 7535     		jne	.L1344
 243:sieve_extend.c ****                 mask |= markmask(index);
 9157              		.loc 1 243 13 is_stmt 1 view .LVU3883
 244:sieve_extend.c ****                 index += step;
 9158              		.loc 1 244 17 view .LVU3884
 244:sieve_extend.c ****                 index += step;
 9159              		.loc 1 244 25 is_stmt 0 view .LVU3885
 9160 3bab C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9160      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9161              		.loc 1 245 23 view .LVU3886
 9162 3bb0 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9163              		.loc 1 244 22 view .LVU3887
 9164 3bb3 4809FA   		orq	%rdi, %rdx
 9165              	.LVL697:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9166              		.loc 1 245 17 is_stmt 1 view .LVU3888
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9167              		.loc 1 246 21 view .LVU3889
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9168              		.loc 1 246 36 is_stmt 0 view .LVU3890
 9169 3bb6 4889CF   		movq	%rcx, %rdi
 9170 3bb9 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9171              		.loc 1 246 13 view .LVU3891
 9172 3bbd 4839F8   		cmpq	%rdi, %rax
 9173 3bc0 751E     		jne	.L1344
 243:sieve_extend.c ****                 mask |= markmask(index);
 9174              		.loc 1 243 13 is_stmt 1 view .LVU3892
 244:sieve_extend.c ****                 index += step;
 9175              		.loc 1 244 17 view .LVU3893
 244:sieve_extend.c ****                 index += step;
 9176              		.loc 1 244 25 is_stmt 0 view .LVU3894
 9177 3bc2 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9177      FB
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9178              		.loc 1 245 23 view .LVU3895
 9179 3bc7 4C01D1   		addq	%r10, %rcx
 244:sieve_extend.c ****                 index += step;
 9180              		.loc 1 244 22 view .LVU3896
 9181 3bca 4809FA   		orq	%rdi, %rdx
GAS LISTING /tmp/ccmX4xFB.s 			page 267


 9182              	.LVL698:
 245:sieve_extend.c ****             } while (index_word == wordindex(index));
 9183              		.loc 1 245 17 is_stmt 1 view .LVU3897
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9184              		.loc 1 246 21 view .LVU3898
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9185              		.loc 1 246 36 is_stmt 0 view .LVU3899
 9186 3bcd 4889CF   		movq	%rcx, %rdi
 9187 3bd0 48C1EF06 		shrq	$6, %rdi
 246:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9188              		.loc 1 246 13 view .LVU3900
 9189 3bd4 4839F8   		cmpq	%rdi, %rax
 9190 3bd7 0F843CFF 		je	.L733
 9190      FFFF
 9191 3bdd 0F1F00   		.p2align 4,,10
 9192              		.p2align 3
 9193              	.L1344:
 247:sieve_extend.c ****         }
 9194              		.loc 1 247 13 is_stmt 1 view .LVU3901
 9195              	.LVL699:
 9196              	.LBB603:
 9197              	.LBI599:
 121:sieve_extend.c **** // #if __APPLE__
 9198              		.loc 1 121 20 view .LVU3902
 9199              	.LBB601:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 9200              		.loc 1 150 4 view .LVU3903
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 9201              		.loc 1 151 4 view .LVU3904
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 9202              		.loc 1 151 35 is_stmt 0 view .LVU3905
 9203 3be0 498D04C7 		leaq	(%r15,%rax,8), %rax
 9204              	.LVL700:
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 9205              		.loc 1 152 4 is_stmt 1 view .LVU3906
 153:sieve_extend.c **** 
 9206              		.loc 1 153 4 view .LVU3907
 156:sieve_extend.c ****        *index_ptr |= mask;
 9207              		.loc 1 156 4 view .LVU3908
 156:sieve_extend.c ****        *index_ptr |= mask;
 9208              		.loc 1 156 10 view .LVU3909
 9209 3be4 4839E8   		cmpq	%rbp, %rax
 9210 3be7 0F830301 		jnb	.L734
 9210      0000
 156:sieve_extend.c ****        *index_ptr |= mask;
 9211              		.loc 1 156 10 is_stmt 0 view .LVU3910
 9212 3bed 4A8D3C30 		leaq	(%rax,%r14), %rdi
 9213              	.L735:
 157:sieve_extend.c ****        index_ptr+=step;
 9214              		.loc 1 157 8 is_stmt 1 view .LVU3911
 157:sieve_extend.c ****        index_ptr+=step;
 9215              		.loc 1 157 19 is_stmt 0 view .LVU3912
 9216 3bf1 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9217              		.loc 1 158 8 is_stmt 1 view .LVU3913
 9218              	.LVL701:
 159:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccmX4xFB.s 			page 268


 9219              		.loc 1 159 8 view .LVU3914
 159:sieve_extend.c ****        index_ptr+=step;
 9220              		.loc 1 159 19 is_stmt 0 view .LVU3915
 9221 3bf4 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9222              		.loc 1 160 8 is_stmt 1 view .LVU3916
 9223              	.LVL702:
 161:sieve_extend.c ****        index_ptr+=step;
 9224              		.loc 1 161 8 view .LVU3917
 161:sieve_extend.c ****        index_ptr+=step;
 9225              		.loc 1 161 19 is_stmt 0 view .LVU3918
 9226 3bf8 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9227              		.loc 1 162 8 is_stmt 1 view .LVU3919
 9228              	.LVL703:
 163:sieve_extend.c ****        index_ptr+=step;
 9229              		.loc 1 163 8 view .LVU3920
 163:sieve_extend.c ****        index_ptr+=step;
 9230              		.loc 1 163 19 is_stmt 0 view .LVU3921
 9231 3bfb 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9232              		.loc 1 164 8 is_stmt 1 view .LVU3922
 9233              	.LVL704:
 165:sieve_extend.c ****        index_ptr+=step;
 9234              		.loc 1 165 8 view .LVU3923
 9235 3bff 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9236              		.loc 1 165 19 is_stmt 0 view .LVU3924
 9237 3c02 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9238              		.loc 1 166 8 is_stmt 1 view .LVU3925
 9239 3c06 4801D8   		addq	%rbx, %rax
 9240              	.LVL705:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9241              		.loc 1 156 10 view .LVU3926
 9242 3c09 4839C5   		cmpq	%rax, %rbp
 9243 3c0c 0F86DE00 		jbe	.L734
 9243      0000
 157:sieve_extend.c ****        index_ptr+=step;
 9244              		.loc 1 157 8 view .LVU3927
 157:sieve_extend.c ****        index_ptr+=step;
 9245              		.loc 1 157 19 is_stmt 0 view .LVU3928
 9246 3c12 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9247              		.loc 1 158 8 is_stmt 1 view .LVU3929
 9248              	.LVL706:
 159:sieve_extend.c ****        index_ptr+=step;
 9249              		.loc 1 159 8 view .LVU3930
 159:sieve_extend.c ****        index_ptr+=step;
 9250              		.loc 1 159 19 is_stmt 0 view .LVU3931
 9251 3c15 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9252              		.loc 1 160 8 is_stmt 1 view .LVU3932
 9253              	.LVL707:
 161:sieve_extend.c ****        index_ptr+=step;
 9254              		.loc 1 161 8 view .LVU3933
 161:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccmX4xFB.s 			page 269


 9255              		.loc 1 161 19 is_stmt 0 view .LVU3934
 9256 3c19 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9257              		.loc 1 162 8 is_stmt 1 view .LVU3935
 9258              	.LVL708:
 163:sieve_extend.c ****        index_ptr+=step;
 9259              		.loc 1 163 8 view .LVU3936
 163:sieve_extend.c ****        index_ptr+=step;
 9260              		.loc 1 163 19 is_stmt 0 view .LVU3937
 9261 3c1c 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9262              		.loc 1 164 8 is_stmt 1 view .LVU3938
 9263              	.LVL709:
 165:sieve_extend.c ****        index_ptr+=step;
 9264              		.loc 1 165 8 view .LVU3939
 9265 3c20 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9266              		.loc 1 165 19 is_stmt 0 view .LVU3940
 9267 3c23 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9268              		.loc 1 166 8 is_stmt 1 view .LVU3941
 9269 3c27 4801D8   		addq	%rbx, %rax
 9270              	.LVL710:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9271              		.loc 1 156 10 view .LVU3942
 9272 3c2a 4839C5   		cmpq	%rax, %rbp
 9273 3c2d 0F86BD00 		jbe	.L734
 9273      0000
 157:sieve_extend.c ****        index_ptr+=step;
 9274              		.loc 1 157 8 view .LVU3943
 157:sieve_extend.c ****        index_ptr+=step;
 9275              		.loc 1 157 19 is_stmt 0 view .LVU3944
 9276 3c33 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9277              		.loc 1 158 8 is_stmt 1 view .LVU3945
 9278              	.LVL711:
 159:sieve_extend.c ****        index_ptr+=step;
 9279              		.loc 1 159 8 view .LVU3946
 159:sieve_extend.c ****        index_ptr+=step;
 9280              		.loc 1 159 19 is_stmt 0 view .LVU3947
 9281 3c36 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9282              		.loc 1 160 8 is_stmt 1 view .LVU3948
 9283              	.LVL712:
 161:sieve_extend.c ****        index_ptr+=step;
 9284              		.loc 1 161 8 view .LVU3949
 161:sieve_extend.c ****        index_ptr+=step;
 9285              		.loc 1 161 19 is_stmt 0 view .LVU3950
 9286 3c3a 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9287              		.loc 1 162 8 is_stmt 1 view .LVU3951
 9288              	.LVL713:
 163:sieve_extend.c ****        index_ptr+=step;
 9289              		.loc 1 163 8 view .LVU3952
 163:sieve_extend.c ****        index_ptr+=step;
 9290              		.loc 1 163 19 is_stmt 0 view .LVU3953
 9291 3c3d 48091437 		orq	%rdx, (%rdi,%rsi)
GAS LISTING /tmp/ccmX4xFB.s 			page 270


 164:sieve_extend.c ****        *index_ptr |= mask;
 9292              		.loc 1 164 8 is_stmt 1 view .LVU3954
 9293              	.LVL714:
 165:sieve_extend.c ****        index_ptr+=step;
 9294              		.loc 1 165 8 view .LVU3955
 9295 3c41 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9296              		.loc 1 165 19 is_stmt 0 view .LVU3956
 9297 3c44 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9298              		.loc 1 166 8 is_stmt 1 view .LVU3957
 9299 3c48 4801D8   		addq	%rbx, %rax
 9300              	.LVL715:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9301              		.loc 1 156 10 view .LVU3958
 9302 3c4b 4839C5   		cmpq	%rax, %rbp
 9303 3c4e 0F869C00 		jbe	.L734
 9303      0000
 157:sieve_extend.c ****        index_ptr+=step;
 9304              		.loc 1 157 8 view .LVU3959
 157:sieve_extend.c ****        index_ptr+=step;
 9305              		.loc 1 157 19 is_stmt 0 view .LVU3960
 9306 3c54 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9307              		.loc 1 158 8 is_stmt 1 view .LVU3961
 9308              	.LVL716:
 159:sieve_extend.c ****        index_ptr+=step;
 9309              		.loc 1 159 8 view .LVU3962
 159:sieve_extend.c ****        index_ptr+=step;
 9310              		.loc 1 159 19 is_stmt 0 view .LVU3963
 9311 3c57 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9312              		.loc 1 160 8 is_stmt 1 view .LVU3964
 9313              	.LVL717:
 161:sieve_extend.c ****        index_ptr+=step;
 9314              		.loc 1 161 8 view .LVU3965
 161:sieve_extend.c ****        index_ptr+=step;
 9315              		.loc 1 161 19 is_stmt 0 view .LVU3966
 9316 3c5b 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9317              		.loc 1 162 8 is_stmt 1 view .LVU3967
 9318              	.LVL718:
 163:sieve_extend.c ****        index_ptr+=step;
 9319              		.loc 1 163 8 view .LVU3968
 163:sieve_extend.c ****        index_ptr+=step;
 9320              		.loc 1 163 19 is_stmt 0 view .LVU3969
 9321 3c5e 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9322              		.loc 1 164 8 is_stmt 1 view .LVU3970
 9323              	.LVL719:
 165:sieve_extend.c ****        index_ptr+=step;
 9324              		.loc 1 165 8 view .LVU3971
 9325 3c62 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9326              		.loc 1 165 19 is_stmt 0 view .LVU3972
 9327 3c65 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
GAS LISTING /tmp/ccmX4xFB.s 			page 271


 9328              		.loc 1 166 8 is_stmt 1 view .LVU3973
 9329 3c69 4801D8   		addq	%rbx, %rax
 9330              	.LVL720:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9331              		.loc 1 156 10 view .LVU3974
 9332 3c6c 4839C5   		cmpq	%rax, %rbp
 9333 3c6f 767F     		jbe	.L734
 157:sieve_extend.c ****        index_ptr+=step;
 9334              		.loc 1 157 8 view .LVU3975
 157:sieve_extend.c ****        index_ptr+=step;
 9335              		.loc 1 157 19 is_stmt 0 view .LVU3976
 9336 3c71 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9337              		.loc 1 158 8 is_stmt 1 view .LVU3977
 9338              	.LVL721:
 159:sieve_extend.c ****        index_ptr+=step;
 9339              		.loc 1 159 8 view .LVU3978
 159:sieve_extend.c ****        index_ptr+=step;
 9340              		.loc 1 159 19 is_stmt 0 view .LVU3979
 9341 3c74 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9342              		.loc 1 160 8 is_stmt 1 view .LVU3980
 9343              	.LVL722:
 161:sieve_extend.c ****        index_ptr+=step;
 9344              		.loc 1 161 8 view .LVU3981
 161:sieve_extend.c ****        index_ptr+=step;
 9345              		.loc 1 161 19 is_stmt 0 view .LVU3982
 9346 3c78 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9347              		.loc 1 162 8 is_stmt 1 view .LVU3983
 9348              	.LVL723:
 163:sieve_extend.c ****        index_ptr+=step;
 9349              		.loc 1 163 8 view .LVU3984
 163:sieve_extend.c ****        index_ptr+=step;
 9350              		.loc 1 163 19 is_stmt 0 view .LVU3985
 9351 3c7b 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9352              		.loc 1 164 8 is_stmt 1 view .LVU3986
 9353              	.LVL724:
 165:sieve_extend.c ****        index_ptr+=step;
 9354              		.loc 1 165 8 view .LVU3987
 9355 3c7f 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9356              		.loc 1 165 19 is_stmt 0 view .LVU3988
 9357 3c82 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9358              		.loc 1 166 8 is_stmt 1 view .LVU3989
 9359 3c86 4801D8   		addq	%rbx, %rax
 9360              	.LVL725:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9361              		.loc 1 156 10 view .LVU3990
 9362 3c89 4839C5   		cmpq	%rax, %rbp
 9363 3c8c 7662     		jbe	.L734
 157:sieve_extend.c ****        index_ptr+=step;
 9364              		.loc 1 157 8 view .LVU3991
 157:sieve_extend.c ****        index_ptr+=step;
 9365              		.loc 1 157 19 is_stmt 0 view .LVU3992
GAS LISTING /tmp/ccmX4xFB.s 			page 272


 9366 3c8e 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9367              		.loc 1 158 8 is_stmt 1 view .LVU3993
 9368              	.LVL726:
 159:sieve_extend.c ****        index_ptr+=step;
 9369              		.loc 1 159 8 view .LVU3994
 159:sieve_extend.c ****        index_ptr+=step;
 9370              		.loc 1 159 19 is_stmt 0 view .LVU3995
 9371 3c91 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9372              		.loc 1 160 8 is_stmt 1 view .LVU3996
 9373              	.LVL727:
 161:sieve_extend.c ****        index_ptr+=step;
 9374              		.loc 1 161 8 view .LVU3997
 161:sieve_extend.c ****        index_ptr+=step;
 9375              		.loc 1 161 19 is_stmt 0 view .LVU3998
 9376 3c95 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9377              		.loc 1 162 8 is_stmt 1 view .LVU3999
 9378              	.LVL728:
 163:sieve_extend.c ****        index_ptr+=step;
 9379              		.loc 1 163 8 view .LVU4000
 163:sieve_extend.c ****        index_ptr+=step;
 9380              		.loc 1 163 19 is_stmt 0 view .LVU4001
 9381 3c98 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9382              		.loc 1 164 8 is_stmt 1 view .LVU4002
 9383              	.LVL729:
 165:sieve_extend.c ****        index_ptr+=step;
 9384              		.loc 1 165 8 view .LVU4003
 9385 3c9c 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9386              		.loc 1 165 19 is_stmt 0 view .LVU4004
 9387 3c9f 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9388              		.loc 1 166 8 is_stmt 1 view .LVU4005
 9389 3ca3 4801D8   		addq	%rbx, %rax
 9390              	.LVL730:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9391              		.loc 1 156 10 view .LVU4006
 9392 3ca6 4839C5   		cmpq	%rax, %rbp
 9393 3ca9 7645     		jbe	.L734
 157:sieve_extend.c ****        index_ptr+=step;
 9394              		.loc 1 157 8 view .LVU4007
 157:sieve_extend.c ****        index_ptr+=step;
 9395              		.loc 1 157 19 is_stmt 0 view .LVU4008
 9396 3cab 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9397              		.loc 1 158 8 is_stmt 1 view .LVU4009
 9398              	.LVL731:
 159:sieve_extend.c ****        index_ptr+=step;
 9399              		.loc 1 159 8 view .LVU4010
 159:sieve_extend.c ****        index_ptr+=step;
 9400              		.loc 1 159 19 is_stmt 0 view .LVU4011
 9401 3cae 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9402              		.loc 1 160 8 is_stmt 1 view .LVU4012
GAS LISTING /tmp/ccmX4xFB.s 			page 273


 9403              	.LVL732:
 161:sieve_extend.c ****        index_ptr+=step;
 9404              		.loc 1 161 8 view .LVU4013
 161:sieve_extend.c ****        index_ptr+=step;
 9405              		.loc 1 161 19 is_stmt 0 view .LVU4014
 9406 3cb2 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9407              		.loc 1 162 8 is_stmt 1 view .LVU4015
 9408              	.LVL733:
 163:sieve_extend.c ****        index_ptr+=step;
 9409              		.loc 1 163 8 view .LVU4016
 163:sieve_extend.c ****        index_ptr+=step;
 9410              		.loc 1 163 19 is_stmt 0 view .LVU4017
 9411 3cb5 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9412              		.loc 1 164 8 is_stmt 1 view .LVU4018
 9413              	.LVL734:
 165:sieve_extend.c ****        index_ptr+=step;
 9414              		.loc 1 165 8 view .LVU4019
 9415 3cb9 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9416              		.loc 1 165 19 is_stmt 0 view .LVU4020
 9417 3cbc 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9418              		.loc 1 166 8 is_stmt 1 view .LVU4021
 9419 3cc0 4801D8   		addq	%rbx, %rax
 9420              	.LVL735:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9421              		.loc 1 156 10 view .LVU4022
 9422 3cc3 4839C5   		cmpq	%rax, %rbp
 9423 3cc6 7628     		jbe	.L734
 157:sieve_extend.c ****        index_ptr+=step;
 9424              		.loc 1 157 8 view .LVU4023
 157:sieve_extend.c ****        index_ptr+=step;
 9425              		.loc 1 157 19 is_stmt 0 view .LVU4024
 9426 3cc8 480910   		orq	%rdx, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 9427              		.loc 1 158 8 is_stmt 1 view .LVU4025
 9428              	.LVL736:
 159:sieve_extend.c ****        index_ptr+=step;
 9429              		.loc 1 159 8 view .LVU4026
 159:sieve_extend.c ****        index_ptr+=step;
 9430              		.loc 1 159 19 is_stmt 0 view .LVU4027
 9431 3ccb 48091430 		orq	%rdx, (%rax,%rsi)
 160:sieve_extend.c ****        *index_ptr |= mask;
 9432              		.loc 1 160 8 is_stmt 1 view .LVU4028
 9433              	.LVL737:
 161:sieve_extend.c ****        index_ptr+=step;
 9434              		.loc 1 161 8 view .LVU4029
 161:sieve_extend.c ****        index_ptr+=step;
 9435              		.loc 1 161 19 is_stmt 0 view .LVU4030
 9436 3ccf 480917   		orq	%rdx, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 9437              		.loc 1 162 8 is_stmt 1 view .LVU4031
 9438              	.LVL738:
 163:sieve_extend.c ****        index_ptr+=step;
 9439              		.loc 1 163 8 view .LVU4032
GAS LISTING /tmp/ccmX4xFB.s 			page 274


 163:sieve_extend.c ****        index_ptr+=step;
 9440              		.loc 1 163 19 is_stmt 0 view .LVU4033
 9441 3cd2 48091437 		orq	%rdx, (%rdi,%rsi)
 164:sieve_extend.c ****        *index_ptr |= mask;
 9442              		.loc 1 164 8 is_stmt 1 view .LVU4034
 9443              	.LVL739:
 165:sieve_extend.c ****        index_ptr+=step;
 9444              		.loc 1 165 8 view .LVU4035
 9445 3cd6 4801DF   		addq	%rbx, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 9446              		.loc 1 165 19 is_stmt 0 view .LVU4036
 9447 3cd9 480914B0 		orq	%rdx, (%rax,%rsi,4)
 166:sieve_extend.c ****    }
 9448              		.loc 1 166 8 is_stmt 1 view .LVU4037
 9449 3cdd 4801D8   		addq	%rbx, %rax
 9450              	.LVL740:
 156:sieve_extend.c ****        *index_ptr |= mask;
 9451              		.loc 1 156 10 view .LVU4038
 9452 3ce0 4839C5   		cmpq	%rax, %rbp
 9453 3ce3 0F8708FF 		ja	.L735
 9453      FFFF
 9454 3ce9 0F1F8000 		.p2align 4,,10
 9454      000000
 9455              		.p2align 3
 9456              	.L734:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9457              		.loc 1 169 10 view .LVU4039
 9458 3cf0 4939C1   		cmpq	%rax, %r9
 9459 3cf3 765B     		jbe	.L736
 9460              	.L737:
 170:sieve_extend.c ****        index_ptr+=step;
 9461              		.loc 1 170 8 view .LVU4040
 170:sieve_extend.c ****        index_ptr+=step;
 9462              		.loc 1 170 19 is_stmt 0 view .LVU4041
 9463 3cf5 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9464              		.loc 1 171 8 is_stmt 1 view .LVU4042
 171:sieve_extend.c ****    }
 9465              		.loc 1 171 17 is_stmt 0 view .LVU4043
 9466 3cf8 4801F0   		addq	%rsi, %rax
 9467              	.LVL741:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9468              		.loc 1 169 10 is_stmt 1 view .LVU4044
 9469 3cfb 4939C1   		cmpq	%rax, %r9
 9470 3cfe 7650     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9471              		.loc 1 170 8 view .LVU4045
 170:sieve_extend.c ****        index_ptr+=step;
 9472              		.loc 1 170 19 is_stmt 0 view .LVU4046
 9473 3d00 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9474              		.loc 1 171 8 is_stmt 1 view .LVU4047
 171:sieve_extend.c ****    }
 9475              		.loc 1 171 17 is_stmt 0 view .LVU4048
 9476 3d03 4801F0   		addq	%rsi, %rax
 9477              	.LVL742:
 169:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 275


 9478              		.loc 1 169 10 is_stmt 1 view .LVU4049
 9479 3d06 4939C1   		cmpq	%rax, %r9
 9480 3d09 7645     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9481              		.loc 1 170 8 view .LVU4050
 170:sieve_extend.c ****        index_ptr+=step;
 9482              		.loc 1 170 19 is_stmt 0 view .LVU4051
 9483 3d0b 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9484              		.loc 1 171 8 is_stmt 1 view .LVU4052
 171:sieve_extend.c ****    }
 9485              		.loc 1 171 17 is_stmt 0 view .LVU4053
 9486 3d0e 4801F0   		addq	%rsi, %rax
 9487              	.LVL743:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9488              		.loc 1 169 10 is_stmt 1 view .LVU4054
 9489 3d11 4939C1   		cmpq	%rax, %r9
 9490 3d14 763A     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9491              		.loc 1 170 8 view .LVU4055
 170:sieve_extend.c ****        index_ptr+=step;
 9492              		.loc 1 170 19 is_stmt 0 view .LVU4056
 9493 3d16 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9494              		.loc 1 171 8 is_stmt 1 view .LVU4057
 171:sieve_extend.c ****    }
 9495              		.loc 1 171 17 is_stmt 0 view .LVU4058
 9496 3d19 4801F0   		addq	%rsi, %rax
 9497              	.LVL744:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9498              		.loc 1 169 10 is_stmt 1 view .LVU4059
 9499 3d1c 4939C1   		cmpq	%rax, %r9
 9500 3d1f 762F     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9501              		.loc 1 170 8 view .LVU4060
 170:sieve_extend.c ****        index_ptr+=step;
 9502              		.loc 1 170 19 is_stmt 0 view .LVU4061
 9503 3d21 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9504              		.loc 1 171 8 is_stmt 1 view .LVU4062
 171:sieve_extend.c ****    }
 9505              		.loc 1 171 17 is_stmt 0 view .LVU4063
 9506 3d24 4801F0   		addq	%rsi, %rax
 9507              	.LVL745:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9508              		.loc 1 169 10 is_stmt 1 view .LVU4064
 9509 3d27 4939C1   		cmpq	%rax, %r9
 9510 3d2a 7624     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9511              		.loc 1 170 8 view .LVU4065
 170:sieve_extend.c ****        index_ptr+=step;
 9512              		.loc 1 170 19 is_stmt 0 view .LVU4066
 9513 3d2c 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9514              		.loc 1 171 8 is_stmt 1 view .LVU4067
 171:sieve_extend.c ****    }
 9515              		.loc 1 171 17 is_stmt 0 view .LVU4068
GAS LISTING /tmp/ccmX4xFB.s 			page 276


 9516 3d2f 4801F0   		addq	%rsi, %rax
 9517              	.LVL746:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9518              		.loc 1 169 10 is_stmt 1 view .LVU4069
 9519 3d32 4939C1   		cmpq	%rax, %r9
 9520 3d35 7619     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9521              		.loc 1 170 8 view .LVU4070
 170:sieve_extend.c ****        index_ptr+=step;
 9522              		.loc 1 170 19 is_stmt 0 view .LVU4071
 9523 3d37 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9524              		.loc 1 171 8 is_stmt 1 view .LVU4072
 171:sieve_extend.c ****    }
 9525              		.loc 1 171 17 is_stmt 0 view .LVU4073
 9526 3d3a 4801F0   		addq	%rsi, %rax
 9527              	.LVL747:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9528              		.loc 1 169 10 is_stmt 1 view .LVU4074
 9529 3d3d 4939C1   		cmpq	%rax, %r9
 9530 3d40 760E     		jbe	.L736
 170:sieve_extend.c ****        index_ptr+=step;
 9531              		.loc 1 170 8 view .LVU4075
 170:sieve_extend.c ****        index_ptr+=step;
 9532              		.loc 1 170 19 is_stmt 0 view .LVU4076
 9533 3d42 480910   		orq	%rdx, (%rax)
 171:sieve_extend.c ****    }
 9534              		.loc 1 171 8 is_stmt 1 view .LVU4077
 171:sieve_extend.c ****    }
 9535              		.loc 1 171 17 is_stmt 0 view .LVU4078
 9536 3d45 4801F0   		addq	%rsi, %rax
 9537              	.LVL748:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9538              		.loc 1 169 10 is_stmt 1 view .LVU4079
 9539 3d48 4939C1   		cmpq	%rax, %r9
 9540 3d4b 77A8     		ja	.L737
 9541 3d4d 0F1F00   		.p2align 4,,10
 9542              		.p2align 3
 9543              	.L736:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 9544              		.loc 1 174 4 view .LVU4080
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 9545              		.loc 1 174 7 is_stmt 0 view .LVU4081
 9546 3d50 4939C1   		cmpq	%rax, %r9
 9547 3d53 0F848707 		je	.L1566
 9547      0000
 9548              	.LVL749:
 9549              	.L738:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 9550              		.loc 1 174 7 view .LVU4082
 9551              	.LBE601:
 9552              	.LBE603:
 9553              	.LBE598:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9554              		.loc 1 240 54 is_stmt 1 view .LVU4083
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9555              		.loc 1 240 9 is_stmt 0 view .LVU4084
GAS LISTING /tmp/ccmX4xFB.s 			page 277


 9556 3d59 4939CD   		cmpq	%rcx, %r13
 9557 3d5c 0F83AEFD 		jnb	.L739
 9557      FFFF
 9558              	.LVL750:
 9559              	.L730:
 240:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9560              		.loc 1 240 9 view .LVU4085
 9561              	.LBE597:
 9562              	.LBE608:
 9563              	.LBE622:
 702:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 9564              		.loc 1 702 9 is_stmt 1 view .LVU4086
 9565              	.LBB623:
 9566              	.LBI623:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9567              		.loc 1 96 25 view .LVU4087
 9568              	.LBB624:
  97:sieve_extend.c ****     return index;
 9569              		.loc 1 97 5 view .LVU4088
  97:sieve_extend.c ****     return index;
 9570              		.loc 1 97 11 view .LVU4089
  97:sieve_extend.c ****     return index;
 9571              		.loc 1 97 21 is_stmt 0 view .LVU4090
 9572 3d62 4D89E2   		movq	%r12, %r10
 9573              	.LVL751:
  97:sieve_extend.c ****     return index;
 9574              		.loc 1 97 21 view .LVU4091
 9575 3d65 49C1EA06 		shrq	$6, %r10
  97:sieve_extend.c ****     return index;
 9576              		.loc 1 97 12 view .LVU4092
 9577 3d69 4B8B0CD7 		movq	(%r15,%r10,8), %rcx
 9578              	.LBE624:
 9579              	.LBE623:
 700:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 9580              		.loc 1 700 35 view .LVU4093
 9581 3d6d 4C89E6   		movq	%r12, %rsi
 9582              	.LBB626:
 9583              	.LBB625:
  97:sieve_extend.c ****     return index;
 9584              		.loc 1 97 11 view .LVU4094
 9585 3d70 4C0FA3E1 		btq	%r12, %rcx
 9586 3d74 0F83C600 		jnc	.L729
 9586      0000
 9587              	.LVL752:
 9588              	.L728:
  97:sieve_extend.c ****     return index;
 9589              		.loc 1 97 58 is_stmt 1 view .LVU4095
  97:sieve_extend.c ****     return index;
 9590              		.loc 1 97 63 is_stmt 0 view .LVU4096
 9591 3d7a 4C8D6601 		leaq	1(%rsi), %r12
 9592              	.LVL753:
  97:sieve_extend.c ****     return index;
 9593              		.loc 1 97 21 view .LVU4097
 9594 3d7e 4D89E5   		movq	%r12, %r13
 9595 3d81 49C1ED06 		shrq	$6, %r13
  97:sieve_extend.c ****     return index;
 9596              		.loc 1 97 12 view .LVU4098
GAS LISTING /tmp/ccmX4xFB.s 			page 278


 9597 3d85 4B8B1CEF 		movq	(%r15,%r13,8), %rbx
  97:sieve_extend.c ****     return index;
 9598              		.loc 1 97 63 view .LVU4099
 9599 3d89 4C89E6   		movq	%r12, %rsi
  97:sieve_extend.c ****     return index;
 9600              		.loc 1 97 11 is_stmt 1 view .LVU4100
 9601 3d8c 4C0FA3E3 		btq	%r12, %rbx
 9602 3d90 0F83AA00 		jnc	.L729
 9602      0000
  97:sieve_extend.c ****     return index;
 9603              		.loc 1 97 58 view .LVU4101
 9604              	.LVL754:
  97:sieve_extend.c ****     return index;
 9605              		.loc 1 97 63 is_stmt 0 view .LVU4102
 9606 3d96 48FFC6   		incq	%rsi
 9607              	.LVL755:
  97:sieve_extend.c ****     return index;
 9608              		.loc 1 97 11 is_stmt 1 view .LVU4103
  97:sieve_extend.c ****     return index;
 9609              		.loc 1 97 21 is_stmt 0 view .LVU4104
 9610 3d99 4889F0   		movq	%rsi, %rax
 9611 3d9c 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 9612              		.loc 1 97 12 view .LVU4105
 9613 3da0 498B3CC7 		movq	(%r15,%rax,8), %rdi
  97:sieve_extend.c ****     return index;
 9614              		.loc 1 97 11 view .LVU4106
 9615 3da4 480FA3F7 		btq	%rsi, %rdi
 9616 3da8 0F839200 		jnc	.L729
 9616      0000
  97:sieve_extend.c ****     return index;
 9617              		.loc 1 97 58 is_stmt 1 view .LVU4107
 9618              	.LVL756:
  97:sieve_extend.c ****     return index;
 9619              		.loc 1 97 63 is_stmt 0 view .LVU4108
 9620 3dae 498D7424 		leaq	2(%r12), %rsi
 9620      02
 9621              	.LVL757:
  97:sieve_extend.c ****     return index;
 9622              		.loc 1 97 11 is_stmt 1 view .LVU4109
  97:sieve_extend.c ****     return index;
 9623              		.loc 1 97 21 is_stmt 0 view .LVU4110
 9624 3db3 4889F5   		movq	%rsi, %rbp
 9625 3db6 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
 9626              		.loc 1 97 12 view .LVU4111
 9627 3dba 4D8B34EF 		movq	(%r15,%rbp,8), %r14
  97:sieve_extend.c ****     return index;
 9628              		.loc 1 97 11 view .LVU4112
 9629 3dbe 490FA3F6 		btq	%rsi, %r14
 9630 3dc2 737C     		jnc	.L729
  97:sieve_extend.c ****     return index;
 9631              		.loc 1 97 58 is_stmt 1 view .LVU4113
 9632              	.LVL758:
  97:sieve_extend.c ****     return index;
 9633              		.loc 1 97 63 is_stmt 0 view .LVU4114
 9634 3dc4 498D7424 		leaq	3(%r12), %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 279


 9634      03
 9635              	.LVL759:
  97:sieve_extend.c ****     return index;
 9636              		.loc 1 97 11 is_stmt 1 view .LVU4115
  97:sieve_extend.c ****     return index;
 9637              		.loc 1 97 21 is_stmt 0 view .LVU4116
 9638 3dc9 4889F2   		movq	%rsi, %rdx
 9639 3dcc 48C1EA06 		shrq	$6, %rdx
  97:sieve_extend.c ****     return index;
 9640              		.loc 1 97 12 view .LVU4117
 9641 3dd0 4D8B14D7 		movq	(%r15,%rdx,8), %r10
  97:sieve_extend.c ****     return index;
 9642              		.loc 1 97 11 view .LVU4118
 9643 3dd4 490FA3F2 		btq	%rsi, %r10
 9644 3dd8 7366     		jnc	.L729
  97:sieve_extend.c ****     return index;
 9645              		.loc 1 97 58 is_stmt 1 view .LVU4119
 9646              	.LVL760:
  97:sieve_extend.c ****     return index;
 9647              		.loc 1 97 63 is_stmt 0 view .LVU4120
 9648 3dda 498D7424 		leaq	4(%r12), %rsi
 9648      04
 9649              	.LVL761:
  97:sieve_extend.c ****     return index;
 9650              		.loc 1 97 11 is_stmt 1 view .LVU4121
  97:sieve_extend.c ****     return index;
 9651              		.loc 1 97 21 is_stmt 0 view .LVU4122
 9652 3ddf 4889F1   		movq	%rsi, %rcx
 9653 3de2 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 9654              		.loc 1 97 12 view .LVU4123
 9655 3de6 4D8B2CCF 		movq	(%r15,%rcx,8), %r13
  97:sieve_extend.c ****     return index;
 9656              		.loc 1 97 11 view .LVU4124
 9657 3dea 490FA3F5 		btq	%rsi, %r13
 9658 3dee 7350     		jnc	.L729
  97:sieve_extend.c ****     return index;
 9659              		.loc 1 97 58 is_stmt 1 view .LVU4125
 9660              	.LVL762:
  97:sieve_extend.c ****     return index;
 9661              		.loc 1 97 63 is_stmt 0 view .LVU4126
 9662 3df0 498D7424 		leaq	5(%r12), %rsi
 9662      05
 9663              	.LVL763:
  97:sieve_extend.c ****     return index;
 9664              		.loc 1 97 11 is_stmt 1 view .LVU4127
  97:sieve_extend.c ****     return index;
 9665              		.loc 1 97 21 is_stmt 0 view .LVU4128
 9666 3df5 4889F3   		movq	%rsi, %rbx
 9667 3df8 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 9668              		.loc 1 97 12 view .LVU4129
 9669 3dfc 498B04DF 		movq	(%r15,%rbx,8), %rax
  97:sieve_extend.c ****     return index;
 9670              		.loc 1 97 11 view .LVU4130
 9671 3e00 480FA3F0 		btq	%rsi, %rax
 9672 3e04 733A     		jnc	.L729
GAS LISTING /tmp/ccmX4xFB.s 			page 280


  97:sieve_extend.c ****     return index;
 9673              		.loc 1 97 58 is_stmt 1 view .LVU4131
 9674              	.LVL764:
  97:sieve_extend.c ****     return index;
 9675              		.loc 1 97 63 is_stmt 0 view .LVU4132
 9676 3e06 498D7424 		leaq	6(%r12), %rsi
 9676      06
 9677              	.LVL765:
  97:sieve_extend.c ****     return index;
 9678              		.loc 1 97 11 is_stmt 1 view .LVU4133
  97:sieve_extend.c ****     return index;
 9679              		.loc 1 97 21 is_stmt 0 view .LVU4134
 9680 3e0b 4889F7   		movq	%rsi, %rdi
 9681 3e0e 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 9682              		.loc 1 97 12 view .LVU4135
 9683 3e12 498B2CFF 		movq	(%r15,%rdi,8), %rbp
  97:sieve_extend.c ****     return index;
 9684              		.loc 1 97 11 view .LVU4136
 9685 3e16 480FA3F5 		btq	%rsi, %rbp
 9686 3e1a 7324     		jnc	.L729
  97:sieve_extend.c ****     return index;
 9687              		.loc 1 97 58 is_stmt 1 view .LVU4137
 9688              	.LVL766:
  97:sieve_extend.c ****     return index;
 9689              		.loc 1 97 63 is_stmt 0 view .LVU4138
 9690 3e1c 498D7424 		leaq	7(%r12), %rsi
 9690      07
 9691              	.LVL767:
  97:sieve_extend.c ****     return index;
 9692              		.loc 1 97 11 is_stmt 1 view .LVU4139
  97:sieve_extend.c ****     return index;
 9693              		.loc 1 97 21 is_stmt 0 view .LVU4140
 9694 3e21 4989F4   		movq	%rsi, %r12
 9695 3e24 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 9696              		.loc 1 97 12 view .LVU4141
 9697 3e28 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 9698              		.loc 1 97 11 view .LVU4142
 9699 3e2c 490FA3F6 		btq	%rsi, %r14
 9700 3e30 0F8244FF 		jc	.L728
 9700      FFFF
 9701              	.LVL768:
 9702 3e36 662E0F1F 		.p2align 4,,10
 9702      84000000 
 9702      0000
 9703              		.p2align 3
 9704              	.L729:
  98:sieve_extend.c ****     
 9705              		.loc 1 98 5 is_stmt 1 view .LVU4143
  98:sieve_extend.c ****     
 9706              		.loc 1 98 5 is_stmt 0 view .LVU4144
 9707              	.LBE625:
 9708              	.LBE626:
 703:sieve_extend.c ****     }
 9709              		.loc 1 703 9 is_stmt 1 view .LVU4145
GAS LISTING /tmp/ccmX4xFB.s 			page 281


 703:sieve_extend.c ****     }
 9710              		.loc 1 703 35 is_stmt 0 view .LVU4146
 9711 3e40 488D4E01 		leaq	1(%rsi), %rcx
 703:sieve_extend.c ****     }
 9712              		.loc 1 703 15 view .LVU4147
 9713 3e44 480FAFCE 		imulq	%rsi, %rcx
 9714              	.LVL769:
 703:sieve_extend.c ****     }
 9715              		.loc 1 703 15 view .LVU4148
 9716 3e48 4801C9   		addq	%rcx, %rcx
 9717              	.LVL770:
 697:sieve_extend.c ****         step  = prime * 2 + 1;
 9718              		.loc 1 697 11 is_stmt 1 view .LVU4149
 9719 3e4b 4939C8   		cmpq	%rcx, %r8
 9720 3e4e 0F82D0FB 		jb	.L1550
 9720      FFFF
 698:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 9721              		.loc 1 698 9 view .LVU4150
 698:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 9722              		.loc 1 698 15 is_stmt 0 view .LVU4151
 9723 3e54 4C8D5436 		leaq	1(%rsi,%rsi), %r10
 9723      01
 9724              	.LVL771:
 699:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9725              		.loc 1 699 9 is_stmt 1 view .LVU4152
 699:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9726              		.loc 1 699 12 is_stmt 0 view .LVU4153
 9727 3e59 4C3B1500 		cmpq	global_MEDIUMSTEP_FASTER(%rip), %r10
 9727      000000
 9728 3e60 0F863AFC 		jbe	.L719
 9728      FFFF
 9729              	.LVL772:
 9730              	.L1565:
 708:sieve_extend.c ****         step  = prime * 2 + 1;
 9731              		.loc 1 708 11 is_stmt 1 view .LVU4154
 9732 3e66 4939C8   		cmpq	%rcx, %r8
 9733 3e69 0F82B5FB 		jb	.L1550
 9733      FFFF
 709:sieve_extend.c ****         if (step > 64) break;
 9734              		.loc 1 709 9 view .LVU4155
 710:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9735              		.loc 1 710 9 view .LVU4156
 9736 3e6f 488B6C24 		movq	8(%rsp), %rbp
 9736      08
 9737 3e74 488D5E01 		leaq	1(%rsi), %rbx
 710:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9738              		.loc 1 710 12 is_stmt 0 view .LVU4157
 9739 3e78 4983FA40 		cmpq	$64, %r10
 9740 3e7c 0F87C508 		ja	.L778
 9740      0000
 9741              		.p2align 4,,10
 9742 3e82 660F1F44 		.p2align 3
 9742      0000
 9743              	.L722:
 711:sieve_extend.c ****         start1 = start; // save value
 9744              		.loc 1 711 9 is_stmt 1 view .LVU4158
 711:sieve_extend.c ****         start1 = start; // save value
GAS LISTING /tmp/ccmX4xFB.s 			page 282


 9745              		.loc 1 711 35 is_stmt 0 view .LVU4159
 9746 3e88 4889DF   		movq	%rbx, %rdi
 711:sieve_extend.c ****         start1 = start; // save value
 9747              		.loc 1 711 12 view .LVU4160
 9748 3e8b 4839DD   		cmpq	%rbx, %rbp
 9749 3e8e 7211     		jb	.L741
 711:sieve_extend.c ****         start1 = start; // save value
 9750              		.loc 1 711 41 is_stmt 1 view .LVU4161
 711:sieve_extend.c ****         start1 = start; // save value
 9751              		.loc 1 711 61 is_stmt 0 view .LVU4162
 9752 3e90 488D4435 		leaq	0(%rbp,%rsi), %rax
 9752      00
 711:sieve_extend.c ****         start1 = start; // save value
 9753              		.loc 1 711 102 view .LVU4163
 9754 3e95 31D2     		xorl	%edx, %edx
 711:sieve_extend.c ****         start1 = start; // save value
 9755              		.loc 1 711 69 view .LVU4164
 9756 3e97 488D0C30 		leaq	(%rax,%rsi), %rcx
 9757              	.LVL773:
 711:sieve_extend.c ****         start1 = start; // save value
 9758              		.loc 1 711 102 view .LVU4165
 9759 3e9b 49F7F2   		divq	%r10
 9760              	.LVL774:
 711:sieve_extend.c ****         start1 = start; // save value
 9761              		.loc 1 711 47 view .LVU4166
 9762 3e9e 4829D1   		subq	%rdx, %rcx
 9763              	.LVL775:
 9764              	.L741:
 712:sieve_extend.c ****         step1 = step; // save value
 9765              		.loc 1 712 9 is_stmt 1 view .LVU4167
 713:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 9766              		.loc 1 713 9 view .LVU4168
 714:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 9767              		.loc 1 714 9 view .LVU4169
 9768              	.LBB627:
 9769              	.LBI627:
  96:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9770              		.loc 1 96 25 view .LVU4170
 9771              	.LBB628:
  97:sieve_extend.c ****     return index;
 9772              		.loc 1 97 5 view .LVU4171
  97:sieve_extend.c ****     return index;
 9773              		.loc 1 97 11 view .LVU4172
  97:sieve_extend.c ****     return index;
 9774              		.loc 1 97 21 is_stmt 0 view .LVU4173
 9775 3ea1 4889DE   		movq	%rbx, %rsi
 9776 3ea4 48C1EE06 		shrq	$6, %rsi
  97:sieve_extend.c ****     return index;
 9777              		.loc 1 97 12 view .LVU4174
 9778 3ea8 4D8B2CF7 		movq	(%r15,%rsi,8), %r13
  97:sieve_extend.c ****     return index;
 9779              		.loc 1 97 11 view .LVU4175
 9780 3eac 490FA3DD 		btq	%rbx, %r13
 9781 3eb0 0F83BA00 		jnc	.L742
 9781      0000
 9782              	.L743:
 9783              	.LVL776:
GAS LISTING /tmp/ccmX4xFB.s 			page 283


  97:sieve_extend.c ****     return index;
 9784              		.loc 1 97 58 is_stmt 1 view .LVU4176
  97:sieve_extend.c ****     return index;
 9785              		.loc 1 97 63 is_stmt 0 view .LVU4177
 9786 3eb6 488D5F01 		leaq	1(%rdi), %rbx
 9787              	.LVL777:
  97:sieve_extend.c ****     return index;
 9788              		.loc 1 97 21 view .LVU4178
 9789 3eba 4989DC   		movq	%rbx, %r12
 9790 3ebd 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 9791              		.loc 1 97 12 view .LVU4179
 9792 3ec1 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 9793              		.loc 1 97 63 view .LVU4180
 9794 3ec5 4889DF   		movq	%rbx, %rdi
  97:sieve_extend.c ****     return index;
 9795              		.loc 1 97 11 is_stmt 1 view .LVU4181
 9796 3ec8 490FA3DE 		btq	%rbx, %r14
 9797 3ecc 0F839E00 		jnc	.L742
 9797      0000
  97:sieve_extend.c ****     return index;
 9798              		.loc 1 97 58 view .LVU4182
 9799              	.LVL778:
  97:sieve_extend.c ****     return index;
 9800              		.loc 1 97 63 is_stmt 0 view .LVU4183
 9801 3ed2 48FFC7   		incq	%rdi
 9802              	.LVL779:
  97:sieve_extend.c ****     return index;
 9803              		.loc 1 97 11 is_stmt 1 view .LVU4184
  97:sieve_extend.c ****     return index;
 9804              		.loc 1 97 21 is_stmt 0 view .LVU4185
 9805 3ed5 4889F8   		movq	%rdi, %rax
 9806 3ed8 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 9807              		.loc 1 97 12 view .LVU4186
 9808 3edc 498B14C7 		movq	(%r15,%rax,8), %rdx
  97:sieve_extend.c ****     return index;
 9809              		.loc 1 97 11 view .LVU4187
 9810 3ee0 480FA3FA 		btq	%rdi, %rdx
 9811 3ee4 0F838600 		jnc	.L742
 9811      0000
  97:sieve_extend.c ****     return index;
 9812              		.loc 1 97 58 is_stmt 1 view .LVU4188
 9813              	.LVL780:
  97:sieve_extend.c ****     return index;
 9814              		.loc 1 97 63 is_stmt 0 view .LVU4189
 9815 3eea 488D7B02 		leaq	2(%rbx), %rdi
 9816              	.LVL781:
  97:sieve_extend.c ****     return index;
 9817              		.loc 1 97 11 is_stmt 1 view .LVU4190
  97:sieve_extend.c ****     return index;
 9818              		.loc 1 97 21 is_stmt 0 view .LVU4191
 9819 3eee 4889FE   		movq	%rdi, %rsi
 9820 3ef1 48C1EE06 		shrq	$6, %rsi
  97:sieve_extend.c ****     return index;
 9821              		.loc 1 97 12 view .LVU4192
GAS LISTING /tmp/ccmX4xFB.s 			page 284


 9822 3ef5 4D8B2CF7 		movq	(%r15,%rsi,8), %r13
  97:sieve_extend.c ****     return index;
 9823              		.loc 1 97 11 view .LVU4193
 9824 3ef9 490FA3FD 		btq	%rdi, %r13
 9825 3efd 7371     		jnc	.L742
  97:sieve_extend.c ****     return index;
 9826              		.loc 1 97 58 is_stmt 1 view .LVU4194
 9827              	.LVL782:
  97:sieve_extend.c ****     return index;
 9828              		.loc 1 97 63 is_stmt 0 view .LVU4195
 9829 3eff 488D7B03 		leaq	3(%rbx), %rdi
 9830              	.LVL783:
  97:sieve_extend.c ****     return index;
 9831              		.loc 1 97 11 is_stmt 1 view .LVU4196
  97:sieve_extend.c ****     return index;
 9832              		.loc 1 97 21 is_stmt 0 view .LVU4197
 9833 3f03 4989FC   		movq	%rdi, %r12
 9834 3f06 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 9835              		.loc 1 97 12 view .LVU4198
 9836 3f0a 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 9837              		.loc 1 97 11 view .LVU4199
 9838 3f0e 490FA3FE 		btq	%rdi, %r14
 9839 3f12 735C     		jnc	.L742
  97:sieve_extend.c ****     return index;
 9840              		.loc 1 97 58 is_stmt 1 view .LVU4200
 9841              	.LVL784:
  97:sieve_extend.c ****     return index;
 9842              		.loc 1 97 63 is_stmt 0 view .LVU4201
 9843 3f14 488D7B04 		leaq	4(%rbx), %rdi
 9844              	.LVL785:
  97:sieve_extend.c ****     return index;
 9845              		.loc 1 97 11 is_stmt 1 view .LVU4202
  97:sieve_extend.c ****     return index;
 9846              		.loc 1 97 21 is_stmt 0 view .LVU4203
 9847 3f18 4889F8   		movq	%rdi, %rax
 9848 3f1b 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 9849              		.loc 1 97 12 view .LVU4204
 9850 3f1f 498B14C7 		movq	(%r15,%rax,8), %rdx
  97:sieve_extend.c ****     return index;
 9851              		.loc 1 97 11 view .LVU4205
 9852 3f23 480FA3FA 		btq	%rdi, %rdx
 9853 3f27 7347     		jnc	.L742
  97:sieve_extend.c ****     return index;
 9854              		.loc 1 97 58 is_stmt 1 view .LVU4206
 9855              	.LVL786:
  97:sieve_extend.c ****     return index;
 9856              		.loc 1 97 63 is_stmt 0 view .LVU4207
 9857 3f29 488D7B05 		leaq	5(%rbx), %rdi
 9858              	.LVL787:
  97:sieve_extend.c ****     return index;
 9859              		.loc 1 97 11 is_stmt 1 view .LVU4208
  97:sieve_extend.c ****     return index;
 9860              		.loc 1 97 21 is_stmt 0 view .LVU4209
 9861 3f2d 4889FE   		movq	%rdi, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 285


 9862 3f30 48C1EE06 		shrq	$6, %rsi
  97:sieve_extend.c ****     return index;
 9863              		.loc 1 97 12 view .LVU4210
 9864 3f34 4D8B2CF7 		movq	(%r15,%rsi,8), %r13
  97:sieve_extend.c ****     return index;
 9865              		.loc 1 97 11 view .LVU4211
 9866 3f38 490FA3FD 		btq	%rdi, %r13
 9867 3f3c 7332     		jnc	.L742
  97:sieve_extend.c ****     return index;
 9868              		.loc 1 97 58 is_stmt 1 view .LVU4212
 9869              	.LVL788:
  97:sieve_extend.c ****     return index;
 9870              		.loc 1 97 63 is_stmt 0 view .LVU4213
 9871 3f3e 488D7B06 		leaq	6(%rbx), %rdi
 9872              	.LVL789:
  97:sieve_extend.c ****     return index;
 9873              		.loc 1 97 11 is_stmt 1 view .LVU4214
  97:sieve_extend.c ****     return index;
 9874              		.loc 1 97 21 is_stmt 0 view .LVU4215
 9875 3f42 4989FC   		movq	%rdi, %r12
 9876 3f45 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 9877              		.loc 1 97 12 view .LVU4216
 9878 3f49 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 9879              		.loc 1 97 11 view .LVU4217
 9880 3f4d 490FA3FE 		btq	%rdi, %r14
 9881 3f51 731D     		jnc	.L742
  97:sieve_extend.c ****     return index;
 9882              		.loc 1 97 58 is_stmt 1 view .LVU4218
 9883              	.LVL790:
  97:sieve_extend.c ****     return index;
 9884              		.loc 1 97 63 is_stmt 0 view .LVU4219
 9885 3f53 488D7B07 		leaq	7(%rbx), %rdi
 9886              	.LVL791:
  97:sieve_extend.c ****     return index;
 9887              		.loc 1 97 11 is_stmt 1 view .LVU4220
  97:sieve_extend.c ****     return index;
 9888              		.loc 1 97 21 is_stmt 0 view .LVU4221
 9889 3f57 4889FB   		movq	%rdi, %rbx
 9890 3f5a 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 9891              		.loc 1 97 12 view .LVU4222
 9892 3f5e 498B04DF 		movq	(%r15,%rbx,8), %rax
  97:sieve_extend.c ****     return index;
 9893              		.loc 1 97 11 view .LVU4223
 9894 3f62 480FA3F8 		btq	%rdi, %rax
 9895 3f66 0F824AFF 		jc	.L743
 9895      FFFF
 9896              	.LVL792:
 9897 3f6c 0F1F4000 		.p2align 4,,10
 9898              		.p2align 3
 9899              	.L742:
  98:sieve_extend.c ****     
 9900              		.loc 1 98 5 is_stmt 1 view .LVU4224
  98:sieve_extend.c ****     
 9901              		.loc 1 98 5 is_stmt 0 view .LVU4225
GAS LISTING /tmp/ccmX4xFB.s 			page 286


 9902              	.LBE628:
 9903              	.LBE627:
 715:sieve_extend.c ****         step  = prime * 2 + 1;
 9904              		.loc 1 715 9 is_stmt 1 view .LVU4226
 9905 3f70 4C8D343F 		leaq	(%rdi,%rdi), %r14
 9906              	.LVL793:
 716:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9907              		.loc 1 716 9 view .LVU4227
 715:sieve_extend.c ****         step  = prime * 2 + 1;
 9908              		.loc 1 715 35 is_stmt 0 view .LVU4228
 9909 3f74 488D7701 		leaq	1(%rdi), %rsi
 716:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9910              		.loc 1 716 15 view .LVU4229
 9911 3f78 4D8D6601 		leaq	1(%r14), %r12
 9912              	.LVL794:
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 9913              		.loc 1 717 9 is_stmt 1 view .LVU4230
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 9914              		.loc 1 717 12 is_stmt 0 view .LVU4231
 9915 3f7c 4839F5   		cmpq	%rsi, %rbp
 9916 3f7f 0F83830B 		jnb	.L744
 9916      0000
 715:sieve_extend.c ****         step  = prime * 2 + 1;
 9917              		.loc 1 715 15 view .LVU4232
 9918 3f85 4C0FAFF6 		imulq	%rsi, %r14
 9919              	.LVL795:
 9920              	.L745:
 718:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 9921              		.loc 1 718 9 is_stmt 1 view .LVU4233
 9922              	.LBB629:
 9923              	.LBB630:
 265:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 9924              		.loc 1 265 15 is_stmt 0 view .LVU4234
 9925 3f89 4989CD   		movq	%rcx, %r13
 266:sieve_extend.c ****     
 9926              		.loc 1 266 15 view .LVU4235
 9927 3f8c 4C89F3   		movq	%r14, %rbx
 265:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 9928              		.loc 1 265 15 view .LVU4236
 9929 3f8f 49C1ED06 		shrq	$6, %r13
 9930              	.LVL796:
 266:sieve_extend.c ****     
 9931              		.loc 1 266 5 is_stmt 1 view .LVU4237
 266:sieve_extend.c ****     
 9932              		.loc 1 266 15 is_stmt 0 view .LVU4238
 9933 3f93 48C1EB06 		shrq	$6, %rbx
 9934              	.LBE630:
 9935              	.LBE629:
 718:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 9936              		.loc 1 718 12 view .LVU4239
 9937 3f97 4D39F0   		cmpq	%r14, %r8
 9938 3f9a 0F824809 		jb	.L1567
 9938      0000
 9939              	.LVL797:
 9940              		.p2align 4,,10
 9941              		.p2align 3
 9942              	.L761:
GAS LISTING /tmp/ccmX4xFB.s 			page 287


 9943              	.LBB634:
 9944              	.LBB632:
 268:sieve_extend.c ****         if (index1_word == index2_word) {
 9945              		.loc 1 268 5 is_stmt 1 view .LVU4240
 269:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 9946              		.loc 1 269 9 view .LVU4241
 269:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 9947              		.loc 1 269 12 is_stmt 0 view .LVU4242
 9948 3fa0 4939DD   		cmpq	%rbx, %r13
 9949 3fa3 0F84DF01 		je	.L1568
 9949      0000
 9950              	.L750:
 286:sieve_extend.c ****             while (index1 <= range_stop) {
 9951              		.loc 1 286 9 is_stmt 1 view .LVU4243
 286:sieve_extend.c ****             while (index1 <= range_stop) {
 9952              		.loc 1 286 12 is_stmt 0 view .LVU4244
 9953 3fa9 4D39F0   		cmpq	%r14, %r8
 9954 3fac 0F827E03 		jb	.L1569
 9954      0000
 9955              	.L753:
 294:sieve_extend.c ****             while (index2 <= range_stop) {
 9956              		.loc 1 294 9 is_stmt 1 view .LVU4245
 294:sieve_extend.c ****             while (index2 <= range_stop) {
 9957              		.loc 1 294 12 is_stmt 0 view .LVU4246
 9958 3fb2 4939C8   		cmpq	%rcx, %r8
 9959 3fb5 0F82250A 		jb	.L756
 9959      0000
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 9960              		.loc 1 302 15 is_stmt 1 view .LVU4247
 9961 3fbb 4C39EB   		cmpq	%r13, %rbx
 9962 3fbe 0F86CC00 		jbe	.L758
 9962      0000
 9963              	.L757:
 303:sieve_extend.c ****             index1 += step1;
 9964              		.loc 1 303 13 view .LVU4248
 303:sieve_extend.c ****             index1 += step1;
 9965              		.loc 1 303 38 is_stmt 0 view .LVU4249
 9966 3fc4 C4C2F1F7 		shlx	%rcx, %r11, %rax
 9966      C3
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 9967              		.loc 1 304 20 view .LVU4250
 9968 3fc9 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 9969              		.loc 1 303 35 view .LVU4251
 9970 3fcc 4B0904EF 		orq	%rax, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 9971              		.loc 1 304 13 is_stmt 1 view .LVU4252
 305:sieve_extend.c ****         }
 9972              		.loc 1 305 13 view .LVU4253
 305:sieve_extend.c ****         }
 9973              		.loc 1 305 25 is_stmt 0 view .LVU4254
 9974 3fd0 4989CD   		movq	%rcx, %r13
 9975              	.LVL798:
 305:sieve_extend.c ****         }
 9976              		.loc 1 305 25 view .LVU4255
 9977 3fd3 49C1ED06 		shrq	$6, %r13
 9978              	.LVL799:
GAS LISTING /tmp/ccmX4xFB.s 			page 288


 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 9979              		.loc 1 302 15 is_stmt 1 view .LVU4256
 9980 3fd7 4939DD   		cmpq	%rbx, %r13
 9981 3fda 0F83B000 		jnb	.L758
 9981      0000
 303:sieve_extend.c ****             index1 += step1;
 9982              		.loc 1 303 13 view .LVU4257
 303:sieve_extend.c ****             index1 += step1;
 9983              		.loc 1 303 38 is_stmt 0 view .LVU4258
 9984 3fe0 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 9984      FB
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 9985              		.loc 1 304 20 view .LVU4259
 9986 3fe5 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 9987              		.loc 1 303 35 view .LVU4260
 9988 3fe8 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 9989              		.loc 1 304 13 is_stmt 1 view .LVU4261
 305:sieve_extend.c ****         }
 9990              		.loc 1 305 13 view .LVU4262
 305:sieve_extend.c ****         }
 9991              		.loc 1 305 25 is_stmt 0 view .LVU4263
 9992 3fec 4989CD   		movq	%rcx, %r13
 9993              	.LVL800:
 305:sieve_extend.c ****         }
 9994              		.loc 1 305 25 view .LVU4264
 9995 3fef 49C1ED06 		shrq	$6, %r13
 9996              	.LVL801:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 9997              		.loc 1 302 15 is_stmt 1 view .LVU4265
 9998 3ff3 4939DD   		cmpq	%rbx, %r13
 9999 3ff6 0F839400 		jnb	.L758
 9999      0000
 303:sieve_extend.c ****             index1 += step1;
 10000              		.loc 1 303 13 view .LVU4266
 303:sieve_extend.c ****             index1 += step1;
 10001              		.loc 1 303 38 is_stmt 0 view .LVU4267
 10002 3ffc C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10002      D3
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10003              		.loc 1 304 20 view .LVU4268
 10004 4001 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10005              		.loc 1 303 35 view .LVU4269
 10006 4004 4B0914EF 		orq	%rdx, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10007              		.loc 1 304 13 is_stmt 1 view .LVU4270
 305:sieve_extend.c ****         }
 10008              		.loc 1 305 13 view .LVU4271
 305:sieve_extend.c ****         }
 10009              		.loc 1 305 25 is_stmt 0 view .LVU4272
 10010 4008 4989CD   		movq	%rcx, %r13
 10011              	.LVL802:
 305:sieve_extend.c ****         }
 10012              		.loc 1 305 25 view .LVU4273
 10013 400b 49C1ED06 		shrq	$6, %r13
GAS LISTING /tmp/ccmX4xFB.s 			page 289


 10014              	.LVL803:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 10015              		.loc 1 302 15 is_stmt 1 view .LVU4274
 10016 400f 4939DD   		cmpq	%rbx, %r13
 10017 4012 737C     		jnb	.L758
 303:sieve_extend.c ****             index1 += step1;
 10018              		.loc 1 303 13 view .LVU4275
 303:sieve_extend.c ****             index1 += step1;
 10019              		.loc 1 303 38 is_stmt 0 view .LVU4276
 10020 4014 C4C2F1F7 		shlx	%rcx, %r11, %rax
 10020      C3
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10021              		.loc 1 304 20 view .LVU4277
 10022 4019 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10023              		.loc 1 303 35 view .LVU4278
 10024 401c 4B0904EF 		orq	%rax, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10025              		.loc 1 304 13 is_stmt 1 view .LVU4279
 305:sieve_extend.c ****         }
 10026              		.loc 1 305 13 view .LVU4280
 305:sieve_extend.c ****         }
 10027              		.loc 1 305 25 is_stmt 0 view .LVU4281
 10028 4020 4989CD   		movq	%rcx, %r13
 10029              	.LVL804:
 305:sieve_extend.c ****         }
 10030              		.loc 1 305 25 view .LVU4282
 10031 4023 49C1ED06 		shrq	$6, %r13
 10032              	.LVL805:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 10033              		.loc 1 302 15 is_stmt 1 view .LVU4283
 10034 4027 4939DD   		cmpq	%rbx, %r13
 10035 402a 7364     		jnb	.L758
 303:sieve_extend.c ****             index1 += step1;
 10036              		.loc 1 303 13 view .LVU4284
 303:sieve_extend.c ****             index1 += step1;
 10037              		.loc 1 303 38 is_stmt 0 view .LVU4285
 10038 402c C4C2F1F7 		shlx	%rcx, %r11, %rdi
 10038      FB
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10039              		.loc 1 304 20 view .LVU4286
 10040 4031 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10041              		.loc 1 303 35 view .LVU4287
 10042 4034 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10043              		.loc 1 304 13 is_stmt 1 view .LVU4288
 305:sieve_extend.c ****         }
 10044              		.loc 1 305 13 view .LVU4289
 305:sieve_extend.c ****         }
 10045              		.loc 1 305 25 is_stmt 0 view .LVU4290
 10046 4038 4989CD   		movq	%rcx, %r13
 10047              	.LVL806:
 305:sieve_extend.c ****         }
 10048              		.loc 1 305 25 view .LVU4291
 10049 403b 49C1ED06 		shrq	$6, %r13
 10050              	.LVL807:
GAS LISTING /tmp/ccmX4xFB.s 			page 290


 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 10051              		.loc 1 302 15 is_stmt 1 view .LVU4292
 10052 403f 4939DD   		cmpq	%rbx, %r13
 10053 4042 734C     		jnb	.L758
 303:sieve_extend.c ****             index1 += step1;
 10054              		.loc 1 303 13 view .LVU4293
 303:sieve_extend.c ****             index1 += step1;
 10055              		.loc 1 303 38 is_stmt 0 view .LVU4294
 10056 4044 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10056      D3
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10057              		.loc 1 304 20 view .LVU4295
 10058 4049 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10059              		.loc 1 303 35 view .LVU4296
 10060 404c 4B0914EF 		orq	%rdx, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10061              		.loc 1 304 13 is_stmt 1 view .LVU4297
 305:sieve_extend.c ****         }
 10062              		.loc 1 305 13 view .LVU4298
 305:sieve_extend.c ****         }
 10063              		.loc 1 305 25 is_stmt 0 view .LVU4299
 10064 4050 4989CD   		movq	%rcx, %r13
 10065              	.LVL808:
 305:sieve_extend.c ****         }
 10066              		.loc 1 305 25 view .LVU4300
 10067 4053 49C1ED06 		shrq	$6, %r13
 10068              	.LVL809:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 10069              		.loc 1 302 15 is_stmt 1 view .LVU4301
 10070 4057 4939DD   		cmpq	%rbx, %r13
 10071 405a 7334     		jnb	.L758
 303:sieve_extend.c ****             index1 += step1;
 10072              		.loc 1 303 13 view .LVU4302
 303:sieve_extend.c ****             index1 += step1;
 10073              		.loc 1 303 38 is_stmt 0 view .LVU4303
 10074 405c C4C2F1F7 		shlx	%rcx, %r11, %rax
 10074      C3
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10075              		.loc 1 304 20 view .LVU4304
 10076 4061 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10077              		.loc 1 303 35 view .LVU4305
 10078 4064 4B0904EF 		orq	%rax, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10079              		.loc 1 304 13 is_stmt 1 view .LVU4306
 305:sieve_extend.c ****         }
 10080              		.loc 1 305 13 view .LVU4307
 305:sieve_extend.c ****         }
 10081              		.loc 1 305 25 is_stmt 0 view .LVU4308
 10082 4068 4989CD   		movq	%rcx, %r13
 10083              	.LVL810:
 305:sieve_extend.c ****         }
 10084              		.loc 1 305 25 view .LVU4309
 10085 406b 49C1ED06 		shrq	$6, %r13
 10086              	.LVL811:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
GAS LISTING /tmp/ccmX4xFB.s 			page 291


 10087              		.loc 1 302 15 is_stmt 1 view .LVU4310
 10088 406f 4939DD   		cmpq	%rbx, %r13
 10089 4072 731C     		jnb	.L758
 303:sieve_extend.c ****             index1 += step1;
 10090              		.loc 1 303 13 view .LVU4311
 303:sieve_extend.c ****             index1 += step1;
 10091              		.loc 1 303 38 is_stmt 0 view .LVU4312
 10092 4074 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 10092      FB
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10093              		.loc 1 304 20 view .LVU4313
 10094 4079 4C01D1   		addq	%r10, %rcx
 303:sieve_extend.c ****             index1 += step1;
 10095              		.loc 1 303 35 view .LVU4314
 10096 407c 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 304:sieve_extend.c ****             index1_word = wordindex(index1);
 10097              		.loc 1 304 13 is_stmt 1 view .LVU4315
 305:sieve_extend.c ****         }
 10098              		.loc 1 305 13 view .LVU4316
 305:sieve_extend.c ****         }
 10099              		.loc 1 305 25 is_stmt 0 view .LVU4317
 10100 4080 4989CD   		movq	%rcx, %r13
 10101              	.LVL812:
 305:sieve_extend.c ****         }
 10102              		.loc 1 305 25 view .LVU4318
 10103 4083 49C1ED06 		shrq	$6, %r13
 10104              	.LVL813:
 302:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 10105              		.loc 1 302 15 is_stmt 1 view .LVU4319
 10106 4087 4939DD   		cmpq	%rbx, %r13
 10107 408a 0F8234FF 		jb	.L757
 10107      FFFF
 10108              		.p2align 4,,10
 10109              		.p2align 3
 10110              	.L758:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10111              		.loc 1 308 15 view .LVU4320
 10112 4090 4C39EB   		cmpq	%r13, %rbx
 10113 4093 0F8307FF 		jnb	.L761
 10113      FFFF
 10114              	.L760:
 309:sieve_extend.c ****             index2 += step2;
 10115              		.loc 1 309 13 view .LVU4321
 309:sieve_extend.c ****             index2 += step2;
 10116              		.loc 1 309 38 is_stmt 0 view .LVU4322
 10117 4099 C4C289F7 		shlx	%r14, %r11, %rdx
 10117      D3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10118              		.loc 1 310 20 view .LVU4323
 10119 409e 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10120              		.loc 1 309 35 view .LVU4324
 10121 40a1 490914DF 		orq	%rdx, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10122              		.loc 1 310 13 is_stmt 1 view .LVU4325
 311:sieve_extend.c ****         }
 10123              		.loc 1 311 13 view .LVU4326
GAS LISTING /tmp/ccmX4xFB.s 			page 292


 311:sieve_extend.c ****         }
 10124              		.loc 1 311 25 is_stmt 0 view .LVU4327
 10125 40a5 4C89F3   		movq	%r14, %rbx
 10126              	.LVL814:
 311:sieve_extend.c ****         }
 10127              		.loc 1 311 25 view .LVU4328
 10128 40a8 48C1EB06 		shrq	$6, %rbx
 10129              	.LVL815:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10130              		.loc 1 308 15 is_stmt 1 view .LVU4329
 10131 40ac 4C39EB   		cmpq	%r13, %rbx
 10132 40af 0F83EBFE 		jnb	.L761
 10132      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10133              		.loc 1 309 13 view .LVU4330
 309:sieve_extend.c ****             index2 += step2;
 10134              		.loc 1 309 38 is_stmt 0 view .LVU4331
 10135 40b5 C4C289F7 		shlx	%r14, %r11, %rax
 10135      C3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10136              		.loc 1 310 20 view .LVU4332
 10137 40ba 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10138              		.loc 1 309 35 view .LVU4333
 10139 40bd 490904DF 		orq	%rax, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10140              		.loc 1 310 13 is_stmt 1 view .LVU4334
 311:sieve_extend.c ****         }
 10141              		.loc 1 311 13 view .LVU4335
 311:sieve_extend.c ****         }
 10142              		.loc 1 311 25 is_stmt 0 view .LVU4336
 10143 40c1 4C89F3   		movq	%r14, %rbx
 10144              	.LVL816:
 311:sieve_extend.c ****         }
 10145              		.loc 1 311 25 view .LVU4337
 10146 40c4 48C1EB06 		shrq	$6, %rbx
 10147              	.LVL817:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10148              		.loc 1 308 15 is_stmt 1 view .LVU4338
 10149 40c8 4C39EB   		cmpq	%r13, %rbx
 10150 40cb 0F83CFFE 		jnb	.L761
 10150      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10151              		.loc 1 309 13 view .LVU4339
 309:sieve_extend.c ****             index2 += step2;
 10152              		.loc 1 309 38 is_stmt 0 view .LVU4340
 10153 40d1 C4C289F7 		shlx	%r14, %r11, %rdi
 10153      FB
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10154              		.loc 1 310 20 view .LVU4341
 10155 40d6 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10156              		.loc 1 309 35 view .LVU4342
 10157 40d9 49093CDF 		orq	%rdi, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10158              		.loc 1 310 13 is_stmt 1 view .LVU4343
 311:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 293


 10159              		.loc 1 311 13 view .LVU4344
 311:sieve_extend.c ****         }
 10160              		.loc 1 311 25 is_stmt 0 view .LVU4345
 10161 40dd 4C89F3   		movq	%r14, %rbx
 10162              	.LVL818:
 311:sieve_extend.c ****         }
 10163              		.loc 1 311 25 view .LVU4346
 10164 40e0 48C1EB06 		shrq	$6, %rbx
 10165              	.LVL819:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10166              		.loc 1 308 15 is_stmt 1 view .LVU4347
 10167 40e4 4C39EB   		cmpq	%r13, %rbx
 10168 40e7 0F83B3FE 		jnb	.L761
 10168      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10169              		.loc 1 309 13 view .LVU4348
 309:sieve_extend.c ****             index2 += step2;
 10170              		.loc 1 309 38 is_stmt 0 view .LVU4349
 10171 40ed C4C289F7 		shlx	%r14, %r11, %rdx
 10171      D3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10172              		.loc 1 310 20 view .LVU4350
 10173 40f2 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10174              		.loc 1 309 35 view .LVU4351
 10175 40f5 490914DF 		orq	%rdx, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10176              		.loc 1 310 13 is_stmt 1 view .LVU4352
 311:sieve_extend.c ****         }
 10177              		.loc 1 311 13 view .LVU4353
 311:sieve_extend.c ****         }
 10178              		.loc 1 311 25 is_stmt 0 view .LVU4354
 10179 40f9 4C89F3   		movq	%r14, %rbx
 10180              	.LVL820:
 311:sieve_extend.c ****         }
 10181              		.loc 1 311 25 view .LVU4355
 10182 40fc 48C1EB06 		shrq	$6, %rbx
 10183              	.LVL821:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10184              		.loc 1 308 15 is_stmt 1 view .LVU4356
 10185 4100 4C39EB   		cmpq	%r13, %rbx
 10186 4103 0F8397FE 		jnb	.L761
 10186      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10187              		.loc 1 309 13 view .LVU4357
 309:sieve_extend.c ****             index2 += step2;
 10188              		.loc 1 309 38 is_stmt 0 view .LVU4358
 10189 4109 C4C289F7 		shlx	%r14, %r11, %rax
 10189      C3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10190              		.loc 1 310 20 view .LVU4359
 10191 410e 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10192              		.loc 1 309 35 view .LVU4360
 10193 4111 490904DF 		orq	%rax, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10194              		.loc 1 310 13 is_stmt 1 view .LVU4361
GAS LISTING /tmp/ccmX4xFB.s 			page 294


 311:sieve_extend.c ****         }
 10195              		.loc 1 311 13 view .LVU4362
 311:sieve_extend.c ****         }
 10196              		.loc 1 311 25 is_stmt 0 view .LVU4363
 10197 4115 4C89F3   		movq	%r14, %rbx
 10198              	.LVL822:
 311:sieve_extend.c ****         }
 10199              		.loc 1 311 25 view .LVU4364
 10200 4118 48C1EB06 		shrq	$6, %rbx
 10201              	.LVL823:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10202              		.loc 1 308 15 is_stmt 1 view .LVU4365
 10203 411c 4C39EB   		cmpq	%r13, %rbx
 10204 411f 0F837BFE 		jnb	.L761
 10204      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10205              		.loc 1 309 13 view .LVU4366
 309:sieve_extend.c ****             index2 += step2;
 10206              		.loc 1 309 38 is_stmt 0 view .LVU4367
 10207 4125 C4C289F7 		shlx	%r14, %r11, %rdi
 10207      FB
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10208              		.loc 1 310 20 view .LVU4368
 10209 412a 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10210              		.loc 1 309 35 view .LVU4369
 10211 412d 49093CDF 		orq	%rdi, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10212              		.loc 1 310 13 is_stmt 1 view .LVU4370
 311:sieve_extend.c ****         }
 10213              		.loc 1 311 13 view .LVU4371
 311:sieve_extend.c ****         }
 10214              		.loc 1 311 25 is_stmt 0 view .LVU4372
 10215 4131 4C89F3   		movq	%r14, %rbx
 10216              	.LVL824:
 311:sieve_extend.c ****         }
 10217              		.loc 1 311 25 view .LVU4373
 10218 4134 48C1EB06 		shrq	$6, %rbx
 10219              	.LVL825:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10220              		.loc 1 308 15 is_stmt 1 view .LVU4374
 10221 4138 4C39EB   		cmpq	%r13, %rbx
 10222 413b 0F835FFE 		jnb	.L761
 10222      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10223              		.loc 1 309 13 view .LVU4375
 309:sieve_extend.c ****             index2 += step2;
 10224              		.loc 1 309 38 is_stmt 0 view .LVU4376
 10225 4141 C4C289F7 		shlx	%r14, %r11, %rdx
 10225      D3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10226              		.loc 1 310 20 view .LVU4377
 10227 4146 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10228              		.loc 1 309 35 view .LVU4378
 10229 4149 490914DF 		orq	%rdx, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
GAS LISTING /tmp/ccmX4xFB.s 			page 295


 10230              		.loc 1 310 13 is_stmt 1 view .LVU4379
 311:sieve_extend.c ****         }
 10231              		.loc 1 311 13 view .LVU4380
 311:sieve_extend.c ****         }
 10232              		.loc 1 311 25 is_stmt 0 view .LVU4381
 10233 414d 4C89F3   		movq	%r14, %rbx
 10234              	.LVL826:
 311:sieve_extend.c ****         }
 10235              		.loc 1 311 25 view .LVU4382
 10236 4150 48C1EB06 		shrq	$6, %rbx
 10237              	.LVL827:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10238              		.loc 1 308 15 is_stmt 1 view .LVU4383
 10239 4154 4C39EB   		cmpq	%r13, %rbx
 10240 4157 0F8343FE 		jnb	.L761
 10240      FFFF
 309:sieve_extend.c ****             index2 += step2;
 10241              		.loc 1 309 13 view .LVU4384
 309:sieve_extend.c ****             index2 += step2;
 10242              		.loc 1 309 38 is_stmt 0 view .LVU4385
 10243 415d C4C289F7 		shlx	%r14, %r11, %rax
 10243      C3
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10244              		.loc 1 310 20 view .LVU4386
 10245 4162 4D01E6   		addq	%r12, %r14
 309:sieve_extend.c ****             index2 += step2;
 10246              		.loc 1 309 35 view .LVU4387
 10247 4165 490904DF 		orq	%rax, (%r15,%rbx,8)
 310:sieve_extend.c ****             index2_word = wordindex(index2);
 10248              		.loc 1 310 13 is_stmt 1 view .LVU4388
 311:sieve_extend.c ****         }
 10249              		.loc 1 311 13 view .LVU4389
 311:sieve_extend.c ****         }
 10250              		.loc 1 311 25 is_stmt 0 view .LVU4390
 10251 4169 4C89F3   		movq	%r14, %rbx
 10252              	.LVL828:
 311:sieve_extend.c ****         }
 10253              		.loc 1 311 25 view .LVU4391
 10254 416c 48C1EB06 		shrq	$6, %rbx
 10255              	.LVL829:
 308:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 10256              		.loc 1 308 15 is_stmt 1 view .LVU4392
 10257 4170 4C39EB   		cmpq	%r13, %rbx
 10258 4173 0F8220FF 		jb	.L760
 10258      FFFF
 268:sieve_extend.c ****         if (index1_word == index2_word) {
 10259              		.loc 1 268 5 view .LVU4393
 269:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 10260              		.loc 1 269 9 view .LVU4394
 269:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 10261              		.loc 1 269 12 is_stmt 0 view .LVU4395
 10262 4179 4939DD   		cmpq	%rbx, %r13
 10263 417c 0F8527FE 		jne	.L750
 10263      FFFF
 10264              		.p2align 4,,10
 10265 4182 660F1F44 		.p2align 3
 10265      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 296


 10266              	.L1568:
 10267              	.LBB631:
 270:sieve_extend.c ****             counter_t index_word = index1_word;
 10268              		.loc 1 270 23 view .LVU4396
 10269 4188 31C0     		xorl	%eax, %eax
 10270              	.LVL830:
 10271              	.L751:
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10272              		.loc 1 272 13 is_stmt 1 view .LVU4397
 273:sieve_extend.c ****                 index1 += step1;
 10273              		.loc 1 273 17 view .LVU4398
 273:sieve_extend.c ****                 index1 += step1;
 10274              		.loc 1 273 25 is_stmt 0 view .LVU4399
 10275 418a C4C2F1F7 		shlx	%rcx, %r11, %rbx
 10275      DB
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10276              		.loc 1 274 24 view .LVU4400
 10277 418f 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10278              		.loc 1 275 29 view .LVU4401
 10279 4192 4889CF   		movq	%rcx, %rdi
 10280 4195 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10281              		.loc 1 273 22 view .LVU4402
 10282 4199 4809D8   		orq	%rbx, %rax
 10283              	.LVL831:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10284              		.loc 1 274 17 is_stmt 1 view .LVU4403
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10285              		.loc 1 275 17 view .LVU4404
 276:sieve_extend.c ****             do {
 10286              		.loc 1 276 21 view .LVU4405
 276:sieve_extend.c ****             do {
 10287              		.loc 1 276 13 is_stmt 0 view .LVU4406
 10288 419c 4939FD   		cmpq	%rdi, %r13
 10289 419f 0F85AB00 		jne	.L752
 10289      0000
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10290              		.loc 1 272 13 is_stmt 1 view .LVU4407
 273:sieve_extend.c ****                 index1 += step1;
 10291              		.loc 1 273 17 view .LVU4408
 273:sieve_extend.c ****                 index1 += step1;
 10292              		.loc 1 273 25 is_stmt 0 view .LVU4409
 10293 41a5 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10293      D3
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10294              		.loc 1 274 24 view .LVU4410
 10295 41aa 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10296              		.loc 1 275 29 view .LVU4411
 10297 41ad 4889CF   		movq	%rcx, %rdi
 10298              	.LVL832:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10299              		.loc 1 275 29 view .LVU4412
 10300 41b0 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10301              		.loc 1 273 22 view .LVU4413
GAS LISTING /tmp/ccmX4xFB.s 			page 297


 10302 41b4 4809D0   		orq	%rdx, %rax
 10303              	.LVL833:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10304              		.loc 1 274 17 is_stmt 1 view .LVU4414
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10305              		.loc 1 275 17 view .LVU4415
 276:sieve_extend.c ****             do {
 10306              		.loc 1 276 21 view .LVU4416
 276:sieve_extend.c ****             do {
 10307              		.loc 1 276 13 is_stmt 0 view .LVU4417
 10308 41b7 4939FD   		cmpq	%rdi, %r13
 10309 41ba 0F859000 		jne	.L752
 10309      0000
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10310              		.loc 1 272 13 is_stmt 1 view .LVU4418
 273:sieve_extend.c ****                 index1 += step1;
 10311              		.loc 1 273 17 view .LVU4419
 273:sieve_extend.c ****                 index1 += step1;
 10312              		.loc 1 273 25 is_stmt 0 view .LVU4420
 10313 41c0 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 10313      FB
 10314              	.LVL834:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10315              		.loc 1 274 24 view .LVU4421
 10316 41c5 4C01D1   		addq	%r10, %rcx
 10317              	.LVL835:
 273:sieve_extend.c ****                 index1 += step1;
 10318              		.loc 1 273 22 view .LVU4422
 10319 41c8 4809F8   		orq	%rdi, %rax
 10320              	.LVL836:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10321              		.loc 1 274 17 is_stmt 1 view .LVU4423
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10322              		.loc 1 275 17 view .LVU4424
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10323              		.loc 1 275 29 is_stmt 0 view .LVU4425
 10324 41cb 4889CF   		movq	%rcx, %rdi
 10325 41ce 48C1EF06 		shrq	$6, %rdi
 10326              	.LVL837:
 276:sieve_extend.c ****             do {
 10327              		.loc 1 276 21 is_stmt 1 view .LVU4426
 276:sieve_extend.c ****             do {
 10328              		.loc 1 276 13 is_stmt 0 view .LVU4427
 10329 41d2 4939FD   		cmpq	%rdi, %r13
 10330 41d5 7579     		jne	.L752
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10331              		.loc 1 272 13 is_stmt 1 view .LVU4428
 273:sieve_extend.c ****                 index1 += step1;
 10332              		.loc 1 273 17 view .LVU4429
 273:sieve_extend.c ****                 index1 += step1;
 10333              		.loc 1 273 25 is_stmt 0 view .LVU4430
 10334 41d7 C4C2F1F7 		shlx	%rcx, %r11, %rbx
 10334      DB
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10335              		.loc 1 274 24 view .LVU4431
 10336 41dc 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
GAS LISTING /tmp/ccmX4xFB.s 			page 298


 10337              		.loc 1 275 29 view .LVU4432
 10338 41df 4889CF   		movq	%rcx, %rdi
 10339              	.LVL838:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10340              		.loc 1 275 29 view .LVU4433
 10341 41e2 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10342              		.loc 1 273 22 view .LVU4434
 10343 41e6 4809D8   		orq	%rbx, %rax
 10344              	.LVL839:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10345              		.loc 1 274 17 is_stmt 1 view .LVU4435
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10346              		.loc 1 275 17 view .LVU4436
 276:sieve_extend.c ****             do {
 10347              		.loc 1 276 21 view .LVU4437
 276:sieve_extend.c ****             do {
 10348              		.loc 1 276 13 is_stmt 0 view .LVU4438
 10349 41e9 4939FD   		cmpq	%rdi, %r13
 10350 41ec 7562     		jne	.L752
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10351              		.loc 1 272 13 is_stmt 1 view .LVU4439
 273:sieve_extend.c ****                 index1 += step1;
 10352              		.loc 1 273 17 view .LVU4440
 273:sieve_extend.c ****                 index1 += step1;
 10353              		.loc 1 273 25 is_stmt 0 view .LVU4441
 10354 41ee C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10354      D3
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10355              		.loc 1 274 24 view .LVU4442
 10356 41f3 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10357              		.loc 1 275 29 view .LVU4443
 10358 41f6 4889CF   		movq	%rcx, %rdi
 10359              	.LVL840:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10360              		.loc 1 275 29 view .LVU4444
 10361 41f9 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10362              		.loc 1 273 22 view .LVU4445
 10363 41fd 4809D0   		orq	%rdx, %rax
 10364              	.LVL841:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10365              		.loc 1 274 17 is_stmt 1 view .LVU4446
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10366              		.loc 1 275 17 view .LVU4447
 276:sieve_extend.c ****             do {
 10367              		.loc 1 276 21 view .LVU4448
 276:sieve_extend.c ****             do {
 10368              		.loc 1 276 13 is_stmt 0 view .LVU4449
 10369 4200 4939FD   		cmpq	%rdi, %r13
 10370 4203 754B     		jne	.L752
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10371              		.loc 1 272 13 is_stmt 1 view .LVU4450
 273:sieve_extend.c ****                 index1 += step1;
 10372              		.loc 1 273 17 view .LVU4451
 273:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccmX4xFB.s 			page 299


 10373              		.loc 1 273 25 is_stmt 0 view .LVU4452
 10374 4205 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 10374      FB
 10375              	.LVL842:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10376              		.loc 1 274 24 view .LVU4453
 10377 420a 4C01D1   		addq	%r10, %rcx
 10378              	.LVL843:
 273:sieve_extend.c ****                 index1 += step1;
 10379              		.loc 1 273 22 view .LVU4454
 10380 420d 4809F8   		orq	%rdi, %rax
 10381              	.LVL844:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10382              		.loc 1 274 17 is_stmt 1 view .LVU4455
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10383              		.loc 1 275 17 view .LVU4456
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10384              		.loc 1 275 29 is_stmt 0 view .LVU4457
 10385 4210 4889CF   		movq	%rcx, %rdi
 10386 4213 48C1EF06 		shrq	$6, %rdi
 10387              	.LVL845:
 276:sieve_extend.c ****             do {
 10388              		.loc 1 276 21 is_stmt 1 view .LVU4458
 276:sieve_extend.c ****             do {
 10389              		.loc 1 276 13 is_stmt 0 view .LVU4459
 10390 4217 4939FD   		cmpq	%rdi, %r13
 10391 421a 7534     		jne	.L752
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10392              		.loc 1 272 13 is_stmt 1 view .LVU4460
 273:sieve_extend.c ****                 index1 += step1;
 10393              		.loc 1 273 17 view .LVU4461
 273:sieve_extend.c ****                 index1 += step1;
 10394              		.loc 1 273 25 is_stmt 0 view .LVU4462
 10395 421c C4C2F1F7 		shlx	%rcx, %r11, %rbx
 10395      DB
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10396              		.loc 1 274 24 view .LVU4463
 10397 4221 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10398              		.loc 1 275 29 view .LVU4464
 10399 4224 4889CF   		movq	%rcx, %rdi
 10400              	.LVL846:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10401              		.loc 1 275 29 view .LVU4465
 10402 4227 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10403              		.loc 1 273 22 view .LVU4466
 10404 422b 4809D8   		orq	%rbx, %rax
 10405              	.LVL847:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10406              		.loc 1 274 17 is_stmt 1 view .LVU4467
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10407              		.loc 1 275 17 view .LVU4468
 276:sieve_extend.c ****             do {
 10408              		.loc 1 276 21 view .LVU4469
 276:sieve_extend.c ****             do {
 10409              		.loc 1 276 13 is_stmt 0 view .LVU4470
GAS LISTING /tmp/ccmX4xFB.s 			page 300


 10410 422e 4939FD   		cmpq	%rdi, %r13
 10411 4231 751D     		jne	.L752
 272:sieve_extend.c ****                 mask |= markmask(index1);
 10412              		.loc 1 272 13 is_stmt 1 view .LVU4471
 273:sieve_extend.c ****                 index1 += step1;
 10413              		.loc 1 273 17 view .LVU4472
 273:sieve_extend.c ****                 index1 += step1;
 10414              		.loc 1 273 25 is_stmt 0 view .LVU4473
 10415 4233 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10415      D3
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10416              		.loc 1 274 24 view .LVU4474
 10417 4238 4C01D1   		addq	%r10, %rcx
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10418              		.loc 1 275 29 view .LVU4475
 10419 423b 4889CF   		movq	%rcx, %rdi
 10420              	.LVL848:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10421              		.loc 1 275 29 view .LVU4476
 10422 423e 48C1EF06 		shrq	$6, %rdi
 273:sieve_extend.c ****                 index1 += step1;
 10423              		.loc 1 273 22 view .LVU4477
 10424 4242 4809D0   		orq	%rdx, %rax
 10425              	.LVL849:
 274:sieve_extend.c ****                 index1_word = wordindex(index1);
 10426              		.loc 1 274 17 is_stmt 1 view .LVU4478
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10427              		.loc 1 275 17 view .LVU4479
 276:sieve_extend.c ****             do {
 10428              		.loc 1 276 21 view .LVU4480
 276:sieve_extend.c ****             do {
 10429              		.loc 1 276 13 is_stmt 0 view .LVU4481
 10430 4245 4939FD   		cmpq	%rdi, %r13
 10431 4248 0F843CFF 		je	.L751
 10431      FFFF
 10432 424e 6690     		.p2align 4,,10
 10433              		.p2align 3
 10434              	.L752:
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10435              		.loc 1 277 13 is_stmt 1 view .LVU4482
 278:sieve_extend.c ****                 index2 += step2;
 10436              		.loc 1 278 17 view .LVU4483
 278:sieve_extend.c ****                 index2 += step2;
 10437              		.loc 1 278 25 is_stmt 0 view .LVU4484
 10438 4250 C4C289F7 		shlx	%r14, %r11, %rbx
 10438      DB
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10439              		.loc 1 279 24 view .LVU4485
 10440 4255 4D01E6   		addq	%r12, %r14
 278:sieve_extend.c ****                 index2 += step2;
 10441              		.loc 1 278 22 view .LVU4486
 10442 4258 4809D8   		orq	%rbx, %rax
 10443              	.LVL850:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10444              		.loc 1 279 17 is_stmt 1 view .LVU4487
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10445              		.loc 1 280 17 view .LVU4488
GAS LISTING /tmp/ccmX4xFB.s 			page 301


 280:sieve_extend.c ****             } while (index2_word == index_word);
 10446              		.loc 1 280 29 is_stmt 0 view .LVU4489
 10447 425b 4C89F3   		movq	%r14, %rbx
 10448 425e 48C1EB06 		shrq	$6, %rbx
 10449              	.LVL851:
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10450              		.loc 1 281 21 is_stmt 1 view .LVU4490
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10451              		.loc 1 281 13 is_stmt 0 view .LVU4491
 10452 4262 4939DD   		cmpq	%rbx, %r13
 10453 4265 0F85AD00 		jne	.L1342
 10453      0000
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10454              		.loc 1 277 13 is_stmt 1 view .LVU4492
 278:sieve_extend.c ****                 index2 += step2;
 10455              		.loc 1 278 17 view .LVU4493
 278:sieve_extend.c ****                 index2 += step2;
 10456              		.loc 1 278 25 is_stmt 0 view .LVU4494
 10457 426b C4C289F7 		shlx	%r14, %r11, %rdx
 10457      D3
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10458              		.loc 1 279 24 view .LVU4495
 10459 4270 4D01E6   		addq	%r12, %r14
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10460              		.loc 1 280 29 view .LVU4496
 10461 4273 4C89F3   		movq	%r14, %rbx
 10462              	.LVL852:
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10463              		.loc 1 280 29 view .LVU4497
 10464 4276 48C1EB06 		shrq	$6, %rbx
 278:sieve_extend.c ****                 index2 += step2;
 10465              		.loc 1 278 22 view .LVU4498
 10466 427a 4809D0   		orq	%rdx, %rax
 10467              	.LVL853:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10468              		.loc 1 279 17 is_stmt 1 view .LVU4499
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10469              		.loc 1 280 17 view .LVU4500
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10470              		.loc 1 281 21 view .LVU4501
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10471              		.loc 1 281 13 is_stmt 0 view .LVU4502
 10472 427d 4939DD   		cmpq	%rbx, %r13
 10473 4280 0F859200 		jne	.L1342
 10473      0000
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10474              		.loc 1 277 13 is_stmt 1 view .LVU4503
 278:sieve_extend.c ****                 index2 += step2;
 10475              		.loc 1 278 17 view .LVU4504
 278:sieve_extend.c ****                 index2 += step2;
 10476              		.loc 1 278 25 is_stmt 0 view .LVU4505
 10477 4286 C4C289F7 		shlx	%r14, %r11, %rbx
 10477      DB
 10478              	.LVL854:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10479              		.loc 1 279 24 view .LVU4506
 10480 428b 4D01E6   		addq	%r12, %r14
GAS LISTING /tmp/ccmX4xFB.s 			page 302


 10481              	.LVL855:
 278:sieve_extend.c ****                 index2 += step2;
 10482              		.loc 1 278 22 view .LVU4507
 10483 428e 4809D8   		orq	%rbx, %rax
 10484              	.LVL856:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10485              		.loc 1 279 17 is_stmt 1 view .LVU4508
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10486              		.loc 1 280 17 view .LVU4509
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10487              		.loc 1 280 29 is_stmt 0 view .LVU4510
 10488 4291 4C89F3   		movq	%r14, %rbx
 10489 4294 48C1EB06 		shrq	$6, %rbx
 10490              	.LVL857:
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10491              		.loc 1 281 21 is_stmt 1 view .LVU4511
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10492              		.loc 1 281 13 is_stmt 0 view .LVU4512
 10493 4298 4939DD   		cmpq	%rbx, %r13
 10494 429b 757B     		jne	.L1342
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10495              		.loc 1 277 13 is_stmt 1 view .LVU4513
 278:sieve_extend.c ****                 index2 += step2;
 10496              		.loc 1 278 17 view .LVU4514
 278:sieve_extend.c ****                 index2 += step2;
 10497              		.loc 1 278 25 is_stmt 0 view .LVU4515
 10498 429d C4C289F7 		shlx	%r14, %r11, %rdx
 10498      D3
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10499              		.loc 1 279 24 view .LVU4516
 10500 42a2 4D01E6   		addq	%r12, %r14
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10501              		.loc 1 280 29 view .LVU4517
 10502 42a5 4C89F3   		movq	%r14, %rbx
 10503              	.LVL858:
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10504              		.loc 1 280 29 view .LVU4518
 10505 42a8 48C1EB06 		shrq	$6, %rbx
 278:sieve_extend.c ****                 index2 += step2;
 10506              		.loc 1 278 22 view .LVU4519
 10507 42ac 4809D0   		orq	%rdx, %rax
 10508              	.LVL859:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10509              		.loc 1 279 17 is_stmt 1 view .LVU4520
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10510              		.loc 1 280 17 view .LVU4521
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10511              		.loc 1 281 21 view .LVU4522
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10512              		.loc 1 281 13 is_stmt 0 view .LVU4523
 10513 42af 4939DD   		cmpq	%rbx, %r13
 10514 42b2 7564     		jne	.L1342
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10515              		.loc 1 277 13 is_stmt 1 view .LVU4524
 278:sieve_extend.c ****                 index2 += step2;
 10516              		.loc 1 278 17 view .LVU4525
 278:sieve_extend.c ****                 index2 += step2;
GAS LISTING /tmp/ccmX4xFB.s 			page 303


 10517              		.loc 1 278 25 is_stmt 0 view .LVU4526
 10518 42b4 C4C289F7 		shlx	%r14, %r11, %rbx
 10518      DB
 10519              	.LVL860:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10520              		.loc 1 279 24 view .LVU4527
 10521 42b9 4D01E6   		addq	%r12, %r14
 10522              	.LVL861:
 278:sieve_extend.c ****                 index2 += step2;
 10523              		.loc 1 278 22 view .LVU4528
 10524 42bc 4809D8   		orq	%rbx, %rax
 10525              	.LVL862:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10526              		.loc 1 279 17 is_stmt 1 view .LVU4529
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10527              		.loc 1 280 17 view .LVU4530
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10528              		.loc 1 280 29 is_stmt 0 view .LVU4531
 10529 42bf 4C89F3   		movq	%r14, %rbx
 10530 42c2 48C1EB06 		shrq	$6, %rbx
 10531              	.LVL863:
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10532              		.loc 1 281 21 is_stmt 1 view .LVU4532
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10533              		.loc 1 281 13 is_stmt 0 view .LVU4533
 10534 42c6 4939DD   		cmpq	%rbx, %r13
 10535 42c9 754D     		jne	.L1342
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10536              		.loc 1 277 13 is_stmt 1 view .LVU4534
 278:sieve_extend.c ****                 index2 += step2;
 10537              		.loc 1 278 17 view .LVU4535
 278:sieve_extend.c ****                 index2 += step2;
 10538              		.loc 1 278 25 is_stmt 0 view .LVU4536
 10539 42cb C4C289F7 		shlx	%r14, %r11, %rdx
 10539      D3
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10540              		.loc 1 279 24 view .LVU4537
 10541 42d0 4D01E6   		addq	%r12, %r14
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10542              		.loc 1 280 29 view .LVU4538
 10543 42d3 4C89F3   		movq	%r14, %rbx
 10544              	.LVL864:
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10545              		.loc 1 280 29 view .LVU4539
 10546 42d6 48C1EB06 		shrq	$6, %rbx
 278:sieve_extend.c ****                 index2 += step2;
 10547              		.loc 1 278 22 view .LVU4540
 10548 42da 4809D0   		orq	%rdx, %rax
 10549              	.LVL865:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10550              		.loc 1 279 17 is_stmt 1 view .LVU4541
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10551              		.loc 1 280 17 view .LVU4542
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10552              		.loc 1 281 21 view .LVU4543
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10553              		.loc 1 281 13 is_stmt 0 view .LVU4544
GAS LISTING /tmp/ccmX4xFB.s 			page 304


 10554 42dd 4939DD   		cmpq	%rbx, %r13
 10555 42e0 7536     		jne	.L1342
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10556              		.loc 1 277 13 is_stmt 1 view .LVU4545
 278:sieve_extend.c ****                 index2 += step2;
 10557              		.loc 1 278 17 view .LVU4546
 278:sieve_extend.c ****                 index2 += step2;
 10558              		.loc 1 278 25 is_stmt 0 view .LVU4547
 10559 42e2 C4C289F7 		shlx	%r14, %r11, %rbx
 10559      DB
 10560              	.LVL866:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10561              		.loc 1 279 24 view .LVU4548
 10562 42e7 4D01E6   		addq	%r12, %r14
 10563              	.LVL867:
 278:sieve_extend.c ****                 index2 += step2;
 10564              		.loc 1 278 22 view .LVU4549
 10565 42ea 4809D8   		orq	%rbx, %rax
 10566              	.LVL868:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10567              		.loc 1 279 17 is_stmt 1 view .LVU4550
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10568              		.loc 1 280 17 view .LVU4551
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10569              		.loc 1 280 29 is_stmt 0 view .LVU4552
 10570 42ed 4C89F3   		movq	%r14, %rbx
 10571 42f0 48C1EB06 		shrq	$6, %rbx
 10572              	.LVL869:
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10573              		.loc 1 281 21 is_stmt 1 view .LVU4553
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10574              		.loc 1 281 13 is_stmt 0 view .LVU4554
 10575 42f4 4939DD   		cmpq	%rbx, %r13
 10576 42f7 751F     		jne	.L1342
 277:sieve_extend.c ****                 mask |= markmask(index2);
 10577              		.loc 1 277 13 is_stmt 1 view .LVU4555
 278:sieve_extend.c ****                 index2 += step2;
 10578              		.loc 1 278 17 view .LVU4556
 278:sieve_extend.c ****                 index2 += step2;
 10579              		.loc 1 278 25 is_stmt 0 view .LVU4557
 10580 42f9 C4C289F7 		shlx	%r14, %r11, %rdx
 10580      D3
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
 10581              		.loc 1 279 24 view .LVU4558
 10582 42fe 4D01E6   		addq	%r12, %r14
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10583              		.loc 1 280 29 view .LVU4559
 10584 4301 4C89F3   		movq	%r14, %rbx
 10585              	.LVL870:
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10586              		.loc 1 280 29 view .LVU4560
 10587 4304 48C1EB06 		shrq	$6, %rbx
 278:sieve_extend.c ****                 index2 += step2;
 10588              		.loc 1 278 22 view .LVU4561
 10589 4308 4809D0   		orq	%rdx, %rax
 10590              	.LVL871:
 279:sieve_extend.c ****                 index2_word = wordindex(index2);
GAS LISTING /tmp/ccmX4xFB.s 			page 305


 10591              		.loc 1 279 17 is_stmt 1 view .LVU4562
 280:sieve_extend.c ****             } while (index2_word == index_word);
 10592              		.loc 1 280 17 view .LVU4563
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10593              		.loc 1 281 21 view .LVU4564
 281:sieve_extend.c ****             bitarray[index_word] |= mask;
 10594              		.loc 1 281 13 is_stmt 0 view .LVU4565
 10595 430b 4939DD   		cmpq	%rbx, %r13
 10596 430e 0F843CFF 		je	.L752
 10596      FFFF
 10597              		.p2align 4,,10
 10598 4314 0F1F4000 		.p2align 3
 10599              	.L1342:
 282:sieve_extend.c ****         }
 10600              		.loc 1 282 13 is_stmt 1 view .LVU4566
 282:sieve_extend.c ****         }
 10601              		.loc 1 282 34 is_stmt 0 view .LVU4567
 10602 4318 4B0904EF 		orq	%rax, (%r15,%r13,8)
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10603              		.loc 1 275 29 view .LVU4568
 10604 431c 4989FD   		movq	%rdi, %r13
 10605              	.LVL872:
 275:sieve_extend.c ****             } while (index1_word == index_word);
 10606              		.loc 1 275 29 view .LVU4569
 10607              	.LBE631:
 286:sieve_extend.c ****             while (index1 <= range_stop) {
 10608              		.loc 1 286 9 is_stmt 1 view .LVU4570
 286:sieve_extend.c ****             while (index1 <= range_stop) {
 10609              		.loc 1 286 12 is_stmt 0 view .LVU4571
 10610 431f 4D39F0   		cmpq	%r14, %r8
 10611 4322 0F838AFC 		jnb	.L753
 10611      FFFF
 10612              	.LVL873:
 10613 4328 0F1F8400 		.p2align 4,,10
 10613      00000000 
 10614              		.p2align 3
 10615              	.L1569:
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10616              		.loc 1 287 19 is_stmt 1 view .LVU4572
 10617 4330 4939C8   		cmpq	%rcx, %r8
 10618 4333 0F82CF00 		jb	.L1548
 10618      0000
 10619              	.LVL874:
 10620              	.L755:
 288:sieve_extend.c ****                 index1 += step1;
 10621              		.loc 1 288 17 view .LVU4573
 288:sieve_extend.c ****                 index1 += step1;
 10622              		.loc 1 288 45 is_stmt 0 view .LVU4574
 10623 4339 4989CC   		movq	%rcx, %r12
 288:sieve_extend.c ****                 index1 += step1;
 10624              		.loc 1 288 48 view .LVU4575
 10625 433c C442F1F7 		shlx	%rcx, %r11, %r14
 10625      F3
 288:sieve_extend.c ****                 index1 += step1;
 10626              		.loc 1 288 45 view .LVU4576
 10627 4341 49C1EC06 		shrq	$6, %r12
 289:sieve_extend.c ****             }
GAS LISTING /tmp/ccmX4xFB.s 			page 306


 10628              		.loc 1 289 24 view .LVU4577
 10629 4345 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10630              		.loc 1 288 45 view .LVU4578
 10631 4348 4F0934E7 		orq	%r14, (%r15,%r12,8)
 289:sieve_extend.c ****             }
 10632              		.loc 1 289 17 is_stmt 1 view .LVU4579
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10633              		.loc 1 287 19 view .LVU4580
 10634 434c 4939C8   		cmpq	%rcx, %r8
 10635 434f 0F82B300 		jb	.L1548
 10635      0000
 288:sieve_extend.c ****                 index1 += step1;
 10636              		.loc 1 288 17 view .LVU4581
 288:sieve_extend.c ****                 index1 += step1;
 10637              		.loc 1 288 45 is_stmt 0 view .LVU4582
 10638 4355 4989CD   		movq	%rcx, %r13
 288:sieve_extend.c ****                 index1 += step1;
 10639              		.loc 1 288 48 view .LVU4583
 10640 4358 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 10640      FB
 288:sieve_extend.c ****                 index1 += step1;
 10641              		.loc 1 288 45 view .LVU4584
 10642 435d 49C1ED06 		shrq	$6, %r13
 289:sieve_extend.c ****             }
 10643              		.loc 1 289 24 view .LVU4585
 10644 4361 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10645              		.loc 1 288 45 view .LVU4586
 10646 4364 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 289:sieve_extend.c ****             }
 10647              		.loc 1 289 17 is_stmt 1 view .LVU4587
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10648              		.loc 1 287 19 view .LVU4588
 10649 4368 4939C8   		cmpq	%rcx, %r8
 10650 436b 0F829700 		jb	.L1548
 10650      0000
 288:sieve_extend.c ****                 index1 += step1;
 10651              		.loc 1 288 17 view .LVU4589
 288:sieve_extend.c ****                 index1 += step1;
 10652              		.loc 1 288 45 is_stmt 0 view .LVU4590
 10653 4371 4889C8   		movq	%rcx, %rax
 288:sieve_extend.c ****                 index1 += step1;
 10654              		.loc 1 288 48 view .LVU4591
 10655 4374 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10655      D3
 288:sieve_extend.c ****                 index1 += step1;
 10656              		.loc 1 288 45 view .LVU4592
 10657 4379 48C1E806 		shrq	$6, %rax
 289:sieve_extend.c ****             }
 10658              		.loc 1 289 24 view .LVU4593
 10659 437d 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10660              		.loc 1 288 45 view .LVU4594
 10661 4380 490914C7 		orq	%rdx, (%r15,%rax,8)
 289:sieve_extend.c ****             }
 10662              		.loc 1 289 17 is_stmt 1 view .LVU4595
GAS LISTING /tmp/ccmX4xFB.s 			page 307


 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10663              		.loc 1 287 19 view .LVU4596
 10664 4384 4939C8   		cmpq	%rcx, %r8
 10665 4387 727F     		jb	.L1548
 288:sieve_extend.c ****                 index1 += step1;
 10666              		.loc 1 288 17 view .LVU4597
 288:sieve_extend.c ****                 index1 += step1;
 10667              		.loc 1 288 45 is_stmt 0 view .LVU4598
 10668 4389 4889CB   		movq	%rcx, %rbx
 288:sieve_extend.c ****                 index1 += step1;
 10669              		.loc 1 288 48 view .LVU4599
 10670 438c C442F1F7 		shlx	%rcx, %r11, %r12
 10670      E3
 288:sieve_extend.c ****                 index1 += step1;
 10671              		.loc 1 288 45 view .LVU4600
 10672 4391 48C1EB06 		shrq	$6, %rbx
 289:sieve_extend.c ****             }
 10673              		.loc 1 289 24 view .LVU4601
 10674 4395 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10675              		.loc 1 288 45 view .LVU4602
 10676 4398 4D0924DF 		orq	%r12, (%r15,%rbx,8)
 289:sieve_extend.c ****             }
 10677              		.loc 1 289 17 is_stmt 1 view .LVU4603
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10678              		.loc 1 287 19 view .LVU4604
 10679 439c 4939C8   		cmpq	%rcx, %r8
 10680 439f 7267     		jb	.L1548
 288:sieve_extend.c ****                 index1 += step1;
 10681              		.loc 1 288 17 view .LVU4605
 288:sieve_extend.c ****                 index1 += step1;
 10682              		.loc 1 288 45 is_stmt 0 view .LVU4606
 10683 43a1 4989CE   		movq	%rcx, %r14
 288:sieve_extend.c ****                 index1 += step1;
 10684              		.loc 1 288 48 view .LVU4607
 10685 43a4 C442F1F7 		shlx	%rcx, %r11, %r13
 10685      EB
 288:sieve_extend.c ****                 index1 += step1;
 10686              		.loc 1 288 45 view .LVU4608
 10687 43a9 49C1EE06 		shrq	$6, %r14
 289:sieve_extend.c ****             }
 10688              		.loc 1 289 24 view .LVU4609
 10689 43ad 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10690              		.loc 1 288 45 view .LVU4610
 10691 43b0 4F092CF7 		orq	%r13, (%r15,%r14,8)
 289:sieve_extend.c ****             }
 10692              		.loc 1 289 17 is_stmt 1 view .LVU4611
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10693              		.loc 1 287 19 view .LVU4612
 10694 43b4 4939C8   		cmpq	%rcx, %r8
 10695 43b7 724F     		jb	.L1548
 288:sieve_extend.c ****                 index1 += step1;
 10696              		.loc 1 288 17 view .LVU4613
 288:sieve_extend.c ****                 index1 += step1;
 10697              		.loc 1 288 45 is_stmt 0 view .LVU4614
 10698 43b9 4889CF   		movq	%rcx, %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 308


 288:sieve_extend.c ****                 index1 += step1;
 10699              		.loc 1 288 48 view .LVU4615
 10700 43bc C4C2F1F7 		shlx	%rcx, %r11, %rax
 10700      C3
 288:sieve_extend.c ****                 index1 += step1;
 10701              		.loc 1 288 45 view .LVU4616
 10702 43c1 48C1EF06 		shrq	$6, %rdi
 289:sieve_extend.c ****             }
 10703              		.loc 1 289 24 view .LVU4617
 10704 43c5 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10705              		.loc 1 288 45 view .LVU4618
 10706 43c8 490904FF 		orq	%rax, (%r15,%rdi,8)
 289:sieve_extend.c ****             }
 10707              		.loc 1 289 17 is_stmt 1 view .LVU4619
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10708              		.loc 1 287 19 view .LVU4620
 10709 43cc 4939C8   		cmpq	%rcx, %r8
 10710 43cf 7237     		jb	.L1548
 288:sieve_extend.c ****                 index1 += step1;
 10711              		.loc 1 288 17 view .LVU4621
 288:sieve_extend.c ****                 index1 += step1;
 10712              		.loc 1 288 45 is_stmt 0 view .LVU4622
 10713 43d1 4889CB   		movq	%rcx, %rbx
 288:sieve_extend.c ****                 index1 += step1;
 10714              		.loc 1 288 48 view .LVU4623
 10715 43d4 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 10715      D3
 288:sieve_extend.c ****                 index1 += step1;
 10716              		.loc 1 288 45 view .LVU4624
 10717 43d9 48C1EB06 		shrq	$6, %rbx
 289:sieve_extend.c ****             }
 10718              		.loc 1 289 24 view .LVU4625
 10719 43dd 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10720              		.loc 1 288 45 view .LVU4626
 10721 43e0 490914DF 		orq	%rdx, (%r15,%rbx,8)
 289:sieve_extend.c ****             }
 10722              		.loc 1 289 17 is_stmt 1 view .LVU4627
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10723              		.loc 1 287 19 view .LVU4628
 10724 43e4 4939C8   		cmpq	%rcx, %r8
 10725 43e7 721F     		jb	.L1548
 288:sieve_extend.c ****                 index1 += step1;
 10726              		.loc 1 288 17 view .LVU4629
 288:sieve_extend.c ****                 index1 += step1;
 10727              		.loc 1 288 45 is_stmt 0 view .LVU4630
 10728 43e9 4989CC   		movq	%rcx, %r12
 288:sieve_extend.c ****                 index1 += step1;
 10729              		.loc 1 288 48 view .LVU4631
 10730 43ec C442F1F7 		shlx	%rcx, %r11, %r14
 10730      F3
 288:sieve_extend.c ****                 index1 += step1;
 10731              		.loc 1 288 45 view .LVU4632
 10732 43f1 49C1EC06 		shrq	$6, %r12
 289:sieve_extend.c ****             }
 10733              		.loc 1 289 24 view .LVU4633
GAS LISTING /tmp/ccmX4xFB.s 			page 309


 10734 43f5 4C01D1   		addq	%r10, %rcx
 288:sieve_extend.c ****                 index1 += step1;
 10735              		.loc 1 288 45 view .LVU4634
 10736 43f8 4F0934E7 		orq	%r14, (%r15,%r12,8)
 289:sieve_extend.c ****             }
 10737              		.loc 1 289 17 is_stmt 1 view .LVU4635
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10738              		.loc 1 287 19 view .LVU4636
 10739 43fc 4939C8   		cmpq	%rcx, %r8
 10740 43ff 0F8334FF 		jnb	.L755
 10740      FFFF
 10741              	.LVL875:
 10742              		.p2align 4,,10
 10743 4405 0F1F00   		.p2align 3
 10744              	.L1548:
 287:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 10745              		.loc 1 287 19 is_stmt 0 view .LVU4637
 10746              	.LBE632:
 10747              	.LBE634:
 10748              	.LBB635:
 10749              	.LBB636:
  97:sieve_extend.c ****     return index;
 10750              		.loc 1 97 11 is_stmt 1 view .LVU4638
  97:sieve_extend.c ****     return index;
 10751              		.loc 1 97 21 is_stmt 0 view .LVU4639
 10752 4408 4889F1   		movq	%rsi, %rcx
 10753 440b 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 10754              		.loc 1 97 12 view .LVU4640
 10755 440f 4D8B14CF 		movq	(%r15,%rcx,8), %r10
  97:sieve_extend.c ****     return index;
 10756              		.loc 1 97 11 view .LVU4641
 10757 4413 490FA3F2 		btq	%rsi, %r10
 10758 4417 0F83BB06 		jnc	.L749
 10758      0000
  97:sieve_extend.c ****     return index;
 10759              		.loc 1 97 58 is_stmt 1 view .LVU4642
  97:sieve_extend.c ****     return index;
 10760              		.loc 1 97 63 is_stmt 0 view .LVU4643
 10761 441d 4C8D6E01 		leaq	1(%rsi), %r13
 10762              	.LVL876:
  97:sieve_extend.c ****     return index;
 10763              		.loc 1 97 21 view .LVU4644
 10764 4421 4C89EF   		movq	%r13, %rdi
 10765 4424 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 10766              		.loc 1 97 12 view .LVU4645
 10767 4428 498B04FF 		movq	(%r15,%rdi,8), %rax
  97:sieve_extend.c ****     return index;
 10768              		.loc 1 97 63 view .LVU4646
 10769 442c 4C89EE   		movq	%r13, %rsi
  97:sieve_extend.c ****     return index;
 10770              		.loc 1 97 11 is_stmt 1 view .LVU4647
 10771 442f 4C0FA3E8 		btq	%r13, %rax
 10772 4433 0F839F06 		jnc	.L749
 10772      0000
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 310


 10773              		.loc 1 97 58 view .LVU4648
 10774              	.LVL877:
  97:sieve_extend.c ****     return index;
 10775              		.loc 1 97 63 is_stmt 0 view .LVU4649
 10776 4439 48FFC6   		incq	%rsi
 10777              	.LVL878:
  97:sieve_extend.c ****     return index;
 10778              		.loc 1 97 11 is_stmt 1 view .LVU4650
  97:sieve_extend.c ****     return index;
 10779              		.loc 1 97 21 is_stmt 0 view .LVU4651
 10780 443c 4889F3   		movq	%rsi, %rbx
 10781 443f 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 10782              		.loc 1 97 12 view .LVU4652
 10783 4443 498B14DF 		movq	(%r15,%rbx,8), %rdx
  97:sieve_extend.c ****     return index;
 10784              		.loc 1 97 11 view .LVU4653
 10785 4447 480FA3F2 		btq	%rsi, %rdx
 10786 444b 0F838706 		jnc	.L749
 10786      0000
  97:sieve_extend.c ****     return index;
 10787              		.loc 1 97 58 is_stmt 1 view .LVU4654
 10788              	.LVL879:
  97:sieve_extend.c ****     return index;
 10789              		.loc 1 97 63 is_stmt 0 view .LVU4655
 10790 4451 498D7502 		leaq	2(%r13), %rsi
 10791              	.LVL880:
  97:sieve_extend.c ****     return index;
 10792              		.loc 1 97 11 is_stmt 1 view .LVU4656
  97:sieve_extend.c ****     return index;
 10793              		.loc 1 97 21 is_stmt 0 view .LVU4657
 10794 4455 4989F4   		movq	%rsi, %r12
 10795 4458 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 10796              		.loc 1 97 12 view .LVU4658
 10797 445c 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 10798              		.loc 1 97 11 view .LVU4659
 10799 4460 490FA3F6 		btq	%rsi, %r14
 10800 4464 0F836E06 		jnc	.L749
 10800      0000
  97:sieve_extend.c ****     return index;
 10801              		.loc 1 97 58 is_stmt 1 view .LVU4660
 10802              	.LVL881:
  97:sieve_extend.c ****     return index;
 10803              		.loc 1 97 63 is_stmt 0 view .LVU4661
 10804 446a 498D7503 		leaq	3(%r13), %rsi
 10805              	.LVL882:
  97:sieve_extend.c ****     return index;
 10806              		.loc 1 97 11 is_stmt 1 view .LVU4662
  97:sieve_extend.c ****     return index;
 10807              		.loc 1 97 21 is_stmt 0 view .LVU4663
 10808 446e 4889F1   		movq	%rsi, %rcx
 10809 4471 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 10810              		.loc 1 97 12 view .LVU4664
 10811 4475 4D8B14CF 		movq	(%r15,%rcx,8), %r10
GAS LISTING /tmp/ccmX4xFB.s 			page 311


  97:sieve_extend.c ****     return index;
 10812              		.loc 1 97 11 view .LVU4665
 10813 4479 490FA3F2 		btq	%rsi, %r10
 10814 447d 0F835506 		jnc	.L749
 10814      0000
  97:sieve_extend.c ****     return index;
 10815              		.loc 1 97 58 is_stmt 1 view .LVU4666
 10816              	.LVL883:
  97:sieve_extend.c ****     return index;
 10817              		.loc 1 97 63 is_stmt 0 view .LVU4667
 10818 4483 498D7504 		leaq	4(%r13), %rsi
 10819              	.LVL884:
  97:sieve_extend.c ****     return index;
 10820              		.loc 1 97 11 is_stmt 1 view .LVU4668
  97:sieve_extend.c ****     return index;
 10821              		.loc 1 97 21 is_stmt 0 view .LVU4669
 10822 4487 4889F7   		movq	%rsi, %rdi
 10823 448a 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 10824              		.loc 1 97 12 view .LVU4670
 10825 448e 498B04FF 		movq	(%r15,%rdi,8), %rax
  97:sieve_extend.c ****     return index;
 10826              		.loc 1 97 11 view .LVU4671
 10827 4492 480FA3F0 		btq	%rsi, %rax
 10828 4496 0F833C06 		jnc	.L749
 10828      0000
  97:sieve_extend.c ****     return index;
 10829              		.loc 1 97 58 is_stmt 1 view .LVU4672
 10830              	.LVL885:
  97:sieve_extend.c ****     return index;
 10831              		.loc 1 97 63 is_stmt 0 view .LVU4673
 10832 449c 498D7505 		leaq	5(%r13), %rsi
 10833              	.LVL886:
  97:sieve_extend.c ****     return index;
 10834              		.loc 1 97 11 is_stmt 1 view .LVU4674
  97:sieve_extend.c ****     return index;
 10835              		.loc 1 97 21 is_stmt 0 view .LVU4675
 10836 44a0 4889F3   		movq	%rsi, %rbx
 10837 44a3 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 10838              		.loc 1 97 12 view .LVU4676
 10839 44a7 498B14DF 		movq	(%r15,%rbx,8), %rdx
  97:sieve_extend.c ****     return index;
 10840              		.loc 1 97 11 view .LVU4677
 10841 44ab 480FA3F2 		btq	%rsi, %rdx
 10842 44af 0F832306 		jnc	.L749
 10842      0000
  97:sieve_extend.c ****     return index;
 10843              		.loc 1 97 58 is_stmt 1 view .LVU4678
 10844              	.LVL887:
  97:sieve_extend.c ****     return index;
 10845              		.loc 1 97 63 is_stmt 0 view .LVU4679
 10846 44b5 498D7506 		leaq	6(%r13), %rsi
 10847              	.LVL888:
  97:sieve_extend.c ****     return index;
 10848              		.loc 1 97 11 is_stmt 1 view .LVU4680
  97:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccmX4xFB.s 			page 312


 10849              		.loc 1 97 21 is_stmt 0 view .LVU4681
 10850 44b9 4989F4   		movq	%rsi, %r12
 10851 44bc 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 10852              		.loc 1 97 12 view .LVU4682
 10853 44c0 4F8B34E7 		movq	(%r15,%r12,8), %r14
  97:sieve_extend.c ****     return index;
 10854              		.loc 1 97 11 view .LVU4683
 10855 44c4 490FA3F6 		btq	%rsi, %r14
 10856 44c8 0F830A06 		jnc	.L749
 10856      0000
  97:sieve_extend.c ****     return index;
 10857              		.loc 1 97 58 is_stmt 1 view .LVU4684
 10858              	.LVL889:
  97:sieve_extend.c ****     return index;
 10859              		.loc 1 97 63 is_stmt 0 view .LVU4685
 10860 44ce 498D7507 		leaq	7(%r13), %rsi
 10861              	.LVL890:
  97:sieve_extend.c ****     return index;
 10862              		.loc 1 97 63 view .LVU4686
 10863 44d2 E931FFFF 		jmp	.L1548
 10863      FF
 10864              	.LVL891:
 10865 44d7 660F1F84 		.p2align 4,,10
 10865      00000000 
 10865      00
 10866              		.p2align 3
 10867              	.L1566:
  97:sieve_extend.c ****     return index;
 10868              		.loc 1 97 63 view .LVU4687
 10869              	.LBE636:
 10870              	.LBE635:
 10871              	.LBB638:
 10872              	.LBB609:
 10873              	.LBB606:
 10874              	.LBB605:
 10875              	.LBB604:
 10876              	.LBB602:
 175:sieve_extend.c ****    }
 10877              		.loc 1 175 7 is_stmt 1 view .LVU4688
 175:sieve_extend.c ****    }
 10878              		.loc 1 175 32 is_stmt 0 view .LVU4689
 10879 44e0 48235424 		andq	16(%rsp), %rdx
 10879      10
 10880              	.LVL892:
 175:sieve_extend.c ****    }
 10881              		.loc 1 175 23 view .LVU4690
 10882 44e5 490911   		orq	%rdx, (%r9)
 10883 44e8 E96CF8FF 		jmp	.L738
 10883      FF
 10884              	.LVL893:
 10885 44ed 0F1F00   		.p2align 4,,10
 10886              		.p2align 3
 10887              	.L726:
 175:sieve_extend.c ****    }
 10888              		.loc 1 175 23 view .LVU4691
 10889              	.LBE602:
GAS LISTING /tmp/ccmX4xFB.s 			page 313


 10890              	.LBE604:
 10891              	.LBE605:
 10892              	.LBE606:
 10893              	.LBB607:
 10894              	.LBB596:
 10895              	.LBB595:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10896              		.loc 1 228 54 is_stmt 1 view .LVU4692
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10897              		.loc 1 228 9 is_stmt 0 view .LVU4693
 10898 44f0 4939C8   		cmpq	%rcx, %r8
 10899 44f3 0F8269F8 		jb	.L730
 10899      FFFF
 10900              	.LVL894:
 10901 44f9 0F1F8000 		.p2align 4,,10
 10901      000000
 10902              		.p2align 3
 10903              	.L732:
 10904              	.LBB594:
 229:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10905              		.loc 1 229 13 is_stmt 1 view .LVU4694
 229:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10906              		.loc 1 229 32 is_stmt 0 view .LVU4695
 10907 4500 4989CD   		movq	%rcx, %r13
 10908 4503 49C1ED06 		shrq	$6, %r13
 10909              	.LVL895:
 230:sieve_extend.c ****             do {
 10910              		.loc 1 230 13 is_stmt 1 view .LVU4696
 230:sieve_extend.c ****             do {
 10911              		.loc 1 230 32 is_stmt 0 view .LVU4697
 10912 4507 31DB     		xorl	%ebx, %ebx
 10913              	.LVL896:
 10914              	.L731:
 231:sieve_extend.c ****                 mask |= markmask(index);
 10915              		.loc 1 231 13 is_stmt 1 view .LVU4698
 232:sieve_extend.c ****                 index += step;
 10916              		.loc 1 232 17 view .LVU4699
 232:sieve_extend.c ****                 index += step;
 10917              		.loc 1 232 25 is_stmt 0 view .LVU4700
 10918 4509 C4C2F1F7 		shlx	%rcx, %r11, %rsi
 10918      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10919              		.loc 1 233 23 view .LVU4701
 10920 450e 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10921              		.loc 1 234 36 view .LVU4702
 10922 4511 4889CD   		movq	%rcx, %rbp
 10923 4514 48C1ED06 		shrq	$6, %rbp
 232:sieve_extend.c ****                 index += step;
 10924              		.loc 1 232 22 view .LVU4703
 10925 4518 4809F3   		orq	%rsi, %rbx
 10926              	.LVL897:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10927              		.loc 1 233 17 is_stmt 1 view .LVU4704
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10928              		.loc 1 234 21 view .LVU4705
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 314


 10929              		.loc 1 234 13 is_stmt 0 view .LVU4706
 10930 451b 4939ED   		cmpq	%rbp, %r13
 10931 451e 0F85AC00 		jne	.L1343
 10931      0000
 231:sieve_extend.c ****                 mask |= markmask(index);
 10932              		.loc 1 231 13 is_stmt 1 view .LVU4707
 232:sieve_extend.c ****                 index += step;
 10933              		.loc 1 232 17 view .LVU4708
 232:sieve_extend.c ****                 index += step;
 10934              		.loc 1 232 25 is_stmt 0 view .LVU4709
 10935 4524 C442F1F7 		shlx	%rcx, %r11, %r14
 10935      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10936              		.loc 1 233 23 view .LVU4710
 10937 4529 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10938              		.loc 1 234 36 view .LVU4711
 10939 452c 4889CA   		movq	%rcx, %rdx
 10940 452f 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 10941              		.loc 1 232 22 view .LVU4712
 10942 4533 4C09F3   		orq	%r14, %rbx
 10943              	.LVL898:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10944              		.loc 1 233 17 is_stmt 1 view .LVU4713
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10945              		.loc 1 234 21 view .LVU4714
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10946              		.loc 1 234 13 is_stmt 0 view .LVU4715
 10947 4536 4939D5   		cmpq	%rdx, %r13
 10948 4539 0F859100 		jne	.L1343
 10948      0000
 231:sieve_extend.c ****                 mask |= markmask(index);
 10949              		.loc 1 231 13 is_stmt 1 view .LVU4716
 232:sieve_extend.c ****                 index += step;
 10950              		.loc 1 232 17 view .LVU4717
 232:sieve_extend.c ****                 index += step;
 10951              		.loc 1 232 25 is_stmt 0 view .LVU4718
 10952 453f C4C2F1F7 		shlx	%rcx, %r11, %rax
 10952      C3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10953              		.loc 1 233 23 view .LVU4719
 10954 4544 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10955              		.loc 1 234 36 view .LVU4720
 10956 4547 4889CF   		movq	%rcx, %rdi
 10957 454a 48C1EF06 		shrq	$6, %rdi
 232:sieve_extend.c ****                 index += step;
 10958              		.loc 1 232 22 view .LVU4721
 10959 454e 4809C3   		orq	%rax, %rbx
 10960              	.LVL899:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10961              		.loc 1 233 17 is_stmt 1 view .LVU4722
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10962              		.loc 1 234 21 view .LVU4723
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10963              		.loc 1 234 13 is_stmt 0 view .LVU4724
GAS LISTING /tmp/ccmX4xFB.s 			page 315


 10964 4551 4939FD   		cmpq	%rdi, %r13
 10965 4554 757A     		jne	.L1343
 231:sieve_extend.c ****                 mask |= markmask(index);
 10966              		.loc 1 231 13 is_stmt 1 view .LVU4725
 232:sieve_extend.c ****                 index += step;
 10967              		.loc 1 232 17 view .LVU4726
 232:sieve_extend.c ****                 index += step;
 10968              		.loc 1 232 25 is_stmt 0 view .LVU4727
 10969 4556 C4C2F1F7 		shlx	%rcx, %r11, %rsi
 10969      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10970              		.loc 1 233 23 view .LVU4728
 10971 455b 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10972              		.loc 1 234 36 view .LVU4729
 10973 455e 4889CD   		movq	%rcx, %rbp
 10974 4561 48C1ED06 		shrq	$6, %rbp
 232:sieve_extend.c ****                 index += step;
 10975              		.loc 1 232 22 view .LVU4730
 10976 4565 4809F3   		orq	%rsi, %rbx
 10977              	.LVL900:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10978              		.loc 1 233 17 is_stmt 1 view .LVU4731
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10979              		.loc 1 234 21 view .LVU4732
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10980              		.loc 1 234 13 is_stmt 0 view .LVU4733
 10981 4568 4939ED   		cmpq	%rbp, %r13
 10982 456b 7563     		jne	.L1343
 231:sieve_extend.c ****                 mask |= markmask(index);
 10983              		.loc 1 231 13 is_stmt 1 view .LVU4734
 232:sieve_extend.c ****                 index += step;
 10984              		.loc 1 232 17 view .LVU4735
 232:sieve_extend.c ****                 index += step;
 10985              		.loc 1 232 25 is_stmt 0 view .LVU4736
 10986 456d C442F1F7 		shlx	%rcx, %r11, %r14
 10986      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10987              		.loc 1 233 23 view .LVU4737
 10988 4572 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10989              		.loc 1 234 36 view .LVU4738
 10990 4575 4889CA   		movq	%rcx, %rdx
 10991 4578 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 10992              		.loc 1 232 22 view .LVU4739
 10993 457c 4C09F3   		orq	%r14, %rbx
 10994              	.LVL901:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 10995              		.loc 1 233 17 is_stmt 1 view .LVU4740
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10996              		.loc 1 234 21 view .LVU4741
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 10997              		.loc 1 234 13 is_stmt 0 view .LVU4742
 10998 457f 4939D5   		cmpq	%rdx, %r13
 10999 4582 754C     		jne	.L1343
 231:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/ccmX4xFB.s 			page 316


 11000              		.loc 1 231 13 is_stmt 1 view .LVU4743
 232:sieve_extend.c ****                 index += step;
 11001              		.loc 1 232 17 view .LVU4744
 232:sieve_extend.c ****                 index += step;
 11002              		.loc 1 232 25 is_stmt 0 view .LVU4745
 11003 4584 C4C2F1F7 		shlx	%rcx, %r11, %rax
 11003      C3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11004              		.loc 1 233 23 view .LVU4746
 11005 4589 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11006              		.loc 1 234 36 view .LVU4747
 11007 458c 4889CF   		movq	%rcx, %rdi
 11008 458f 48C1EF06 		shrq	$6, %rdi
 232:sieve_extend.c ****                 index += step;
 11009              		.loc 1 232 22 view .LVU4748
 11010 4593 4809C3   		orq	%rax, %rbx
 11011              	.LVL902:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11012              		.loc 1 233 17 is_stmt 1 view .LVU4749
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11013              		.loc 1 234 21 view .LVU4750
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11014              		.loc 1 234 13 is_stmt 0 view .LVU4751
 11015 4596 4939FD   		cmpq	%rdi, %r13
 11016 4599 7535     		jne	.L1343
 231:sieve_extend.c ****                 mask |= markmask(index);
 11017              		.loc 1 231 13 is_stmt 1 view .LVU4752
 232:sieve_extend.c ****                 index += step;
 11018              		.loc 1 232 17 view .LVU4753
 232:sieve_extend.c ****                 index += step;
 11019              		.loc 1 232 25 is_stmt 0 view .LVU4754
 11020 459b C4C2F1F7 		shlx	%rcx, %r11, %rsi
 11020      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11021              		.loc 1 233 23 view .LVU4755
 11022 45a0 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11023              		.loc 1 234 36 view .LVU4756
 11024 45a3 4889CD   		movq	%rcx, %rbp
 11025 45a6 48C1ED06 		shrq	$6, %rbp
 232:sieve_extend.c ****                 index += step;
 11026              		.loc 1 232 22 view .LVU4757
 11027 45aa 4809F3   		orq	%rsi, %rbx
 11028              	.LVL903:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11029              		.loc 1 233 17 is_stmt 1 view .LVU4758
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11030              		.loc 1 234 21 view .LVU4759
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11031              		.loc 1 234 13 is_stmt 0 view .LVU4760
 11032 45ad 4939ED   		cmpq	%rbp, %r13
 11033 45b0 751E     		jne	.L1343
 231:sieve_extend.c ****                 mask |= markmask(index);
 11034              		.loc 1 231 13 is_stmt 1 view .LVU4761
 232:sieve_extend.c ****                 index += step;
 11035              		.loc 1 232 17 view .LVU4762
GAS LISTING /tmp/ccmX4xFB.s 			page 317


 232:sieve_extend.c ****                 index += step;
 11036              		.loc 1 232 25 is_stmt 0 view .LVU4763
 11037 45b2 C442F1F7 		shlx	%rcx, %r11, %r14
 11037      F3
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11038              		.loc 1 233 23 view .LVU4764
 11039 45b7 4C01D1   		addq	%r10, %rcx
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11040              		.loc 1 234 36 view .LVU4765
 11041 45ba 4889CA   		movq	%rcx, %rdx
 11042 45bd 48C1EA06 		shrq	$6, %rdx
 232:sieve_extend.c ****                 index += step;
 11043              		.loc 1 232 22 view .LVU4766
 11044 45c1 4C09F3   		orq	%r14, %rbx
 11045              	.LVL904:
 233:sieve_extend.c ****             } while (index_word == wordindex(index));
 11046              		.loc 1 233 17 is_stmt 1 view .LVU4767
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11047              		.loc 1 234 21 view .LVU4768
 234:sieve_extend.c ****             bitarray[index_word] |= mask;
 11048              		.loc 1 234 13 is_stmt 0 view .LVU4769
 11049 45c4 4939D5   		cmpq	%rdx, %r13
 11050 45c7 0F843CFF 		je	.L731
 11050      FFFF
 11051 45cd 0F1F00   		.p2align 4,,10
 11052              		.p2align 3
 11053              	.L1343:
 235:sieve_extend.c ****         }
 11054              		.loc 1 235 13 is_stmt 1 view .LVU4770
 235:sieve_extend.c ****         }
 11055              		.loc 1 235 34 is_stmt 0 view .LVU4771
 11056 45d0 4B091CEF 		orq	%rbx, (%r15,%r13,8)
 235:sieve_extend.c ****         }
 11057              		.loc 1 235 34 view .LVU4772
 11058              	.LBE594:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11059              		.loc 1 228 54 is_stmt 1 view .LVU4773
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11060              		.loc 1 228 9 is_stmt 0 view .LVU4774
 11061 45d4 4939C8   		cmpq	%rcx, %r8
 11062 45d7 0F8323FF 		jnb	.L732
 11062      FFFF
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11063              		.loc 1 228 9 view .LVU4775
 11064 45dd E980F7FF 		jmp	.L730
 11064      FF
 11065              	.LVL905:
 11066              		.p2align 4,,10
 11067 45e2 660F1F44 		.p2align 3
 11067      0000
 11068              	.L771:
 228:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11069              		.loc 1 228 9 view .LVU4776
 11070              	.LBE595:
 11071              	.LBE596:
 11072              	.LBE607:
 11073              	.LBE609:
GAS LISTING /tmp/ccmX4xFB.s 			page 318


 11074              	.LBE638:
 11075              	.LBB639:
 11076              	.LBB640:
 11077              	.LBB641:
 11078              	.LBB642:
 11079              	.LBB643:
 11080              	.LBB644:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11081              		.loc 1 169 10 is_stmt 1 view .LVU4777
 11082 45e8 4939C1   		cmpq	%rax, %r9
 11083 45eb 765B     		jbe	.L773
 11084              	.L774:
 170:sieve_extend.c ****        index_ptr+=step;
 11085              		.loc 1 170 8 view .LVU4778
 170:sieve_extend.c ****        index_ptr+=step;
 11086              		.loc 1 170 19 is_stmt 0 view .LVU4779
 11087 45ed 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11088              		.loc 1 171 8 is_stmt 1 view .LVU4780
 171:sieve_extend.c ****    }
 11089              		.loc 1 171 17 is_stmt 0 view .LVU4781
 11090 45f0 4801D0   		addq	%rdx, %rax
 11091              	.LVL906:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11092              		.loc 1 169 10 is_stmt 1 view .LVU4782
 11093 45f3 4939C1   		cmpq	%rax, %r9
 11094 45f6 7650     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11095              		.loc 1 170 8 view .LVU4783
 170:sieve_extend.c ****        index_ptr+=step;
 11096              		.loc 1 170 19 is_stmt 0 view .LVU4784
 11097 45f8 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11098              		.loc 1 171 8 is_stmt 1 view .LVU4785
 171:sieve_extend.c ****    }
 11099              		.loc 1 171 17 is_stmt 0 view .LVU4786
 11100 45fb 4801D0   		addq	%rdx, %rax
 11101              	.LVL907:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11102              		.loc 1 169 10 is_stmt 1 view .LVU4787
 11103 45fe 4939C1   		cmpq	%rax, %r9
 11104 4601 7645     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11105              		.loc 1 170 8 view .LVU4788
 170:sieve_extend.c ****        index_ptr+=step;
 11106              		.loc 1 170 19 is_stmt 0 view .LVU4789
 11107 4603 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11108              		.loc 1 171 8 is_stmt 1 view .LVU4790
 171:sieve_extend.c ****    }
 11109              		.loc 1 171 17 is_stmt 0 view .LVU4791
 11110 4606 4801D0   		addq	%rdx, %rax
 11111              	.LVL908:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11112              		.loc 1 169 10 is_stmt 1 view .LVU4792
 11113 4609 4939C1   		cmpq	%rax, %r9
 11114 460c 763A     		jbe	.L773
GAS LISTING /tmp/ccmX4xFB.s 			page 319


 170:sieve_extend.c ****        index_ptr+=step;
 11115              		.loc 1 170 8 view .LVU4793
 170:sieve_extend.c ****        index_ptr+=step;
 11116              		.loc 1 170 19 is_stmt 0 view .LVU4794
 11117 460e 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11118              		.loc 1 171 8 is_stmt 1 view .LVU4795
 171:sieve_extend.c ****    }
 11119              		.loc 1 171 17 is_stmt 0 view .LVU4796
 11120 4611 4801D0   		addq	%rdx, %rax
 11121              	.LVL909:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11122              		.loc 1 169 10 is_stmt 1 view .LVU4797
 11123 4614 4939C1   		cmpq	%rax, %r9
 11124 4617 762F     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11125              		.loc 1 170 8 view .LVU4798
 170:sieve_extend.c ****        index_ptr+=step;
 11126              		.loc 1 170 19 is_stmt 0 view .LVU4799
 11127 4619 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11128              		.loc 1 171 8 is_stmt 1 view .LVU4800
 171:sieve_extend.c ****    }
 11129              		.loc 1 171 17 is_stmt 0 view .LVU4801
 11130 461c 4801D0   		addq	%rdx, %rax
 11131              	.LVL910:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11132              		.loc 1 169 10 is_stmt 1 view .LVU4802
 11133 461f 4939C1   		cmpq	%rax, %r9
 11134 4622 7624     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11135              		.loc 1 170 8 view .LVU4803
 170:sieve_extend.c ****        index_ptr+=step;
 11136              		.loc 1 170 19 is_stmt 0 view .LVU4804
 11137 4624 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11138              		.loc 1 171 8 is_stmt 1 view .LVU4805
 171:sieve_extend.c ****    }
 11139              		.loc 1 171 17 is_stmt 0 view .LVU4806
 11140 4627 4801D0   		addq	%rdx, %rax
 11141              	.LVL911:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11142              		.loc 1 169 10 is_stmt 1 view .LVU4807
 11143 462a 4939C1   		cmpq	%rax, %r9
 11144 462d 7619     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11145              		.loc 1 170 8 view .LVU4808
 170:sieve_extend.c ****        index_ptr+=step;
 11146              		.loc 1 170 19 is_stmt 0 view .LVU4809
 11147 462f 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11148              		.loc 1 171 8 is_stmt 1 view .LVU4810
 171:sieve_extend.c ****    }
 11149              		.loc 1 171 17 is_stmt 0 view .LVU4811
 11150 4632 4801D0   		addq	%rdx, %rax
 11151              	.LVL912:
 169:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 320


 11152              		.loc 1 169 10 is_stmt 1 view .LVU4812
 11153 4635 4939C1   		cmpq	%rax, %r9
 11154 4638 760E     		jbe	.L773
 170:sieve_extend.c ****        index_ptr+=step;
 11155              		.loc 1 170 8 view .LVU4813
 170:sieve_extend.c ****        index_ptr+=step;
 11156              		.loc 1 170 19 is_stmt 0 view .LVU4814
 11157 463a 480930   		orq	%rsi, (%rax)
 171:sieve_extend.c ****    }
 11158              		.loc 1 171 8 is_stmt 1 view .LVU4815
 171:sieve_extend.c ****    }
 11159              		.loc 1 171 17 is_stmt 0 view .LVU4816
 11160 463d 4801D0   		addq	%rdx, %rax
 11161              	.LVL913:
 169:sieve_extend.c ****        *index_ptr |= mask;
 11162              		.loc 1 169 10 is_stmt 1 view .LVU4817
 11163 4640 4939C1   		cmpq	%rax, %r9
 11164 4643 77A8     		ja	.L774
 11165              		.p2align 4,,10
 11166 4645 0F1F00   		.p2align 3
 11167              	.L773:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 11168              		.loc 1 174 4 view .LVU4818
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 11169              		.loc 1 174 7 is_stmt 0 view .LVU4819
 11170 4648 4939C1   		cmpq	%rax, %r9
 11171 464b 0F847704 		je	.L1570
 11171      0000
 11172              	.LVL914:
 11173              	.L775:
 174:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 11174              		.loc 1 174 7 view .LVU4820
 11175              	.LBE644:
 11176              	.LBE643:
 11177              	.LBE642:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11178              		.loc 1 322 69 is_stmt 1 view .LVU4821
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11179              		.loc 1 322 75 is_stmt 0 view .LVU4822
 11180 4651 4C01E1   		addq	%r12, %rcx
 11181              	.LVL915:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11182              		.loc 1 322 41 is_stmt 1 view .LVU4823
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11183              		.loc 1 322 5 is_stmt 0 view .LVU4824
 11184 4654 4939CD   		cmpq	%rcx, %r13
 11185 4657 0F835B01 		jnb	.L776
 11185      0000
 11186              	.L777:
 11187              	.LVL916:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11188              		.loc 1 322 5 view .LVU4825
 11189              	.LBE641:
 11190              	.LBE640:
 11191              	.LBE639:
 11192              	.LBB659:
 11193              	.LBB660:
GAS LISTING /tmp/ccmX4xFB.s 			page 321


  97:sieve_extend.c ****     return index;
 11194              		.loc 1 97 11 is_stmt 1 view .LVU4826
  97:sieve_extend.c ****     return index;
 11195              		.loc 1 97 21 is_stmt 0 view .LVU4827
 11196 465d 4889D9   		movq	%rbx, %rcx
 11197              	.LVL917:
  97:sieve_extend.c ****     return index;
 11198              		.loc 1 97 21 view .LVU4828
 11199 4660 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 11200              		.loc 1 97 12 view .LVU4829
 11201 4664 4D8B24CF 		movq	(%r15,%rcx,8), %r12
 11202              	.LVL918:
  97:sieve_extend.c ****     return index;
 11203              		.loc 1 97 12 view .LVU4830
 11204              	.LBE660:
 11205              	.LBE659:
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11206              		.loc 1 726 35 view .LVU4831
 11207 4668 4889DE   		movq	%rbx, %rsi
 11208              	.LBB662:
 11209              	.LBB661:
  97:sieve_extend.c ****     return index;
 11210              		.loc 1 97 11 view .LVU4832
 11211 466b 490FA3DC 		btq	%rbx, %r12
 11212 466f 0F83BB00 		jnc	.L769
 11212      0000
 11213              	.LVL919:
 11214              	.L768:
  97:sieve_extend.c ****     return index;
 11215              		.loc 1 97 58 is_stmt 1 view .LVU4833
  97:sieve_extend.c ****     return index;
 11216              		.loc 1 97 63 is_stmt 0 view .LVU4834
 11217 4675 488D5E01 		leaq	1(%rsi), %rbx
 11218              	.LVL920:
  97:sieve_extend.c ****     return index;
 11219              		.loc 1 97 21 view .LVU4835
 11220 4679 4989DD   		movq	%rbx, %r13
 11221 467c 49C1ED06 		shrq	$6, %r13
  97:sieve_extend.c ****     return index;
 11222              		.loc 1 97 12 view .LVU4836
 11223 4680 4F8B14EF 		movq	(%r15,%r13,8), %r10
  97:sieve_extend.c ****     return index;
 11224              		.loc 1 97 63 view .LVU4837
 11225 4684 4889DE   		movq	%rbx, %rsi
  97:sieve_extend.c ****     return index;
 11226              		.loc 1 97 11 is_stmt 1 view .LVU4838
 11227 4687 490FA3DA 		btq	%rbx, %r10
 11228 468b 0F839F00 		jnc	.L769
 11228      0000
  97:sieve_extend.c ****     return index;
 11229              		.loc 1 97 58 view .LVU4839
 11230              	.LVL921:
  97:sieve_extend.c ****     return index;
 11231              		.loc 1 97 63 is_stmt 0 view .LVU4840
 11232 4691 48FFC6   		incq	%rsi
 11233              	.LVL922:
GAS LISTING /tmp/ccmX4xFB.s 			page 322


  97:sieve_extend.c ****     return index;
 11234              		.loc 1 97 11 is_stmt 1 view .LVU4841
  97:sieve_extend.c ****     return index;
 11235              		.loc 1 97 21 is_stmt 0 view .LVU4842
 11236 4694 4889F2   		movq	%rsi, %rdx
 11237 4697 48C1EA06 		shrq	$6, %rdx
  97:sieve_extend.c ****     return index;
 11238              		.loc 1 97 12 view .LVU4843
 11239 469b 498B2CD7 		movq	(%r15,%rdx,8), %rbp
  97:sieve_extend.c ****     return index;
 11240              		.loc 1 97 11 view .LVU4844
 11241 469f 480FA3F5 		btq	%rsi, %rbp
 11242 46a3 0F838700 		jnc	.L769
 11242      0000
  97:sieve_extend.c ****     return index;
 11243              		.loc 1 97 58 is_stmt 1 view .LVU4845
 11244              	.LVL923:
  97:sieve_extend.c ****     return index;
 11245              		.loc 1 97 63 is_stmt 0 view .LVU4846
 11246 46a9 488D7302 		leaq	2(%rbx), %rsi
 11247              	.LVL924:
  97:sieve_extend.c ****     return index;
 11248              		.loc 1 97 11 is_stmt 1 view .LVU4847
  97:sieve_extend.c ****     return index;
 11249              		.loc 1 97 21 is_stmt 0 view .LVU4848
 11250 46ad 4989F6   		movq	%rsi, %r14
 11251 46b0 49C1EE06 		shrq	$6, %r14
  97:sieve_extend.c ****     return index;
 11252              		.loc 1 97 12 view .LVU4849
 11253 46b4 4B8B04F7 		movq	(%r15,%r14,8), %rax
  97:sieve_extend.c ****     return index;
 11254              		.loc 1 97 11 view .LVU4850
 11255 46b8 480FA3F0 		btq	%rsi, %rax
 11256 46bc 7372     		jnc	.L769
  97:sieve_extend.c ****     return index;
 11257              		.loc 1 97 58 is_stmt 1 view .LVU4851
 11258              	.LVL925:
  97:sieve_extend.c ****     return index;
 11259              		.loc 1 97 63 is_stmt 0 view .LVU4852
 11260 46be 488D7303 		leaq	3(%rbx), %rsi
 11261              	.LVL926:
  97:sieve_extend.c ****     return index;
 11262              		.loc 1 97 11 is_stmt 1 view .LVU4853
  97:sieve_extend.c ****     return index;
 11263              		.loc 1 97 21 is_stmt 0 view .LVU4854
 11264 46c2 4889F7   		movq	%rsi, %rdi
 11265 46c5 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 11266              		.loc 1 97 12 view .LVU4855
 11267 46c9 498B0CFF 		movq	(%r15,%rdi,8), %rcx
  97:sieve_extend.c ****     return index;
 11268              		.loc 1 97 11 view .LVU4856
 11269 46cd 480FA3F1 		btq	%rsi, %rcx
 11270 46d1 735D     		jnc	.L769
  97:sieve_extend.c ****     return index;
 11271              		.loc 1 97 58 is_stmt 1 view .LVU4857
 11272              	.LVL927:
GAS LISTING /tmp/ccmX4xFB.s 			page 323


  97:sieve_extend.c ****     return index;
 11273              		.loc 1 97 63 is_stmt 0 view .LVU4858
 11274 46d3 488D7304 		leaq	4(%rbx), %rsi
 11275              	.LVL928:
  97:sieve_extend.c ****     return index;
 11276              		.loc 1 97 11 is_stmt 1 view .LVU4859
  97:sieve_extend.c ****     return index;
 11277              		.loc 1 97 21 is_stmt 0 view .LVU4860
 11278 46d7 4989F4   		movq	%rsi, %r12
 11279 46da 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 11280              		.loc 1 97 12 view .LVU4861
 11281 46de 4F8B2CE7 		movq	(%r15,%r12,8), %r13
  97:sieve_extend.c ****     return index;
 11282              		.loc 1 97 11 view .LVU4862
 11283 46e2 490FA3F5 		btq	%rsi, %r13
 11284 46e6 7348     		jnc	.L769
  97:sieve_extend.c ****     return index;
 11285              		.loc 1 97 58 is_stmt 1 view .LVU4863
 11286              	.LVL929:
  97:sieve_extend.c ****     return index;
 11287              		.loc 1 97 63 is_stmt 0 view .LVU4864
 11288 46e8 488D7305 		leaq	5(%rbx), %rsi
 11289              	.LVL930:
  97:sieve_extend.c ****     return index;
 11290              		.loc 1 97 11 is_stmt 1 view .LVU4865
  97:sieve_extend.c ****     return index;
 11291              		.loc 1 97 21 is_stmt 0 view .LVU4866
 11292 46ec 4989F2   		movq	%rsi, %r10
 11293 46ef 49C1EA06 		shrq	$6, %r10
  97:sieve_extend.c ****     return index;
 11294              		.loc 1 97 12 view .LVU4867
 11295 46f3 4B8B14D7 		movq	(%r15,%r10,8), %rdx
  97:sieve_extend.c ****     return index;
 11296              		.loc 1 97 11 view .LVU4868
 11297 46f7 480FA3F2 		btq	%rsi, %rdx
 11298 46fb 7333     		jnc	.L769
  97:sieve_extend.c ****     return index;
 11299              		.loc 1 97 58 is_stmt 1 view .LVU4869
 11300              	.LVL931:
  97:sieve_extend.c ****     return index;
 11301              		.loc 1 97 63 is_stmt 0 view .LVU4870
 11302 46fd 488D7306 		leaq	6(%rbx), %rsi
 11303              	.LVL932:
  97:sieve_extend.c ****     return index;
 11304              		.loc 1 97 11 is_stmt 1 view .LVU4871
  97:sieve_extend.c ****     return index;
 11305              		.loc 1 97 21 is_stmt 0 view .LVU4872
 11306 4701 4889F5   		movq	%rsi, %rbp
 11307 4704 48C1ED06 		shrq	$6, %rbp
  97:sieve_extend.c ****     return index;
 11308              		.loc 1 97 12 view .LVU4873
 11309 4708 4D8B34EF 		movq	(%r15,%rbp,8), %r14
  97:sieve_extend.c ****     return index;
 11310              		.loc 1 97 11 view .LVU4874
 11311 470c 490FA3F6 		btq	%rsi, %r14
 11312 4710 731E     		jnc	.L769
GAS LISTING /tmp/ccmX4xFB.s 			page 324


  97:sieve_extend.c ****     return index;
 11313              		.loc 1 97 58 is_stmt 1 view .LVU4875
 11314              	.LVL933:
  97:sieve_extend.c ****     return index;
 11315              		.loc 1 97 63 is_stmt 0 view .LVU4876
 11316 4712 488D7307 		leaq	7(%rbx), %rsi
 11317              	.LVL934:
  97:sieve_extend.c ****     return index;
 11318              		.loc 1 97 11 is_stmt 1 view .LVU4877
  97:sieve_extend.c ****     return index;
 11319              		.loc 1 97 21 is_stmt 0 view .LVU4878
 11320 4716 4889F3   		movq	%rsi, %rbx
 11321 4719 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 11322              		.loc 1 97 12 view .LVU4879
 11323 471d 498B04DF 		movq	(%r15,%rbx,8), %rax
  97:sieve_extend.c ****     return index;
 11324              		.loc 1 97 11 view .LVU4880
 11325 4721 480FA3F0 		btq	%rsi, %rax
 11326 4725 0F824AFF 		jc	.L768
 11326      FFFF
 11327              	.LVL935:
 11328 472b 0F1F4400 		.p2align 4,,10
 11328      00
 11329              		.p2align 3
 11330              	.L769:
  98:sieve_extend.c ****     
 11331              		.loc 1 98 5 is_stmt 1 view .LVU4881
  98:sieve_extend.c ****     
 11332              		.loc 1 98 5 is_stmt 0 view .LVU4882
 11333              	.LBE661:
 11334              	.LBE662:
 730:sieve_extend.c ****     }
 11335              		.loc 1 730 9 is_stmt 1 view .LVU4883
 730:sieve_extend.c ****     }
 11336              		.loc 1 730 35 is_stmt 0 view .LVU4884
 11337 4730 488D5E01 		leaq	1(%rsi), %rbx
 730:sieve_extend.c ****     }
 11338              		.loc 1 730 15 view .LVU4885
 11339 4734 4889D9   		movq	%rbx, %rcx
 11340 4737 480FAFCE 		imulq	%rsi, %rcx
 11341              	.LVL936:
 730:sieve_extend.c ****     }
 11342              		.loc 1 730 15 view .LVU4886
 11343 473b 4801C9   		addq	%rcx, %rcx
 11344              	.LVL937:
 724:sieve_extend.c ****         step  = prime * 2 + 1;
 11345              		.loc 1 724 11 is_stmt 1 view .LVU4887
 11346 473e 4939C8   		cmpq	%rcx, %r8
 11347 4741 0F82DDF2 		jb	.L1550
 11347      FFFF
 11348              	.LVL938:
 11349              	.L778:
 725:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11350              		.loc 1 725 9 view .LVU4888
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11351              		.loc 1 726 12 is_stmt 0 view .LVU4889
GAS LISTING /tmp/ccmX4xFB.s 			page 325


 11352 4747 488B4424 		movq	8(%rsp), %rax
 11352      08
 725:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11353              		.loc 1 725 15 view .LVU4890
 11354 474c 4C8D6436 		leaq	1(%rsi,%rsi), %r12
 11354      01
 11355              	.LVL939:
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11356              		.loc 1 726 9 is_stmt 1 view .LVU4891
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11357              		.loc 1 726 12 is_stmt 0 view .LVU4892
 11358 4751 4839D8   		cmpq	%rbx, %rax
 11359 4754 720F     		jb	.L763
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11360              		.loc 1 726 41 is_stmt 1 view .LVU4893
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11361              		.loc 1 726 61 is_stmt 0 view .LVU4894
 11362 4756 4801F0   		addq	%rsi, %rax
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11363              		.loc 1 726 102 view .LVU4895
 11364 4759 31D2     		xorl	%edx, %edx
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11365              		.loc 1 726 69 view .LVU4896
 11366 475b 488D0C30 		leaq	(%rax,%rsi), %rcx
 11367              	.LVL940:
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11368              		.loc 1 726 102 view .LVU4897
 11369 475f 49F7F4   		divq	%r12
 11370              	.LVL941:
 726:sieve_extend.c ****         if (start + step * WORD_SIZE_counter > block_stop) break;
 11371              		.loc 1 726 47 view .LVU4898
 11372 4762 4829D1   		subq	%rdx, %rcx
 11373              	.LVL942:
 11374              	.L763:
 727:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 11375              		.loc 1 727 9 is_stmt 1 view .LVU4899
 727:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 11376              		.loc 1 727 26 is_stmt 0 view .LVU4900
 11377 4765 4D89E5   		movq	%r12, %r13
 11378 4768 49C1E506 		salq	$6, %r13
 11379 476c 31ED     		xorl	%ebp, %ebp
 11380 476e 4901CD   		addq	%rcx, %r13
 11381 4771 400F92C5 		setc	%bpl
 727:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 11382              		.loc 1 727 12 view .LVU4901
 11383 4775 4D39E8   		cmpq	%r13, %r8
 11384 4778 0F82A203 		jb	.L766
 11384      0000
 11385              	.LVL943:
 11386              	.LBB663:
 11387              	.LBB657:
 11388              	.LBB655:
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11389              		.loc 1 322 41 is_stmt 1 view .LVU4902
 322:sieve_extend.c ****         bitword_t mask = markmask(index);
 11390              		.loc 1 322 5 is_stmt 0 view .LVU4903
 11391 477e 4885ED   		testq	%rbp, %rbp
GAS LISTING /tmp/ccmX4xFB.s 			page 326


 11392 4781 0F85D6FE 		jne	.L777
 11392      FFFF
 11393              	.LBB653:
 11394              	.LBB649:
 11395              	.LBB645:
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 11396              		.loc 1 152 106 view .LVU4904
 11397 4787 488B7424 		movq	24(%rsp), %rsi
 11397      18
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 11398              		.loc 1 152 83 view .LVU4905
 11399 478c 4F8D14A4 		leaq	(%r12,%r12,4), %r10
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 11400              		.loc 1 152 106 view .LVU4906
 11401 4790 4889F7   		movq	%rsi, %rdi
 11402 4793 4C29D7   		subq	%r10, %rdi
 11403 4796 498D2CFF 		leaq	(%r15,%rdi,8), %rbp
 11404 479a 4C39D6   		cmpq	%r10, %rsi
 11405 479d 4D89E6   		movq	%r12, %r14
 11406 47a0 490F46EF 		cmovbe	%r15, %rbp
 158:sieve_extend.c ****        *index_ptr |= mask;
 11407              		.loc 1 158 17 view .LVU4907
 11408 47a4 4A8D14E5 		leaq	0(,%r12,8), %rdx
 11408      00000000 
 11409 47ac 49C1E203 		salq	$3, %r10
 11410 47b0 49C1E604 		salq	$4, %r14
 11411              		.p2align 4,,10
 11412 47b4 0F1F4000 		.p2align 3
 11413              	.L776:
 158:sieve_extend.c ****        *index_ptr |= mask;
 11414              		.loc 1 158 17 view .LVU4908
 11415              	.LBE645:
 11416              	.LBE649:
 323:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 11417              		.loc 1 323 9 is_stmt 1 view .LVU4909
 324:sieve_extend.c ****     }
 11418              		.loc 1 324 9 is_stmt 0 view .LVU4910
 11419 47b8 4889C8   		movq	%rcx, %rax
 11420 47bb 48C1E806 		shrq	$6, %rax
 11421              	.LBB650:
 11422              	.LBB646:
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 11423              		.loc 1 151 35 view .LVU4911
 11424 47bf 498D04C7 		leaq	(%r15,%rax,8), %rax
 11425              	.LBE646:
 11426              	.LBE650:
 323:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 11427              		.loc 1 323 19 view .LVU4912
 11428 47c3 C4C2F1F7 		shlx	%rcx, %r11, %rsi
 11428      F3
 11429              	.LVL944:
 324:sieve_extend.c ****     }
 11430              		.loc 1 324 9 is_stmt 1 view .LVU4913
 11431              	.LBB651:
 11432              	.LBI643:
 121:sieve_extend.c **** // #if __APPLE__
 11433              		.loc 1 121 20 view .LVU4914
GAS LISTING /tmp/ccmX4xFB.s 			page 327


 11434              	.LBB647:
 150:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 11435              		.loc 1 150 4 view .LVU4915
 151:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop
 11436              		.loc 1 151 4 view .LVU4916
 152:sieve_extend.c ****    register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range
 11437              		.loc 1 152 4 view .LVU4917
 153:sieve_extend.c **** 
 11438              		.loc 1 153 4 view .LVU4918
 156:sieve_extend.c ****        *index_ptr |= mask;
 11439              		.loc 1 156 4 view .LVU4919
 156:sieve_extend.c ****        *index_ptr |= mask;
 11440              		.loc 1 156 10 view .LVU4920
 11441 47c8 4839E8   		cmpq	%rbp, %rax
 11442 47cb 0F8317FE 		jnb	.L771
 11442      FFFF
 156:sieve_extend.c ****        *index_ptr |= mask;
 11443              		.loc 1 156 10 is_stmt 0 view .LVU4921
 11444 47d1 4A8D3C30 		leaq	(%rax,%r14), %rdi
 11445              	.L772:
 157:sieve_extend.c ****        index_ptr+=step;
 11446              		.loc 1 157 8 is_stmt 1 view .LVU4922
 157:sieve_extend.c ****        index_ptr+=step;
 11447              		.loc 1 157 19 is_stmt 0 view .LVU4923
 11448 47d5 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11449              		.loc 1 158 8 is_stmt 1 view .LVU4924
 11450              	.LVL945:
 159:sieve_extend.c ****        index_ptr+=step;
 11451              		.loc 1 159 8 view .LVU4925
 159:sieve_extend.c ****        index_ptr+=step;
 11452              		.loc 1 159 19 is_stmt 0 view .LVU4926
 11453 47d8 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11454              		.loc 1 160 8 is_stmt 1 view .LVU4927
 11455              	.LVL946:
 161:sieve_extend.c ****        index_ptr+=step;
 11456              		.loc 1 161 8 view .LVU4928
 161:sieve_extend.c ****        index_ptr+=step;
 11457              		.loc 1 161 19 is_stmt 0 view .LVU4929
 11458 47dc 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11459              		.loc 1 162 8 is_stmt 1 view .LVU4930
 11460              	.LVL947:
 163:sieve_extend.c ****        index_ptr+=step;
 11461              		.loc 1 163 8 view .LVU4931
 163:sieve_extend.c ****        index_ptr+=step;
 11462              		.loc 1 163 19 is_stmt 0 view .LVU4932
 11463 47df 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11464              		.loc 1 164 8 is_stmt 1 view .LVU4933
 11465              	.LVL948:
 165:sieve_extend.c ****        index_ptr+=step;
 11466              		.loc 1 165 8 view .LVU4934
 11467 47e3 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11468              		.loc 1 165 19 is_stmt 0 view .LVU4935
GAS LISTING /tmp/ccmX4xFB.s 			page 328


 11469 47e6 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11470              		.loc 1 166 8 is_stmt 1 view .LVU4936
 11471 47ea 4C01D0   		addq	%r10, %rax
 11472              	.LVL949:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11473              		.loc 1 156 10 view .LVU4937
 11474 47ed 4839C5   		cmpq	%rax, %rbp
 11475 47f0 0F86F2FD 		jbe	.L771
 11475      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11476              		.loc 1 157 8 view .LVU4938
 157:sieve_extend.c ****        index_ptr+=step;
 11477              		.loc 1 157 19 is_stmt 0 view .LVU4939
 11478 47f6 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11479              		.loc 1 158 8 is_stmt 1 view .LVU4940
 11480              	.LVL950:
 159:sieve_extend.c ****        index_ptr+=step;
 11481              		.loc 1 159 8 view .LVU4941
 159:sieve_extend.c ****        index_ptr+=step;
 11482              		.loc 1 159 19 is_stmt 0 view .LVU4942
 11483 47f9 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11484              		.loc 1 160 8 is_stmt 1 view .LVU4943
 11485              	.LVL951:
 161:sieve_extend.c ****        index_ptr+=step;
 11486              		.loc 1 161 8 view .LVU4944
 161:sieve_extend.c ****        index_ptr+=step;
 11487              		.loc 1 161 19 is_stmt 0 view .LVU4945
 11488 47fd 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11489              		.loc 1 162 8 is_stmt 1 view .LVU4946
 11490              	.LVL952:
 163:sieve_extend.c ****        index_ptr+=step;
 11491              		.loc 1 163 8 view .LVU4947
 163:sieve_extend.c ****        index_ptr+=step;
 11492              		.loc 1 163 19 is_stmt 0 view .LVU4948
 11493 4800 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11494              		.loc 1 164 8 is_stmt 1 view .LVU4949
 11495              	.LVL953:
 165:sieve_extend.c ****        index_ptr+=step;
 11496              		.loc 1 165 8 view .LVU4950
 11497 4804 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11498              		.loc 1 165 19 is_stmt 0 view .LVU4951
 11499 4807 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11500              		.loc 1 166 8 is_stmt 1 view .LVU4952
 11501 480b 4C01D0   		addq	%r10, %rax
 11502              	.LVL954:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11503              		.loc 1 156 10 view .LVU4953
 11504 480e 4839C5   		cmpq	%rax, %rbp
 11505 4811 0F86D1FD 		jbe	.L771
 11505      FFFF
GAS LISTING /tmp/ccmX4xFB.s 			page 329


 157:sieve_extend.c ****        index_ptr+=step;
 11506              		.loc 1 157 8 view .LVU4954
 157:sieve_extend.c ****        index_ptr+=step;
 11507              		.loc 1 157 19 is_stmt 0 view .LVU4955
 11508 4817 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11509              		.loc 1 158 8 is_stmt 1 view .LVU4956
 11510              	.LVL955:
 159:sieve_extend.c ****        index_ptr+=step;
 11511              		.loc 1 159 8 view .LVU4957
 159:sieve_extend.c ****        index_ptr+=step;
 11512              		.loc 1 159 19 is_stmt 0 view .LVU4958
 11513 481a 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11514              		.loc 1 160 8 is_stmt 1 view .LVU4959
 11515              	.LVL956:
 161:sieve_extend.c ****        index_ptr+=step;
 11516              		.loc 1 161 8 view .LVU4960
 161:sieve_extend.c ****        index_ptr+=step;
 11517              		.loc 1 161 19 is_stmt 0 view .LVU4961
 11518 481e 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11519              		.loc 1 162 8 is_stmt 1 view .LVU4962
 11520              	.LVL957:
 163:sieve_extend.c ****        index_ptr+=step;
 11521              		.loc 1 163 8 view .LVU4963
 163:sieve_extend.c ****        index_ptr+=step;
 11522              		.loc 1 163 19 is_stmt 0 view .LVU4964
 11523 4821 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11524              		.loc 1 164 8 is_stmt 1 view .LVU4965
 11525              	.LVL958:
 165:sieve_extend.c ****        index_ptr+=step;
 11526              		.loc 1 165 8 view .LVU4966
 11527 4825 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11528              		.loc 1 165 19 is_stmt 0 view .LVU4967
 11529 4828 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11530              		.loc 1 166 8 is_stmt 1 view .LVU4968
 11531 482c 4C01D0   		addq	%r10, %rax
 11532              	.LVL959:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11533              		.loc 1 156 10 view .LVU4969
 11534 482f 4839C5   		cmpq	%rax, %rbp
 11535 4832 0F86B0FD 		jbe	.L771
 11535      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11536              		.loc 1 157 8 view .LVU4970
 157:sieve_extend.c ****        index_ptr+=step;
 11537              		.loc 1 157 19 is_stmt 0 view .LVU4971
 11538 4838 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11539              		.loc 1 158 8 is_stmt 1 view .LVU4972
 11540              	.LVL960:
 159:sieve_extend.c ****        index_ptr+=step;
 11541              		.loc 1 159 8 view .LVU4973
GAS LISTING /tmp/ccmX4xFB.s 			page 330


 159:sieve_extend.c ****        index_ptr+=step;
 11542              		.loc 1 159 19 is_stmt 0 view .LVU4974
 11543 483b 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11544              		.loc 1 160 8 is_stmt 1 view .LVU4975
 11545              	.LVL961:
 161:sieve_extend.c ****        index_ptr+=step;
 11546              		.loc 1 161 8 view .LVU4976
 161:sieve_extend.c ****        index_ptr+=step;
 11547              		.loc 1 161 19 is_stmt 0 view .LVU4977
 11548 483f 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11549              		.loc 1 162 8 is_stmt 1 view .LVU4978
 11550              	.LVL962:
 163:sieve_extend.c ****        index_ptr+=step;
 11551              		.loc 1 163 8 view .LVU4979
 163:sieve_extend.c ****        index_ptr+=step;
 11552              		.loc 1 163 19 is_stmt 0 view .LVU4980
 11553 4842 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11554              		.loc 1 164 8 is_stmt 1 view .LVU4981
 11555              	.LVL963:
 165:sieve_extend.c ****        index_ptr+=step;
 11556              		.loc 1 165 8 view .LVU4982
 11557 4846 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11558              		.loc 1 165 19 is_stmt 0 view .LVU4983
 11559 4849 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11560              		.loc 1 166 8 is_stmt 1 view .LVU4984
 11561 484d 4C01D0   		addq	%r10, %rax
 11562              	.LVL964:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11563              		.loc 1 156 10 view .LVU4985
 11564 4850 4839C5   		cmpq	%rax, %rbp
 11565 4853 0F868FFD 		jbe	.L771
 11565      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11566              		.loc 1 157 8 view .LVU4986
 157:sieve_extend.c ****        index_ptr+=step;
 11567              		.loc 1 157 19 is_stmt 0 view .LVU4987
 11568 4859 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11569              		.loc 1 158 8 is_stmt 1 view .LVU4988
 11570              	.LVL965:
 159:sieve_extend.c ****        index_ptr+=step;
 11571              		.loc 1 159 8 view .LVU4989
 159:sieve_extend.c ****        index_ptr+=step;
 11572              		.loc 1 159 19 is_stmt 0 view .LVU4990
 11573 485c 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11574              		.loc 1 160 8 is_stmt 1 view .LVU4991
 11575              	.LVL966:
 161:sieve_extend.c ****        index_ptr+=step;
 11576              		.loc 1 161 8 view .LVU4992
 161:sieve_extend.c ****        index_ptr+=step;
 11577              		.loc 1 161 19 is_stmt 0 view .LVU4993
GAS LISTING /tmp/ccmX4xFB.s 			page 331


 11578 4860 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11579              		.loc 1 162 8 is_stmt 1 view .LVU4994
 11580              	.LVL967:
 163:sieve_extend.c ****        index_ptr+=step;
 11581              		.loc 1 163 8 view .LVU4995
 163:sieve_extend.c ****        index_ptr+=step;
 11582              		.loc 1 163 19 is_stmt 0 view .LVU4996
 11583 4863 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11584              		.loc 1 164 8 is_stmt 1 view .LVU4997
 11585              	.LVL968:
 165:sieve_extend.c ****        index_ptr+=step;
 11586              		.loc 1 165 8 view .LVU4998
 11587 4867 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11588              		.loc 1 165 19 is_stmt 0 view .LVU4999
 11589 486a 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11590              		.loc 1 166 8 is_stmt 1 view .LVU5000
 11591 486e 4C01D0   		addq	%r10, %rax
 11592              	.LVL969:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11593              		.loc 1 156 10 view .LVU5001
 11594 4871 4839C5   		cmpq	%rax, %rbp
 11595 4874 0F866EFD 		jbe	.L771
 11595      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11596              		.loc 1 157 8 view .LVU5002
 157:sieve_extend.c ****        index_ptr+=step;
 11597              		.loc 1 157 19 is_stmt 0 view .LVU5003
 11598 487a 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11599              		.loc 1 158 8 is_stmt 1 view .LVU5004
 11600              	.LVL970:
 159:sieve_extend.c ****        index_ptr+=step;
 11601              		.loc 1 159 8 view .LVU5005
 159:sieve_extend.c ****        index_ptr+=step;
 11602              		.loc 1 159 19 is_stmt 0 view .LVU5006
 11603 487d 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11604              		.loc 1 160 8 is_stmt 1 view .LVU5007
 11605              	.LVL971:
 161:sieve_extend.c ****        index_ptr+=step;
 11606              		.loc 1 161 8 view .LVU5008
 161:sieve_extend.c ****        index_ptr+=step;
 11607              		.loc 1 161 19 is_stmt 0 view .LVU5009
 11608 4881 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11609              		.loc 1 162 8 is_stmt 1 view .LVU5010
 11610              	.LVL972:
 163:sieve_extend.c ****        index_ptr+=step;
 11611              		.loc 1 163 8 view .LVU5011
 163:sieve_extend.c ****        index_ptr+=step;
 11612              		.loc 1 163 19 is_stmt 0 view .LVU5012
 11613 4884 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccmX4xFB.s 			page 332


 11614              		.loc 1 164 8 is_stmt 1 view .LVU5013
 11615              	.LVL973:
 165:sieve_extend.c ****        index_ptr+=step;
 11616              		.loc 1 165 8 view .LVU5014
 11617 4888 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11618              		.loc 1 165 19 is_stmt 0 view .LVU5015
 11619 488b 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11620              		.loc 1 166 8 is_stmt 1 view .LVU5016
 11621 488f 4C01D0   		addq	%r10, %rax
 11622              	.LVL974:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11623              		.loc 1 156 10 view .LVU5017
 11624 4892 4839C5   		cmpq	%rax, %rbp
 11625 4895 0F864DFD 		jbe	.L771
 11625      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11626              		.loc 1 157 8 view .LVU5018
 157:sieve_extend.c ****        index_ptr+=step;
 11627              		.loc 1 157 19 is_stmt 0 view .LVU5019
 11628 489b 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11629              		.loc 1 158 8 is_stmt 1 view .LVU5020
 11630              	.LVL975:
 159:sieve_extend.c ****        index_ptr+=step;
 11631              		.loc 1 159 8 view .LVU5021
 159:sieve_extend.c ****        index_ptr+=step;
 11632              		.loc 1 159 19 is_stmt 0 view .LVU5022
 11633 489e 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11634              		.loc 1 160 8 is_stmt 1 view .LVU5023
 11635              	.LVL976:
 161:sieve_extend.c ****        index_ptr+=step;
 11636              		.loc 1 161 8 view .LVU5024
 161:sieve_extend.c ****        index_ptr+=step;
 11637              		.loc 1 161 19 is_stmt 0 view .LVU5025
 11638 48a2 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11639              		.loc 1 162 8 is_stmt 1 view .LVU5026
 11640              	.LVL977:
 163:sieve_extend.c ****        index_ptr+=step;
 11641              		.loc 1 163 8 view .LVU5027
 163:sieve_extend.c ****        index_ptr+=step;
 11642              		.loc 1 163 19 is_stmt 0 view .LVU5028
 11643 48a5 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11644              		.loc 1 164 8 is_stmt 1 view .LVU5029
 11645              	.LVL978:
 165:sieve_extend.c ****        index_ptr+=step;
 11646              		.loc 1 165 8 view .LVU5030
 11647 48a9 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11648              		.loc 1 165 19 is_stmt 0 view .LVU5031
 11649 48ac 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11650              		.loc 1 166 8 is_stmt 1 view .LVU5032
GAS LISTING /tmp/ccmX4xFB.s 			page 333


 11651 48b0 4C01D0   		addq	%r10, %rax
 11652              	.LVL979:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11653              		.loc 1 156 10 view .LVU5033
 11654 48b3 4839C5   		cmpq	%rax, %rbp
 11655 48b6 0F862CFD 		jbe	.L771
 11655      FFFF
 157:sieve_extend.c ****        index_ptr+=step;
 11656              		.loc 1 157 8 view .LVU5034
 157:sieve_extend.c ****        index_ptr+=step;
 11657              		.loc 1 157 19 is_stmt 0 view .LVU5035
 11658 48bc 480930   		orq	%rsi, (%rax)
 158:sieve_extend.c ****        *index_ptr |= mask;
 11659              		.loc 1 158 8 is_stmt 1 view .LVU5036
 11660              	.LVL980:
 159:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 159 8 view .LVU5037
 159:sieve_extend.c ****        index_ptr+=step;
 11662              		.loc 1 159 19 is_stmt 0 view .LVU5038
 11663 48bf 48093410 		orq	%rsi, (%rax,%rdx)
 160:sieve_extend.c ****        *index_ptr |= mask;
 11664              		.loc 1 160 8 is_stmt 1 view .LVU5039
 11665              	.LVL981:
 161:sieve_extend.c ****        index_ptr+=step;
 11666              		.loc 1 161 8 view .LVU5040
 161:sieve_extend.c ****        index_ptr+=step;
 11667              		.loc 1 161 19 is_stmt 0 view .LVU5041
 11668 48c3 480937   		orq	%rsi, (%rdi)
 162:sieve_extend.c ****        *index_ptr |= mask;
 11669              		.loc 1 162 8 is_stmt 1 view .LVU5042
 11670              	.LVL982:
 163:sieve_extend.c ****        index_ptr+=step;
 11671              		.loc 1 163 8 view .LVU5043
 163:sieve_extend.c ****        index_ptr+=step;
 11672              		.loc 1 163 19 is_stmt 0 view .LVU5044
 11673 48c6 48093417 		orq	%rsi, (%rdi,%rdx)
 164:sieve_extend.c ****        *index_ptr |= mask;
 11674              		.loc 1 164 8 is_stmt 1 view .LVU5045
 11675              	.LVL983:
 165:sieve_extend.c ****        index_ptr+=step;
 11676              		.loc 1 165 8 view .LVU5046
 11677 48ca 4C01D7   		addq	%r10, %rdi
 165:sieve_extend.c ****        index_ptr+=step;
 11678              		.loc 1 165 19 is_stmt 0 view .LVU5047
 11679 48cd 48093490 		orq	%rsi, (%rax,%rdx,4)
 166:sieve_extend.c ****    }
 11680              		.loc 1 166 8 is_stmt 1 view .LVU5048
 11681 48d1 4C01D0   		addq	%r10, %rax
 11682              	.LVL984:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11683              		.loc 1 156 10 view .LVU5049
 11684 48d4 4839C5   		cmpq	%rax, %rbp
 11685 48d7 0F87F8FE 		ja	.L772
 11685      FFFF
 11686 48dd E906FDFF 		jmp	.L771
 11686      FF
 11687              	.LVL985:
GAS LISTING /tmp/ccmX4xFB.s 			page 334


 11688              		.p2align 4,,10
 11689 48e2 660F1F44 		.p2align 3
 11689      0000
 11690              	.L1567:
 156:sieve_extend.c ****        *index_ptr |= mask;
 11691              		.loc 1 156 10 is_stmt 0 view .LVU5050
 11692              	.LBE647:
 11693              	.LBE651:
 11694              	.LBE653:
 11695              	.LBE655:
 11696              	.LBE657:
 11697              	.LBE663:
 11698              	.LBB664:
 11699              	.LBB665:
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11700              		.loc 1 256 41 is_stmt 1 view .LVU5051
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11701              		.loc 1 256 5 is_stmt 0 view .LVU5052
 11702 48e8 4939C8   		cmpq	%rcx, %r8
 11703 48eb 0F8217FB 		jb	.L1548
 11703      FFFF
 11704              	.LVL986:
 11705              	.L747:
 257:sieve_extend.c ****     }
 11706              		.loc 1 257 9 is_stmt 1 view .LVU5053
 257:sieve_extend.c ****     }
 11707              		.loc 1 257 36 is_stmt 0 view .LVU5054
 11708 48f1 4989CD   		movq	%rcx, %r13
 257:sieve_extend.c ****     }
 11709              		.loc 1 257 39 view .LVU5055
 11710 48f4 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 11710      FB
 257:sieve_extend.c ****     }
 11711              		.loc 1 257 36 view .LVU5056
 11712 48f9 49C1ED06 		shrq	$6, %r13
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11713              		.loc 1 256 68 view .LVU5057
 11714 48fd 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11715              		.loc 1 257 36 view .LVU5058
 11716 4900 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11717              		.loc 1 256 62 is_stmt 1 view .LVU5059
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11718              		.loc 1 256 41 view .LVU5060
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11719              		.loc 1 256 5 is_stmt 0 view .LVU5061
 11720 4904 4939C8   		cmpq	%rcx, %r8
 11721 4907 0F82FBFA 		jb	.L1548
 11721      FFFF
 257:sieve_extend.c ****     }
 11722              		.loc 1 257 9 is_stmt 1 view .LVU5062
 257:sieve_extend.c ****     }
 11723              		.loc 1 257 36 is_stmt 0 view .LVU5063
 11724 490d 4889CB   		movq	%rcx, %rbx
 257:sieve_extend.c ****     }
 11725              		.loc 1 257 39 view .LVU5064
GAS LISTING /tmp/ccmX4xFB.s 			page 335


 11726 4910 C442F1F7 		shlx	%rcx, %r11, %r12
 11726      E3
 257:sieve_extend.c ****     }
 11727              		.loc 1 257 36 view .LVU5065
 11728 4915 48C1EB06 		shrq	$6, %rbx
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11729              		.loc 1 256 68 view .LVU5066
 11730 4919 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11731              		.loc 1 257 36 view .LVU5067
 11732 491c 4D0924DF 		orq	%r12, (%r15,%rbx,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11733              		.loc 1 256 62 is_stmt 1 view .LVU5068
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11734              		.loc 1 256 41 view .LVU5069
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11735              		.loc 1 256 5 is_stmt 0 view .LVU5070
 11736 4920 4939C8   		cmpq	%rcx, %r8
 11737 4923 0F82DFFA 		jb	.L1548
 11737      FFFF
 257:sieve_extend.c ****     }
 11738              		.loc 1 257 9 is_stmt 1 view .LVU5071
 257:sieve_extend.c ****     }
 11739              		.loc 1 257 36 is_stmt 0 view .LVU5072
 11740 4929 4889C8   		movq	%rcx, %rax
 257:sieve_extend.c ****     }
 11741              		.loc 1 257 39 view .LVU5073
 11742 492c C4C2F1F7 		shlx	%rcx, %r11, %rdx
 11742      D3
 257:sieve_extend.c ****     }
 11743              		.loc 1 257 36 view .LVU5074
 11744 4931 48C1E806 		shrq	$6, %rax
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11745              		.loc 1 256 68 view .LVU5075
 11746 4935 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11747              		.loc 1 257 36 view .LVU5076
 11748 4938 490914C7 		orq	%rdx, (%r15,%rax,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11749              		.loc 1 256 62 is_stmt 1 view .LVU5077
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11750              		.loc 1 256 41 view .LVU5078
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11751              		.loc 1 256 5 is_stmt 0 view .LVU5079
 11752 493c 4939C8   		cmpq	%rcx, %r8
 11753 493f 0F82C3FA 		jb	.L1548
 11753      FFFF
 257:sieve_extend.c ****     }
 11754              		.loc 1 257 9 is_stmt 1 view .LVU5080
 257:sieve_extend.c ****     }
 11755              		.loc 1 257 36 is_stmt 0 view .LVU5081
 11756 4945 4989CE   		movq	%rcx, %r14
 257:sieve_extend.c ****     }
 11757              		.loc 1 257 39 view .LVU5082
 11758 4948 C442F1F7 		shlx	%rcx, %r11, %r13
 11758      EB
 257:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 336


 11759              		.loc 1 257 36 view .LVU5083
 11760 494d 49C1EE06 		shrq	$6, %r14
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11761              		.loc 1 256 68 view .LVU5084
 11762 4951 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11763              		.loc 1 257 36 view .LVU5085
 11764 4954 4F092CF7 		orq	%r13, (%r15,%r14,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11765              		.loc 1 256 62 is_stmt 1 view .LVU5086
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11766              		.loc 1 256 41 view .LVU5087
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11767              		.loc 1 256 5 is_stmt 0 view .LVU5088
 11768 4958 4939C8   		cmpq	%rcx, %r8
 11769 495b 0F82A7FA 		jb	.L1548
 11769      FFFF
 257:sieve_extend.c ****     }
 11770              		.loc 1 257 9 is_stmt 1 view .LVU5089
 257:sieve_extend.c ****     }
 11771              		.loc 1 257 36 is_stmt 0 view .LVU5090
 11772 4961 4889CF   		movq	%rcx, %rdi
 257:sieve_extend.c ****     }
 11773              		.loc 1 257 39 view .LVU5091
 11774 4964 C4C2F1F7 		shlx	%rcx, %r11, %rbx
 11774      DB
 257:sieve_extend.c ****     }
 11775              		.loc 1 257 36 view .LVU5092
 11776 4969 48C1EF06 		shrq	$6, %rdi
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11777              		.loc 1 256 68 view .LVU5093
 11778 496d 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11779              		.loc 1 257 36 view .LVU5094
 11780 4970 49091CFF 		orq	%rbx, (%r15,%rdi,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11781              		.loc 1 256 62 is_stmt 1 view .LVU5095
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11782              		.loc 1 256 41 view .LVU5096
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11783              		.loc 1 256 5 is_stmt 0 view .LVU5097
 11784 4974 4939C8   		cmpq	%rcx, %r8
 11785 4977 0F828BFA 		jb	.L1548
 11785      FFFF
 257:sieve_extend.c ****     }
 11786              		.loc 1 257 9 is_stmt 1 view .LVU5098
 257:sieve_extend.c ****     }
 11787              		.loc 1 257 36 is_stmt 0 view .LVU5099
 11788 497d 4989CC   		movq	%rcx, %r12
 257:sieve_extend.c ****     }
 11789              		.loc 1 257 39 view .LVU5100
 11790 4980 C4C2F1F7 		shlx	%rcx, %r11, %rax
 11790      C3
 257:sieve_extend.c ****     }
 11791              		.loc 1 257 36 view .LVU5101
 11792 4985 49C1EC06 		shrq	$6, %r12
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccmX4xFB.s 			page 337


 11793              		.loc 1 256 68 view .LVU5102
 11794 4989 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11795              		.loc 1 257 36 view .LVU5103
 11796 498c 4B0904E7 		orq	%rax, (%r15,%r12,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11797              		.loc 1 256 62 is_stmt 1 view .LVU5104
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11798              		.loc 1 256 41 view .LVU5105
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11799              		.loc 1 256 5 is_stmt 0 view .LVU5106
 11800 4990 4939C8   		cmpq	%rcx, %r8
 11801 4993 0F826FFA 		jb	.L1548
 11801      FFFF
 257:sieve_extend.c ****     }
 11802              		.loc 1 257 9 is_stmt 1 view .LVU5107
 257:sieve_extend.c ****     }
 11803              		.loc 1 257 36 is_stmt 0 view .LVU5108
 11804 4999 4989CE   		movq	%rcx, %r14
 257:sieve_extend.c ****     }
 11805              		.loc 1 257 39 view .LVU5109
 11806 499c C4C2F1F7 		shlx	%rcx, %r11, %rdx
 11806      D3
 257:sieve_extend.c ****     }
 11807              		.loc 1 257 36 view .LVU5110
 11808 49a1 49C1EE06 		shrq	$6, %r14
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11809              		.loc 1 256 68 view .LVU5111
 11810 49a5 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
 11811              		.loc 1 257 36 view .LVU5112
 11812 49a8 4B0914F7 		orq	%rdx, (%r15,%r14,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11813              		.loc 1 256 62 is_stmt 1 view .LVU5113
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11814              		.loc 1 256 41 view .LVU5114
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11815              		.loc 1 256 5 is_stmt 0 view .LVU5115
 11816 49ac 4939C8   		cmpq	%rcx, %r8
 11817 49af 0F8253FA 		jb	.L1548
 11817      FFFF
 257:sieve_extend.c ****     }
 11818              		.loc 1 257 9 is_stmt 1 view .LVU5116
 257:sieve_extend.c ****     }
 11819              		.loc 1 257 36 is_stmt 0 view .LVU5117
 11820 49b5 4989CD   		movq	%rcx, %r13
 257:sieve_extend.c ****     }
 11821              		.loc 1 257 39 view .LVU5118
 11822 49b8 C4C2F1F7 		shlx	%rcx, %r11, %rdi
 11822      FB
 257:sieve_extend.c ****     }
 11823              		.loc 1 257 36 view .LVU5119
 11824 49bd 49C1ED06 		shrq	$6, %r13
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11825              		.loc 1 256 68 view .LVU5120
 11826 49c1 4C01D1   		addq	%r10, %rcx
 257:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 338


 11827              		.loc 1 257 36 view .LVU5121
 11828 49c4 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11829              		.loc 1 256 62 is_stmt 1 view .LVU5122
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11830              		.loc 1 256 41 view .LVU5123
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11831              		.loc 1 256 5 is_stmt 0 view .LVU5124
 11832 49c8 4939C8   		cmpq	%rcx, %r8
 11833 49cb 0F8320FF 		jnb	.L747
 11833      FFFF
 11834 49d1 E932FAFF 		jmp	.L1548
 11834      FF
 11835              	.LVL987:
 11836 49d6 662E0F1F 		.p2align 4,,10
 11836      84000000 
 11836      0000
 11837              		.p2align 3
 11838              	.L756:
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11839              		.loc 1 256 5 view .LVU5125
 11840              	.LBE665:
 11841              	.LBE664:
 11842              	.LBB666:
 11843              	.LBB633:
 296:sieve_extend.c ****                 index2 += step2;
 11844              		.loc 1 296 17 is_stmt 1 view .LVU5126
 296:sieve_extend.c ****                 index2 += step2;
 11845              		.loc 1 296 45 is_stmt 0 view .LVU5127
 11846 49e0 4D89F2   		movq	%r14, %r10
 296:sieve_extend.c ****                 index2 += step2;
 11847              		.loc 1 296 48 view .LVU5128
 11848 49e3 C4C289F7 		shlx	%r14, %r11, %rcx
 11848      CB
 296:sieve_extend.c ****                 index2 += step2;
 11849              		.loc 1 296 45 view .LVU5129
 11850 49e8 49C1EA06 		shrq	$6, %r10
 297:sieve_extend.c ****             }
 11851              		.loc 1 297 24 view .LVU5130
 11852 49ec 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11853              		.loc 1 296 45 view .LVU5131
 11854 49ef 4B090CD7 		orq	%rcx, (%r15,%r10,8)
 297:sieve_extend.c ****             }
 11855              		.loc 1 297 17 is_stmt 1 view .LVU5132
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11856              		.loc 1 295 19 view .LVU5133
 11857 49f3 4D39F0   		cmpq	%r14, %r8
 11858 49f6 0F820CFA 		jb	.L1548
 11858      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11859              		.loc 1 296 17 view .LVU5134
 296:sieve_extend.c ****                 index2 += step2;
 11860              		.loc 1 296 45 is_stmt 0 view .LVU5135
 11861 49fc 4C89F3   		movq	%r14, %rbx
 296:sieve_extend.c ****                 index2 += step2;
 11862              		.loc 1 296 48 view .LVU5136
GAS LISTING /tmp/ccmX4xFB.s 			page 339


 11863 49ff C44289F7 		shlx	%r14, %r11, %r13
 11863      EB
 296:sieve_extend.c ****                 index2 += step2;
 11864              		.loc 1 296 45 view .LVU5137
 11865 4a04 48C1EB06 		shrq	$6, %rbx
 297:sieve_extend.c ****             }
 11866              		.loc 1 297 24 view .LVU5138
 11867 4a08 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11868              		.loc 1 296 45 view .LVU5139
 11869 4a0b 4D092CDF 		orq	%r13, (%r15,%rbx,8)
 297:sieve_extend.c ****             }
 11870              		.loc 1 297 17 is_stmt 1 view .LVU5140
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11871              		.loc 1 295 19 view .LVU5141
 11872 4a0f 4D39F0   		cmpq	%r14, %r8
 11873 4a12 0F82F0F9 		jb	.L1548
 11873      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11874              		.loc 1 296 17 view .LVU5142
 296:sieve_extend.c ****                 index2 += step2;
 11875              		.loc 1 296 45 is_stmt 0 view .LVU5143
 11876 4a18 4C89F7   		movq	%r14, %rdi
 296:sieve_extend.c ****                 index2 += step2;
 11877              		.loc 1 296 48 view .LVU5144
 11878 4a1b C4C289F7 		shlx	%r14, %r11, %rdx
 11878      D3
 296:sieve_extend.c ****                 index2 += step2;
 11879              		.loc 1 296 45 view .LVU5145
 11880 4a20 48C1EF06 		shrq	$6, %rdi
 297:sieve_extend.c ****             }
 11881              		.loc 1 297 24 view .LVU5146
 11882 4a24 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11883              		.loc 1 296 45 view .LVU5147
 11884 4a27 490914FF 		orq	%rdx, (%r15,%rdi,8)
 297:sieve_extend.c ****             }
 11885              		.loc 1 297 17 is_stmt 1 view .LVU5148
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11886              		.loc 1 295 19 view .LVU5149
 11887 4a2b 4D39F0   		cmpq	%r14, %r8
 11888 4a2e 0F82D4F9 		jb	.L1548
 11888      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11889              		.loc 1 296 17 view .LVU5150
 296:sieve_extend.c ****                 index2 += step2;
 11890              		.loc 1 296 45 is_stmt 0 view .LVU5151
 11891 4a34 4C89F0   		movq	%r14, %rax
 296:sieve_extend.c ****                 index2 += step2;
 11892              		.loc 1 296 48 view .LVU5152
 11893 4a37 C44289F7 		shlx	%r14, %r11, %r10
 11893      D3
 296:sieve_extend.c ****                 index2 += step2;
 11894              		.loc 1 296 45 view .LVU5153
 11895 4a3c 48C1E806 		shrq	$6, %rax
 297:sieve_extend.c ****             }
 11896              		.loc 1 297 24 view .LVU5154
GAS LISTING /tmp/ccmX4xFB.s 			page 340


 11897 4a40 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11898              		.loc 1 296 45 view .LVU5155
 11899 4a43 4D0914C7 		orq	%r10, (%r15,%rax,8)
 297:sieve_extend.c ****             }
 11900              		.loc 1 297 17 is_stmt 1 view .LVU5156
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11901              		.loc 1 295 19 view .LVU5157
 11902 4a47 4D39F0   		cmpq	%r14, %r8
 11903 4a4a 0F82B8F9 		jb	.L1548
 11903      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11904              		.loc 1 296 17 view .LVU5158
 296:sieve_extend.c ****                 index2 += step2;
 11905              		.loc 1 296 45 is_stmt 0 view .LVU5159
 11906 4a50 4C89F3   		movq	%r14, %rbx
 296:sieve_extend.c ****                 index2 += step2;
 11907              		.loc 1 296 48 view .LVU5160
 11908 4a53 C4C289F7 		shlx	%r14, %r11, %rcx
 11908      CB
 296:sieve_extend.c ****                 index2 += step2;
 11909              		.loc 1 296 45 view .LVU5161
 11910 4a58 48C1EB06 		shrq	$6, %rbx
 297:sieve_extend.c ****             }
 11911              		.loc 1 297 24 view .LVU5162
 11912 4a5c 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11913              		.loc 1 296 45 view .LVU5163
 11914 4a5f 49090CDF 		orq	%rcx, (%r15,%rbx,8)
 297:sieve_extend.c ****             }
 11915              		.loc 1 297 17 is_stmt 1 view .LVU5164
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11916              		.loc 1 295 19 view .LVU5165
 11917 4a63 4D39F0   		cmpq	%r14, %r8
 11918 4a66 0F829CF9 		jb	.L1548
 11918      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11919              		.loc 1 296 17 view .LVU5166
 296:sieve_extend.c ****                 index2 += step2;
 11920              		.loc 1 296 45 is_stmt 0 view .LVU5167
 11921 4a6c 4D89F5   		movq	%r14, %r13
 296:sieve_extend.c ****                 index2 += step2;
 11922              		.loc 1 296 48 view .LVU5168
 11923 4a6f C4C289F7 		shlx	%r14, %r11, %rdi
 11923      FB
 296:sieve_extend.c ****                 index2 += step2;
 11924              		.loc 1 296 45 view .LVU5169
 11925 4a74 49C1ED06 		shrq	$6, %r13
 297:sieve_extend.c ****             }
 11926              		.loc 1 297 24 view .LVU5170
 11927 4a78 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11928              		.loc 1 296 45 view .LVU5171
 11929 4a7b 4B093CEF 		orq	%rdi, (%r15,%r13,8)
 297:sieve_extend.c ****             }
 11930              		.loc 1 297 17 is_stmt 1 view .LVU5172
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
GAS LISTING /tmp/ccmX4xFB.s 			page 341


 11931              		.loc 1 295 19 view .LVU5173
 11932 4a7f 4D39F0   		cmpq	%r14, %r8
 11933 4a82 0F8280F9 		jb	.L1548
 11933      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11934              		.loc 1 296 17 view .LVU5174
 296:sieve_extend.c ****                 index2 += step2;
 11935              		.loc 1 296 45 is_stmt 0 view .LVU5175
 11936 4a88 4C89F2   		movq	%r14, %rdx
 296:sieve_extend.c ****                 index2 += step2;
 11937              		.loc 1 296 48 view .LVU5176
 11938 4a8b C4C289F7 		shlx	%r14, %r11, %rax
 11938      C3
 296:sieve_extend.c ****                 index2 += step2;
 11939              		.loc 1 296 45 view .LVU5177
 11940 4a90 48C1EA06 		shrq	$6, %rdx
 297:sieve_extend.c ****             }
 11941              		.loc 1 297 24 view .LVU5178
 11942 4a94 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11943              		.loc 1 296 45 view .LVU5179
 11944 4a97 490904D7 		orq	%rax, (%r15,%rdx,8)
 297:sieve_extend.c ****             }
 11945              		.loc 1 297 17 is_stmt 1 view .LVU5180
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11946              		.loc 1 295 19 view .LVU5181
 11947 4a9b 4D39F0   		cmpq	%r14, %r8
 11948 4a9e 0F8264F9 		jb	.L1548
 11948      FFFF
 296:sieve_extend.c ****                 index2 += step2;
 11949              		.loc 1 296 17 view .LVU5182
 296:sieve_extend.c ****                 index2 += step2;
 11950              		.loc 1 296 45 is_stmt 0 view .LVU5183
 11951 4aa4 4D89F2   		movq	%r14, %r10
 296:sieve_extend.c ****                 index2 += step2;
 11952              		.loc 1 296 48 view .LVU5184
 11953 4aa7 C4C289F7 		shlx	%r14, %r11, %rbx
 11953      DB
 296:sieve_extend.c ****                 index2 += step2;
 11954              		.loc 1 296 45 view .LVU5185
 11955 4aac 49C1EA06 		shrq	$6, %r10
 297:sieve_extend.c ****             }
 11956              		.loc 1 297 24 view .LVU5186
 11957 4ab0 4D01E6   		addq	%r12, %r14
 296:sieve_extend.c ****                 index2 += step2;
 11958              		.loc 1 296 45 view .LVU5187
 11959 4ab3 4B091CD7 		orq	%rbx, (%r15,%r10,8)
 297:sieve_extend.c ****             }
 11960              		.loc 1 297 17 is_stmt 1 view .LVU5188
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11961              		.loc 1 295 19 view .LVU5189
 11962 4ab7 4D39F0   		cmpq	%r14, %r8
 11963 4aba 0F8320FF 		jnb	.L756
 11963      FFFF
 11964 4ac0 E943F9FF 		jmp	.L1548
 11964      FF
 11965              	.LVL988:
GAS LISTING /tmp/ccmX4xFB.s 			page 342


 11966              		.p2align 4,,10
 11967 4ac5 0F1F00   		.p2align 3
 11968              	.L1570:
 295:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 11969              		.loc 1 295 19 is_stmt 0 view .LVU5190
 11970              	.LBE633:
 11971              	.LBE666:
 11972              	.LBB667:
 11973              	.LBB658:
 11974              	.LBB656:
 11975              	.LBB654:
 11976              	.LBB652:
 11977              	.LBB648:
 175:sieve_extend.c ****    }
 11978              		.loc 1 175 7 is_stmt 1 view .LVU5191
 175:sieve_extend.c ****    }
 11979              		.loc 1 175 32 is_stmt 0 view .LVU5192
 11980 4ac8 48237424 		andq	16(%rsp), %rsi
 11980      10
 11981              	.LVL989:
 175:sieve_extend.c ****    }
 11982              		.loc 1 175 23 view .LVU5193
 11983 4acd 490931   		orq	%rsi, (%r9)
 11984 4ad0 E97CFBFF 		jmp	.L775
 11984      FF
 11985              	.LVL990:
 11986              		.p2align 4,,10
 11987 4ad5 0F1F00   		.p2align 3
 11988              	.L749:
 175:sieve_extend.c ****    }
 11989              		.loc 1 175 23 view .LVU5194
 11990              	.LBE648:
 11991              	.LBE652:
 11992              	.LBE654:
 11993              	.LBE656:
 11994              	.LBE658:
 11995              	.LBE667:
 11996              	.LBB668:
 11997              	.LBB637:
  98:sieve_extend.c ****     
 11998              		.loc 1 98 5 is_stmt 1 view .LVU5195
  98:sieve_extend.c ****     
 11999              		.loc 1 98 5 is_stmt 0 view .LVU5196
 12000              	.LBE637:
 12001              	.LBE668:
 721:sieve_extend.c ****     }
 12002              		.loc 1 721 9 is_stmt 1 view .LVU5197
 721:sieve_extend.c ****     }
 12003              		.loc 1 721 35 is_stmt 0 view .LVU5198
 12004 4ad8 488D5E01 		leaq	1(%rsi), %rbx
 12005 4adc 4C8D1436 		leaq	(%rsi,%rsi), %r10
 12006              	.LVL991:
 721:sieve_extend.c ****     }
 12007              		.loc 1 721 15 view .LVU5199
 12008 4ae0 4889D9   		movq	%rbx, %rcx
 12009 4ae3 490FAFCA 		imulq	%r10, %rcx
 12010              	.LVL992:
GAS LISTING /tmp/ccmX4xFB.s 			page 343


 708:sieve_extend.c ****         step  = prime * 2 + 1;
 12011              		.loc 1 708 11 is_stmt 1 view .LVU5200
 12012 4ae7 4939C8   		cmpq	%rcx, %r8
 12013 4aea 0F8234EF 		jb	.L1550
 12013      FFFF
 709:sieve_extend.c ****         if (step > 64) break;
 12014              		.loc 1 709 9 view .LVU5201
 709:sieve_extend.c ****         if (step > 64) break;
 12015              		.loc 1 709 15 is_stmt 0 view .LVU5202
 12016 4af0 49FFC2   		incq	%r10
 12017              	.LVL993:
 710:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12018              		.loc 1 710 9 is_stmt 1 view .LVU5203
 710:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12019              		.loc 1 710 12 is_stmt 0 view .LVU5204
 12020 4af3 4983FA40 		cmpq	$64, %r10
 12021 4af7 0F868BF3 		jbe	.L722
 12021      FFFF
 12022 4afd E945FCFF 		jmp	.L778
 12022      FF
 12023              	.LVL994:
 12024              		.p2align 4,,10
 12025 4b02 660F1F44 		.p2align 3
 12025      0000
 12026              	.L744:
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12027              		.loc 1 717 41 is_stmt 1 view .LVU5205
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12028              		.loc 1 717 61 is_stmt 0 view .LVU5206
 12029 4b08 488D443D 		leaq	0(%rbp,%rdi), %rax
 12029      00
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12030              		.loc 1 717 102 view .LVU5207
 12031 4b0d 31D2     		xorl	%edx, %edx
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12032              		.loc 1 717 69 view .LVU5208
 12033 4b0f 4801C7   		addq	%rax, %rdi
 12034              	.LVL995:
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12035              		.loc 1 717 102 view .LVU5209
 12036 4b12 49F7F4   		divq	%r12
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12037              		.loc 1 717 47 view .LVU5210
 12038 4b15 4989FE   		movq	%rdi, %r14
 12039 4b18 4929D6   		subq	%rdx, %r14
 12040              	.LVL996:
 717:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12041              		.loc 1 717 47 view .LVU5211
 12042 4b1b E969F4FF 		jmp	.L745
 12042      FF
 12043              	.LVL997:
 12044              		.p2align 4,,10
 12045              		.p2align 3
 12046              	.L766:
 733:sieve_extend.c ****         step  = prime * 2 + 1;
 12047              		.loc 1 733 11 is_stmt 1 view .LVU5212
 12048 4b20 4C8B4C24 		movq	8(%rsp), %r9
GAS LISTING /tmp/ccmX4xFB.s 			page 344


 12048      08
 12049 4b25 4939C8   		cmpq	%rcx, %r8
 12050 4b28 0F82F6EE 		jb	.L1550
 12050      FFFF
 12051              	.LVL998:
 12052 4b2e 6690     		.p2align 4,,10
 12053              		.p2align 3
 12054              	.L770:
 734:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12055              		.loc 1 734 9 view .LVU5213
 734:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12056              		.loc 1 734 15 is_stmt 0 view .LVU5214
 12057 4b30 488D7C36 		leaq	1(%rsi,%rsi), %rdi
 12057      01
 12058              	.LVL999:
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12059              		.loc 1 735 9 is_stmt 1 view .LVU5215
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12060              		.loc 1 735 12 is_stmt 0 view .LVU5216
 12061 4b35 4939D9   		cmpq	%rbx, %r9
 12062 4b38 7210     		jb	.L1549
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12063              		.loc 1 735 41 is_stmt 1 view .LVU5217
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12064              		.loc 1 735 61 is_stmt 0 view .LVU5218
 12065 4b3a 498D0431 		leaq	(%r9,%rsi), %rax
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12066              		.loc 1 735 102 view .LVU5219
 12067 4b3e 31D2     		xorl	%edx, %edx
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12068              		.loc 1 735 69 view .LVU5220
 12069 4b40 488D0C30 		leaq	(%rax,%rsi), %rcx
 12070              	.LVL1000:
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12071              		.loc 1 735 102 view .LVU5221
 12072 4b44 48F7F7   		divq	%rdi
 12073              	.LVL1001:
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12074              		.loc 1 735 47 view .LVU5222
 12075 4b47 4829D1   		subq	%rdx, %rcx
 12076              	.LVL1002:
 12077              	.LBB669:
 12078              	.LBB670:
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12079              		.loc 1 256 41 is_stmt 1 view .LVU5223
 12080              	.L1549:
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12081              		.loc 1 256 41 view .LVU5224
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12082              		.loc 1 256 5 is_stmt 0 view .LVU5225
 12083 4b4a 4939C8   		cmpq	%rcx, %r8
 12084 4b4d 0F82CD00 		jb	.L783
 12084      0000
 12085              	.LVL1003:
 12086              	.L780:
 257:sieve_extend.c ****     }
 12087              		.loc 1 257 9 is_stmt 1 view .LVU5226
GAS LISTING /tmp/ccmX4xFB.s 			page 345


 257:sieve_extend.c ****     }
 12088              		.loc 1 257 36 is_stmt 0 view .LVU5227
 12089 4b53 4889CE   		movq	%rcx, %rsi
 257:sieve_extend.c ****     }
 12090              		.loc 1 257 39 view .LVU5228
 12091 4b56 C442F1F7 		shlx	%rcx, %r11, %r12
 12091      E3
 257:sieve_extend.c ****     }
 12092              		.loc 1 257 36 view .LVU5229
 12093 4b5b 48C1EE06 		shrq	$6, %rsi
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12094              		.loc 1 256 68 view .LVU5230
 12095 4b5f 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12096              		.loc 1 257 36 view .LVU5231
 12097 4b62 4D0924F7 		orq	%r12, (%r15,%rsi,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12098              		.loc 1 256 62 is_stmt 1 view .LVU5232
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12099              		.loc 1 256 41 view .LVU5233
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12100              		.loc 1 256 5 is_stmt 0 view .LVU5234
 12101 4b66 4939C8   		cmpq	%rcx, %r8
 12102 4b69 0F82B100 		jb	.L783
 12102      0000
 257:sieve_extend.c ****     }
 12103              		.loc 1 257 9 is_stmt 1 view .LVU5235
 257:sieve_extend.c ****     }
 12104              		.loc 1 257 36 is_stmt 0 view .LVU5236
 12105 4b6f 4989CD   		movq	%rcx, %r13
 257:sieve_extend.c ****     }
 12106              		.loc 1 257 39 view .LVU5237
 12107 4b72 C442F1F7 		shlx	%rcx, %r11, %r10
 12107      D3
 257:sieve_extend.c ****     }
 12108              		.loc 1 257 36 view .LVU5238
 12109 4b77 49C1ED06 		shrq	$6, %r13
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12110              		.loc 1 256 68 view .LVU5239
 12111 4b7b 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12112              		.loc 1 257 36 view .LVU5240
 12113 4b7e 4F0914EF 		orq	%r10, (%r15,%r13,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12114              		.loc 1 256 62 is_stmt 1 view .LVU5241
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12115              		.loc 1 256 41 view .LVU5242
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12116              		.loc 1 256 5 is_stmt 0 view .LVU5243
 12117 4b82 4939C8   		cmpq	%rcx, %r8
 12118 4b85 0F829500 		jb	.L783
 12118      0000
 257:sieve_extend.c ****     }
 12119              		.loc 1 257 9 is_stmt 1 view .LVU5244
 257:sieve_extend.c ****     }
 12120              		.loc 1 257 36 is_stmt 0 view .LVU5245
 12121 4b8b 4889CD   		movq	%rcx, %rbp
GAS LISTING /tmp/ccmX4xFB.s 			page 346


 257:sieve_extend.c ****     }
 12122              		.loc 1 257 39 view .LVU5246
 12123 4b8e C442F1F7 		shlx	%rcx, %r11, %r14
 12123      F3
 257:sieve_extend.c ****     }
 12124              		.loc 1 257 36 view .LVU5247
 12125 4b93 48C1ED06 		shrq	$6, %rbp
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12126              		.loc 1 256 68 view .LVU5248
 12127 4b97 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12128              		.loc 1 257 36 view .LVU5249
 12129 4b9a 4D0934EF 		orq	%r14, (%r15,%rbp,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12130              		.loc 1 256 62 is_stmt 1 view .LVU5250
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12131              		.loc 1 256 41 view .LVU5251
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12132              		.loc 1 256 5 is_stmt 0 view .LVU5252
 12133 4b9e 4939C8   		cmpq	%rcx, %r8
 12134 4ba1 727D     		jb	.L783
 257:sieve_extend.c ****     }
 12135              		.loc 1 257 9 is_stmt 1 view .LVU5253
 257:sieve_extend.c ****     }
 12136              		.loc 1 257 36 is_stmt 0 view .LVU5254
 12137 4ba3 4889C8   		movq	%rcx, %rax
 257:sieve_extend.c ****     }
 12138              		.loc 1 257 39 view .LVU5255
 12139 4ba6 C4C2F1F7 		shlx	%rcx, %r11, %rdx
 12139      D3
 257:sieve_extend.c ****     }
 12140              		.loc 1 257 36 view .LVU5256
 12141 4bab 48C1E806 		shrq	$6, %rax
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12142              		.loc 1 256 68 view .LVU5257
 12143 4baf 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12144              		.loc 1 257 36 view .LVU5258
 12145 4bb2 490914C7 		orq	%rdx, (%r15,%rax,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12146              		.loc 1 256 62 is_stmt 1 view .LVU5259
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12147              		.loc 1 256 41 view .LVU5260
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12148              		.loc 1 256 5 is_stmt 0 view .LVU5261
 12149 4bb6 4939C8   		cmpq	%rcx, %r8
 12150 4bb9 7265     		jb	.L783
 257:sieve_extend.c ****     }
 12151              		.loc 1 257 9 is_stmt 1 view .LVU5262
 257:sieve_extend.c ****     }
 12152              		.loc 1 257 36 is_stmt 0 view .LVU5263
 12153 4bbb 4889CE   		movq	%rcx, %rsi
 257:sieve_extend.c ****     }
 12154              		.loc 1 257 39 view .LVU5264
 12155 4bbe C442F1F7 		shlx	%rcx, %r11, %r12
 12155      E3
 257:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 347


 12156              		.loc 1 257 36 view .LVU5265
 12157 4bc3 48C1EE06 		shrq	$6, %rsi
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12158              		.loc 1 256 68 view .LVU5266
 12159 4bc7 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12160              		.loc 1 257 36 view .LVU5267
 12161 4bca 4D0924F7 		orq	%r12, (%r15,%rsi,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12162              		.loc 1 256 62 is_stmt 1 view .LVU5268
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12163              		.loc 1 256 41 view .LVU5269
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12164              		.loc 1 256 5 is_stmt 0 view .LVU5270
 12165 4bce 4939C8   		cmpq	%rcx, %r8
 12166 4bd1 724D     		jb	.L783
 257:sieve_extend.c ****     }
 12167              		.loc 1 257 9 is_stmt 1 view .LVU5271
 257:sieve_extend.c ****     }
 12168              		.loc 1 257 36 is_stmt 0 view .LVU5272
 12169 4bd3 4989CD   		movq	%rcx, %r13
 257:sieve_extend.c ****     }
 12170              		.loc 1 257 39 view .LVU5273
 12171 4bd6 C442F1F7 		shlx	%rcx, %r11, %r10
 12171      D3
 257:sieve_extend.c ****     }
 12172              		.loc 1 257 36 view .LVU5274
 12173 4bdb 49C1ED06 		shrq	$6, %r13
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12174              		.loc 1 256 68 view .LVU5275
 12175 4bdf 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12176              		.loc 1 257 36 view .LVU5276
 12177 4be2 4F0914EF 		orq	%r10, (%r15,%r13,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12178              		.loc 1 256 62 is_stmt 1 view .LVU5277
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12179              		.loc 1 256 41 view .LVU5278
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12180              		.loc 1 256 5 is_stmt 0 view .LVU5279
 12181 4be6 4939C8   		cmpq	%rcx, %r8
 12182 4be9 7235     		jb	.L783
 257:sieve_extend.c ****     }
 12183              		.loc 1 257 9 is_stmt 1 view .LVU5280
 257:sieve_extend.c ****     }
 12184              		.loc 1 257 36 is_stmt 0 view .LVU5281
 12185 4beb 4889CD   		movq	%rcx, %rbp
 257:sieve_extend.c ****     }
 12186              		.loc 1 257 39 view .LVU5282
 12187 4bee C442F1F7 		shlx	%rcx, %r11, %r14
 12187      F3
 257:sieve_extend.c ****     }
 12188              		.loc 1 257 36 view .LVU5283
 12189 4bf3 48C1ED06 		shrq	$6, %rbp
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12190              		.loc 1 256 68 view .LVU5284
 12191 4bf7 4801F9   		addq	%rdi, %rcx
GAS LISTING /tmp/ccmX4xFB.s 			page 348


 257:sieve_extend.c ****     }
 12192              		.loc 1 257 36 view .LVU5285
 12193 4bfa 4D0934EF 		orq	%r14, (%r15,%rbp,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12194              		.loc 1 256 62 is_stmt 1 view .LVU5286
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12195              		.loc 1 256 41 view .LVU5287
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12196              		.loc 1 256 5 is_stmt 0 view .LVU5288
 12197 4bfe 4939C8   		cmpq	%rcx, %r8
 12198 4c01 721D     		jb	.L783
 257:sieve_extend.c ****     }
 12199              		.loc 1 257 9 is_stmt 1 view .LVU5289
 257:sieve_extend.c ****     }
 12200              		.loc 1 257 36 is_stmt 0 view .LVU5290
 12201 4c03 4889C8   		movq	%rcx, %rax
 257:sieve_extend.c ****     }
 12202              		.loc 1 257 39 view .LVU5291
 12203 4c06 C442F1F7 		shlx	%rcx, %r11, %r12
 12203      E3
 257:sieve_extend.c ****     }
 12204              		.loc 1 257 36 view .LVU5292
 12205 4c0b 48C1E806 		shrq	$6, %rax
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12206              		.loc 1 256 68 view .LVU5293
 12207 4c0f 4801F9   		addq	%rdi, %rcx
 257:sieve_extend.c ****     }
 12208              		.loc 1 257 36 view .LVU5294
 12209 4c12 4D0924C7 		orq	%r12, (%r15,%rax,8)
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12210              		.loc 1 256 62 is_stmt 1 view .LVU5295
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12211              		.loc 1 256 41 view .LVU5296
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12212              		.loc 1 256 5 is_stmt 0 view .LVU5297
 12213 4c16 4939C8   		cmpq	%rcx, %r8
 12214 4c19 0F8334FF 		jnb	.L780
 12214      FFFF
 12215 4c1f 90       		.p2align 4,,10
 12216              		.p2align 3
 12217              	.L783:
 12218              	.LVL1004:
 256:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12219              		.loc 1 256 5 view .LVU5298
 12220              	.LBE670:
 12221              	.LBE669:
 12222              	.LBB671:
 12223              	.LBB672:
  97:sieve_extend.c ****     return index;
 12224              		.loc 1 97 11 is_stmt 1 view .LVU5299
  97:sieve_extend.c ****     return index;
 12225              		.loc 1 97 21 is_stmt 0 view .LVU5300
 12226 4c20 4889D9   		movq	%rbx, %rcx
 12227 4c23 48C1E906 		shrq	$6, %rcx
  97:sieve_extend.c ****     return index;
 12228              		.loc 1 97 12 view .LVU5301
 12229 4c27 498B3CCF 		movq	(%r15,%rcx,8), %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 349


 12230              	.LVL1005:
  97:sieve_extend.c ****     return index;
 12231              		.loc 1 97 12 view .LVU5302
 12232              	.LBE672:
 12233              	.LBE671:
 735:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 12234              		.loc 1 735 35 view .LVU5303
 12235 4c2b 4889DE   		movq	%rbx, %rsi
 12236              	.LBB674:
 12237              	.LBB673:
  97:sieve_extend.c ****     return index;
 12238              		.loc 1 97 11 view .LVU5304
 12239 4c2e 480FA3DF 		btq	%rbx, %rdi
 12240 4c32 0F83B800 		jnc	.L782
 12240      0000
 12241              	.LVL1006:
 12242              	.L781:
  97:sieve_extend.c ****     return index;
 12243              		.loc 1 97 58 is_stmt 1 view .LVU5305
  97:sieve_extend.c ****     return index;
 12244              		.loc 1 97 63 is_stmt 0 view .LVU5306
 12245 4c38 488D5E01 		leaq	1(%rsi), %rbx
 12246              	.LVL1007:
  97:sieve_extend.c ****     return index;
 12247              		.loc 1 97 21 view .LVU5307
 12248 4c3c 4889D8   		movq	%rbx, %rax
 12249 4c3f 48C1E806 		shrq	$6, %rax
  97:sieve_extend.c ****     return index;
 12250              		.loc 1 97 12 view .LVU5308
 12251 4c43 498B14C7 		movq	(%r15,%rax,8), %rdx
  97:sieve_extend.c ****     return index;
 12252              		.loc 1 97 63 view .LVU5309
 12253 4c47 4889DE   		movq	%rbx, %rsi
  97:sieve_extend.c ****     return index;
 12254              		.loc 1 97 11 is_stmt 1 view .LVU5310
 12255 4c4a 480FA3DA 		btq	%rbx, %rdx
 12256 4c4e 0F839C00 		jnc	.L782
 12256      0000
  97:sieve_extend.c ****     return index;
 12257              		.loc 1 97 58 view .LVU5311
 12258              	.LVL1008:
  97:sieve_extend.c ****     return index;
 12259              		.loc 1 97 63 is_stmt 0 view .LVU5312
 12260 4c54 48FFC6   		incq	%rsi
 12261              	.LVL1009:
  97:sieve_extend.c ****     return index;
 12262              		.loc 1 97 11 is_stmt 1 view .LVU5313
  97:sieve_extend.c ****     return index;
 12263              		.loc 1 97 21 is_stmt 0 view .LVU5314
 12264 4c57 4989F4   		movq	%rsi, %r12
 12265 4c5a 49C1EC06 		shrq	$6, %r12
  97:sieve_extend.c ****     return index;
 12266              		.loc 1 97 12 view .LVU5315
 12267 4c5e 4F8B2CE7 		movq	(%r15,%r12,8), %r13
  97:sieve_extend.c ****     return index;
 12268              		.loc 1 97 11 view .LVU5316
 12269 4c62 490FA3F5 		btq	%rsi, %r13
GAS LISTING /tmp/ccmX4xFB.s 			page 350


 12270 4c66 0F838400 		jnc	.L782
 12270      0000
  97:sieve_extend.c ****     return index;
 12271              		.loc 1 97 58 is_stmt 1 view .LVU5317
 12272              	.LVL1010:
  97:sieve_extend.c ****     return index;
 12273              		.loc 1 97 63 is_stmt 0 view .LVU5318
 12274 4c6c 488D7302 		leaq	2(%rbx), %rsi
 12275              	.LVL1011:
  97:sieve_extend.c ****     return index;
 12276              		.loc 1 97 11 is_stmt 1 view .LVU5319
  97:sieve_extend.c ****     return index;
 12277              		.loc 1 97 21 is_stmt 0 view .LVU5320
 12278 4c70 4989F2   		movq	%rsi, %r10
 12279 4c73 49C1EA06 		shrq	$6, %r10
  97:sieve_extend.c ****     return index;
 12280              		.loc 1 97 12 view .LVU5321
 12281 4c77 4B8B2CD7 		movq	(%r15,%r10,8), %rbp
  97:sieve_extend.c ****     return index;
 12282              		.loc 1 97 11 view .LVU5322
 12283 4c7b 480FA3F5 		btq	%rsi, %rbp
 12284 4c7f 736F     		jnc	.L782
  97:sieve_extend.c ****     return index;
 12285              		.loc 1 97 58 is_stmt 1 view .LVU5323
 12286              	.LVL1012:
  97:sieve_extend.c ****     return index;
 12287              		.loc 1 97 63 is_stmt 0 view .LVU5324
 12288 4c81 488D7303 		leaq	3(%rbx), %rsi
 12289              	.LVL1013:
  97:sieve_extend.c ****     return index;
 12290              		.loc 1 97 11 is_stmt 1 view .LVU5325
  97:sieve_extend.c ****     return index;
 12291              		.loc 1 97 21 is_stmt 0 view .LVU5326
 12292 4c85 4989F6   		movq	%rsi, %r14
 12293 4c88 49C1EE06 		shrq	$6, %r14
  97:sieve_extend.c ****     return index;
 12294              		.loc 1 97 12 view .LVU5327
 12295 4c8c 4B8B0CF7 		movq	(%r15,%r14,8), %rcx
  97:sieve_extend.c ****     return index;
 12296              		.loc 1 97 11 view .LVU5328
 12297 4c90 480FA3F1 		btq	%rsi, %rcx
 12298 4c94 735A     		jnc	.L782
  97:sieve_extend.c ****     return index;
 12299              		.loc 1 97 58 is_stmt 1 view .LVU5329
 12300              	.LVL1014:
  97:sieve_extend.c ****     return index;
 12301              		.loc 1 97 63 is_stmt 0 view .LVU5330
 12302 4c96 488D7304 		leaq	4(%rbx), %rsi
 12303              	.LVL1015:
  97:sieve_extend.c ****     return index;
 12304              		.loc 1 97 11 is_stmt 1 view .LVU5331
  97:sieve_extend.c ****     return index;
 12305              		.loc 1 97 21 is_stmt 0 view .LVU5332
 12306 4c9a 4889F7   		movq	%rsi, %rdi
 12307 4c9d 48C1EF06 		shrq	$6, %rdi
  97:sieve_extend.c ****     return index;
 12308              		.loc 1 97 12 view .LVU5333
GAS LISTING /tmp/ccmX4xFB.s 			page 351


 12309 4ca1 498B04FF 		movq	(%r15,%rdi,8), %rax
  97:sieve_extend.c ****     return index;
 12310              		.loc 1 97 11 view .LVU5334
 12311 4ca5 480FA3F0 		btq	%rsi, %rax
 12312 4ca9 7345     		jnc	.L782
  97:sieve_extend.c ****     return index;
 12313              		.loc 1 97 58 is_stmt 1 view .LVU5335
 12314              	.LVL1016:
  97:sieve_extend.c ****     return index;
 12315              		.loc 1 97 63 is_stmt 0 view .LVU5336
 12316 4cab 488D7305 		leaq	5(%rbx), %rsi
 12317              	.LVL1017:
  97:sieve_extend.c ****     return index;
 12318              		.loc 1 97 11 is_stmt 1 view .LVU5337
  97:sieve_extend.c ****     return index;
 12319              		.loc 1 97 21 is_stmt 0 view .LVU5338
 12320 4caf 4889F2   		movq	%rsi, %rdx
 12321 4cb2 48C1EA06 		shrq	$6, %rdx
  97:sieve_extend.c ****     return index;
 12322              		.loc 1 97 12 view .LVU5339
 12323 4cb6 4D8B24D7 		movq	(%r15,%rdx,8), %r12
  97:sieve_extend.c ****     return index;
 12324              		.loc 1 97 11 view .LVU5340
 12325 4cba 490FA3F4 		btq	%rsi, %r12
 12326 4cbe 7330     		jnc	.L782
  97:sieve_extend.c ****     return index;
 12327              		.loc 1 97 58 is_stmt 1 view .LVU5341
 12328              	.LVL1018:
  97:sieve_extend.c ****     return index;
 12329              		.loc 1 97 63 is_stmt 0 view .LVU5342
 12330 4cc0 488D7306 		leaq	6(%rbx), %rsi
 12331              	.LVL1019:
  97:sieve_extend.c ****     return index;
 12332              		.loc 1 97 11 is_stmt 1 view .LVU5343
  97:sieve_extend.c ****     return index;
 12333              		.loc 1 97 21 is_stmt 0 view .LVU5344
 12334 4cc4 4989F5   		movq	%rsi, %r13
 12335 4cc7 49C1ED06 		shrq	$6, %r13
  97:sieve_extend.c ****     return index;
 12336              		.loc 1 97 12 view .LVU5345
 12337 4ccb 4F8B14EF 		movq	(%r15,%r13,8), %r10
  97:sieve_extend.c ****     return index;
 12338              		.loc 1 97 11 view .LVU5346
 12339 4ccf 490FA3F2 		btq	%rsi, %r10
 12340 4cd3 731B     		jnc	.L782
  97:sieve_extend.c ****     return index;
 12341              		.loc 1 97 58 is_stmt 1 view .LVU5347
 12342              	.LVL1020:
  97:sieve_extend.c ****     return index;
 12343              		.loc 1 97 63 is_stmt 0 view .LVU5348
 12344 4cd5 488D7307 		leaq	7(%rbx), %rsi
 12345              	.LVL1021:
  97:sieve_extend.c ****     return index;
 12346              		.loc 1 97 11 is_stmt 1 view .LVU5349
  97:sieve_extend.c ****     return index;
 12347              		.loc 1 97 21 is_stmt 0 view .LVU5350
 12348 4cd9 4889F3   		movq	%rsi, %rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 352


 12349 4cdc 48C1EB06 		shrq	$6, %rbx
  97:sieve_extend.c ****     return index;
 12350              		.loc 1 97 12 view .LVU5351
 12351 4ce0 498B2CDF 		movq	(%r15,%rbx,8), %rbp
  97:sieve_extend.c ****     return index;
 12352              		.loc 1 97 11 view .LVU5352
 12353 4ce4 480FA3F5 		btq	%rsi, %rbp
 12354 4ce8 0F824AFF 		jc	.L781
 12354      FFFF
 12355              	.LVL1022:
 12356 4cee 6690     		.p2align 4,,10
 12357              		.p2align 3
 12358              	.L782:
  98:sieve_extend.c ****     
 12359              		.loc 1 98 5 is_stmt 1 view .LVU5353
  98:sieve_extend.c ****     
 12360              		.loc 1 98 5 is_stmt 0 view .LVU5354
 12361              	.LBE673:
 12362              	.LBE674:
 738:sieve_extend.c ****     }
 12363              		.loc 1 738 9 is_stmt 1 view .LVU5355
 738:sieve_extend.c ****     }
 12364              		.loc 1 738 35 is_stmt 0 view .LVU5356
 12365 4cf0 488D5E01 		leaq	1(%rsi), %rbx
 738:sieve_extend.c ****     }
 12366              		.loc 1 738 15 view .LVU5357
 12367 4cf4 4889D9   		movq	%rbx, %rcx
 12368 4cf7 480FAFCE 		imulq	%rsi, %rcx
 12369 4cfb 4801C9   		addq	%rcx, %rcx
 12370              	.LVL1023:
 733:sieve_extend.c ****         step  = prime * 2 + 1;
 12371              		.loc 1 733 11 is_stmt 1 view .LVU5358
 12372 4cfe 4939C8   		cmpq	%rcx, %r8
 12373 4d01 0F8329FE 		jnb	.L770
 12373      FFFF
 733:sieve_extend.c ****         step  = prime * 2 + 1;
 12374              		.loc 1 733 11 is_stmt 0 view .LVU5359
 12375 4d07 E918EDFF 		jmp	.L1550
 12375      FF
 12376              	.LVL1024:
 12377              	.L785:
 733:sieve_extend.c ****         step  = prime * 2 + 1;
 12378              		.loc 1 733 11 view .LVU5360
 12379 4d0c 4C894424 		movq	%r8, 48(%rsp)
 12379      30
 12380              	.LBE676:
 12381              	.LBE682:
 12382              	.LBB683:
 12383              	.LBB563:
 12384              	.LBB555:
 12385 4d11 488B7424 		movq	24(%rsp), %rsi
 12385      18
 12386 4d16 4C89EA   		movq	%r13, %rdx
 12387 4d19 E958E7FF 		jmp	.L666
 12387      FF
 12388              	.LVL1025:
 12389              	.L787:
GAS LISTING /tmp/ccmX4xFB.s 			page 353


 12390              	.LBB548:
 12391              	.LBB532:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 12392              		.loc 1 186 12 view .LVU5361
 12393 4d1e B9010000 		movl	$1, %ecx
 12393      00
 12394 4d23 E980E1FF 		jmp	.L672
 12394      FF
 12395              	.LVL1026:
 12396              	.L703:
 186:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) {
 12397              		.loc 1 186 12 view .LVU5362
 12398              	.LBE532:
 12399              	.LBE548:
 12400              	.LBE555:
 12401              	.LBE563:
 12402              	.LBE683:
 12403              	.LBB684:
 12404              	.LBB583:
 679:sieve_extend.c **** }
 12405              		.loc 1 679 37 is_stmt 1 view .LVU5363
 12406 4d28 E803C3FF 		call	extendSieve_aligned
 12406      FF
 12407              	.LVL1027:
 679:sieve_extend.c **** }
 12408              		.loc 1 679 37 is_stmt 0 view .LVU5364
 12409 4d2d E97EE7FF 		jmp	.L701
 12409      FF
 12410              	.LVL1028:
 12411              	.L1562:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12412              		.loc 1 677 37 is_stmt 1 view .LVU5365
 12413 4d32 E8F9C7FF 		call	extendSieve_shiftleft
 12413      FF
 12414              	.LVL1029:
 677:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12415              		.loc 1 677 37 is_stmt 0 view .LVU5366
 12416 4d37 E974E7FF 		jmp	.L701
 12416      FF
 12417              	.LBE583:
 12418              	.LBE684:
 12419              		.cfi_endproc
 12420              	.LFE74:
 12422 4d3c 0F1F4000 		.p2align 4
 12424              	tune_benchmark:
 12425              	.LVL1030:
 12426              	.LFB81:
 916:sieve_extend.c **** 
 917:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 12427              		.loc 1 917 94 is_stmt 1 view -0
 12428              		.cfi_startproc
 12429              		.loc 1 917 94 is_stmt 0 view .LVU5368
 12430 4d40 4154     		pushq	%r12
 12431              		.cfi_def_cfa_offset 16
 12432              		.cfi_offset 12, -16
 918:sieve_extend.c ****     counter_t passes = 0;
 919:sieve_extend.c ****     double elapsed_time = 0;
GAS LISTING /tmp/ccmX4xFB.s 			page 354


 920:sieve_extend.c ****     struct timespec start_time,end_time;
 921:sieve_extend.c ****     struct sieve_state *sieve_instance;
 922:sieve_extend.c **** 
 923:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 12433              		.loc 1 923 44 view .LVU5369
 12434 4d42 486BF658 		imulq	$88, %rsi, %rsi
 12435              	.LVL1031:
 918:sieve_extend.c ****     counter_t passes = 0;
 12436              		.loc 1 918 15 view .LVU5370
 12437 4d46 4531E4   		xorl	%r12d, %r12d
 917:sieve_extend.c ****     counter_t passes = 0;
 12438              		.loc 1 917 94 view .LVU5371
 12439 4d49 55       		pushq	%rbp
 12440              		.cfi_def_cfa_offset 24
 12441              		.cfi_offset 6, -24
 12442 4d4a 53       		pushq	%rbx
 12443              		.cfi_def_cfa_offset 32
 12444              		.cfi_offset 3, -32
 12445              		.loc 1 923 44 view .LVU5372
 12446 4d4b 488D1C37 		leaq	(%rdi,%rsi), %rbx
 924:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 925:sieve_extend.c **** 
 926:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 12447              		.loc 1 926 5 view .LVU5373
 12448 4d4f BF010000 		movl	$1, %edi
 12448      00
 12449              	.LVL1032:
 917:sieve_extend.c ****     counter_t passes = 0;
 12450              		.loc 1 917 94 view .LVU5374
 12451 4d54 4883EC30 		subq	$48, %rsp
 12452              		.cfi_def_cfa_offset 80
 917:sieve_extend.c ****     counter_t passes = 0;
 12453              		.loc 1 917 94 view .LVU5375
 12454 4d58 64488B04 		movq	%fs:40, %rax
 12454      25280000 
 12454      00
 12455 4d61 48894424 		movq	%rax, 40(%rsp)
 12455      28
 12456 4d66 31C0     		xorl	%eax, %eax
 918:sieve_extend.c ****     double elapsed_time = 0;
 12457              		.loc 1 918 5 is_stmt 1 view .LVU5376
 12458              	.LVL1033:
 919:sieve_extend.c ****     struct timespec start_time,end_time;
 12459              		.loc 1 919 5 view .LVU5377
 920:sieve_extend.c ****     struct sieve_state *sieve_instance;
 12460              		.loc 1 920 5 view .LVU5378
 921:sieve_extend.c **** 
 12461              		.loc 1 921 5 view .LVU5379
 923:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12462              		.loc 1 923 5 view .LVU5380
 924:sieve_extend.c **** 
 12463              		.loc 1 924 30 is_stmt 0 view .LVU5381
 12464 4d68 488B5328 		movq	40(%rbx), %rdx
 923:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12465              		.loc 1 923 29 view .LVU5382
 12466 4d6c 488B4320 		movq	32(%rbx), %rax
 12467              		.loc 1 926 5 view .LVU5383
GAS LISTING /tmp/ccmX4xFB.s 			page 355


 12468 4d70 4889E6   		movq	%rsp, %rsi
 923:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12469              		.loc 1 923 29 view .LVU5384
 12470 4d73 48890500 		movq	%rax, global_SMALLSTEP_FASTER(%rip)
 12470      000000
 924:sieve_extend.c **** 
 12471              		.loc 1 924 5 is_stmt 1 view .LVU5385
 924:sieve_extend.c **** 
 12472              		.loc 1 924 30 is_stmt 0 view .LVU5386
 12473 4d7a 48891500 		movq	%rdx, global_MEDIUMSTEP_FASTER(%rip)
 12473      000000
 12474              		.loc 1 926 5 is_stmt 1 view .LVU5387
 12475 4d81 E8000000 		call	clock_gettime@PLT
 12475      00
 12476              	.LVL1034:
 927:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 12477              		.loc 1 927 5 view .LVU5388
 12478              		.loc 1 927 11 view .LVU5389
 12479 4d86 C5F957C0 		vxorpd	%xmm0, %xmm0, %xmm0
 12480 4d8a C5F92F43 		vcomisd	56(%rbx), %xmm0
 12480      38
 12481 4d8f C57B1015 		vmovsd	.LC3(%rip), %xmm10
 12481      00000000 
 12482 4d97 0F879000 		ja	.L1573
 12482      0000
 12483 4d9d C5E057DB 		vxorps	%xmm3, %xmm3, %xmm3
 12484 4da1 EB76     		jmp	.L1572
 12485              	.LVL1035:
 12486              		.p2align 4,,10
 12487 4da3 0F1F4400 		.p2align 3
 12487      00
 12488              	.L1576:
 928:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12489              		.loc 1 928 9 view .LVU5390
 12490              		.loc 1 928 26 is_stmt 0 view .LVU5391
 12491 4da8 488B7308 		movq	8(%rbx), %rsi
 12492 4dac 488B3B   		movq	(%rbx), %rdi
 929:sieve_extend.c ****         delete_sieve(sieve_instance);
 930:sieve_extend.c ****         passes++;
 12493              		.loc 1 930 15 view .LVU5392
 12494 4daf 49FFC4   		incq	%r12
 12495              	.LVL1036:
 928:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12496              		.loc 1 928 26 view .LVU5393
 12497 4db2 E8E9DAFF 		call	sieve
 12497      FF
 12498              	.LVL1037:
 12499              	.LBB685:
 12500              	.LBB686:
  91:sieve_extend.c ****     free(sieve);
 12501              		.loc 1 91 5 view .LVU5394
 12502 4db7 488B38   		movq	(%rax), %rdi
 12503              	.LBE686:
 12504              	.LBE685:
 928:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12505              		.loc 1 928 26 view .LVU5395
 12506 4dba 4889C5   		movq	%rax, %rbp
GAS LISTING /tmp/ccmX4xFB.s 			page 356


 12507              	.LVL1038:
 929:sieve_extend.c ****         delete_sieve(sieve_instance);
 12508              		.loc 1 929 9 is_stmt 1 view .LVU5396
 12509              	.LBB688:
 12510              	.LBI685:
  90:sieve_extend.c ****     free(sieve->bitarray);
 12511              		.loc 1 90 13 view .LVU5397
 12512              	.LBB687:
  91:sieve_extend.c ****     free(sieve);
 12513              		.loc 1 91 5 view .LVU5398
 12514 4dbd E8000000 		call	free@PLT
 12514      00
 12515              	.LVL1039:
  92:sieve_extend.c **** }
 12516              		.loc 1 92 5 view .LVU5399
 12517 4dc2 4889EF   		movq	%rbp, %rdi
 12518 4dc5 E8000000 		call	free@PLT
 12518      00
 12519              	.LVL1040:
  92:sieve_extend.c **** }
 12520              		.loc 1 92 5 is_stmt 0 view .LVU5400
 12521              	.LBE687:
 12522              	.LBE688:
 12523              		.loc 1 930 9 is_stmt 1 view .LVU5401
 931:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 12524              		.loc 1 931 9 view .LVU5402
 12525 4dca 488D7424 		leaq	16(%rsp), %rsi
 12525      10
 12526 4dcf BF010000 		movl	$1, %edi
 12526      00
 12527 4dd4 E8000000 		call	clock_gettime@PLT
 12527      00
 12528              	.LVL1041:
 932:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 12529              		.loc 1 932 9 view .LVU5403
 12530              		.loc 1 932 58 is_stmt 0 view .LVU5404
 12531 4dd9 C5E057DB 		vxorps	%xmm3, %xmm3, %xmm3
 12532 4ddd C4E1E32A 		vcvtsi2sdq	24(%rsp), %xmm3, %xmm2
 12532      542418
 12533              		.loc 1 932 64 view .LVU5405
 12534 4de4 C4E1E32A 		vcvtsi2sdq	(%rsp), %xmm3, %xmm4
 12534      2424
 12535              		.loc 1 932 40 view .LVU5406
 12536 4dea C4E1E32A 		vcvtsi2sdq	16(%rsp), %xmm3, %xmm7
 12536      7C2410
 12537              		.loc 1 932 58 view .LVU5407
 12538 4df1 C5F928CA 		vmovapd	%xmm2, %xmm1
 12539              		.loc 1 932 104 view .LVU5408
 12540 4df5 C4E1E32A 		vcvtsi2sdq	8(%rsp), %xmm3, %xmm2
 12540      542408
 12541 4dfc C4E2D99B 		vfmsub132sd	.LC4(%rip), %xmm4, %xmm1
 12541      0D000000 
 12541      00
 12542 4e05 C4E2E9BD 		vfnmadd231sd	.LC4(%rip), %xmm2, %xmm7
 12542      3D000000 
 12542      00
 12543              		.loc 1 932 22 view .LVU5409
GAS LISTING /tmp/ccmX4xFB.s 			page 357


 12544 4e0e C5F358C7 		vaddsd	%xmm7, %xmm1, %xmm0
 12545              	.LVL1042:
 927:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12546              		.loc 1 927 11 is_stmt 1 view .LVU5410
 12547 4e12 C5F92F43 		vcomisd	56(%rbx), %xmm0
 12547      38
 12548 4e17 7706     		ja	.L1588
 12549              	.LVL1043:
 12550              	.L1572:
 927:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12551              		.loc 1 927 79 is_stmt 0 discriminator 1 view .LVU5411
 12552 4e19 4C396330 		cmpq	%r12, 48(%rbx)
 12553 4e1d 7789     		ja	.L1576
 12554              	.L1588:
 927:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12555              		.loc 1 927 79 discriminator 1 view .LVU5412
 12556 4e1f 4D85E4   		testq	%r12, %r12
 12557 4e22 7834     		js	.L1577
 927:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12558              		.loc 1 927 79 discriminator 1 view .LVU5413
 12559 4e24 C441E32A 		vcvtsi2sdq	%r12, %xmm3, %xmm9
 12559      CC
 12560              	.L1578:
 927:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 12561              		.loc 1 927 79 discriminator 1 view .LVU5414
 12562 4e29 C5335ED0 		vdivsd	%xmm0, %xmm9, %xmm10
 12563              	.LVL1044:
 12564              	.L1573:
 933:sieve_extend.c ****     }
 934:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 12565              		.loc 1 934 5 is_stmt 1 view .LVU5415
 12566              		.loc 1 934 47 is_stmt 0 view .LVU5416
 12567 4e2d 4C896340 		movq	%r12, 64(%rbx)
 935:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12568              		.loc 1 935 5 is_stmt 1 view .LVU5417
 936:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 12569              		.loc 1 936 5 view .LVU5418
 935:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12570              		.loc 1 935 53 is_stmt 0 view .LVU5419
 12571 4e31 C4417914 		vunpcklpd	%xmm10, %xmm0, %xmm11
 12571      DA
 12572 4e36 C578115B 		vmovups	%xmm11, 72(%rbx)
 12572      48
 937:sieve_extend.c **** }
 12573              		.loc 1 937 1 view .LVU5420
 12574 4e3b 488B4424 		movq	40(%rsp), %rax
 12574      28
 12575 4e40 64483304 		xorq	%fs:40, %rax
 12575      25280000 
 12575      00
 12576 4e49 7528     		jne	.L1589
 12577 4e4b 4883C430 		addq	$48, %rsp
 12578              		.cfi_remember_state
 12579              		.cfi_def_cfa_offset 32
 12580 4e4f 5B       		popq	%rbx
 12581              		.cfi_def_cfa_offset 24
 12582 4e50 5D       		popq	%rbp
GAS LISTING /tmp/ccmX4xFB.s 			page 358


 12583              		.cfi_def_cfa_offset 16
 12584 4e51 415C     		popq	%r12
 12585              		.cfi_def_cfa_offset 8
 12586 4e53 C3       		ret
 12587              	.LVL1045:
 12588              		.p2align 4,,10
 12589 4e54 0F1F4000 		.p2align 3
 12590              	.L1577:
 12591              		.cfi_restore_state
 12592              		.loc 1 937 1 view .LVU5421
 12593 4e58 4C89E1   		movq	%r12, %rcx
 12594 4e5b 4C89E7   		movq	%r12, %rdi
 12595 4e5e 48D1E9   		shrq	%rcx
 12596 4e61 83E701   		andl	$1, %edi
 12597 4e64 4809F9   		orq	%rdi, %rcx
 12598 4e67 C461E32A 		vcvtsi2sdq	%rcx, %xmm3, %xmm8
 12598      C1
 12599 4e6c C4413B58 		vaddsd	%xmm8, %xmm8, %xmm9
 12599      C8
 12600 4e71 EBB6     		jmp	.L1578
 12601              	.LVL1046:
 12602              	.L1589:
 12603              		.loc 1 937 1 view .LVU5422
 12604 4e73 E8000000 		call	__stack_chk_fail@PLT
 12604      00
 12605              	.LVL1047:
 12606              		.cfi_endproc
 12607              	.LFE81:
 12609 4e78 0F1F8400 		.p2align 4
 12609      00000000 
 12610              		.globl	shiftvec
 12612              	shiftvec:
 12613              	.LVL1048:
 12614              	.LFB65:
 388:sieve_extend.c ****     int i = 0;
 12615              		.loc 1 388 1 is_stmt 1 view -0
 12616              		.cfi_startproc
 388:sieve_extend.c ****     int i = 0;
 12617              		.loc 1 388 1 is_stmt 0 view .LVU5424
 12618 4e80 F30F1EFA 		endbr64
 389:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 12619              		.loc 1 389 5 is_stmt 1 view .LVU5425
 12620              	.LVL1049:
 391:sieve_extend.c ****     {
 12621              		.loc 1 391 5 view .LVU5426
 391:sieve_extend.c ****     {
 12622              		.loc 1 391 12 view .LVU5427
 391:sieve_extend.c ****     {
 12623              		.loc 1 391 5 is_stmt 0 view .LVU5428
 12624 4e84 83FA04   		cmpl	$4, %edx
 12625 4e87 0F8E8A03 		jle	.L1637
 12625      0000
 12626 4e8d 41BB4000 		movl	$64, %r11d
 12626      0000
 12627              	.LBB689:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12628              		.loc 1 394 25 view .LVU5429
GAS LISTING /tmp/ccmX4xFB.s 			page 359


 12629 4e93 C5FE6F1E 		vmovdqu	(%rsi), %ymm3
 12630 4e97 4489D8   		movl	%r11d, %eax
 12631 4e9a 29C8     		subl	%ecx, %eax
 12632 4e9c C4E1F96E 		vmovq	%rax, %xmm0
 12632      C0
 12633 4ea1 C5F96EC9 		vmovd	%ecx, %xmm1
 12634 4ea5 C4E3FD00 		vpermq	$85, %ymm3, %ymm2
 12634      D355
 12635              	.LBE689:
 12636              	.LBB690:
 396:sieve_extend.c ****     }
 12637              		.loc 1 396 34 view .LVU5430
 12638 4eab C5EDD3E0 		vpsrlq	%xmm0, %ymm2, %ymm4
 12639              	.LBE690:
 12640              	.LBB691:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12641              		.loc 1 394 34 view .LVU5431
 12642 4eaf C5E5F3E9 		vpsllq	%xmm1, %ymm3, %ymm5
 12643 4eb3 448D4AFB 		leal	-5(%rdx), %r9d
 12644 4eb7 41C1E902 		shrl	$2, %r9d
 12645 4ebb 4589CB   		movl	%r9d, %r11d
 12646              	.LBE691:
 12647              	.LBB692:
 396:sieve_extend.c ****     }
 12648              		.loc 1 396 22 view .LVU5432
 12649 4ebe C5DDEBF5 		vpor	%ymm5, %ymm4, %ymm6
 12650 4ec2 458D4101 		leal	1(%r9), %r8d
 12651 4ec6 4183E307 		andl	$7, %r11d
 12652              	.LVL1050:
 396:sieve_extend.c ****     }
 12653              		.loc 1 396 22 view .LVU5433
 12654              	.LBE692:
 12655              	.LBB693:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12656              		.loc 1 393 25 is_stmt 1 view .LVU5434
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12657              		.loc 1 394 13 view .LVU5435
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12658              		.loc 1 393 32 view .LVU5436
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12659              		.loc 1 393 25 view .LVU5437
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12660              		.loc 1 394 13 view .LVU5438
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12661              		.loc 1 393 32 view .LVU5439
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12662              		.loc 1 393 25 view .LVU5440
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12663              		.loc 1 394 13 view .LVU5441
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12664              		.loc 1 393 32 view .LVU5442
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12665              		.loc 1 393 25 view .LVU5443
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12666              		.loc 1 394 13 view .LVU5444
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12667              		.loc 1 393 32 view .LVU5445
GAS LISTING /tmp/ccmX4xFB.s 			page 360


 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12668              		.loc 1 393 25 view .LVU5446
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12669              		.loc 1 393 25 is_stmt 0 view .LVU5447
 12670              	.LBE693:
 12671              	.LBB694:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12672              		.loc 1 395 25 is_stmt 1 view .LVU5448
 396:sieve_extend.c ****     }
 12673              		.loc 1 396 13 view .LVU5449
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12674              		.loc 1 395 32 view .LVU5450
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12675              		.loc 1 395 25 view .LVU5451
 396:sieve_extend.c ****     }
 12676              		.loc 1 396 13 view .LVU5452
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12677              		.loc 1 395 32 view .LVU5453
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12678              		.loc 1 395 25 view .LVU5454
 396:sieve_extend.c ****     }
 12679              		.loc 1 396 13 view .LVU5455
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12680              		.loc 1 395 32 view .LVU5456
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12681              		.loc 1 395 25 view .LVU5457
 396:sieve_extend.c ****     }
 12682              		.loc 1 396 13 view .LVU5458
 396:sieve_extend.c ****     }
 12683              		.loc 1 396 22 is_stmt 0 view .LVU5459
 12684 4eca C5FE7F37 		vmovdqu	%ymm6, (%rdi)
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12685              		.loc 1 395 32 is_stmt 1 view .LVU5460
 12686              	.LVL1051:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12687              		.loc 1 395 25 view .LVU5461
 12688              	.LBE694:
 391:sieve_extend.c ****     {
 12689              		.loc 1 391 24 view .LVU5462
 391:sieve_extend.c ****     {
 12690              		.loc 1 391 12 view .LVU5463
 12691 4ece 41BA0100 		movl	$1, %r10d
 12691      0000
 12692 4ed4 B8200000 		movl	$32, %eax
 12692      00
 12693 4ed9 4183F801 		cmpl	$1, %r8d
 12694 4edd 0F863902 		jbe	.L1635
 12694      0000
 12695 4ee3 4585DB   		testl	%r11d, %r11d
 12696 4ee6 0F841201 		je	.L1593
 12696      0000
 12697 4eec 4183FB01 		cmpl	$1, %r11d
 12698 4ef0 0F84DB00 		je	.L1622
 12698      0000
 12699 4ef6 4183FB02 		cmpl	$2, %r11d
 12700 4efa 0F84AE00 		je	.L1623
 12700      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 361


 12701 4f00 4183FB03 		cmpl	$3, %r11d
 12702 4f04 0F848100 		je	.L1624
 12702      0000
 12703 4f0a 4183FB04 		cmpl	$4, %r11d
 12704 4f0e 7457     		je	.L1625
 12705 4f10 4183FB05 		cmpl	$5, %r11d
 12706 4f14 742E     		je	.L1626
 12707 4f16 4183FB06 		cmpl	$6, %r11d
 12708 4f1a 0F85CA02 		jne	.L1638
 12708      0000
 12709              	.L1627:
 12710              	.LVL1052:
 12711              	.LBB695:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12712              		.loc 1 393 25 view .LVU5464
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12713              		.loc 1 394 13 view .LVU5465
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12714              		.loc 1 393 32 view .LVU5466
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12715              		.loc 1 393 25 view .LVU5467
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12716              		.loc 1 394 13 view .LVU5468
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12717              		.loc 1 394 25 is_stmt 0 view .LVU5469
 12718 4f20 C57E6F24 		vmovdqu	(%rsi,%rax), %ymm12
 12718      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12719              		.loc 1 393 32 is_stmt 1 view .LVU5470
 12720              	.LVL1053:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12721              		.loc 1 393 25 view .LVU5471
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12722              		.loc 1 394 13 view .LVU5472
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12723              		.loc 1 393 32 view .LVU5473
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12724              		.loc 1 393 25 view .LVU5474
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12725              		.loc 1 394 13 view .LVU5475
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12726              		.loc 1 393 32 view .LVU5476
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12727              		.loc 1 393 25 view .LVU5477
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12728              		.loc 1 393 25 is_stmt 0 view .LVU5478
 12729              	.LBE695:
 12730              	.LBB696:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12731              		.loc 1 395 25 is_stmt 1 view .LVU5479
 396:sieve_extend.c ****     }
 12732              		.loc 1 396 13 view .LVU5480
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12733              		.loc 1 395 32 view .LVU5481
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12734              		.loc 1 395 25 view .LVU5482
 396:sieve_extend.c ****     }
GAS LISTING /tmp/ccmX4xFB.s 			page 362


 12735              		.loc 1 396 13 view .LVU5483
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12736              		.loc 1 395 32 view .LVU5484
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12737              		.loc 1 395 25 view .LVU5485
 396:sieve_extend.c ****     }
 12738              		.loc 1 396 13 view .LVU5486
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12739              		.loc 1 395 32 view .LVU5487
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12740              		.loc 1 395 25 view .LVU5488
 396:sieve_extend.c ****     }
 12741              		.loc 1 396 13 view .LVU5489
 12742 4f25 41FFC2   		incl	%r10d
 12743              	.LBE696:
 12744              	.LBB697:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12745              		.loc 1 394 25 is_stmt 0 view .LVU5490
 12746 4f28 C443FD00 		vpermq	$85, %ymm12, %ymm13
 12746      EC55
 12747              	.LBE697:
 12748              	.LBB698:
 396:sieve_extend.c ****     }
 12749              		.loc 1 396 34 view .LVU5491
 12750 4f2e C515D3F0 		vpsrlq	%xmm0, %ymm13, %ymm14
 12751              	.LBE698:
 12752              	.LBB699:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12753              		.loc 1 394 34 view .LVU5492
 12754 4f32 C51DF3F9 		vpsllq	%xmm1, %ymm12, %ymm15
 12755              	.LBE699:
 12756              	.LBB700:
 396:sieve_extend.c ****     }
 12757              		.loc 1 396 22 view .LVU5493
 12758 4f36 C4C10DEB 		vpor	%ymm15, %ymm14, %ymm3
 12758      DF
 12759 4f3b C5FE7F1C 		vmovdqu	%ymm3, (%rdi,%rax)
 12759      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12760              		.loc 1 395 32 is_stmt 1 view .LVU5494
 12761              	.LVL1054:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12762              		.loc 1 395 25 view .LVU5495
 12763              	.LBE700:
 391:sieve_extend.c ****     {
 12764              		.loc 1 391 24 view .LVU5496
 391:sieve_extend.c ****     {
 12765              		.loc 1 391 12 view .LVU5497
 12766 4f40 4883C020 		addq	$32, %rax
 12767              	.L1626:
 12768              	.LVL1055:
 12769              	.LBB701:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12770              		.loc 1 393 25 view .LVU5498
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12771              		.loc 1 394 13 view .LVU5499
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 363


 12772              		.loc 1 393 32 view .LVU5500
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12773              		.loc 1 393 25 view .LVU5501
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12774              		.loc 1 394 13 view .LVU5502
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12775              		.loc 1 394 25 is_stmt 0 view .LVU5503
 12776 4f44 C5FE6F24 		vmovdqu	(%rsi,%rax), %ymm4
 12776      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12777              		.loc 1 393 32 is_stmt 1 view .LVU5504
 12778              	.LVL1056:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12779              		.loc 1 393 25 view .LVU5505
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12780              		.loc 1 394 13 view .LVU5506
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12781              		.loc 1 393 32 view .LVU5507
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12782              		.loc 1 393 25 view .LVU5508
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12783              		.loc 1 394 13 view .LVU5509
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12784              		.loc 1 393 32 view .LVU5510
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12785              		.loc 1 393 25 view .LVU5511
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12786              		.loc 1 393 25 is_stmt 0 view .LVU5512
 12787              	.LBE701:
 12788              	.LBB702:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12789              		.loc 1 395 25 is_stmt 1 view .LVU5513
 396:sieve_extend.c ****     }
 12790              		.loc 1 396 13 view .LVU5514
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12791              		.loc 1 395 32 view .LVU5515
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12792              		.loc 1 395 25 view .LVU5516
 396:sieve_extend.c ****     }
 12793              		.loc 1 396 13 view .LVU5517
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12794              		.loc 1 395 32 view .LVU5518
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12795              		.loc 1 395 25 view .LVU5519
 396:sieve_extend.c ****     }
 12796              		.loc 1 396 13 view .LVU5520
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12797              		.loc 1 395 32 view .LVU5521
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12798              		.loc 1 395 25 view .LVU5522
 396:sieve_extend.c ****     }
 12799              		.loc 1 396 13 view .LVU5523
 12800 4f49 41FFC2   		incl	%r10d
 12801              	.LBE702:
 12802              	.LBB703:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12803              		.loc 1 394 25 is_stmt 0 view .LVU5524
GAS LISTING /tmp/ccmX4xFB.s 			page 364


 12804 4f4c C4E3FD00 		vpermq	$85, %ymm4, %ymm2
 12804      D455
 12805              	.LBE703:
 12806              	.LBB704:
 396:sieve_extend.c ****     }
 12807              		.loc 1 396 34 view .LVU5525
 12808 4f52 C5EDD3E8 		vpsrlq	%xmm0, %ymm2, %ymm5
 12809              	.LBE704:
 12810              	.LBB705:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12811              		.loc 1 394 34 view .LVU5526
 12812 4f56 C5DDF3F1 		vpsllq	%xmm1, %ymm4, %ymm6
 12813              	.LBE705:
 12814              	.LBB706:
 396:sieve_extend.c ****     }
 12815              		.loc 1 396 22 view .LVU5527
 12816 4f5a C5D5EBFE 		vpor	%ymm6, %ymm5, %ymm7
 12817 4f5e C5FE7F3C 		vmovdqu	%ymm7, (%rdi,%rax)
 12817      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12818              		.loc 1 395 32 is_stmt 1 view .LVU5528
 12819              	.LVL1057:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12820              		.loc 1 395 25 view .LVU5529
 12821              	.LBE706:
 391:sieve_extend.c ****     {
 12822              		.loc 1 391 24 view .LVU5530
 391:sieve_extend.c ****     {
 12823              		.loc 1 391 12 view .LVU5531
 12824 4f63 4883C020 		addq	$32, %rax
 12825              	.L1625:
 12826              	.LVL1058:
 12827              	.LBB707:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12828              		.loc 1 393 25 view .LVU5532
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12829              		.loc 1 394 13 view .LVU5533
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12830              		.loc 1 393 32 view .LVU5534
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12831              		.loc 1 393 25 view .LVU5535
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12832              		.loc 1 394 13 view .LVU5536
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12833              		.loc 1 394 25 is_stmt 0 view .LVU5537
 12834 4f67 C57E6F04 		vmovdqu	(%rsi,%rax), %ymm8
 12834      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12835              		.loc 1 393 32 is_stmt 1 view .LVU5538
 12836              	.LVL1059:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12837              		.loc 1 393 25 view .LVU5539
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12838              		.loc 1 394 13 view .LVU5540
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12839              		.loc 1 393 32 view .LVU5541
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 365


 12840              		.loc 1 393 25 view .LVU5542
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12841              		.loc 1 394 13 view .LVU5543
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12842              		.loc 1 393 32 view .LVU5544
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12843              		.loc 1 393 25 view .LVU5545
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12844              		.loc 1 393 25 is_stmt 0 view .LVU5546
 12845              	.LBE707:
 12846              	.LBB708:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12847              		.loc 1 395 25 is_stmt 1 view .LVU5547
 396:sieve_extend.c ****     }
 12848              		.loc 1 396 13 view .LVU5548
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12849              		.loc 1 395 32 view .LVU5549
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12850              		.loc 1 395 25 view .LVU5550
 396:sieve_extend.c ****     }
 12851              		.loc 1 396 13 view .LVU5551
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12852              		.loc 1 395 32 view .LVU5552
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12853              		.loc 1 395 25 view .LVU5553
 396:sieve_extend.c ****     }
 12854              		.loc 1 396 13 view .LVU5554
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12855              		.loc 1 395 32 view .LVU5555
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12856              		.loc 1 395 25 view .LVU5556
 396:sieve_extend.c ****     }
 12857              		.loc 1 396 13 view .LVU5557
 12858 4f6c 41FFC2   		incl	%r10d
 12859              	.LBE708:
 12860              	.LBB709:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12861              		.loc 1 394 25 is_stmt 0 view .LVU5558
 12862 4f6f C443FD00 		vpermq	$85, %ymm8, %ymm9
 12862      C855
 12863              	.LBE709:
 12864              	.LBB710:
 396:sieve_extend.c ****     }
 12865              		.loc 1 396 34 view .LVU5559
 12866 4f75 C535D3D0 		vpsrlq	%xmm0, %ymm9, %ymm10
 12867              	.LBE710:
 12868              	.LBB711:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12869              		.loc 1 394 34 view .LVU5560
 12870 4f79 C53DF3D9 		vpsllq	%xmm1, %ymm8, %ymm11
 12871              	.LBE711:
 12872              	.LBB712:
 396:sieve_extend.c ****     }
 12873              		.loc 1 396 22 view .LVU5561
 12874 4f7d C4412DEB 		vpor	%ymm11, %ymm10, %ymm12
 12874      E3
 12875 4f82 C57E7F24 		vmovdqu	%ymm12, (%rdi,%rax)
GAS LISTING /tmp/ccmX4xFB.s 			page 366


 12875      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12876              		.loc 1 395 32 is_stmt 1 view .LVU5562
 12877              	.LVL1060:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12878              		.loc 1 395 25 view .LVU5563
 12879              	.LBE712:
 391:sieve_extend.c ****     {
 12880              		.loc 1 391 24 view .LVU5564
 391:sieve_extend.c ****     {
 12881              		.loc 1 391 12 view .LVU5565
 12882 4f87 4883C020 		addq	$32, %rax
 12883              	.L1624:
 12884              	.LVL1061:
 12885              	.LBB713:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12886              		.loc 1 393 25 view .LVU5566
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12887              		.loc 1 394 13 view .LVU5567
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12888              		.loc 1 393 32 view .LVU5568
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12889              		.loc 1 393 25 view .LVU5569
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12890              		.loc 1 394 13 view .LVU5570
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12891              		.loc 1 394 25 is_stmt 0 view .LVU5571
 12892 4f8b C57E6F2C 		vmovdqu	(%rsi,%rax), %ymm13
 12892      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12893              		.loc 1 393 32 is_stmt 1 view .LVU5572
 12894              	.LVL1062:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12895              		.loc 1 393 25 view .LVU5573
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12896              		.loc 1 394 13 view .LVU5574
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12897              		.loc 1 393 32 view .LVU5575
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12898              		.loc 1 393 25 view .LVU5576
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12899              		.loc 1 394 13 view .LVU5577
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12900              		.loc 1 393 32 view .LVU5578
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12901              		.loc 1 393 25 view .LVU5579
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12902              		.loc 1 393 25 is_stmt 0 view .LVU5580
 12903              	.LBE713:
 12904              	.LBB714:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12905              		.loc 1 395 25 is_stmt 1 view .LVU5581
 396:sieve_extend.c ****     }
 12906              		.loc 1 396 13 view .LVU5582
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12907              		.loc 1 395 32 view .LVU5583
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccmX4xFB.s 			page 367


 12908              		.loc 1 395 25 view .LVU5584
 396:sieve_extend.c ****     }
 12909              		.loc 1 396 13 view .LVU5585
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12910              		.loc 1 395 32 view .LVU5586
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12911              		.loc 1 395 25 view .LVU5587
 396:sieve_extend.c ****     }
 12912              		.loc 1 396 13 view .LVU5588
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12913              		.loc 1 395 32 view .LVU5589
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12914              		.loc 1 395 25 view .LVU5590
 396:sieve_extend.c ****     }
 12915              		.loc 1 396 13 view .LVU5591
 12916 4f90 41FFC2   		incl	%r10d
 12917              	.LBE714:
 12918              	.LBB715:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12919              		.loc 1 394 25 is_stmt 0 view .LVU5592
 12920 4f93 C443FD00 		vpermq	$85, %ymm13, %ymm14
 12920      F555
 12921              	.LBE715:
 12922              	.LBB716:
 396:sieve_extend.c ****     }
 12923              		.loc 1 396 34 view .LVU5593
 12924 4f99 C50DD3F8 		vpsrlq	%xmm0, %ymm14, %ymm15
 12925              	.LBE716:
 12926              	.LBB717:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12927              		.loc 1 394 34 view .LVU5594
 12928 4f9d C595F3D9 		vpsllq	%xmm1, %ymm13, %ymm3
 12929              	.LBE717:
 12930              	.LBB718:
 396:sieve_extend.c ****     }
 12931              		.loc 1 396 22 view .LVU5595
 12932 4fa1 C585EBE3 		vpor	%ymm3, %ymm15, %ymm4
 12933 4fa5 C5FE7F24 		vmovdqu	%ymm4, (%rdi,%rax)
 12933      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12934              		.loc 1 395 32 is_stmt 1 view .LVU5596
 12935              	.LVL1063:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12936              		.loc 1 395 25 view .LVU5597
 12937              	.LBE718:
 391:sieve_extend.c ****     {
 12938              		.loc 1 391 24 view .LVU5598
 391:sieve_extend.c ****     {
 12939              		.loc 1 391 12 view .LVU5599
 12940 4faa 4883C020 		addq	$32, %rax
 12941              	.L1623:
 12942              	.LVL1064:
 12943              	.LBB719:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12944              		.loc 1 393 25 view .LVU5600
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12945              		.loc 1 394 13 view .LVU5601
GAS LISTING /tmp/ccmX4xFB.s 			page 368


 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12946              		.loc 1 393 32 view .LVU5602
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12947              		.loc 1 393 25 view .LVU5603
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12948              		.loc 1 394 13 view .LVU5604
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12949              		.loc 1 394 25 is_stmt 0 view .LVU5605
 12950 4fae C5FE6F2C 		vmovdqu	(%rsi,%rax), %ymm5
 12950      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12951              		.loc 1 393 32 is_stmt 1 view .LVU5606
 12952              	.LVL1065:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12953              		.loc 1 393 25 view .LVU5607
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12954              		.loc 1 394 13 view .LVU5608
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12955              		.loc 1 393 32 view .LVU5609
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12956              		.loc 1 393 25 view .LVU5610
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12957              		.loc 1 394 13 view .LVU5611
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12958              		.loc 1 393 32 view .LVU5612
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12959              		.loc 1 393 25 view .LVU5613
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12960              		.loc 1 393 25 is_stmt 0 view .LVU5614
 12961              	.LBE719:
 12962              	.LBB720:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12963              		.loc 1 395 25 is_stmt 1 view .LVU5615
 396:sieve_extend.c ****     }
 12964              		.loc 1 396 13 view .LVU5616
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12965              		.loc 1 395 32 view .LVU5617
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12966              		.loc 1 395 25 view .LVU5618
 396:sieve_extend.c ****     }
 12967              		.loc 1 396 13 view .LVU5619
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12968              		.loc 1 395 32 view .LVU5620
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12969              		.loc 1 395 25 view .LVU5621
 396:sieve_extend.c ****     }
 12970              		.loc 1 396 13 view .LVU5622
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12971              		.loc 1 395 32 view .LVU5623
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12972              		.loc 1 395 25 view .LVU5624
 396:sieve_extend.c ****     }
 12973              		.loc 1 396 13 view .LVU5625
 12974 4fb3 41FFC2   		incl	%r10d
 12975              	.LBE720:
 12976              	.LBB721:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccmX4xFB.s 			page 369


 12977              		.loc 1 394 25 is_stmt 0 view .LVU5626
 12978 4fb6 C4E3FD00 		vpermq	$85, %ymm5, %ymm2
 12978      D555
 12979              	.LBE721:
 12980              	.LBB722:
 396:sieve_extend.c ****     }
 12981              		.loc 1 396 34 view .LVU5627
 12982 4fbc C5EDD3F0 		vpsrlq	%xmm0, %ymm2, %ymm6
 12983              	.LBE722:
 12984              	.LBB723:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12985              		.loc 1 394 34 view .LVU5628
 12986 4fc0 C5D5F3F9 		vpsllq	%xmm1, %ymm5, %ymm7
 12987              	.LBE723:
 12988              	.LBB724:
 396:sieve_extend.c ****     }
 12989              		.loc 1 396 22 view .LVU5629
 12990 4fc4 C54DEBC7 		vpor	%ymm7, %ymm6, %ymm8
 12991 4fc8 C57E7F04 		vmovdqu	%ymm8, (%rdi,%rax)
 12991      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12992              		.loc 1 395 32 is_stmt 1 view .LVU5630
 12993              	.LVL1066:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12994              		.loc 1 395 25 view .LVU5631
 12995              	.LBE724:
 391:sieve_extend.c ****     {
 12996              		.loc 1 391 24 view .LVU5632
 391:sieve_extend.c ****     {
 12997              		.loc 1 391 12 view .LVU5633
 12998 4fcd 4883C020 		addq	$32, %rax
 12999              	.L1622:
 13000              	.LVL1067:
 13001              	.LBB725:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13002              		.loc 1 393 25 view .LVU5634
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13003              		.loc 1 394 13 view .LVU5635
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13004              		.loc 1 393 32 view .LVU5636
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13005              		.loc 1 393 25 view .LVU5637
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13006              		.loc 1 394 13 view .LVU5638
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13007              		.loc 1 394 25 is_stmt 0 view .LVU5639
 13008 4fd1 C57E6F0C 		vmovdqu	(%rsi,%rax), %ymm9
 13008      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13009              		.loc 1 393 32 is_stmt 1 view .LVU5640
 13010              	.LVL1068:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13011              		.loc 1 393 25 view .LVU5641
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13012              		.loc 1 394 13 view .LVU5642
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13013              		.loc 1 393 32 view .LVU5643
GAS LISTING /tmp/ccmX4xFB.s 			page 370


 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13014              		.loc 1 393 25 view .LVU5644
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13015              		.loc 1 394 13 view .LVU5645
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13016              		.loc 1 393 32 view .LVU5646
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13017              		.loc 1 393 25 view .LVU5647
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13018              		.loc 1 393 25 is_stmt 0 view .LVU5648
 13019              	.LBE725:
 13020              	.LBB726:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13021              		.loc 1 395 25 is_stmt 1 view .LVU5649
 396:sieve_extend.c ****     }
 13022              		.loc 1 396 13 view .LVU5650
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13023              		.loc 1 395 32 view .LVU5651
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13024              		.loc 1 395 25 view .LVU5652
 396:sieve_extend.c ****     }
 13025              		.loc 1 396 13 view .LVU5653
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13026              		.loc 1 395 32 view .LVU5654
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13027              		.loc 1 395 25 view .LVU5655
 396:sieve_extend.c ****     }
 13028              		.loc 1 396 13 view .LVU5656
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13029              		.loc 1 395 32 view .LVU5657
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13030              		.loc 1 395 25 view .LVU5658
 396:sieve_extend.c ****     }
 13031              		.loc 1 396 13 view .LVU5659
 13032 4fd6 41FFC2   		incl	%r10d
 13033              	.LBE726:
 13034              	.LBB727:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13035              		.loc 1 394 25 is_stmt 0 view .LVU5660
 13036 4fd9 C443FD00 		vpermq	$85, %ymm9, %ymm10
 13036      D155
 13037              	.LBE727:
 13038              	.LBB728:
 396:sieve_extend.c ****     }
 13039              		.loc 1 396 34 view .LVU5661
 13040 4fdf C52DD3D8 		vpsrlq	%xmm0, %ymm10, %ymm11
 13041              	.LBE728:
 13042              	.LBB729:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13043              		.loc 1 394 34 view .LVU5662
 13044 4fe3 C535F3E1 		vpsllq	%xmm1, %ymm9, %ymm12
 13045              	.LBE729:
 13046              	.LBB730:
 396:sieve_extend.c ****     }
 13047              		.loc 1 396 22 view .LVU5663
 13048 4fe7 C44125EB 		vpor	%ymm12, %ymm11, %ymm13
 13048      EC
GAS LISTING /tmp/ccmX4xFB.s 			page 371


 13049 4fec C57E7F2C 		vmovdqu	%ymm13, (%rdi,%rax)
 13049      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13050              		.loc 1 395 32 is_stmt 1 view .LVU5664
 13051              	.LVL1069:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13052              		.loc 1 395 25 view .LVU5665
 13053              	.LBE730:
 391:sieve_extend.c ****     {
 13054              		.loc 1 391 24 view .LVU5666
 391:sieve_extend.c ****     {
 13055              		.loc 1 391 12 view .LVU5667
 13056 4ff1 4883C020 		addq	$32, %rax
 13057 4ff5 4539D0   		cmpl	%r10d, %r8d
 13058 4ff8 0F861E01 		jbe	.L1635
 13058      0000
 13059              	.L1593:
 13060              	.LVL1070:
 13061              	.LBB731:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13062              		.loc 1 393 25 view .LVU5668
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13063              		.loc 1 394 13 view .LVU5669
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13064              		.loc 1 393 32 view .LVU5670
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13065              		.loc 1 393 25 view .LVU5671
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13066              		.loc 1 394 13 view .LVU5672
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13067              		.loc 1 394 25 is_stmt 0 view .LVU5673
 13068 4ffe C5FE6F74 		vmovdqu	32(%rsi,%rax), %ymm6
 13068      0620
 13069 5004 C57E6F34 		vmovdqu	(%rsi,%rax), %ymm14
 13069      06
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13070              		.loc 1 393 32 is_stmt 1 view .LVU5674
 13071              	.LVL1071:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13072              		.loc 1 393 25 view .LVU5675
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13073              		.loc 1 394 13 view .LVU5676
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13074              		.loc 1 393 32 view .LVU5677
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13075              		.loc 1 393 25 view .LVU5678
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13076              		.loc 1 394 13 view .LVU5679
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13077              		.loc 1 393 32 view .LVU5680
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13078              		.loc 1 393 25 view .LVU5681
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13079              		.loc 1 393 25 is_stmt 0 view .LVU5682
 13080              	.LBE731:
 13081              	.LBB732:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccmX4xFB.s 			page 372


 13082              		.loc 1 395 25 is_stmt 1 view .LVU5683
 396:sieve_extend.c ****     }
 13083              		.loc 1 396 13 view .LVU5684
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13084              		.loc 1 395 32 view .LVU5685
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13085              		.loc 1 395 25 view .LVU5686
 396:sieve_extend.c ****     }
 13086              		.loc 1 396 13 view .LVU5687
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13087              		.loc 1 395 32 view .LVU5688
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13088              		.loc 1 395 25 view .LVU5689
 396:sieve_extend.c ****     }
 13089              		.loc 1 396 13 view .LVU5690
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13090              		.loc 1 395 32 view .LVU5691
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13091              		.loc 1 395 25 view .LVU5692
 396:sieve_extend.c ****     }
 13092              		.loc 1 396 13 view .LVU5693
 13093              	.LBE732:
 13094              	.LBB733:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13095              		.loc 1 394 25 is_stmt 0 view .LVU5694
 13096 5009 C4E3FD00 		vpermq	$85, %ymm6, %ymm2
 13096      D655
 13097              	.LBE733:
 13098              	.LBB734:
 396:sieve_extend.c ****     }
 13099              		.loc 1 396 34 view .LVU5695
 13100 500f C5EDD3F8 		vpsrlq	%xmm0, %ymm2, %ymm7
 13101              	.LBE734:
 13102              	.LBB735:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13103              		.loc 1 394 34 view .LVU5696
 13104 5013 C54DF3C1 		vpsllq	%xmm1, %ymm6, %ymm8
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13105              		.loc 1 394 25 view .LVU5697
 13106 5017 C443FD00 		vpermq	$85, %ymm14, %ymm15
 13106      FE55
 13107              	.LBE735:
 13108              	.LBB736:
 396:sieve_extend.c ****     }
 13109              		.loc 1 396 22 view .LVU5698
 13110 501d C44145EB 		vpor	%ymm8, %ymm7, %ymm9
 13110      C8
 13111              	.LBE736:
 13112              	.LBB737:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13113              		.loc 1 394 25 view .LVU5699
 13114 5022 C5FE6FBC 		vmovdqu	128(%rsi,%rax), %ymm7
 13114      06800000 
 13114      00
 13115 502b C57E6F54 		vmovdqu	64(%rsi,%rax), %ymm10
 13115      0640
 13116              	.LBE737:
GAS LISTING /tmp/ccmX4xFB.s 			page 373


 13117              	.LBB738:
 396:sieve_extend.c ****     }
 13118              		.loc 1 396 34 view .LVU5700
 13119 5031 C585D3E0 		vpsrlq	%xmm0, %ymm15, %ymm4
 13120              	.LBE738:
 13121              	.LBB739:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13122              		.loc 1 394 34 view .LVU5701
 13123 5035 C58DF3D9 		vpsllq	%xmm1, %ymm14, %ymm3
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13124              		.loc 1 394 25 view .LVU5702
 13125 5039 C57E6F7C 		vmovdqu	96(%rsi,%rax), %ymm15
 13125      0660
 13126 503f C4E3FD00 		vpermq	$85, %ymm7, %ymm2
 13126      D755
 13127              	.LBE739:
 13128              	.LBB740:
 396:sieve_extend.c ****     }
 13129              		.loc 1 396 34 view .LVU5703
 13130 5045 C56DD3C0 		vpsrlq	%xmm0, %ymm2, %ymm8
 396:sieve_extend.c ****     }
 13131              		.loc 1 396 22 view .LVU5704
 13132 5049 C57E7F4C 		vmovdqu	%ymm9, 32(%rdi,%rax)
 13132      0720
 13133              	.LBE740:
 13134              	.LBB741:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13135              		.loc 1 394 34 view .LVU5705
 13136 504f C545F3C9 		vpsllq	%xmm1, %ymm7, %ymm9
 13137              	.LBE741:
 13138              	.LBB742:
 396:sieve_extend.c ****     }
 13139              		.loc 1 396 22 view .LVU5706
 13140 5053 C5DDEBEB 		vpor	%ymm3, %ymm4, %ymm5
 13141              	.LBE742:
 13142              	.LBB743:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13143              		.loc 1 394 25 view .LVU5707
 13144 5057 C443FD00 		vpermq	$85, %ymm10, %ymm11
 13144      DA55
 13145 505d C4C3FD00 		vpermq	$85, %ymm15, %ymm4
 13145      E755
 13146              	.LBE743:
 13147              	.LBB744:
 396:sieve_extend.c ****     }
 13148              		.loc 1 396 34 view .LVU5708
 13149 5063 C525D3E0 		vpsrlq	%xmm0, %ymm11, %ymm12
 13150              	.LBE744:
 13151              	.LBB745:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13152              		.loc 1 394 34 view .LVU5709
 13153 5067 C52DF3E9 		vpsllq	%xmm1, %ymm10, %ymm13
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13154              		.loc 1 394 25 view .LVU5710
 13155 506b C57E6F9C 		vmovdqu	160(%rsi,%rax), %ymm11
 13155      06A00000 
 13155      00
GAS LISTING /tmp/ccmX4xFB.s 			page 374


 13156              	.LBE745:
 13157              	.LBB746:
 396:sieve_extend.c ****     }
 13158              		.loc 1 396 22 view .LVU5711
 13159 5074 C4413DEB 		vpor	%ymm9, %ymm8, %ymm10
 13159      D1
 13160              	.LBE746:
 13161              	.LBB747:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13162              		.loc 1 394 34 view .LVU5712
 13163 5079 C585F3D9 		vpsllq	%xmm1, %ymm15, %ymm3
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13164              		.loc 1 394 25 view .LVU5713
 13165 507d C57E6F84 		vmovdqu	224(%rsi,%rax), %ymm8
 13165      06E00000 
 13165      00
 13166              	.LBE747:
 13167              	.LBB748:
 396:sieve_extend.c ****     }
 13168              		.loc 1 396 22 view .LVU5714
 13169 5086 C5FE7F2C 		vmovdqu	%ymm5, (%rdi,%rax)
 13169      07
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13170              		.loc 1 395 32 is_stmt 1 view .LVU5715
 13171              	.LVL1072:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13172              		.loc 1 395 25 view .LVU5716
 13173              	.LBE748:
 391:sieve_extend.c ****     {
 13174              		.loc 1 391 24 view .LVU5717
 391:sieve_extend.c ****     {
 13175              		.loc 1 391 12 view .LVU5718
 13176              	.LBB749:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13177              		.loc 1 393 25 view .LVU5719
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13178              		.loc 1 394 13 view .LVU5720
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13179              		.loc 1 393 32 view .LVU5721
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13180              		.loc 1 393 25 view .LVU5722
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13181              		.loc 1 394 13 view .LVU5723
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13182              		.loc 1 393 32 view .LVU5724
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13183              		.loc 1 393 25 view .LVU5725
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13184              		.loc 1 394 13 view .LVU5726
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13185              		.loc 1 393 32 view .LVU5727
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13186              		.loc 1 393 25 view .LVU5728
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13187              		.loc 1 394 13 view .LVU5729
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13188              		.loc 1 393 32 view .LVU5730
GAS LISTING /tmp/ccmX4xFB.s 			page 375


 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13189              		.loc 1 393 25 view .LVU5731
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13190              		.loc 1 393 25 is_stmt 0 view .LVU5732
 13191              	.LBE749:
 13192              	.LBB750:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13193              		.loc 1 395 25 is_stmt 1 view .LVU5733
 396:sieve_extend.c ****     }
 13194              		.loc 1 396 13 view .LVU5734
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13195              		.loc 1 395 32 view .LVU5735
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13196              		.loc 1 395 25 view .LVU5736
 396:sieve_extend.c ****     }
 13197              		.loc 1 396 13 view .LVU5737
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13198              		.loc 1 395 32 view .LVU5738
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13199              		.loc 1 395 25 view .LVU5739
 396:sieve_extend.c ****     }
 13200              		.loc 1 396 13 view .LVU5740
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13201              		.loc 1 395 32 view .LVU5741
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13202              		.loc 1 395 25 view .LVU5742
 396:sieve_extend.c ****     }
 13203              		.loc 1 396 13 view .LVU5743
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13204              		.loc 1 395 32 view .LVU5744
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13205              		.loc 1 395 25 view .LVU5745
 13206              	.LBE750:
 391:sieve_extend.c ****     {
 13207              		.loc 1 391 24 view .LVU5746
 391:sieve_extend.c ****     {
 13208              		.loc 1 391 12 view .LVU5747
 13209              	.LBB751:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13210              		.loc 1 393 25 view .LVU5748
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13211              		.loc 1 394 13 view .LVU5749
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13212              		.loc 1 393 32 view .LVU5750
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13213              		.loc 1 393 25 view .LVU5751
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13214              		.loc 1 394 13 view .LVU5752
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13215              		.loc 1 393 32 view .LVU5753
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13216              		.loc 1 393 25 view .LVU5754
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13217              		.loc 1 394 13 view .LVU5755
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13218              		.loc 1 393 32 view .LVU5756
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 376


 13219              		.loc 1 393 25 view .LVU5757
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13220              		.loc 1 394 13 view .LVU5758
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13221              		.loc 1 393 32 view .LVU5759
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13222              		.loc 1 393 25 view .LVU5760
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13223              		.loc 1 393 25 is_stmt 0 view .LVU5761
 13224              	.LBE751:
 13225              	.LBB752:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13226              		.loc 1 395 25 is_stmt 1 view .LVU5762
 396:sieve_extend.c ****     }
 13227              		.loc 1 396 13 view .LVU5763
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13228              		.loc 1 395 32 view .LVU5764
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13229              		.loc 1 395 25 view .LVU5765
 396:sieve_extend.c ****     }
 13230              		.loc 1 396 13 view .LVU5766
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13231              		.loc 1 395 32 view .LVU5767
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13232              		.loc 1 395 25 view .LVU5768
 396:sieve_extend.c ****     }
 13233              		.loc 1 396 13 view .LVU5769
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13234              		.loc 1 395 32 view .LVU5770
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13235              		.loc 1 395 25 view .LVU5771
 396:sieve_extend.c ****     }
 13236              		.loc 1 396 13 view .LVU5772
 396:sieve_extend.c ****     }
 13237              		.loc 1 396 34 is_stmt 0 view .LVU5773
 13238 508b C5DDD3E8 		vpsrlq	%xmm0, %ymm4, %ymm5
 13239              	.LBE752:
 13240              	.LBB753:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13241              		.loc 1 394 25 view .LVU5774
 13242 508f C5FE6FA4 		vmovdqu	192(%rsi,%rax), %ymm4
 13242      06C00000 
 13242      00
 13243              	.LBE753:
 13244              	.LBB754:
 396:sieve_extend.c ****     }
 13245              		.loc 1 396 22 view .LVU5775
 13246 5098 C4411DEB 		vpor	%ymm13, %ymm12, %ymm14
 13246      F5
 13247 509d C5D5EBF3 		vpor	%ymm3, %ymm5, %ymm6
 13248              	.LBE754:
 13249              	.LBB755:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13250              		.loc 1 394 25 view .LVU5776
 13251 50a1 C443FD00 		vpermq	$85, %ymm11, %ymm12
 13251      E355
 13252 50a7 C4E3FD00 		vpermq	$85, %ymm4, %ymm5
GAS LISTING /tmp/ccmX4xFB.s 			page 377


 13252      EC55
 13253 50ad C4C3FD00 		vpermq	$85, %ymm8, %ymm2
 13253      D055
 13254              	.LBE755:
 13255              	.LBB756:
 396:sieve_extend.c ****     }
 13256              		.loc 1 396 22 view .LVU5777
 13257 50b3 C57E7F74 		vmovdqu	%ymm14, 64(%rdi,%rax)
 13257      0740
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13258              		.loc 1 395 32 is_stmt 1 view .LVU5778
 13259              	.LVL1073:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13260              		.loc 1 395 25 view .LVU5779
 13261              	.LBE756:
 391:sieve_extend.c ****     {
 13262              		.loc 1 391 24 view .LVU5780
 391:sieve_extend.c ****     {
 13263              		.loc 1 391 12 view .LVU5781
 13264              	.LBB757:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13265              		.loc 1 393 25 view .LVU5782
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13266              		.loc 1 394 13 view .LVU5783
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13267              		.loc 1 393 32 view .LVU5784
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13268              		.loc 1 393 25 view .LVU5785
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13269              		.loc 1 394 13 view .LVU5786
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13270              		.loc 1 393 32 view .LVU5787
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13271              		.loc 1 393 25 view .LVU5788
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13272              		.loc 1 394 13 view .LVU5789
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13273              		.loc 1 393 32 view .LVU5790
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13274              		.loc 1 393 25 view .LVU5791
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13275              		.loc 1 394 13 view .LVU5792
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13276              		.loc 1 393 32 view .LVU5793
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13277              		.loc 1 393 25 view .LVU5794
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13278              		.loc 1 393 25 is_stmt 0 view .LVU5795
 13279              	.LBE757:
 13280              	.LBB758:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13281              		.loc 1 395 25 is_stmt 1 view .LVU5796
 396:sieve_extend.c ****     }
 13282              		.loc 1 396 13 view .LVU5797
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13283              		.loc 1 395 32 view .LVU5798
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccmX4xFB.s 			page 378


 13284              		.loc 1 395 25 view .LVU5799
 396:sieve_extend.c ****     }
 13285              		.loc 1 396 13 view .LVU5800
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13286              		.loc 1 395 32 view .LVU5801
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13287              		.loc 1 395 25 view .LVU5802
 396:sieve_extend.c ****     }
 13288              		.loc 1 396 13 view .LVU5803
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13289              		.loc 1 395 32 view .LVU5804
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13290              		.loc 1 395 25 view .LVU5805
 396:sieve_extend.c ****     }
 13291              		.loc 1 396 13 view .LVU5806
 396:sieve_extend.c ****     }
 13292              		.loc 1 396 22 is_stmt 0 view .LVU5807
 13293 50b9 C5FE7F74 		vmovdqu	%ymm6, 96(%rdi,%rax)
 13293      0760
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13294              		.loc 1 395 32 is_stmt 1 view .LVU5808
 13295              	.LVL1074:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13296              		.loc 1 395 25 view .LVU5809
 13297              	.LBE758:
 391:sieve_extend.c ****     {
 13298              		.loc 1 391 24 view .LVU5810
 391:sieve_extend.c ****     {
 13299              		.loc 1 391 12 view .LVU5811
 13300              	.LBB759:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13301              		.loc 1 393 25 view .LVU5812
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13302              		.loc 1 394 13 view .LVU5813
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13303              		.loc 1 393 32 view .LVU5814
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13304              		.loc 1 393 25 view .LVU5815
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13305              		.loc 1 394 13 view .LVU5816
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13306              		.loc 1 393 32 view .LVU5817
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13307              		.loc 1 393 25 view .LVU5818
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13308              		.loc 1 394 13 view .LVU5819
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13309              		.loc 1 393 32 view .LVU5820
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13310              		.loc 1 393 25 view .LVU5821
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13311              		.loc 1 394 13 view .LVU5822
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13312              		.loc 1 393 32 view .LVU5823
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13313              		.loc 1 393 25 view .LVU5824
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 379


 13314              		.loc 1 393 25 is_stmt 0 view .LVU5825
 13315              	.LBE759:
 13316              	.LBB760:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13317              		.loc 1 395 25 is_stmt 1 view .LVU5826
 396:sieve_extend.c ****     }
 13318              		.loc 1 396 13 view .LVU5827
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13319              		.loc 1 395 32 view .LVU5828
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13320              		.loc 1 395 25 view .LVU5829
 396:sieve_extend.c ****     }
 13321              		.loc 1 396 13 view .LVU5830
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13322              		.loc 1 395 32 view .LVU5831
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13323              		.loc 1 395 25 view .LVU5832
 396:sieve_extend.c ****     }
 13324              		.loc 1 396 13 view .LVU5833
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13325              		.loc 1 395 32 view .LVU5834
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13326              		.loc 1 395 25 view .LVU5835
 396:sieve_extend.c ****     }
 13327              		.loc 1 396 13 view .LVU5836
 13328              	.LBE760:
 13329              	.LBB761:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13330              		.loc 1 394 34 is_stmt 0 view .LVU5837
 13331 50bf C525F3F1 		vpsllq	%xmm1, %ymm11, %ymm14
 13332              	.LBE761:
 13333              	.LBB762:
 396:sieve_extend.c ****     }
 13334              		.loc 1 396 22 view .LVU5838
 13335 50c3 C57E7F94 		vmovdqu	%ymm10, 128(%rdi,%rax)
 13335      07800000 
 13335      00
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13336              		.loc 1 395 32 is_stmt 1 view .LVU5839
 13337              	.LVL1075:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13338              		.loc 1 395 25 view .LVU5840
 13339              	.LBE762:
 391:sieve_extend.c ****     {
 13340              		.loc 1 391 24 view .LVU5841
 391:sieve_extend.c ****     {
 13341              		.loc 1 391 12 view .LVU5842
 13342              	.LBB763:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13343              		.loc 1 393 25 view .LVU5843
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13344              		.loc 1 394 13 view .LVU5844
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13345              		.loc 1 393 32 view .LVU5845
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13346              		.loc 1 393 25 view .LVU5846
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccmX4xFB.s 			page 380


 13347              		.loc 1 394 13 view .LVU5847
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13348              		.loc 1 393 32 view .LVU5848
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13349              		.loc 1 393 25 view .LVU5849
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13350              		.loc 1 394 13 view .LVU5850
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13351              		.loc 1 393 32 view .LVU5851
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13352              		.loc 1 393 25 view .LVU5852
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13353              		.loc 1 394 13 view .LVU5853
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13354              		.loc 1 393 32 view .LVU5854
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13355              		.loc 1 393 25 view .LVU5855
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13356              		.loc 1 393 25 is_stmt 0 view .LVU5856
 13357              	.LBE763:
 13358              	.LBB764:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13359              		.loc 1 395 25 is_stmt 1 view .LVU5857
 396:sieve_extend.c ****     }
 13360              		.loc 1 396 13 view .LVU5858
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13361              		.loc 1 395 32 view .LVU5859
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13362              		.loc 1 395 25 view .LVU5860
 396:sieve_extend.c ****     }
 13363              		.loc 1 396 13 view .LVU5861
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13364              		.loc 1 395 32 view .LVU5862
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13365              		.loc 1 395 25 view .LVU5863
 396:sieve_extend.c ****     }
 13366              		.loc 1 396 13 view .LVU5864
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13367              		.loc 1 395 32 view .LVU5865
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13368              		.loc 1 395 25 view .LVU5866
 396:sieve_extend.c ****     }
 13369              		.loc 1 396 13 view .LVU5867
 396:sieve_extend.c ****     }
 13370              		.loc 1 396 34 is_stmt 0 view .LVU5868
 13371 50cc C51DD3E8 		vpsrlq	%xmm0, %ymm12, %ymm13
 13372 50d0 C5D5D3F0 		vpsrlq	%xmm0, %ymm5, %ymm6
 13373              	.LBE764:
 13374              	.LBB765:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13375              		.loc 1 394 34 view .LVU5869
 13376 50d4 C5DDF3D9 		vpsllq	%xmm1, %ymm4, %ymm3
 13377              	.LBE765:
 13378              	.LBB766:
 396:sieve_extend.c ****     }
 13379              		.loc 1 396 34 view .LVU5870
 13380 50d8 C56DD3C8 		vpsrlq	%xmm0, %ymm2, %ymm9
GAS LISTING /tmp/ccmX4xFB.s 			page 381


 13381              	.LBE766:
 13382              	.LBB767:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13383              		.loc 1 394 34 view .LVU5871
 13384 50dc C53DF3D1 		vpsllq	%xmm1, %ymm8, %ymm10
 13385              	.LBE767:
 13386              	.LBB768:
 396:sieve_extend.c ****     }
 13387              		.loc 1 396 22 view .LVU5872
 13388 50e0 C44115EB 		vpor	%ymm14, %ymm13, %ymm15
 13388      FE
 13389 50e5 C5CDEBFB 		vpor	%ymm3, %ymm6, %ymm7
 13390 50e9 C44135EB 		vpor	%ymm10, %ymm9, %ymm11
 13390      DA
 13391 50ee 4183C208 		addl	$8, %r10d
 13392 50f2 C57E7FBC 		vmovdqu	%ymm15, 160(%rdi,%rax)
 13392      07A00000 
 13392      00
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13393              		.loc 1 395 32 is_stmt 1 view .LVU5873
 13394              	.LVL1076:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13395              		.loc 1 395 25 view .LVU5874
 13396              	.LBE768:
 391:sieve_extend.c ****     {
 13397              		.loc 1 391 24 view .LVU5875
 391:sieve_extend.c ****     {
 13398              		.loc 1 391 12 view .LVU5876
 13399              	.LBB769:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13400              		.loc 1 393 25 view .LVU5877
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13401              		.loc 1 394 13 view .LVU5878
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13402              		.loc 1 393 32 view .LVU5879
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13403              		.loc 1 393 25 view .LVU5880
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13404              		.loc 1 394 13 view .LVU5881
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13405              		.loc 1 393 32 view .LVU5882
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13406              		.loc 1 393 25 view .LVU5883
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13407              		.loc 1 394 13 view .LVU5884
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13408              		.loc 1 393 32 view .LVU5885
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13409              		.loc 1 393 25 view .LVU5886
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13410              		.loc 1 394 13 view .LVU5887
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13411              		.loc 1 393 32 view .LVU5888
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13412              		.loc 1 393 25 view .LVU5889
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13413              		.loc 1 393 25 is_stmt 0 view .LVU5890
GAS LISTING /tmp/ccmX4xFB.s 			page 382


 13414              	.LBE769:
 13415              	.LBB770:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13416              		.loc 1 395 25 is_stmt 1 view .LVU5891
 396:sieve_extend.c ****     }
 13417              		.loc 1 396 13 view .LVU5892
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13418              		.loc 1 395 32 view .LVU5893
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13419              		.loc 1 395 25 view .LVU5894
 396:sieve_extend.c ****     }
 13420              		.loc 1 396 13 view .LVU5895
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13421              		.loc 1 395 32 view .LVU5896
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13422              		.loc 1 395 25 view .LVU5897
 396:sieve_extend.c ****     }
 13423              		.loc 1 396 13 view .LVU5898
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13424              		.loc 1 395 32 view .LVU5899
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13425              		.loc 1 395 25 view .LVU5900
 396:sieve_extend.c ****     }
 13426              		.loc 1 396 13 view .LVU5901
 396:sieve_extend.c ****     }
 13427              		.loc 1 396 22 is_stmt 0 view .LVU5902
 13428 50fb C5FE7FBC 		vmovdqu	%ymm7, 192(%rdi,%rax)
 13428      07C00000 
 13428      00
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13429              		.loc 1 395 32 is_stmt 1 view .LVU5903
 13430              	.LVL1077:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13431              		.loc 1 395 25 view .LVU5904
 13432              	.LBE770:
 391:sieve_extend.c ****     {
 13433              		.loc 1 391 24 view .LVU5905
 391:sieve_extend.c ****     {
 13434              		.loc 1 391 12 view .LVU5906
 13435              	.LBB771:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13436              		.loc 1 393 25 view .LVU5907
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13437              		.loc 1 394 13 view .LVU5908
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13438              		.loc 1 393 32 view .LVU5909
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13439              		.loc 1 393 25 view .LVU5910
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13440              		.loc 1 394 13 view .LVU5911
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13441              		.loc 1 393 32 view .LVU5912
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13442              		.loc 1 393 25 view .LVU5913
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13443              		.loc 1 394 13 view .LVU5914
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 383


 13444              		.loc 1 393 32 view .LVU5915
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13445              		.loc 1 393 25 view .LVU5916
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13446              		.loc 1 394 13 view .LVU5917
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13447              		.loc 1 393 32 view .LVU5918
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13448              		.loc 1 393 25 view .LVU5919
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13449              		.loc 1 393 25 is_stmt 0 view .LVU5920
 13450              	.LBE771:
 13451              	.LBB772:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13452              		.loc 1 395 25 is_stmt 1 view .LVU5921
 396:sieve_extend.c ****     }
 13453              		.loc 1 396 13 view .LVU5922
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13454              		.loc 1 395 32 view .LVU5923
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13455              		.loc 1 395 25 view .LVU5924
 396:sieve_extend.c ****     }
 13456              		.loc 1 396 13 view .LVU5925
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13457              		.loc 1 395 32 view .LVU5926
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13458              		.loc 1 395 25 view .LVU5927
 396:sieve_extend.c ****     }
 13459              		.loc 1 396 13 view .LVU5928
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13460              		.loc 1 395 32 view .LVU5929
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13461              		.loc 1 395 25 view .LVU5930
 396:sieve_extend.c ****     }
 13462              		.loc 1 396 13 view .LVU5931
 396:sieve_extend.c ****     }
 13463              		.loc 1 396 22 is_stmt 0 view .LVU5932
 13464 5104 C57E7F9C 		vmovdqu	%ymm11, 224(%rdi,%rax)
 13464      07E00000 
 13464      00
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13465              		.loc 1 395 32 is_stmt 1 view .LVU5933
 13466              	.LVL1078:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13467              		.loc 1 395 25 view .LVU5934
 13468              	.LBE772:
 391:sieve_extend.c ****     {
 13469              		.loc 1 391 24 view .LVU5935
 391:sieve_extend.c ****     {
 13470              		.loc 1 391 12 view .LVU5936
 13471 510d 48050001 		addq	$256, %rax
 13471      0000
 13472 5113 4539D0   		cmpl	%r10d, %r8d
 13473 5116 0F87E2FE 		ja	.L1593
 13473      FFFF
 13474              	.L1635:
 13475 511c 4589CB   		movl	%r9d, %r11d
GAS LISTING /tmp/ccmX4xFB.s 			page 384


 13476 511f 49FFC3   		incq	%r11
 13477 5122 49C1E305 		salq	$5, %r11
 13478 5126 4C01DF   		addq	%r11, %rdi
 13479 5129 4C01DE   		addq	%r11, %rsi
 13480 512c 428D0485 		leal	0(,%r8,4), %eax
 13480      00000000 
 13481              	.LVL1079:
 13482              	.L1594:
 398:sieve_extend.c ****     {
 13483              		.loc 1 398 12 view .LVU5937
 398:sieve_extend.c ****     {
 13484              		.loc 1 398 5 is_stmt 0 view .LVU5938
 13485 5134 39C2     		cmpl	%eax, %edx
 13486 5136 0F8EAA00 		jle	.L1636
 13486      0000
 13487 513c 448D42FF 		leal	-1(%rdx), %r8d
 13488 5140 41BA4000 		movl	$64, %r10d
 13488      0000
 13489 5146 4189D3   		movl	%edx, %r11d
 13490 5149 4129C0   		subl	%eax, %r8d
 13491 514c 4129CA   		subl	%ecx, %r10d
 13492 514f 4129C3   		subl	%eax, %r11d
 13493 5152 4183F802 		cmpl	$2, %r8d
 13494 5156 7640     		jbe	.L1595
 13495              	.LVL1080:
 400:sieve_extend.c ****     }    
 13496              		.loc 1 400 9 is_stmt 1 view .LVU5939
 400:sieve_extend.c ****     }    
 13497              		.loc 1 400 23 is_stmt 0 view .LVU5940
 13498 5158 C5FE6F0E 		vmovdqu	(%rsi), %ymm1
 400:sieve_extend.c ****     }    
 13499              		.loc 1 400 43 view .LVU5941
 13500 515c C57E6F76 		vmovdqu	8(%rsi), %ymm14
 13500      08
 400:sieve_extend.c ****     }    
 13501              		.loc 1 400 23 view .LVU5942
 13502 5161 C5F96EC1 		vmovd	%ecx, %xmm0
 400:sieve_extend.c ****     }    
 13503              		.loc 1 400 43 view .LVU5943
 13504 5165 C441796E 		vmovd	%r10d, %xmm13
 13504      EA
 13505 516a 4589D9   		movl	%r11d, %r9d
 13506 516d 4183E1FC 		andl	$-4, %r9d
 400:sieve_extend.c ****     }    
 13507              		.loc 1 400 23 view .LVU5944
 13508 5171 C575D3E0 		vpsrlq	%xmm0, %ymm1, %ymm12
 400:sieve_extend.c ****     }    
 13509              		.loc 1 400 43 view .LVU5945
 13510 5175 C4410DF3 		vpsllq	%xmm13, %ymm14, %ymm15
 13510      FD
 13511 517a 4589C8   		movl	%r9d, %r8d
 13512 517d 49C1E003 		salq	$3, %r8
 400:sieve_extend.c ****     }    
 13513              		.loc 1 400 32 view .LVU5946
 13514 5181 C4C11DEB 		vpor	%ymm15, %ymm12, %ymm4
 13514      E7
 400:sieve_extend.c ****     }    
GAS LISTING /tmp/ccmX4xFB.s 			page 385


 13515              		.loc 1 400 14 view .LVU5947
 13516 5186 C5FE7F27 		vmovdqu	%ymm4, (%rdi)
 398:sieve_extend.c ****     {
 13517              		.loc 1 398 22 is_stmt 1 view .LVU5948
 398:sieve_extend.c ****     {
 13518              		.loc 1 398 12 view .LVU5949
 13519 518a 4C01C6   		addq	%r8, %rsi
 13520 518d 4C01C7   		addq	%r8, %rdi
 13521 5190 4401C8   		addl	%r9d, %eax
 13522 5193 4539CB   		cmpl	%r9d, %r11d
 13523 5196 744E     		je	.L1636
 13524              	.L1595:
 13525              	.LVL1081:
 400:sieve_extend.c ****     }    
 13526              		.loc 1 400 9 view .LVU5950
 400:sieve_extend.c ****     }    
 13527              		.loc 1 400 35 is_stmt 0 view .LVU5951
 13528 5198 4C8B4608 		movq	8(%rsi), %r8
 400:sieve_extend.c ****     }    
 13529              		.loc 1 400 23 view .LVU5952
 13530 519c C462F3F7 		shrx	%rcx, (%rsi), %r9
 13530      0E
 400:sieve_extend.c ****     }    
 13531              		.loc 1 400 43 view .LVU5953
 13532 51a1 C442A9F7 		shlx	%r10, %r8, %r11
 13532      D8
 400:sieve_extend.c ****     }    
 13533              		.loc 1 400 32 view .LVU5954
 13534 51a6 4D09D9   		orq	%r11, %r9
 13535 51a9 4C890F   		movq	%r9, (%rdi)
 398:sieve_extend.c ****     {
 13536              		.loc 1 398 22 is_stmt 1 view .LVU5955
 13537              	.LVL1082:
 398:sieve_extend.c ****     {
 13538              		.loc 1 398 12 view .LVU5956
 398:sieve_extend.c ****     {
 13539              		.loc 1 398 22 is_stmt 0 view .LVU5957
 13540 51ac 448D4801 		leal	1(%rax), %r9d
 13541              	.LVL1083:
 398:sieve_extend.c ****     {
 13542              		.loc 1 398 5 view .LVU5958
 13543 51b0 4439CA   		cmpl	%r9d, %edx
 13544 51b3 7E31     		jle	.L1636
 400:sieve_extend.c ****     }    
 13545              		.loc 1 400 9 is_stmt 1 view .LVU5959
 400:sieve_extend.c ****     }    
 13546              		.loc 1 400 35 is_stmt 0 view .LVU5960
 13547 51b5 4C8B4E10 		movq	16(%rsi), %r9
 13548              	.LVL1084:
 400:sieve_extend.c ****     }    
 13549              		.loc 1 400 23 view .LVU5961
 13550 51b9 C442F3F7 		shrx	%rcx, %r8, %r8
 13550      C0
 400:sieve_extend.c ****     }    
 13551              		.loc 1 400 43 view .LVU5962
 13552 51be C442A9F7 		shlx	%r10, %r9, %r11
 13552      D9
GAS LISTING /tmp/ccmX4xFB.s 			page 386


 398:sieve_extend.c ****     {
 13553              		.loc 1 398 22 view .LVU5963
 13554 51c3 83C002   		addl	$2, %eax
 13555              	.LVL1085:
 400:sieve_extend.c ****     }    
 13556              		.loc 1 400 32 view .LVU5964
 13557 51c6 4D09D8   		orq	%r11, %r8
 13558 51c9 4C894708 		movq	%r8, 8(%rdi)
 398:sieve_extend.c ****     {
 13559              		.loc 1 398 22 is_stmt 1 view .LVU5965
 13560              	.LVL1086:
 398:sieve_extend.c ****     {
 13561              		.loc 1 398 12 view .LVU5966
 398:sieve_extend.c ****     {
 13562              		.loc 1 398 5 is_stmt 0 view .LVU5967
 13563 51cd 39D0     		cmpl	%edx, %eax
 13564 51cf 7D15     		jge	.L1636
 400:sieve_extend.c ****     }    
 13565              		.loc 1 400 9 is_stmt 1 view .LVU5968
 400:sieve_extend.c ****     }    
 13566              		.loc 1 400 43 is_stmt 0 view .LVU5969
 13567 51d1 488B5618 		movq	24(%rsi), %rdx
 13568              	.LVL1087:
 400:sieve_extend.c ****     }    
 13569              		.loc 1 400 23 view .LVU5970
 13570 51d5 C4C2F3F7 		shrx	%rcx, %r9, %rcx
 13570      C9
 13571              	.LVL1088:
 400:sieve_extend.c ****     }    
 13572              		.loc 1 400 43 view .LVU5971
 13573 51da C4E2A9F7 		shlx	%r10, %rdx, %rsi
 13573      F2
 13574              	.LVL1089:
 400:sieve_extend.c ****     }    
 13575              		.loc 1 400 32 view .LVU5972
 13576 51df 4809F1   		orq	%rsi, %rcx
 13577 51e2 48894F10 		movq	%rcx, 16(%rdi)
 398:sieve_extend.c ****     {
 13578              		.loc 1 398 22 is_stmt 1 view .LVU5973
 13579              	.LVL1090:
 398:sieve_extend.c ****     {
 13580              		.loc 1 398 12 view .LVU5974
 13581              	.L1636:
 398:sieve_extend.c ****     {
 13582              		.loc 1 398 12 is_stmt 0 view .LVU5975
 13583 51e6 C5F877   		vzeroupper
 402:sieve_extend.c **** 
 13584              		.loc 1 402 1 view .LVU5976
 13585 51e9 C3       		ret
 13586              	.LVL1091:
 13587              	.L1638:
 13588              	.LBB773:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13589              		.loc 1 393 25 is_stmt 1 view .LVU5977
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13590              		.loc 1 394 13 view .LVU5978
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccmX4xFB.s 			page 387


 13591              		.loc 1 393 32 view .LVU5979
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13592              		.loc 1 393 25 view .LVU5980
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13593              		.loc 1 394 13 view .LVU5981
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13594              		.loc 1 394 25 is_stmt 0 view .LVU5982
 13595 51ea C5FE6F7E 		vmovdqu	32(%rsi), %ymm7
 13595      20
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13596              		.loc 1 393 32 is_stmt 1 view .LVU5983
 13597              	.LVL1092:
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13598              		.loc 1 393 25 view .LVU5984
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13599              		.loc 1 394 13 view .LVU5985
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13600              		.loc 1 393 32 view .LVU5986
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13601              		.loc 1 393 25 view .LVU5987
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13602              		.loc 1 394 13 view .LVU5988
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13603              		.loc 1 393 32 view .LVU5989
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13604              		.loc 1 393 25 view .LVU5990
 393:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13605              		.loc 1 393 25 is_stmt 0 view .LVU5991
 13606              	.LBE773:
 13607              	.LBB774:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13608              		.loc 1 395 25 is_stmt 1 view .LVU5992
 396:sieve_extend.c ****     }
 13609              		.loc 1 396 13 view .LVU5993
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13610              		.loc 1 395 32 view .LVU5994
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13611              		.loc 1 395 25 view .LVU5995
 396:sieve_extend.c ****     }
 13612              		.loc 1 396 13 view .LVU5996
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13613              		.loc 1 395 32 view .LVU5997
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13614              		.loc 1 395 25 view .LVU5998
 396:sieve_extend.c ****     }
 13615              		.loc 1 396 13 view .LVU5999
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13616              		.loc 1 395 32 view .LVU6000
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13617              		.loc 1 395 25 view .LVU6001
 396:sieve_extend.c ****     }
 13618              		.loc 1 396 13 view .LVU6002
 13619 51ef 41BA0200 		movl	$2, %r10d
 13619      0000
 13620              	.LBE774:
 13621              	.LBB775:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccmX4xFB.s 			page 388


 13622              		.loc 1 394 25 is_stmt 0 view .LVU6003
 13623 51f5 C463FD00 		vpermq	$85, %ymm7, %ymm8
 13623      C755
 13624              	.LBE775:
 13625              	.LBB776:
 396:sieve_extend.c ****     }
 13626              		.loc 1 396 34 view .LVU6004
 13627 51fb C53DD3C8 		vpsrlq	%xmm0, %ymm8, %ymm9
 13628              	.LBE776:
 13629              	.LBB777:
 394:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13630              		.loc 1 394 34 view .LVU6005
 13631 51ff C545F3D1 		vpsllq	%xmm1, %ymm7, %ymm10
 13632 5203 B8400000 		movl	$64, %eax
 13632      00
 13633              	.LBE777:
 13634              	.LBB778:
 396:sieve_extend.c ****     }
 13635              		.loc 1 396 22 view .LVU6006
 13636 5208 C44135EB 		vpor	%ymm10, %ymm9, %ymm11
 13636      DA
 13637 520d C57E7F5F 		vmovdqu	%ymm11, 32(%rdi)
 13637      20
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13638              		.loc 1 395 32 is_stmt 1 view .LVU6007
 13639              	.LVL1093:
 395:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13640              		.loc 1 395 25 view .LVU6008
 13641              	.LBE778:
 391:sieve_extend.c ****     {
 13642              		.loc 1 391 24 view .LVU6009
 391:sieve_extend.c ****     {
 13643              		.loc 1 391 12 view .LVU6010
 13644 5212 E909FDFF 		jmp	.L1627
 13644      FF
 13645              	.LVL1094:
 13646              	.L1637:
 389:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 13647              		.loc 1 389 9 is_stmt 0 view .LVU6011
 13648 5217 31C0     		xorl	%eax, %eax
 13649 5219 E916FFFF 		jmp	.L1594
 13649      FF
 13650              		.cfi_endproc
 13651              	.LFE65:
 13653              		.section	.rodata.str1.8,"aMS",@progbits,1
 13654              		.align 8
 13655              	.LC5:
 13656 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 13656      6C743A20 
 13656      53696576 
 13656      6573697A 
 13656      6520256A 
 13657 0055 000000   		.align 8
 13658              	.LC6:
 13659 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 13659      616C6964 
 13659      20726573 
GAS LISTING /tmp/ccmX4xFB.s 			page 389


 13659      756C742E 
 13659      20536965 
 13660              		.section	.rodata.str1.1
 13661              	.LC7:
 13662 0023 44656570 		.string	"DeepAnalyzing"
 13662      416E616C 
 13662      797A696E 
 13662      6700
 13663              		.section	.rodata.str1.8
 13664 00bb 00000000 		.align 8
 13664      00
 13665              	.LC8:
 13666 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 13666      65722025 
 13666      6A752028 
 13666      256A7529 
 13666      20776173 
 13667              		.align 8
 13668              	.LC9:
 13669 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 13669      65722025 
 13669      6A752028 
 13669      256A7529 
 13669      20776173 
 13670              		.text
 13671 521e 6690     		.p2align 4
 13672              		.globl	validatePrimeCount
 13674              	validatePrimeCount:
 13675              	.LVL1095:
 13676              	.LFB78:
 854:sieve_extend.c **** 
 13677              		.loc 1 854 76 is_stmt 1 view -0
 13678              		.cfi_startproc
 854:sieve_extend.c **** 
 13679              		.loc 1 854 76 is_stmt 0 view .LVU6013
 13680 5220 F30F1EFA 		endbr64
 856:sieve_extend.c ****     counter_t valid_primes = 0;
 13681              		.loc 1 856 5 is_stmt 1 view .LVU6014
 854:sieve_extend.c **** 
 13682              		.loc 1 854 76 is_stmt 0 view .LVU6015
 13683 5224 4157     		pushq	%r15
 13684              		.cfi_def_cfa_offset 16
 13685              		.cfi_offset 15, -16
 13686 5226 4156     		pushq	%r14
 13687              		.cfi_def_cfa_offset 24
 13688              		.cfi_offset 14, -24
 13689 5228 4155     		pushq	%r13
 13690              		.cfi_def_cfa_offset 32
 13691              		.cfi_offset 13, -32
 13692 522a 4154     		pushq	%r12
 13693              		.cfi_def_cfa_offset 40
 13694              		.cfi_offset 12, -40
 13695 522c 55       		pushq	%rbp
 13696              		.cfi_def_cfa_offset 48
 13697              		.cfi_offset 6, -48
 13698 522d 4889FD   		movq	%rdi, %rbp
 13699 5230 53       		pushq	%rbx
GAS LISTING /tmp/ccmX4xFB.s 			page 390


 13700              		.cfi_def_cfa_offset 56
 13701              		.cfi_offset 3, -56
 13702 5231 89F3     		movl	%esi, %ebx
 13703 5233 4883EC28 		subq	$40, %rsp
 13704              		.cfi_def_cfa_offset 96
 856:sieve_extend.c ****     counter_t valid_primes = 0;
 13705              		.loc 1 856 28 view .LVU6016
 13706 5237 488B17   		movq	(%rdi), %rdx
 13707 523a 488B7F08 		movq	8(%rdi), %rdi
 13708              	.LVL1096:
 13709              	.LBB800:
 13710              	.LBI800:
 825:sieve_extend.c ****     counter_t primeCount = 1;
 13711              		.loc 1 825 18 is_stmt 1 view .LVU6017
 13712              	.LBB801:
 13713              	.LBB802:
 827:sieve_extend.c ****     return primeCount;
 13714              		.loc 1 827 30 view .LVU6018
 13715 523e 4C8B4D10 		movq	16(%rbp), %r9
 827:sieve_extend.c ****     return primeCount;
 13716              		.loc 1 827 5 is_stmt 0 view .LVU6019
 13717 5242 4883FF01 		cmpq	$1, %rdi
 13718 5246 0F861705 		jbe	.L1640
 13718      0000
 827:sieve_extend.c ****     return primeCount;
 13719              		.loc 1 827 20 view .LVU6020
 13720 524c B8010000 		movl	$1, %eax
 13720      00
 13721              	.LBE802:
 826:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse_safe(sieve->bitarray, fa
 13722              		.loc 1 826 15 view .LVU6021
 13723 5251 41B80100 		movl	$1, %r8d
 13723      0000
 13724              	.LVL1097:
 13725 5257 660F1F84 		.p2align 4,,10
 13725      00000000 
 13725      00
 13726              		.p2align 3
 13727              	.L1643:
 13728              	.LBB805:
 827:sieve_extend.c ****     return primeCount;
 13729              		.loc 1 827 109 is_stmt 1 view .LVU6022
 827:sieve_extend.c ****     return primeCount;
 13730              		.loc 1 827 119 is_stmt 0 view .LVU6023
 13731 5260 49FFC0   		incq	%r8
 13732              	.LVL1098:
 827:sieve_extend.c ****     return primeCount;
 13733              		.loc 1 827 52 is_stmt 1 view .LVU6024
 827:sieve_extend.c ****     return primeCount;
 13734              		.loc 1 827 61 is_stmt 0 view .LVU6025
 13735 5263 48FFC0   		incq	%rax
 13736              	.LVL1099:
 13737              	.L1783:
 13738              	.LBB803:
 13739              	.LBI803:
 116:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13740              		.loc 1 116 25 is_stmt 1 view .LVU6026
GAS LISTING /tmp/ccmX4xFB.s 			page 391


 13741              	.LBB804:
 117:sieve_extend.c ****     return index;
 13742              		.loc 1 117 5 view .LVU6027
 117:sieve_extend.c ****     return index;
 13743              		.loc 1 117 11 view .LVU6028
 117:sieve_extend.c ****     return index;
 13744              		.loc 1 117 21 is_stmt 0 view .LVU6029
 13745 5266 4889C1   		movq	%rax, %rcx
 13746 5269 48C1E906 		shrq	$6, %rcx
 117:sieve_extend.c ****     return index;
 13747              		.loc 1 117 12 view .LVU6030
 13748 526d 4C8B1CCA 		movq	(%rdx,%rcx,8), %r11
 117:sieve_extend.c ****     return index;
 13749              		.loc 1 117 11 view .LVU6031
 13750 5271 490FA3C3 		btq	%rax, %r11
 13751 5275 0F83AD00 		jnc	.L1641
 13751      0000
 117:sieve_extend.c ****     return index;
 13752              		.loc 1 117 58 is_stmt 1 view .LVU6032
 117:sieve_extend.c ****     return index;
 13753              		.loc 1 117 63 is_stmt 0 view .LVU6033
 13754 527b 4C8D6001 		leaq	1(%rax), %r12
 13755              	.LVL1100:
 117:sieve_extend.c ****     return index;
 13756              		.loc 1 117 21 view .LVU6034
 13757 527f 4D89E5   		movq	%r12, %r13
 13758 5282 49C1ED06 		shrq	$6, %r13
 117:sieve_extend.c ****     return index;
 13759              		.loc 1 117 12 view .LVU6035
 13760 5286 4E8B3CEA 		movq	(%rdx,%r13,8), %r15
 117:sieve_extend.c ****     return index;
 13761              		.loc 1 117 63 view .LVU6036
 13762 528a 4C89E0   		movq	%r12, %rax
 117:sieve_extend.c ****     return index;
 13763              		.loc 1 117 11 is_stmt 1 view .LVU6037
 13764 528d 4D0FA3E7 		btq	%r12, %r15
 13765 5291 0F839100 		jnc	.L1641
 13765      0000
 117:sieve_extend.c ****     return index;
 13766              		.loc 1 117 58 view .LVU6038
 13767              	.LVL1101:
 117:sieve_extend.c ****     return index;
 13768              		.loc 1 117 63 is_stmt 0 view .LVU6039
 13769 5297 48FFC0   		incq	%rax
 13770              	.LVL1102:
 117:sieve_extend.c ****     return index;
 13771              		.loc 1 117 11 is_stmt 1 view .LVU6040
 117:sieve_extend.c ****     return index;
 13772              		.loc 1 117 21 is_stmt 0 view .LVU6041
 13773 529a 4989C6   		movq	%rax, %r14
 13774 529d 49C1EE06 		shrq	$6, %r14
 117:sieve_extend.c ****     return index;
 13775              		.loc 1 117 12 view .LVU6042
 13776 52a1 4A8B34F2 		movq	(%rdx,%r14,8), %rsi
 117:sieve_extend.c ****     return index;
 13777              		.loc 1 117 11 view .LVU6043
 13778 52a5 480FA3C6 		btq	%rax, %rsi
GAS LISTING /tmp/ccmX4xFB.s 			page 392


 13779 52a9 737D     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13780              		.loc 1 117 58 is_stmt 1 view .LVU6044
 13781              	.LVL1103:
 117:sieve_extend.c ****     return index;
 13782              		.loc 1 117 63 is_stmt 0 view .LVU6045
 13783 52ab 498D4424 		leaq	2(%r12), %rax
 13783      02
 13784              	.LVL1104:
 117:sieve_extend.c ****     return index;
 13785              		.loc 1 117 11 is_stmt 1 view .LVU6046
 117:sieve_extend.c ****     return index;
 13786              		.loc 1 117 21 is_stmt 0 view .LVU6047
 13787 52b0 4989C2   		movq	%rax, %r10
 13788 52b3 49C1EA06 		shrq	$6, %r10
 117:sieve_extend.c ****     return index;
 13789              		.loc 1 117 12 view .LVU6048
 13790 52b7 4A8B0CD2 		movq	(%rdx,%r10,8), %rcx
 117:sieve_extend.c ****     return index;
 13791              		.loc 1 117 11 view .LVU6049
 13792 52bb 480FA3C1 		btq	%rax, %rcx
 13793 52bf 7367     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13794              		.loc 1 117 58 is_stmt 1 view .LVU6050
 13795              	.LVL1105:
 117:sieve_extend.c ****     return index;
 13796              		.loc 1 117 63 is_stmt 0 view .LVU6051
 13797 52c1 498D4424 		leaq	3(%r12), %rax
 13797      03
 13798              	.LVL1106:
 117:sieve_extend.c ****     return index;
 13799              		.loc 1 117 11 is_stmt 1 view .LVU6052
 117:sieve_extend.c ****     return index;
 13800              		.loc 1 117 21 is_stmt 0 view .LVU6053
 13801 52c6 4989C3   		movq	%rax, %r11
 13802 52c9 49C1EB06 		shrq	$6, %r11
 117:sieve_extend.c ****     return index;
 13803              		.loc 1 117 12 view .LVU6054
 13804 52cd 4E8B2CDA 		movq	(%rdx,%r11,8), %r13
 117:sieve_extend.c ****     return index;
 13805              		.loc 1 117 11 view .LVU6055
 13806 52d1 490FA3C5 		btq	%rax, %r13
 13807 52d5 7351     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13808              		.loc 1 117 58 is_stmt 1 view .LVU6056
 13809              	.LVL1107:
 117:sieve_extend.c ****     return index;
 13810              		.loc 1 117 63 is_stmt 0 view .LVU6057
 13811 52d7 498D4424 		leaq	4(%r12), %rax
 13811      04
 13812              	.LVL1108:
 117:sieve_extend.c ****     return index;
 13813              		.loc 1 117 11 is_stmt 1 view .LVU6058
 117:sieve_extend.c ****     return index;
 13814              		.loc 1 117 21 is_stmt 0 view .LVU6059
 13815 52dc 4989C7   		movq	%rax, %r15
 13816 52df 49C1EF06 		shrq	$6, %r15
GAS LISTING /tmp/ccmX4xFB.s 			page 393


 117:sieve_extend.c ****     return index;
 13817              		.loc 1 117 12 view .LVU6060
 13818 52e3 4E8B34FA 		movq	(%rdx,%r15,8), %r14
 117:sieve_extend.c ****     return index;
 13819              		.loc 1 117 11 view .LVU6061
 13820 52e7 490FA3C6 		btq	%rax, %r14
 13821 52eb 733B     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13822              		.loc 1 117 58 is_stmt 1 view .LVU6062
 13823              	.LVL1109:
 117:sieve_extend.c ****     return index;
 13824              		.loc 1 117 63 is_stmt 0 view .LVU6063
 13825 52ed 498D4424 		leaq	5(%r12), %rax
 13825      05
 13826              	.LVL1110:
 117:sieve_extend.c ****     return index;
 13827              		.loc 1 117 11 is_stmt 1 view .LVU6064
 117:sieve_extend.c ****     return index;
 13828              		.loc 1 117 21 is_stmt 0 view .LVU6065
 13829 52f2 4889C6   		movq	%rax, %rsi
 13830 52f5 48C1EE06 		shrq	$6, %rsi
 117:sieve_extend.c ****     return index;
 13831              		.loc 1 117 12 view .LVU6066
 13832 52f9 4C8B14F2 		movq	(%rdx,%rsi,8), %r10
 117:sieve_extend.c ****     return index;
 13833              		.loc 1 117 11 view .LVU6067
 13834 52fd 490FA3C2 		btq	%rax, %r10
 13835 5301 7325     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13836              		.loc 1 117 58 is_stmt 1 view .LVU6068
 13837              	.LVL1111:
 117:sieve_extend.c ****     return index;
 13838              		.loc 1 117 63 is_stmt 0 view .LVU6069
 13839 5303 498D4424 		leaq	6(%r12), %rax
 13839      06
 13840              	.LVL1112:
 117:sieve_extend.c ****     return index;
 13841              		.loc 1 117 11 is_stmt 1 view .LVU6070
 117:sieve_extend.c ****     return index;
 13842              		.loc 1 117 21 is_stmt 0 view .LVU6071
 13843 5308 4889C1   		movq	%rax, %rcx
 13844 530b 48C1E906 		shrq	$6, %rcx
 117:sieve_extend.c ****     return index;
 13845              		.loc 1 117 12 view .LVU6072
 13846 530f 4C8B1CCA 		movq	(%rdx,%rcx,8), %r11
 117:sieve_extend.c ****     return index;
 13847              		.loc 1 117 11 view .LVU6073
 13848 5313 490FA3C3 		btq	%rax, %r11
 13849 5317 730F     		jnc	.L1641
 117:sieve_extend.c ****     return index;
 13850              		.loc 1 117 58 is_stmt 1 view .LVU6074
 13851              	.LVL1113:
 117:sieve_extend.c ****     return index;
 13852              		.loc 1 117 63 is_stmt 0 view .LVU6075
 13853 5319 498D4424 		leaq	7(%r12), %rax
 13853      07
 13854              	.LVL1114:
GAS LISTING /tmp/ccmX4xFB.s 			page 394


 117:sieve_extend.c ****     return index;
 13855              		.loc 1 117 11 is_stmt 1 view .LVU6076
 13856 531e E943FFFF 		jmp	.L1783
 13856      FF
 13857              		.p2align 4,,10
 13858 5323 0F1F4400 		.p2align 3
 13858      00
 13859              	.L1641:
 13860              	.LVL1115:
 117:sieve_extend.c ****     return index;
 13861              		.loc 1 117 11 is_stmt 0 view .LVU6077
 13862              	.LBE804:
 13863              	.LBE803:
 827:sieve_extend.c ****     return primeCount;
 13864              		.loc 1 827 30 is_stmt 1 view .LVU6078
 827:sieve_extend.c ****     return primeCount;
 13865              		.loc 1 827 5 is_stmt 0 view .LVU6079
 13866 5328 4839C7   		cmpq	%rax, %rdi
 13867 532b 0F872FFF 		ja	.L1643
 13867      FFFF
 827:sieve_extend.c ****     return primeCount;
 13868              		.loc 1 827 5 view .LVU6080
 13869              	.LBE805:
 828:sieve_extend.c **** }
 13870              		.loc 1 828 5 is_stmt 1 view .LVU6081
 13871              	.LVL1116:
 828:sieve_extend.c **** }
 13872              		.loc 1 828 5 is_stmt 0 view .LVU6082
 13873              	.LBE801:
 13874              	.LBE800:
 857:sieve_extend.c ****     switch(sieve->size) {
 13875              		.loc 1 857 5 is_stmt 1 view .LVU6083
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13876              		.loc 1 858 5 view .LVU6084
 13877 5331 83FB03   		cmpl	$3, %ebx
 13878 5334 0F9FC2   		setg	%dl
 13879 5337 4981F9A0 		cmpq	$100000, %r9
 13879      860100
 13880 533e 0F843806 		je	.L1644
 13880      0000
 13881 5344 0F86CA02 		jbe	.L1784
 13881      0000
 13882 534a 4981F900 		cmpq	$100000000, %r9
 13882      E1F505
 13883 5351 0F84E405 		je	.L1652
 13883      0000
 13884 5357 0F863303 		jbe	.L1785
 13884      0000
 13885 535d 4981F900 		cmpq	$1000000000, %r9
 13885      CA9A3B
 13886 5364 0F85F605 		jne	.L1650
 13886      0000
 13887 536a 4981F82E 		cmpq	$50847534, %r8
 13887      DF0703
 13888 5371 410F94C4 		sete	%r12b
 13889 5375 4421E2   		andl	%r12d, %edx
 13890 5378 4981F82E 		cmpq	$50847534, %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 395


 13890      DF0703
 13891 537f 450FB6EC 		movzbl	%r12b, %r13d
 13892 5383 410F95C6 		setne	%r14b
 867:sieve_extend.c ****         default:            valid_primes= 0;
 13893              		.loc 1 867 29 view .LVU6085
 13894              	.LVL1117:
 867:sieve_extend.c ****         default:            valid_primes= 0;
 13895              		.loc 1 867 54 view .LVU6086
 867:sieve_extend.c ****         default:            valid_primes= 0;
 13896              		.loc 1 867 42 is_stmt 0 view .LVU6087
 13897 5387 B92EDF07 		movl	$50847534, %ecx
 13897      03
 13898              	.LVL1118:
 13899 538c 0F1F4000 		.p2align 4,,10
 13900              		.p2align 3
 13901              	.L1657:
 871:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13902              		.loc 1 871 5 is_stmt 1 view .LVU6088
 872:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13903              		.loc 1 872 5 view .LVU6089
 872:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13904              		.loc 1 872 8 is_stmt 0 view .LVU6090
 13905 5390 84D2     		testb	%dl, %dl
 13906 5392 0F842204 		je	.L1658
 13906      0000
 872:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13907              		.loc 1 872 45 is_stmt 1 discriminator 1 view .LVU6091
 13908              	.LVL1119:
 13909              	.LBB807:
 13910              	.LBI807:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13911              		.loc 3 105 1 discriminator 1 view .LVU6092
 13912              	.LBB808:
 13913              		.loc 3 107 3 discriminator 1 view .LVU6093
 13914              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6094
 13915 5398 4C89CA   		movq	%r9, %rdx
 13916 539b 488D3500 		leaq	.LC5(%rip), %rsi
 13916      000000
 13917 53a2 BF010000 		movl	$1, %edi
 13917      00
 13918 53a7 31C0     		xorl	%eax, %eax
 13919 53a9 E8000000 		call	__printf_chk@PLT
 13919      00
 13920              	.LVL1120:
 13921              		.loc 3 107 10 discriminator 1 view .LVU6095
 13922              	.LBE808:
 13923              	.LBE807:
 873:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13924              		.loc 1 873 5 is_stmt 1 discriminator 1 view .LVU6096
 13925              	.L1659:
 877:sieve_extend.c ****     return (valid);
 13926              		.loc 1 877 5 view .LVU6097
 877:sieve_extend.c ****     return (valid);
 13927              		.loc 1 877 8 is_stmt 0 view .LVU6098
 13928 53ae 83FB02   		cmpl	$2, %ebx
 13929 53b1 0F8E4B02 		jle	.L1639
 13929      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 396


 13930 53b7 4584F6   		testb	%r14b, %r14b
 13931 53ba 0F844202 		je	.L1639
 13931      0000
 877:sieve_extend.c ****     return (valid);
 13932              		.loc 1 877 45 is_stmt 1 discriminator 1 view .LVU6099
 13933              	.LBB809:
 13934              	.LBI809:
 831:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13935              		.loc 1 831 13 discriminator 1 view .LVU6100
 13936              	.LVL1121:
 13937              	.LBB810:
 832:sieve_extend.c ****     counter_t warn_prime = 0;
 13938              		.loc 1 832 5 discriminator 1 view .LVU6101
 13939              	.LBB811:
 13940              	.LBI811:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13941              		.loc 3 105 1 discriminator 1 view .LVU6102
 13942              	.LBB812:
 13943              		.loc 3 107 3 discriminator 1 view .LVU6103
 13944              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6104
 13945 53c0 488D3D00 		leaq	.LC7(%rip), %rdi
 13945      000000
 13946 53c7 E8000000 		call	puts@PLT
 13946      00
 13947              	.LVL1122:
 13948              		.loc 3 107 10 discriminator 1 view .LVU6105
 13949              	.LBE812:
 13950              	.LBE811:
 833:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13951              		.loc 1 833 5 is_stmt 1 discriminator 1 view .LVU6106
 834:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13952              		.loc 1 834 5 discriminator 1 view .LVU6107
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13953              		.loc 1 835 5 discriminator 1 view .LVU6108
 13954              	.LBB813:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13955              		.loc 1 835 10 discriminator 1 view .LVU6109
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13956              		.loc 1 835 31 discriminator 1 view .LVU6110
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13957              		.loc 1 835 44 is_stmt 0 discriminator 1 view .LVU6111
 13958 53cc 488B7D08 		movq	8(%rbp), %rdi
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13959              		.loc 1 835 5 discriminator 1 view .LVU6112
 13960 53d0 4883FF01 		cmpq	$1, %rdi
 13961 53d4 0F862802 		jbe	.L1639
 13961      0000
 13962              	.LBE813:
 834:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13963              		.loc 1 834 15 view .LVU6113
 13964 53da 48C74424 		movq	$0, 8(%rsp)
 13964      08000000 
 13964      00
 13965              	.LBB835:
 13966              	.LBB814:
 13967              	.LBB815:
 13968              	.LBB816:
GAS LISTING /tmp/ccmX4xFB.s 			page 397


 13969              		.loc 3 107 10 view .LVU6114
 13970 53e3 44896C24 		movl	%r13d, 20(%rsp)
 13970      14
 13971              	.LBE816:
 13972              	.LBE815:
 13973              	.LBE814:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13974              		.loc 1 835 5 view .LVU6115
 13975 53e8 41BF0200 		movl	$2, %r15d
 13975      0000
 13976 53ee 41BC0300 		movl	$3, %r12d
 13976      0000
 13977              	.LBE835:
 833:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13978              		.loc 1 833 15 view .LVU6116
 13979 53f4 4531C0   		xorl	%r8d, %r8d
 13980              	.LBB836:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13981              		.loc 1 835 20 view .LVU6117
 13982 53f7 41BE0100 		movl	$1, %r14d
 13982      0000
 13983              	.LBB823:
 13984              	.LBB820:
 13985              	.LBB817:
 13986              		.loc 3 107 10 view .LVU6118
 13987 53fd 4989ED   		movq	%rbp, %r13
 13988              	.LVL1123:
 13989              		.p2align 4,,10
 13990              		.p2align 3
 13991              	.L1669:
 13992              		.loc 3 107 10 view .LVU6119
 13993              	.LBE817:
 13994              	.LBE820:
 13995              	.LBE823:
 836:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13996              		.loc 1 836 9 is_stmt 1 view .LVU6120
 836:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13997              		.loc 1 836 29 is_stmt 0 view .LVU6121
 13998 5400 498B6D00 		movq	0(%r13), %rbp
 836:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13999              		.loc 1 836 30 view .LVU6122
 14000 5404 4C89F3   		movq	%r14, %rbx
 14001 5407 48C1EB06 		shrq	$6, %rbx
 836:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14002              		.loc 1 836 71 view .LVU6123
 14003 540b 4C8B4CDD 		movq	0(%rbp,%rbx,8), %r9
 14003      00
 14004 5410 C4C28BF7 		shrx	%r14, %r9, %rcx
 14004      C9
 836:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14005              		.loc 1 836 12 view .LVU6124
 14006 5415 83E101   		andl	$1, %ecx
 14007 5418 0F84BA02 		je	.L1661
 14007      0000
 14008              	.LVL1124:
 14009              	.LBB824:
 14010              	.LBB825:
GAS LISTING /tmp/ccmX4xFB.s 			page 398


 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14011              		.loc 1 845 32 is_stmt 1 view .LVU6125
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14012              		.loc 1 845 13 is_stmt 0 view .LVU6126
 14013 541e BE030000 		movl	$3, %esi
 14013      00
 14014              	.LBE825:
 844:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14015              		.loc 1 844 23 view .LVU6127
 14016 5423 31ED     		xorl	%ebp, %ebp
 14017              	.LBB826:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14018              		.loc 1 845 13 view .LVU6128
 14019 5425 4885FF   		testq	%rdi, %rdi
 14020 5428 0F84EC03 		je	.L1773
 14020      0000
 14021 542e 4989FB   		movq	%rdi, %r11
 14022 5431 4929CB   		subq	%rcx, %r11
 14023 5434 4183E303 		andl	$3, %r11d
 14024 5438 4D89DA   		movq	%r11, %r10
 14025 543b 0F84B700 		je	.L1662
 14025      0000
 14026              	.LVL1125:
 846:sieve_extend.c ****             }
 14027              		.loc 1 846 17 is_stmt 1 view .LVU6129
 846:sieve_extend.c ****             }
 14028              		.loc 1 846 48 is_stmt 0 view .LVU6130
 14029 5441 488D0409 		leaq	(%rcx,%rcx), %rax
 14030 5445 4C39F8   		cmpq	%r15, %rax
 14031 5448 7411     		je	.L1714
 846:sieve_extend.c ****             }
 14032              		.loc 1 846 33 view .LVU6131
 14033 544a 31D2     		xorl	%edx, %edx
 14034 544c 4C89E0   		movq	%r12, %rax
 14035 544f 48F7F6   		divq	%rsi
 846:sieve_extend.c ****             }
 14036              		.loc 1 846 82 view .LVU6132
 14037 5452 31ED     		xorl	%ebp, %ebp
 846:sieve_extend.c ****             }
 14038              		.loc 1 846 82 view .LVU6133
 14039 5454 4885D2   		testq	%rdx, %rdx
 14040 5457 400F94C5 		sete	%bpl
 14041              	.LVL1126:
 14042              	.L1714:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14043              		.loc 1 845 68 is_stmt 1 view .LVU6134
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14044              		.loc 1 845 69 is_stmt 0 view .LVU6135
 14045 545b 48FFC1   		incq	%rcx
 14046              	.LVL1127:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14047              		.loc 1 845 32 is_stmt 1 view .LVU6136
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14048              		.loc 1 845 13 is_stmt 0 view .LVU6137
 14049 545e 4839F9   		cmpq	%rdi, %rcx
 14050 5461 0F877901 		ja	.L1668
 14050      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 399


 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14051              		.loc 1 845 51 view .LVU6138
 14052 5467 4989C9   		movq	%rcx, %r9
 14053 546a 4C0FAFC9 		imulq	%rcx, %r9
 14054 546e BE050000 		movl	$5, %esi
 14054      00
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14055              		.loc 1 845 47 view .LVU6139
 14056 5473 4D39E1   		cmpq	%r12, %r9
 14057 5476 0F876401 		ja	.L1668
 14057      0000
 14058 547c 4983FA01 		cmpq	$1, %r10
 14059 5480 7476     		je	.L1662
 14060 5482 4983FA02 		cmpq	$2, %r10
 14061 5486 7437     		je	.L1745
 846:sieve_extend.c ****             }
 14062              		.loc 1 846 17 is_stmt 1 view .LVU6140
 846:sieve_extend.c ****             }
 14063              		.loc 1 846 48 is_stmt 0 view .LVU6141
 14064 5488 488D1C09 		leaq	(%rcx,%rcx), %rbx
 14065 548c 4C39FB   		cmpq	%r15, %rbx
 14066 548f 7417     		je	.L1716
 846:sieve_extend.c ****             }
 14067              		.loc 1 846 33 view .LVU6142
 14068 5491 31D2     		xorl	%edx, %edx
 14069 5493 4C89E0   		movq	%r12, %rax
 14070 5496 48F7F6   		divq	%rsi
 846:sieve_extend.c ****             }
 14071              		.loc 1 846 20 view .LVU6143
 14072 5499 4885D2   		testq	%rdx, %rdx
 14073 549c 410F94C3 		sete	%r11b
 846:sieve_extend.c ****             }
 14074              		.loc 1 846 82 view .LVU6144
 14075 54a0 4180FB01 		cmpb	$1, %r11b
 14076 54a4 4883DDFF 		sbbq	$-1, %rbp
 14077              	.LVL1128:
 14078              	.L1716:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14079              		.loc 1 845 68 is_stmt 1 view .LVU6145
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14080              		.loc 1 845 69 is_stmt 0 view .LVU6146
 14081 54a8 48FFC1   		incq	%rcx
 14082              	.LVL1129:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14083              		.loc 1 845 32 is_stmt 1 view .LVU6147
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14084              		.loc 1 845 51 is_stmt 0 view .LVU6148
 14085 54ab 4989CA   		movq	%rcx, %r10
 14086 54ae 4C0FAFD1 		imulq	%rcx, %r10
 14087 54b2 4883C602 		addq	$2, %rsi
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14088              		.loc 1 845 47 view .LVU6149
 14089 54b6 4D39E2   		cmpq	%r12, %r10
 14090 54b9 0F872101 		ja	.L1668
 14090      0000
 14091              	.L1745:
 846:sieve_extend.c ****             }
GAS LISTING /tmp/ccmX4xFB.s 			page 400


 14092              		.loc 1 846 17 is_stmt 1 view .LVU6150
 846:sieve_extend.c ****             }
 14093              		.loc 1 846 48 is_stmt 0 view .LVU6151
 14094 54bf 4C8D0C09 		leaq	(%rcx,%rcx), %r9
 14095 54c3 4D39F9   		cmpq	%r15, %r9
 14096 54c6 7415     		je	.L1719
 846:sieve_extend.c ****             }
 14097              		.loc 1 846 33 view .LVU6152
 14098 54c8 31D2     		xorl	%edx, %edx
 14099 54ca 4C89E0   		movq	%r12, %rax
 14100 54cd 48F7F6   		divq	%rsi
 846:sieve_extend.c ****             }
 14101              		.loc 1 846 20 view .LVU6153
 14102 54d0 4885D2   		testq	%rdx, %rdx
 14103 54d3 0F94C3   		sete	%bl
 846:sieve_extend.c ****             }
 14104              		.loc 1 846 82 view .LVU6154
 14105 54d6 80FB01   		cmpb	$1, %bl
 14106 54d9 4883DDFF 		sbbq	$-1, %rbp
 14107              	.LVL1130:
 14108              	.L1719:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14109              		.loc 1 845 68 is_stmt 1 view .LVU6155
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14110              		.loc 1 845 69 is_stmt 0 view .LVU6156
 14111 54dd 48FFC1   		incq	%rcx
 14112              	.LVL1131:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14113              		.loc 1 845 32 is_stmt 1 view .LVU6157
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14114              		.loc 1 845 51 is_stmt 0 view .LVU6158
 14115 54e0 4989CB   		movq	%rcx, %r11
 14116 54e3 4C0FAFD9 		imulq	%rcx, %r11
 14117 54e7 4883C602 		addq	$2, %rsi
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14118              		.loc 1 845 47 view .LVU6159
 14119 54eb 4D39E3   		cmpq	%r12, %r11
 14120 54ee 0F87EC00 		ja	.L1668
 14120      0000
 14121              	.LVL1132:
 14122              		.p2align 4,,10
 14123 54f4 0F1F4000 		.p2align 3
 14124              	.L1662:
 846:sieve_extend.c ****             }
 14125              		.loc 1 846 17 is_stmt 1 view .LVU6160
 846:sieve_extend.c ****             }
 14126              		.loc 1 846 48 is_stmt 0 view .LVU6161
 14127 54f8 4C8D1409 		leaq	(%rcx,%rcx), %r10
 14128 54fc 4D39FA   		cmpq	%r15, %r10
 14129 54ff 7417     		je	.L1667
 846:sieve_extend.c ****             }
 14130              		.loc 1 846 33 view .LVU6162
 14131 5501 31D2     		xorl	%edx, %edx
 14132 5503 4C89E0   		movq	%r12, %rax
 14133 5506 48F7F6   		divq	%rsi
 846:sieve_extend.c ****             }
 14134              		.loc 1 846 20 view .LVU6163
GAS LISTING /tmp/ccmX4xFB.s 			page 401


 14135 5509 4885D2   		testq	%rdx, %rdx
 14136 550c 410F94C1 		sete	%r9b
 846:sieve_extend.c ****             }
 14137              		.loc 1 846 82 view .LVU6164
 14138 5510 4180F901 		cmpb	$1, %r9b
 14139 5514 4883DDFF 		sbbq	$-1, %rbp
 14140              	.LVL1133:
 14141              	.L1667:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14142              		.loc 1 845 68 is_stmt 1 view .LVU6165
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14143              		.loc 1 845 69 is_stmt 0 view .LVU6166
 14144 5518 48FFC1   		incq	%rcx
 14145              	.LVL1134:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14146              		.loc 1 845 32 is_stmt 1 view .LVU6167
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14147              		.loc 1 845 13 is_stmt 0 view .LVU6168
 14148 551b 4839F9   		cmpq	%rdi, %rcx
 14149 551e 0F87BC00 		ja	.L1668
 14149      0000
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14150              		.loc 1 845 51 view .LVU6169
 14151 5524 4889CB   		movq	%rcx, %rbx
 14152 5527 480FAFD9 		imulq	%rcx, %rbx
 14153 552b 4883C602 		addq	$2, %rsi
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14154              		.loc 1 845 47 view .LVU6170
 14155 552f 4C39E3   		cmpq	%r12, %rbx
 14156 5532 0F87A800 		ja	.L1668
 14156      0000
 846:sieve_extend.c ****             }
 14157              		.loc 1 846 17 is_stmt 1 view .LVU6171
 846:sieve_extend.c ****             }
 14158              		.loc 1 846 48 is_stmt 0 view .LVU6172
 14159 5538 4C8D1C09 		leaq	(%rcx,%rcx), %r11
 14160 553c 4D39FB   		cmpq	%r15, %r11
 14161 553f 7417     		je	.L1723
 846:sieve_extend.c ****             }
 14162              		.loc 1 846 33 view .LVU6173
 14163 5541 31D2     		xorl	%edx, %edx
 14164 5543 4C89E0   		movq	%r12, %rax
 14165 5546 48F7F6   		divq	%rsi
 846:sieve_extend.c ****             }
 14166              		.loc 1 846 20 view .LVU6174
 14167 5549 4885D2   		testq	%rdx, %rdx
 14168 554c 410F94C2 		sete	%r10b
 846:sieve_extend.c ****             }
 14169              		.loc 1 846 82 view .LVU6175
 14170 5550 4180FA01 		cmpb	$1, %r10b
 14171 5554 4883DDFF 		sbbq	$-1, %rbp
 14172              	.LVL1135:
 14173              	.L1723:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14174              		.loc 1 845 68 is_stmt 1 view .LVU6176
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14175              		.loc 1 845 69 is_stmt 0 view .LVU6177
GAS LISTING /tmp/ccmX4xFB.s 			page 402


 14176 5558 4C8D4901 		leaq	1(%rcx), %r9
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14177              		.loc 1 845 32 is_stmt 1 view .LVU6178
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14178              		.loc 1 845 51 is_stmt 0 view .LVU6179
 14179 555c 4D89CB   		movq	%r9, %r11
 14180 555f 4D0FAFD9 		imulq	%r9, %r11
 14181 5563 488D5E02 		leaq	2(%rsi), %rbx
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14182              		.loc 1 845 47 view .LVU6180
 14183 5567 4D39E3   		cmpq	%r12, %r11
 14184 556a 7774     		ja	.L1668
 846:sieve_extend.c ****             }
 14185              		.loc 1 846 17 is_stmt 1 view .LVU6181
 846:sieve_extend.c ****             }
 14186              		.loc 1 846 48 is_stmt 0 view .LVU6182
 14187 556c 4D01C9   		addq	%r9, %r9
 14188 556f 4D39F9   		cmpq	%r15, %r9
 14189 5572 7417     		je	.L1725
 846:sieve_extend.c ****             }
 14190              		.loc 1 846 33 view .LVU6183
 14191 5574 31D2     		xorl	%edx, %edx
 14192 5576 4C89E0   		movq	%r12, %rax
 14193 5579 48F7F3   		divq	%rbx
 846:sieve_extend.c ****             }
 14194              		.loc 1 846 20 view .LVU6184
 14195 557c 4885D2   		testq	%rdx, %rdx
 14196 557f 410F94C2 		sete	%r10b
 846:sieve_extend.c ****             }
 14197              		.loc 1 846 82 view .LVU6185
 14198 5583 4180FA01 		cmpb	$1, %r10b
 14199 5587 4883DDFF 		sbbq	$-1, %rbp
 14200              	.LVL1136:
 14201              	.L1725:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14202              		.loc 1 845 68 is_stmt 1 view .LVU6186
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14203              		.loc 1 845 69 is_stmt 0 view .LVU6187
 14204 558b 4C8D4902 		leaq	2(%rcx), %r9
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14205              		.loc 1 845 32 is_stmt 1 view .LVU6188
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14206              		.loc 1 845 51 is_stmt 0 view .LVU6189
 14207 558f 4D89CB   		movq	%r9, %r11
 14208 5592 4D0FAFD9 		imulq	%r9, %r11
 14209 5596 488D5E04 		leaq	4(%rsi), %rbx
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14210              		.loc 1 845 47 view .LVU6190
 14211 559a 4D39E3   		cmpq	%r12, %r11
 14212 559d 7741     		ja	.L1668
 846:sieve_extend.c ****             }
 14213              		.loc 1 846 17 is_stmt 1 view .LVU6191
 846:sieve_extend.c ****             }
 14214              		.loc 1 846 48 is_stmt 0 view .LVU6192
 14215 559f 4D01C9   		addq	%r9, %r9
 14216 55a2 4D39F9   		cmpq	%r15, %r9
 14217 55a5 7417     		je	.L1727
GAS LISTING /tmp/ccmX4xFB.s 			page 403


 846:sieve_extend.c ****             }
 14218              		.loc 1 846 33 view .LVU6193
 14219 55a7 31D2     		xorl	%edx, %edx
 14220 55a9 4C89E0   		movq	%r12, %rax
 14221 55ac 48F7F3   		divq	%rbx
 846:sieve_extend.c ****             }
 14222              		.loc 1 846 20 view .LVU6194
 14223 55af 4885D2   		testq	%rdx, %rdx
 14224 55b2 410F94C2 		sete	%r10b
 846:sieve_extend.c ****             }
 14225              		.loc 1 846 82 view .LVU6195
 14226 55b6 4180FA01 		cmpb	$1, %r10b
 14227 55ba 4883DDFF 		sbbq	$-1, %rbp
 14228              	.LVL1137:
 14229              	.L1727:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14230              		.loc 1 845 68 is_stmt 1 view .LVU6196
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14231              		.loc 1 845 69 is_stmt 0 view .LVU6197
 14232 55be 4883C103 		addq	$3, %rcx
 14233              	.LVL1138:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14234              		.loc 1 845 32 is_stmt 1 view .LVU6198
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14235              		.loc 1 845 51 is_stmt 0 view .LVU6199
 14236 55c2 4989C9   		movq	%rcx, %r9
 14237 55c5 4C0FAFC9 		imulq	%rcx, %r9
 14238 55c9 4883C606 		addq	$6, %rsi
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14239              		.loc 1 845 47 view .LVU6200
 14240 55cd 4D39E1   		cmpq	%r12, %r9
 14241 55d0 0F8622FF 		jbe	.L1662
 14241      FFFF
 14242              	.LVL1139:
 14243 55d6 662E0F1F 		.p2align 4,,10
 14243      84000000 
 14243      0000
 14244              		.p2align 3
 14245              	.L1668:
 845:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14246              		.loc 1 845 47 view .LVU6201
 14247              	.LBE826:
 848:sieve_extend.c ****         }
 14248              		.loc 1 848 13 is_stmt 1 view .LVU6202
 848:sieve_extend.c ****         }
 14249              		.loc 1 848 16 is_stmt 0 view .LVU6203
 14250 55e0 4885ED   		testq	%rbp, %rbp
 14251 55e3 0F841802 		je	.L1786
 14251      0000
 14252              	.LVL1140:
 14253              	.L1665:
 848:sieve_extend.c ****         }
 14254              		.loc 1 848 16 view .LVU6204
 14255              	.LBE824:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14256              		.loc 1 835 52 is_stmt 1 view .LVU6205
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccmX4xFB.s 			page 404


 14257              		.loc 1 835 57 is_stmt 0 view .LVU6206
 14258 55e9 49FFC6   		incq	%r14
 14259              	.LVL1141:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14260              		.loc 1 835 31 is_stmt 1 view .LVU6207
 14261 55ec 4983C402 		addq	$2, %r12
 14262 55f0 4983C702 		addq	$2, %r15
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14263              		.loc 1 835 5 is_stmt 0 view .LVU6208
 14264 55f4 4939FE   		cmpq	%rdi, %r14
 14265 55f7 0F8203FE 		jb	.L1669
 14265      FFFF
 14266              	.LVL1142:
 14267              	.L1775:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14268              		.loc 1 835 5 view .LVU6209
 14269 55fd 448B6C24 		movl	20(%rsp), %r13d
 14269      14
 14270              	.LVL1143:
 14271              	.L1639:
 835:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14272              		.loc 1 835 5 view .LVU6210
 14273              	.LBE836:
 14274              	.LBE810:
 14275              	.LBE809:
 879:sieve_extend.c **** 
 14276              		.loc 1 879 1 view .LVU6211
 14277 5602 4883C428 		addq	$40, %rsp
 14278              		.cfi_remember_state
 14279              		.cfi_def_cfa_offset 56
 14280 5606 5B       		popq	%rbx
 14281              		.cfi_def_cfa_offset 48
 14282 5607 5D       		popq	%rbp
 14283              		.cfi_def_cfa_offset 40
 14284 5608 415C     		popq	%r12
 14285              		.cfi_def_cfa_offset 32
 14286 560a 4489E8   		movl	%r13d, %eax
 14287 560d 415D     		popq	%r13
 14288              		.cfi_def_cfa_offset 24
 14289 560f 415E     		popq	%r14
 14290              		.cfi_def_cfa_offset 16
 14291 5611 415F     		popq	%r15
 14292              		.cfi_def_cfa_offset 8
 14293 5613 C3       		ret
 14294              	.LVL1144:
 14295              	.L1784:
 14296              		.cfi_restore_state
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14297              		.loc 1 858 5 view .LVU6212
 14298 5614 4981F9E8 		cmpq	$1000, %r9
 14298      030000
 14299 561b 0F84F302 		je	.L1646
 14299      0000
 14300 5621 7633     		jbe	.L1787
 14301 5623 4981F910 		cmpq	$10000, %r9
 14301      270000
 14302 562a 0F853003 		jne	.L1650
GAS LISTING /tmp/ccmX4xFB.s 			page 405


 14302      0000
 14303 5630 4981F8CD 		cmpq	$1229, %r8
 14303      040000
 14304 5637 400F94C6 		sete	%sil
 14305 563b 21F2     		andl	%esi, %edx
 14306 563d 4981F8CD 		cmpq	$1229, %r8
 14306      040000
 14307 5644 440FB6EE 		movzbl	%sil, %r13d
 14308 5648 410F95C6 		setne	%r14b
 862:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 14309              		.loc 1 862 29 is_stmt 1 view .LVU6213
 14310              	.LVL1145:
 862:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 14311              		.loc 1 862 54 view .LVU6214
 862:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 14312              		.loc 1 862 42 is_stmt 0 view .LVU6215
 14313 564c B9CD0400 		movl	$1229, %ecx
 14313      00
 862:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 14314              		.loc 1 862 9 view .LVU6216
 14315 5651 E93AFDFF 		jmp	.L1657
 14315      FF
 14316              	.LVL1146:
 14317              	.L1787:
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14318              		.loc 1 858 5 view .LVU6217
 14319 5656 4983F90A 		cmpq	$10, %r9
 14320 565a 0F842702 		je	.L1648
 14320      0000
 14321 5660 4983F964 		cmpq	$100, %r9
 14322 5664 0F85F602 		jne	.L1650
 14322      0000
 14323 566a 4983F819 		cmpq	$25, %r8
 14324 566e 0F94C1   		sete	%cl
 14325 5671 21CA     		andl	%ecx, %edx
 14326 5673 4983F819 		cmpq	$25, %r8
 14327 5677 440FB6E9 		movzbl	%cl, %r13d
 14328 567b 410F95C6 		setne	%r14b
 860:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 14329              		.loc 1 860 42 view .LVU6218
 14330 567f B9190000 		movl	$25, %ecx
 14330      00
 14331 5684 E907FDFF 		jmp	.L1657
 14331      FF
 14332 5689 0F1F8000 		.p2align 4,,10
 14332      000000
 14333              		.p2align 3
 14334              	.L1785:
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14335              		.loc 1 858 5 view .LVU6219
 14336 5690 4981F940 		cmpq	$1000000, %r9
 14336      420F00
 14337 5697 0F84C301 		je	.L1654
 14337      0000
 14338 569d 4981F980 		cmpq	$10000000, %r9
 14338      969800
 14339 56a4 0F85B602 		jne	.L1650
GAS LISTING /tmp/ccmX4xFB.s 			page 406


 14339      0000
 14340 56aa 4981F803 		cmpq	$664579, %r8
 14340      240A00
 14341 56b1 410F94C7 		sete	%r15b
 14342 56b5 4421FA   		andl	%r15d, %edx
 14343 56b8 4981F803 		cmpq	$664579, %r8
 14343      240A00
 14344 56bf 450FB6EF 		movzbl	%r15b, %r13d
 14345 56c3 410F95C6 		setne	%r14b
 865:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 14346              		.loc 1 865 29 is_stmt 1 view .LVU6220
 14347              	.LVL1147:
 865:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 14348              		.loc 1 865 54 view .LVU6221
 865:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 14349              		.loc 1 865 42 is_stmt 0 view .LVU6222
 14350 56c7 B903240A 		movl	$664579, %ecx
 14350      00
 865:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 14351              		.loc 1 865 9 view .LVU6223
 14352 56cc E9BFFCFF 		jmp	.L1657
 14352      FF
 14353              	.LVL1148:
 14354              		.p2align 4,,10
 14355 56d1 0F1F8000 		.p2align 3
 14355      000000
 14356              	.L1661:
 14357              	.LBB841:
 14358              	.LBB839:
 14359              	.LBB837:
 14360              	.LBB833:
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14361              		.loc 1 837 32 is_stmt 1 view .LVU6224
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14362              		.loc 1 837 13 is_stmt 0 view .LVU6225
 14363 56d8 4885FF   		testq	%rdi, %rdi
 14364 56db 0F841CFF 		je	.L1775
 14364      FFFF
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14365              		.loc 1 837 27 view .LVU6226
 14366 56e1 BB010000 		movl	$1, %ebx
 14366      00
 14367 56e6 EB27     		jmp	.L1666
 14368              	.LVL1149:
 14369 56e8 0F1F8400 		.p2align 4,,10
 14369      00000000 
 14370              		.p2align 3
 14371              	.L1675:
 839:sieve_extend.c ****                 }
 14372              		.loc 1 839 35 view .LVU6227
 14373 56f0 4989E8   		movq	%rbp, %r8
 14374              	.LVL1150:
 14375              	.L1664:
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14376              		.loc 1 837 68 is_stmt 1 view .LVU6228
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14377              		.loc 1 837 69 is_stmt 0 view .LVU6229
GAS LISTING /tmp/ccmX4xFB.s 			page 407


 14378 56f3 48FFC3   		incq	%rbx
 14379              	.LVL1151:
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14380              		.loc 1 837 32 is_stmt 1 view .LVU6230
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14381              		.loc 1 837 13 is_stmt 0 view .LVU6231
 14382 56f6 4839FB   		cmpq	%rdi, %rbx
 14383 56f9 0F87EAFE 		ja	.L1665
 14383      FFFF
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14384              		.loc 1 837 51 view .LVU6232
 14385 56ff 4989DB   		movq	%rbx, %r11
 14386 5702 4C0FAFDB 		imulq	%rbx, %r11
 837:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14387              		.loc 1 837 47 view .LVU6233
 14388 5706 4D39E3   		cmpq	%r12, %r11
 14389 5709 0F87DAFE 		ja	.L1665
 14389      FFFF
 14390              	.LVL1152:
 14391              	.L1666:
 838:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14392              		.loc 1 838 17 is_stmt 1 view .LVU6234
 14393 570f 488D2C1B 		leaq	(%rbx,%rbx), %rbp
 838:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14394              		.loc 1 838 39 is_stmt 0 view .LVU6235
 14395 5713 488D7501 		leaq	1(%rbp), %rsi
 14396 5717 4C89E0   		movq	%r12, %rax
 14397 571a 31D2     		xorl	%edx, %edx
 14398 571c 48F7F6   		divq	%rsi
 838:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14399              		.loc 1 838 48 view .LVU6236
 14400 571f 4885D2   		testq	%rdx, %rdx
 14401 5722 75CF     		jne	.L1664
 838:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14402              		.loc 1 838 48 view .LVU6237
 14403 5724 4939EF   		cmpq	%rbp, %r15
 14404 5727 74CA     		je	.L1664
 839:sieve_extend.c ****                 }
 14405              		.loc 1 839 21 is_stmt 1 view .LVU6238
 839:sieve_extend.c ****                 }
 14406              		.loc 1 839 35 is_stmt 0 view .LVU6239
 14407 5729 498D6801 		leaq	1(%r8), %rbp
 14408              	.LVL1153:
 839:sieve_extend.c ****                 }
 14409              		.loc 1 839 24 view .LVU6240
 14410 572d 4983F81D 		cmpq	$29, %r8
 14411 5731 77BD     		ja	.L1675
 839:sieve_extend.c ****                 }
 14412              		.loc 1 839 44 is_stmt 1 view .LVU6241
 14413              	.LVL1154:
 14414              	.LBB821:
 14415              	.LBI815:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14416              		.loc 3 105 1 view .LVU6242
 14417              	.LBB818:
 14418              		.loc 3 107 3 view .LVU6243
 14419              		.loc 3 107 10 is_stmt 0 view .LVU6244
GAS LISTING /tmp/ccmX4xFB.s 			page 408


 14420 5733 4883EC08 		subq	$8, %rsp
 14421              		.cfi_def_cfa_offset 104
 14422 5737 4154     		pushq	%r12
 14423              		.cfi_def_cfa_offset 112
 14424 5739 4989F0   		movq	%rsi, %r8
 14425 573c 4989C1   		movq	%rax, %r9
 14426 573f 4C89E2   		movq	%r12, %rdx
 14427 5742 BF010000 		movl	$1, %edi
 14427      00
 14428 5747 4C89F1   		movq	%r14, %rcx
 14429 574a 488D3500 		leaq	.LC8(%rip), %rsi
 14429      000000
 14430 5751 31C0     		xorl	%eax, %eax
 14431 5753 E8000000 		call	__printf_chk@PLT
 14431      00
 14432              	.LVL1155:
 14433 5758 58       		popq	%rax
 14434              		.cfi_def_cfa_offset 104
 14435 5759 498B7D08 		movq	8(%r13), %rdi
 14436 575d 5A       		popq	%rdx
 14437              		.cfi_def_cfa_offset 96
 14438              	.LBE818:
 14439              	.LBE821:
 839:sieve_extend.c ****                 }
 14440              		.loc 1 839 35 view .LVU6245
 14441 575e 4989E8   		movq	%rbp, %r8
 14442              	.LBB822:
 14443              	.LBB819:
 14444              		.loc 3 107 10 view .LVU6246
 14445 5761 EB90     		jmp	.L1664
 14446              	.LVL1156:
 14447              	.L1640:
 14448              		.loc 3 107 10 view .LVU6247
 14449              	.LBE819:
 14450              	.LBE822:
 14451              	.LBE833:
 14452              	.LBE837:
 14453              	.LBE839:
 14454              	.LBE841:
 14455              	.LBB842:
 14456              	.LBB806:
 828:sieve_extend.c **** }
 14457              		.loc 1 828 5 is_stmt 1 view .LVU6248
 828:sieve_extend.c **** }
 14458              		.loc 1 828 5 is_stmt 0 view .LVU6249
 14459              	.LBE806:
 14460              	.LBE842:
 857:sieve_extend.c ****     switch(sieve->size) {
 14461              		.loc 1 857 5 is_stmt 1 view .LVU6250
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14462              		.loc 1 858 5 view .LVU6251
 14463 5763 41BE0100 		movl	$1, %r14d
 14463      0000
 14464 5769 41B80100 		movl	$1, %r8d
 14464      0000
 14465 576f 4531ED   		xorl	%r13d, %r13d
 14466 5772 4981F9A0 		cmpq	$100000, %r9
GAS LISTING /tmp/ccmX4xFB.s 			page 409


 14466      860100
 14467 5779 0F842302 		je	.L1678
 14467      0000
 14468 577f 0F872301 		ja	.L1670
 14468      0000
 14469 5785 B9190000 		movl	$25, %ecx
 14469      00
 14470 578a 4983F964 		cmpq	$100, %r9
 14471 578e 742A     		je	.L1658
 14472 5790 0F864001 		jbe	.L1788
 14472      0000
 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14473              		.loc 1 861 42 is_stmt 0 view .LVU6252
 14474 5796 B9A80000 		movl	$168, %ecx
 14474      00
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14475              		.loc 1 858 5 view .LVU6253
 14476 579b 4981F9E8 		cmpq	$1000, %r9
 14476      030000
 14477 57a2 7416     		je	.L1658
 14478 57a4 4981F910 		cmpq	$10000, %r9
 14478      270000
 14479 57ab B9CD0400 		movl	$1229, %ecx
 14479      00
 14480 57b0 41BA0000 		movl	$0, %r10d
 14480      0000
 14481 57b6 490F45CA 		cmovne	%r10, %rcx
 14482              	.LVL1157:
 14483              	.L1658:
 873:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14484              		.loc 1 873 5 is_stmt 1 view .LVU6254
 873:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14485              		.loc 1 873 39 is_stmt 0 view .LVU6255
 14486 57ba 85DB     		testl	%ebx, %ebx
 14487 57bc 410F9FC4 		setg	%r12b
 873:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14488              		.loc 1 873 8 view .LVU6256
 14489 57c0 4520F4   		andb	%r14b, %r12b
 14490 57c3 0F84E5FB 		je	.L1659
 14490      FFFF
 874:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 14491              		.loc 1 874 9 is_stmt 1 view .LVU6257
 14492              	.LVL1158:
 14493              	.LBB843:
 14494              	.LBI843:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14495              		.loc 3 105 1 view .LVU6258
 14496              	.LBB844:
 14497              		.loc 3 107 3 view .LVU6259
 14498              		.loc 3 107 10 is_stmt 0 view .LVU6260
 14499 57c9 31C0     		xorl	%eax, %eax
 14500 57cb 4C89CA   		movq	%r9, %rdx
 14501 57ce 488D3500 		leaq	.LC6(%rip), %rsi
 14501      000000
 14502 57d5 BF010000 		movl	$1, %edi
 14502      00
 14503 57da E8000000 		call	__printf_chk@PLT
GAS LISTING /tmp/ccmX4xFB.s 			page 410


 14503      00
 14504              	.LVL1159:
 14505              		.loc 3 107 10 view .LVU6261
 14506              	.LBE844:
 14507              	.LBE843:
 875:sieve_extend.c ****     }
 14508              		.loc 1 875 9 is_stmt 1 view .LVU6262
 875:sieve_extend.c ****     }
 14509              		.loc 1 875 12 is_stmt 0 view .LVU6263
 14510 57df 83FB01   		cmpl	$1, %ebx
 14511 57e2 0F841AFE 		je	.L1639
 14511      FFFF
 875:sieve_extend.c ****     }
 14512              		.loc 1 875 49 is_stmt 1 discriminator 1 view .LVU6264
 14513 57e8 488D7508 		leaq	8(%rbp), %rsi
 14514 57ec BA640000 		movl	$100, %edx
 14514      00
 14515 57f1 4889EF   		movq	%rbp, %rdi
 14516 57f4 E807CFFF 		call	show_primes.isra.0
 14516      FF
 14517              	.LVL1160:
 873:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14518              		.loc 1 873 9 is_stmt 0 discriminator 1 view .LVU6265
 14519 57f9 4589E6   		movl	%r12d, %r14d
 14520 57fc E9ADFBFF 		jmp	.L1659
 14520      FF
 14521              	.LVL1161:
 14522              	.L1786:
 14523              	.LBB845:
 14524              	.LBB840:
 14525              	.LBB838:
 14526              	.LBB834:
 848:sieve_extend.c ****         }
 14527              		.loc 1 848 44 view .LVU6266
 14528 5801 488B4C24 		movq	8(%rsp), %rcx
 14528      08
 14529 5806 488D5901 		leaq	1(%rcx), %rbx
 14530              	.LVL1162:
 848:sieve_extend.c ****         }
 14531              		.loc 1 848 28 view .LVU6267
 14532 580a 4883F91D 		cmpq	$29, %rcx
 14533 580e 761D     		jbe	.L1673
 848:sieve_extend.c ****         }
 14534              		.loc 1 848 44 view .LVU6268
 14535 5810 48895C24 		movq	%rbx, 8(%rsp)
 14535      08
 14536 5815 E9CFFDFF 		jmp	.L1665
 14536      FF
 14537              	.LVL1163:
 14538              	.L1773:
 848:sieve_extend.c ****         }
 14539              		.loc 1 848 44 view .LVU6269
 14540 581a 488B5424 		movq	8(%rsp), %rdx
 14540      08
 14541 581f 488D5A01 		leaq	1(%rdx), %rbx
 14542              	.LVL1164:
 848:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 411


 14543              		.loc 1 848 28 view .LVU6270
 14544 5823 4883FA1D 		cmpq	$29, %rdx
 14545 5827 0F87D0FD 		ja	.L1775
 14545      FFFF
 14546              	.LVL1165:
 14547              	.L1673:
 14548              	.LBB827:
 14549              	.LBB828:
 14550              		.loc 3 107 10 view .LVU6271
 14551 582d BF010000 		movl	$1, %edi
 14551      00
 14552              	.LBE828:
 14553              	.LBE827:
 848:sieve_extend.c ****         }
 14554              		.loc 1 848 53 view .LVU6272
 14555 5832 4B8D5436 		leaq	1(%r14,%r14), %rdx
 14555      01
 14556              	.LBB831:
 14557              	.LBB829:
 14558              		.loc 3 107 10 view .LVU6273
 14559 5837 4C89F1   		movq	%r14, %rcx
 14560 583a 488D3500 		leaq	.LC9(%rip), %rsi
 14560      000000
 14561 5841 31C0     		xorl	%eax, %eax
 14562 5843 4C894424 		movq	%r8, 24(%rsp)
 14562      18
 14563              	.LBE829:
 14564              	.LBE831:
 848:sieve_extend.c ****         }
 14565              		.loc 1 848 53 is_stmt 1 view .LVU6274
 14566              	.LVL1166:
 14567              	.LBB832:
 14568              	.LBI827:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14569              		.loc 3 105 1 view .LVU6275
 14570              	.LBB830:
 14571              		.loc 3 107 3 view .LVU6276
 14572              		.loc 3 107 10 is_stmt 0 view .LVU6277
 14573 5848 E8000000 		call	__printf_chk@PLT
 14573      00
 14574              	.LVL1167:
 14575              		.loc 3 107 10 view .LVU6278
 14576 584d 48895C24 		movq	%rbx, 8(%rsp)
 14576      08
 14577 5852 498B7D08 		movq	8(%r13), %rdi
 14578 5856 4C8B4424 		movq	24(%rsp), %r8
 14578      18
 14579 585b E989FDFF 		jmp	.L1665
 14579      FF
 14580              	.LVL1168:
 14581              	.L1654:
 14582              		.loc 3 107 10 view .LVU6279
 14583 5860 4981F8A2 		cmpq	$78498, %r8
 14583      320100
 14584 5867 410F94C5 		sete	%r13b
 14585 586b 4421EA   		andl	%r13d, %edx
 14586 586e 4981F8A2 		cmpq	$78498, %r8
GAS LISTING /tmp/ccmX4xFB.s 			page 412


 14586      320100
 14587 5875 450FB6ED 		movzbl	%r13b, %r13d
 14588 5879 410F95C6 		setne	%r14b
 14589              	.LBE830:
 14590              	.LBE832:
 14591              	.LBE834:
 14592              	.LBE838:
 14593              	.LBE840:
 14594              	.LBE845:
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14595              		.loc 1 864 29 is_stmt 1 view .LVU6280
 14596              	.LVL1169:
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14597              		.loc 1 864 54 view .LVU6281
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14598              		.loc 1 864 42 is_stmt 0 view .LVU6282
 14599 587d B9A23201 		movl	$78498, %ecx
 14599      00
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14600              		.loc 1 864 9 view .LVU6283
 14601 5882 E909FBFF 		jmp	.L1657
 14601      FF
 14602              	.LVL1170:
 14603              	.L1648:
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14604              		.loc 1 864 9 view .LVU6284
 14605 5887 4983F804 		cmpq	$4, %r8
 14606 588b 410F94C2 		sete	%r10b
 14607 588f 4421D2   		andl	%r10d, %edx
 14608 5892 4983F804 		cmpq	$4, %r8
 14609 5896 450FB6EA 		movzbl	%r10b, %r13d
 14610 589a 410F95C6 		setne	%r14b
 859:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 14611              		.loc 1 859 42 view .LVU6285
 14612 589e B9040000 		movl	$4, %ecx
 14612      00
 14613 58a3 E9E8FAFF 		jmp	.L1657
 14613      FF
 14614              	.LVL1171:
 14615              	.L1670:
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14616              		.loc 1 866 42 view .LVU6286
 14617 58a8 B9AFE957 		movl	$5761455, %ecx
 14617      00
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14618              		.loc 1 858 5 view .LVU6287
 14619 58ad 4981F900 		cmpq	$100000000, %r9
 14619      E1F505
 14620 58b4 0F8400FF 		je	.L1658
 14620      FFFF
 14621 58ba 762C     		jbe	.L1789
 14622 58bc 4981F900 		cmpq	$1000000000, %r9
 14622      CA9A3B
 14623 58c3 B92EDF07 		movl	$50847534, %ecx
 14623      03
 14624 58c8 B8000000 		movl	$0, %eax
 14624      00
GAS LISTING /tmp/ccmX4xFB.s 			page 413


 14625 58cd 480F45C8 		cmovne	%rax, %rcx
 14626 58d1 E9E4FEFF 		jmp	.L1658
 14626      FF
 14627              	.L1788:
 14628 58d6 31C9     		xorl	%ecx, %ecx
 14629 58d8 4983F90A 		cmpq	$10, %r9
 14630 58dc 0F94C1   		sete	%cl
 14631 58df 48C1E102 		salq	$2, %rcx
 14632 58e3 E9D2FEFF 		jmp	.L1658
 14632      FF
 14633              	.L1789:
 864:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14634              		.loc 1 864 42 view .LVU6288
 14635 58e8 B9A23201 		movl	$78498, %ecx
 14635      00
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14636              		.loc 1 858 5 view .LVU6289
 14637 58ed 4981F940 		cmpq	$1000000, %r9
 14637      420F00
 14638 58f4 0F84C0FE 		je	.L1658
 14638      FFFF
 14639 58fa 4981F980 		cmpq	$10000000, %r9
 14639      969800
 14640 5901 B903240A 		movl	$664579, %ecx
 14640      00
 14641 5906 BE000000 		movl	$0, %esi
 14641      00
 14642 590b 480F45CE 		cmovne	%rsi, %rcx
 14643 590f E9A6FEFF 		jmp	.L1658
 14643      FF
 14644              	.LVL1172:
 14645              	.L1646:
 858:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14646              		.loc 1 858 5 view .LVU6290
 14647 5914 4981F8A8 		cmpq	$168, %r8
 14647      000000
 14648 591b 410F94C6 		sete	%r14b
 14649 591f 4421F2   		andl	%r14d, %edx
 14650 5922 4981F8A8 		cmpq	$168, %r8
 14650      000000
 14651 5929 450FB6EE 		movzbl	%r14b, %r13d
 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14652              		.loc 1 861 42 view .LVU6291
 14653 592d B9A80000 		movl	$168, %ecx
 14653      00
 14654 5932 410F95C6 		setne	%r14b
 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14655              		.loc 1 861 29 is_stmt 1 view .LVU6292
 14656              	.LVL1173:
 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14657              		.loc 1 861 54 view .LVU6293
 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14658              		.loc 1 861 9 is_stmt 0 view .LVU6294
 14659 5936 E955FAFF 		jmp	.L1657
 14659      FF
 14660              	.LVL1174:
 14661              	.L1652:
GAS LISTING /tmp/ccmX4xFB.s 			page 414


 861:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14662              		.loc 1 861 9 view .LVU6295
 14663 593b 4981F8AF 		cmpq	$5761455, %r8
 14663      E95700
 14664 5942 0F94C0   		sete	%al
 14665 5945 21C2     		andl	%eax, %edx
 14666 5947 4981F8AF 		cmpq	$5761455, %r8
 14666      E95700
 14667 594e 440FB6E8 		movzbl	%al, %r13d
 14668 5952 410F95C6 		setne	%r14b
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14669              		.loc 1 866 29 is_stmt 1 view .LVU6296
 14670              	.LVL1175:
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14671              		.loc 1 866 54 view .LVU6297
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14672              		.loc 1 866 42 is_stmt 0 view .LVU6298
 14673 5956 B9AFE957 		movl	$5761455, %ecx
 14673      00
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14674              		.loc 1 866 9 view .LVU6299
 14675 595b E930FAFF 		jmp	.L1657
 14675      FF
 14676              	.LVL1176:
 14677              	.L1650:
 866:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14678              		.loc 1 866 9 view .LVU6300
 14679 5960 4D85C0   		testq	%r8, %r8
 14680 5963 410F94C3 		sete	%r11b
 14681 5967 4421DA   		andl	%r11d, %edx
 14682 596a 4D85C0   		testq	%r8, %r8
 14683 596d 410F95C6 		setne	%r14b
 868:sieve_extend.c ****     }
 14684              		.loc 1 868 29 is_stmt 1 view .LVU6301
 868:sieve_extend.c ****     }
 14685              		.loc 1 868 29 is_stmt 0 view .LVU6302
 14686 5971 450FB6EB 		movzbl	%r11b, %r13d
 868:sieve_extend.c ****     }
 14687              		.loc 1 868 41 view .LVU6303
 14688 5975 31C9     		xorl	%ecx, %ecx
 14689 5977 E914FAFF 		jmp	.L1657
 14689      FF
 14690              	.L1644:
 868:sieve_extend.c ****     }
 14691              		.loc 1 868 41 view .LVU6304
 14692 597c 4981F878 		cmpq	$9592, %r8
 14692      250000
 14693 5983 400F94C7 		sete	%dil
 14694 5987 21FA     		andl	%edi, %edx
 14695 5989 4981F878 		cmpq	$9592, %r8
 14695      250000
 14696 5990 440FB6EF 		movzbl	%dil, %r13d
 14697 5994 410F95C6 		setne	%r14b
 863:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14698              		.loc 1 863 29 is_stmt 1 view .LVU6305
 14699              	.LVL1177:
 863:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/ccmX4xFB.s 			page 415


 14700              		.loc 1 863 54 view .LVU6306
 863:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14701              		.loc 1 863 42 is_stmt 0 view .LVU6307
 14702 5998 B9782500 		movl	$9592, %ecx
 14702      00
 863:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14703              		.loc 1 863 9 view .LVU6308
 14704 599d E9EEF9FF 		jmp	.L1657
 14704      FF
 14705              	.LVL1178:
 14706              	.L1678:
 863:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14707              		.loc 1 863 42 view .LVU6309
 14708 59a2 B9782500 		movl	$9592, %ecx
 14708      00
 14709 59a7 E90EFEFF 		jmp	.L1658
 14709      FF
 14710              		.cfi_endproc
 14711              	.LFE78:
 14713              		.section	.rodata.str1.8
 14714 0145 000000   		.align 8
 14715              	.LC10:
 14716 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14716      653A2025 
 14716      73205B6F 
 14716      7074696F 
 14716      6E735D20 
 14717              		.section	.rodata.str1.1
 14718              	.LC11:
 14719 0031 4F707469 		.string	"Options:\n"
 14719      6F6E733A 
 14719      0A00
 14720              		.section	.rodata.str1.8
 14721 0167 00       		.align 8
 14722              	.LC12:
 14723 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14723      76657262 
 14723      6F736520 
 14723      3C6C6576 
 14723      656C3E20 
 14724 01a3 00000000 		.align 8
 14724      00
 14725              	.LC13:
 14726 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14726      20202020 
 14726      20202020 
 14726      20202020 
 14726      20202020 
 14727 01d6 0000     		.align 8
 14728              	.LC14:
 14729 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14729      20202020 
 14729      20202020 
 14729      20202020 
 14729      20202020 
 14730 0219 00000000 		.align 8
 14730      000000
GAS LISTING /tmp/ccmX4xFB.s 			page 416


 14731              	.LC15:
 14732 0220 20202020 		.string	"                     3 - show actual work\n"
 14732      20202020 
 14732      20202020 
 14732      20202020 
 14732      20202020 
 14733 024b 00000000 		.align 8
 14733      00
 14734              	.LC16:
 14735 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14735      63686563 
 14735      6B202020 
 14735      20202020 
 14735      20202020 
 14736 028d 000000   		.align 8
 14737              	.LC17:
 14738 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14738      73686F77 
 14738      203C6D61 
 14738      78696D75 
 14738      6D3E2020 
 14739 02ce 0000     		.align 8
 14740              	.LC18:
 14741 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14741      74756E65 
 14741      20203C6C 
 14741      6576656C 
 14741      3E202020 
 14742 031d 000000   		.align 8
 14743              	.LC19:
 14744 0320 20202020 		.string	"                     1 - fast tuning\n"
 14744      20202020 
 14744      20202020 
 14744      20202020 
 14744      20202020 
 14745 0346 0000     		.align 8
 14746              	.LC20:
 14747 0348 20202020 		.string	"                     2 - refined tuning\n"
 14747      20202020 
 14747      20202020 
 14747      20202020 
 14747      20202020 
 14748 0371 00000000 		.align 8
 14748      000000
 14749              	.LC21:
 14750 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14750      20202020 
 14750      20202020 
 14750      20202020 
 14750      20202020 
 14751              		.text
 14752 59ac 0F1F4000 		.p2align 4
 14753              		.globl	usage
 14755              	usage:
 14756              	.LVL1179:
 14757              	.LFB79:
 881:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
GAS LISTING /tmp/ccmX4xFB.s 			page 417


 14758              		.loc 1 881 24 is_stmt 1 view -0
 14759              		.cfi_startproc
 881:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14760              		.loc 1 881 24 is_stmt 0 view .LVU6311
 14761 59b0 F30F1EFA 		endbr64
 14762 59b4 50       		pushq	%rax
 14763              		.cfi_def_cfa_offset 16
 14764 59b5 58       		popq	%rax
 14765              		.cfi_def_cfa_offset 8
 882:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14766              		.loc 1 882 5 is_stmt 1 view .LVU6312
 14767              	.LVL1180:
 14768              	.LBB846:
 14769              	.LBI846:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14770              		.loc 3 98 1 view .LVU6313
 14771              	.LBB847:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14772              		.loc 3 100 3 view .LVU6314
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14773              		.loc 3 100 10 is_stmt 0 view .LVU6315
 14774 59b6 488D1500 		leaq	.LC10(%rip), %rdx
 14774      000000
 14775 59bd BE010000 		movl	$1, %esi
 14775      00
 14776 59c2 31C0     		xorl	%eax, %eax
 14777              	.LBE847:
 14778              	.LBE846:
 881:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14779              		.loc 1 881 24 view .LVU6316
 14780 59c4 4883EC08 		subq	$8, %rsp
 14781              		.cfi_def_cfa_offset 16
 881:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14782              		.loc 1 881 24 view .LVU6317
 14783 59c8 4889F9   		movq	%rdi, %rcx
 14784              	.LBB849:
 14785              	.LBB848:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14786              		.loc 3 100 10 view .LVU6318
 14787 59cb 488B3D00 		movq	stderr(%rip), %rdi
 14787      000000
 14788              	.LVL1181:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14789              		.loc 3 100 10 view .LVU6319
 14790 59d2 E8000000 		call	__fprintf_chk@PLT
 14790      00
 14791              	.LVL1182:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14792              		.loc 3 100 10 view .LVU6320
 14793              	.LBE848:
 14794              	.LBE849:
 883:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 14795              		.loc 1 883 5 is_stmt 1 view .LVU6321
 14796              	.LBB850:
 14797              	.LBI850:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14798              		.loc 3 98 1 view .LVU6322
GAS LISTING /tmp/ccmX4xFB.s 			page 418


 14799              	.LBB851:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14800              		.loc 3 100 3 view .LVU6323
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14801              		.loc 3 100 10 is_stmt 0 view .LVU6324
 14802 59d7 488B0D00 		movq	stderr(%rip), %rcx
 14802      000000
 14803 59de BA090000 		movl	$9, %edx
 14803      00
 14804 59e3 BE010000 		movl	$1, %esi
 14804      00
 14805 59e8 488D3D00 		leaq	.LC11(%rip), %rdi
 14805      000000
 14806 59ef E8000000 		call	fwrite@PLT
 14806      00
 14807              	.LVL1183:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14808              		.loc 3 100 10 view .LVU6325
 14809              	.LBE851:
 14810              	.LBE850:
 884:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14811              		.loc 1 884 5 is_stmt 1 view .LVU6326
 14812              	.LBB852:
 14813              	.LBI852:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14814              		.loc 3 98 1 view .LVU6327
 14815              	.LBB853:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14816              		.loc 3 100 3 view .LVU6328
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14817              		.loc 3 100 10 is_stmt 0 view .LVU6329
 14818 59f4 488B0D00 		movq	stderr(%rip), %rcx
 14818      000000
 14819 59fb BA3A0000 		movl	$58, %edx
 14819      00
 14820 5a00 BE010000 		movl	$1, %esi
 14820      00
 14821 5a05 488D3D00 		leaq	.LC12(%rip), %rdi
 14821      000000
 14822 5a0c E8000000 		call	fwrite@PLT
 14822      00
 14823              	.LVL1184:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14824              		.loc 3 100 10 view .LVU6330
 14825              	.LBE853:
 14826              	.LBE852:
 885:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14827              		.loc 1 885 5 is_stmt 1 view .LVU6331
 14828              	.LBB854:
 14829              	.LBI854:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14830              		.loc 3 98 1 view .LVU6332
 14831              	.LBB855:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14832              		.loc 3 100 3 view .LVU6333
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14833              		.loc 3 100 10 is_stmt 0 view .LVU6334
GAS LISTING /tmp/ccmX4xFB.s 			page 419


 14834 5a11 488B0D00 		movq	stderr(%rip), %rcx
 14834      000000
 14835 5a18 BA2D0000 		movl	$45, %edx
 14835      00
 14836 5a1d BE010000 		movl	$1, %esi
 14836      00
 14837 5a22 488D3D00 		leaq	.LC13(%rip), %rdi
 14837      000000
 14838 5a29 E8000000 		call	fwrite@PLT
 14838      00
 14839              	.LVL1185:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14840              		.loc 3 100 10 view .LVU6335
 14841              	.LBE855:
 14842              	.LBE854:
 886:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14843              		.loc 1 886 5 is_stmt 1 view .LVU6336
 14844              	.LBB856:
 14845              	.LBI856:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14846              		.loc 3 98 1 view .LVU6337
 14847              	.LBB857:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14848              		.loc 3 100 3 view .LVU6338
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14849              		.loc 3 100 10 is_stmt 0 view .LVU6339
 14850 5a2e 488B0D00 		movq	stderr(%rip), %rcx
 14850      000000
 14851 5a35 BA400000 		movl	$64, %edx
 14851      00
 14852 5a3a BE010000 		movl	$1, %esi
 14852      00
 14853 5a3f 488D3D00 		leaq	.LC14(%rip), %rdi
 14853      000000
 14854 5a46 E8000000 		call	fwrite@PLT
 14854      00
 14855              	.LVL1186:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14856              		.loc 3 100 10 view .LVU6340
 14857              	.LBE857:
 14858              	.LBE856:
 887:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14859              		.loc 1 887 5 is_stmt 1 view .LVU6341
 14860              	.LBB858:
 14861              	.LBI858:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14862              		.loc 3 98 1 view .LVU6342
 14863              	.LBB859:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14864              		.loc 3 100 3 view .LVU6343
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14865              		.loc 3 100 10 is_stmt 0 view .LVU6344
 14866 5a4b 488B0D00 		movq	stderr(%rip), %rcx
 14866      000000
 14867 5a52 BA2A0000 		movl	$42, %edx
 14867      00
 14868 5a57 BE010000 		movl	$1, %esi
GAS LISTING /tmp/ccmX4xFB.s 			page 420


 14868      00
 14869 5a5c 488D3D00 		leaq	.LC15(%rip), %rdi
 14869      000000
 14870 5a63 E8000000 		call	fwrite@PLT
 14870      00
 14871              	.LVL1187:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14872              		.loc 3 100 10 view .LVU6345
 14873              	.LBE859:
 14874              	.LBE858:
 888:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14875              		.loc 1 888 5 is_stmt 1 view .LVU6346
 14876              	.LBB860:
 14877              	.LBI860:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14878              		.loc 3 98 1 view .LVU6347
 14879              	.LBB861:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14880              		.loc 3 100 3 view .LVU6348
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14881              		.loc 3 100 10 is_stmt 0 view .LVU6349
 14882 5a68 488B0D00 		movq	stderr(%rip), %rcx
 14882      000000
 14883 5a6f BA3C0000 		movl	$60, %edx
 14883      00
 14884 5a74 BE010000 		movl	$1, %esi
 14884      00
 14885 5a79 488D3D00 		leaq	.LC16(%rip), %rdi
 14885      000000
 14886 5a80 E8000000 		call	fwrite@PLT
 14886      00
 14887              	.LVL1188:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14888              		.loc 3 100 10 view .LVU6350
 14889              	.LBE861:
 14890              	.LBE860:
 889:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14891              		.loc 1 889 5 is_stmt 1 view .LVU6351
 14892              	.LBB862:
 14893              	.LBI862:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14894              		.loc 3 98 1 view .LVU6352
 14895              	.LBB863:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14896              		.loc 3 100 3 view .LVU6353
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14897              		.loc 3 100 10 is_stmt 0 view .LVU6354
 14898 5a85 488B0D00 		movq	stderr(%rip), %rcx
 14898      000000
 14899 5a8c BA3D0000 		movl	$61, %edx
 14899      00
 14900 5a91 BE010000 		movl	$1, %esi
 14900      00
 14901 5a96 488D3D00 		leaq	.LC17(%rip), %rdi
 14901      000000
 14902 5a9d E8000000 		call	fwrite@PLT
 14902      00
GAS LISTING /tmp/ccmX4xFB.s 			page 421


 14903              	.LVL1189:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14904              		.loc 3 100 10 view .LVU6355
 14905              	.LBE863:
 14906              	.LBE862:
 890:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14907              		.loc 1 890 5 is_stmt 1 view .LVU6356
 14908              	.LBB864:
 14909              	.LBI864:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14910              		.loc 3 98 1 view .LVU6357
 14911              	.LBB865:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14912              		.loc 3 100 3 view .LVU6358
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14913              		.loc 3 100 10 is_stmt 0 view .LVU6359
 14914 5aa2 488B0D00 		movq	stderr(%rip), %rcx
 14914      000000
 14915 5aa9 BA4C0000 		movl	$76, %edx
 14915      00
 14916 5aae BE010000 		movl	$1, %esi
 14916      00
 14917 5ab3 488D3D00 		leaq	.LC18(%rip), %rdi
 14917      000000
 14918 5aba E8000000 		call	fwrite@PLT
 14918      00
 14919              	.LVL1190:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14920              		.loc 3 100 10 view .LVU6360
 14921              	.LBE865:
 14922              	.LBE864:
 891:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14923              		.loc 1 891 5 is_stmt 1 view .LVU6361
 14924              	.LBB866:
 14925              	.LBI866:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14926              		.loc 3 98 1 view .LVU6362
 14927              	.LBB867:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14928              		.loc 3 100 3 view .LVU6363
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14929              		.loc 3 100 10 is_stmt 0 view .LVU6364
 14930 5abf 488B0D00 		movq	stderr(%rip), %rcx
 14930      000000
 14931 5ac6 BA250000 		movl	$37, %edx
 14931      00
 14932 5acb BE010000 		movl	$1, %esi
 14932      00
 14933 5ad0 488D3D00 		leaq	.LC19(%rip), %rdi
 14933      000000
 14934 5ad7 E8000000 		call	fwrite@PLT
 14934      00
 14935              	.LVL1191:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14936              		.loc 3 100 10 view .LVU6365
 14937              	.LBE867:
 14938              	.LBE866:
GAS LISTING /tmp/ccmX4xFB.s 			page 422


 892:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14939              		.loc 1 892 5 is_stmt 1 view .LVU6366
 14940              	.LBB868:
 14941              	.LBI868:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14942              		.loc 3 98 1 view .LVU6367
 14943              	.LBB869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14944              		.loc 3 100 3 view .LVU6368
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14945              		.loc 3 100 10 is_stmt 0 view .LVU6369
 14946 5adc 488B0D00 		movq	stderr(%rip), %rcx
 14946      000000
 14947 5ae3 BA280000 		movl	$40, %edx
 14947      00
 14948 5ae8 BE010000 		movl	$1, %esi
 14948      00
 14949 5aed 488D3D00 		leaq	.LC20(%rip), %rdi
 14949      000000
 14950 5af4 E8000000 		call	fwrite@PLT
 14950      00
 14951              	.LVL1192:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14952              		.loc 3 100 10 view .LVU6370
 14953              	.LBE869:
 14954              	.LBE868:
 893:sieve_extend.c ****     exit(1);
 14955              		.loc 1 893 5 is_stmt 1 view .LVU6371
 14956              	.LBB870:
 14957              	.LBI870:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14958              		.loc 3 98 1 view .LVU6372
 14959              	.LBB871:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14960              		.loc 3 100 3 view .LVU6373
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14961              		.loc 3 100 10 is_stmt 0 view .LVU6374
 14962 5af9 488B0D00 		movq	stderr(%rip), %rcx
 14962      000000
 14963 5b00 488D3D00 		leaq	.LC21(%rip), %rdi
 14963      000000
 14964 5b07 BA350000 		movl	$53, %edx
 14964      00
 14965 5b0c BE010000 		movl	$1, %esi
 14965      00
 14966 5b11 E8000000 		call	fwrite@PLT
 14966      00
 14967              	.LVL1193:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14968              		.loc 3 100 10 view .LVU6375
 14969              	.LBE871:
 14970              	.LBE870:
 894:sieve_extend.c **** }
 14971              		.loc 1 894 5 is_stmt 1 view .LVU6376
 14972 5b16 BF010000 		movl	$1, %edi
 14972      00
 14973 5b1b E8000000 		call	exit@PLT
GAS LISTING /tmp/ccmX4xFB.s 			page 423


 14973      00
 14974              	.LVL1194:
 14975              		.cfi_endproc
 14976              	.LFE79:
 14978              		.section	.rodata.str1.1
 14979              	.LC23:
 14980 003b 56616C69 		.string	"Validating... "
 14980      64617469 
 14980      6E672E2E 
 14980      2E2000
 14981              	.LC24:
 14982 004a 2D2D6865 		.string	"--help"
 14982      6C7000
 14983              	.LC25:
 14984 0051 2D2D7665 		.string	"--verbose"
 14984      72626F73 
 14984      6500
 14985              	.LC26:
 14986 005b 4E6F2076 		.string	"No verbose level specified\n"
 14986      6572626F 
 14986      7365206C 
 14986      6576656C 
 14986      20737065 
 14987              	.LC27:
 14988 0077 256400   		.string	"%d"
 14989              		.section	.rodata.str1.8
 14990 03ae 0000     		.align 8
 14991              	.LC28:
 14992 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 14992      723A2049 
 14992      6E76616C 
 14992      6964206D 
 14992      65617375 
 14993              		.section	.rodata.str1.1
 14994              	.LC29:
 14995 007a 56657262 		.string	"Verbose level set to %d\n"
 14995      6F736520 
 14995      6C657665 
 14995      6C207365 
 14995      7420746F 
 14996              	.LC30:
 14997 0093 2D2D6368 		.string	"--check"
 14997      65636B00 
 14998              	.LC31:
 14999 009b 2D2D7475 		.string	"--tune"
 14999      6E6500
 15000              	.LC32:
 15001 00a2 4E6F2074 		.string	"No tune level specified\n"
 15001      756E6520 
 15001      6C657665 
 15001      6C207370 
 15001      65636966 
 15002              		.section	.rodata.str1.8
 15003 03d5 000000   		.align 8
 15004              	.LC33:
 15005 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 15005      723A2049 
GAS LISTING /tmp/ccmX4xFB.s 			page 424


 15005      6E76616C 
 15005      69642074 
 15005      756E6520 
 15006              		.section	.rodata.str1.1
 15007              	.LC34:
 15008 00bb 54756E65 		.string	"Tune level set to %d\n"
 15008      206C6576 
 15008      656C2073 
 15008      65742074 
 15008      6F202564 
 15009              	.LC35:
 15010 00d1 2D2D7368 		.string	"--show"
 15010      6F7700
 15011              	.LC36:
 15012 00d8 4E6F2073 		.string	"No show maximum specified\n"
 15012      686F7720 
 15012      6D617869 
 15012      6D756D20 
 15012      73706563 
 15013              	.LC37:
 15014 00f3 256A7500 		.string	"%ju"
 15015              		.section	.rodata.str1.8
 15016 03f7 00       		.align 8
 15017              	.LC38:
 15018 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 15018      723A2049 
 15018      6E76616C 
 15018      69642073 
 15018      686F7720 
 15019              		.section	.rodata.str1.1
 15020              	.LC39:
 15021 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 15021      206D6178 
 15021      696D756D 
 15021      20736574 
 15021      20746F20 
 15022              	.LC40:
 15023 0110 496E7661 		.string	"Invalid size %s\n"
 15023      6C696420 
 15023      73697A65 
 15023      2025730A 
 15023      00
 15024              	.LC41:
 15025 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 15025      6865636B 
 15025      696E6720 
 15025      73697A65 
 15025      20256A75 
 15026              	.LC42:
 15027 013a 2E626C6F 		.string	".blocksize %ju-"
 15027      636B7369 
 15027      7A652025 
 15027      6A752D00 
 15028              	.LC43:
 15029 014a 76616C69 		.string	"valid;"
 15029      643B00
 15030              	.LC44:
GAS LISTING /tmp/ccmX4xFB.s 			page 425


 15031 0151 2E2E2E56 		.string	"...Valid algorithm"
 15031      616C6964 
 15031      20616C67 
 15031      6F726974 
 15031      686D00
 15032              	.LC45:
 15033 0164 54756E69 		.string	"Tuning..."
 15033      6E672E2E 
 15033      2E00
 15034              		.section	.rodata.str1.8
 15035 0419 00000000 		.align 8
 15035      000000
 15036              	.LC46:
 15037 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 15037      626C6F63 
 15037      6B73697A 
 15037      655F6269 
 15037      74732025 
 15038 04a7 00       		.align 8
 15039              	.LC47:
 15040 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 15040      6C6F636B 
 15040      73697A65 
 15040      5F626974 
 15040      73202531 
 15041 052e 0000     		.align 8
 15042              	.LC48:
 15043 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 15043      72657375 
 15043      6C74732E 
 15043      20496E69 
 15043      74616C20 
 15044              		.section	.rodata.str1.1
 15045              	.LC49:
 15046 016e 42657374 		.string	"Best options"
 15046      206F7074 
 15046      696F6E73 
 15046      00
 15047              		.section	.rodata.str1.8
 15048 0582 00000000 		.align 8
 15048      0000
 15049              	.LC50:
 15050 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 15050      2920626C 
 15050      6F636B73 
 15050      697A655F 
 15050      62697473 
 15051 0611 00000000 		.align 8
 15051      000000
 15052              	.LC51:
 15053 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 15053      74207265 
 15053      73756C74 
 15053      3A20626C 
 15053      6F636B73 
 15054              		.align 8
 15055              	.LC52:
GAS LISTING /tmp/ccmX4xFB.s 			page 426


 15056 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
 15056      686D6172 
 15056      6B696E67 
 15056      2E2E2E20 
 15056      77697468 
 15057 06c3 00000000 		.align 8
 15057      00
 15058              	.LC54:
 15059 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 15059      65727661 
 15059      6E64616D 
 15059      5F657874 
 15059      656E643B 
 15060 070a 00000000 		.align 8
 15060      0000
 15061              	.LC55:
 15062 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 15062      6573202D 
 15062      20706572 
 15062      20352073 
 15062      65636F6E 
 15063              		.section	.rodata.str1.1
 15064              	.LC56:
 15065 017b 53686F77 		.string	"Show result set:"
 15065      20726573 
 15065      756C7420 
 15065      7365743A 
 15065      00
 15066              		.section	.text.startup,"ax",@progbits
 15067              		.p2align 4
 15068              		.globl	main
 15070              	main:
 15071              	.LVL1195:
 15072              	.LFB83:
 938:sieve_extend.c **** 
 939:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
 940:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 941:sieve_extend.c **** 
 942:sieve_extend.c ****     double best_avg = 0;
 943:sieve_extend.c ****     best_blocksize_bits = 0;
 944:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 945:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 946:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 947:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 948:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 949:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 950:sieve_extend.c ****     double sample_duration = default_sample_duration;
 951:sieve_extend.c **** 
 952:sieve_extend.c ****     // determines the size of the resultset
 953:sieve_extend.c ****     switch (tune_level) {
 954:sieve_extend.c ****         case 1:
 955:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
 956:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
 957:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
 958:sieve_extend.c ****             sample_max = 4;
 959:sieve_extend.c ****             sample_duration = 0.1;
 960:sieve_extend.c ****             break;
GAS LISTING /tmp/ccmX4xFB.s 			page 427


 961:sieve_extend.c ****         case 2:
 962:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
 963:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
 964:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
 965:sieve_extend.c ****             sample_max = 4;
 966:sieve_extend.c ****             sample_duration = 0.2;
 967:sieve_extend.c ****             break;
 968:sieve_extend.c ****         case 3:
 969:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
 970:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 971:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
 972:sieve_extend.c ****             sample_max = 4;
 973:sieve_extend.c ****             sample_duration = 0.4;
 974:sieve_extend.c ****             break;
 975:sieve_extend.c ****     }
 976:sieve_extend.c ****     
 977:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
 978:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 979:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 980:sieve_extend.c ****     counter_t tuning_results=0;
 981:sieve_extend.c ****     counter_t tuning_result_index=0;
 982:sieve_extend.c ****     
 983:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
 984:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 985:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 986:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 987:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 988:sieve_extend.c **** 
 989:sieve_extend.c ****                     // set variables
 990:sieve_extend.c ****                     tuning_results++;
 991:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 992:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 993:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 994:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 995:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 996:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 997:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 998:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 999:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1000:sieve_extend.c **** 
1001:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1002:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1003:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1004:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1005:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1006:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1007:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1008:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1009:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1010:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1011:sieve_extend.c ****                     }
1012:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1013:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1014:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1015:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1016:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1017:sieve_extend.c ****                     tuning_result_index++;
GAS LISTING /tmp/ccmX4xFB.s 			page 428


1018:sieve_extend.c ****                 }
1019:sieve_extend.c ****             }
1020:sieve_extend.c ****         }
1021:sieve_extend.c ****     }
1022:sieve_extend.c ****     if (option_verboselevel >= 2) {
1023:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1024:sieve_extend.c ****         printf("Best options\n");
1025:sieve_extend.c ****     }
1026:sieve_extend.c ****     counter_t step=0;
1027:sieve_extend.c ****     while (tuning_results>4) {
1028:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1029:sieve_extend.c ****         step++;
1030:sieve_extend.c ****         if (option_verboselevel >= 2) {
1031:sieve_extend.c ****             tuning_result_index = 0;
1032:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1033:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1034:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1035:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1036:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1037:sieve_extend.c ****             if (option_verboselevel >= 3) {
1038:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1039:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1040:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1041:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1042:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1043:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1044:sieve_extend.c ****                 }
1045:sieve_extend.c ****             }
1046:sieve_extend.c ****         }
1047:sieve_extend.c **** 
1048:sieve_extend.c ****         tuning_results = tuning_results / 2;
1049:sieve_extend.c **** 
1050:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1051:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1052:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1053:sieve_extend.c ****         }
1054:sieve_extend.c ****         
1055:sieve_extend.c ****     }
1056:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1057:sieve_extend.c ****     if (option_verboselevel >= 1) {
1058:sieve_extend.c ****         tuning_result_index = 0;
1059:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1060:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1061:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1062:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1063:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1064:sieve_extend.c ****     }
1065:sieve_extend.c **** 
1066:sieve_extend.c ****     free(tuning_result);
1067:sieve_extend.c ****     return best_result;
1068:sieve_extend.c **** }
1069:sieve_extend.c **** 
1070:sieve_extend.c **** int main(int argc, char *argv[]) {
 15073              		.loc 1 1070 34 view -0
 15074              		.cfi_startproc
 15075              		.loc 1 1070 34 is_stmt 0 view .LVU6378
 15076 0000 F30F1EFA 		endbr64
GAS LISTING /tmp/ccmX4xFB.s 			page 429


 15077 0004 4157     		pushq	%r15
 15078              		.cfi_def_cfa_offset 16
 15079              		.cfi_offset 15, -16
 15080 0006 4156     		pushq	%r14
 15081              		.cfi_def_cfa_offset 24
 15082              		.cfi_offset 14, -24
 15083 0008 4155     		pushq	%r13
 15084              		.cfi_def_cfa_offset 32
 15085              		.cfi_offset 13, -32
 15086 000a 4154     		pushq	%r12
 15087              		.cfi_def_cfa_offset 40
 15088              		.cfi_offset 12, -40
 15089 000c 55       		pushq	%rbp
 15090              		.cfi_def_cfa_offset 48
 15091              		.cfi_offset 6, -48
 15092 000d 53       		pushq	%rbx
 15093              		.cfi_def_cfa_offset 56
 15094              		.cfi_offset 3, -56
 15095 000e 4881ECB8 		subq	$184, %rsp
 15095      000000
 15096              		.cfi_def_cfa_offset 240
 15097              		.loc 1 1070 34 view .LVU6379
 15098 0015 64488B04 		movq	%fs:40, %rax
 15098      25280000 
 15098      00
 15099 001e 48898424 		movq	%rax, 168(%rsp)
 15099      A8000000 
 15100 0026 31C0     		xorl	%eax, %eax
1071:sieve_extend.c **** 
1072:sieve_extend.c ****     
1073:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 15101              		.loc 1 1073 5 is_stmt 1 view .LVU6380
 15102              		.loc 1 1073 15 is_stmt 0 view .LVU6381
 15103 0028 48C74424 		movq	$1000000, 112(%rsp)
 15103      7040420F 
 15103      00
1074:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 15104              		.loc 1 1074 5 is_stmt 1 view .LVU6382
 15105              		.loc 1 1074 15 is_stmt 0 view .LVU6383
 15106 0031 48C74424 		movq	$0, 120(%rsp)
 15106      78000000 
 15106      00
1075:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 15107              		.loc 1 1075 5 is_stmt 1 view .LVU6384
 15108              		.loc 1 1075 9 is_stmt 0 view .LVU6385
 15109 003a C7442468 		movl	$1, 104(%rsp)
 15109      01000000 
1076:sieve_extend.c ****     int option_check = default_check_level;
 15110              		.loc 1 1076 5 is_stmt 1 view .LVU6386
 15111              	.LVL1196:
1077:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 15112              		.loc 1 1077 5 view .LVU6387
 15113              		.loc 1 1077 9 is_stmt 0 view .LVU6388
 15114 0042 C744246C 		movl	$0, 108(%rsp)
 15114      00000000 
1078:sieve_extend.c **** 
1079:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
GAS LISTING /tmp/ccmX4xFB.s 			page 430


 15115              		.loc 1 1079 5 is_stmt 1 view .LVU6389
 15116              	.LBB957:
 15117              		.loc 1 1079 10 view .LVU6390
 15118              	.LVL1197:
 15119              		.loc 1 1079 21 view .LVU6391
 15120              		.loc 1 1079 5 is_stmt 0 view .LVU6392
 15121 004a 83FF01   		cmpl	$1, %edi
 15122 004d 0F8EC804 		jle	.L1809
 15122      0000
 15123 0053 89FD     		movl	%edi, %ebp
 15124 0055 4989F4   		movq	%rsi, %r12
 15125              		.loc 1 1079 14 view .LVU6393
 15126 0058 BB010000 		movl	$1, %ebx
 15126      00
 15127 005d 4C8D2D00 		leaq	.LC24(%rip), %r13
 15127      000000
1080:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1081:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 15128              		.loc 1 1081 18 view .LVU6394
 15129 0064 4C8D3500 		leaq	.LC25(%rip), %r14
 15129      000000
 15130 006b EB5B     		jmp	.L1793
 15131              	.LVL1198:
 15132 006d 0F1F00   		.p2align 4,,10
 15133              		.p2align 3
 15134              	.L1925:
1082:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 15135              		.loc 1 1082 13 is_stmt 1 view .LVU6395
 15136              		.loc 1 1082 16 is_stmt 0 view .LVU6396
 15137 0070 FFC3     		incl	%ebx
 15138              	.LVL1199:
 15139              		.loc 1 1082 16 view .LVU6397
 15140 0072 39DD     		cmpl	%ebx, %ebp
 15141 0074 0F8EC10C 		jle	.L1923
 15141      0000
1083:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 15142              		.loc 1 1083 13 is_stmt 1 view .LVU6398
 15143              		.loc 1 1083 28 is_stmt 0 view .LVU6399
 15144 007a 4D8D7C04 		leaq	8(%r12,%rax), %r15
 15144      08
 15145              		.loc 1 1083 17 view .LVU6400
 15146 007f 498B3F   		movq	(%r15), %rdi
 15147 0082 31C0     		xorl	%eax, %eax
 15148 0084 488D5424 		leaq	104(%rsp), %rdx
 15148      68
 15149 0089 488D3500 		leaq	.LC27(%rip), %rsi
 15149      000000
 15150 0090 E8000000 		call	__isoc99_sscanf@PLT
 15150      00
 15151              	.LVL1200:
 15152              		.loc 1 1083 16 view .LVU6401
 15153 0095 83F801   		cmpl	$1, %eax
 15154 0098 0F859504 		jne	.L1798
 15154      0000
 15155              		.loc 1 1083 91 discriminator 1 view .LVU6402
 15156 009e 8B542468 		movl	104(%rsp), %edx
 15157              		.loc 1 1083 68 discriminator 1 view .LVU6403
GAS LISTING /tmp/ccmX4xFB.s 			page 431


 15158 00a2 83FA04   		cmpl	$4, %edx
 15159 00a5 0F8F8804 		jg	.L1798
 15159      0000
1084:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1085:sieve_extend.c ****             }
1086:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 15160              		.loc 1 1086 13 is_stmt 1 view .LVU6404
 15161              	.LVL1201:
 15162              	.LBB958:
 15163              	.LBI958:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15164              		.loc 3 105 1 view .LVU6405
 15165              	.LBB959:
 15166              		.loc 3 107 3 view .LVU6406
 15167              		.loc 3 107 10 is_stmt 0 view .LVU6407
 15168 00ab 488D3500 		leaq	.LC29(%rip), %rsi
 15168      000000
 15169 00b2 BF010000 		movl	$1, %edi
 15169      00
 15170 00b7 31C0     		xorl	%eax, %eax
 15171 00b9 E8000000 		call	__printf_chk@PLT
 15171      00
 15172              	.LVL1202:
 15173              	.L1800:
 15174              		.loc 3 107 10 view .LVU6408
 15175              	.LBE959:
 15176              	.LBE958:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15177              		.loc 1 1079 33 is_stmt 1 discriminator 2 view .LVU6409
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15178              		.loc 1 1079 36 is_stmt 0 discriminator 2 view .LVU6410
 15179 00be FFC3     		incl	%ebx
 15180              	.LVL1203:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15181              		.loc 1 1079 21 is_stmt 1 discriminator 2 view .LVU6411
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15182              		.loc 1 1079 5 is_stmt 0 discriminator 2 view .LVU6412
 15183 00c0 39DD     		cmpl	%ebx, %ebp
 15184 00c2 0F8EE800 		jle	.L1924
 15184      0000
 15185              	.LVL1204:
 15186              	.L1793:
1080:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 15187              		.loc 1 1080 9 is_stmt 1 view .LVU6413
1080:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 15188              		.loc 1 1080 24 is_stmt 0 view .LVU6414
 15189 00c8 4863C3   		movslq	%ebx, %rax
 15190 00cb 48C1E003 		salq	$3, %rax
 15191 00cf 4D8D3C04 		leaq	(%r12,%rax), %r15
1080:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 15192              		.loc 1 1080 13 view .LVU6415
 15193 00d3 4D8B07   		movq	(%r15), %r8
 15194 00d6 41B90700 		movl	$7, %r9d
 15194      0000
 15195 00dc 4C89C6   		movq	%r8, %rsi
 15196 00df 4C89EF   		movq	%r13, %rdi
 15197 00e2 4C89C9   		movq	%r9, %rcx
GAS LISTING /tmp/ccmX4xFB.s 			page 432


 15198 00e5 F3A6     		repz cmpsb
 15199 00e7 0F97C2   		seta	%dl
 15200 00ea 80DA00   		sbbb	$0, %dl
1080:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 15201              		.loc 1 1080 12 view .LVU6416
 15202 00ed 84D2     		testb	%dl, %dl
 15203 00ef 0F845B04 		je	.L1921
 15203      0000
1081:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 15204              		.loc 1 1081 14 is_stmt 1 view .LVU6417
1081:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 15205              		.loc 1 1081 18 is_stmt 0 view .LVU6418
 15206 00f5 B90A0000 		movl	$10, %ecx
 15206      00
 15207 00fa 4C89C6   		movq	%r8, %rsi
 15208 00fd 4C89F7   		movq	%r14, %rdi
 15209 0100 F3A6     		repz cmpsb
 15210 0102 410F97C2 		seta	%r10b
 15211 0106 4180DA00 		sbbb	$0, %r10b
1081:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 15212              		.loc 1 1081 17 view .LVU6419
 15213 010a 4584D2   		testb	%r10b, %r10b
 15214 010d 0F845DFF 		je	.L1925
 15214      FFFF
1087:sieve_extend.c ****         } 
1088:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 15215              		.loc 1 1088 14 is_stmt 1 view .LVU6420
 15216              		.loc 1 1088 18 is_stmt 0 view .LVU6421
 15217 0113 B9080000 		movl	$8, %ecx
 15217      00
 15218 0118 4C89C6   		movq	%r8, %rsi
 15219 011b 488D3D00 		leaq	.LC30(%rip), %rdi
 15219      000000
 15220 0122 F3A6     		repz cmpsb
 15221 0124 410F97C3 		seta	%r11b
 15222 0128 4180DB00 		sbbb	$0, %r11b
 15223              		.loc 1 1088 17 view .LVU6422
 15224 012c 4584DB   		testb	%r11b, %r11b
 15225 012f 748D     		je	.L1800
1089:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 15226              		.loc 1 1089 14 is_stmt 1 view .LVU6423
 15227              		.loc 1 1089 18 is_stmt 0 view .LVU6424
 15228 0131 4C89C6   		movq	%r8, %rsi
 15229 0134 488D3D00 		leaq	.LC31(%rip), %rdi
 15229      000000
 15230 013b 4C89C9   		movq	%r9, %rcx
 15231 013e F3A6     		repz cmpsb
 15232 0140 0F97C2   		seta	%dl
 15233 0143 80DA00   		sbbb	$0, %dl
 15234              		.loc 1 1089 17 view .LVU6425
 15235 0146 84D2     		testb	%dl, %dl
 15236 0148 0F853201 		jne	.L1801
 15236      0000
 15237              		.loc 1 1089 52 is_stmt 1 discriminator 1 view .LVU6426
1090:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 15238              		.loc 1 1090 16 is_stmt 0 discriminator 1 view .LVU6427
 15239 014e FFC3     		incl	%ebx
GAS LISTING /tmp/ccmX4xFB.s 			page 433


 15240              	.LVL1205:
1089:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 15241              		.loc 1 1089 68 discriminator 1 view .LVU6428
 15242 0150 C744246C 		movl	$0, 108(%rsp)
 15242      00000000 
 15243              		.loc 1 1090 13 is_stmt 1 discriminator 1 view .LVU6429
 15244              	.LVL1206:
 15245              		.loc 1 1090 16 is_stmt 0 discriminator 1 view .LVU6430
 15246 0158 39DD     		cmpl	%ebx, %ebp
 15247 015a 0F8E1B0C 		jle	.L1926
 15247      0000
1091:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 15248              		.loc 1 1091 13 is_stmt 1 view .LVU6431
 15249              		.loc 1 1091 28 is_stmt 0 view .LVU6432
 15250 0160 4D8D7C04 		leaq	8(%r12,%rax), %r15
 15250      08
 15251              		.loc 1 1091 17 view .LVU6433
 15252 0165 498B3F   		movq	(%r15), %rdi
 15253 0168 31C0     		xorl	%eax, %eax
 15254 016a 488D5424 		leaq	108(%rsp), %rdx
 15254      6C
 15255 016f 488D3500 		leaq	.LC27(%rip), %rsi
 15255      000000
 15256 0176 E8000000 		call	__isoc99_sscanf@PLT
 15256      00
 15257              	.LVL1207:
 15258              		.loc 1 1091 16 view .LVU6434
 15259 017b 83F801   		cmpl	$1, %eax
 15260 017e 0F85D90B 		jne	.L1803
 15260      0000
 15261              		.loc 1 1091 85 discriminator 1 view .LVU6435
 15262 0184 8B54246C 		movl	108(%rsp), %edx
 15263              		.loc 1 1091 65 discriminator 1 view .LVU6436
 15264 0188 83FA04   		cmpl	$4, %edx
 15265 018b 0F8FCC0B 		jg	.L1803
 15265      0000
1092:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1093:sieve_extend.c ****             }
1094:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 15266              		.loc 1 1094 13 is_stmt 1 view .LVU6437
 15267              	.LVL1208:
 15268              	.LBB960:
 15269              	.LBI960:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15270              		.loc 3 105 1 view .LVU6438
 15271              	.LBB961:
 15272              		.loc 3 107 3 view .LVU6439
 15273              		.loc 3 107 10 is_stmt 0 view .LVU6440
 15274 0191 488D3500 		leaq	.LC34(%rip), %rsi
 15274      000000
 15275 0198 BF010000 		movl	$1, %edi
 15275      00
 15276 019d 31C0     		xorl	%eax, %eax
 15277              	.LBE961:
 15278              	.LBE960:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15279              		.loc 1 1079 36 view .LVU6441
GAS LISTING /tmp/ccmX4xFB.s 			page 434


 15280 019f FFC3     		incl	%ebx
 15281              	.LVL1209:
 15282              	.LBB963:
 15283              	.LBB962:
 15284              		.loc 3 107 10 view .LVU6442
 15285 01a1 E8000000 		call	__printf_chk@PLT
 15285      00
 15286              	.LVL1210:
 15287              		.loc 3 107 10 view .LVU6443
 15288              	.LBE962:
 15289              	.LBE963:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15290              		.loc 1 1079 33 is_stmt 1 view .LVU6444
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15291              		.loc 1 1079 21 view .LVU6445
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15292              		.loc 1 1079 5 is_stmt 0 view .LVU6446
 15293 01a6 39DD     		cmpl	%ebx, %ebp
 15294 01a8 0F8F1AFF 		jg	.L1793
 15294      FFFF
 15295 01ae 6690     		.p2align 4,,10
 15296              		.p2align 3
 15297              	.L1924:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15298              		.loc 1 1079 5 view .LVU6447
 15299              	.LBE957:
1095:sieve_extend.c ****         }
1096:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1097:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1098:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1099:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1100:sieve_extend.c ****             }
1101:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1102:sieve_extend.c ****         }
1103:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1104:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1105:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1106:sieve_extend.c ****         }
1107:sieve_extend.c ****     }
1108:sieve_extend.c **** 
1109:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 15300              		.loc 1 1109 5 is_stmt 1 view .LVU6448
1110:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1111:sieve_extend.c ****         printf("\nResult set:\n");
1112:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1113:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,1);
1114:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1115:sieve_extend.c ****         else printf("The sieve is VALID\n");
1116:sieve_extend.c ****         delete_sieve(sieve_instance);
1117:sieve_extend.c ****         exit(0);
1118:sieve_extend.c ****     }
1119:sieve_extend.c **** 
1120:sieve_extend.c ****     struct timespec start_time,end_time;
 15301              		.loc 1 1120 5 view .LVU6449
1121:sieve_extend.c **** 
1122:sieve_extend.c ****     if (option_check) {
 15302              		.loc 1 1122 5 view .LVU6450
GAS LISTING /tmp/ccmX4xFB.s 			page 435


1123:sieve_extend.c ****         // Count the number of primes and validate the result
1124:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 15303              		.loc 1 1124 9 view .LVU6451
 15304              		.loc 1 1124 12 is_stmt 0 view .LVU6452
 15305 01b0 8B6C2468 		movl	104(%rsp), %ebp
 15306              	.LVL1211:
 15307              		.loc 1 1124 12 view .LVU6453
 15308 01b4 85ED     		testl	%ebp, %ebp
 15309 01b6 0F8F5F03 		jg	.L1809
 15309      0000
 15310              	.LVL1212:
 15311              	.L1794:
1125:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 15312              		.loc 1 1125 9 is_stmt 1 view .LVU6454
 15313              		.loc 1 1125 12 is_stmt 0 view .LVU6455
 15314 01bc 837C2468 		cmpl	$1, 104(%rsp)
 15314      01
 15315 01c1 7E0A     		jle	.L1810
 15316              		.loc 1 1125 39 is_stmt 1 view .LVU6456
 15317              	.LVL1213:
 15318              	.LBB982:
 15319              	.LBI982:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15320              		.loc 3 105 1 view .LVU6457
 15321              	.LBB983:
 15322              		.loc 3 107 3 view .LVU6458
 15323              		.loc 3 107 10 is_stmt 0 view .LVU6459
 15324 01c3 BF0A0000 		movl	$10, %edi
 15324      00
 15325 01c8 E8000000 		call	putchar@PLT
 15325      00
 15326              	.LVL1214:
 15327              	.L1810:
 15328              		.loc 3 107 10 view .LVU6460
 15329              	.LBE983:
 15330              	.LBE982:
 15331              	.LBB984:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15332              		.loc 1 1079 14 view .LVU6461
 15333 01cd C7042407 		movl	$7, (%rsp)
 15333      000000
 15334 01d4 41BC6400 		movl	$100, %r12d
 15334      0000
 15335              	.LBE984:
 15336              	.LBB985:
 15337              	.LBB986:
 15338              	.LBB987:
 15339              	.LBB988:
 15340              	.LBB989:
 15341              	.LBB990:
 15342              		.loc 3 107 10 view .LVU6462
 15343 01da 4C8D2D00 		leaq	.LC42(%rip), %r13
 15343      000000
 15344              	.L1817:
 15345              	.LVL1215:
 15346              		.loc 3 107 10 view .LVU6463
 15347              	.LBE990:
GAS LISTING /tmp/ccmX4xFB.s 			page 436


 15348              	.LBE989:
 15349              	.LBE988:
 15350              	.LBE987:
1126:sieve_extend.c **** 
1127:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1128:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1129:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15351              		.loc 1 1129 13 is_stmt 1 view .LVU6464
 15352              		.loc 1 1129 37 is_stmt 0 view .LVU6465
 15353 01e1 8B442468 		movl	104(%rsp), %eax
 15354              		.loc 1 1129 16 view .LVU6466
 15355 01e5 83F801   		cmpl	$1, %eax
 15356 01e8 7E1A     		jle	.L1811
 15357              		.loc 1 1129 43 is_stmt 1 view .LVU6467
 15358              	.LVL1216:
 15359              	.LBB1003:
 15360              	.LBI1003:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15361              		.loc 3 105 1 view .LVU6468
 15362              	.LBB1004:
 15363              		.loc 3 107 3 view .LVU6469
 15364              		.loc 3 107 10 is_stmt 0 view .LVU6470
 15365 01ea 4C89E2   		movq	%r12, %rdx
 15366 01ed 488D3500 		leaq	.LC41(%rip), %rsi
 15366      000000
 15367 01f4 BF010000 		movl	$1, %edi
 15367      00
 15368 01f9 31C0     		xorl	%eax, %eax
 15369 01fb E8000000 		call	__printf_chk@PLT
 15369      00
 15370              	.LVL1217:
 15371 0200 8B442468 		movl	104(%rsp), %eax
 15372              	.LVL1218:
 15373              	.L1811:
 15374              		.loc 3 107 10 view .LVU6471
 15375              	.LBE1004:
 15376              	.LBE1003:
 15377              	.LBE986:
 15378              	.LBE985:
 15379              	.LBB1013:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15380              		.loc 1 1079 14 view .LVU6472
 15381 0204 BB050000 		movl	$5, %ebx
 15381      00
 15382 0209 41BE0004 		movl	$1024, %r14d
 15382      0000
 15383 020f EB56     		jmp	.L1815
 15384              	.LVL1219:
 15385              		.p2align 4,,10
 15386 0211 0F1F8000 		.p2align 3
 15386      000000
 15387              	.L1812:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15388              		.loc 1 1079 14 view .LVU6473
 15389              	.LBE1013:
 15390              	.LBB1014:
 15391              	.LBB1010:
GAS LISTING /tmp/ccmX4xFB.s 			page 437


 15392              	.LBB1005:
 15393              	.LBB999:
1130:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1131:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1132:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1133:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 15394              		.loc 1 1133 17 is_stmt 1 view .LVU6474
 15395              		.loc 1 1133 40 is_stmt 0 view .LVU6475
 15396 0218 4C89F6   		movq	%r14, %rsi
 15397 021b 4C89E7   		movq	%r12, %rdi
 15398 021e E8000000 		call	sieve
 15398      00
 15399              	.LVL1220:
1134:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 15400              		.loc 1 1134 29 view .LVU6476
 15401 0223 8B742468 		movl	104(%rsp), %esi
1133:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 15402              		.loc 1 1133 40 view .LVU6477
 15403 0227 4889C5   		movq	%rax, %rbp
 15404              	.LVL1221:
 15405              		.loc 1 1134 17 is_stmt 1 view .LVU6478
 15406              		.loc 1 1134 29 is_stmt 0 view .LVU6479
 15407 022a 4889C7   		movq	%rax, %rdi
 15408 022d E8000000 		call	validatePrimeCount
 15408      00
 15409              	.LVL1222:
 15410              	.LBB992:
 15411              	.LBB993:
  91:sieve_extend.c ****     free(sieve);
 15412              		.loc 1 91 5 view .LVU6480
 15413 0232 488B7D00 		movq	0(%rbp), %rdi
 15414              	.LBE993:
 15415              	.LBE992:
 15416              		.loc 1 1134 29 view .LVU6481
 15417 0236 4189C7   		movl	%eax, %r15d
 15418              	.LVL1223:
1135:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 15419              		.loc 1 1135 17 is_stmt 1 view .LVU6482
 15420              	.LBB995:
 15421              	.LBI992:
  90:sieve_extend.c ****     free(sieve->bitarray);
 15422              		.loc 1 90 13 view .LVU6483
 15423              	.LBB994:
  91:sieve_extend.c ****     free(sieve);
 15424              		.loc 1 91 5 view .LVU6484
 15425 0239 E8000000 		call	free@PLT
 15425      00
 15426              	.LVL1224:
  92:sieve_extend.c **** }
 15427              		.loc 1 92 5 view .LVU6485
 15428 023e 4889EF   		movq	%rbp, %rdi
 15429 0241 E8000000 		call	free@PLT
 15429      00
 15430              	.LVL1225:
  92:sieve_extend.c **** }
 15431              		.loc 1 92 5 is_stmt 0 view .LVU6486
 15432              	.LBE994:
GAS LISTING /tmp/ccmX4xFB.s 			page 438


 15433              	.LBE995:
1136:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 15434              		.loc 1 1136 17 is_stmt 1 view .LVU6487
 15435              		.loc 1 1136 20 is_stmt 0 view .LVU6488
 15436 0246 4585FF   		testl	%r15d, %r15d
 15437 0249 0F84A102 		je	.L1851
 15437      0000
 15438              		.loc 1 1136 44 is_stmt 1 discriminator 2 view .LVU6489
 15439              		.loc 1 1136 68 is_stmt 0 discriminator 2 view .LVU6490
 15440 024f 8B442468 		movl	104(%rsp), %eax
 15441              		.loc 1 1136 47 discriminator 2 view .LVU6491
 15442 0253 83F802   		cmpl	$2, %eax
 15443 0256 0F8FD400 		jg	.L1927
 15443      0000
 15444              	.LBE999:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15445              		.loc 1 1131 75 is_stmt 1 discriminator 2 view .LVU6492
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15446              		.loc 1 1131 90 is_stmt 0 discriminator 2 view .LVU6493
 15447 025c 4D01F6   		addq	%r14, %r14
 15448              	.LVL1226:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15449              		.loc 1 1131 49 is_stmt 1 discriminator 2 view .LVU6494
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15450              		.loc 1 1131 13 is_stmt 0 discriminator 2 view .LVU6495
 15451 025f FFCB     		decl	%ebx
 15452 0261 0F84EB00 		je	.L1928
 15452      0000
 15453              	.LVL1227:
 15454              	.L1815:
 15455              	.LBB1000:
1132:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 15456              		.loc 1 1132 17 is_stmt 1 view .LVU6496
1132:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 15457              		.loc 1 1132 20 is_stmt 0 view .LVU6497
 15458 0267 83F802   		cmpl	$2, %eax
 15459 026a 7EAC     		jle	.L1812
1132:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 15460              		.loc 1 1132 47 is_stmt 1 view .LVU6498
 15461              	.LVL1228:
 15462              	.LBB996:
 15463              	.LBI989:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15464              		.loc 3 105 1 view .LVU6499
 15465              	.LBB991:
 15466              		.loc 3 107 3 view .LVU6500
 15467              		.loc 3 107 10 is_stmt 0 view .LVU6501
 15468 026c 4C89F2   		movq	%r14, %rdx
 15469 026f 4C89EE   		movq	%r13, %rsi
 15470 0272 BF010000 		movl	$1, %edi
 15470      00
 15471 0277 31C0     		xorl	%eax, %eax
 15472 0279 E8000000 		call	__printf_chk@PLT
 15472      00
 15473              	.LVL1229:
 15474 027e EB98     		jmp	.L1812
 15475              	.LVL1230:
GAS LISTING /tmp/ccmX4xFB.s 			page 439


 15476              		.p2align 4,,10
 15477              		.p2align 3
 15478              	.L1801:
 15479              		.loc 3 107 10 view .LVU6502
 15480              	.LBE991:
 15481              	.LBE996:
 15482              	.LBE1000:
 15483              	.LBE1005:
 15484              	.LBE1010:
 15485              	.LBE1014:
 15486              	.LBB1015:
1096:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 15487              		.loc 1 1096 14 is_stmt 1 view .LVU6503
1096:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 15488              		.loc 1 1096 18 is_stmt 0 view .LVU6504
 15489 0280 4C89C9   		movq	%r9, %rcx
 15490 0283 4C89C6   		movq	%r8, %rsi
 15491 0286 488D3D00 		leaq	.LC35(%rip), %rdi
 15491      000000
 15492 028d F3A6     		repz cmpsb
 15493 028f 410F97C1 		seta	%r9b
 15494 0293 4180D900 		sbbb	$0, %r9b
1096:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 15495              		.loc 1 1096 17 view .LVU6505
 15496 0297 4584C9   		testb	%r9b, %r9b
 15497 029a 7564     		jne	.L1805
1096:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 15498              		.loc 1 1096 52 is_stmt 1 discriminator 1 view .LVU6506
1097:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 15499              		.loc 1 1097 16 is_stmt 0 discriminator 1 view .LVU6507
 15500 029c FFC3     		incl	%ebx
 15501              	.LVL1231:
1096:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 15502              		.loc 1 1096 72 discriminator 1 view .LVU6508
 15503 029e 48C74424 		movq	$0, 120(%rsp)
 15503      78000000 
 15503      00
1097:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 15504              		.loc 1 1097 13 is_stmt 1 discriminator 1 view .LVU6509
 15505              	.LVL1232:
1097:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 15506              		.loc 1 1097 16 is_stmt 0 discriminator 1 view .LVU6510
 15507 02a7 39DD     		cmpl	%ebx, %ebp
 15508 02a9 0F8EF70A 		jle	.L1929
 15508      0000
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15509              		.loc 1 1098 13 is_stmt 1 view .LVU6511
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15510              		.loc 1 1098 28 is_stmt 0 view .LVU6512
 15511 02af 4D8D7C04 		leaq	8(%r12,%rax), %r15
 15511      08
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15512              		.loc 1 1098 17 view .LVU6513
 15513 02b4 498B3F   		movq	(%r15), %rdi
 15514 02b7 31C0     		xorl	%eax, %eax
 15515 02b9 488D5424 		leaq	120(%rsp), %rdx
 15515      78
GAS LISTING /tmp/ccmX4xFB.s 			page 440


 15516 02be 488D3500 		leaq	.LC37(%rip), %rsi
 15516      000000
 15517 02c5 E8000000 		call	__isoc99_sscanf@PLT
 15517      00
 15518              	.LVL1233:
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15519              		.loc 1 1098 16 view .LVU6514
 15520 02ca 83F801   		cmpl	$1, %eax
 15521 02cd 0F85990A 		jne	.L1807
 15521      0000
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15522              		.loc 1 1098 106 discriminator 1 view .LVU6515
 15523 02d3 488B5424 		movq	120(%rsp), %rdx
 15523      78
1098:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15524              		.loc 1 1098 82 discriminator 1 view .LVU6516
 15525 02d8 483B5424 		cmpq	112(%rsp), %rdx
 15525      70
 15526 02dd 0F87890A 		ja	.L1807
 15526      0000
1101:sieve_extend.c ****         }
 15527              		.loc 1 1101 13 is_stmt 1 view .LVU6517
 15528              	.LVL1234:
 15529              	.LBB964:
 15530              	.LBI964:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15531              		.loc 3 105 1 view .LVU6518
 15532              	.LBB965:
 15533              		.loc 3 107 3 view .LVU6519
 15534              		.loc 3 107 10 is_stmt 0 view .LVU6520
 15535 02e3 488D3500 		leaq	.LC39(%rip), %rsi
 15535      000000
 15536 02ea BF010000 		movl	$1, %edi
 15536      00
 15537 02ef 31C0     		xorl	%eax, %eax
 15538 02f1 E8000000 		call	__printf_chk@PLT
 15538      00
 15539              	.LVL1235:
 15540 02f6 E9C3FDFF 		jmp	.L1800
 15540      FF
 15541              	.LVL1236:
 15542 02fb 0F1F4400 		.p2align 4,,10
 15542      00
 15543              		.p2align 3
 15544              	.L1805:
 15545              		.loc 3 107 10 view .LVU6521
 15546              	.LBE965:
 15547              	.LBE964:
1103:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15548              		.loc 1 1103 14 is_stmt 1 view .LVU6522
1103:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15549              		.loc 1 1103 18 is_stmt 0 view .LVU6523
 15550 0300 31C0     		xorl	%eax, %eax
 15551 0302 488D5424 		leaq	112(%rsp), %rdx
 15551      70
 15552 0307 488D3500 		leaq	.LC37(%rip), %rsi
 15552      000000
GAS LISTING /tmp/ccmX4xFB.s 			page 441


 15553 030e 4C89C7   		movq	%r8, %rdi
 15554 0311 E8000000 		call	__isoc99_sscanf@PLT
 15554      00
 15555              	.LVL1237:
1103:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15556              		.loc 1 1103 17 view .LVU6524
 15557 0316 83F801   		cmpl	$1, %eax
 15558 0319 0F849FFD 		je	.L1800
 15558      FFFF
1104:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 15559              		.loc 1 1104 13 is_stmt 1 view .LVU6525
 15560              	.LVL1238:
 15561              	.LBB966:
 15562              	.LBI966:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15563              		.loc 3 98 1 view .LVU6526
 15564              	.LBB967:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15565              		.loc 3 100 3 view .LVU6527
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15566              		.loc 3 100 10 is_stmt 0 view .LVU6528
 15567 031f 498B0F   		movq	(%r15), %rcx
 15568 0322 488D1500 		leaq	.LC40(%rip), %rdx
 15568      000000
 15569 0329 E90F0200 		jmp	.L1920
 15569      00
 15570              	.LVL1239:
 15571 032e 6690     		.p2align 4,,10
 15572              		.p2align 3
 15573              	.L1927:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15574              		.loc 3 100 10 view .LVU6529
 15575              	.LBE967:
 15576              	.LBE966:
 15577              	.LBE1015:
 15578              	.LBB1016:
 15579              	.LBB1011:
 15580              	.LBB1006:
 15581              	.LBB1001:
 15582              		.loc 1 1136 74 is_stmt 1 view .LVU6530
 15583              	.LBB997:
 15584              	.LBI997:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15585              		.loc 3 105 1 view .LVU6531
 15586              	.LBB998:
 15587              		.loc 3 107 3 view .LVU6532
 15588              		.loc 3 107 10 is_stmt 0 view .LVU6533
 15589 0330 488D3500 		leaq	.LC43(%rip), %rsi
 15589      000000
 15590 0337 BF010000 		movl	$1, %edi
 15590      00
 15591 033c 31C0     		xorl	%eax, %eax
 15592 033e E8000000 		call	__printf_chk@PLT
 15592      00
 15593              	.LVL1240:
 15594              	.LBE998:
 15595              	.LBE997:
GAS LISTING /tmp/ccmX4xFB.s 			page 442


 15596              	.LBE1001:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15597              		.loc 1 1131 90 view .LVU6534
 15598 0343 4D01F6   		addq	%r14, %r14
 15599              	.LVL1241:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15600              		.loc 1 1131 90 view .LVU6535
 15601 0346 8B442468 		movl	104(%rsp), %eax
 15602              	.LVL1242:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15603              		.loc 1 1131 75 is_stmt 1 view .LVU6536
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15604              		.loc 1 1131 49 view .LVU6537
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15605              		.loc 1 1131 13 is_stmt 0 view .LVU6538
 15606 034a FFCB     		decl	%ebx
 15607 034c 0F8515FF 		jne	.L1815
 15607      FFFF
 15608              	.L1928:
1131:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15609              		.loc 1 1131 13 view .LVU6539
 15610              	.LBE1006:
1137:sieve_extend.c ****             }
1138:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 15611              		.loc 1 1138 13 is_stmt 1 view .LVU6540
 15612              		.loc 1 1138 16 is_stmt 0 view .LVU6541
 15613 0352 83F801   		cmpl	$1, %eax
 15614 0355 7E0A     		jle	.L1816
 15615              		.loc 1 1138 43 is_stmt 1 view .LVU6542
 15616              	.LVL1243:
 15617              	.LBB1007:
 15618              	.LBI1007:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15619              		.loc 3 105 1 view .LVU6543
 15620              	.LBB1008:
 15621              		.loc 3 107 3 view .LVU6544
 15622              		.loc 3 107 10 is_stmt 0 view .LVU6545
 15623 0357 BF0A0000 		movl	$10, %edi
 15623      00
 15624 035c E8000000 		call	putchar@PLT
 15624      00
 15625              	.LVL1244:
 15626              	.L1816:
 15627              		.loc 3 107 10 view .LVU6546
 15628              	.LBE1008:
 15629              	.LBE1007:
 15630              	.LBE1011:
1128:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15631              		.loc 1 1128 77 is_stmt 1 discriminator 2 view .LVU6547
1128:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15632              		.loc 1 1128 93 is_stmt 0 discriminator 2 view .LVU6548
 15633 0361 4F8D24A4 		leaq	(%r12,%r12,4), %r12
 15634              	.LVL1245:
1128:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15635              		.loc 1 1128 93 discriminator 2 view .LVU6549
 15636 0365 4D01E4   		addq	%r12, %r12
 15637              	.LVL1246:
GAS LISTING /tmp/ccmX4xFB.s 			page 443


1128:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15638              		.loc 1 1128 47 is_stmt 1 discriminator 2 view .LVU6550
1128:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15639              		.loc 1 1128 9 is_stmt 0 discriminator 2 view .LVU6551
 15640 0368 FF0C24   		decl	(%rsp)
 15641 036b 0F8570FE 		jne	.L1817
 15641      FFFF
 15642              	.LBE1016:
1139:sieve_extend.c ****         }
1140:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 15643              		.loc 1 1140 9 is_stmt 1 view .LVU6552
 15644              		.loc 1 1140 12 is_stmt 0 view .LVU6553
 15645 0371 837C2468 		cmpl	$0, 104(%rsp)
 15645      00
 15646 0376 0F8FF807 		jg	.L1930
 15646      0000
1141:sieve_extend.c ****     }
1142:sieve_extend.c ****     
1143:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 15647              		.loc 1 1143 5 is_stmt 1 view .LVU6554
 15648              	.LVL1247:
1144:sieve_extend.c ****     if (option_tunelevel) {
 15649              		.loc 1 1144 5 view .LVU6555
 15650              		.loc 1 1144 9 is_stmt 0 view .LVU6556
 15651 037c 448B4424 		movl	108(%rsp), %r8d
 15651      6C
1143:sieve_extend.c ****     if (option_tunelevel) {
 15652              		.loc 1 1143 15 view .LVU6557
 15653 0381 41BF00FC 		movl	$261120, %r15d
 15653      0300
 15654              	.LVL1248:
 15655              		.loc 1 1144 8 view .LVU6558
 15656 0387 4585C0   		testl	%r8d, %r8d
 15657 038a 0F856102 		jne	.L1931
 15657      0000
 15658              	.LVL1249:
 15659              	.L1844:
 15660              	.LBB1017:
1145:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1146:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1147:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1148:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1149:sieve_extend.c ****     }
1150:sieve_extend.c **** 
1151:sieve_extend.c ****     double max_time = default_sieve_duration;
1152:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1153:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1154:sieve_extend.c ****         counter_t passes = 0;
 15661              		.loc 1 1154 9 is_stmt 1 view .LVU6559
1155:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 15662              		.loc 1 1155 9 view .LVU6560
1156:sieve_extend.c ****         double elapsed_time = 0;
 15663              		.loc 1 1156 9 view .LVU6561
1157:sieve_extend.c ****         struct sieve_state *sieve_instance;
 15664              		.loc 1 1157 9 view .LVU6562
1158:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 15665              		.loc 1 1158 9 view .LVU6563
GAS LISTING /tmp/ccmX4xFB.s 			page 444


 15666 0390 488DB424 		leaq	128(%rsp), %rsi
 15666      80000000 
 15667 0398 BF010000 		movl	$1, %edi
 15667      00
 15668 039d E8000000 		call	clock_gettime@PLT
 15668      00
 15669              	.LVL1250:
1159:sieve_extend.c ****         while (elapsed_time <= max_time) {
 15670              		.loc 1 1159 9 view .LVU6564
 15671              		.loc 1 1159 15 view .LVU6565
1154:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 15672              		.loc 1 1154 19 is_stmt 0 view .LVU6566
 15673 03a2 4531F6   		xorl	%r14d, %r14d
 15674 03a5 488D9C24 		leaq	144(%rsp), %rbx
 15674      90000000 
 15675              	.LVL1251:
 15676              	.L1845:
1160:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15677              		.loc 1 1160 13 is_stmt 1 view .LVU6567
 15678              		.loc 1 1160 30 is_stmt 0 view .LVU6568
 15679 03ad 488B7C24 		movq	112(%rsp), %rdi
 15679      70
 15680 03b2 4C89FE   		movq	%r15, %rsi
 15681 03b5 E8000000 		call	sieve
 15681      00
 15682              	.LVL1252:
 15683              	.LBB1018:
 15684              	.LBB1019:
  91:sieve_extend.c ****     free(sieve);
 15685              		.loc 1 91 5 view .LVU6569
 15686 03ba 488B38   		movq	(%rax), %rdi
 15687              	.LBE1019:
 15688              	.LBE1018:
 15689              		.loc 1 1160 30 view .LVU6570
 15690 03bd 4989C4   		movq	%rax, %r12
 15691              	.LVL1253:
1161:sieve_extend.c ****             delete_sieve(sieve_instance);
 15692              		.loc 1 1161 13 is_stmt 1 view .LVU6571
 15693              	.LBB1023:
 15694              	.LBI1018:
  90:sieve_extend.c ****     free(sieve->bitarray);
 15695              		.loc 1 90 13 view .LVU6572
 15696              	.LBB1020:
  91:sieve_extend.c ****     free(sieve);
 15697              		.loc 1 91 5 view .LVU6573
 15698 03c0 E8000000 		call	free@PLT
 15698      00
 15699              	.LVL1254:
  92:sieve_extend.c **** }
 15700              		.loc 1 92 5 view .LVU6574
 15701 03c5 4C89E7   		movq	%r12, %rdi
 15702 03c8 E8000000 		call	free@PLT
 15702      00
 15703              	.LVL1255:
  92:sieve_extend.c **** }
 15704              		.loc 1 92 5 is_stmt 0 view .LVU6575
 15705              	.LBE1020:
GAS LISTING /tmp/ccmX4xFB.s 			page 445


 15706              	.LBE1023:
1162:sieve_extend.c ****             passes++;
 15707              		.loc 1 1162 13 is_stmt 1 view .LVU6576
1163:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15708              		.loc 1 1163 13 is_stmt 0 view .LVU6577
 15709 03cd 4889DE   		movq	%rbx, %rsi
 15710 03d0 BF010000 		movl	$1, %edi
 15710      00
 15711 03d5 E8000000 		call	clock_gettime@PLT
 15711      00
 15712              	.LVL1256:
1164:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15713              		.loc 1 1164 62 view .LVU6578
 15714 03da C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2
 15715 03de C4E1EB2A 		vcvtsi2sdq	152(%rsp), %xmm2, %xmm1
 15715      8C249800 
 15715      0000
 15716              		.loc 1 1164 68 view .LVU6579
 15717 03e8 C4E1EB2A 		vcvtsi2sdq	128(%rsp), %xmm2, %xmm5
 15717      AC248000 
 15717      0000
 15718              		.loc 1 1164 108 view .LVU6580
 15719 03f2 C4E1EB2A 		vcvtsi2sdq	136(%rsp), %xmm2, %xmm3
 15719      9C248800 
 15719      0000
 15720              		.loc 1 1164 44 view .LVU6581
 15721 03fc C461EB2A 		vcvtsi2sdq	144(%rsp), %xmm2, %xmm9
 15721      8C249000 
 15721      0000
1159:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15722              		.loc 1 1159 15 view .LVU6582
 15723 0406 C57B1015 		vmovsd	.LC53(%rip), %xmm10
 15723      00000000 
 15724 040e C4E2F1BB 		vfmsub231sd	.LC4(%rip), %xmm1, %xmm5
 15724      2D000000 
 15724      00
1162:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15725              		.loc 1 1162 19 view .LVU6583
 15726 0417 49FFC6   		incq	%r14
 15727              	.LVL1257:
1163:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15728              		.loc 1 1163 13 is_stmt 1 view .LVU6584
 15729              		.loc 1 1164 13 view .LVU6585
 15730 041a C462E1BD 		vfnmadd231sd	.LC4(%rip), %xmm3, %xmm9
 15730      0D000000 
 15730      00
 15731              		.loc 1 1164 26 is_stmt 0 view .LVU6586
 15732 0423 C4C15358 		vaddsd	%xmm9, %xmm5, %xmm0
 15732      C1
 15733              	.LVL1258:
1159:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15734              		.loc 1 1159 15 is_stmt 1 view .LVU6587
 15735 0428 C5792FD0 		vcomisd	%xmm0, %xmm10
 15736 042c 0F828600 		jb	.L1917
 15736      0000
 15737              	.LVL1259:
1160:sieve_extend.c ****             delete_sieve(sieve_instance);
GAS LISTING /tmp/ccmX4xFB.s 			page 446


 15738              		.loc 1 1160 13 view .LVU6588
1160:sieve_extend.c ****             delete_sieve(sieve_instance);
 15739              		.loc 1 1160 30 is_stmt 0 view .LVU6589
 15740 0432 488B7C24 		movq	112(%rsp), %rdi
 15740      70
 15741 0437 4C89FE   		movq	%r15, %rsi
 15742 043a E8000000 		call	sieve
 15742      00
 15743              	.LVL1260:
 15744              	.LBB1024:
 15745              	.LBB1021:
  91:sieve_extend.c ****     free(sieve);
 15746              		.loc 1 91 5 view .LVU6590
 15747 043f 488B38   		movq	(%rax), %rdi
 15748              	.LBE1021:
 15749              	.LBE1024:
1160:sieve_extend.c ****             delete_sieve(sieve_instance);
 15750              		.loc 1 1160 30 view .LVU6591
 15751 0442 4889C5   		movq	%rax, %rbp
1161:sieve_extend.c ****             passes++;
 15752              		.loc 1 1161 13 is_stmt 1 view .LVU6592
 15753              	.LVL1261:
 15754              	.LBB1025:
  90:sieve_extend.c ****     free(sieve->bitarray);
 15755              		.loc 1 90 13 view .LVU6593
 15756              	.LBB1022:
  91:sieve_extend.c ****     free(sieve);
 15757              		.loc 1 91 5 view .LVU6594
 15758 0445 E8000000 		call	free@PLT
 15758      00
 15759              	.LVL1262:
  92:sieve_extend.c **** }
 15760              		.loc 1 92 5 view .LVU6595
 15761 044a 4889EF   		movq	%rbp, %rdi
 15762 044d E8000000 		call	free@PLT
 15762      00
 15763              	.LVL1263:
  92:sieve_extend.c **** }
 15764              		.loc 1 92 5 is_stmt 0 view .LVU6596
 15765              	.LBE1022:
 15766              	.LBE1025:
1162:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15767              		.loc 1 1162 13 is_stmt 1 view .LVU6597
1163:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15768              		.loc 1 1163 13 is_stmt 0 view .LVU6598
 15769 0452 4889DE   		movq	%rbx, %rsi
 15770 0455 BF010000 		movl	$1, %edi
 15770      00
 15771 045a E8000000 		call	clock_gettime@PLT
 15771      00
 15772              	.LVL1264:
 15773              		.loc 1 1164 62 view .LVU6599
 15774 045f C4412057 		vxorps	%xmm11, %xmm11, %xmm11
 15774      DB
 15775 0464 C4E1A32A 		vcvtsi2sdq	152(%rsp), %xmm11, %xmm1
 15775      8C249800 
 15775      0000
GAS LISTING /tmp/ccmX4xFB.s 			page 447


 15776              		.loc 1 1164 68 view .LVU6600
 15777 046e C461A32A 		vcvtsi2sdq	128(%rsp), %xmm11, %xmm13
 15777      AC248000 
 15777      0000
 15778              		.loc 1 1164 108 view .LVU6601
 15779 0478 C4E1A32A 		vcvtsi2sdq	136(%rsp), %xmm11, %xmm3
 15779      9C248800 
 15779      0000
 15780              		.loc 1 1164 44 view .LVU6602
 15781 0482 C461A32A 		vcvtsi2sdq	144(%rsp), %xmm11, %xmm15
 15781      BC249000 
 15781      0000
1159:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15782              		.loc 1 1159 15 view .LVU6603
 15783 048c C5FB1035 		vmovsd	.LC53(%rip), %xmm6
 15783      00000000 
 15784 0494 C462F1BB 		vfmsub231sd	.LC4(%rip), %xmm1, %xmm13
 15784      2D000000 
 15784      00
1162:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15785              		.loc 1 1162 19 view .LVU6604
 15786 049d 49FFC6   		incq	%r14
 15787              	.LVL1265:
1163:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15788              		.loc 1 1163 13 is_stmt 1 view .LVU6605
 15789              		.loc 1 1164 13 view .LVU6606
 15790 04a0 C462E1BD 		vfnmadd231sd	.LC4(%rip), %xmm3, %xmm15
 15790      3D000000 
 15790      00
 15791              		.loc 1 1164 26 is_stmt 0 view .LVU6607
 15792 04a9 C4C11358 		vaddsd	%xmm15, %xmm13, %xmm0
 15792      C7
 15793              	.LVL1266:
1159:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15794              		.loc 1 1159 15 is_stmt 1 view .LVU6608
 15795 04ae C5F92FF0 		vcomisd	%xmm0, %xmm6
 15796 04b2 0F83F5FE 		jnb	.L1845
 15796      FFFF
 15797              	.L1917:
1165:sieve_extend.c ****         }
1166:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 15798              		.loc 1 1166 9 view .LVU6609
 15799              	.LVL1267:
 15800              	.LBB1026:
 15801              	.LBI1026:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15802              		.loc 3 105 1 view .LVU6610
 15803              	.LBB1027:
 15804              		.loc 3 107 3 view .LVU6611
 15805              		.loc 3 107 10 is_stmt 0 view .LVU6612
 15806 04b8 4C89F2   		movq	%r14, %rdx
 15807 04bb 488D3500 		leaq	.LC54(%rip), %rsi
 15807      000000
 15808 04c2 BF010000 		movl	$1, %edi
 15808      00
 15809 04c7 B8010000 		movl	$1, %eax
 15809      00
GAS LISTING /tmp/ccmX4xFB.s 			page 448


 15810 04cc C5FB1104 		vmovsd	%xmm0, (%rsp)
 15810      24
 15811 04d1 E8000000 		call	__printf_chk@PLT
 15811      00
 15812              	.LVL1268:
 15813              		.loc 3 107 10 view .LVU6613
 15814              	.LBE1027:
 15815              	.LBE1026:
1167:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 15816              		.loc 1 1167 9 is_stmt 1 view .LVU6614
 15817              		.loc 1 1167 12 is_stmt 0 view .LVU6615
 15818 04d6 837C2468 		cmpl	$0, 104(%rsp)
 15818      00
 15819 04db 0F8FC400 		jg	.L1932
 15819      0000
 15820              	.LVL1269:
 15821              	.L1843:
 15822              		.loc 1 1167 12 view .LVU6616
 15823              	.LBE1017:
1168:sieve_extend.c ****     }
1169:sieve_extend.c ****     
1170:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 15824              		.loc 1 1170 5 is_stmt 1 view .LVU6617
 15825              		.loc 1 1170 8 is_stmt 0 view .LVU6618
 15826 04e1 48837C24 		cmpq	$0, 120(%rsp)
 15826      7800
 15827 04e7 7570     		jne	.L1933
 15828 04e9 0F1F8000 		.p2align 4,,10
 15828      000000
 15829              		.p2align 3
 15830              	.L1851:
 15831              	.LBB1036:
 15832              	.LBB1012:
 15833              	.LBB1009:
 15834              	.LBB1002:
1136:sieve_extend.c ****             }
 15835              		.loc 1 1136 29 is_stmt 1 discriminator 1 view .LVU6619
 15836              	.LBE1002:
 15837              	.LBE1009:
 15838              	.LBE1012:
 15839              	.LBE1036:
1171:sieve_extend.c ****         printf("Show result set:\n");
1172:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1173:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1174:sieve_extend.c ****         delete_sieve(sieve_instance);
1175:sieve_extend.c ****         printf("\n");
1176:sieve_extend.c ****     }
1177:sieve_extend.c **** }
 15840              		.loc 1 1177 1 is_stmt 0 discriminator 1 view .LVU6620
 15841 04f0 488B8424 		movq	168(%rsp), %rax
 15841      A8000000 
 15842 04f8 64483304 		xorq	%fs:40, %rax
 15842      25280000 
 15842      00
 15843 0501 0F859A08 		jne	.L1934
 15843      0000
 15844              		.loc 1 1177 1 view .LVU6621
GAS LISTING /tmp/ccmX4xFB.s 			page 449


 15845 0507 4881C4B8 		addq	$184, %rsp
 15845      000000
 15846              		.cfi_remember_state
 15847              		.cfi_def_cfa_offset 56
 15848 050e 5B       		popq	%rbx
 15849              		.cfi_def_cfa_offset 48
 15850 050f 5D       		popq	%rbp
 15851              		.cfi_def_cfa_offset 40
 15852 0510 415C     		popq	%r12
 15853              		.cfi_def_cfa_offset 32
 15854 0512 415D     		popq	%r13
 15855              		.cfi_def_cfa_offset 24
 15856 0514 415E     		popq	%r14
 15857              		.cfi_def_cfa_offset 16
 15858 0516 31C0     		xorl	%eax, %eax
 15859 0518 415F     		popq	%r15
 15860              		.cfi_def_cfa_offset 8
 15861 051a C3       		ret
 15862              	.L1809:
 15863              		.cfi_restore_state
1124:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 15864              		.loc 1 1124 39 is_stmt 1 view .LVU6622
 15865              	.LVL1270:
 15866              	.LBB1037:
 15867              	.LBI1037:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15868              		.loc 3 105 1 view .LVU6623
 15869              	.LBB1038:
 15870              		.loc 3 107 3 view .LVU6624
 15871              		.loc 3 107 10 is_stmt 0 view .LVU6625
 15872 051b 488D3500 		leaq	.LC23(%rip), %rsi
 15872      000000
 15873 0522 BF010000 		movl	$1, %edi
 15873      00
 15874 0527 31C0     		xorl	%eax, %eax
 15875 0529 E8000000 		call	__printf_chk@PLT
 15875      00
 15876              	.LVL1271:
 15877 052e E989FCFF 		jmp	.L1794
 15877      FF
 15878              	.LVL1272:
 15879              	.L1798:
 15880              		.loc 3 107 10 view .LVU6626
 15881              	.LBE1038:
 15882              	.LBE1037:
 15883              	.LBB1039:
1084:sieve_extend.c ****             }
 15884              		.loc 1 1084 17 is_stmt 1 view .LVU6627
 15885              	.LBB968:
 15886              	.LBI968:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15887              		.loc 3 98 1 view .LVU6628
 15888              	.LBB969:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15889              		.loc 3 100 3 view .LVU6629
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15890              		.loc 3 100 10 is_stmt 0 view .LVU6630
GAS LISTING /tmp/ccmX4xFB.s 			page 450


 15891 0533 498B0F   		movq	(%r15), %rcx
 15892 0536 488D1500 		leaq	.LC28(%rip), %rdx
 15892      000000
 15893              	.LVL1273:
 15894              	.L1920:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15895              		.loc 3 100 10 view .LVU6631
 15896              	.LBE969:
 15897              	.LBE968:
 15898              	.LBB970:
 15899              	.LBB971:
 15900 053d 488B3D00 		movq	stderr(%rip), %rdi
 15900      000000
 15901 0544 BE010000 		movl	$1, %esi
 15901      00
 15902 0549 31C0     		xorl	%eax, %eax
 15903 054b E8000000 		call	__fprintf_chk@PLT
 15903      00
 15904              	.LVL1274:
 15905              	.L1921:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15906              		.loc 3 100 10 view .LVU6632
 15907              	.LBE971:
 15908              	.LBE970:
1092:sieve_extend.c ****             }
 15909              		.loc 1 1092 80 is_stmt 1 view .LVU6633
 15910 0550 498B3C24 		movq	(%r12), %rdi
 15911 0554 E8000000 		call	usage
 15911      00
 15912              	.LVL1275:
 15913              	.L1933:
1092:sieve_extend.c ****             }
 15914              		.loc 1 1092 80 is_stmt 0 view .LVU6634
 15915              	.LBE1039:
 15916              	.LBB1040:
1171:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 15917              		.loc 1 1171 9 is_stmt 1 view .LVU6635
 15918              	.LBB1041:
 15919              	.LBI1041:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15920              		.loc 3 105 1 view .LVU6636
 15921              	.LBB1042:
 15922              		.loc 3 107 3 view .LVU6637
 15923              		.loc 3 107 10 is_stmt 0 view .LVU6638
 15924 0559 488D3D00 		leaq	.LC56(%rip), %rdi
 15924      000000
 15925 0560 E8000000 		call	puts@PLT
 15925      00
 15926              	.LVL1276:
 15927              		.loc 3 107 10 view .LVU6639
 15928              	.LBE1042:
 15929              	.LBE1041:
1172:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15930              		.loc 1 1172 9 is_stmt 1 view .LVU6640
1172:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15931              		.loc 1 1172 46 is_stmt 0 view .LVU6641
 15932 0565 488B7C24 		movq	112(%rsp), %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 451


 15932      70
 15933 056a 4889FE   		movq	%rdi, %rsi
 15934 056d E8000000 		call	sieve
 15934      00
 15935              	.LVL1277:
1173:sieve_extend.c ****         delete_sieve(sieve_instance);
 15936              		.loc 1 1173 9 view .LVU6642
 15937 0572 488B5424 		movq	120(%rsp), %rdx
 15937      78
1172:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15938              		.loc 1 1172 46 view .LVU6643
 15939 0577 4989C7   		movq	%rax, %r15
 15940              	.LVL1278:
1173:sieve_extend.c ****         delete_sieve(sieve_instance);
 15941              		.loc 1 1173 9 is_stmt 1 view .LVU6644
 15942 057a 488D7008 		leaq	8(%rax), %rsi
 15943 057e 4889C7   		movq	%rax, %rdi
 15944 0581 E8000000 		call	show_primes.isra.0
 15944      00
 15945              	.LVL1279:
1174:sieve_extend.c ****         printf("\n");
 15946              		.loc 1 1174 9 view .LVU6645
 15947              	.LBB1043:
 15948              	.LBI1043:
  90:sieve_extend.c ****     free(sieve->bitarray);
 15949              		.loc 1 90 13 view .LVU6646
 15950              	.LBB1044:
  91:sieve_extend.c ****     free(sieve);
 15951              		.loc 1 91 5 view .LVU6647
 15952 0586 498B3F   		movq	(%r15), %rdi
 15953 0589 E8000000 		call	free@PLT
 15953      00
 15954              	.LVL1280:
  92:sieve_extend.c **** }
 15955              		.loc 1 92 5 view .LVU6648
 15956 058e 4C89FF   		movq	%r15, %rdi
 15957 0591 E8000000 		call	free@PLT
 15957      00
 15958              	.LVL1281:
  92:sieve_extend.c **** }
 15959              		.loc 1 92 5 is_stmt 0 view .LVU6649
 15960              	.LBE1044:
 15961              	.LBE1043:
1175:sieve_extend.c ****     }
 15962              		.loc 1 1175 9 is_stmt 1 view .LVU6650
 15963              	.LBB1045:
 15964              	.LBI1045:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15965              		.loc 3 105 1 view .LVU6651
 15966              	.LBB1046:
 15967              		.loc 3 107 3 view .LVU6652
 15968              		.loc 3 107 10 is_stmt 0 view .LVU6653
 15969 0596 BF0A0000 		movl	$10, %edi
 15969      00
 15970 059b E8000000 		call	putchar@PLT
 15970      00
 15971              	.LVL1282:
GAS LISTING /tmp/ccmX4xFB.s 			page 452


 15972 05a0 E94BFFFF 		jmp	.L1851
 15972      FF
 15973              	.LVL1283:
 15974              	.L1932:
 15975              		.loc 3 107 10 view .LVU6654
 15976              	.LBE1046:
 15977              	.LBE1045:
 15978              	.LBE1040:
 15979              	.LBB1047:
1167:sieve_extend.c ****     }
 15980              		.loc 1 1167 39 is_stmt 1 discriminator 1 view .LVU6655
 15981              	.LBB1028:
 15982              	.LBI1028:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15983              		.loc 3 105 1 discriminator 1 view .LVU6656
 15984              	.LBB1029:
 15985              		.loc 3 107 3 discriminator 1 view .LVU6657
 15986              	.LBE1029:
 15987              	.LBE1028:
1167:sieve_extend.c ****     }
 15988              		.loc 1 1167 39 is_stmt 0 discriminator 1 view .LVU6658
 15989 05a5 4D85F6   		testq	%r14, %r14
 15990 05a8 C5FB103C 		vmovsd	(%rsp), %xmm7
 15990      24
 15991 05ad C5F857C0 		vxorps	%xmm0, %xmm0, %xmm0
 15992 05b1 0F881907 		js	.L1847
 15992      0000
 15993 05b7 C4C1FB2A 		vcvtsi2sdq	%r14, %xmm0, %xmm2
 15993      D6
 15994              	.L1848:
1167:sieve_extend.c ****     }
 15995              		.loc 1 1167 95 discriminator 1 view .LVU6659
 15996 05bc 4B8D14B6 		leaq	(%r14,%r14,4), %rdx
1167:sieve_extend.c ****     }
 15997              		.loc 1 1167 39 discriminator 1 view .LVU6660
 15998 05c0 C5EB5ECF 		vdivsd	%xmm7, %xmm2, %xmm1
 15999 05c4 4885D2   		testq	%rdx, %rdx
 16000 05c7 0F88E906 		js	.L1849
 16000      0000
 16001 05cd C461FB2A 		vcvtsi2sdq	%rdx, %xmm0, %xmm8
 16001      C2
 16002              	.L1850:
 16003              	.LBB1032:
 16004              	.LBB1030:
 16005              		.loc 3 107 10 discriminator 1 view .LVU6661
 16006 05d2 488D3500 		leaq	.LC55(%rip), %rsi
 16006      000000
 16007 05d9 BF010000 		movl	$1, %edi
 16007      00
 16008 05de B8020000 		movl	$2, %eax
 16008      00
 16009              	.LBE1030:
 16010              	.LBE1032:
1167:sieve_extend.c ****     }
 16011              		.loc 1 1167 39 discriminator 1 view .LVU6662
 16012 05e3 C5BB5EC7 		vdivsd	%xmm7, %xmm8, %xmm0
 16013              	.LBB1033:
GAS LISTING /tmp/ccmX4xFB.s 			page 453


 16014              	.LBB1031:
 16015              		.loc 3 107 10 discriminator 1 view .LVU6663
 16016 05e7 E8000000 		call	__printf_chk@PLT
 16016      00
 16017              	.LVL1284:
 16018 05ec E9F0FEFF 		jmp	.L1843
 16018      FF
 16019              	.LVL1285:
 16020              	.L1931:
 16021              		.loc 3 107 10 discriminator 1 view .LVU6664
 16022              	.LBE1031:
 16023              	.LBE1033:
 16024              	.LBE1047:
 16025              	.LBB1048:
1145:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 16026              		.loc 1 1145 9 is_stmt 1 view .LVU6665
1145:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 16027              		.loc 1 1145 44 is_stmt 0 view .LVU6666
 16028 05f1 448B5424 		movl	104(%rsp), %r10d
 16028      68
 16029 05f6 4C8B5C24 		movq	112(%rsp), %r11
 16029      70
 16030 05fb 41FFC8   		decl	%r8d
 16031 05fe 44895424 		movl	%r10d, 80(%rsp)
 16031      50
 16032 0603 4C895C24 		movq	%r11, 72(%rsp)
 16032      48
 16033              	.LVL1286:
 16034              	.LBB1049:
 16035              	.LBI1049:
 939:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 16036              		.loc 1 939 27 is_stmt 1 view .LVU6667
 16037              	.LBB1050:
 940:sieve_extend.c **** 
 16038              		.loc 1 940 5 view .LVU6668
 942:sieve_extend.c ****     best_blocksize_bits = 0;
 16039              		.loc 1 942 5 view .LVU6669
 943:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 16040              		.loc 1 943 5 view .LVU6670
 944:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 16041              		.loc 1 944 5 view .LVU6671
 945:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 16042              		.loc 1 945 5 view .LVU6672
 946:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 16043              		.loc 1 946 5 view .LVU6673
 947:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 16044              		.loc 1 947 5 view .LVU6674
 948:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 16045              		.loc 1 948 5 view .LVU6675
 949:sieve_extend.c ****     double sample_duration = default_sample_duration;
 16046              		.loc 1 949 5 view .LVU6676
 950:sieve_extend.c **** 
 16047              		.loc 1 950 5 view .LVU6677
 953:sieve_extend.c ****         case 1:
 16048              		.loc 1 953 5 view .LVU6678
 16049 0608 4183F802 		cmpl	$2, %r8d
 16050 060c 0F862D06 		jbe	.L1852
GAS LISTING /tmp/ccmX4xFB.s 			page 454


 16050      0000
 16051 0612 C5FB1035 		vmovsd	.LC22(%rip), %xmm6
 16051      00000000 
 16052 061a 48C74424 		movq	$5, 48(%rsp)
 16052      30050000 
 16052      00
 16053 0623 48C74424 		movq	$128, 56(%rsp)
 16053      38800000 
 16053      00
 16054 062c 48C74424 		movq	$4, 88(%rsp)
 16054      58040000 
 16054      00
 16055 0635 C5FB1174 		vmovsd	%xmm6, 64(%rsp)
 16055      2440
 16056              	.LVL1287:
 16057              	.L1822:
 978:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 16058              		.loc 1 978 5 view .LVU6679
 978:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 16059              		.loc 1 978 33 is_stmt 0 view .LVU6680
 16060 063b B8400000 		movl	$64, %eax
 16060      00
 16061 0640 31D2     		xorl	%edx, %edx
 16062 0642 48F77424 		divq	88(%rsp)
 16062      58
 978:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 16063              		.loc 1 978 194 view .LVU6681
 16064 0647 31D2     		xorl	%edx, %edx
 980:sieve_extend.c ****     counter_t tuning_result_index=0;
 16065              		.loc 1 980 15 view .LVU6682
 16066 0649 4531F6   		xorl	%r14d, %r14d
 16067              	.LBB1051:
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16068              		.loc 1 983 20 view .LVU6683
 16069 064c 4531ED   		xorl	%r13d, %r13d
 16070              	.LBE1051:
 978:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 16071              		.loc 1 978 83 view .LVU6684
 16072 064f 488D7801 		leaq	1(%rax), %rdi
 16073              	.LVL1288:
 979:sieve_extend.c ****     counter_t tuning_results=0;
 16074              		.loc 1 979 5 is_stmt 1 view .LVU6685
 978:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 16075              		.loc 1 978 194 is_stmt 0 view .LVU6686
 16076 0653 B8001000 		movl	$4096, %eax
 16076      00
 16077 0658 48F77424 		divq	56(%rsp)
 16077      38
 979:sieve_extend.c ****     counter_t tuning_results=0;
 16078              		.loc 1 979 41 view .LVU6687
 16079 065d 480FAFC7 		imulq	%rdi, %rax
 16080 0661 480FAFF8 		imulq	%rax, %rdi
 16081              	.LVL1289:
 979:sieve_extend.c ****     counter_t tuning_results=0;
 16082              		.loc 1 979 41 view .LVU6688
 16083 0665 48C1E708 		salq	$8, %rdi
 16084 0669 E8000000 		call	malloc@PLT
GAS LISTING /tmp/ccmX4xFB.s 			page 455


 16084      00
 16085              	.LVL1290:
 980:sieve_extend.c ****     counter_t tuning_result_index=0;
 16086              		.loc 1 980 5 is_stmt 1 view .LVU6689
 981:sieve_extend.c ****     
 16087              		.loc 1 981 5 view .LVU6690
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16088              		.loc 1 983 5 view .LVU6691
 16089              	.LBB1064:
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16090              		.loc 1 983 10 view .LVU6692
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16091              		.loc 1 983 42 view .LVU6693
 16092 066e 48894424 		movq	%rax, 16(%rsp)
 16092      10
 16093              	.LBE1064:
 945:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 16094              		.loc 1 945 15 is_stmt 0 view .LVU6694
 16095 0673 48C74424 		movq	$0, 40(%rsp)
 16095      28000000 
 16095      00
 944:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 16096              		.loc 1 944 15 view .LVU6695
 16097 067c 48C74424 		movq	$0, 32(%rsp)
 16097      20000000 
 16097      00
 943:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 16098              		.loc 1 943 25 view .LVU6696
 16099 0685 48C74424 		movq	$0, 24(%rsp)
 16099      18000000 
 16099      00
 942:sieve_extend.c ****     best_blocksize_bits = 0;
 16100              		.loc 1 942 12 view .LVU6697
 16101 068e C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1
 16102 0692 C5FB110C 		vmovsd	%xmm1, (%rsp)
 16102      24
 16103              	.LVL1291:
 16104              	.L1824:
 16105              	.LBB1065:
 16106              	.LBB1052:
 984:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 16107              		.loc 1 984 62 is_stmt 1 view .LVU6698
 16108              	.LBB1053:
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16109              		.loc 1 985 28 is_stmt 0 view .LVU6699
 16110 0697 4D89EC   		movq	%r13, %r12
 16111              	.LVL1292:
 16112 069a 660F1F44 		.p2align 4,,10
 16112      0000
 16113              		.p2align 3
 16114              	.L1834:
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16115              		.loc 1 985 46 is_stmt 1 view .LVU6700
 16116              	.LBB1054:
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16117              		.loc 1 986 32 is_stmt 0 view .LVU6701
 16118 06a0 C7442454 		movl	$6, 84(%rsp)
GAS LISTING /tmp/ccmX4xFB.s 			page 456


 16118      06000000 
 16119              	.LBE1054:
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16120              		.loc 1 985 28 view .LVU6702
 16121 06a8 48C74424 		movq	$256, 8(%rsp)
 16121      08000100 
 16121      00
 16122              	.LVL1293:
 16123              		.p2align 4,,10
 16124 06b1 0F1F8000 		.p2align 3
 16124      000000
 16125              	.L1832:
 16126              	.LBB1063:
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16127              		.loc 1 986 45 is_stmt 1 view .LVU6703
 16128 06b8 4D6BC658 		imulq	$88, %r14, %r8
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16129              		.loc 1 986 130 is_stmt 0 view .LVU6704
 16130 06bc 488B5C24 		movq	8(%rsp), %rbx
 16130      08
 16131 06c1 4C8B7C24 		movq	16(%rsp), %r15
 16131      10
 16132 06c6 48C1E30D 		salq	$13, %rbx
 16133 06ca 4F8D3C07 		leaq	(%r15,%r8), %r15
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16134              		.loc 1 986 32 view .LVU6705
 16135 06ce 31ED     		xorl	%ebp, %ebp
 16136 06d0 EB41     		jmp	.L1830
 16137              	.LVL1294:
 16138              		.p2align 4,,10
 16139 06d2 660F1F44 		.p2align 3
 16139      0000
 16140              	.L1827:
 16141              	.LBB1055:
1002:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 16142              		.loc 1 1002 25 is_stmt 1 view .LVU6706
1003:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 16143              		.loc 1 1003 25 view .LVU6707
1004:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 16144              		.loc 1 1004 25 view .LVU6708
1005:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 16145              		.loc 1 1005 25 view .LVU6709
1006:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16146              		.loc 1 1006 25 view .LVU6710
1006:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16147              		.loc 1 1006 28 is_stmt 0 view .LVU6711
 16148 06d8 837C2450 		cmpl	$1, 80(%rsp)
 16148      01
 16149 06dd 0F8FE500 		jg	.L1935
 16149      0000
1006:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16150              		.loc 1 1006 28 view .LVU6712
 16151 06e3 4C896424 		movq	%r12, 40(%rsp)
 16151      28
 16152 06e8 4C896C24 		movq	%r13, 32(%rsp)
 16152      20
1003:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
GAS LISTING /tmp/ccmX4xFB.s 			page 457


 16153              		.loc 1 1003 45 view .LVU6713
 16154 06ed 48895C24 		movq	%rbx, 24(%rsp)
 16154      18
1002:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 16155              		.loc 1 1002 34 view .LVU6714
 16156 06f2 C5FB1114 		vmovsd	%xmm2, (%rsp)
 16156      24
 16157              	.LVL1295:
 16158              	.L1825:
1017:sieve_extend.c ****                 }
 16159              		.loc 1 1017 21 is_stmt 1 view .LVU6715
1017:sieve_extend.c ****                 }
 16160              		.loc 1 1017 21 is_stmt 0 view .LVU6716
 16161              	.LBE1055:
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16162              		.loc 1 986 137 is_stmt 1 view .LVU6717
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16163              		.loc 1 986 147 is_stmt 0 view .LVU6718
 16164 06f7 488B7424 		movq	56(%rsp), %rsi
 16164      38
 16165 06fc 4983C758 		addq	$88, %r15
 16166 0700 4801F5   		addq	%rsi, %rbp
 16167              	.LVL1296:
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16168              		.loc 1 986 45 is_stmt 1 view .LVU6719
 16169 0703 4829F3   		subq	%rsi, %rbx
 16170              	.LVL1297:
 986:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 16171              		.loc 1 986 17 is_stmt 0 view .LVU6720
 16172 0706 4881FDFF 		cmpq	$4095, %rbp
 16172      0F0000
 16173 070d 0F871D01 		ja	.L1826
 16173      0000
 16174              	.LVL1298:
 16175              	.L1830:
 16176              	.LBB1062:
 987:sieve_extend.c **** 
 16177              		.loc 1 987 21 is_stmt 1 view .LVU6721
 990:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 16178              		.loc 1 990 21 view .LVU6722
 994:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 16179              		.loc 1 994 69 is_stmt 0 view .LVU6723
 16180 0713 488B7C24 		movq	8(%rsp), %rdi
 16180      08
 991:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 16181              		.loc 1 991 64 view .LVU6724
 16182 0718 4C8B5424 		movq	72(%rsp), %r10
 16182      48
 993:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 16183              		.loc 1 993 67 view .LVU6725
 16184 071d 4C8B5C24 		movq	48(%rsp), %r11
 16184      30
 994:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 16185              		.loc 1 994 69 view .LVU6726
 16186 0722 49897F10 		movq	%rdi, 16(%r15)
 992:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 16187              		.loc 1 992 72 view .LVU6727
GAS LISTING /tmp/ccmX4xFB.s 			page 458


 16188 0726 C5FB1064 		vmovsd	64(%rsp), %xmm4
 16188      2440
 991:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 16189              		.loc 1 991 64 view .LVU6728
 16190 072c 4D8917   		movq	%r10, (%r15)
 993:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 16191              		.loc 1 993 67 view .LVU6729
 16192 072f 4D895F30 		movq	%r11, 48(%r15)
 995:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 16193              		.loc 1 995 66 view .LVU6730
 16194 0733 49896F18 		movq	%rbp, 24(%r15)
 996:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 16195              		.loc 1 996 71 view .LVU6731
 16196 0737 49895F08 		movq	%rbx, 8(%r15)
 997:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 16197              		.loc 1 997 73 view .LVU6732
 16198 073b 4D896F20 		movq	%r13, 32(%r15)
 998:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 16199              		.loc 1 998 74 view .LVU6733
 16200 073f 4D896728 		movq	%r12, 40(%r15)
 999:sieve_extend.c **** 
 16201              		.loc 1 999 21 view .LVU6734
 16202 0743 488B7C24 		movq	16(%rsp), %rdi
 16202      10
 16203 0748 4C89F6   		movq	%r14, %rsi
 992:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 16204              		.loc 1 992 72 view .LVU6735
 16205 074b C4C17B11 		vmovsd	%xmm4, 56(%r15)
 16205      6738
 999:sieve_extend.c **** 
 16206              		.loc 1 999 21 view .LVU6736
 16207 0751 E8000000 		call	tune_benchmark
 16207      00
 16208              	.LVL1299:
1001:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 16209              		.loc 1 1001 60 view .LVU6737
 16210 0756 C4C17B10 		vmovsd	80(%r15), %xmm2
 16210      5750
 990:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 16211              		.loc 1 990 35 view .LVU6738
 16212 075c 49FFC6   		incq	%r14
 16213              	.LVL1300:
 991:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 16214              		.loc 1 991 21 is_stmt 1 view .LVU6739
 992:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 16215              		.loc 1 992 21 view .LVU6740
 993:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 16216              		.loc 1 993 21 view .LVU6741
 994:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 16217              		.loc 1 994 21 view .LVU6742
 995:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 16218              		.loc 1 995 21 view .LVU6743
 996:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 16219              		.loc 1 996 21 view .LVU6744
 997:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 16220              		.loc 1 997 21 view .LVU6745
 998:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
GAS LISTING /tmp/ccmX4xFB.s 			page 459


 16221              		.loc 1 998 21 view .LVU6746
 999:sieve_extend.c **** 
 16222              		.loc 1 999 21 view .LVU6747
1001:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 16223              		.loc 1 1001 21 view .LVU6748
1001:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 16224              		.loc 1 1001 24 is_stmt 0 view .LVU6749
 16225 075f C5F92F14 		vcomisd	(%rsp), %xmm2
 16225      24
 16226 0764 0F876EFF 		ja	.L1827
 16226      FFFF
 16227              	.L1828:
1012:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16228              		.loc 1 1012 21 is_stmt 1 view .LVU6750
1012:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16229              		.loc 1 1012 24 is_stmt 0 view .LVU6751
 16230 076a 837C2450 		cmpl	$2, 80(%rsp)
 16230      02
 16231 076f 7E86     		jle	.L1825
1012:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16232              		.loc 1 1012 51 is_stmt 1 view .LVU6752
 16233              	.LVL1301:
 16234              	.LBB1056:
 16235              	.LBI1056:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16236              		.loc 3 105 1 view .LVU6753
 16237              	.LBB1057:
 16238              		.loc 3 107 3 view .LVU6754
 16239              		.loc 3 107 10 is_stmt 0 view .LVU6755
 16240 0771 4883EC08 		subq	$8, %rsp
 16241              		.cfi_def_cfa_offset 248
 16242              	.LVL1302:
 16243              		.loc 3 107 10 view .LVU6756
 16244 0775 C4C17B10 		vmovsd	72(%r15), %xmm0
 16244      4748
 16245 077b 498B4F10 		movq	16(%r15), %rcx
 16246 077f 498B5708 		movq	8(%r15), %rdx
 16247 0783 41FF7730 		pushq	48(%r15)
 16248              		.cfi_def_cfa_offset 256
 16249 0787 C4C17B10 		vmovsd	80(%r15), %xmm2
 16249      5750
 16250 078d C4C17B10 		vmovsd	56(%r15), %xmm1
 16250      4F38
 16251 0793 41FF7740 		pushq	64(%r15)
 16252              		.cfi_def_cfa_offset 264
 16253 0797 488D3500 		leaq	.LC47(%rip), %rsi
 16253      000000
 16254 079e BF010000 		movl	$1, %edi
 16254      00
 16255 07a3 41FF7728 		pushq	40(%r15)
 16256              		.cfi_def_cfa_offset 272
 16257 07a7 B8030000 		movl	$3, %eax
 16257      00
 16258 07ac 4D8B4F20 		movq	32(%r15), %r9
 16259 07b0 4D8B4718 		movq	24(%r15), %r8
 16260 07b4 E8000000 		call	__printf_chk@PLT
 16260      00
GAS LISTING /tmp/ccmX4xFB.s 			page 460


 16261              	.LVL1303:
 16262 07b9 4883C420 		addq	$32, %rsp
 16263              		.cfi_def_cfa_offset 240
 16264              	.LVL1304:
 16265              		.loc 3 107 10 view .LVU6757
 16266 07bd E935FFFF 		jmp	.L1825
 16266      FF
 16267              	.LVL1305:
 16268              		.p2align 4,,10
 16269 07c2 660F1F44 		.p2align 3
 16269      0000
 16270              	.L1935:
 16271              		.loc 3 107 10 view .LVU6758
 16272              	.LBE1057:
 16273              	.LBE1056:
1006:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 16274              		.loc 1 1006 54 is_stmt 1 view .LVU6759
 16275              	.LBB1058:
 16276              	.LBI1058:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16277              		.loc 3 105 1 view .LVU6760
 16278              	.LBB1059:
 16279              		.loc 3 107 3 view .LVU6761
 16280              		.loc 3 107 10 is_stmt 0 view .LVU6762
 16281 07c8 4883EC08 		subq	$8, %rsp
 16282              		.cfi_def_cfa_offset 248
 16283 07cc C4C17B10 		vmovsd	72(%r15), %xmm0
 16283      4748
 16284 07d2 498B4F10 		movq	16(%r15), %rcx
 16285 07d6 498B5708 		movq	8(%r15), %rdx
 16286 07da 41FF7730 		pushq	48(%r15)
 16287              		.cfi_def_cfa_offset 256
 16288 07de C4C17B10 		vmovsd	56(%r15), %xmm1
 16288      4F38
 16289 07e4 488D3500 		leaq	.LC46(%rip), %rsi
 16289      000000
 16290 07eb 41FF7740 		pushq	64(%r15)
 16291              		.cfi_def_cfa_offset 264
 16292 07ef BF010000 		movl	$1, %edi
 16292      00
 16293 07f4 B8030000 		movl	$3, %eax
 16293      00
 16294 07f9 41FF7728 		pushq	40(%r15)
 16295              		.cfi_def_cfa_offset 272
 16296 07fd 4D8B4F20 		movq	32(%r15), %r9
 16297 0801 4D8B4718 		movq	24(%r15), %r8
 16298 0805 C5FB1154 		vmovsd	%xmm2, 32(%rsp)
 16298      2420
 16299 080b E8000000 		call	__printf_chk@PLT
 16299      00
 16300              	.LVL1306:
 16301              		.loc 3 107 10 view .LVU6763
 16302 0810 4C896424 		movq	%r12, 72(%rsp)
 16302      48
 16303 0815 4883C420 		addq	$32, %rsp
 16304              		.cfi_def_cfa_offset 240
 16305              	.LVL1307:
GAS LISTING /tmp/ccmX4xFB.s 			page 461


 16306              		.loc 3 107 10 view .LVU6764
 16307 0819 4C896C24 		movq	%r13, 32(%rsp)
 16307      20
 16308              	.LBE1059:
 16309              	.LBE1058:
1003:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 16310              		.loc 1 1003 45 view .LVU6765
 16311 081e 48895C24 		movq	%rbx, 24(%rsp)
 16311      18
 16312              	.LBB1061:
 16313              	.LBB1060:
 16314              		.loc 3 107 10 view .LVU6766
 16315 0823 E942FFFF 		jmp	.L1828
 16315      FF
 16316              	.LVL1308:
 16317 0828 0F1F8400 		.p2align 4,,10
 16317      00000000 
 16318              		.p2align 3
 16319              	.L1826:
 16320              		.loc 3 107 10 view .LVU6767
 16321              	.LBE1060:
 16322              	.LBE1061:
 16323              	.LBE1062:
 16324              	.LBE1063:
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16325              		.loc 1 985 63 is_stmt 1 view .LVU6768
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16326              		.loc 1 985 46 view .LVU6769
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16327              		.loc 1 985 76 is_stmt 0 view .LVU6770
 16328 0830 48D16C24 		shrq	8(%rsp)
 16328      08
 16329              	.LVL1309:
 985:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 16330              		.loc 1 985 13 view .LVU6771
 16331 0835 FF4C2454 		decl	84(%rsp)
 16332 0839 0F8579FE 		jne	.L1832
 16332      FFFF
 16333              	.LBE1053:
 984:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 16334              		.loc 1 984 94 is_stmt 1 view .LVU6772
 984:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 16335              		.loc 1 984 112 is_stmt 0 view .LVU6773
 16336 083f 4C036424 		addq	88(%rsp), %r12
 16336      58
 16337              	.LVL1310:
 984:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 16338              		.loc 1 984 62 is_stmt 1 view .LVU6774
 984:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 16339              		.loc 1 984 9 is_stmt 0 view .LVU6775
 16340 0844 4983FC40 		cmpq	$64, %r12
 16341 0848 0F8652FE 		jbe	.L1834
 16341      FFFF
 16342              	.LBE1052:
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16343              		.loc 1 983 75 is_stmt 1 view .LVU6776
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
GAS LISTING /tmp/ccmX4xFB.s 			page 462


 16344              		.loc 1 983 92 is_stmt 0 view .LVU6777
 16345 084e 4C036C24 		addq	88(%rsp), %r13
 16345      58
 16346              	.LVL1311:
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16347              		.loc 1 983 42 is_stmt 1 view .LVU6778
 983:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 16348              		.loc 1 983 5 is_stmt 0 view .LVU6779
 16349 0853 4983FD20 		cmpq	$32, %r13
 16350 0857 0F863AFE 		jbe	.L1824
 16350      FFFF
 16351              	.LBE1065:
1022:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 16352              		.loc 1 1022 8 view .LVU6780
 16353 085d 837C2450 		cmpl	$1, 80(%rsp)
 16353      01
 16354 0862 4D89F7   		movq	%r14, %r15
 16355 0865 4C8B7424 		movq	16(%rsp), %r14
 16355      10
 16356              	.LVL1312:
1022:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 16357              		.loc 1 1022 5 is_stmt 1 view .LVU6781
1022:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 16358              		.loc 1 1022 8 is_stmt 0 view .LVU6782
 16359 086a 7E31     		jle	.L1835
1023:sieve_extend.c ****         printf("Best options\n");
 16360              		.loc 1 1023 9 is_stmt 1 view .LVU6783
 16361              	.LVL1313:
 16362              	.LBB1066:
 16363              	.LBI1066:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16364              		.loc 3 105 1 view .LVU6784
 16365              	.LBB1067:
 16366              		.loc 3 107 3 view .LVU6785
 16367              		.loc 3 107 10 is_stmt 0 view .LVU6786
 16368 086c 4C8B4C24 		movq	40(%rsp), %r9
 16368      28
 16369 0871 4C8B4424 		movq	32(%rsp), %r8
 16369      20
 16370 0876 488B4C24 		movq	24(%rsp), %rcx
 16370      18
 16371 087b BF010000 		movl	$1, %edi
 16371      00
 16372 0880 4C89FA   		movq	%r15, %rdx
 16373 0883 488D3500 		leaq	.LC48(%rip), %rsi
 16373      000000
 16374 088a 31C0     		xorl	%eax, %eax
 16375 088c E8000000 		call	__printf_chk@PLT
 16375      00
 16376              	.LVL1314:
 16377              		.loc 3 107 10 view .LVU6787
 16378              	.LBE1067:
 16379              	.LBE1066:
1024:sieve_extend.c ****     }
 16380              		.loc 1 1024 9 is_stmt 1 view .LVU6788
 16381              	.LBB1068:
 16382              	.LBI1068:
GAS LISTING /tmp/ccmX4xFB.s 			page 463


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16383              		.loc 3 105 1 view .LVU6789
 16384              	.LBB1069:
 16385              		.loc 3 107 3 view .LVU6790
 16386              		.loc 3 107 10 is_stmt 0 view .LVU6791
 16387 0891 488D3D00 		leaq	.LC49(%rip), %rdi
 16387      000000
 16388 0898 E8000000 		call	puts@PLT
 16388      00
 16389              	.LVL1315:
 16390              	.L1835:
 16391              		.loc 3 107 10 view .LVU6792
 16392              	.LBE1069:
 16393              	.LBE1068:
 16394              	.LBB1070:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16395              		.loc 1 1038 75 view .LVU6793
 16396 089d 4C8B6424 		movq	48(%rsp), %r12
 16396      30
 16397              	.LVL1316:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16398              		.loc 1 1038 75 view .LVU6794
 16399              	.LBE1070:
 16400              	.LBB1075:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16401              		.loc 1 1050 24 view .LVU6795
 16402 08a2 31DB     		xorl	%ebx, %ebx
 16403              	.LVL1317:
 16404              	.L1840:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16405              		.loc 1 1050 24 view .LVU6796
 16406              	.LBE1075:
1027:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 16407              		.loc 1 1027 11 is_stmt 1 view .LVU6797
 16408 08a4 4983FF04 		cmpq	$4, %r15
 16409 08a8 0F861A03 		jbe	.L1936
 16409      0000
1028:sieve_extend.c ****         step++;
 16410              		.loc 1 1028 9 view .LVU6798
 16411 08ae 488D0D00 		leaq	compare_tuning_result(%rip), %rcx
 16411      000000
 16412 08b5 BA580000 		movl	$88, %edx
 16412      00
 16413 08ba 4C89FE   		movq	%r15, %rsi
 16414 08bd 4C89F7   		movq	%r14, %rdi
 16415 08c0 E8000000 		call	qsort@PLT
 16415      00
 16416              	.LVL1318:
1029:sieve_extend.c ****         if (option_verboselevel >= 2) {
 16417              		.loc 1 1029 9 view .LVU6799
1029:sieve_extend.c ****         if (option_verboselevel >= 2) {
 16418              		.loc 1 1029 13 is_stmt 0 view .LVU6800
 16419 08c5 48FFC3   		incq	%rbx
 16420              	.LVL1319:
1030:sieve_extend.c ****             tuning_result_index = 0;
 16421              		.loc 1 1030 9 is_stmt 1 view .LVU6801
1030:sieve_extend.c ****             tuning_result_index = 0;
GAS LISTING /tmp/ccmX4xFB.s 			page 464


 16422              		.loc 1 1030 12 is_stmt 0 view .LVU6802
 16423 08c8 837C2450 		cmpl	$1, 80(%rsp)
 16423      01
 16424 08cd 0F8FE201 		jg	.L1836
 16424      0000
 16425              	.L1838:
1048:sieve_extend.c **** 
 16426              		.loc 1 1048 9 is_stmt 1 view .LVU6803
1048:sieve_extend.c **** 
 16427              		.loc 1 1048 24 is_stmt 0 view .LVU6804
 16428 08d3 49D1EF   		shrq	%r15
 16429              	.LVL1320:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16430              		.loc 1 1050 9 is_stmt 1 view .LVU6805
 16431              	.LBB1076:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16432              		.loc 1 1050 14 view .LVU6806
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16433              		.loc 1 1050 29 view .LVU6807
 16434 08d6 4D89FA   		movq	%r15, %r10
 16435 08d9 498D6E30 		leaq	48(%r14), %rbp
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16436              		.loc 1 1050 24 is_stmt 0 view .LVU6808
 16437 08dd 4531ED   		xorl	%r13d, %r13d
 16438 08e0 4183E207 		andl	$7, %r10d
 16439 08e4 0F84D400 		je	.L1837
 16439      0000
 16440 08ea 4983FA01 		cmpq	$1, %r10
 16441 08ee 0F84AB00 		je	.L1895
 16441      0000
 16442 08f4 4983FA02 		cmpq	$2, %r10
 16443 08f8 0F848B00 		je	.L1896
 16443      0000
 16444 08fe 4983FA03 		cmpq	$3, %r10
 16445 0902 746F     		je	.L1897
 16446 0904 4983FA04 		cmpq	$4, %r10
 16447 0908 7453     		je	.L1898
 16448 090a 4983FA05 		cmpq	$5, %r10
 16449 090e 7437     		je	.L1899
 16450 0910 4983FA06 		cmpq	$6, %r10
 16451 0914 741B     		je	.L1900
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16452              		.loc 1 1051 13 is_stmt 1 view .LVU6809
 16453 0916 31F6     		xorl	%esi, %esi
 16454 0918 4C89F7   		movq	%r14, %rdi
 16455 091b E8000000 		call	tune_benchmark
 16455      00
 16456              	.LVL1321:
1052:sieve_extend.c ****         }
 16457              		.loc 1 1052 13 view .LVU6810
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16458              		.loc 1 1050 48 is_stmt 0 view .LVU6811
 16459 0920 41BD0100 		movl	$1, %r13d
 16459      0000
1052:sieve_extend.c ****         }
 16460              		.loc 1 1052 41 view .LVU6812
 16461 0926 4C016500 		addq	%r12, 0(%rbp)
GAS LISTING /tmp/ccmX4xFB.s 			page 465


1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16462              		.loc 1 1050 47 is_stmt 1 view .LVU6813
 16463              	.LVL1322:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16464              		.loc 1 1050 29 view .LVU6814
 16465 092a 498DAE88 		leaq	136(%r14), %rbp
 16465      000000
 16466              	.L1900:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16467              		.loc 1 1051 13 view .LVU6815
 16468 0931 4C89EE   		movq	%r13, %rsi
 16469 0934 4C89F7   		movq	%r14, %rdi
 16470 0937 E8000000 		call	tune_benchmark
 16470      00
 16471              	.LVL1323:
1052:sieve_extend.c ****         }
 16472              		.loc 1 1052 13 view .LVU6816
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16473              		.loc 1 1050 48 is_stmt 0 view .LVU6817
 16474 093c 49FFC5   		incq	%r13
1052:sieve_extend.c ****         }
 16475              		.loc 1 1052 41 view .LVU6818
 16476 093f 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16477              		.loc 1 1050 47 is_stmt 1 view .LVU6819
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16478              		.loc 1 1050 29 view .LVU6820
 16479 0943 4883C558 		addq	$88, %rbp
 16480              	.L1899:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16481              		.loc 1 1051 13 view .LVU6821
 16482 0947 4C89EE   		movq	%r13, %rsi
 16483 094a 4C89F7   		movq	%r14, %rdi
 16484 094d E8000000 		call	tune_benchmark
 16484      00
 16485              	.LVL1324:
1052:sieve_extend.c ****         }
 16486              		.loc 1 1052 13 view .LVU6822
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16487              		.loc 1 1050 48 is_stmt 0 view .LVU6823
 16488 0952 49FFC5   		incq	%r13
1052:sieve_extend.c ****         }
 16489              		.loc 1 1052 41 view .LVU6824
 16490 0955 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16491              		.loc 1 1050 47 is_stmt 1 view .LVU6825
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16492              		.loc 1 1050 29 view .LVU6826
 16493 0959 4883C558 		addq	$88, %rbp
 16494              	.L1898:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16495              		.loc 1 1051 13 view .LVU6827
 16496 095d 4C89EE   		movq	%r13, %rsi
 16497 0960 4C89F7   		movq	%r14, %rdi
 16498 0963 E8000000 		call	tune_benchmark
 16498      00
 16499              	.LVL1325:
GAS LISTING /tmp/ccmX4xFB.s 			page 466


1052:sieve_extend.c ****         }
 16500              		.loc 1 1052 13 view .LVU6828
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16501              		.loc 1 1050 48 is_stmt 0 view .LVU6829
 16502 0968 49FFC5   		incq	%r13
1052:sieve_extend.c ****         }
 16503              		.loc 1 1052 41 view .LVU6830
 16504 096b 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16505              		.loc 1 1050 47 is_stmt 1 view .LVU6831
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16506              		.loc 1 1050 29 view .LVU6832
 16507 096f 4883C558 		addq	$88, %rbp
 16508              	.L1897:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16509              		.loc 1 1051 13 view .LVU6833
 16510 0973 4C89EE   		movq	%r13, %rsi
 16511 0976 4C89F7   		movq	%r14, %rdi
 16512 0979 E8000000 		call	tune_benchmark
 16512      00
 16513              	.LVL1326:
1052:sieve_extend.c ****         }
 16514              		.loc 1 1052 13 view .LVU6834
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16515              		.loc 1 1050 48 is_stmt 0 view .LVU6835
 16516 097e 49FFC5   		incq	%r13
1052:sieve_extend.c ****         }
 16517              		.loc 1 1052 41 view .LVU6836
 16518 0981 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16519              		.loc 1 1050 47 is_stmt 1 view .LVU6837
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16520              		.loc 1 1050 29 view .LVU6838
 16521 0985 4883C558 		addq	$88, %rbp
 16522              	.L1896:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16523              		.loc 1 1051 13 view .LVU6839
 16524 0989 4C89EE   		movq	%r13, %rsi
 16525 098c 4C89F7   		movq	%r14, %rdi
 16526 098f E8000000 		call	tune_benchmark
 16526      00
 16527              	.LVL1327:
1052:sieve_extend.c ****         }
 16528              		.loc 1 1052 13 view .LVU6840
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16529              		.loc 1 1050 48 is_stmt 0 view .LVU6841
 16530 0994 49FFC5   		incq	%r13
1052:sieve_extend.c ****         }
 16531              		.loc 1 1052 41 view .LVU6842
 16532 0997 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16533              		.loc 1 1050 47 is_stmt 1 view .LVU6843
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16534              		.loc 1 1050 29 view .LVU6844
 16535 099b 4883C558 		addq	$88, %rbp
 16536              	.L1895:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccmX4xFB.s 			page 467


 16537              		.loc 1 1051 13 view .LVU6845
 16538 099f 4C89EE   		movq	%r13, %rsi
 16539 09a2 4C89F7   		movq	%r14, %rdi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16540              		.loc 1 1050 48 is_stmt 0 view .LVU6846
 16541 09a5 49FFC5   		incq	%r13
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16542              		.loc 1 1051 13 view .LVU6847
 16543 09a8 E8000000 		call	tune_benchmark
 16543      00
 16544              	.LVL1328:
1052:sieve_extend.c ****         }
 16545              		.loc 1 1052 13 is_stmt 1 view .LVU6848
1052:sieve_extend.c ****         }
 16546              		.loc 1 1052 41 is_stmt 0 view .LVU6849
 16547 09ad 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16548              		.loc 1 1050 47 is_stmt 1 view .LVU6850
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16549              		.loc 1 1050 29 view .LVU6851
 16550 09b1 4883C558 		addq	$88, %rbp
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16551              		.loc 1 1050 9 is_stmt 0 view .LVU6852
 16552 09b5 4D39EF   		cmpq	%r13, %r15
 16553 09b8 0F84E6FE 		je	.L1840
 16553      FFFF
 16554              	.L1837:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16555              		.loc 1 1051 13 is_stmt 1 view .LVU6853
 16556 09be 4C89EE   		movq	%r13, %rsi
 16557 09c1 4C89F7   		movq	%r14, %rdi
 16558 09c4 E8000000 		call	tune_benchmark
 16558      00
 16559              	.LVL1329:
1052:sieve_extend.c ****         }
 16560              		.loc 1 1052 13 view .LVU6854
1052:sieve_extend.c ****         }
 16561              		.loc 1 1052 41 is_stmt 0 view .LVU6855
 16562 09c9 4C016500 		addq	%r12, 0(%rbp)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16563              		.loc 1 1050 47 is_stmt 1 view .LVU6856
 16564 09cd 4C8D5D58 		leaq	88(%rbp), %r11
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16565              		.loc 1 1050 48 is_stmt 0 view .LVU6857
 16566 09d1 498D7501 		leaq	1(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16567              		.loc 1 1050 29 is_stmt 1 view .LVU6858
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16568              		.loc 1 1051 13 is_stmt 0 view .LVU6859
 16569 09d5 4C89F7   		movq	%r14, %rdi
 16570 09d8 4C891C24 		movq	%r11, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16571              		.loc 1 1051 13 is_stmt 1 view .LVU6860
 16572 09dc E8000000 		call	tune_benchmark
 16572      00
 16573              	.LVL1330:
1052:sieve_extend.c ****         }
GAS LISTING /tmp/ccmX4xFB.s 			page 468


 16574              		.loc 1 1052 13 view .LVU6861
1052:sieve_extend.c ****         }
 16575              		.loc 1 1052 41 is_stmt 0 view .LVU6862
 16576 09e1 488B3C24 		movq	(%rsp), %rdi
 16577 09e5 488D8DB0 		leaq	176(%rbp), %rcx
 16577      000000
 16578 09ec 4C0127   		addq	%r12, (%rdi)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16579              		.loc 1 1050 47 is_stmt 1 view .LVU6863
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16580              		.loc 1 1050 48 is_stmt 0 view .LVU6864
 16581 09ef 498D7502 		leaq	2(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16582              		.loc 1 1050 29 is_stmt 1 view .LVU6865
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16583              		.loc 1 1051 13 is_stmt 0 view .LVU6866
 16584 09f3 4C89F7   		movq	%r14, %rdi
 16585 09f6 48890C24 		movq	%rcx, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16586              		.loc 1 1051 13 is_stmt 1 view .LVU6867
 16587 09fa E8000000 		call	tune_benchmark
 16587      00
 16588              	.LVL1331:
1052:sieve_extend.c ****         }
 16589              		.loc 1 1052 13 view .LVU6868
1052:sieve_extend.c ****         }
 16590              		.loc 1 1052 41 is_stmt 0 view .LVU6869
 16591 09ff 488B3424 		movq	(%rsp), %rsi
 16592 0a03 4C8D8D08 		leaq	264(%rbp), %r9
 16592      010000
 16593 0a0a 4C0126   		addq	%r12, (%rsi)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16594              		.loc 1 1050 47 is_stmt 1 view .LVU6870
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16595              		.loc 1 1051 13 is_stmt 0 view .LVU6871
 16596 0a0d 4C89F7   		movq	%r14, %rdi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16597              		.loc 1 1050 48 view .LVU6872
 16598 0a10 498D7503 		leaq	3(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16599              		.loc 1 1050 29 is_stmt 1 view .LVU6873
 16600 0a14 4C890C24 		movq	%r9, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16601              		.loc 1 1051 13 view .LVU6874
 16602 0a18 E8000000 		call	tune_benchmark
 16602      00
 16603              	.LVL1332:
1052:sieve_extend.c ****         }
 16604              		.loc 1 1052 13 view .LVU6875
1052:sieve_extend.c ****         }
 16605              		.loc 1 1052 41 is_stmt 0 view .LVU6876
 16606 0a1d 488B1424 		movq	(%rsp), %rdx
 16607 0a21 488D8560 		leaq	352(%rbp), %rax
 16607      010000
 16608 0a28 4C0122   		addq	%r12, (%rdx)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16609              		.loc 1 1050 47 is_stmt 1 view .LVU6877
GAS LISTING /tmp/ccmX4xFB.s 			page 469


1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16610              		.loc 1 1050 48 is_stmt 0 view .LVU6878
 16611 0a2b 498D7504 		leaq	4(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16612              		.loc 1 1050 29 is_stmt 1 view .LVU6879
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16613              		.loc 1 1051 13 is_stmt 0 view .LVU6880
 16614 0a2f 4C89F7   		movq	%r14, %rdi
 16615 0a32 48890424 		movq	%rax, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16616              		.loc 1 1051 13 is_stmt 1 view .LVU6881
 16617 0a36 E8000000 		call	tune_benchmark
 16617      00
 16618              	.LVL1333:
1052:sieve_extend.c ****         }
 16619              		.loc 1 1052 13 view .LVU6882
1052:sieve_extend.c ****         }
 16620              		.loc 1 1052 41 is_stmt 0 view .LVU6883
 16621 0a3b 4C8B0424 		movq	(%rsp), %r8
 16622 0a3f 4C8D95B8 		leaq	440(%rbp), %r10
 16622      010000
 16623 0a46 4D0120   		addq	%r12, (%r8)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16624              		.loc 1 1050 47 is_stmt 1 view .LVU6884
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16625              		.loc 1 1050 48 is_stmt 0 view .LVU6885
 16626 0a49 498D7505 		leaq	5(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16627              		.loc 1 1050 29 is_stmt 1 view .LVU6886
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16628              		.loc 1 1051 13 is_stmt 0 view .LVU6887
 16629 0a4d 4C89F7   		movq	%r14, %rdi
 16630 0a50 4C891424 		movq	%r10, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16631              		.loc 1 1051 13 is_stmt 1 view .LVU6888
 16632 0a54 E8000000 		call	tune_benchmark
 16632      00
 16633              	.LVL1334:
1052:sieve_extend.c ****         }
 16634              		.loc 1 1052 13 view .LVU6889
1052:sieve_extend.c ****         }
 16635              		.loc 1 1052 41 is_stmt 0 view .LVU6890
 16636 0a59 4C8B1C24 		movq	(%rsp), %r11
 16637 0a5d 488DBD10 		leaq	528(%rbp), %rdi
 16637      020000
 16638 0a64 4D0123   		addq	%r12, (%r11)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16639              		.loc 1 1050 47 is_stmt 1 view .LVU6891
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16640              		.loc 1 1050 48 is_stmt 0 view .LVU6892
 16641 0a67 498D7506 		leaq	6(%r13), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16642              		.loc 1 1050 29 is_stmt 1 view .LVU6893
 16643 0a6b 48893C24 		movq	%rdi, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16644              		.loc 1 1051 13 view .LVU6894
 16645 0a6f 4C89F7   		movq	%r14, %rdi
GAS LISTING /tmp/ccmX4xFB.s 			page 470


 16646 0a72 E8000000 		call	tune_benchmark
 16646      00
 16647              	.LVL1335:
1052:sieve_extend.c ****         }
 16648              		.loc 1 1052 13 view .LVU6895
1052:sieve_extend.c ****         }
 16649              		.loc 1 1052 41 is_stmt 0 view .LVU6896
 16650 0a77 488B0C24 		movq	(%rsp), %rcx
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16651              		.loc 1 1050 48 view .LVU6897
 16652 0a7b 498D7507 		leaq	7(%r13), %rsi
1052:sieve_extend.c ****         }
 16653              		.loc 1 1052 41 view .LVU6898
 16654 0a7f 4C0121   		addq	%r12, (%rcx)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16655              		.loc 1 1050 47 is_stmt 1 view .LVU6899
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16656              		.loc 1 1050 29 view .LVU6900
 16657 0a82 4C8D8D68 		leaq	616(%rbp), %r9
 16657      020000
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16658              		.loc 1 1051 13 is_stmt 0 view .LVU6901
 16659 0a89 4C89F7   		movq	%r14, %rdi
 16660 0a8c 4C890C24 		movq	%r9, (%rsp)
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16661              		.loc 1 1051 13 is_stmt 1 view .LVU6902
 16662 0a90 E8000000 		call	tune_benchmark
 16662      00
 16663              	.LVL1336:
1052:sieve_extend.c ****         }
 16664              		.loc 1 1052 13 view .LVU6903
1052:sieve_extend.c ****         }
 16665              		.loc 1 1052 41 is_stmt 0 view .LVU6904
 16666 0a95 488B3424 		movq	(%rsp), %rsi
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16667              		.loc 1 1050 48 view .LVU6905
 16668 0a99 4983C508 		addq	$8, %r13
1052:sieve_extend.c ****         }
 16669              		.loc 1 1052 41 view .LVU6906
 16670 0a9d 4C0126   		addq	%r12, (%rsi)
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16671              		.loc 1 1050 47 is_stmt 1 view .LVU6907
 16672              	.LVL1337:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16673              		.loc 1 1050 29 view .LVU6908
 16674 0aa0 4881C5C0 		addq	$704, %rbp
 16674      020000
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16675              		.loc 1 1050 9 is_stmt 0 view .LVU6909
 16676 0aa7 4D39EF   		cmpq	%r13, %r15
 16677 0aaa 0F850EFF 		jne	.L1837
 16677      FFFF
 16678 0ab0 E9EFFDFF 		jmp	.L1840
 16678      FF
 16679              	.LVL1338:
 16680              	.L1836:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccmX4xFB.s 			page 471


 16681              		.loc 1 1050 9 view .LVU6910
 16682              	.LBE1076:
1031:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 16683              		.loc 1 1031 13 is_stmt 1 view .LVU6911
1032:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 16684              		.loc 1 1032 13 view .LVU6912
 16685              	.LBB1077:
 16686              	.LBI1077:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16687              		.loc 3 105 1 view .LVU6913
 16688              	.LBB1078:
 16689              		.loc 3 107 3 view .LVU6914
 16690              		.loc 3 107 10 is_stmt 0 view .LVU6915
 16691 0ab5 C4C17B10 		vmovsd	72(%r14), %xmm0
 16691      4648
 16692 0abb 498B4E08 		movq	8(%r14), %rcx
 16693 0abf 41FF7630 		pushq	48(%r14)
 16694              		.cfi_def_cfa_offset 248
 16695 0ac3 C4C17B10 		vmovsd	80(%r14), %xmm2
 16695      5650
 16696 0ac9 C4C17B10 		vmovsd	56(%r14), %xmm1
 16696      4E38
 16697 0acf 41FF7640 		pushq	64(%r14)
 16698              		.cfi_def_cfa_offset 256
 16699 0ad3 4889DA   		movq	%rbx, %rdx
 16700 0ad6 488D3500 		leaq	.LC50(%rip), %rsi
 16700      000000
 16701 0add 41FF7628 		pushq	40(%r14)
 16702              		.cfi_def_cfa_offset 264
 16703 0ae1 BF010000 		movl	$1, %edi
 16703      00
 16704 0ae6 B8030000 		movl	$3, %eax
 16704      00
 16705 0aeb 41FF7620 		pushq	32(%r14)
 16706              		.cfi_def_cfa_offset 272
 16707 0aef 4D8B4E18 		movq	24(%r14), %r9
 16708 0af3 4D8B4610 		movq	16(%r14), %r8
 16709 0af7 E8000000 		call	__printf_chk@PLT
 16709      00
 16710              	.LVL1339:
 16711              		.loc 3 107 10 view .LVU6916
 16712              	.LBE1078:
 16713              	.LBE1077:
1037:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 16714              		.loc 1 1037 13 is_stmt 1 view .LVU6917
1037:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 16715              		.loc 1 1037 16 is_stmt 0 view .LVU6918
 16716 0afc 4883C420 		addq	$32, %rsp
 16717              		.cfi_def_cfa_offset 240
 16718 0b00 837C2450 		cmpl	$2, 80(%rsp)
 16718      02
 16719 0b05 0F84C8FD 		je	.L1838
 16719      FFFF
 16720 0b0b 498D6E08 		leaq	8(%r14), %rbp
 16721              	.LBB1079:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16722              		.loc 1 1038 32 view .LVU6919
GAS LISTING /tmp/ccmX4xFB.s 			page 472


 16723 0b0f 4531ED   		xorl	%r13d, %r13d
 16724              	.L1839:
 16725              	.LVL1340:
1039:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 16726              		.loc 1 1039 21 is_stmt 1 view .LVU6920
 16727              	.LBB1071:
 16728              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16729              		.loc 3 105 1 view .LVU6921
 16730              	.LBB1072:
 16731              		.loc 3 107 3 view .LVU6922
 16732              		.loc 3 107 10 is_stmt 0 view .LVU6923
 16733 0b12 C5FB1045 		vmovsd	64(%rbp), %xmm0
 16733      40
 16734 0b17 488B4D08 		movq	8(%rbp), %rcx
 16735 0b1b 56       		pushq	%rsi
 16736              		.cfi_def_cfa_offset 248
 16737 0b1c BF010000 		movl	$1, %edi
 16737      00
 16738 0b21 488D3500 		leaq	.LC47(%rip), %rsi
 16738      000000
 16739 0b28 FF7528   		pushq	40(%rbp)
 16740              		.cfi_def_cfa_offset 256
 16741 0b2b C5FB1055 		vmovsd	72(%rbp), %xmm2
 16741      48
 16742 0b30 C5FB104D 		vmovsd	48(%rbp), %xmm1
 16742      30
 16743 0b35 FF7538   		pushq	56(%rbp)
 16744              		.cfi_def_cfa_offset 264
 16745 0b38 B8030000 		movl	$3, %eax
 16745      00
 16746              	.LBE1072:
 16747              	.LBE1071:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16748              		.loc 1 1038 118 view .LVU6924
 16749 0b3d 49FFC5   		incq	%r13
 16750              	.LVL1341:
 16751              	.LBB1074:
 16752              	.LBB1073:
 16753              		.loc 3 107 10 view .LVU6925
 16754 0b40 FF7520   		pushq	32(%rbp)
 16755              		.cfi_def_cfa_offset 272
 16756 0b43 4883C558 		addq	$88, %rbp
 16757 0b47 4C8B45B8 		movq	-72(%rbp), %r8
 16758 0b4b 4C8B4DC0 		movq	-64(%rbp), %r9
 16759 0b4f 488B55A8 		movq	-88(%rbp), %rdx
 16760 0b53 E8000000 		call	__printf_chk@PLT
 16760      00
 16761              	.LVL1342:
 16762              		.loc 3 107 10 view .LVU6926
 16763              	.LBE1073:
 16764              	.LBE1074:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16765              		.loc 1 1038 99 is_stmt 1 view .LVU6927
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16766              		.loc 1 1038 55 view .LVU6928
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
GAS LISTING /tmp/ccmX4xFB.s 			page 473


 16767              		.loc 1 1038 75 is_stmt 0 view .LVU6929
 16768 0b58 4883C420 		addq	$32, %rsp
 16769              		.cfi_def_cfa_offset 240
 16770 0b5c 41B80A00 		movl	$10, %r8d
 16770      0000
 16771 0b62 4983FF0A 		cmpq	$10, %r15
 16772 0b66 4D0F46C7 		cmovbe	%r15, %r8
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16773              		.loc 1 1038 17 view .LVU6930
 16774 0b6a 4D39C5   		cmpq	%r8, %r13
 16775 0b6d 72A3     		jb	.L1839
 16776 0b6f E95FFDFF 		jmp	.L1838
 16776      FF
 16777              	.LVL1343:
 16778              	.L1930:
1038:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16779              		.loc 1 1038 17 view .LVU6931
 16780              	.LBE1079:
 16781              	.LBE1050:
 16782              	.LBE1049:
 16783              	.LBE1048:
1140:sieve_extend.c ****     }
 16784              		.loc 1 1140 39 is_stmt 1 view .LVU6932
 16785              	.LBB1094:
 16786              	.LBI1094:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16787              		.loc 3 105 1 view .LVU6933
 16788              	.LBB1095:
 16789              		.loc 3 107 3 view .LVU6934
 16790              		.loc 3 107 10 is_stmt 0 view .LVU6935
 16791 0b74 488D3D00 		leaq	.LC44(%rip), %rdi
 16791      000000
 16792 0b7b E8000000 		call	puts@PLT
 16792      00
 16793              	.LVL1344:
 16794              		.loc 3 107 10 view .LVU6936
 16795              	.LBE1095:
 16796              	.LBE1094:
1143:sieve_extend.c ****     if (option_tunelevel) {
 16797              		.loc 1 1143 5 is_stmt 1 view .LVU6937
1144:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16798              		.loc 1 1144 5 view .LVU6938
1144:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16799              		.loc 1 1144 9 is_stmt 0 view .LVU6939
 16800 0b80 448B4424 		movl	108(%rsp), %r8d
 16800      6C
1143:sieve_extend.c ****     if (option_tunelevel) {
 16801              		.loc 1 1143 15 view .LVU6940
 16802 0b85 41BF00FC 		movl	$261120, %r15d
 16802      0300
 16803              	.LVL1345:
1144:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16804              		.loc 1 1144 8 view .LVU6941
 16805 0b8b 4585C0   		testl	%r8d, %r8d
 16806 0b8e 0F855A01 		jne	.L1937
 16806      0000
 16807              	.LVL1346:
GAS LISTING /tmp/ccmX4xFB.s 			page 474


 16808              	.L1819:
 16809              	.LBB1096:
1153:sieve_extend.c ****         counter_t passes = 0;
 16810              		.loc 1 1153 9 is_stmt 1 view .LVU6942
1153:sieve_extend.c ****         counter_t passes = 0;
 16811              		.loc 1 1153 12 is_stmt 0 view .LVU6943
 16812 0b94 837C2468 		cmpl	$0, 104(%rsp)
 16812      00
 16813 0b99 0F8EF1F7 		jle	.L1844
 16813      FFFF
1153:sieve_extend.c ****         counter_t passes = 0;
 16814              		.loc 1 1153 39 is_stmt 1 discriminator 1 view .LVU6944
 16815              	.LVL1347:
 16816              	.LBB1034:
 16817              	.LBI1034:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16818              		.loc 3 105 1 discriminator 1 view .LVU6945
 16819              	.LBB1035:
 16820              		.loc 3 107 3 discriminator 1 view .LVU6946
 16821              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6947
 16822 0b9f 4C8B0500 		movq	global_MEDIUMSTEP_FASTER(%rip), %r8
 16822      000000
 16823 0ba6 488B0D00 		movq	global_SMALLSTEP_FASTER(%rip), %rcx
 16823      000000
 16824 0bad 4C89FA   		movq	%r15, %rdx
 16825 0bb0 488D3500 		leaq	.LC52(%rip), %rsi
 16825      000000
 16826 0bb7 BF010000 		movl	$1, %edi
 16826      00
 16827 0bbc 31C0     		xorl	%eax, %eax
 16828 0bbe E8000000 		call	__printf_chk@PLT
 16828      00
 16829              	.LVL1348:
 16830 0bc3 E9C8F7FF 		jmp	.L1844
 16830      FF
 16831              	.LVL1349:
 16832              	.L1936:
 16833              		.loc 3 107 10 discriminator 1 view .LVU6948
 16834              	.LBE1035:
 16835              	.LBE1034:
 16836              	.LBE1096:
 16837              	.LBB1097:
 16838              	.LBB1091:
 16839              	.LBB1088:
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 16840              		.loc 1 1056 5 is_stmt 1 view .LVU6949
1057:sieve_extend.c ****         tuning_result_index = 0;
 16841              		.loc 1 1057 8 is_stmt 0 view .LVU6950
 16842 0bc8 837C2450 		cmpl	$0, 80(%rsp)
 16842      00
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 16843              		.loc 1 1056 24 view .LVU6951
 16844 0bcd 4D8B7E08 		movq	8(%r14), %r15
 16845              	.LVL1350:
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 16846              		.loc 1 1056 24 view .LVU6952
 16847 0bd1 498B6E20 		movq	32(%r14), %rbp
GAS LISTING /tmp/ccmX4xFB.s 			page 475


 16848 0bd5 4D8B6E28 		movq	40(%r14), %r13
1057:sieve_extend.c ****         tuning_result_index = 0;
 16849              		.loc 1 1057 5 is_stmt 1 view .LVU6953
1057:sieve_extend.c ****         tuning_result_index = 0;
 16850              		.loc 1 1057 8 is_stmt 0 view .LVU6954
 16851 0bd9 7E40     		jle	.L1842
1058:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 16852              		.loc 1 1058 9 is_stmt 1 view .LVU6955
 16853              	.LVL1351:
1059:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 16854              		.loc 1 1059 9 view .LVU6956
 16855              	.LBB1080:
 16856              	.LBI1080:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16857              		.loc 3 105 1 view .LVU6957
 16858              	.LBB1081:
 16859              		.loc 3 107 3 view .LVU6958
 16860              		.loc 3 107 10 is_stmt 0 view .LVU6959
 16861 0bdb 498B5610 		movq	16(%r14), %rdx
 16862 0bdf C4C17B10 		vmovsd	72(%r14), %xmm0
 16862      4648
 16863 0be5 498B4E18 		movq	24(%r14), %rcx
 16864 0be9 41FF7630 		pushq	48(%r14)
 16865              		.cfi_def_cfa_offset 248
 16866              	.LVL1352:
 16867              		.loc 3 107 10 view .LVU6960
 16868 0bed 4D89E9   		movq	%r13, %r9
 16869 0bf0 4989E8   		movq	%rbp, %r8
 16870 0bf3 41FF7640 		pushq	64(%r14)
 16871              		.cfi_def_cfa_offset 256
 16872 0bf7 488D3500 		leaq	.LC51(%rip), %rsi
 16872      000000
 16873 0bfe BF010000 		movl	$1, %edi
 16873      00
 16874 0c03 C4C17B10 		vmovsd	80(%r14), %xmm2
 16874      5650
 16875 0c09 C4C17B10 		vmovsd	56(%r14), %xmm1
 16875      4E38
 16876 0c0f B8030000 		movl	$3, %eax
 16876      00
 16877 0c14 E8000000 		call	__printf_chk@PLT
 16877      00
 16878              	.LVL1353:
 16879              		.loc 3 107 10 view .LVU6961
 16880 0c19 58       		popq	%rax
 16881              		.cfi_def_cfa_offset 248
 16882 0c1a 5A       		popq	%rdx
 16883              		.cfi_def_cfa_offset 240
 16884              	.LVL1354:
 16885              	.L1842:
 16886              		.loc 3 107 10 view .LVU6962
 16887              	.LBE1081:
 16888              	.LBE1080:
1066:sieve_extend.c ****     return best_result;
 16889              		.loc 1 1066 5 is_stmt 1 view .LVU6963
 16890 0c1b 4C89F7   		movq	%r14, %rdi
 16891 0c1e E8000000 		call	free@PLT
GAS LISTING /tmp/ccmX4xFB.s 			page 476


 16891      00
 16892              	.LVL1355:
1067:sieve_extend.c **** }
 16893              		.loc 1 1067 5 view .LVU6964
1067:sieve_extend.c **** }
 16894              		.loc 1 1067 5 is_stmt 0 view .LVU6965
 16895              	.LBE1088:
 16896              	.LBE1091:
1146:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16897              		.loc 1 1146 9 is_stmt 1 view .LVU6966
1146:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16898              		.loc 1 1146 33 is_stmt 0 view .LVU6967
 16899 0c23 48892D00 		movq	%rbp, global_SMALLSTEP_FASTER(%rip)
 16899      000000
1147:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16900              		.loc 1 1147 9 is_stmt 1 view .LVU6968
1147:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16901              		.loc 1 1147 34 is_stmt 0 view .LVU6969
 16902 0c2a 4C892D00 		movq	%r13, global_MEDIUMSTEP_FASTER(%rip)
 16902      000000
1148:sieve_extend.c ****     }
 16903              		.loc 1 1148 9 is_stmt 1 view .LVU6970
 16904              	.LVL1356:
1148:sieve_extend.c ****     }
 16905              		.loc 1 1148 9 is_stmt 0 view .LVU6971
 16906              	.LBE1097:
1151:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 16907              		.loc 1 1151 5 is_stmt 1 view .LVU6972
1152:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16908              		.loc 1 1152 5 view .LVU6973
1152:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16909              		.loc 1 1152 8 is_stmt 0 view .LVU6974
 16910 0c31 4D85FF   		testq	%r15, %r15
 16911 0c34 0F84A7F8 		je	.L1843
 16911      FFFF
 16912 0c3a E955FFFF 		jmp	.L1819
 16912      FF
 16913              	.LVL1357:
 16914              	.L1852:
1152:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16915              		.loc 1 1152 8 view .LVU6975
 16916 0c3f 488D3D00 		leaq	CSWTCH.109(%rip), %rdi
 16916      000000
 16917 0c46 4C8D0D00 		leaq	CSWTCH.110(%rip), %r9
 16917      000000
 16918 0c4d 4A8B0CC7 		movq	(%rdi,%r8,8), %rcx
 16919 0c51 4F8B2CC1 		movq	(%r9,%r8,8), %r13
 16920 0c55 488D1D00 		leaq	CSWTCH.111(%rip), %rbx
 16920      000000
 16921 0c5c C4A17B10 		vmovsd	(%rbx,%r8,8), %xmm7
 16921      3CC3
 16922 0c62 48894C24 		movq	%rcx, 88(%rsp)
 16922      58
 16923 0c67 4C896C24 		movq	%r13, 56(%rsp)
 16923      38
 16924              	.LBB1098:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/ccmX4xFB.s 			page 477


 16925              		.loc 1 1079 14 view .LVU6976
 16926 0c6c 48C74424 		movq	$4, 48(%rsp)
 16926      30040000 
 16926      00
 16927 0c75 C5FB117C 		vmovsd	%xmm7, 64(%rsp)
 16927      2440
 16928              	.L1820:
 16929              	.LVL1358:
1079:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16930              		.loc 1 1079 14 view .LVU6977
 16931              	.LBE1098:
 16932              	.LBB1099:
 16933              	.LBB1092:
 16934              	.LBB1089:
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16935              		.loc 1 977 5 is_stmt 1 view .LVU6978
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16936              		.loc 1 977 8 is_stmt 0 view .LVU6979
 16937 0c7b 448B7424 		movl	80(%rsp), %r14d
 16937      50
 16938              	.LVL1359:
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16939              		.loc 1 977 8 view .LVU6980
 16940 0c80 4585F6   		testl	%r14d, %r14d
 16941 0c83 0F8EB2F9 		jle	.L1822
 16941      FFFF
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16942              		.loc 1 977 35 is_stmt 1 view .LVU6981
 16943              	.LVL1360:
 16944              	.LBB1082:
 16945              	.LBI1082:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16946              		.loc 3 105 1 view .LVU6982
 16947              	.LBB1083:
 16948              		.loc 3 107 3 view .LVU6983
 16949              		.loc 3 107 10 is_stmt 0 view .LVU6984
 16950 0c89 31C0     		xorl	%eax, %eax
 16951 0c8b 488D3500 		leaq	.LC45(%rip), %rsi
 16951      000000
 16952 0c92 BF010000 		movl	$1, %edi
 16952      00
 16953              	.LBE1083:
 16954              	.LBE1082:
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16955              		.loc 1 977 59 view .LVU6985
 16956 0c97 4489F3   		movl	%r14d, %ebx
 16957              	.LBB1085:
 16958              	.LBB1084:
 16959              		.loc 3 107 10 view .LVU6986
 16960 0c9a E8000000 		call	__printf_chk@PLT
 16960      00
 16961              	.LVL1361:
 16962              		.loc 3 107 10 view .LVU6987
 16963              	.LBE1084:
 16964              	.LBE1085:
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16965              		.loc 1 977 56 is_stmt 1 view .LVU6988
GAS LISTING /tmp/ccmX4xFB.s 			page 478


 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16966              		.loc 1 977 59 is_stmt 0 view .LVU6989
 16967 0c9f FFCB     		decl	%ebx
 16968 0ca1 0F8494F9 		je	.L1822
 16968      FFFF
 977:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16969              		.loc 1 977 86 is_stmt 1 view .LVU6990
 16970              	.LVL1362:
 16971              	.LBB1086:
 16972              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16973              		.loc 3 105 1 view .LVU6991
 16974              	.LBB1087:
 16975              		.loc 3 107 3 view .LVU6992
 16976              		.loc 3 107 10 is_stmt 0 view .LVU6993
 16977 0ca7 BF0A0000 		movl	$10, %edi
 16977      00
 16978 0cac E8000000 		call	putchar@PLT
 16978      00
 16979              	.LVL1363:
 16980 0cb1 E985F9FF 		jmp	.L1822
 16980      FF
 16981              	.LVL1364:
 16982              	.L1849:
 16983              		.loc 3 107 10 view .LVU6994
 16984              	.LBE1087:
 16985              	.LBE1086:
 16986              	.LBE1089:
 16987              	.LBE1092:
 16988              	.LBE1099:
 16989              	.LBB1100:
1167:sieve_extend.c ****     }
 16990              		.loc 1 1167 39 discriminator 1 view .LVU6995
 16991 0cb6 4889D0   		movq	%rdx, %rax
 16992 0cb9 48D1E8   		shrq	%rax
 16993 0cbc 83E201   		andl	$1, %edx
 16994 0cbf 4809D0   		orq	%rdx, %rax
 16995 0cc2 C4E1FB2A 		vcvtsi2sdq	%rax, %xmm0, %xmm5
 16995      E8
 16996 0cc7 C55358C5 		vaddsd	%xmm5, %xmm5, %xmm8
 16997 0ccb E902F9FF 		jmp	.L1850
 16997      FF
 16998              	.L1847:
1167:sieve_extend.c ****     }
 16999              		.loc 1 1167 39 discriminator 1 view .LVU6996
 17000 0cd0 4C89F1   		movq	%r14, %rcx
 17001 0cd3 4D89F1   		movq	%r14, %r9
 17002 0cd6 48D1E9   		shrq	%rcx
 17003 0cd9 4183E101 		andl	$1, %r9d
 17004 0cdd 4C09C9   		orq	%r9, %rcx
 17005 0ce0 C4E1FB2A 		vcvtsi2sdq	%rcx, %xmm0, %xmm4
 17005      E1
 17006 0ce5 C5DB58D4 		vaddsd	%xmm4, %xmm4, %xmm2
 17007 0ce9 E9CEF8FF 		jmp	.L1848
 17007      FF
 17008              	.LVL1365:
 17009              	.L1937:
GAS LISTING /tmp/ccmX4xFB.s 			page 479


1167:sieve_extend.c ****     }
 17010              		.loc 1 1167 39 discriminator 1 view .LVU6997
 17011              	.LBE1100:
 17012              	.LBB1101:
1145:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 17013              		.loc 1 1145 9 is_stmt 1 view .LVU6998
1145:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 17014              		.loc 1 1145 44 is_stmt 0 view .LVU6999
 17015 0cee 8B542468 		movl	104(%rsp), %edx
 17016 0cf2 488B7424 		movq	112(%rsp), %rsi
 17016      70
 17017 0cf7 41FFC8   		decl	%r8d
 17018 0cfa 89542450 		movl	%edx, 80(%rsp)
 17019 0cfe 48897424 		movq	%rsi, 72(%rsp)
 17019      48
 17020              	.LVL1366:
 17021              	.LBB1093:
 939:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17022              		.loc 1 939 27 is_stmt 1 view .LVU7000
 17023              	.LBB1090:
 940:sieve_extend.c **** 
 17024              		.loc 1 940 5 view .LVU7001
 942:sieve_extend.c ****     best_blocksize_bits = 0;
 17025              		.loc 1 942 5 view .LVU7002
 943:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 17026              		.loc 1 943 5 view .LVU7003
 944:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 17027              		.loc 1 944 5 view .LVU7004
 945:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 17028              		.loc 1 945 5 view .LVU7005
 946:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 17029              		.loc 1 946 5 view .LVU7006
 947:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 17030              		.loc 1 947 5 view .LVU7007
 948:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 17031              		.loc 1 948 5 view .LVU7008
 949:sieve_extend.c ****     double sample_duration = default_sample_duration;
 17032              		.loc 1 949 5 view .LVU7009
 950:sieve_extend.c **** 
 17033              		.loc 1 950 5 view .LVU7010
 953:sieve_extend.c ****         case 1:
 17034              		.loc 1 953 5 view .LVU7011
 17035 0d03 4183F802 		cmpl	$2, %r8d
 17036 0d07 0F8632FF 		jbe	.L1852
 17036      FFFF
 17037 0d0d C5FB1005 		vmovsd	.LC22(%rip), %xmm0
 17037      00000000 
 17038 0d15 48C74424 		movq	$5, 48(%rsp)
 17038      30050000 
 17038      00
 17039 0d1e 48C74424 		movq	$128, 56(%rsp)
 17039      38800000 
 17039      00
 17040 0d27 48C74424 		movq	$4, 88(%rsp)
 17040      58040000 
 17040      00
 17041 0d30 C5FB1144 		vmovsd	%xmm0, 64(%rsp)
GAS LISTING /tmp/ccmX4xFB.s 			page 480


 17041      2440
 17042 0d36 E940FFFF 		jmp	.L1820
 17042      FF
 17043              	.LVL1367:
 17044              	.L1923:
 953:sieve_extend.c ****         case 1:
 17045              		.loc 1 953 5 is_stmt 0 view .LVU7012
 17046              	.LBE1090:
 17047              	.LBE1093:
 17048              	.LBE1101:
 17049              	.LBB1102:
1082:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17050              		.loc 1 1082 34 is_stmt 1 discriminator 1 view .LVU7013
 17051              	.LBB973:
 17052              	.LBI973:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17053              		.loc 3 98 1 discriminator 1 view .LVU7014
 17054              	.LBB974:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17055              		.loc 3 100 3 discriminator 1 view .LVU7015
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17056              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7016
 17057 0d3b 488B0D00 		movq	stderr(%rip), %rcx
 17057      000000
 17058 0d42 BA1B0000 		movl	$27, %edx
 17058      00
 17059 0d47 BE010000 		movl	$1, %esi
 17059      00
 17060 0d4c 488D3D00 		leaq	.LC26(%rip), %rdi
 17060      000000
 17061 0d53 E8000000 		call	fwrite@PLT
 17061      00
 17062              	.LVL1368:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17063              		.loc 3 100 10 discriminator 1 view .LVU7017
 17064              	.LBE974:
 17065              	.LBE973:
1082:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17066              		.loc 1 1082 83 is_stmt 1 discriminator 1 view .LVU7018
 17067 0d58 E9F3F7FF 		jmp	.L1921
 17067      FF
 17068              	.L1803:
1092:sieve_extend.c ****             }
 17069              		.loc 1 1092 17 view .LVU7019
 17070              	.LVL1369:
 17071              	.LBB975:
 17072              	.LBI970:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17073              		.loc 3 98 1 view .LVU7020
 17074              	.LBB972:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17075              		.loc 3 100 3 view .LVU7021
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17076              		.loc 3 100 10 is_stmt 0 view .LVU7022
 17077 0d5d 498B0F   		movq	(%r15), %rcx
 17078 0d60 488D1500 		leaq	.LC33(%rip), %rdx
 17078      000000
GAS LISTING /tmp/ccmX4xFB.s 			page 481


 17079 0d67 E9D1F7FF 		jmp	.L1920
 17079      FF
 17080              	.LVL1370:
 17081              	.L1807:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17082              		.loc 3 100 10 view .LVU7023
 17083              	.LBE972:
 17084              	.LBE975:
1099:sieve_extend.c ****             }
 17085              		.loc 1 1099 17 is_stmt 1 view .LVU7024
 17086              	.LBB976:
 17087              	.LBI976:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17088              		.loc 3 98 1 view .LVU7025
 17089              	.LBB977:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17090              		.loc 3 100 3 view .LVU7026
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17091              		.loc 3 100 10 is_stmt 0 view .LVU7027
 17092 0d6c 498B0F   		movq	(%r15), %rcx
 17093 0d6f 488D1500 		leaq	.LC38(%rip), %rdx
 17093      000000
 17094 0d76 E9C2F7FF 		jmp	.L1920
 17094      FF
 17095              	.LVL1371:
 17096              	.L1926:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17097              		.loc 3 100 10 view .LVU7028
 17098              	.LBE977:
 17099              	.LBE976:
1090:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17100              		.loc 1 1090 34 is_stmt 1 discriminator 1 view .LVU7029
 17101              	.LBB978:
 17102              	.LBI978:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17103              		.loc 3 98 1 discriminator 1 view .LVU7030
 17104              	.LBB979:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17105              		.loc 3 100 3 discriminator 1 view .LVU7031
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17106              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7032
 17107 0d7b 488B0D00 		movq	stderr(%rip), %rcx
 17107      000000
 17108 0d82 488D3D00 		leaq	.LC32(%rip), %rdi
 17108      000000
 17109 0d89 BA180000 		movl	$24, %edx
 17109      00
 17110 0d8e BE010000 		movl	$1, %esi
 17110      00
 17111 0d93 E8000000 		call	fwrite@PLT
 17111      00
 17112              	.LVL1372:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17113              		.loc 3 100 10 discriminator 1 view .LVU7033
 17114              	.LBE979:
 17115              	.LBE978:
1090:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
GAS LISTING /tmp/ccmX4xFB.s 			page 482


 17116              		.loc 1 1090 80 is_stmt 1 discriminator 1 view .LVU7034
 17117 0d98 498B3C24 		movq	(%r12), %rdi
 17118 0d9c E8000000 		call	usage
 17118      00
 17119              	.LVL1373:
 17120              	.L1934:
1090:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17121              		.loc 1 1090 80 is_stmt 0 discriminator 1 view .LVU7035
 17122              	.LBE1102:
 17123              		.loc 1 1177 1 view .LVU7036
 17124 0da1 E8000000 		call	__stack_chk_fail@PLT
 17124      00
 17125              	.LVL1374:
 17126              	.L1929:
 17127              	.LBB1103:
1097:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17128              		.loc 1 1097 34 is_stmt 1 discriminator 1 view .LVU7037
 17129              	.LBB980:
 17130              	.LBI980:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17131              		.loc 3 98 1 discriminator 1 view .LVU7038
 17132              	.LBB981:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17133              		.loc 3 100 3 discriminator 1 view .LVU7039
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17134              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7040
 17135 0da6 488B0D00 		movq	stderr(%rip), %rcx
 17135      000000
 17136 0dad 488D3D00 		leaq	.LC36(%rip), %rdi
 17136      000000
 17137 0db4 BA1A0000 		movl	$26, %edx
 17137      00
 17138 0db9 BE010000 		movl	$1, %esi
 17138      00
 17139 0dbe E8000000 		call	fwrite@PLT
 17139      00
 17140              	.LVL1375:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17141              		.loc 3 100 10 discriminator 1 view .LVU7041
 17142              	.LBE981:
 17143              	.LBE980:
1097:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17144              		.loc 1 1097 82 is_stmt 1 discriminator 1 view .LVU7042
 17145 0dc3 498B3C24 		movq	(%r12), %rdi
 17146 0dc7 E8000000 		call	usage
 17146      00
 17147              	.LVL1376:
 17148              	.LBE1103:
 17149              		.cfi_endproc
 17150              	.LFE83:
 17152              		.section	.rodata
 17153              		.align 16
 17156              	CSWTCH.111:
 17157 0000 9A999999 		.long	2576980378
 17158 0004 9999B93F 		.long	1069128089
 17159 0008 9A999999 		.long	2576980378
 17160 000c 9999C93F 		.long	1070176665
GAS LISTING /tmp/ccmX4xFB.s 			page 483


 17161 0010 9A999999 		.long	2576980378
 17162 0014 9999D93F 		.long	1071225241
 17163 0018 00000000 		.align 16
 17163      00000000 
 17166              	CSWTCH.110:
 17167 0020 00080000 		.quad	2048
 17167      00000000 
 17168 0028 00040000 		.quad	1024
 17168      00000000 
 17169 0030 40000000 		.quad	64
 17169      00000000 
 17170 0038 00000000 		.align 16
 17170      00000000 
 17173              	CSWTCH.109:
 17174 0040 10000000 		.quad	16
 17174      00000000 
 17175 0048 08000000 		.quad	8
 17175      00000000 
 17176 0050 04000000 		.quad	4
 17176      00000000 
 17177              		.globl	debug_hitpoint
 17178              		.bss
 17179              		.align 32
 17182              	debug_hitpoint:
 17183 0000 00000000 		.zero	40
 17183      00000000 
 17183      00000000 
 17183      00000000 
 17183      00000000 
 17184              		.globl	global_MEDIUMSTEP_FASTER
 17185              		.data
 17186              		.align 8
 17189              	global_MEDIUMSTEP_FASTER:
 17190 0000 40000000 		.quad	64
 17190      00000000 
 17191              		.globl	global_SMALLSTEP_FASTER
 17192              		.align 8
 17195              	global_SMALLSTEP_FASTER:
 17196 0008 10000000 		.quad	16
 17196      00000000 
 17197              		.section	.rodata.cst8,"aM",@progbits,8
 17198              		.align 8
 17199              	.LC3:
 17200 0000 00000000 		.long	0
 17201 0004 0000F87F 		.long	2146959360
 17202              		.align 8
 17203              	.LC4:
 17204 0008 95D626E8 		.long	3894859413
 17205 000c 0B2E113E 		.long	1041313291
 17206              		.align 8
 17207              	.LC22:
 17208 0010 9A999999 		.long	2576980378
 17209 0014 9999B93F 		.long	1069128089
 17210              		.align 8
 17211              	.LC53:
 17212 0018 00000000 		.long	0
 17213 001c 00001440 		.long	1075052544
GAS LISTING /tmp/ccmX4xFB.s 			page 484


 17214              		.text
 17215              	.Letext0:
 17216              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 17217              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 17218              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 17219              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 17220              		.file 8 "/usr/include/stdio.h"
 17221              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 17222              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 17223              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 17224              		.file 12 "/usr/include/stdint.h"
 17225              		.file 13 "/usr/include/time.h"
 17226              		.file 14 "/usr/include/math.h"
 17227              		.file 15 "/usr/include/stdlib.h"
 17228              		.file 16 "<built-in>"
 43645              		.section	.note.gnu.property,"a"
 43646              		.align 8
 43647 0000 04000000 		.long	 1f - 0f
 43648 0004 10000000 		.long	 4f - 1f
 43649 0008 05000000 		.long	 5
 43650              	0:
 43651 000c 474E5500 		.string	 "GNU"
 43652              	1:
 43653              		.align 8
 43654 0010 020000C0 		.long	 0xc0000002
 43655 0014 04000000 		.long	 3f - 2f
 43656              	2:
 43657 0018 03000000 		.long	 0x3
 43658              	3:
 43659 001c 00000000 		.align 8
 43660              	4:
GAS LISTING /tmp/ccmX4xFB.s 			page 485


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccmX4xFB.s:6      .text:0000000000000000 extendSieve_smallSize
     /tmp/ccmX4xFB.s:632    .text:00000000000003c0 extendSieve_shiftright_ivdep
     /tmp/ccmX4xFB.s:2072   .text:0000000000001010 compare_tuning_result
     /tmp/ccmX4xFB.s:2096   .text:0000000000001030 extendSieve_aligned
     /tmp/ccmX4xFB.s:2806   .text:0000000000001530 extendSieve_shiftleft
     /tmp/ccmX4xFB.s:5284   .text:0000000000002700 show_primes.isra.0
     /tmp/ccmX4xFB.s:5626   .text:00000000000028a0 sieve
     /tmp/ccmX4xFB.s:17195  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccmX4xFB.s:17189  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccmX4xFB.s:12424  .text:0000000000004d40 tune_benchmark
     /tmp/ccmX4xFB.s:12612  .text:0000000000004e80 shiftvec
     /tmp/ccmX4xFB.s:13674  .text:0000000000005220 validatePrimeCount
     /tmp/ccmX4xFB.s:14755  .text:00000000000059b0 usage
     /tmp/ccmX4xFB.s:15070  .text.startup:0000000000000000 main
     /tmp/ccmX4xFB.s:17173  .rodata:0000000000000040 CSWTCH.109
     /tmp/ccmX4xFB.s:17166  .rodata:0000000000000020 CSWTCH.110
     /tmp/ccmX4xFB.s:17156  .rodata:0000000000000000 CSWTCH.111
     /tmp/ccmX4xFB.s:17182  .bss:0000000000000000 debug_hitpoint
     /tmp/ccmX4xFB.s:5279   .rodata.str1.1:0000000000000006 .LC1
     /tmp/ccmX4xFB.s:5277   .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccmX4xFB.s:17199  .rodata.cst8:0000000000000000 .LC3
     /tmp/ccmX4xFB.s:17203  .rodata.cst8:0000000000000008 .LC4
     /tmp/ccmX4xFB.s:13655  .rodata.str1.8:0000000000000000 .LC5
     /tmp/ccmX4xFB.s:13661  .rodata.str1.1:0000000000000023 .LC7
     /tmp/ccmX4xFB.s:13665  .rodata.str1.8:00000000000000c0 .LC8
     /tmp/ccmX4xFB.s:13658  .rodata.str1.8:0000000000000058 .LC6
     /tmp/ccmX4xFB.s:13668  .rodata.str1.8:00000000000000f8 .LC9
     /tmp/ccmX4xFB.s:14715  .rodata.str1.8:0000000000000148 .LC10
     /tmp/ccmX4xFB.s:14718  .rodata.str1.1:0000000000000031 .LC11
     /tmp/ccmX4xFB.s:14722  .rodata.str1.8:0000000000000168 .LC12
     /tmp/ccmX4xFB.s:14725  .rodata.str1.8:00000000000001a8 .LC13
     /tmp/ccmX4xFB.s:14728  .rodata.str1.8:00000000000001d8 .LC14
     /tmp/ccmX4xFB.s:14731  .rodata.str1.8:0000000000000220 .LC15
     /tmp/ccmX4xFB.s:14734  .rodata.str1.8:0000000000000250 .LC16
     /tmp/ccmX4xFB.s:14737  .rodata.str1.8:0000000000000290 .LC17
     /tmp/ccmX4xFB.s:14740  .rodata.str1.8:00000000000002d0 .LC18
     /tmp/ccmX4xFB.s:14743  .rodata.str1.8:0000000000000320 .LC19
     /tmp/ccmX4xFB.s:14746  .rodata.str1.8:0000000000000348 .LC20
     /tmp/ccmX4xFB.s:14749  .rodata.str1.8:0000000000000378 .LC21
     /tmp/ccmX4xFB.s:14981  .rodata.str1.1:000000000000004a .LC24
     /tmp/ccmX4xFB.s:14983  .rodata.str1.1:0000000000000051 .LC25
     /tmp/ccmX4xFB.s:14987  .rodata.str1.1:0000000000000077 .LC27
     /tmp/ccmX4xFB.s:14994  .rodata.str1.1:000000000000007a .LC29
     /tmp/ccmX4xFB.s:14996  .rodata.str1.1:0000000000000093 .LC30
     /tmp/ccmX4xFB.s:14998  .rodata.str1.1:000000000000009b .LC31
     /tmp/ccmX4xFB.s:15007  .rodata.str1.1:00000000000000bb .LC34
     /tmp/ccmX4xFB.s:15026  .rodata.str1.1:000000000000013a .LC42
     /tmp/ccmX4xFB.s:15024  .rodata.str1.1:0000000000000121 .LC41
     /tmp/ccmX4xFB.s:15009  .rodata.str1.1:00000000000000d1 .LC35
     /tmp/ccmX4xFB.s:15013  .rodata.str1.1:00000000000000f3 .LC37
     /tmp/ccmX4xFB.s:15020  .rodata.str1.1:00000000000000f7 .LC39
     /tmp/ccmX4xFB.s:15022  .rodata.str1.1:0000000000000110 .LC40
     /tmp/ccmX4xFB.s:15028  .rodata.str1.1:000000000000014a .LC43
     /tmp/ccmX4xFB.s:17211  .rodata.cst8:0000000000000018 .LC53
     /tmp/ccmX4xFB.s:15058  .rodata.str1.8:00000000000006c8 .LC54
GAS LISTING /tmp/ccmX4xFB.s 			page 486


     /tmp/ccmX4xFB.s:14979  .rodata.str1.1:000000000000003b .LC23
     /tmp/ccmX4xFB.s:14991  .rodata.str1.8:00000000000003b0 .LC28
     /tmp/ccmX4xFB.s:15064  .rodata.str1.1:000000000000017b .LC56
     /tmp/ccmX4xFB.s:15061  .rodata.str1.8:0000000000000710 .LC55
     /tmp/ccmX4xFB.s:17207  .rodata.cst8:0000000000000010 .LC22
     /tmp/ccmX4xFB.s:15039  .rodata.str1.8:00000000000004a8 .LC47
     /tmp/ccmX4xFB.s:15036  .rodata.str1.8:0000000000000420 .LC46
     /tmp/ccmX4xFB.s:15042  .rodata.str1.8:0000000000000530 .LC48
     /tmp/ccmX4xFB.s:15045  .rodata.str1.1:000000000000016e .LC49
     /tmp/ccmX4xFB.s:15049  .rodata.str1.8:0000000000000588 .LC50
     /tmp/ccmX4xFB.s:15030  .rodata.str1.1:0000000000000151 .LC44
     /tmp/ccmX4xFB.s:15055  .rodata.str1.8:0000000000000690 .LC52
     /tmp/ccmX4xFB.s:15052  .rodata.str1.8:0000000000000618 .LC51
     /tmp/ccmX4xFB.s:15032  .rodata.str1.1:0000000000000164 .LC45
     /tmp/ccmX4xFB.s:14985  .rodata.str1.1:000000000000005b .LC26
     /tmp/ccmX4xFB.s:15004  .rodata.str1.8:00000000000003d8 .LC33
     /tmp/ccmX4xFB.s:15017  .rodata.str1.8:00000000000003f8 .LC38
     /tmp/ccmX4xFB.s:15000  .rodata.str1.1:00000000000000a2 .LC32
     /tmp/ccmX4xFB.s:15011  .rodata.str1.1:00000000000000d8 .LC36

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
__stack_chk_fail
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
