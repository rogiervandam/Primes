GAS LISTING /tmp/ccG38KJh.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu -D_REENTRANT sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32
  20              	# --param l1-cache-line-size=64 --param l2-cache-size=12288 -mtune=skylake
  21              	# -malign-data=cacheline -masm=intel -mavx -g -Ofast -Wextra -Wall
  22              	# -Wno-unused-function -funroll-all-loops -fno-asynchronous-unwind-tables
  23              	# -fno-exceptions -fverbose-asm -fopenmp -fstack-protector-strong
  24              	# -Wformat-security -fstack-clash-protection -fcf-protection
  25              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  26              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  27              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  28              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  29              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  30              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  31              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  32              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  33              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  34              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  35              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  36              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  37              	# -finline-atomics -finline-functions -finline-functions-called-once
  38              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  39              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  40              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  41              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  42              	# -fira-share-save-slots -fira-share-spill-slots
  43              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  44              	# -fleading-underscore -flifetime-dse -floop-interchange
  45              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  46              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  47              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  48              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  49              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  50              	# -freg-struct-return -frename-registers -freorder-blocks
  51              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  52              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  53              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  54              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  55              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  56              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  57              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
GAS LISTING /tmp/ccG38KJh.s 			page 2


  58              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
  59              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  60              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  62              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  63              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  64              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  65              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  66              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  67              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  68              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  69              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  70              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  71              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  72              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  73              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  74              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  75              	# -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16 -mf16c -mfancy-math-387
  76              	# -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc -mhle -mlong-double-80
  77              	# -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mpush-args -mrdrnd
  78              	# -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3 -msse4 -msse4.1
  79              	# -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper -mxsave
  80              	# -mxsavec -mxsaveopt -mxsaves
  81              	
  82              		.text
  83              	.Ltext0:
  84              		.cfi_sections	.debug_frame
  85              		.p2align 4
  87              	continuePattern_smallSize:
  88              	.LVL0:
  89              	.LFB59:
  90              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // Sieve algorithm by Rogier van Dam - 2022
   2:sieve_extend.c **** // Find all primes up to <max int> using the Sieve of Eratosthenes (https://en.wikipedia.org/wiki/S
   3:sieve_extend.c **** 
   4:sieve_extend.c **** #include <stdio.h>
   5:sieve_extend.c **** #include <stdlib.h>
   6:sieve_extend.c **** #include <stdint.h>
   7:sieve_extend.c **** #include <time.h>
   8:sieve_extend.c **** #include <math.h>
   9:sieve_extend.c **** #include <string.h>
  10:sieve_extend.c **** #ifdef _OPENMP
  11:sieve_extend.c **** #include <omp.h>
  12:sieve_extend.c **** #endif
  13:sieve_extend.c **** 
  14:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  15:sieve_extend.c **** #define option_runonce 0
  16:sieve_extend.c **** #define debug if (option_runonce)
  17:sieve_extend.c **** #define verbose(level) if (option_verboselevel >= level)
  18:sieve_extend.c **** #define verbose_at(level) if (option_verboselevel == level)
  19:sieve_extend.c **** 
  20:sieve_extend.c **** // defaults
  21:sieve_extend.c **** #define default_sieve_limit 1000000
  22:sieve_extend.c **** #define default_blocksize (32*1024*8)
  23:sieve_extend.c **** #define default_max_time 5
  24:sieve_extend.c **** #define default_sample_duration 0.1
  25:sieve_extend.c **** #define default_sample_max 5
GAS LISTING /tmp/ccG38KJh.s 			page 3


  26:sieve_extend.c **** #define default_verbose_level 0
  27:sieve_extend.c **** #define default_tune_level 1
  28:sieve_extend.c **** #define default_check_level 1
  29:sieve_extend.c **** #define default_show_primes_on_error 100
  30:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  31:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  32:sieve_extend.c **** 
  33:sieve_extend.c **** // helper functions
  34:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  35:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  36:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  37:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  38:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  39:sieve_extend.c **** 
  40:sieve_extend.c **** // types
  41:sieve_extend.c **** #define bitword_t uint64_t
  42:sieve_extend.c **** #define TYPE uint64_t
  43:sieve_extend.c **** #define counter_t TYPE
  44:sieve_extend.c **** #define bitshift_t TYPE
  45:sieve_extend.c **** 
  46:sieve_extend.c **** // masks and mask helpers
  47:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  48:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  49:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  50:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  51:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  52:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  53:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  54:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  55:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  56:sieve_extend.c **** 
  57:sieve_extend.c **** // types (II) - calculated
  58:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  59:sieve_extend.c **** 
  60:sieve_extend.c **** // globals for tuning
  61:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  62:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  63:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  64:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  65:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 32;
  66:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  67:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  68:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  69:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  70:sieve_extend.c **** 
  71:sieve_extend.c **** // Patterns based on types
  72:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  73:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  74:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  75:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  76:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  77:sieve_extend.c **** 
  78:sieve_extend.c **** // helpder functions for word/vector indexing
  79:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  80:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  81:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  82:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
GAS LISTING /tmp/ccG38KJh.s 			page 4


  83:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  84:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  85:sieve_extend.c **** #define wordinvector(index) ((counter_t)(index) & (counter_t)VECTORMASK)
  86:sieve_extend.c **** 
  87:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  88:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  89:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  90:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  91:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  92:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  93:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  94:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  95:sieve_extend.c **** 
  96:sieve_extend.c **** struct sieve_t {
  97:sieve_extend.c ****     bitword_t* bitstorage;
  98:sieve_extend.c ****     counter_t  bits;
  99:sieve_extend.c ****     counter_t  size;
 100:sieve_extend.c **** };
 101:sieve_extend.c **** 
 102:sieve_extend.c **** //#include "debugtools.h"
 103:sieve_extend.c **** 
 104:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 105:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 106:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 107:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 108:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 109:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 110:sieve_extend.c ****     sieve->bits     = size >> 1;
 111:sieve_extend.c ****     sieve->size     = size;
 112:sieve_extend.c ****     return sieve;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 116:sieve_extend.c ****     free(sieve->bitstorage);
 117:sieve_extend.c ****     free(sieve);
 118:sieve_extend.c **** }
 119:sieve_extend.c **** 
 120:sieve_extend.c **** // search the next bit not set - for small expected distances
 121:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitstorage, register counter_t index) {
 122:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 124:sieve_extend.c **** }
 125:sieve_extend.c **** 
 126:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 127:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitstorage, register counter_t index) {
 128:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 129:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 131:sieve_extend.c ****    index += distance;
 132:sieve_extend.c ****    distance += index_bit;
 133:sieve_extend.c **** 
 134:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 135:sieve_extend.c ****        index_word++;
 136:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 137:sieve_extend.c ****        index += distance;
 138:sieve_extend.c ****    }
 139:sieve_extend.c **** 
GAS LISTING /tmp/ccG38KJh.s 			page 5


 140:sieve_extend.c ****    return index;
 141:sieve_extend.c **** }
 142:sieve_extend.c **** 
 143:sieve_extend.c **** // apply the same word mask at large ranges
 144:sieve_extend.c **** // manually unlooped - this here is where the main speed increase comes from
 145:sieve_extend.c **** // idea from PrimeRust/solution_1 by Michael Barber 
 146:sieve_extend.c **** static inline void applyMask_word(bitword_t* __restrict bitstorage, const counter_t step, const cou
 147:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 148:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 149:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 150:sieve_extend.c **** 
 151:sieve_extend.c ****    //#pragma GCC unroll 10
 152:sieve_extend.c ****    #pragma GCC ivdep
 153:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 159:sieve_extend.c ****    }
 160:sieve_extend.c **** 
 161:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(rang
 162:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 163:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 164:sieve_extend.c ****    }
 165:sieve_extend.c **** 
 166:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 167:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 168:sieve_extend.c ****    }
 169:sieve_extend.c **** }
 170:sieve_extend.c **** 
 171:sieve_extend.c **** // same as word mask, but at a vector level - uses the sse/avx extensions, hopefully
 172:sieve_extend.c **** static inline void applyMask_vector(bitvector_t* __restrict bitstorage, const counter_t step, const
 173:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 174:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 175:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 176:sieve_extend.c ****     
 177:sieve_extend.c ****     #pragma GCC ivdep
 178:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 183:sieve_extend.c ****     }
 184:sieve_extend.c ****     
 185:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(r
 186:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 187:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 188:sieve_extend.c ****     }
 189:sieve_extend.c **** }
 190:sieve_extend.c **** 
 191:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 192:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 193:sieve_extend.c **** // This is especially true for small steps over long ranges
 194:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 195:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitstorage, const counter_t range_start, 
 196:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
GAS LISTING /tmp/ccG38KJh.s 			page 6


 197:sieve_extend.c **** 
 198:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 199:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 200:sieve_extend.c **** 
 201:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 202:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 203:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 204:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 205:sieve_extend.c ****             bitstorage[index_word] |= mask;
 206:sieve_extend.c ****         }
 207:sieve_extend.c ****     }
 208:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 209:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 210:sieve_extend.c ****         
 211:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 212:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 213:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 214:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 215:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 216:sieve_extend.c ****         }
 217:sieve_extend.c ****     }
 218:sieve_extend.c **** }
 219:sieve_extend.c **** 
 220:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 221:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitstorage, const counter_t range_s
 222:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 223:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 224:sieve_extend.c **** 
 225:sieve_extend.c ****     #pragma GCC ivdep
 226:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 227:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 228:sieve_extend.c ****     }
 229:sieve_extend.c **** }
 230:sieve_extend.c **** 
 231:sieve_extend.c **** static inline void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_word, counter_t r
 232:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 233:sieve_extend.c **** 
 234:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 235:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 236:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 237:sieve_extend.c **** 
 238:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 239:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 240:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 241:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 242:sieve_extend.c ****             return;
 243:sieve_extend.c ****         }
 244:sieve_extend.c **** 
 245:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 246:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 247:sieve_extend.c ****     }
 248:sieve_extend.c ****     
 249:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * step;
 250:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 251:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 252:sieve_extend.c ****         return;
 253:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 7


 254:sieve_extend.c **** 
 255:sieve_extend.c ****     debug printf("..building masks in range %ju-%ju\n", (uintmax_t)range_start, (uintmax_t)range_st
 256:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 257:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 258:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 259:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 260:sieve_extend.c ****         register bitvector_t quadmask = { };
 261:sieve_extend.c **** 
 262:sieve_extend.c ****         // build a quadmask
 263:sieve_extend.c ****         #pragma GCC ivdep 
 264:sieve_extend.c ****         do {
 265:sieve_extend.c ****             quadmask[word] |= markmask(index);
 266:sieve_extend.c ****             index += step;
 267:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 268:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 269:sieve_extend.c **** 
 270:sieve_extend.c ****         // use mask on all n*step multiples
 271:sieve_extend.c ****         // register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_W
 272:sieve_extend.c ****         bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitsto
 273:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 274:sieve_extend.c ****     }
 275:sieve_extend.c **** }
 276:sieve_extend.c **** 
 277:sieve_extend.c **** static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const counter_t source_star
  91              		.loc 1 277 159 view -0
  92              		.cfi_startproc
 278:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  93              		.loc 1 278 5 view .LVU1
 279:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitstorage(bitstorage, 4); }
 280:sieve_extend.c **** 
 281:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  94              		.loc 1 281 5 view .LVU2
 282:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
  95              		.loc 1 282 5 view .LVU3
  96              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  97              		.loc 1 277 159 is_stmt 0 view .LVU4
  98 0000 55       		push	rbp	#
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 6, -16
 101              	# sieve_extend.c:281:     const counter_t source_word = wordindex(source_start);
 281:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 102              		.loc 1 281 21 view .LVU5
 103 0001 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 277 159 view .LVU6
 106 0004 4989D1   		mov	r9, rdx	# size, tmp438
 107 0007 4889E5   		mov	rbp, rsp	#,
 108              		.cfi_def_cfa_register 6
 109 000a 4157     		push	r15	#
 110              	# sieve_extend.c:281:     const counter_t source_word = wordindex(source_start);
 281:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 111              		.loc 1 281 21 view .LVU7
 112 000c 48C1E806 		shr	rax, 6	# source_word,
 113              	.LVL1:
 114              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
GAS LISTING /tmp/ccG38KJh.s 			page 8


 115              		.loc 1 282 138 view .LVU8
 116 0010 89F2     		mov	edx, esi	# tmp250, source_start
 117              	.LVL2:
 118              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 119              		.loc 1 277 159 view .LVU9
 120 0012 4156     		push	r14	#
 121              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 122              		.loc 1 282 138 view .LVU10
 123 0014 83E23F   		and	edx, 63	# tmp250,
 124              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 125              		.loc 1 282 137 view .LVU11
 126 0017 41B84000 		mov	r8d, 64	# tmp252,
 126      0000
 127              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 128              		.loc 1 277 159 view .LVU12
 129 001d 4155     		push	r13	#
 130              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 131              		.loc 1 282 137 view .LVU13
 132 001f 4129D0   		sub	r8d, edx	# tmp251, tmp250
 133              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 134              		.loc 1 282 171 view .LVU14
 135 0022 4589CB   		mov	r11d, r9d	# tmp258, size
 136              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 137              		.loc 1 277 159 view .LVU15
 138 0025 4154     		push	r12	#
 139              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 140              		.loc 1 282 171 view .LVU16
 141 0027 41F7D3   		not	r11d	# tmp258
 142              		.cfi_offset 15, -24
 143              		.cfi_offset 14, -32
 144              		.cfi_offset 13, -40
 145              		.cfi_offset 12, -48
 146 002a 49C7C4FF 		mov	r12, -1	# tmp261,
 146      FFFFFF
 147              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 148              		.loc 1 277 159 view .LVU17
 149 0031 53       		push	rbx	#
 150              		.cfi_offset 3, -56
 151              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 152              		.loc 1 282 60 view .LVU18
 153 0032 488B1CC7 		mov	rbx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 154              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 155              		.loc 1 282 171 view .LVU19
 156 0036 C442A3F7 		shrx	r13, r12, r11	# tmp260, tmp261, tmp258
 156      EC
 157              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 158              		.loc 1 282 116 view .LVU20
 159 003b C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp253, *_11, tmp251
 159      44C708
 160              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 161              		.loc 1 282 60 view .LVU21
 162 0042 C462CBF7 		shrx	r10, rbx, rsi	# tmp255, *_5, source_start
 162      D3
GAS LISTING /tmp/ccG38KJh.s 			page 9


 163              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 164              		.loc 1 282 87 view .LVU22
 165 0047 4D09D0   		or	r8, r10	# tmp257, tmp255
 166              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 167              		.loc 1 282 24 view .LVU23
 168 004a 4D21E8   		and	r8, r13	# pattern, tmp260
 169              	.LVL3:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 170              		.loc 1 283 5 is_stmt 1 view .LVU24
 171              	.LBB372:
 172              		.loc 1 283 10 view .LVU25
 173              		.loc 1 283 54 view .LVU26
 174              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 175              		.loc 1 283 5 is_stmt 0 view .LVU27
 176 004d 4983F940 		cmp	r9, 64	# size,
 177 0051 0F87B900 		ja	.L2	#,
 177      0000
 178 0057 4D89CE   		mov	r14, r9	# pattern_size, size
 179              	.LVL4:
 180              	.L3:
 284:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 181              		.loc 1 284 9 is_stmt 1 discriminator 3 view .LVU28
 182              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 183              		.loc 1 283 103 is_stmt 0 discriminator 3 view .LVU29
 184 005a 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 185              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 186              		.loc 1 284 29 discriminator 3 view .LVU30
 187 005e C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 187      F8
 188              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 189              		.loc 1 284 17 discriminator 3 view .LVU31
 190 0063 4D09F8   		or	r8, r15	# pattern, _23
 191              	.LVL5:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 192              		.loc 1 283 90 is_stmt 1 discriminator 3 view .LVU32
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 193              		.loc 1 283 54 discriminator 3 view .LVU33
 194              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 195              		.loc 1 283 5 is_stmt 0 discriminator 3 view .LVU34
 196 0066 4883F840 		cmp	rax, 64	# pattern_size,
 197 006a 0F87A000 		ja	.L2	#,
 197      0000
 198              		.loc 1 284 9 is_stmt 1 view .LVU35
 199              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 200              		.loc 1 283 103 is_stmt 0 view .LVU36
 201 0070 4A8D1CB5 		lea	rbx, 0[0+r14*4]	# pattern_size,
 201      00000000 
 202              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 203              		.loc 1 284 29 view .LVU37
 204 0078 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 204      D0
 205              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 206              		.loc 1 284 17 view .LVU38
 207 007d 4909D0   		or	r8, rdx	# pattern, _23
GAS LISTING /tmp/ccG38KJh.s 			page 10


 208              	.LVL6:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 209              		.loc 1 283 90 is_stmt 1 view .LVU39
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 210              		.loc 1 283 54 view .LVU40
 211              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 212              		.loc 1 283 5 is_stmt 0 view .LVU41
 213 0080 4883FB40 		cmp	rbx, 64	# pattern_size,
 214 0084 0F878600 		ja	.L2	#,
 214      0000
 215              		.loc 1 284 9 is_stmt 1 view .LVU42
 216              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 217              		.loc 1 283 103 is_stmt 0 view .LVU43
 218 008a 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 218      00000000 
 219              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 220              		.loc 1 284 29 view .LVU44
 221 0092 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 221      D0
 222              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 223              		.loc 1 284 17 view .LVU45
 224 0097 4D09D0   		or	r8, r10	# pattern, _23
 225              	.LVL7:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 226              		.loc 1 283 90 is_stmt 1 view .LVU46
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 227              		.loc 1 283 54 view .LVU47
 228              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 229              		.loc 1 283 5 is_stmt 0 view .LVU48
 230 009a 4983FB40 		cmp	r11, 64	# pattern_size,
 231 009e 7770     		ja	.L2	#,
 232              		.loc 1 284 9 is_stmt 1 view .LVU49
 233              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 234              		.loc 1 283 103 is_stmt 0 view .LVU50
 235 00a0 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 236 00a3 49C1E504 		sal	r13, 4	# pattern_size,
 237              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 238              		.loc 1 284 29 view .LVU51
 239 00a7 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 239      E0
 240              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 241              		.loc 1 284 17 view .LVU52
 242 00ac 4D09E0   		or	r8, r12	# pattern, _23
 243              	.LVL8:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 244              		.loc 1 283 90 is_stmt 1 view .LVU53
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 245              		.loc 1 283 54 view .LVU54
 246              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 247              		.loc 1 283 5 is_stmt 0 view .LVU55
 248 00af 4983FD40 		cmp	r13, 64	# pattern_size,
 249 00b3 775B     		ja	.L2	#,
GAS LISTING /tmp/ccG38KJh.s 			page 11


 250              		.loc 1 284 9 is_stmt 1 view .LVU56
 251              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 283 103 is_stmt 0 view .LVU57
 253 00b5 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 254 00b8 48C1E005 		sal	rax, 5	# pattern_size,
 255              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 256              		.loc 1 284 29 view .LVU58
 257 00bc C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 257      F8
 258              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 259              		.loc 1 284 17 view .LVU59
 260 00c1 4D09F8   		or	r8, r15	# pattern, _23
 261              	.LVL9:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 262              		.loc 1 283 90 is_stmt 1 view .LVU60
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 263              		.loc 1 283 54 view .LVU61
 264              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 265              		.loc 1 283 5 is_stmt 0 view .LVU62
 266 00c4 4883F840 		cmp	rax, 64	# pattern_size,
 267 00c8 7746     		ja	.L2	#,
 268              		.loc 1 284 9 is_stmt 1 view .LVU63
 269              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 270              		.loc 1 283 103 is_stmt 0 view .LVU64
 271 00ca 4C89F3   		mov	rbx, r14	# pattern_size, pattern_size
 272 00cd 48C1E306 		sal	rbx, 6	# pattern_size,
 273              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 274              		.loc 1 284 29 view .LVU65
 275 00d1 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 275      D0
 276              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 277              		.loc 1 284 17 view .LVU66
 278 00d6 4909D0   		or	r8, rdx	# pattern, _23
 279              	.LVL10:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 283 90 is_stmt 1 view .LVU67
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 281              		.loc 1 283 54 view .LVU68
 282              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 283              		.loc 1 283 5 is_stmt 0 view .LVU69
 284 00d9 4883FB40 		cmp	rbx, 64	# pattern_size,
 285 00dd 7731     		ja	.L2	#,
 286              		.loc 1 284 9 is_stmt 1 view .LVU70
 287              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 288              		.loc 1 283 103 is_stmt 0 view .LVU71
 289 00df 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 290 00e2 49C1E307 		sal	r11, 7	# pattern_size,
 291              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 292              		.loc 1 284 29 view .LVU72
 293 00e6 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 293      D0
 294              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
GAS LISTING /tmp/ccG38KJh.s 			page 12


 295              		.loc 1 284 17 view .LVU73
 296 00eb 4D09D0   		or	r8, r10	# pattern, _23
 297              	.LVL11:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 298              		.loc 1 283 90 is_stmt 1 view .LVU74
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 299              		.loc 1 283 54 view .LVU75
 300              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 301              		.loc 1 283 5 is_stmt 0 view .LVU76
 302 00ee 4983FB40 		cmp	r11, 64	# pattern_size,
 303 00f2 771C     		ja	.L2	#,
 304              		.loc 1 284 9 is_stmt 1 view .LVU77
 305              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 283 103 is_stmt 0 view .LVU78
 307 00f4 49C1E608 		sal	r14, 8	# pattern_size,
 308              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 309              		.loc 1 284 29 view .LVU79
 310 00f8 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 310      E0
 311              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 312              		.loc 1 284 17 view .LVU80
 313 00fd 4D09E0   		or	r8, r12	# pattern, _23
 314              	.LVL12:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 283 90 is_stmt 1 view .LVU81
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 316              		.loc 1 283 54 view .LVU82
 317              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 318              		.loc 1 283 5 is_stmt 0 view .LVU83
 319 0100 4983FE40 		cmp	r14, 64	# pattern_size,
 320 0104 0F8650FF 		jbe	.L3	#,
 320      FFFF
 321              	.LVL13:
 322 010a 660F1F44 		.p2align 4,,10
 322      0000
 323              		.p2align 3
 324              	.L2:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 325              		.loc 1 283 5 view .LVU84
 326              	.LBE372:
 285:sieve_extend.c **** 
 286:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 327              		.loc 1 286 5 is_stmt 1 view .LVU85
 328              	# sieve_extend.c:286:     const counter_t destination_start = source_start + size;
 329              		.loc 1 286 21 is_stmt 0 view .LVU86
 330 0110 4C01CE   		add	rsi, r9	# destination_start, size
 331              	.LVL14:
 287:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 332              		.loc 1 287 5 is_stmt 1 view .LVU87
 333              	# sieve_extend.c:287:     counter_t destination_start_word = wordindex(destination_start);
 334              		.loc 1 287 15 is_stmt 0 view .LVU88
 335 0113 4989F6   		mov	r14, rsi	# destination_start_word, destination_start
 336 0116 49C1EE06 		shr	r14, 6	# destination_start_word,
 337              	.LVL15:
GAS LISTING /tmp/ccG38KJh.s 			page 13


 288:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 338              		.loc 1 288 5 is_stmt 1 view .LVU89
 339              	# sieve_extend.c:288:     counter_t destination_stop_word = wordindex(destination_stop);
 340              		.loc 1 288 15 is_stmt 0 view .LVU90
 341 011a 4989CB   		mov	r11, rcx	# destination_stop_word, destination_stop
 342 011d 4E8D14F5 		lea	r10, 0[0+r14*8]	# _116,
 342      00000000 
 343 0125 4E8D2C17 		lea	r13, [rdi+r10]	# _117,
 344 0129 F7D1     		not	ecx	# tmp264
 345              	.LVL16:
 346              		.loc 1 288 15 view .LVU91
 347 012b 48C7C2FF 		mov	rdx, -1	# tmp266,
 347      FFFFFF
 348 0132 49C1EB06 		shr	r11, 6	# destination_stop_word,
 349              	.LVL17:
 289:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 350              		.loc 1 289 5 is_stmt 1 view .LVU92
 351 0136 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_118, *_117
 352 013a C4C2C9F7 		shlx	rax, r8, rsi	# _120, pattern, destination_start
 352      C0
 353 013f C4E2F3F7 		shrx	rbx, rdx, rcx	# _124, tmp266, tmp264
 353      DA
 354              	# sieve_extend.c:289:     if (destination_start_word >= destination_stop_word) {
 355              		.loc 1 289 8 is_stmt 0 view .LVU93
 356 0144 4D39DE   		cmp	r14, r11	# destination_start_word, destination_stop_word
 357 0147 0F83B303 		jnb	.L36	#,
 357      0000
 290:sieve_extend.c ****         bitstorage[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(d
 291:sieve_extend.c ****         return;
 292:sieve_extend.c ****     }
 293:sieve_extend.c **** 
 294:sieve_extend.c ****     bitstorage[destination_start_word] |= (pattern << bitindex(destination_start));
 358              		.loc 1 294 5 is_stmt 1 view .LVU94
 359              	# sieve_extend.c:294:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 360              		.loc 1 294 40 is_stmt 0 view .LVU95
 361 014d 4C09F8   		or	rax, r15	# tmp269, pretmp_118
 362              	# sieve_extend.c:296:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 295:sieve_extend.c **** 
 296:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 363              		.loc 1 296 31 view .LVU96
 364 0150 B9400000 		mov	ecx, 64	# tmp270,
 364      00
 365              	# sieve_extend.c:294:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 294:sieve_extend.c **** 
 366              		.loc 1 294 40 view .LVU97
 367 0155 49894500 		mov	QWORD PTR 0[r13], rax	# *_117, tmp269
 368              		.loc 1 296 5 is_stmt 1 view .LVU98
 369              	# sieve_extend.c:296:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 370              		.loc 1 296 31 is_stmt 0 view .LVU99
 371 0159 31D2     		xor	edx, edx	# tmp271
 372 015b 4889C8   		mov	rax, rcx	# tmp272, tmp270
 373 015e 49F7F1   		div	r9	# size
 374              	.LVL18:
 297:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 375              		.loc 1 297 5 is_stmt 1 view .LVU100
 298:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 376              		.loc 1 298 5 view .LVU101
GAS LISTING /tmp/ccG38KJh.s 			page 14


 299:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 377              		.loc 1 299 5 view .LVU102
 378              	# sieve_extend.c:299:     register counter_t loop_range = destination_stop_word - destination_start
 379              		.loc 1 299 24 is_stmt 0 view .LVU103
 380 0161 4D89DC   		mov	r12, r11	# loop_range, destination_stop_word
 381 0164 4D29F4   		sub	r12, r14	# loop_range, destination_start_word
 382              	.LVL19:
 300:sieve_extend.c ****     destination_start_word++;
 383              		.loc 1 300 5 is_stmt 1 view .LVU104
 384              	# sieve_extend.c:297:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 385              		.loc 1 297 31 is_stmt 0 view .LVU105
 386 0167 4889C8   		mov	rax, rcx	# tmp270, tmp270
 387              	# sieve_extend.c:298:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 388              		.loc 1 298 89 view .LVU106
 389 016a 48F7DE   		neg	rsi	# tmp275
 390              	.LVL20:
 391              	# sieve_extend.c:300:     destination_start_word++;
 392              		.loc 1 300 27 view .LVU107
 393 016d 4D8D4E01 		lea	r9, 1[r14]	# destination_start_word,
 394              	.LVL21:
 395              	.LBB373:
 301:sieve_extend.c ****     
 302:sieve_extend.c ****     #pragma GCC ivdep
 303:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 396              		.loc 1 303 10 is_stmt 1 view .LVU108
 397              		.loc 1 303 25 view .LVU109
 398              	.LBE373:
 399              	# sieve_extend.c:298:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 400              		.loc 1 298 25 is_stmt 0 view .LVU110
 401 0171 83E63F   		and	esi, 63	# shift,
 402              	.LVL22:
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 403              		.loc 1 298 25 view .LVU111
 404 0174 4D8D6C24 		lea	r13, 1[r12]	# niters.172,
 404      01
 405              	# sieve_extend.c:297:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 406              		.loc 1 297 31 view .LVU112
 407 0179 4829D0   		sub	rax, rdx	# tmp270, tmp271
 408              	.LVL23:
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 409              		.loc 1 297 31 view .LVU113
 410 017c 4983FC06 		cmp	r12, 6	# loop_range,
 411 0180 0F869403 		jbe	.L9	#,
 411      0000
 412 0186 4A8D4C17 		lea	rcx, 8[rdi+r10]	# ivtmp.191,
 412      08
 413 018b 4D89EA   		mov	r10, r13	# bnd.173, niters.172
 414 018e 49C1EA03 		shr	r10, 3	# bnd.173,
 415 0192 49C1E206 		sal	r10, 6	# tmp283,
 416 0196 C5F96EEA 		vmovd	xmm5, edx	# vect_cst__1, _127
 417 019a C5F96EE6 		vmovd	xmm4, esi	# vect_cst__131, _129
 418 019e C5F96ED8 		vmovd	xmm3, eax	# vect_cst__108, _125
 419 01a2 C4C1F96E 		vmovq	xmm6, r8	# pattern, pattern
GAS LISTING /tmp/ccG38KJh.s 			page 15


 419      F0
 420 01a7 4D8D340A 		lea	r14, [r10+rcx]	# _216,
 421 01ab 4183E240 		and	r10d, 64	# tmp283,
 422              	# sieve_extend.c:300:     destination_start_word++;
 300:sieve_extend.c ****     
 423              		.loc 1 300 27 view .LVU114
 424 01af C57D6F0D 		vmovdqa	ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.176,
 424      00000000 
 425 01b7 C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp360,
 425      00000000 
 426 01bf C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp361,
 426      00000000 
 427 01c7 C57D6F3D 		vmovdqa	ymm15, YMMWORD PTR .LC3[rip]	# tmp362,
 427      00000000 
 428 01cf C4627D58 		vpbroadcastd	ymm12, xmm5	# vect_cst__1, vect_cst__1
 428      E5
 429 01d4 C4627D58 		vpbroadcastd	ymm13, xmm4	# vect_cst__131, vect_cst__131
 429      EC
 430 01d9 C4627D58 		vpbroadcastd	ymm14, xmm3	# vect_cst__108, vect_cst__108
 430      F3
 431 01de C4E27D59 		vpbroadcastq	ymm2, xmm6	# vect_cst__38, pattern
 431      D6
 432 01e3 0F849700 		je	.L7	#,
 432      0000
 433 01e9 C57D7FC9 		vmovdqa	ymm1, ymm9	# vect_vec_iv_.176, vect_vec_iv_.176
 434              	.LBB374:
 435              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 304:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 436              		.loc 1 304 83 view .LVU115
 437 01ed C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.176, vect_vec_iv_.176, tmp361
 438 01f1 C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp400, vect_vec_iv_.176, vect_vec_iv_.176,
 438      C220
 439 01f7 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp401, vect_vec_iv_.176, vect_vec_iv_.176,
 439      DA31
 440 01fd C5FD70E8 		vpshufd	ymm5, ymm0, 216	# tmp402, tmp400,
 440      D8
 441 0202 C4C17D70 		vpshufd	ymm4, ymm11, 216	# tmp403, tmp401,
 441      E3D8
 442 0208 C5D56CDC 		vpunpcklqdq	ymm3, ymm5, ymm4	# tmp404, tmp402, tmp403
 443 020c C4E21D40 		vpmulld	ymm6, ymm12, ymm3	# vect__45.178, vect_cst__1, tmp404
 443      F3
 444 0211 4883C140 		add	rcx, 64	# ivtmp.191,
 445 0215 C44135D4 		vpaddq	ymm9, ymm9, ymm8	# vect_vec_iv_.176, vect_vec_iv_.176, tmp360
 445      C8
 446              	.LVL24:
 447              		.loc 1 304 9 is_stmt 1 view .LVU116
 448              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 449              		.loc 1 304 83 is_stmt 0 view .LVU117
 450 021a C4C14DFE 		vpaddd	ymm1, ymm6, ymm13	# vect__47.179, vect__45.178, vect_cst__131
 450      CD
 451              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 452              		.loc 1 304 101 view .LVU118
 453 021f C4C175DB 		vpand	ymm0, ymm1, ymm15	# vect__48.180, vect__47.179, tmp362
 453      C7
 454              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 455              		.loc 1 304 74 view .LVU119
 456 0224 C58DFAE8 		vpsubd	ymm5, ymm14, ymm0	# vect__49.181, vect_cst__108, vect__48.180
GAS LISTING /tmp/ccG38KJh.s 			page 16


 457              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 458              		.loc 1 304 118 view .LVU120
 459 0228 C4627D35 		vpmovzxdq	ymm10, xmm5	#, vect__49.181
 459      D5
 460 022d C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.180
 460      D8
 461 0232 C4C2ED47 		vpsllvq	ymm4, ymm2, ymm10	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 461      E2
 462 0237 C4C2ED45 		vpsrlvq	ymm3, ymm2, ymm11	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 462      DB
 463 023c C4E37D39 		vextracti128	xmm1, ymm5, 0x1	# tmp416, vect__49.181
 463      E901
 464 0242 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp419, vect__48.180
 464      C001
 465 0248 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 466 024c C4E27D35 		vpmovzxdq	ymm5, xmm1	# vect_patt_139.182, tmp416
 466      E9
 467 0251 C4E27D35 		vpmovzxdq	ymm4, xmm0	# vect_patt_137.184, tmp419
 467      E0
 468 0256 C462ED47 		vpsllvq	ymm10, ymm2, ymm5	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 468      D5
 469 025b C462ED45 		vpsrlvq	ymm11, ymm2, ymm4	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 469      DC
 470              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 471              		.loc 1 304 46 view .LVU121
 472 0260 C5FE7F71 		vmovdqu	YMMWORD PTR -64[rcx], ymm6	# MEM[base: _213, offset: 0B], vect__55.186
 472      C0
 473              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 474              		.loc 1 304 118 view .LVU122
 475 0265 C4C12DEB 		vpor	ymm3, ymm10, ymm11	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 475      DB
 476              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 477              		.loc 1 304 46 view .LVU123
 478 026a C5FE7F59 		vmovdqu	YMMWORD PTR -32[rcx], ymm3	# MEM[base: _213, offset: 32B], vect__55.186
 478      E0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 479              		.loc 1 303 40 is_stmt 1 view .LVU124
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 480              		.loc 1 303 25 view .LVU125
 481 026f 4C39F1   		cmp	rcx, r14	# ivtmp.191, _216
 482 0272 0F840F01 		je	.L31	#,
 482      0000
 483 0278 0F1F8400 		.p2align 4,,10
 483      00000000 
 484              		.p2align 3
 485              	.L7:
 486              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 487              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU126
 488 0280 C5B5D4CF 		vpaddq	ymm1, ymm9, ymm7	# vect_vec_iv_.176, vect_vec_iv_.176, tmp361
 489 0284 C4C135D4 		vpaddq	ymm6, ymm9, ymm8	# vect_vec_iv_.176, vect_vec_iv_.176, tmp360
 489      F0
 490              		.loc 1 304 9 is_stmt 1 discriminator 3 view .LVU127
 491              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 492              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU128
 493 0289 C4E33546 		vperm2i128	ymm5, ymm9, ymm1, 32	# tmp290, vect_vec_iv_.176, vect_vec_iv_.176,
 493      E920
 494 028f C4633546 		vperm2i128	ymm9, ymm9, ymm1, 49	# tmp291, vect_vec_iv_.176, vect_vec_iv_.176,
GAS LISTING /tmp/ccG38KJh.s 			page 17


 494      C931
 495 0295 C57D70D5 		vpshufd	ymm10, ymm5, 216	# tmp288, tmp290,
 495      D8
 496 029a C4C17D70 		vpshufd	ymm0, ymm9, 216	# tmp289, tmp291,
 496      C1D8
 497 02a0 C5AD6CE0 		vpunpcklqdq	ymm4, ymm10, ymm0	# tmp292, tmp288, tmp289
 498 02a4 C4621D40 		vpmulld	ymm11, ymm12, ymm4	# vect__45.178, vect_cst__1, tmp292
 498      DC
 499 02a9 4883E980 		sub	rcx, -128	# ivtmp.191,
 500 02ad C4C125FE 		vpaddd	ymm3, ymm11, ymm13	# vect__47.179, vect__45.178, vect_cst__131
 500      DD
 501              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 502              		.loc 1 304 101 discriminator 3 view .LVU129
 503 02b2 C4C165DB 		vpand	ymm5, ymm3, ymm15	# vect__48.180, vect__47.179, tmp362
 503      EF
 504              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 505              		.loc 1 304 74 discriminator 3 view .LVU130
 506 02b7 C58DFACD 		vpsubd	ymm1, ymm14, ymm5	# vect__49.181, vect_cst__108, vect__48.180
 507              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 508              		.loc 1 304 118 discriminator 3 view .LVU131
 509 02bb C4627D35 		vpmovzxdq	ymm9, xmm1	#, vect__49.181
 509      C9
 510 02c0 C4E27D35 		vpmovzxdq	ymm0, xmm5	#, vect__48.180
 510      C5
 511 02c5 C442ED47 		vpsllvq	ymm10, ymm2, ymm9	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 511      D1
 512 02ca C4E2ED45 		vpsrlvq	ymm4, ymm2, ymm0	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 512      E0
 513 02cf C4E37D39 		vextracti128	xmm3, ymm1, 0x1	# tmp304, vect__49.181
 513      CB01
 514 02d5 C4E37D39 		vextracti128	xmm5, ymm5, 0x1	# tmp307, vect__48.180
 514      ED01
 515 02db C52DEBDC 		vpor	ymm11, ymm10, ymm4	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 516 02df C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_139.182, tmp304
 516      CB
 517 02e4 C4627D35 		vpmovzxdq	ymm10, xmm5	# vect_patt_137.184, tmp307
 517      D5
 518 02e9 C462ED47 		vpsllvq	ymm9, ymm2, ymm1	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 518      C9
 519 02ee C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 519      C2
 520              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 521              		.loc 1 304 46 discriminator 3 view .LVU132
 522 02f3 C57E7F59 		vmovdqu	YMMWORD PTR -128[rcx], ymm11	# MEM[base: _213, offset: 0B], vect__55.186
 522      80
 523              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 524              		.loc 1 304 83 discriminator 3 view .LVU133
 525 02f8 C54DD4DF 		vpaddq	ymm11, ymm6, ymm7	# vect_vec_iv_.176, vect_vec_iv_.176, tmp361
 526              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 527              		.loc 1 304 118 discriminator 3 view .LVU134
 528 02fc C5B5EBE0 		vpor	ymm4, ymm9, ymm0	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 529              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 530              		.loc 1 304 83 discriminator 3 view .LVU135
 531 0300 C4C34D46 		vperm2i128	ymm3, ymm6, ymm11, 32	# tmp375, vect_vec_iv_.176, vect_vec_iv_.176,
 531      DB20
 532 0306 C4414DD4 		vpaddq	ymm9, ymm6, ymm8	# vect_vec_iv_.176, vect_vec_iv_.176, tmp360
 532      C8
GAS LISTING /tmp/ccG38KJh.s 			page 18


 533 030b C4C34D46 		vperm2i128	ymm6, ymm6, ymm11, 49	# tmp376, vect_vec_iv_.176, vect_vec_iv_.176,
 533      F331
 534 0311 C5FD70CB 		vpshufd	ymm1, ymm3, 216	# tmp377, tmp375,
 534      D8
 535 0316 C5FD70EE 		vpshufd	ymm5, ymm6, 216	# tmp378, tmp376,
 535      D8
 536 031b C5756CD5 		vpunpcklqdq	ymm10, ymm1, ymm5	# tmp379, tmp377, tmp378
 537 031f C4C21D40 		vpmulld	ymm0, ymm12, ymm10	# vect__45.178, vect_cst__1, tmp379
 537      C2
 538              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 539              		.loc 1 304 46 discriminator 3 view .LVU136
 540 0324 C5FE7F61 		vmovdqu	YMMWORD PTR -96[rcx], ymm4	# MEM[base: _213, offset: 32B], vect__55.186
 540      A0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 541              		.loc 1 303 40 is_stmt 1 discriminator 3 view .LVU137
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 542              		.loc 1 303 25 discriminator 3 view .LVU138
 543              		.loc 1 304 9 discriminator 3 view .LVU139
 544              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 545              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU140
 546 0329 C4C17DFE 		vpaddd	ymm4, ymm0, ymm13	# vect__47.179, vect__45.178, vect_cst__131
 546      E5
 547              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 548              		.loc 1 304 101 discriminator 3 view .LVU141
 549 032e C4C15DDB 		vpand	ymm3, ymm4, ymm15	# vect__48.180, vect__47.179, tmp362
 549      DF
 550              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 551              		.loc 1 304 74 discriminator 3 view .LVU142
 552 0333 C58DFAF3 		vpsubd	ymm6, ymm14, ymm3	# vect__49.181, vect_cst__108, vect__48.180
 553              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 554              		.loc 1 304 118 discriminator 3 view .LVU143
 555 0337 C4627D35 		vpmovzxdq	ymm11, xmm6	#, vect__49.181
 555      DE
 556 033c C4E27D35 		vpmovzxdq	ymm5, xmm3	#, vect__48.180
 556      EB
 557 0341 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 557      CB
 558 0346 C462ED45 		vpsrlvq	ymm10, ymm2, ymm5	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 558      D5
 559 034b C4E37D39 		vextracti128	xmm4, ymm6, 0x1	# tmp391, vect__49.181
 559      F401
 560 0351 C4E37D39 		vextracti128	xmm3, ymm3, 0x1	# tmp394, vect__48.180
 560      DB01
 561 0357 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 561      C2
 562 035c C4E27D35 		vpmovzxdq	ymm6, xmm4	# vect_patt_139.182, tmp391
 562      F4
 563 0361 C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_137.184, tmp394
 563      CB
 564 0366 C462ED47 		vpsllvq	ymm11, ymm2, ymm6	# vect_patt_138.183, vect_cst__38, vect_patt_139.182
 564      DE
 565 036b C4E2ED45 		vpsrlvq	ymm5, ymm2, ymm1	# vect_patt_136.185, vect_cst__38, vect_patt_137.184
 565      E9
 566              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 567              		.loc 1 304 46 discriminator 3 view .LVU144
 568 0370 C5FE7F41 		vmovdqu	YMMWORD PTR -64[rcx], ymm0	# MEM[base: _213, offset: 0B], vect__55.186
 568      C0
GAS LISTING /tmp/ccG38KJh.s 			page 19


 569              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 570              		.loc 1 304 118 discriminator 3 view .LVU145
 571 0375 C525EBD5 		vpor	ymm10, ymm11, ymm5	# vect__55.186, vect_patt_138.183, vect_patt_136.185
 572              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 573              		.loc 1 304 46 discriminator 3 view .LVU146
 574 0379 C57E7F51 		vmovdqu	YMMWORD PTR -32[rcx], ymm10	# MEM[base: _213, offset: 32B], vect__55.186
 574      E0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 575              		.loc 1 303 40 is_stmt 1 discriminator 3 view .LVU147
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 576              		.loc 1 303 25 discriminator 3 view .LVU148
 577 037e 4C39F1   		cmp	rcx, r14	# ivtmp.191, _216
 578 0381 0F85F9FE 		jne	.L7	#,
 578      FFFF
 579              	.L31:
 580 0387 4D89EF   		mov	r15, r13	# niters_vector_mult_vf.174, niters.172
 581 038a 4983E7F8 		and	r15, -8	# niters_vector_mult_vf.174,
 582 038e 4183E507 		and	r13d, 7	# niters.172,
 583 0392 0F847D01 		je	.L37	#,
 583      0000
 584 0398 C5F877   		vzeroupper
 585              	.L6:
 586              	.LVL25:
 587              		.loc 1 304 9 view .LVU149
 588              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 589              		.loc 1 304 83 is_stmt 0 view .LVU150
 590 039b 89D1     		mov	ecx, edx	# tmp310, tmp271
 591 039d 410FAFCF 		imul	ecx, r15d	# tmp310, niters_vector_mult_vf.174
 592              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 593              		.loc 1 304 74 view .LVU151
 594 03a1 4189C2   		mov	r10d, eax	# tmp313, pattern_size
 595              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 596              		.loc 1 304 19 view .LVU152
 597 03a4 4F8D2C39 		lea	r13, [r9+r15]	# tmp312,
 598              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 599              		.loc 1 304 83 view .LVU153
 600 03a8 01F1     		add	ecx, esi	# tmp311, shift
 601              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 602              		.loc 1 304 101 view .LVU154
 603 03aa 83E13F   		and	ecx, 63	# _49,
 604              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 605              		.loc 1 304 74 view .LVU155
 606 03ad 4129CA   		sub	r10d, ecx	# tmp313, _49
 607              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 608              		.loc 1 304 57 view .LVU156
 609 03b0 C442A9F7 		shlx	r14, r8, r10	# tmp314, pattern, tmp313
 609      F0
 610              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 611              		.loc 1 304 129 view .LVU157
 612 03b5 C4C2F3F7 		shrx	rcx, r8, rcx	# tmp315, pattern, _49
 612      C8
 613              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 614              		.loc 1 304 118 view .LVU158
 615 03ba 4C09F1   		or	rcx, r14	# tmp316, tmp314
 616 03bd 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_55, tmp316
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 617              		.loc 1 303 40 is_stmt 1 view .LVU159
GAS LISTING /tmp/ccG38KJh.s 			page 20


 618 03c1 4D8D6F01 		lea	r13, 1[r15]	# i,
 619              	.LVL26:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 620              		.loc 1 303 25 view .LVU160
 621              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 622              		.loc 1 303 5 is_stmt 0 view .LVU161
 623 03c5 4D39EC   		cmp	r12, r13	# loop_range, i
 624 03c8 0F821D01 		jb	.L8	#,
 624      0000
 625              		.loc 1 304 9 is_stmt 1 view .LVU162
 626              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 627              		.loc 1 304 83 is_stmt 0 view .LVU163
 628 03ce 4189D2   		mov	r10d, edx	# tmp317, tmp271
 629 03d1 450FAFD5 		imul	r10d, r13d	# tmp317, i
 630              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 631              		.loc 1 304 74 view .LVU164
 632 03d5 4189C6   		mov	r14d, eax	# tmp320, pattern_size
 633              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 634              		.loc 1 304 19 view .LVU165
 635 03d8 4D01CD   		add	r13, r9	# tmp319, destination_start_word
 636              	.LVL27:
 637              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 638              		.loc 1 304 83 view .LVU166
 639 03db 4101F2   		add	r10d, esi	# tmp318, shift
 640              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 641              		.loc 1 304 101 view .LVU167
 642 03de 4183E23F 		and	r10d, 63	# _142,
 643              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 644              		.loc 1 304 74 view .LVU168
 645 03e2 4529D6   		sub	r14d, r10d	# tmp320, _142
 646              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 647              		.loc 1 304 57 view .LVU169
 648 03e5 C4C289F7 		shlx	rcx, r8, r14	# tmp321, pattern, tmp320
 648      C8
 649              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 650              		.loc 1 304 129 view .LVU170
 651 03ea C442ABF7 		shrx	r10, r8, r10	# tmp322, pattern, _142
 651      D0
 652              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 653              		.loc 1 304 118 view .LVU171
 654 03ef 4C09D1   		or	rcx, r10	# tmp323, tmp322
 655 03f2 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_148, tmp323
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 656              		.loc 1 303 40 is_stmt 1 view .LVU172
 657 03f6 4D8D6F02 		lea	r13, 2[r15]	# i,
 658              	.LVL28:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 659              		.loc 1 303 25 view .LVU173
 660              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 661              		.loc 1 303 5 is_stmt 0 view .LVU174
 662 03fa 4D39EC   		cmp	r12, r13	# loop_range, i
 663 03fd 0F82E800 		jb	.L8	#,
 663      0000
 664              		.loc 1 304 9 is_stmt 1 view .LVU175
 665              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccG38KJh.s 			page 21


 666              		.loc 1 304 83 is_stmt 0 view .LVU176
 667 0403 89D1     		mov	ecx, edx	# tmp324, tmp271
 668 0405 410FAFCD 		imul	ecx, r13d	# tmp324, i
 669              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 670              		.loc 1 304 74 view .LVU177
 671 0409 4189C6   		mov	r14d, eax	# tmp327, pattern_size
 672              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 673              		.loc 1 304 19 view .LVU178
 674 040c 4D01CD   		add	r13, r9	# tmp326, destination_start_word
 675              	.LVL29:
 676              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 677              		.loc 1 304 83 view .LVU179
 678 040f 01F1     		add	ecx, esi	# tmp325, shift
 679              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 680              		.loc 1 304 101 view .LVU180
 681 0411 83E13F   		and	ecx, 63	# _157,
 682              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 683              		.loc 1 304 74 view .LVU181
 684 0414 4129CE   		sub	r14d, ecx	# tmp327, _157
 685              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 686              		.loc 1 304 57 view .LVU182
 687 0417 C44289F7 		shlx	r10, r8, r14	# tmp328, pattern, tmp327
 687      D0
 688              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 689              		.loc 1 304 129 view .LVU183
 690 041c C4C2F3F7 		shrx	rcx, r8, rcx	# tmp329, pattern, _157
 690      C8
 691              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 692              		.loc 1 304 118 view .LVU184
 693 0421 4C09D1   		or	rcx, r10	# tmp330, tmp328
 694 0424 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_163, tmp330
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 695              		.loc 1 303 40 is_stmt 1 view .LVU185
 696 0428 4D8D6F03 		lea	r13, 3[r15]	# i,
 697              	.LVL30:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 698              		.loc 1 303 25 view .LVU186
 699              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 700              		.loc 1 303 5 is_stmt 0 view .LVU187
 701 042c 4D39EC   		cmp	r12, r13	# loop_range, i
 702 042f 0F82B600 		jb	.L8	#,
 702      0000
 703              		.loc 1 304 9 is_stmt 1 view .LVU188
 704              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 705              		.loc 1 304 83 is_stmt 0 view .LVU189
 706 0435 4189D2   		mov	r10d, edx	# tmp331, tmp271
 707 0438 450FAFD5 		imul	r10d, r13d	# tmp331, i
 708              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 709              		.loc 1 304 74 view .LVU190
 710 043c 4189C6   		mov	r14d, eax	# tmp334, pattern_size
 711              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 712              		.loc 1 304 19 view .LVU191
 713 043f 4D01CD   		add	r13, r9	# tmp333, destination_start_word
 714              	.LVL31:
 715              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 716              		.loc 1 304 83 view .LVU192
GAS LISTING /tmp/ccG38KJh.s 			page 22


 717 0442 4101F2   		add	r10d, esi	# tmp332, shift
 718              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 719              		.loc 1 304 101 view .LVU193
 720 0445 4183E23F 		and	r10d, 63	# _172,
 721              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 722              		.loc 1 304 74 view .LVU194
 723 0449 4529D6   		sub	r14d, r10d	# tmp334, _172
 724              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 725              		.loc 1 304 57 view .LVU195
 726 044c C44289F7 		shlx	r14, r8, r14	# tmp335, pattern, tmp334
 726      F0
 727              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 728              		.loc 1 304 129 view .LVU196
 729 0451 C4C2ABF7 		shrx	rcx, r8, r10	# tmp336, pattern, _172
 729      C8
 730              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 731              		.loc 1 304 118 view .LVU197
 732 0456 4C09F1   		or	rcx, r14	# tmp337, tmp335
 733 0459 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_178, tmp337
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 734              		.loc 1 303 40 is_stmt 1 view .LVU198
 735 045d 4D8D6F04 		lea	r13, 4[r15]	# i,
 736              	.LVL32:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 737              		.loc 1 303 25 view .LVU199
 738              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 739              		.loc 1 303 5 is_stmt 0 view .LVU200
 740 0461 4D39EC   		cmp	r12, r13	# loop_range, i
 741 0464 0F828100 		jb	.L8	#,
 741      0000
 742              		.loc 1 304 9 is_stmt 1 view .LVU201
 743              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 744              		.loc 1 304 83 is_stmt 0 view .LVU202
 745 046a 4189D2   		mov	r10d, edx	# tmp338, tmp271
 746 046d 450FAFD5 		imul	r10d, r13d	# tmp338, i
 747              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 748              		.loc 1 304 74 view .LVU203
 749 0471 4189C6   		mov	r14d, eax	# tmp341, pattern_size
 750              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 751              		.loc 1 304 19 view .LVU204
 752 0474 4D01CD   		add	r13, r9	# tmp340, destination_start_word
 753              	.LVL33:
 754              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 755              		.loc 1 304 83 view .LVU205
 756 0477 4101F2   		add	r10d, esi	# tmp339, shift
 757              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 758              		.loc 1 304 101 view .LVU206
 759 047a 4183E23F 		and	r10d, 63	# _187,
 760              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 761              		.loc 1 304 74 view .LVU207
 762 047e 4529D6   		sub	r14d, r10d	# tmp341, _187
 763              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 764              		.loc 1 304 57 view .LVU208
 765 0481 C44289F7 		shlx	r14, r8, r14	# tmp342, pattern, tmp341
 765      F0
 766              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccG38KJh.s 			page 23


 767              		.loc 1 304 129 view .LVU209
 768 0486 C4C2ABF7 		shrx	rcx, r8, r10	# tmp343, pattern, _187
 768      C8
 769              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 770              		.loc 1 304 118 view .LVU210
 771 048b 4C09F1   		or	rcx, r14	# tmp344, tmp342
 772 048e 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_193, tmp344
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 773              		.loc 1 303 40 is_stmt 1 view .LVU211
 774 0492 4D8D6F05 		lea	r13, 5[r15]	# i,
 775              	.LVL34:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 776              		.loc 1 303 25 view .LVU212
 777              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 778              		.loc 1 303 5 is_stmt 0 view .LVU213
 779 0496 4D39EC   		cmp	r12, r13	# loop_range, i
 780 0499 7250     		jb	.L8	#,
 781              		.loc 1 304 9 is_stmt 1 view .LVU214
 782              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 783              		.loc 1 304 83 is_stmt 0 view .LVU215
 784 049b 4189D2   		mov	r10d, edx	# tmp345, tmp271
 785 049e 450FAFD5 		imul	r10d, r13d	# tmp345, i
 786              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 787              		.loc 1 304 74 view .LVU216
 788 04a2 4189C6   		mov	r14d, eax	# tmp348, pattern_size
 789              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 790              		.loc 1 304 19 view .LVU217
 791 04a5 4D01CD   		add	r13, r9	# tmp347, destination_start_word
 792              	.LVL35:
 793              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 794              		.loc 1 304 83 view .LVU218
 795 04a8 4101F2   		add	r10d, esi	# tmp346, shift
 796              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 797              		.loc 1 304 101 view .LVU219
 798 04ab 4183E23F 		and	r10d, 63	# _202,
 799              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 800              		.loc 1 304 74 view .LVU220
 801 04af 4529D6   		sub	r14d, r10d	# tmp348, _202
 802              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 803              		.loc 1 304 57 view .LVU221
 804 04b2 C44289F7 		shlx	r14, r8, r14	# tmp349, pattern, tmp348
 804      F0
 805              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 806              		.loc 1 304 129 view .LVU222
 807 04b7 C4C2ABF7 		shrx	rcx, r8, r10	# tmp350, pattern, _202
 807      C8
 808              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 809              		.loc 1 303 40 view .LVU223
 810 04bc 4983C706 		add	r15, 6	# i,
 811              	.LVL36:
 812              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 813              		.loc 1 304 118 view .LVU224
 814 04c0 4C09F1   		or	rcx, r14	# tmp351, tmp349
 815 04c3 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_208, tmp351
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccG38KJh.s 			page 24


 816              		.loc 1 303 40 is_stmt 1 view .LVU225
 817              	.LVL37:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 818              		.loc 1 303 25 view .LVU226
 819              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 820              		.loc 1 303 5 is_stmt 0 view .LVU227
 821 04c7 4D39FC   		cmp	r12, r15	# loop_range, i
 822 04ca 721F     		jb	.L8	#,
 823              		.loc 1 304 9 is_stmt 1 view .LVU228
 824              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 825              		.loc 1 304 83 is_stmt 0 view .LVU229
 826 04cc 410FAFD7 		imul	edx, r15d	# tmp352, i
 827              	.LVL38:
 828              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 829              		.loc 1 304 19 view .LVU230
 830 04d0 4D01CF   		add	r15, r9	# tmp354, destination_start_word
 831              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 832              		.loc 1 304 83 view .LVU231
 833 04d3 01D6     		add	esi, edx	# tmp353, tmp352
 834              	.LVL39:
 835              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 836              		.loc 1 304 101 view .LVU232
 837 04d5 83E63F   		and	esi, 63	# _111,
 838              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 839              		.loc 1 304 74 view .LVU233
 840 04d8 29F0     		sub	eax, esi	# tmp355, _111
 841              	.LVL40:
 842              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 843              		.loc 1 304 57 view .LVU234
 844 04da C4C2F9F7 		shlx	rdx, r8, rax	# tmp356, pattern, tmp355
 844      D0
 845              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 846              		.loc 1 304 129 view .LVU235
 847 04df C4C2CBF7 		shrx	rsi, r8, rsi	# tmp357, pattern, _111
 847      F0
 848              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 849              		.loc 1 304 118 view .LVU236
 850 04e4 4809D6   		or	rsi, rdx	# tmp358, tmp356
 851 04e7 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_104, tmp358
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 852              		.loc 1 303 40 is_stmt 1 view .LVU237
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 853              		.loc 1 303 25 view .LVU238
 854              	.L8:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 855              		.loc 1 303 25 is_stmt 0 view .LVU239
 856              	.LBE374:
 305:sieve_extend.c ****     }
 306:sieve_extend.c ****     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 857              		.loc 1 306 5 is_stmt 1 view .LVU240
 858              	# sieve_extend.c:306:     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 859              		.loc 1 306 39 is_stmt 0 view .LVU241
 860 04eb 4A211CDF 		and	QWORD PTR [rdi+r11*8], rbx	# *_57, _124
 861              	# sieve_extend.c:307: }
 307:sieve_extend.c **** }
 862              		.loc 1 307 1 view .LVU242
GAS LISTING /tmp/ccG38KJh.s 			page 25


 863 04ef 5B       		pop	rbx	#
 864 04f0 415C     		pop	r12	#
 865              	.LVL41:
 866              		.loc 1 307 1 view .LVU243
 867 04f2 415D     		pop	r13	#
 868 04f4 415E     		pop	r14	#
 869 04f6 415F     		pop	r15	#
 870 04f8 5D       		pop	rbp	#
 871              		.cfi_remember_state
 872              		.cfi_def_cfa 7, 8
 873 04f9 C3       		ret	
 874              	.LVL42:
 875 04fa 660F1F44 		.p2align 4,,10
 875      0000
 876              		.p2align 3
 877              	.L36:
 878              		.cfi_restore_state
 290:sieve_extend.c ****         return;
 879              		.loc 1 290 9 is_stmt 1 view .LVU244
 880              	# sieve_extend.c:290:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 290:sieve_extend.c ****         return;
 881              		.loc 1 290 88 is_stmt 0 view .LVU245
 882 0500 4821D8   		and	rax, rbx	# tmp267, _124
 883              	# sieve_extend.c:290:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 290:sieve_extend.c ****         return;
 884              		.loc 1 290 44 view .LVU246
 885 0503 4C09F8   		or	rax, r15	# tmp268, pretmp_118
 886 0506 49894500 		mov	QWORD PTR 0[r13], rax	# *_117, tmp268
 291:sieve_extend.c ****     }
 887              		.loc 1 291 9 is_stmt 1 view .LVU247
 888              	# sieve_extend.c:307: }
 889              		.loc 1 307 1 is_stmt 0 view .LVU248
 890 050a 5B       		pop	rbx	#
 891 050b 415C     		pop	r12	#
 892 050d 415D     		pop	r13	#
 893 050f 415E     		pop	r14	#
 894              	.LVL43:
 895              		.loc 1 307 1 view .LVU249
 896 0511 415F     		pop	r15	#
 897 0513 5D       		pop	rbp	#
 898              		.cfi_remember_state
 899              		.cfi_def_cfa 7, 8
 900 0514 C3       		ret	
 901              	.LVL44:
 902              	.L37:
 903              		.cfi_restore_state
 904              		.loc 1 307 1 view .LVU250
 905 0515 C5F877   		vzeroupper
 906 0518 EBD1     		jmp	.L8	#
 907              	.LVL45:
 908              	.L9:
 909              	.LBB375:
 910              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 911              		.loc 1 303 20 view .LVU251
 912 051a 4531FF   		xor	r15d, r15d	# niters_vector_mult_vf.174
 913 051d E979FEFF 		jmp	.L6	#
GAS LISTING /tmp/ccG38KJh.s 			page 26


 913      FF
 914              	.LBE375:
 915              		.cfi_endproc
 916              	.LFE59:
 918 0522 66662E0F 		.p2align 4
 918      1F840000 
 918      0000000F 
 918      1F00
 919              		.globl	compare_tuning_result
 921              	compare_tuning_result:
 922              	.LVL46:
 923              	.LFB73:
 308:sieve_extend.c **** 
 309:sieve_extend.c **** static void continuePattern_aligned(bitword_t* bitstorage, const counter_t source_start, const coun
 310:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 311:sieve_extend.c **** 
 312:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 313:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 314:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 315:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 316:sieve_extend.c ****     
 317:sieve_extend.c ****     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 318:sieve_extend.c **** 
 319:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 320:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 321:sieve_extend.c ****         copy_word += size;
 322:sieve_extend.c ****     }
 323:sieve_extend.c **** 
 324:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 325:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 326:sieve_extend.c ****         source_word++;
 327:sieve_extend.c ****         copy_word++;
 328:sieve_extend.c ****     }
 329:sieve_extend.c **** 
 330:sieve_extend.c **** }
 331:sieve_extend.c **** 
 332:sieve_extend.c **** static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t source_start, const c
 333:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 334:sieve_extend.c ****    
 335:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 336:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 337:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 338:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 339:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 340:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 341:sieve_extend.c **** 
 342:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstorage[copy_word] >> shift
 343:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 344:sieve_extend.c **** 
 345:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 346:sieve_extend.c **** 
 347:sieve_extend.c ****     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 348:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 349:sieve_extend.c ****     }
 350:sieve_extend.c **** }
 351:sieve_extend.c **** 
 352:sieve_extend.c **** 
GAS LISTING /tmp/ccG38KJh.s 			page 27


 353:sieve_extend.c **** static inline counter_t continuePattern_shiftleft_unrolled(bitword_t* __restrict bitstorage, const 
 354:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 355:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 356:sieve_extend.c ****     counter_t distance = 0;
 357:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 358:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 359:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 360:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 361:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 362:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 363:sieve_extend.c ****         copy_word += 2;
 364:sieve_extend.c ****         source_word += 2;
 365:sieve_extend.c ****         distance += 2;
 366:sieve_extend.c ****     }
 367:sieve_extend.c ****     return distance;
 368:sieve_extend.c **** }
 369:sieve_extend.c **** 
 370:sieve_extend.c **** static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t source_start, const co
 371:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 372:sieve_extend.c **** 
 373:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 374:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 375:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 376:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 377:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 378:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 379:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 380:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 381:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 382:sieve_extend.c **** 
 383:sieve_extend.c ****     copy_word++;
 384:sieve_extend.c ****     source_word++;
 385:sieve_extend.c **** 
 386:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 387:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 388:sieve_extend.c ****     source_word += distance;
 389:sieve_extend.c ****     copy_word += distance;
 390:sieve_extend.c **** 
 391:sieve_extend.c ****     debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start - 
 392:sieve_extend.c **** 
 393:sieve_extend.c ****     #pragma GCC ivdep
 394:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 395:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 396:sieve_extend.c ****     }
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 399:sieve_extend.c **** 
 400:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 401:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 402:sieve_extend.c **** 
 403:sieve_extend.c ****     #pragma GCC ivdep
 404:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 405:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 406:sieve_extend.c **** 
 407:sieve_extend.c ****     #pragma GCC ivdep
 408:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 409:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccG38KJh.s 			page 28


 410:sieve_extend.c **** 
 411:sieve_extend.c **** 
 412:sieve_extend.c ****  }
 413:sieve_extend.c **** 
 414:sieve_extend.c **** // continue a pattern that start at <source_start> with a size of <size>.
 415:sieve_extend.c **** // repeat this pattern up to <destination_stop>.
 416:sieve_extend.c **** // for small sizes, this is done on a word level
 417:sieve_extend.c **** // for larger sizes, we look at the offset / start bit and apply the appropriate algorithm.
 418:sieve_extend.c **** // note that these algorithms are general for bitstorage and have no specialized assumptions for th
 419:sieve_extend.c **** static inline void continuePattern(bitword_t* bitstorage, const counter_t source_start, const count
 420:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 421:sieve_extend.c **** 
 422:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 423:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 424:sieve_extend.c **** 
 425:sieve_extend.c ****     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, source_start, size, dest
 426:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 427:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 428:sieve_extend.c **** }
 429:sieve_extend.c **** 
 430:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitstorage, const counter_t block_start, const counter_t 
 431:sieve_extend.c ****     counter_t prime = prime_start;
 432:sieve_extend.c ****     counter_t start = 0;
 433:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 434:sieve_extend.c **** 
 435:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 436:sieve_extend.c ****     
 437:sieve_extend.c ****     while (prime*step <= block_stop) {
 438:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 439:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 440:sieve_extend.c ****         else 
 441:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 442:sieve_extend.c **** 
 443:sieve_extend.c ****         if unlikely(step < VECTORSTEP_FASTER) {
 444:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 445:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 446:sieve_extend.c ****         }
 447:sieve_extend.c ****         else {
 448:sieve_extend.c ****             setBitsTrue_largeRange(bitstorage, start, step, block_stop);
 449:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 450:sieve_extend.c ****         }
 451:sieve_extend.c **** 
 452:sieve_extend.c ****         step  = prime * 2 + 1;
 453:sieve_extend.c ****     }
 454:sieve_extend.c **** }
 455:sieve_extend.c **** 
 456:sieve_extend.c **** // structure to help sieve_block_extend report back to the main module
 457:sieve_extend.c **** struct block {
 458:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 459:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 460:sieve_extend.c ****     counter_t prime; // next prime to be striped
 461:sieve_extend.c **** };
 462:sieve_extend.c **** 
 463:sieve_extend.c **** // returns prime that could not be handled:
 464:sieve_extend.c **** // start is too large
 465:sieve_extend.c **** // range is too big
 466:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
GAS LISTING /tmp/ccG38KJh.s 			page 29


 467:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 468:sieve_extend.c ****     register counter_t prime   = 0;
 469:sieve_extend.c ****     counter_t patternsize_bits = 1;
 470:sieve_extend.c ****     counter_t pattern_start    = 0;
 471:sieve_extend.c ****     counter_t range_stop       = block_start;
 472:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 473:sieve_extend.c **** 
 474:sieve_extend.c ****     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first word has to be cleared
 475:sieve_extend.c ****     
 476:sieve_extend.c ****     for (;range_stop < block_stop;) {
 477:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 478:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 479:sieve_extend.c ****         if unlikely(start > block_stop) break;
 480:sieve_extend.c **** 
 481:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 482:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 483:sieve_extend.c **** 
 484:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 485:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 486:sieve_extend.c ****         block.pattern_start = pattern_start;
 487:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 488:sieve_extend.c **** 
 489:sieve_extend.c ****         if likely(patternsize_bits>1) {
 490:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 491:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 492:sieve_extend.c ****         }
 493:sieve_extend.c ****         patternsize_bits *= step;
 494:sieve_extend.c **** 
 495:sieve_extend.c ****         if (step < MEDIUMSTEP_FASTER)      setBitsTrue_mediumStep(bitstorage, start, step, range_st
 496:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 497:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 498:sieve_extend.c ****         block.prime = prime;
 499:sieve_extend.c ****     } 
 500:sieve_extend.c **** 
 501:sieve_extend.c ****     return block;
 502:sieve_extend.c **** }
 503:sieve_extend.c **** 
 504:sieve_extend.c **** 
 505:sieve_extend.c **** /* This is the main module that does all the work*/
 506:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 507:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 508:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 509:sieve_extend.c **** 
 510:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 511:sieve_extend.c **** 
 512:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 513:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 514:sieve_extend.c **** 
 515:sieve_extend.c ****     // returns the max prime that was processed in the pattern
 516:sieve_extend.c ****     counter_t startprime = block.prime;
 517:sieve_extend.c **** 
 518:sieve_extend.c ****     // continue the found pattern to the entire sieve
 519:sieve_extend.c ****     continuePattern(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 520:sieve_extend.c **** 
 521:sieve_extend.c ****     // in the sieve all bits for the multiples of primes up to startprime have been set
 522:sieve_extend.c ****     // process the sieve and stripe all the multiples of primes > start_prime
 523:sieve_extend.c ****     // do this block by block to minimize cache misses
GAS LISTING /tmp/ccG38KJh.s 			page 30


 524:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 525:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 526:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 527:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 528:sieve_extend.c ****     } 
 529:sieve_extend.c **** 
 530:sieve_extend.c ****     // retunr the completed sieve
 531:sieve_extend.c ****     return sieve;
 532:sieve_extend.c **** }
 533:sieve_extend.c **** 
 534:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 535:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 536:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 537:sieve_extend.c ****         primeCount++;
 538:sieve_extend.c ****         if (factor < maxFactor/2) {
 539:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 540:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 541:sieve_extend.c ****         }
 542:sieve_extend.c ****     }
 543:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 544:sieve_extend.c **** }
 545:sieve_extend.c **** 
 546:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 547:sieve_extend.c ****     counter_t primeCount = 1;
 548:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 549:sieve_extend.c ****     return primeCount;
 550:sieve_extend.c **** }
 551:sieve_extend.c **** 
 552:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 553:sieve_extend.c ****     printf("DeepAnalyzing\n");
 554:sieve_extend.c ****     counter_t warn_prime = 0;
 555:sieve_extend.c ****     counter_t warn_nonprime = 0;
 556:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 557:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 558:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 559:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 560:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 561:sieve_extend.c ****                 }
 562:sieve_extend.c ****             }
 563:sieve_extend.c ****         }
 564:sieve_extend.c ****         else {
 565:sieve_extend.c ****             counter_t c_prime = 0;
 566:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 567:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 568:sieve_extend.c ****             }
 569:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 570:sieve_extend.c ****         }
 571:sieve_extend.c ****     }
 572:sieve_extend.c **** }
 573:sieve_extend.c **** 
 574:sieve_extend.c **** 
 575:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 576:sieve_extend.c **** 
 577:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 578:sieve_extend.c ****     counter_t valid_primes = 0;
 579:sieve_extend.c ****     switch(sieve->size) {
 580:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
GAS LISTING /tmp/ccG38KJh.s 			page 31


 581:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 582:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 583:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 584:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 585:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 586:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 587:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 588:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 589:sieve_extend.c ****         default:            valid_primes= 0;
 590:sieve_extend.c ****     }
 591:sieve_extend.c **** 
 592:sieve_extend.c ****     int valid = (valid_primes == primecount);
 593:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 594:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 595:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 596:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 597:sieve_extend.c ****     }
 598:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 599:sieve_extend.c ****     return (valid);
 600:sieve_extend.c **** }
 601:sieve_extend.c **** 
 602:sieve_extend.c **** void usage(char *name) {
 603:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 604:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 605:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 606:sieve_extend.c ****     fprintf(stderr, "  --help             This help function\n");
 607:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 608:sieve_extend.c ****     #ifdef _OPENMP
 609:sieve_extend.c ****     fprintf(stderr, "  --threads <count>  Set the maximum number of threads to be used\n");
 610:sieve_extend.c ****     fprintf(stderr, "                     Use 'all' to use all available threads or 'half' for /2 (
 611:sieve_extend.c ****     #endif
 612:sieve_extend.c ****     fprintf(stderr, "  --time  <seconds>  The maximum time (in seconds) to run passes of the sieve 
 613:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 614:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 615:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 616:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 617:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 618:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 619:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 620:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 621:sieve_extend.c ****     exit(1);
 622:sieve_extend.c **** }
 623:sieve_extend.c **** 
 624:sieve_extend.c **** typedef struct  {
 625:sieve_extend.c ****     counter_t maxints;
 626:sieve_extend.c ****     counter_t blocksize_bits;
 627:sieve_extend.c ****     counter_t blocksize_kb;
 628:sieve_extend.c ****     counter_t free_bits;
 629:sieve_extend.c ****     counter_t smallstep_faster;
 630:sieve_extend.c ****     counter_t mediumstep_faster;
 631:sieve_extend.c ****     counter_t vectorstep_faster;
 632:sieve_extend.c ****     counter_t threads;
 633:sieve_extend.c ****     counter_t sample_max;
 634:sieve_extend.c ****     double    sample_duration;
 635:sieve_extend.c ****     counter_t passes;
 636:sieve_extend.c ****     double    elapsed_time;
 637:sieve_extend.c ****     double    avg;
GAS LISTING /tmp/ccG38KJh.s 			page 32


 638:sieve_extend.c **** } tuning_result_type;
 639:sieve_extend.c **** 
 640:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 924              		.loc 1 640 57 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		.loc 1 640 57 is_stmt 0 view .LVU253
 927 0530 F30F1EFA 		endbr64	
 641:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 928              		.loc 1 641 5 is_stmt 1 view .LVU254
 929              	.LVL47:
 642:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 930              		.loc 1 642 5 view .LVU255
 643:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 931              		.loc 1 643 5 view .LVU256
 932              	# sieve_extend.c:643:     return (resultB->avg > resultA->avg ? 1 : -1);
 933              		.loc 1 643 45 is_stmt 0 view .LVU257
 934 0534 C5FB1046 		vmovsd	xmm0, QWORD PTR 96[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 934      60
 935 0539 31C0     		xor	eax, eax	# <retval>
 936 053b C5F92F47 		vcomisd	xmm0, QWORD PTR 96[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 936      60
 937 0540 0F97C0   		seta	al	#, <retval>
 938 0543 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 939              	# sieve_extend.c:644: }
 644:sieve_extend.c **** }
 940              		.loc 1 644 1 view .LVU258
 941 0547 C3       		ret	
 942              		.cfi_endproc
 943              	.LFE73:
 945 0548 0F1F8400 		.p2align 4
 945      00000000 
 947              	tune_benchmark:
 948              	.LVL48:
 949              	.LFB74:
 645:sieve_extend.c **** 
 646:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 950              		.loc 1 646 94 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		.loc 1 646 94 is_stmt 0 view .LVU260
 953 0550 4155     		push	r13	#
 954              		.cfi_def_cfa_offset 16
 955              		.cfi_offset 13, -16
 956 0552 4154     		push	r12	#
 957              		.cfi_def_cfa_offset 24
 958              		.cfi_offset 12, -24
 959 0554 4989F4   		mov	r12, rsi	# tuning_result_index, tmp119
 960 0557 55       		push	rbp	#
 961              		.cfi_def_cfa_offset 32
 962              		.cfi_offset 6, -32
 963 0558 4889FD   		mov	rbp, rdi	# tuning_result, tmp118
 964 055b 53       		push	rbx	#
 965              		.cfi_def_cfa_offset 40
 966              		.cfi_offset 3, -40
 967              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 647:sieve_extend.c ****     counter_t passes = 0;
 648:sieve_extend.c ****     double elapsed_time = 0;
 649:sieve_extend.c ****     struct timespec start_time,end_time;
GAS LISTING /tmp/ccG38KJh.s 			page 33


 650:sieve_extend.c ****     struct sieve_t *sieve;
 651:sieve_extend.c **** 
 652:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 968              		.loc 1 652 44 view .LVU261
 969 055c 486BDE68 		imul	rbx, rsi, 104	# tmp98, tuning_result_index,
 970              	# sieve_extend.c:646: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 646:sieve_extend.c ****     counter_t passes = 0;
 971              		.loc 1 646 94 view .LVU262
 972 0560 4883EC68 		sub	rsp, 104	#,
 973              		.cfi_def_cfa_offset 144
 974              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 975              		.loc 1 652 44 view .LVU263
 976 0564 4801FB   		add	rbx, rdi	# _2, tuning_result
 977              	# sieve_extend.c:646: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 646:sieve_extend.c ****     counter_t passes = 0;
 978              		.loc 1 646 94 view .LVU264
 979 0567 64488B04 		mov	rax, QWORD PTR fs:40	# tmp124, MEM[(<address-space-1> long unsigned int *)40B]
 979      25280000 
 979      00
 980 0570 48894424 		mov	QWORD PTR 88[rsp], rax	# D.6902, tmp124
 980      58
 981 0575 31C0     		xor	eax, eax	# tmp124
 647:sieve_extend.c ****     counter_t passes = 0;
 982              		.loc 1 647 5 is_stmt 1 view .LVU265
 983              	.LVL49:
 648:sieve_extend.c ****     struct timespec start_time,end_time;
 984              		.loc 1 648 5 view .LVU266
 649:sieve_extend.c ****     struct sieve_t *sieve;
 985              		.loc 1 649 5 view .LVU267
 650:sieve_extend.c **** 
 986              		.loc 1 650 5 view .LVU268
 987              		.loc 1 652 5 view .LVU269
 988              	# sieve_extend.c:653:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 653:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 989              		.loc 1 653 30 is_stmt 0 view .LVU270
 990 0577 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 991              	# sieve_extend.c:654:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 654:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 992              		.loc 1 654 30 view .LVU271
 993 057b 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 994              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 652:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 995              		.loc 1 652 29 view .LVU272
 996 057f 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 997              	# sieve_extend.c:656:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 655:sieve_extend.c **** 
 656:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 998              		.loc 1 656 5 view .LVU273
 999 0583 4989E5   		mov	r13, rsp	# tmp102,
 1000 0586 4C89EE   		mov	rsi, r13	#, tmp102
 1001              	.LVL50:
 1002              		.loc 1 656 5 view .LVU274
 1003 0589 BF010000 		mov	edi, 1	#,
 1003      00
 1004              	.LVL51:
 1005              	# sieve_extend.c:653:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 653:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
GAS LISTING /tmp/ccG38KJh.s 			page 34


 1006              		.loc 1 653 30 view .LVU275
 1007 058e 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 1007      000000
 1008              	# sieve_extend.c:654:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 654:sieve_extend.c **** 
 1009              		.loc 1 654 30 view .LVU276
 1010 0595 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 1010      000000
 1011              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 652:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 1012              		.loc 1 652 29 view .LVU277
 1013 059c 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 1013      000000
 653:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 1014              		.loc 1 653 5 is_stmt 1 view .LVU278
 654:sieve_extend.c **** 
 1015              		.loc 1 654 5 view .LVU279
 1016              		.loc 1 656 5 view .LVU280
 1017 05a3 E8000000 		call	clock_gettime@PLT	#
 1017      00
 1018              	.LVL52:
 657:sieve_extend.c ****     #ifdef _OPENMP
 658:sieve_extend.c ****     omp_set_num_threads(tuning_result[tuning_result_index].threads);
 1019              		.loc 1 658 5 view .LVU281
 1020 05a8 8B7B38   		mov	edi, DWORD PTR 56[rbx]	#, _2->threads
 1021 05ab E8000000 		call	omp_set_num_threads@PLT	#
 1021      00
 1022              	.LVL53:
 1023              	.LBB376:
 1024              	# sieve_extend.c:659:     #pragma omp parallel reduction(+:passes)
 659:sieve_extend.c ****     #pragma omp parallel reduction(+:passes)
 1025              		.loc 1 659 13 is_stmt 0 view .LVU282
 1026 05b0 488D7424 		lea	rsi, 16[rsp]	# tmp106,
 1026      10
 1027 05b5 48897424 		mov	QWORD PTR 64[rsp], rsi	# .omp_data_o.90.end_time, tmp106
 1027      40
 1028 05ba 31C9     		xor	ecx, ecx	#
 1029 05bc 31D2     		xor	edx, edx	#
 1030 05be 488D3D7B 		lea	rdi, tune_benchmark._omp_fn.0[rip]	#,
 1030      3A0000
 1031 05c5 488D7424 		lea	rsi, 32[rsp]	# tmp107,
 1031      20
 1032 05ca 48C74424 		mov	QWORD PTR 80[rsp], 0	# .omp_data_o.90.passes,
 1032      50000000 
 1032      00
 1033 05d3 4C896424 		mov	QWORD PTR 40[rsp], r12	# .omp_data_o.90.tuning_result_index, tuning_result_index
 1033      28
 1034 05d8 48896C24 		mov	QWORD PTR 32[rsp], rbp	# .omp_data_o.90.tuning_result, tuning_result
 1034      20
 1035 05dd 48C74424 		mov	QWORD PTR 48[rsp], 0x000000000	# .omp_data_o.90.elapsed_time,
 1035      30000000 
 1035      00
 1036 05e6 4C896C24 		mov	QWORD PTR 56[rsp], r13	# .omp_data_o.90.start_time, tmp102
 1036      38
 1037 05eb 48C74424 		mov	QWORD PTR 72[rsp], 0	# .omp_data_o.90.sieve,
 1037      48000000 
 1037      00
GAS LISTING /tmp/ccG38KJh.s 			page 35


 1038 05f4 E8000000 		call	GOMP_parallel@PLT	#
 1038      00
 1039              	.LVL54:
 1040 05f9 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# passes, .omp_data_o.90.passes
 1040      50
 1041              	.LVL55:
 1042              		.loc 1 659 13 view .LVU283
 1043 05fe C5FB104C 		vmovsd	xmm1, QWORD PTR 48[rsp]	# elapsed_time, .omp_data_o.90.elapsed_time
 1043      2430
 1044              	.LVL56:
 1045              		.loc 1 659 13 view .LVU284
 1046              	.LBE376:
 660:sieve_extend.c ****     #endif
 661:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 662:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 663:sieve_extend.c ****         sieve_delete(sieve);
 664:sieve_extend.c ****         passes++;
 665:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 666:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 667:sieve_extend.c ****     }
 668:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 1047              		.loc 1 668 5 is_stmt 1 view .LVU285
 1048              	# sieve_extend.c:670:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 669:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 670:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 1049              		.loc 1 670 52 is_stmt 0 view .LVU286
 1050 0604 4885FF   		test	rdi, rdi	# passes
 1051              	# sieve_extend.c:668:     tuning_result[tuning_result_index].passes = passes;
 668:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 1052              		.loc 1 668 47 view .LVU287
 1053 0607 48897B50 		mov	QWORD PTR 80[rbx], rdi	# _2->passes, passes
 669:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 1054              		.loc 1 669 5 is_stmt 1 view .LVU288
 1055              		.loc 1 670 5 view .LVU289
 1056              	# sieve_extend.c:670:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 1057              		.loc 1 670 52 is_stmt 0 view .LVU290
 1058 060b C5F857C0 		vxorps	xmm0, xmm0, xmm0	# tmp120
 1059 060f 782F     		js	.L42	#,
 1060 0611 C4E1FB2A 		vcvtsi2sd	xmm3, xmm0, rdi	# tmp121, tmp120, passes
 1060      DF
 1061              	.LVL57:
 1062              	.L43:
 1063              		.loc 1 670 52 view .LVU291
 1064 0616 C5E35EE1 		vdivsd	xmm4, xmm3, xmm1	# tmp113, tmp109, elapsed_time
 1065              	# sieve_extend.c:669:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 669:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 1066              		.loc 1 669 53 view .LVU292
 1067 061a C5F114EC 		vunpcklpd	xmm5, xmm1, xmm4	# tmp108, elapsed_time, tmp113
 1068 061e C5F8116B 		vmovups	XMMWORD PTR 88[rbx], xmm5	# MEM[(double *)_2 + 88B], tmp108
 1068      58
 1069              	# sieve_extend.c:671: }
 671:sieve_extend.c **** }
 1070              		.loc 1 671 1 view .LVU293
 1071 0623 488B4424 		mov	rax, QWORD PTR 88[rsp]	# tmp125, D.6902
 1071      58
 1072 0628 64483304 		xor	rax, QWORD PTR fs:40	# tmp125, MEM[(<address-space-1> long unsigned int *)40B]
 1072      25280000 
GAS LISTING /tmp/ccG38KJh.s 			page 36


 1072      00
 1073 0631 7524     		jne	.L47	#,
 1074 0633 4883C468 		add	rsp, 104	#,
 1075              		.cfi_remember_state
 1076              		.cfi_def_cfa_offset 40
 1077 0637 5B       		pop	rbx	#
 1078              		.cfi_def_cfa_offset 32
 1079 0638 5D       		pop	rbp	#
 1080              		.cfi_def_cfa_offset 24
 1081              	.LVL58:
 1082              		.loc 1 671 1 view .LVU294
 1083 0639 415C     		pop	r12	#
 1084              		.cfi_def_cfa_offset 16
 1085              	.LVL59:
 1086              		.loc 1 671 1 view .LVU295
 1087 063b 415D     		pop	r13	#
 1088              		.cfi_def_cfa_offset 8
 1089 063d C3       		ret	
 1090              	.LVL60:
 1091 063e 6690     		.p2align 4,,10
 1092              		.p2align 3
 1093              	.L42:
 1094              		.cfi_restore_state
 1095              	# sieve_extend.c:670:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 670:sieve_extend.c **** }
 1096              		.loc 1 670 52 view .LVU296
 1097 0640 4989F8   		mov	r8, rdi	# tmp111, passes
 1098 0643 49D1E8   		shr	r8	# tmp111
 1099 0646 83E701   		and	edi, 1	# tmp112,
 1100              	.LVL61:
 670:sieve_extend.c **** }
 1101              		.loc 1 670 52 view .LVU297
 1102 0649 4C09C7   		or	rdi, r8	# tmp117, tmp111
 1103 064c C4E1FB2A 		vcvtsi2sd	xmm2, xmm0, rdi	# tmp122, tmp120, tmp117
 1103      D7
 1104 0651 C5EB58DA 		vaddsd	xmm3, xmm2, xmm2	# tmp109, tmp110, tmp110
 1105 0655 EBBF     		jmp	.L43	#
 1106              	.L47:
 1107              	# sieve_extend.c:671: }
 1108              		.loc 1 671 1 view .LVU298
 1109 0657 E8000000 		call	__stack_chk_fail@PLT	#
 1109      00
 1110              	.LVL62:
 1111              		.loc 1 671 1 view .LVU299
 1112              		.cfi_endproc
 1113              	.LFE74:
 1115 065c 0F1F4000 		.p2align 4
 1117              	continuePattern_shiftright:
 1118              	.LVL63:
 1119              	.LFB61:
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1120              		.loc 1 332 149 is_stmt 1 view -0
 1121              		.cfi_startproc
 333:sieve_extend.c ****    
 1122              		.loc 1 333 5 view .LVU301
 335:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1123              		.loc 1 335 5 view .LVU302
GAS LISTING /tmp/ccG38KJh.s 			page 37


 1124              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1125              		.loc 1 332 149 is_stmt 0 view .LVU303
 1126 0660 55       		push	rbp	#
 1127              		.cfi_def_cfa_offset 16
 1128              		.cfi_offset 6, -16
 1129              	# sieve_extend.c:336:     const counter_t copy_start = source_start + size;
 336:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1130              		.loc 1 336 21 view .LVU304
 1131 0661 4801F2   		add	rdx, rsi	# copy_start, source_start
 1132              	.LVL64:
 1133              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1134              		.loc 1 337 39 view .LVU305
 1135 0664 4989D2   		mov	r10, rdx	# _4, copy_start
 1136              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1137              		.loc 1 332 149 view .LVU306
 1138 0667 4889E5   		mov	rbp, rsp	#,
 1139              		.cfi_def_cfa_register 6
 1140 066a 4157     		push	r15	#
 1141              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1142              		.loc 1 337 39 view .LVU307
 1143 066c 4183E23F 		and	r10d, 63	# _4,
 1144              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1145              		.loc 1 337 67 view .LVU308
 1146 0670 4989F1   		mov	r9, rsi	# _5, source_start
 1147              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1148              		.loc 1 332 149 view .LVU309
 1149 0673 4156     		push	r14	#
 1150              	# sieve_extend.c:339:     register counter_t source_word = wordindex(source_start);
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1151              		.loc 1 339 24 view .LVU310
 1152 0675 4889F0   		mov	rax, rsi	# source_start, source_start
 1153 0678 48C1E806 		shr	rax, 6	# source_start,
 1154              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1155              		.loc 1 332 149 view .LVU311
 1156 067c 4155     		push	r13	#
 1157              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1158              		.loc 1 337 67 view .LVU312
 1159 067e 4183E13F 		and	r9d, 63	# _5,
 1160              	# sieve_extend.c:340:     register counter_t copy_word = wordindex(copy_start);
 340:sieve_extend.c **** 
 1161              		.loc 1 340 24 view .LVU313
 1162 0682 48C1EA06 		shr	rdx, 6	# copy_word,
 1163              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1164              		.loc 1 332 149 view .LVU314
 1165 0686 4154     		push	r12	#
 1166              		.cfi_offset 15, -24
 1167              		.cfi_offset 14, -32
 1168              		.cfi_offset 13, -40
GAS LISTING /tmp/ccG38KJh.s 			page 38


 1169              		.cfi_offset 12, -48
 1170              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1171              		.loc 1 337 31 view .LVU315
 1172 0688 4D89D4   		mov	r12, r10	# shift, _4
 1173 068b 4D29CC   		sub	r12, r9	# shift, _5
 1174              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1175              		.loc 1 332 149 view .LVU316
 1176 068e 53       		push	rbx	#
 1177              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1178              		.loc 1 342 27 view .LVU317
 1179 068f 4C8D2CD5 		lea	r13, 0[0+rdx*8]	# _6,
 1179      00000000 
 1180              		.cfi_offset 3, -56
 1181              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1182              		.loc 1 342 42 view .LVU318
 1183 0697 488D1CC5 		lea	rbx, 0[0+rax*8]	# _9,
 1183      00000000 
 1184              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1185              		.loc 1 332 149 view .LVU319
 1186 069f 4883E4E0 		and	rsp, -32	#,
 1187              	# sieve_extend.c:338:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1188              		.loc 1 338 31 view .LVU320
 1189 06a3 4983C140 		add	r9, 64	# tmp193,
 1190              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1191              		.loc 1 342 27 view .LVU321
 1192 06a7 4E8D342F 		lea	r14, [rdi+r13]	# _7,
 1193              	# sieve_extend.c:338:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1194              		.loc 1 338 31 view .LVU322
 1195 06ab 4D29D1   		sub	r9, r10	# shift_flipped, _4
 1196              	# sieve_extend.c:339:     register counter_t source_word = wordindex(source_start);
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1197              		.loc 1 339 24 view .LVU323
 1198 06ae 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, source_word
 1198      F8
 1199              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1200              		.loc 1 342 113 view .LVU324
 1201 06b3 48C7C6FF 		mov	rsi, -1	# tmp201,
 1201      FFFFFF
 1202              	.LVL65:
 1203              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1204              		.loc 1 342 42 view .LVU325
 1205 06ba 488D041F 		lea	rax, [rdi+rbx]	# _10,
 1206              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1207              		.loc 1 342 56 view .LVU326
 1208 06be C46299F7 		shlx	r11, QWORD PTR [rax], r12	# tmp195, *_10, shift
 1208      18
GAS LISTING /tmp/ccG38KJh.s 			page 39


 1209              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1210              		.loc 1 342 92 view .LVU327
 1211 06c3 C442B3F7 		shrx	r15, QWORD PTR [r14], r9	# tmp197, *_7, shift_flipped
 1211      3E
 1212              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1213              		.loc 1 342 113 view .LVU328
 1214 06c8 C462A9F7 		shlx	r8, rsi, r10	# tmp200, tmp201, _4
 1214      C6
 1215              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1216              		.loc 1 342 66 view .LVU329
 1217 06cd 4D09DF   		or	r15, r11	# tmp198, tmp195
 1218              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1219              		.loc 1 342 27 view .LVU330
 1220 06d0 4D8B16   		mov	r10, QWORD PTR [r14]	# tmp202, *_7
 1221              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1222              		.loc 1 342 111 view .LVU331
 1223 06d3 4D21F8   		and	r8, r15	# tmp202, tmp198
 1224              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1225              		.loc 1 342 27 view .LVU332
 1226 06d6 4D09C2   		or	r10, r8	# tmp202, tmp202
 1227              	# sieve_extend.c:335:     const counter_t destination_stop_word = wordindex(destination_stop);
 335:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1228              		.loc 1 335 21 view .LVU333
 1229 06d9 48C1E906 		shr	rcx, 6	# destination_stop_word,
 1230              	.LVL66:
 336:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1231              		.loc 1 336 5 is_stmt 1 view .LVU334
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1232              		.loc 1 337 5 view .LVU335
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1233              		.loc 1 338 5 view .LVU336
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1234              		.loc 1 339 5 view .LVU337
 340:sieve_extend.c **** 
 1235              		.loc 1 340 5 view .LVU338
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1236              		.loc 1 342 5 view .LVU339
 1237              	# sieve_extend.c:343:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 343:sieve_extend.c **** 
 1238              		.loc 1 343 8 is_stmt 0 view .LVU340
 1239 06dd 4C8D5A01 		lea	r11, 1[rdx]	# copy_word,
 1240              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1241              		.loc 1 342 27 view .LVU341
 1242 06e1 4D8916   		mov	QWORD PTR [r14], r10	# *_7, tmp203
 343:sieve_extend.c **** 
 1243              		.loc 1 343 5 is_stmt 1 view .LVU342
 1244              	.LVL67:
 1245              	# sieve_extend.c:343:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 343:sieve_extend.c **** 
 1246              		.loc 1 343 8 is_stmt 0 view .LVU343
GAS LISTING /tmp/ccG38KJh.s 			page 40


 1247 06e4 4C39D9   		cmp	rcx, r11	# destination_stop_word, copy_word
 1248 06e7 0F823103 		jb	.L141	#,
 1248      0000
 1249 06ed 4C8D7328 		lea	r14, 40[rbx]	# tmp205,
 1250 06f1 4D8D5508 		lea	r10, 8[r13]	# tmp204,
 1251 06f5 4D39F2   		cmp	r10, r14	# tmp204, tmp205
 1252 06f8 4D8D7528 		lea	r14, 40[r13]	# tmp208,
 1253 06fc 410F9DC7 		setge	r15b	#, tmp207
 1254 0700 4C39F3   		cmp	rbx, r14	# _9, tmp208
 1255 0703 410F9DC6 		setge	r14b	#, tmp210
 1256 0707 4508F7   		or	r15b, r14b	# tmp207, tmp210
 1257 070a 4489E6   		mov	esi, r12d	# _12, shift
 1258 070d 4589C8   		mov	r8d, r9d	# _14, shift_flipped
 1259 0710 0F843203 		je	.L50	#,
 1259      0000
 1260 0716 4C8D79FF 		lea	r15, -1[rcx]	# tmp212,
 1261 071a 4929D7   		sub	r15, rdx	# tmp213, copy_word
 1262 071d 4983FF03 		cmp	r15, 3	# tmp213,
 1263 0721 0F862103 		jbe	.L50	#,
 1263      0000
 1264 0727 4989CD   		mov	r13, rcx	# niters.205, destination_stop_word
 1265 072a 4929D5   		sub	r13, rdx	# niters.205, copy_word
 1266 072d 4D89EE   		mov	r14, r13	# bnd.206, niters.205
 1267 0730 49C1EE02 		shr	r14, 2	# bnd.206,
 1268 0734 49C1E605 		sal	r14, 5	# _165,
 1269 0738 498D76E0 		lea	rsi, -32[r14]	# tmp260,
 1270 073c 48C1EE05 		shr	rsi, 5	# tmp258,
 1271 0740 48FFC6   		inc	rsi	# tmp261
 1272 0743 488D5C1F 		lea	rbx, 8[rdi+rbx]	# vectp.215,
 1272      08
 1273 0748 4901FA   		add	r10, rdi	# vectp.220, bitstorage
 1274 074b 31D2     		xor	edx, edx	# ivtmp.237
 1275 074d C4C1796E 		vmovd	xmm1, r9d	# _14, _14
 1275      C9
 1276 0752 C4C1796E 		vmovd	xmm0, r12d	# _12, _12
 1276      C4
 1277 0757 83E607   		and	esi, 7	# tmp262,
 1278 075a 0F841A01 		je	.L51	#,
 1278      0000
 1279 0760 4883FE01 		cmp	rsi, 1	# tmp262,
 1280 0764 0F84E700 		je	.L103	#,
 1280      0000
 1281 076a 4883FE02 		cmp	rsi, 2	# tmp262,
 1282 076e 0F84BD00 		je	.L104	#,
 1282      0000
 1283 0774 4883FE03 		cmp	rsi, 3	# tmp262,
 1284 0778 0F849200 		je	.L105	#,
 1284      0000
 1285 077e 4883FE04 		cmp	rsi, 4	# tmp262,
 1286 0782 746C     		je	.L106	#,
 1287 0784 4883FE05 		cmp	rsi, 5	# tmp262,
 1288 0788 7445     		je	.L107	#,
 1289 078a 4883FE06 		cmp	rsi, 6	# tmp262,
 1290 078e 741E     		je	.L108	#,
 1291              	.LVL68:
 348:sieve_extend.c ****     }
 1292              		.loc 1 348 9 is_stmt 1 view .LVU344
GAS LISTING /tmp/ccG38KJh.s 			page 41


 1293              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1294              		.loc 1 348 58 is_stmt 0 view .LVU345
 1295 0790 C5FE6F30 		vmovdqu	ymm6, YMMWORD PTR [rax]	# tmp469, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1296              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1297              		.loc 1 348 105 view .LVU346
 1298 0794 C5FE6F3B 		vmovdqu	ymm7, YMMWORD PTR [rbx]	# tmp470, MEM[base: vectp.215_117, index: ivtmp.237_163, offset: 0
 1299              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1300              		.loc 1 348 58 view .LVU347
 1301 0798 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__29.213, tmp469, _14
 1302              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1303              		.loc 1 348 105 view .LVU348
 1304 079c C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__34.217, tmp470, _12
 1305 07a0 BA200000 		mov	edx, 32	# ivtmp.237,
 1305      00
 1306              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1307              		.loc 1 348 76 view .LVU349
 1308 07a5 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__37.218, vect__29.213, vect__34.217
 1309              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1310              		.loc 1 348 31 view .LVU350
 1311 07a9 C4C17E7F 		vmovdqu	YMMWORD PTR [r10], ymm4	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B], vect
 1311      22
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1312              		.loc 1 347 48 is_stmt 1 view .LVU351
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1313              		.loc 1 347 12 view .LVU352
 1314              	.L108:
 348:sieve_extend.c ****     }
 1315              		.loc 1 348 9 view .LVU353
 1316              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1317              		.loc 1 348 58 is_stmt 0 view .LVU354
 1318 07ae C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rax+rdx]	# tmp471, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1318      10
 1319              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1320              		.loc 1 348 105 view .LVU355
 1321 07b3 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rbx+rdx]	# tmp472, MEM[base: vectp.215_117, index: ivtmp.237_163, offse
 1321      13
 1322              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1323              		.loc 1 348 58 view .LVU356
 1324 07b8 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__29.213, tmp471, _14
 1325              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1326              		.loc 1 348 105 view .LVU357
 1327 07bc C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__34.217, tmp472, _12
 1328              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1329              		.loc 1 348 76 view .LVU358
 1330 07c0 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__37.218, vect__29.213, vect__34.217
 1330      DA
GAS LISTING /tmp/ccG38KJh.s 			page 42


 1331              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1332              		.loc 1 348 31 view .LVU359
 1333 07c5 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm11	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B],
 1333      1C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1334              		.loc 1 347 48 is_stmt 1 view .LVU360
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1335              		.loc 1 347 12 view .LVU361
 1336 07cb 4883C220 		add	rdx, 32	# ivtmp.237,
 1337              	.L107:
 348:sieve_extend.c ****     }
 1338              		.loc 1 348 9 view .LVU362
 1339              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1340              		.loc 1 348 58 is_stmt 0 view .LVU363
 1341 07cf C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rax+rdx]	# tmp473, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1341      10
 1342              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1343              		.loc 1 348 105 view .LVU364
 1344 07d4 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rbx+rdx]	# tmp474, MEM[base: vectp.215_117, index: ivtmp.237_163, offs
 1344      13
 1345              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1346              		.loc 1 348 58 view .LVU365
 1347 07d9 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__29.213, tmp473, _14
 1348              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1349              		.loc 1 348 105 view .LVU366
 1350 07dd C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__34.217, tmp474, _12
 1351              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1352              		.loc 1 348 76 view .LVU367
 1353 07e1 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__37.218, vect__29.213, vect__34.217
 1353      F7
 1354              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1355              		.loc 1 348 31 view .LVU368
 1356 07e6 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm6	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B], 
 1356      3412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1357              		.loc 1 347 48 is_stmt 1 view .LVU369
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1358              		.loc 1 347 12 view .LVU370
 1359 07ec 4883C220 		add	rdx, 32	# ivtmp.237,
 1360              	.L106:
 348:sieve_extend.c ****     }
 1361              		.loc 1 348 9 view .LVU371
 1362              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1363              		.loc 1 348 58 is_stmt 0 view .LVU372
 1364 07f0 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rax+rdx]	# tmp475, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1364      10
 1365              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1366              		.loc 1 348 105 view .LVU373
GAS LISTING /tmp/ccG38KJh.s 			page 43


 1367 07f5 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp476, MEM[base: vectp.215_117, index: ivtmp.237_163, offse
 1367      13
 1368              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1369              		.loc 1 348 58 view .LVU374
 1370 07fa C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__29.213, tmp475, _14
 1371              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1372              		.loc 1 348 105 view .LVU375
 1373 07fe C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__34.217, tmp476, _12
 1374              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1375              		.loc 1 348 76 view .LVU376
 1376 0802 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__37.218, vect__29.213, vect__34.217
 1377              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1378              		.loc 1 348 31 view .LVU377
 1379 0806 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm5	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B], 
 1379      2C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1380              		.loc 1 347 48 is_stmt 1 view .LVU378
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1381              		.loc 1 347 12 view .LVU379
 1382 080c 4883C220 		add	rdx, 32	# ivtmp.237,
 1383              	.L105:
 348:sieve_extend.c ****     }
 1384              		.loc 1 348 9 view .LVU380
 1385              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1386              		.loc 1 348 58 is_stmt 0 view .LVU381
 1387 0810 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rax+rdx]	# tmp477, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1387      10
 1388              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1389              		.loc 1 348 105 view .LVU382
 1390 0815 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rbx+rdx]	# tmp478, MEM[base: vectp.215_117, index: ivtmp.237_163, offs
 1390      13
 1391              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1392              		.loc 1 348 58 view .LVU383
 1393 081a C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__29.213, tmp477, _14
 1394              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1395              		.loc 1 348 105 view .LVU384
 1396 081e C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__34.217, tmp478, _12
 1397              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1398              		.loc 1 348 76 view .LVU385
 1399 0822 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__37.218, vect__29.213, vect__34.217
 1399      E3
 1400              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1401              		.loc 1 348 31 view .LVU386
 1402 0827 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm12	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B],
 1402      2412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1403              		.loc 1 347 48 is_stmt 1 view .LVU387
GAS LISTING /tmp/ccG38KJh.s 			page 44


 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1404              		.loc 1 347 12 view .LVU388
 1405 082d 4883C220 		add	rdx, 32	# ivtmp.237,
 1406              	.L104:
 348:sieve_extend.c ****     }
 1407              		.loc 1 348 9 view .LVU389
 1408              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1409              		.loc 1 348 58 is_stmt 0 view .LVU390
 1410 0831 C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rax+rdx]	# tmp479, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1410      10
 1411              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1412              		.loc 1 348 105 view .LVU391
 1413 0836 C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rbx+rdx]	# tmp480, MEM[base: vectp.215_117, index: ivtmp.237_163, offs
 1413      13
 1414              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1415              		.loc 1 348 58 view .LVU392
 1416 083b C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__29.213, tmp479, _14
 1417              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1418              		.loc 1 348 105 view .LVU393
 1419 083f C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__34.217, tmp480, _12
 1420              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1421              		.loc 1 348 76 view .LVU394
 1422 0843 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__37.218, vect__29.213, vect__34.217
 1423              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1424              		.loc 1 348 31 view .LVU395
 1425 0847 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm2	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B], 
 1425      1412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1426              		.loc 1 347 48 is_stmt 1 view .LVU396
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1427              		.loc 1 347 12 view .LVU397
 1428 084d 4883C220 		add	rdx, 32	# ivtmp.237,
 1429              	.L103:
 348:sieve_extend.c ****     }
 1430              		.loc 1 348 9 view .LVU398
 1431              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1432              		.loc 1 348 58 is_stmt 0 view .LVU399
 1433 0851 C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rax+rdx]	# tmp481, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1433      10
 1434              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1435              		.loc 1 348 105 view .LVU400
 1436 0856 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp482, MEM[base: vectp.215_117, index: ivtmp.237_163, offse
 1436      13
 1437              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1438              		.loc 1 348 58 view .LVU401
 1439 085b C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__29.213, tmp481, _14
 1440              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 45


 1441              		.loc 1 348 105 view .LVU402
 1442 085f C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__34.217, tmp482, _12
 1443              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1444              		.loc 1 348 76 view .LVU403
 1445 0863 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__37.218, vect__29.213, vect__34.217
 1446              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1447              		.loc 1 348 31 view .LVU404
 1448 0867 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm8	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B], 
 1448      0412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1449              		.loc 1 347 48 is_stmt 1 view .LVU405
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1450              		.loc 1 347 12 view .LVU406
 1451 086d 4883C220 		add	rdx, 32	# ivtmp.237,
 1452 0871 4C39F2   		cmp	rdx, r14	# ivtmp.237, _165
 1453 0874 0F842E01 		je	.L133	#,
 1453      0000
 1454              	.L51:
 348:sieve_extend.c ****     }
 1455              		.loc 1 348 9 discriminator 2 view .LVU407
 1456              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1457              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU408
 1458 087a C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rax+rdx]	# tmp448, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1458      10
 1459              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1460              		.loc 1 348 105 discriminator 2 view .LVU409
 1461 087f C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rbx+rdx]	# tmp449, MEM[base: vectp.215_117, index: ivtmp.237_163, offs
 1461      13
 1462              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1463              		.loc 1 348 58 discriminator 2 view .LVU410
 1464 0884 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__29.213, tmp448, _14
 1465              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1466              		.loc 1 348 105 discriminator 2 view .LVU411
 1467 0888 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__34.217, tmp449, _12
 1468              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1469              		.loc 1 348 76 discriminator 2 view .LVU412
 1470 088c C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__37.218, vect__29.213, vect__34.217
 1470      EC
 1471              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1472              		.loc 1 348 31 discriminator 2 view .LVU413
 1473 0891 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm13	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B],
 1473      2C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1474              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU414
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1475              		.loc 1 347 12 discriminator 2 view .LVU415
 348:sieve_extend.c ****     }
 1476              		.loc 1 348 9 discriminator 2 view .LVU416
 1477              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccG38KJh.s 			page 46


 348:sieve_extend.c ****     }
 1478              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU417
 1479 0897 C57E6F74 		vmovdqu	ymm14, YMMWORD PTR 32[rax+rdx]	# tmp450, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1479      1020
 1480              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1481              		.loc 1 348 105 discriminator 2 view .LVU418
 1482 089d C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rbx+rdx]	# tmp451, MEM[base: vectp.215_117, index: ivtmp.237_163, off
 1482      1320
 1483              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1484              		.loc 1 348 58 discriminator 2 view .LVU419
 1485 08a3 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__29.213, tmp450, _14
 1486              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1487              		.loc 1 348 105 discriminator 2 view .LVU420
 1488 08a7 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__34.217, tmp451, _12
 1489              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1490              		.loc 1 348 76 discriminator 2 view .LVU421
 1491 08ab C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__37.218, vect__29.213, vect__34.217
 1492              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1493              		.loc 1 348 31 discriminator 2 view .LVU422
 1494 08af C4C17E7F 		vmovdqu	YMMWORD PTR 32[r10+rdx], ymm7	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B]
 1494      7C1220
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1495              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU423
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1496              		.loc 1 347 12 discriminator 2 view .LVU424
 348:sieve_extend.c ****     }
 1497              		.loc 1 348 9 discriminator 2 view .LVU425
 1498              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1499              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU426
 1500 08b6 C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rax+rdx]	# tmp452, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1500      1040
 1501              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1502              		.loc 1 348 105 discriminator 2 view .LVU427
 1503 08bc C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rbx+rdx]	# tmp453, MEM[base: vectp.215_117, index: ivtmp.237_163, off
 1503      1340
 1504              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1505              		.loc 1 348 58 discriminator 2 view .LVU428
 1506 08c2 C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__29.213, tmp452, _14
 1507              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1508              		.loc 1 348 105 discriminator 2 view .LVU429
 1509 08c6 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__34.217, tmp453, _12
 1510              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1511              		.loc 1 348 76 discriminator 2 view .LVU430
 1512 08ca C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__37.218, vect__29.213, vect__34.217
 1512      C8
 1513              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 47


 1514              		.loc 1 348 31 discriminator 2 view .LVU431
 1515 08cf C4417E7F 		vmovdqu	YMMWORD PTR 64[r10+rdx], ymm9	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B]
 1515      4C1240
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1516              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU432
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1517              		.loc 1 347 12 discriminator 2 view .LVU433
 348:sieve_extend.c ****     }
 1518              		.loc 1 348 9 discriminator 2 view .LVU434
 1519              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1520              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU435
 1521 08d6 C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 96[rax+rdx]	# tmp454, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1521      1060
 1522              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1523              		.loc 1 348 105 discriminator 2 view .LVU436
 1524 08dc C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rbx+rdx]	# tmp455, MEM[base: vectp.215_117, index: ivtmp.237_163, of
 1524      1360
 1525              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1526              		.loc 1 348 58 discriminator 2 view .LVU437
 1527 08e2 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__29.213, tmp454, _14
 1528              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1529              		.loc 1 348 105 discriminator 2 view .LVU438
 1530 08e6 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__34.217, tmp455, _12
 1531              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1532              		.loc 1 348 76 discriminator 2 view .LVU439
 1533 08ea C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__37.218, vect__29.213, vect__34.217
 1533      F5
 1534              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1535              		.loc 1 348 31 discriminator 2 view .LVU440
 1536 08ef C4417E7F 		vmovdqu	YMMWORD PTR 96[r10+rdx], ymm14	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B
 1536      741260
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1537              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU441
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1538              		.loc 1 347 12 discriminator 2 view .LVU442
 348:sieve_extend.c ****     }
 1539              		.loc 1 348 9 discriminator 2 view .LVU443
 1540              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1541              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU444
 1542 08f6 C57E6FBC 		vmovdqu	ymm15, YMMWORD PTR 128[rax+rdx]	# tmp456, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1542      10800000 
 1542      00
 1543              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1544              		.loc 1 348 105 discriminator 2 view .LVU445
 1545 08ff C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rbx+rdx]	# tmp457, MEM[base: vectp.215_117, index: ivtmp.237_163, of
 1545      13800000 
 1545      00
 1546              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 48


 1547              		.loc 1 348 58 discriminator 2 view .LVU446
 1548 0908 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__29.213, tmp456, _14
 1549              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1550              		.loc 1 348 105 discriminator 2 view .LVU447
 1551 090c C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__34.217, tmp457, _12
 1552              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1553              		.loc 1 348 76 discriminator 2 view .LVU448
 1554 0910 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__37.218, vect__29.213, vect__34.217
 1555              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1556              		.loc 1 348 31 discriminator 2 view .LVU449
 1557 0914 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r10+rdx], ymm4	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B
 1557      A4128000 
 1557      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1558              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU450
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1559              		.loc 1 347 12 discriminator 2 view .LVU451
 348:sieve_extend.c ****     }
 1560              		.loc 1 348 9 discriminator 2 view .LVU452
 1561              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1562              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU453
 1563 091e C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 160[rax+rdx]	# tmp458, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1563      10A00000 
 1563      00
 1564              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1565              		.loc 1 348 105 discriminator 2 view .LVU454
 1566 0927 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rbx+rdx]	# tmp459, MEM[base: vectp.215_117, index: ivtmp.237_163, of
 1566      13A00000 
 1566      00
 1567              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1568              		.loc 1 348 58 discriminator 2 view .LVU455
 1569 0930 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__29.213, tmp458, _14
 1570              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1571              		.loc 1 348 105 discriminator 2 view .LVU456
 1572 0934 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__34.217, tmp459, _12
 1573              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1574              		.loc 1 348 76 discriminator 2 view .LVU457
 1575 0938 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__37.218, vect__29.213, vect__34.217
 1575      D1
 1576              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1577              		.loc 1 348 31 discriminator 2 view .LVU458
 1578 093d C4417E7F 		vmovdqu	YMMWORD PTR 160[r10+rdx], ymm10	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0
 1578      9412A000 
 1578      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1579              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU459
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1580              		.loc 1 347 12 discriminator 2 view .LVU460
GAS LISTING /tmp/ccG38KJh.s 			page 49


 348:sieve_extend.c ****     }
 1581              		.loc 1 348 9 discriminator 2 view .LVU461
 1582              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1583              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU462
 1584 0947 C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 192[rax+rdx]	# tmp460, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1584      10C00000 
 1584      00
 1585              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1586              		.loc 1 348 105 discriminator 2 view .LVU463
 1587 0950 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rbx+rdx]	# tmp461, MEM[base: vectp.215_117, index: ivtmp.237_163, o
 1587      13C00000 
 1587      00
 1588              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1589              		.loc 1 348 58 discriminator 2 view .LVU464
 1590 0959 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__29.213, tmp460, _14
 1591              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1592              		.loc 1 348 105 discriminator 2 view .LVU465
 1593 095d C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__34.217, tmp461, _12
 1594              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1595              		.loc 1 348 76 discriminator 2 view .LVU466
 1596 0961 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__37.218, vect__29.213, vect__34.217
 1596      FE
 1597              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1598              		.loc 1 348 31 discriminator 2 view .LVU467
 1599 0966 C4417E7F 		vmovdqu	YMMWORD PTR 192[r10+rdx], ymm15	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0
 1599      BC12C000 
 1599      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1600              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU468
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1601              		.loc 1 347 12 discriminator 2 view .LVU469
 348:sieve_extend.c ****     }
 1602              		.loc 1 348 9 discriminator 2 view .LVU470
 1603              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1604              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU471
 1605 0970 C5FE6FB4 		vmovdqu	ymm6, YMMWORD PTR 224[rax+rdx]	# tmp462, MEM[base: _10, index: ivtmp.237_163, offset: 0B]
 1605      10E00000 
 1605      00
 1606              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1607              		.loc 1 348 105 discriminator 2 view .LVU472
 1608 0979 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rbx+rdx]	# tmp463, MEM[base: vectp.215_117, index: ivtmp.237_163, of
 1608      13E00000 
 1608      00
 1609              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1610              		.loc 1 348 58 discriminator 2 view .LVU473
 1611 0982 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__29.213, tmp462, _14
 1612              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 50


 1613              		.loc 1 348 105 discriminator 2 view .LVU474
 1614 0986 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__34.217, tmp463, _12
 1615              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1616              		.loc 1 348 76 discriminator 2 view .LVU475
 1617 098a C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__37.218, vect__29.213, vect__34.217
 1618              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1619              		.loc 1 348 31 discriminator 2 view .LVU476
 1620 098e C4C17E7F 		vmovdqu	YMMWORD PTR 224[r10+rdx], ymm5	# MEM[base: vectp.220_125, index: ivtmp.237_163, offset: 0B
 1620      AC12E000 
 1620      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1621              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU477
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1622              		.loc 1 347 12 discriminator 2 view .LVU478
 1623 0998 4881C200 		add	rdx, 256	# ivtmp.237,
 1623      010000
 1624 099f 4C39F2   		cmp	rdx, r14	# ivtmp.237, _165
 1625 09a2 0F85D2FE 		jne	.L51	#,
 1625      FFFF
 1626              	.L133:
 1627 09a8 4C8B7C24 		mov	r15, QWORD PTR -8[rsp]	# source_word, %sfp
 1627      F8
 1628 09ad 4C89E8   		mov	rax, r13	# niters_vector_mult_vf.207, niters.205
 1629 09b0 4883E0FC 		and	rax, -4	# niters_vector_mult_vf.207,
 1630 09b4 4901C3   		add	r11, rax	# tmp.208, niters_vector_mult_vf.207
 1631 09b7 4901C7   		add	r15, rax	# source_word, niters_vector_mult_vf.207
 1632 09ba 4939C5   		cmp	r13, rax	# niters.205, niters_vector_mult_vf.207
 1633 09bd 7471     		je	.L140	#,
 1634              	.LVL69:
 348:sieve_extend.c ****     }
 1635              		.loc 1 348 9 view .LVU479
 1636              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1637              		.loc 1 348 105 is_stmt 0 view .LVU480
 1638 09bf C42299F7 		shlx	r8, QWORD PTR 8[rdi+r15*8], r12	# tmp226, *_33, shift
 1638      44FF08
 1639              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1640              		.loc 1 348 58 view .LVU481
 1641 09c6 C422B3F7 		shrx	r13, QWORD PTR [rdi+r15*8], r9	# tmp228, *_28, shift_flipped
 1641      2CFF
 1642              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1643              		.loc 1 347 48 view .LVU482
 1644 09cc 498D5B01 		lea	rbx, 1[r11]	# copy_word,
 1645              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1646              		.loc 1 348 76 view .LVU483
 1647 09d0 4D09E8   		or	r8, r13	# tmp230, tmp228
 1648 09d3 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_37, tmp230
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1649              		.loc 1 347 48 is_stmt 1 view .LVU484
 1650              	.LVL70:
 1651              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 51


 1652              		.loc 1 348 89 is_stmt 0 view .LVU485
 1653 09d7 4D8D5701 		lea	r10, 1[r15]	# _31,
 1654              	.LVL71:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1655              		.loc 1 347 12 is_stmt 1 view .LVU486
 1656              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1657              		.loc 1 347 5 is_stmt 0 view .LVU487
 1658 09db 4839D9   		cmp	rcx, rbx	# destination_stop_word, copy_word
 1659 09de 7250     		jb	.L140	#,
 348:sieve_extend.c ****     }
 1660              		.loc 1 348 9 is_stmt 1 view .LVU488
 1661              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1662              		.loc 1 348 58 is_stmt 0 view .LVU489
 1663 09e0 4A8B34D7 		mov	rsi, QWORD PTR [rdi+r10*8]	# *_135, *_135
 1664              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1665              		.loc 1 348 105 view .LVU490
 1666 09e4 C42299F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r12	# tmp231, *_140, shift
 1666      74D708
 1667              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1668              		.loc 1 348 58 view .LVU491
 1669 09eb C4E2B3F7 		shrx	rdx, rsi, r9	# tmp233, *_135, shift_flipped
 1669      D6
 1670              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1671              		.loc 1 347 48 view .LVU492
 1672 09f0 4983C302 		add	r11, 2	# copy_word,
 1673              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1674              		.loc 1 348 76 view .LVU493
 1675 09f4 4909D6   		or	r14, rdx	# tmp235, tmp233
 1676 09f7 4C8934DF 		mov	QWORD PTR [rdi+rbx*8], r14	# *_144, tmp235
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1677              		.loc 1 347 48 is_stmt 1 view .LVU494
 1678              	.LVL72:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1679              		.loc 1 347 12 view .LVU495
 1680              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1681              		.loc 1 348 89 is_stmt 0 view .LVU496
 1682 09fb 4983C702 		add	r15, 2	# _138,
 1683              	.LVL73:
 1684              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1685              		.loc 1 347 5 view .LVU497
 1686 09ff 4C39D9   		cmp	rcx, r11	# destination_stop_word, copy_word
 1687 0a02 722C     		jb	.L140	#,
 348:sieve_extend.c ****     }
 1688              		.loc 1 348 9 is_stmt 1 view .LVU498
 1689              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1690              		.loc 1 348 105 is_stmt 0 view .LVU499
 1691 0a04 C4A299F7 		shlx	rcx, QWORD PTR 8[rdi+r15*8], r12	# tmp236, *_97, shift
 1691      4CFF08
GAS LISTING /tmp/ccG38KJh.s 			page 52


 1692              	.LVL74:
 1693              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1694              		.loc 1 348 58 view .LVU500
 1695 0a0b 4E8B24FF 		mov	r12, QWORD PTR [rdi+r15*8]	# *_92, *_92
 1696 0a0f C442B3F7 		shrx	r9, r12, r9	# tmp238, *_92, shift_flipped
 1696      CC
 1697              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1698              		.loc 1 348 76 view .LVU501
 1699 0a14 4909C9   		or	r9, rcx	# tmp240, tmp236
 1700 0a17 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_101, tmp240
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1701              		.loc 1 347 48 is_stmt 1 view .LVU502
 1702              	.LVL75:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1703              		.loc 1 347 12 view .LVU503
 1704 0a1b C5F877   		vzeroupper
 1705              	.LVL76:
 1706              	.L141:
 1707              	# sieve_extend.c:350: }
 350:sieve_extend.c **** 
 1708              		.loc 1 350 1 is_stmt 0 view .LVU504
 1709 0a1e 488D65D8 		lea	rsp, -40[rbp]	#,
 1710 0a22 5B       		pop	rbx	#
 1711 0a23 415C     		pop	r12	#
 1712 0a25 415D     		pop	r13	#
 1713 0a27 415E     		pop	r14	#
 1714 0a29 415F     		pop	r15	#
 1715 0a2b 5D       		pop	rbp	#
 1716              		.cfi_remember_state
 1717              		.cfi_def_cfa 7, 8
 1718 0a2c C3       		ret	
 1719              	.LVL77:
 1720 0a2d 0F1F00   		.p2align 4,,10
 1721              		.p2align 3
 1722              	.L140:
 1723              		.cfi_restore_state
 350:sieve_extend.c **** 
 1724              		.loc 1 350 1 view .LVU505
 1725 0a30 C5F877   		vzeroupper
 1726 0a33 488D65D8 		lea	rsp, -40[rbp]	#,
 1727 0a37 5B       		pop	rbx	#
 1728 0a38 415C     		pop	r12	#
 1729 0a3a 415D     		pop	r13	#
 1730 0a3c 415E     		pop	r14	#
 1731 0a3e 415F     		pop	r15	#
 1732 0a40 5D       		pop	rbp	#
 1733              		.cfi_remember_state
 1734              		.cfi_def_cfa 7, 8
 1735 0a41 C3       		ret	
 1736              	.LVL78:
 1737              		.p2align 4,,10
 1738 0a42 660F1F44 		.p2align 3
 1738      0000
 1739              	.L50:
 1740              		.cfi_restore_state
GAS LISTING /tmp/ccG38KJh.s 			page 53


 350:sieve_extend.c **** 
 1741              		.loc 1 350 1 view .LVU506
 1742 0a48 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# source_word, %sfp
 1742      F8
 1743              	.LVL79:
 350:sieve_extend.c **** 
 1744              		.loc 1 350 1 view .LVU507
 1745 0a4d 4C01D9   		add	rcx, r11	# tmp241, source_word
 1746              	.LVL80:
 350:sieve_extend.c **** 
 1747              		.loc 1 350 1 view .LVU508
 1748 0a50 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp243,
 1749              	.LVL81:
 350:sieve_extend.c **** 
 1750              		.loc 1 350 1 view .LVU509
 1751 0a54 4C29EF   		sub	rdi, r13	# _161, _6
 1752 0a57 4989FF   		mov	r15, rdi	# tmp253, _161
 1753 0a5a 4929C7   		sub	r15, rax	# tmp253, ivtmp.227
 1754 0a5d 4983EF08 		sub	r15, 8	# tmp254,
 1755 0a61 49C1EF03 		shr	r15, 3	# tmp252,
 1756 0a65 49FFC7   		inc	r15	# tmp255
 1757              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1758              		.loc 1 348 31 view .LVU510
 1759 0a68 4C29DA   		sub	rdx, r11	# tmp244, source_word
 1760              	.LVL82:
 348:sieve_extend.c ****     }
 1761              		.loc 1 348 31 view .LVU511
 1762 0a6b 4183E707 		and	r15d, 7	# tmp256,
 1763 0a6f 0F84D600 		je	.L53	#,
 1763      0000
 1764 0a75 4983FF01 		cmp	r15, 1	# tmp256,
 1765 0a79 0F84AC00 		je	.L109	#,
 1765      0000
 1766 0a7f 4983FF02 		cmp	r15, 2	# tmp256,
 1767 0a83 0F848B00 		je	.L110	#,
 1767      0000
 1768 0a89 4983FF03 		cmp	r15, 3	# tmp256,
 1769 0a8d 746E     		je	.L111	#,
 1770 0a8f 4983FF04 		cmp	r15, 4	# tmp256,
 1771 0a93 7451     		je	.L112	#,
 1772 0a95 4983FF05 		cmp	r15, 5	# tmp256,
 1773 0a99 7434     		je	.L113	#,
 1774 0a9b 4983FF06 		cmp	r15, 6	# tmp256,
 1775 0a9f 7417     		je	.L114	#,
 1776              	.LVL83:
 348:sieve_extend.c ****     }
 1777              		.loc 1 348 9 is_stmt 1 view .LVU512
 1778              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1779              		.loc 1 348 58 is_stmt 0 view .LVU513
 1780 0aa1 C462BBF7 		shrx	r10, QWORD PTR [rax], r8	# tmp349, MEM[base: _153, offset: 0B], _14
 1780      10
 1781              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1782              		.loc 1 348 105 view .LVU514
 1783 0aa6 C462C9F7 		shlx	r13, QWORD PTR 8[rax], rsi	# tmp351, MEM[base: _153, offset: 8B], _12
GAS LISTING /tmp/ccG38KJh.s 			page 54


 1783      6808
 1784              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1785              		.loc 1 348 76 view .LVU515
 1786 0aac 4D09EA   		or	r10, r13	# tmp352, tmp351
 1787 0aaf 4C8954D0 		mov	QWORD PTR 8[rax+rdx*8], r10	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp352
 1787      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1788              		.loc 1 347 48 is_stmt 1 view .LVU516
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1789              		.loc 1 347 12 view .LVU517
 1790 0ab4 4883C008 		add	rax, 8	# ivtmp.227,
 1791              	.L114:
 348:sieve_extend.c ****     }
 1792              		.loc 1 348 9 view .LVU518
 1793              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1794              		.loc 1 348 58 is_stmt 0 view .LVU519
 1795 0ab8 C4E2BBF7 		shrx	rbx, QWORD PTR [rax], r8	# tmp354, MEM[base: _153, offset: 0B], _14
 1795      18
 1796              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1797              		.loc 1 348 105 view .LVU520
 1798 0abd C462C9F7 		shlx	r14, QWORD PTR 8[rax], rsi	# tmp356, MEM[base: _153, offset: 8B], _12
 1798      7008
 1799              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1800              		.loc 1 348 76 view .LVU521
 1801 0ac3 4C09F3   		or	rbx, r14	# tmp357, tmp356
 1802 0ac6 48895CD0 		mov	QWORD PTR 8[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp357
 1802      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1803              		.loc 1 347 48 is_stmt 1 view .LVU522
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1804              		.loc 1 347 12 view .LVU523
 1805 0acb 4883C008 		add	rax, 8	# ivtmp.227,
 1806              	.L113:
 348:sieve_extend.c ****     }
 1807              		.loc 1 348 9 view .LVU524
 1808              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1809              		.loc 1 348 58 is_stmt 0 view .LVU525
 1810 0acf C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp359, MEM[base: _153, offset: 0B], _14
 1810      08
 1811              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1812              		.loc 1 348 105 view .LVU526
 1813 0ad4 C462C9F7 		shlx	r12, QWORD PTR 8[rax], rsi	# tmp361, MEM[base: _153, offset: 8B], _12
 1813      6008
 1814              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1815              		.loc 1 348 76 view .LVU527
 1816 0ada 4C09E1   		or	rcx, r12	# tmp362, tmp361
 1817 0add 48894CD0 		mov	QWORD PTR 8[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp362
 1817      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1818              		.loc 1 347 48 is_stmt 1 view .LVU528
GAS LISTING /tmp/ccG38KJh.s 			page 55


 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1819              		.loc 1 347 12 view .LVU529
 1820 0ae2 4883C008 		add	rax, 8	# ivtmp.227,
 1821              	.L112:
 348:sieve_extend.c ****     }
 1822              		.loc 1 348 9 view .LVU530
 1823              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1824              		.loc 1 348 58 is_stmt 0 view .LVU531
 1825 0ae6 C462BBF7 		shrx	r11, QWORD PTR [rax], r8	# tmp364, MEM[base: _153, offset: 0B], _14
 1825      18
 1826              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1827              		.loc 1 348 105 view .LVU532
 1828 0aeb C462C9F7 		shlx	r9, QWORD PTR 8[rax], rsi	# tmp366, MEM[base: _153, offset: 8B], _12
 1828      4808
 1829              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1830              		.loc 1 348 76 view .LVU533
 1831 0af1 4D09CB   		or	r11, r9	# tmp367, tmp366
 1832 0af4 4C895CD0 		mov	QWORD PTR 8[rax+rdx*8], r11	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp367
 1832      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1833              		.loc 1 347 48 is_stmt 1 view .LVU534
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1834              		.loc 1 347 12 view .LVU535
 1835 0af9 4883C008 		add	rax, 8	# ivtmp.227,
 1836              	.L111:
 348:sieve_extend.c ****     }
 1837              		.loc 1 348 9 view .LVU536
 1838              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1839              		.loc 1 348 58 is_stmt 0 view .LVU537
 1840 0afd C462BBF7 		shrx	r15, QWORD PTR [rax], r8	# tmp369, MEM[base: _153, offset: 0B], _14
 1840      38
 1841              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1842              		.loc 1 348 105 view .LVU538
 1843 0b02 C462C9F7 		shlx	r10, QWORD PTR 8[rax], rsi	# tmp371, MEM[base: _153, offset: 8B], _12
 1843      5008
 1844              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1845              		.loc 1 348 76 view .LVU539
 1846 0b08 4D09D7   		or	r15, r10	# tmp372, tmp371
 1847 0b0b 4C897CD0 		mov	QWORD PTR 8[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp372
 1847      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1848              		.loc 1 347 48 is_stmt 1 view .LVU540
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1849              		.loc 1 347 12 view .LVU541
 1850 0b10 4883C008 		add	rax, 8	# ivtmp.227,
 1851              	.L110:
 348:sieve_extend.c ****     }
 1852              		.loc 1 348 9 view .LVU542
 1853              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1854              		.loc 1 348 58 is_stmt 0 view .LVU543
GAS LISTING /tmp/ccG38KJh.s 			page 56


 1855 0b14 C462BBF7 		shrx	r13, QWORD PTR [rax], r8	# tmp374, MEM[base: _153, offset: 0B], _14
 1855      28
 1856              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1857              		.loc 1 348 105 view .LVU544
 1858 0b19 C4E2C9F7 		shlx	rbx, QWORD PTR 8[rax], rsi	# tmp376, MEM[base: _153, offset: 8B], _12
 1858      5808
 1859              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1860              		.loc 1 348 76 view .LVU545
 1861 0b1f 4909DD   		or	r13, rbx	# tmp377, tmp376
 1862 0b22 4C896CD0 		mov	QWORD PTR 8[rax+rdx*8], r13	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp377
 1862      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1863              		.loc 1 347 48 is_stmt 1 view .LVU546
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1864              		.loc 1 347 12 view .LVU547
 1865 0b27 4883C008 		add	rax, 8	# ivtmp.227,
 1866              	.L109:
 348:sieve_extend.c ****     }
 1867              		.loc 1 348 9 view .LVU548
 1868              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1869              		.loc 1 348 58 is_stmt 0 view .LVU549
 1870 0b2b C462BBF7 		shrx	r14, QWORD PTR [rax], r8	# tmp379, MEM[base: _153, offset: 0B], _14
 1870      30
 1871              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1872              		.loc 1 348 105 view .LVU550
 1873 0b30 C4E2C9F7 		shlx	rcx, QWORD PTR 8[rax], rsi	# tmp381, MEM[base: _153, offset: 8B], _12
 1873      4808
 1874              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1875              		.loc 1 348 76 view .LVU551
 1876 0b36 4909CE   		or	r14, rcx	# tmp382, tmp381
 1877 0b39 4C8974D0 		mov	QWORD PTR 8[rax+rdx*8], r14	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp382
 1877      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1878              		.loc 1 347 48 is_stmt 1 view .LVU552
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1879              		.loc 1 347 12 view .LVU553
 1880 0b3e 4883C008 		add	rax, 8	# ivtmp.227,
 1881              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1882              		.loc 1 347 5 is_stmt 0 view .LVU554
 1883 0b42 4839F8   		cmp	rax, rdi	# ivtmp.227, _161
 1884 0b45 0F84D3FE 		je	.L141	#,
 1884      FFFF
 1885              	.L53:
 348:sieve_extend.c ****     }
 1886              		.loc 1 348 9 is_stmt 1 view .LVU555
 1887              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1888              		.loc 1 348 105 is_stmt 0 view .LVU556
 1889 0b4b C462C9F7 		shlx	r11, QWORD PTR 8[rax], rsi	# tmp247, MEM[base: _153, offset: 8B], _12
 1889      5808
 1890              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccG38KJh.s 			page 57


 348:sieve_extend.c ****     }
 1891              		.loc 1 348 58 view .LVU557
 1892 0b51 C462BBF7 		shrx	r12, QWORD PTR [rax], r8	# tmp245, MEM[base: _153, offset: 0B], _14
 1892      20
 1893              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1894              		.loc 1 348 76 view .LVU558
 1895 0b56 4D09DC   		or	r12, r11	# tmp249, tmp247
 1896 0b59 4C8964D0 		mov	QWORD PTR 8[rax+rdx*8], r12	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp249
 1896      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1897              		.loc 1 347 48 is_stmt 1 view .LVU559
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1898              		.loc 1 347 12 view .LVU560
 1899 0b5e 4C8D6810 		lea	r13, 16[rax]	# ivtmp.227,
 1900 0b62 4C8D6018 		lea	r12, 24[rax]	# ivtmp.227,
 1901              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1902              		.loc 1 348 105 is_stmt 0 view .LVU561
 1903 0b66 C462C9F7 		shlx	r10, QWORD PTR 16[rax], rsi	# tmp310, MEM[base: _153, offset: 8B], _12
 1903      5010
 1904              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1905              		.loc 1 348 58 view .LVU562
 1906 0b6c C462BBF7 		shrx	r15, QWORD PTR 8[rax], r8	# tmp308, MEM[base: _153, offset: 0B], _14
 1906      7808
 1907              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1908              		.loc 1 348 76 view .LVU563
 1909 0b72 4D09D7   		or	r15, r10	# tmp311, tmp310
 1910 0b75 4C897CD0 		mov	QWORD PTR 16[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp311
 1910      10
 1911 0b7a 4C8D4808 		lea	r9, 8[rax]	# tmp257,
 348:sieve_extend.c ****     }
 1912              		.loc 1 348 9 is_stmt 1 view .LVU564
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1913              		.loc 1 347 48 view .LVU565
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1914              		.loc 1 347 12 view .LVU566
 348:sieve_extend.c ****     }
 1915              		.loc 1 348 9 view .LVU567
 1916 0b7e 4C8D4820 		lea	r9, 32[rax]	# ivtmp.227,
 1917              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1918              		.loc 1 348 105 is_stmt 0 view .LVU568
 1919 0b82 C442C9F7 		shlx	r14, QWORD PTR 8[r13], rsi	# tmp316, MEM[base: _153, offset: 8B], _12
 1919      7508
 1920              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1921              		.loc 1 348 58 view .LVU569
 1922 0b88 C4E2BBF7 		shrx	rbx, QWORD PTR 16[rax], r8	# tmp314, MEM[base: _153, offset: 0B], _14
 1922      5810
 1923              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1924              		.loc 1 348 76 view .LVU570
 1925 0b8e 4C09F3   		or	rbx, r14	# tmp317, tmp316
 1926 0b91 48895CD0 		mov	QWORD PTR 24[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp317
GAS LISTING /tmp/ccG38KJh.s 			page 58


 1926      18
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1927              		.loc 1 347 48 is_stmt 1 view .LVU571
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1928              		.loc 1 347 12 view .LVU572
 348:sieve_extend.c ****     }
 1929              		.loc 1 348 9 view .LVU573
 1930 0b96 4C8D6828 		lea	r13, 40[rax]	# ivtmp.227,
 1931              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1932              		.loc 1 348 105 is_stmt 0 view .LVU574
 1933 0b9a C442C9F7 		shlx	r11, QWORD PTR 8[r12], rsi	# tmp322, MEM[base: _153, offset: 8B], _12
 1933      5C2408
 1934              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1935              		.loc 1 348 58 view .LVU575
 1936 0ba1 C4E2BBF7 		shrx	rcx, QWORD PTR 24[rax], r8	# tmp320, MEM[base: _153, offset: 0B], _14
 1936      4818
 1937              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1938              		.loc 1 348 76 view .LVU576
 1939 0ba7 4C09D9   		or	rcx, r11	# tmp323, tmp322
 1940 0baa 48894CD0 		mov	QWORD PTR 32[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp323
 1940      20
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1941              		.loc 1 347 48 is_stmt 1 view .LVU577
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1942              		.loc 1 347 12 view .LVU578
 348:sieve_extend.c ****     }
 1943              		.loc 1 348 9 view .LVU579
 1944 0baf 4C8D6030 		lea	r12, 48[rax]	# ivtmp.227,
 1945              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1946              		.loc 1 348 105 is_stmt 0 view .LVU580
 1947 0bb3 C442C9F7 		shlx	r10, QWORD PTR 8[r9], rsi	# tmp328, MEM[base: _153, offset: 8B], _12
 1947      5108
 1948              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1949              		.loc 1 348 58 view .LVU581
 1950 0bb9 C462BBF7 		shrx	r15, QWORD PTR 32[rax], r8	# tmp326, MEM[base: _153, offset: 0B], _14
 1950      7820
 1951              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1952              		.loc 1 348 76 view .LVU582
 1953 0bbf 4D09D7   		or	r15, r10	# tmp329, tmp328
 1954 0bc2 4C897CD0 		mov	QWORD PTR 40[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp329
 1954      28
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1955              		.loc 1 347 48 is_stmt 1 view .LVU583
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1956              		.loc 1 347 12 view .LVU584
 348:sieve_extend.c ****     }
 1957              		.loc 1 348 9 view .LVU585
 1958 0bc7 4C8D4838 		lea	r9, 56[rax]	# ivtmp.227,
 1959              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1960              		.loc 1 348 58 is_stmt 0 view .LVU586
GAS LISTING /tmp/ccG38KJh.s 			page 59


 1961 0bcb C4E2BBF7 		shrx	rbx, QWORD PTR 40[rax], r8	# tmp332, MEM[base: _153, offset: 0B], _14
 1961      5828
 1962              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1963              		.loc 1 348 105 view .LVU587
 1964 0bd1 C442C9F7 		shlx	r14, QWORD PTR 8[r13], rsi	# tmp334, MEM[base: _153, offset: 8B], _12
 1964      7508
 1965              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1966              		.loc 1 348 76 view .LVU588
 1967 0bd7 4C09F3   		or	rbx, r14	# tmp335, tmp334
 1968 0bda 48895CD0 		mov	QWORD PTR 48[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp335
 1968      30
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1969              		.loc 1 347 48 is_stmt 1 view .LVU589
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1970              		.loc 1 347 12 view .LVU590
 348:sieve_extend.c ****     }
 1971              		.loc 1 348 9 view .LVU591
 1972              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1973              		.loc 1 348 58 is_stmt 0 view .LVU592
 1974 0bdf C4E2BBF7 		shrx	rcx, QWORD PTR 48[rax], r8	# tmp338, MEM[base: _153, offset: 0B], _14
 1974      4830
 1975              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1976              		.loc 1 348 105 view .LVU593
 1977 0be5 C442C9F7 		shlx	r11, QWORD PTR 8[r12], rsi	# tmp340, MEM[base: _153, offset: 8B], _12
 1977      5C2408
 1978              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1979              		.loc 1 348 76 view .LVU594
 1980 0bec 4C09D9   		or	rcx, r11	# tmp341, tmp340
 1981 0bef 48894CD0 		mov	QWORD PTR 56[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp341
 1981      38
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1982              		.loc 1 347 48 is_stmt 1 view .LVU595
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1983              		.loc 1 347 12 view .LVU596
 348:sieve_extend.c ****     }
 1984              		.loc 1 348 9 view .LVU597
 1985              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1986              		.loc 1 348 58 is_stmt 0 view .LVU598
 1987 0bf4 C462BBF7 		shrx	r15, QWORD PTR 56[rax], r8	# tmp344, MEM[base: _153, offset: 0B], _14
 1987      7838
 1988              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1989              		.loc 1 348 105 view .LVU599
 1990 0bfa C442C9F7 		shlx	r10, QWORD PTR 8[r9], rsi	# tmp346, MEM[base: _153, offset: 8B], _12
 1990      5108
 1991              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1992              		.loc 1 348 76 view .LVU600
 1993 0c00 4D09D7   		or	r15, r10	# tmp347, tmp346
 1994 0c03 4C897CD0 		mov	QWORD PTR 64[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp347
 1994      40
GAS LISTING /tmp/ccG38KJh.s 			page 60


 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1995              		.loc 1 347 48 is_stmt 1 view .LVU601
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1996              		.loc 1 347 12 view .LVU602
 1997 0c08 4883C040 		add	rax, 64	# ivtmp.227,
 1998              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1999              		.loc 1 347 5 is_stmt 0 view .LVU603
 2000 0c0c 4839F8   		cmp	rax, rdi	# ivtmp.227, _161
 2001 0c0f 0F8536FF 		jne	.L53	#,
 2001      FFFF
 2002 0c15 E904FEFF 		jmp	.L141	#
 2002      FF
 2003              		.cfi_endproc
 2004              	.LFE61:
 2006 0c1a 660F1F44 		.p2align 4
 2006      0000
 2008              	continuePattern_aligned:
 2009              	.LVL84:
 2010              	.LFB60:
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2011              		.loc 1 309 146 is_stmt 1 view -0
 2012              		.cfi_startproc
 310:sieve_extend.c **** 
 2013              		.loc 1 310 5 view .LVU605
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2014              		.loc 1 312 5 view .LVU606
 2015              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2016              		.loc 1 309 146 is_stmt 0 view .LVU607
 2017 0c20 55       		push	rbp	#
 2018              		.cfi_def_cfa_offset 16
 2019              		.cfi_offset 6, -16
 2020 0c21 4889E5   		mov	rbp, rsp	#,
 2021              		.cfi_def_cfa_register 6
 2022 0c24 4157     		push	r15	#
 2023 0c26 4156     		push	r14	#
 2024              		.cfi_offset 15, -24
 2025              		.cfi_offset 14, -32
 2026              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2027              		.loc 1 317 39 view .LVU608
 2028 0c28 4989FE   		mov	r14, rdi	# _5, bitstorage
 2029              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2030              		.loc 1 309 146 view .LVU609
 2031 0c2b 4155     		push	r13	#
 2032 0c2d 4154     		push	r12	#
 2033              		.cfi_offset 13, -40
 2034              		.cfi_offset 12, -48
 2035 0c2f 4989D4   		mov	r12, rdx	# size, tmp267
 2036              	# sieve_extend.c:313:     const counter_t copy_start = source_start + size;
 313:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2037              		.loc 1 313 21 view .LVU610
 2038 0c32 4801F2   		add	rdx, rsi	# copy_start, source_start
 2039              	.LVL85:
 2040              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
GAS LISTING /tmp/ccG38KJh.s 			page 61


 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2041              		.loc 1 309 146 view .LVU611
 2042 0c35 53       		push	rbx	#
 2043              	# sieve_extend.c:314:     counter_t source_word = wordindex(source_start);
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2044              		.loc 1 314 15 view .LVU612
 2045 0c36 48C1EE06 		shr	rsi, 6	# source_start,
 2046              	.LVL86:
 2047              	# sieve_extend.c:315:     counter_t copy_word = wordindex(copy_start);
 315:sieve_extend.c ****     
 2048              		.loc 1 315 15 view .LVU613
 2049 0c3a 4889D0   		mov	rax, rdx	# ivtmp.279, copy_start
 2050              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2051              		.loc 1 309 146 view .LVU614
 2052 0c3d 4883E4E0 		and	rsp, -32	#,
 2053 0c41 4883EC20 		sub	rsp, 32	#,
 2054              		.cfi_offset 3, -56
 2055              	# sieve_extend.c:312:     const counter_t destination_stop_word = wordindex(destination_stop);
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2056              		.loc 1 312 21 view .LVU615
 2057 0c45 4889CB   		mov	rbx, rcx	# tmp268, tmp268
 2058              	# sieve_extend.c:315:     counter_t copy_word = wordindex(copy_start);
 315:sieve_extend.c ****     
 2059              		.loc 1 315 15 view .LVU616
 2060 0c48 48C1E806 		shr	rax, 6	# ivtmp.279,
 2061              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2062              		.loc 1 317 56 view .LVU617
 2063 0c4c 89D1     		mov	ecx, edx	# tmp159, copy_start
 2064              	.LVL87:
 2065              	# sieve_extend.c:314:     counter_t source_word = wordindex(source_start);
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2066              		.loc 1 314 15 view .LVU618
 2067 0c4e 48893424 		mov	QWORD PTR [rsp], rsi	# %sfp, source_word
 2068              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2069              		.loc 1 317 39 view .LVU619
 2070 0c52 48C1E603 		sal	rsi, 3	# _4,
 2071 0c56 4901F6   		add	r14, rsi	# _5, _4
 2072              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2073              		.loc 1 317 56 view .LVU620
 2074 0c59 F7D1     		not	ecx	# tmp159
 2075 0c5b 48C7C2FF 		mov	rdx, -1	# tmp162,
 2075      FFFFFF
 2076              	# sieve_extend.c:312:     const counter_t destination_stop_word = wordindex(destination_stop);
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2077              		.loc 1 312 21 view .LVU621
 2078 0c62 48C1EB06 		shr	rbx, 6	# tmp268,
 2079              	.LVL88:
 313:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2080              		.loc 1 313 5 is_stmt 1 view .LVU622
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2081              		.loc 1 314 5 view .LVU623
 315:sieve_extend.c ****     
 2082              		.loc 1 315 5 view .LVU624
GAS LISTING /tmp/ccG38KJh.s 			page 62


 317:sieve_extend.c **** 
 2083              		.loc 1 317 5 view .LVU625
 2084              	# sieve_extend.c:319:     while (copy_word + size <= destination_stop_word) {
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2085              		.loc 1 319 22 is_stmt 0 view .LVU626
 2086 0c66 4D8D0C04 		lea	r9, [r12+rax]	# ivtmp.279,
 2087              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2088              		.loc 1 317 39 view .LVU627
 2089 0c6a 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, _4
 2089      08
 2090              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2091              		.loc 1 309 146 view .LVU628
 2092 0c6f 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, bitstorage
 2092      10
 2093              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2094              		.loc 1 317 56 view .LVU629
 2095 0c74 C4E2F3F7 		shrx	rsi, rdx, rcx	# tmp161, tmp162, tmp159
 2095      F2
 2096              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2097              		.loc 1 317 53 view .LVU630
 2098 0c79 C442C8F2 		andn	r8, rsi, QWORD PTR [r14]	# tmp165, tmp161, *_5
 2098      06
 2099              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 2100              		.loc 1 317 27 view .LVU631
 2101 0c7e 4C8904C7 		mov	QWORD PTR [rdi+rax*8], r8	# *_13, tmp165
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2102              		.loc 1 319 5 is_stmt 1 view .LVU632
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2103              		.loc 1 319 11 view .LVU633
 2104 0c82 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.279
 2105 0c85 0F824D01 		jb	.L144	#,
 2105      0000
 2106 0c8b 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _12,
 2106      00000000 
 2107 0c93 4901FD   		add	r13, rdi	# tmp166, bitstorage
 2108 0c96 4A8D04CD 		lea	rax, 0[0+r9*8]	# tmp167,
 2108      00000000 
 2109              	# sieve_extend.c:320:         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)s
 320:sieve_extend.c ****         copy_word += size;
 2110              		.loc 1 320 9 is_stmt 0 view .LVU634
 2111 0c9e 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 2111      00000000 
 2112 0ca6 4929C5   		sub	r13, rax	# _135, tmp167
 2113              	.LVL89:
 2114              	.L145:
 320:sieve_extend.c ****         copy_word += size;
 2115              		.loc 1 320 9 is_stmt 1 view .LVU635
 2116              	.LBB377:
 2117              	.LBI377:
 2118              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
GAS LISTING /tmp/ccG38KJh.s 			page 63


   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 2119              		.loc 2 31 1 view .LVU636
 2120              	.LBB378:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 2121              		.loc 2 34 3 view .LVU637
 2122              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2123              		.loc 2 34 10 is_stmt 0 view .LVU638
 2124 0ca9 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp169,
 2124      00
 2125 0cae 4C89FA   		mov	rdx, r15	#, _15
 2126 0cb1 4C89F6   		mov	rsi, r14	#, _5
 2127 0cb4 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.279
 2127      18
 2128 0cb9 E8000000 		call	memcpy@PLT	#
 2128      00
 2129              	.LVL90:
 2130              		.loc 2 34 10 view .LVU639
 2131              	.LBE378:
 2132              	.LBE377:
 321:sieve_extend.c ****     }
 2133              		.loc 1 321 9 is_stmt 1 view .LVU640
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2134              		.loc 1 319 11 view .LVU641
 2135 0cbe 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2135      18
 2136 0cc3 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.279,
 2137 0cc7 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.279
GAS LISTING /tmp/ccG38KJh.s 			page 64


 2138 0cca 0F820801 		jb	.L144	#,
 2138      0000
 320:sieve_extend.c ****         copy_word += size;
 2139              		.loc 1 320 9 view .LVU642
 2140              	.LVL91:
 2141              	.LBB386:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2142              		.loc 2 31 1 view .LVU643
 2143              	.LBB379:
 2144              		.loc 2 34 3 view .LVU644
 2145              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2146              		.loc 2 34 10 is_stmt 0 view .LVU645
 2147 0cd0 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp246,
 2147      00
 2148 0cd5 4C89FA   		mov	rdx, r15	#, _15
 2149 0cd8 4C89F6   		mov	rsi, r14	#, _5
 2150 0cdb 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.279
 2150      18
 2151              	.LVL92:
 2152              		.loc 2 34 10 view .LVU646
 2153 0ce0 E8000000 		call	memcpy@PLT	#
 2153      00
 2154              	.LVL93:
 2155              		.loc 2 34 10 view .LVU647
 2156              	.LBE379:
 2157              	.LBE386:
 321:sieve_extend.c ****     }
 2158              		.loc 1 321 9 is_stmt 1 view .LVU648
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2159              		.loc 1 319 11 view .LVU649
 2160 0ce5 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2160      18
 2161 0cea 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.279,
 2162 0cee 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.279
 2163 0cf1 0F82E100 		jb	.L144	#,
 2163      0000
 320:sieve_extend.c ****         copy_word += size;
 2164              		.loc 1 320 9 view .LVU650
 2165              	.LVL94:
 2166              	.LBB387:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2167              		.loc 2 31 1 view .LVU651
 2168              	.LBB380:
 2169              		.loc 2 34 3 view .LVU652
 2170              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2171              		.loc 2 34 10 is_stmt 0 view .LVU653
 2172 0cf7 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp249,
 2172      00
 2173 0cfc 4C89FA   		mov	rdx, r15	#, _15
 2174 0cff 4C89F6   		mov	rsi, r14	#, _5
 2175 0d02 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, ivtmp.279
 2175      18
 2176 0d07 E8000000 		call	memcpy@PLT	#
 2176      00
 2177              	.LVL95:
 2178              		.loc 2 34 10 view .LVU654
 2179              	.LBE380:
GAS LISTING /tmp/ccG38KJh.s 			page 65


 2180              	.LBE387:
 321:sieve_extend.c ****     }
 2181              		.loc 1 321 9 is_stmt 1 view .LVU655
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2182              		.loc 1 319 11 view .LVU656
 2183 0d0c 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2183      18
 2184 0d11 4E8D1C20 		lea	r11, [rax+r12]	# ivtmp.279,
 2185 0d15 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.279
 2186 0d18 0F82BA00 		jb	.L144	#,
 2186      0000
 320:sieve_extend.c ****         copy_word += size;
 2187              		.loc 1 320 9 view .LVU657
 2188              	.LVL96:
 2189              	.LBB388:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2190              		.loc 2 31 1 view .LVU658
 2191              	.LBB381:
 2192              		.loc 2 34 3 view .LVU659
 2193              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2194              		.loc 2 34 10 is_stmt 0 view .LVU660
 2195 0d1e 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp252,
 2195      00
 2196 0d23 4C89FA   		mov	rdx, r15	#, _15
 2197 0d26 4C89F6   		mov	rsi, r14	#, _5
 2198 0d29 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, ivtmp.279
 2198      18
 2199 0d2e E8000000 		call	memcpy@PLT	#
 2199      00
 2200              	.LVL97:
 2201              		.loc 2 34 10 view .LVU661
 2202              	.LBE381:
 2203              	.LBE388:
 321:sieve_extend.c ****     }
 2204              		.loc 1 321 9 is_stmt 1 view .LVU662
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2205              		.loc 1 319 11 view .LVU663
 2206 0d33 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2206      18
 2207 0d38 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.279,
 2208 0d3c 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.279
 2209 0d3f 0F829300 		jb	.L144	#,
 2209      0000
 320:sieve_extend.c ****         copy_word += size;
 2210              		.loc 1 320 9 view .LVU664
 2211              	.LVL98:
 2212              	.LBB389:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2213              		.loc 2 31 1 view .LVU665
 2214              	.LBB382:
 2215              		.loc 2 34 3 view .LVU666
 2216              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2217              		.loc 2 34 10 is_stmt 0 view .LVU667
 2218 0d45 4C89FA   		mov	rdx, r15	#, _15
 2219 0d48 498D7CCD 		lea	rdi, 0[r13+rcx*8]	# tmp255,
 2219      00
 2220 0d4d 4C89F6   		mov	rsi, r14	#, _5
GAS LISTING /tmp/ccG38KJh.s 			page 66


 2221 0d50 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, ivtmp.279
 2221      18
 2222 0d55 E8000000 		call	memcpy@PLT	#
 2222      00
 2223              	.LVL99:
 2224              		.loc 2 34 10 view .LVU668
 2225              	.LBE382:
 2226              	.LBE389:
 321:sieve_extend.c ****     }
 2227              		.loc 1 321 9 is_stmt 1 view .LVU669
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2228              		.loc 1 319 11 view .LVU670
 2229 0d5a 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2229      18
 2230 0d5f 4A8D1420 		lea	rdx, [rax+r12]	# ivtmp.279,
 2231 0d63 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.279
 2232 0d66 7270     		jb	.L144	#,
 320:sieve_extend.c ****         copy_word += size;
 2233              		.loc 1 320 9 view .LVU671
 2234              	.LVL100:
 2235              	.LBB390:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2236              		.loc 2 31 1 view .LVU672
 2237              	.LBB383:
 2238              		.loc 2 34 3 view .LVU673
 2239              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2240              		.loc 2 34 10 is_stmt 0 view .LVU674
 2241 0d68 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, ivtmp.279
 2241      18
 2242 0d6d 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp258,
 2242      00
 2243 0d72 4C89F6   		mov	rsi, r14	#, _5
 2244 0d75 4C89FA   		mov	rdx, r15	#, _15
 2245 0d78 E8000000 		call	memcpy@PLT	#
 2245      00
 2246              	.LVL101:
 2247              		.loc 2 34 10 view .LVU675
 2248              	.LBE383:
 2249              	.LBE390:
 321:sieve_extend.c ****     }
 2250              		.loc 1 321 9 is_stmt 1 view .LVU676
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2251              		.loc 1 319 11 view .LVU677
 2252 0d7d 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2252      18
 2253 0d82 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.279,
 2254 0d86 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.279
 2255 0d89 724D     		jb	.L144	#,
 320:sieve_extend.c ****         copy_word += size;
 2256              		.loc 1 320 9 view .LVU678
 2257              	.LVL102:
 2258              	.LBB391:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2259              		.loc 2 31 1 view .LVU679
 2260              	.LBB384:
 2261              		.loc 2 34 3 view .LVU680
 2262              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccG38KJh.s 			page 67


 2263              		.loc 2 34 10 is_stmt 0 view .LVU681
 2264 0d8b 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.279
 2264      18
 2265 0d90 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp261,
 2265      00
 2266 0d95 4C89FA   		mov	rdx, r15	#, _15
 2267 0d98 4C89F6   		mov	rsi, r14	#, _5
 2268 0d9b E8000000 		call	memcpy@PLT	#
 2268      00
 2269              	.LVL103:
 2270              		.loc 2 34 10 view .LVU682
 2271              	.LBE384:
 2272              	.LBE391:
 321:sieve_extend.c ****     }
 2273              		.loc 1 321 9 is_stmt 1 view .LVU683
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2274              		.loc 1 319 11 view .LVU684
 2275 0da0 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2275      18
 2276 0da5 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.279,
 2277 0da9 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.279
 2278 0dac 722A     		jb	.L144	#,
 320:sieve_extend.c ****         copy_word += size;
 2279              		.loc 1 320 9 view .LVU685
 2280              	.LVL104:
 2281              	.LBB392:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2282              		.loc 2 31 1 view .LVU686
 2283              	.LBB385:
 2284              		.loc 2 34 3 view .LVU687
 2285              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2286              		.loc 2 34 10 is_stmt 0 view .LVU688
 2287 0dae 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp264,
 2287      00
 2288 0db3 4C89FA   		mov	rdx, r15	#, _15
 2289 0db6 4C89F6   		mov	rsi, r14	#, _5
 2290 0db9 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, ivtmp.279
 2290      18
 2291 0dbe E8000000 		call	memcpy@PLT	#
 2291      00
 2292              	.LVL105:
 2293              		.loc 2 34 10 view .LVU689
 2294              	.LBE385:
 2295              	.LBE392:
 321:sieve_extend.c ****     }
 2296              		.loc 1 321 9 is_stmt 1 view .LVU690
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2297              		.loc 1 319 11 view .LVU691
 2298 0dc3 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.279, %sfp
 2298      18
 2299              	.LVL106:
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2300              		.loc 1 319 11 is_stmt 0 view .LVU692
 2301 0dc8 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.279,
 2302              	.LVL107:
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2303              		.loc 1 319 11 view .LVU693
GAS LISTING /tmp/ccG38KJh.s 			page 68


 2304 0dcc 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.279
 2305 0dcf 0F83D4FE 		jnb	.L145	#,
 2305      FFFF
 2306              	.LVL108:
 2307              		.p2align 4,,10
 2308 0dd5 0F1F00   		.p2align 3
 2309              	.L144:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2310              		.loc 1 324 10 is_stmt 1 view .LVU694
 2311 0dd8 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.279
 2312 0ddb 0F86F701 		jbe	.L249	#,
 2312      0000
 2313 0de1 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# _4, %sfp
 2313      08
 2314 0de6 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 2314      00000000 
 2315              	.LVL109:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2316              		.loc 1 324 10 is_stmt 0 view .LVU695
 2317 0dee 498D7C24 		lea	rdi, 32[r12]	# tmp175,
 2317      20
 2318 0df3 4939FD   		cmp	r13, rdi	# _4, tmp175
 2319 0df6 4D8D5520 		lea	r10, 32[r13]	# tmp178,
 2320 0dfa 410F9DC7 		setge	r15b	#, tmp177
 2321 0dfe 4D39D4   		cmp	r12, r10	# _41, tmp178
 2322 0e01 410F9DC3 		setge	r11b	#, tmp180
 2323 0e05 4508DF   		or	r15b, r11b	# tmp177, tmp180
 2324 0e08 0F84FA01 		je	.L147	#,
 2324      0000
 2325 0e0e 488D4BFF 		lea	rcx, -1[rbx]	# tmp182,
 2326 0e12 4829C1   		sub	rcx, rax	# tmp183, ivtmp.279
 2327 0e15 4883F908 		cmp	rcx, 8	# tmp183,
 2328 0e19 0F86E901 		jbe	.L147	#,
 2328      0000
 2329 0e1f 4989D9   		mov	r9, rbx	# niters.248, destination_stop_word
 2330 0e22 4929C1   		sub	r9, rax	# niters.248, ivtmp.279
 2331 0e25 4C89CE   		mov	rsi, r9	# bnd.249, niters.248
 2332 0e28 48C1EE02 		shr	rsi, 2	# bnd.249,
 2333 0e2c 48C1E605 		sal	rsi, 5	# _128,
 2334 0e30 4C8D46E0 		lea	r8, -32[rsi]	# tmp198,
 2335 0e34 49C1E805 		shr	r8, 5	# tmp196,
 2336 0e38 49FFC0   		inc	r8	# tmp199
 2337 0e3b 4C036424 		add	r12, QWORD PTR 16[rsp]	# vectp.257, %sfp
 2337      10
 2338 0e40 31D2     		xor	edx, edx	# ivtmp.270
 2339 0e42 4183E007 		and	r8d, 7	# tmp200,
 2340 0e46 0F849D00 		je	.L148	#,
 2340      0000
 2341 0e4c 4983F801 		cmp	r8, 1	# tmp200,
 2342 0e50 747E     		je	.L209	#,
 2343 0e52 4983F802 		cmp	r8, 2	# tmp200,
 2344 0e56 7468     		je	.L210	#,
 2345 0e58 4983F803 		cmp	r8, 3	# tmp200,
 2346 0e5c 7452     		je	.L211	#,
 2347 0e5e 4983F804 		cmp	r8, 4	# tmp200,
 2348 0e62 743C     		je	.L212	#,
 2349 0e64 4983F805 		cmp	r8, 5	# tmp200,
GAS LISTING /tmp/ccG38KJh.s 			page 69


 2350 0e68 7426     		je	.L213	#,
 2351 0e6a 4983F806 		cmp	r8, 6	# tmp200,
 2352 0e6e 7410     		je	.L214	#,
 2353              	.LVL110:
 325:sieve_extend.c ****         source_word++;
 2354              		.loc 1 325 9 is_stmt 1 view .LVU696
 2355              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2356              		.loc 1 325 31 is_stmt 0 view .LVU697
 2357 0e70 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14]	# tmp306, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2357      0E
 2358 0e75 BA200000 		mov	edx, 32	# ivtmp.270,
 2358      00
 2359 0e7a C4C17E7F 		vmovdqu	YMMWORD PTR [r12], ymm1	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], tmp30
 2359      0C24
 326:sieve_extend.c ****         copy_word++;
 2360              		.loc 1 326 9 is_stmt 1 view .LVU698
 327:sieve_extend.c ****     }
 2361              		.loc 1 327 9 view .LVU699
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2362              		.loc 1 324 10 view .LVU700
 2363              	.L214:
 325:sieve_extend.c ****         source_word++;
 2364              		.loc 1 325 9 view .LVU701
 2365              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2366              		.loc 1 325 31 is_stmt 0 view .LVU702
 2367 0e80 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r14+rdx]	# tmp307, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2367      3C16
 2368 0e86 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2368      3C14
 326:sieve_extend.c ****         copy_word++;
 2369              		.loc 1 326 9 is_stmt 1 view .LVU703
 327:sieve_extend.c ****     }
 2370              		.loc 1 327 9 view .LVU704
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2371              		.loc 1 324 10 view .LVU705
 2372 0e8c 4883C220 		add	rdx, 32	# ivtmp.270,
 2373              	.L213:
 325:sieve_extend.c ****         source_word++;
 2374              		.loc 1 325 9 view .LVU706
 2375              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2376              		.loc 1 325 31 is_stmt 0 view .LVU707
 2377 0e90 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r14+rdx]	# tmp308, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2377      3416
 2378 0e96 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2378      3414
 326:sieve_extend.c ****         copy_word++;
 2379              		.loc 1 326 9 is_stmt 1 view .LVU708
 327:sieve_extend.c ****     }
 2380              		.loc 1 327 9 view .LVU709
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2381              		.loc 1 324 10 view .LVU710
 2382 0e9c 4883C220 		add	rdx, 32	# ivtmp.270,
 2383              	.L212:
 325:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccG38KJh.s 			page 70


 2384              		.loc 1 325 9 view .LVU711
 2385              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2386              		.loc 1 325 31 is_stmt 0 view .LVU712
 2387 0ea0 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r14+rdx]	# tmp309, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2387      2C16
 2388 0ea6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm5	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2388      2C14
 326:sieve_extend.c ****         copy_word++;
 2389              		.loc 1 326 9 is_stmt 1 view .LVU713
 327:sieve_extend.c ****     }
 2390              		.loc 1 327 9 view .LVU714
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2391              		.loc 1 324 10 view .LVU715
 2392 0eac 4883C220 		add	rdx, 32	# ivtmp.270,
 2393              	.L211:
 325:sieve_extend.c ****         source_word++;
 2394              		.loc 1 325 9 view .LVU716
 2395              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2396              		.loc 1 325 31 is_stmt 0 view .LVU717
 2397 0eb0 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rdx]	# tmp310, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2397      2416
 2398 0eb6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm4	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2398      2414
 326:sieve_extend.c ****         copy_word++;
 2399              		.loc 1 326 9 is_stmt 1 view .LVU718
 327:sieve_extend.c ****     }
 2400              		.loc 1 327 9 view .LVU719
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2401              		.loc 1 324 10 view .LVU720
 2402 0ebc 4883C220 		add	rdx, 32	# ivtmp.270,
 2403              	.L210:
 325:sieve_extend.c ****         source_word++;
 2404              		.loc 1 325 9 view .LVU721
 2405              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2406              		.loc 1 325 31 is_stmt 0 view .LVU722
 2407 0ec0 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rdx]	# tmp311, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2407      0416
 2408 0ec6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm0	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2408      0414
 326:sieve_extend.c ****         copy_word++;
 2409              		.loc 1 326 9 is_stmt 1 view .LVU723
 327:sieve_extend.c ****     }
 2410              		.loc 1 327 9 view .LVU724
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2411              		.loc 1 324 10 view .LVU725
 2412 0ecc 4883C220 		add	rdx, 32	# ivtmp.270,
 2413              	.L209:
 325:sieve_extend.c ****         source_word++;
 2414              		.loc 1 325 9 view .LVU726
 2415              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2416              		.loc 1 325 31 is_stmt 0 view .LVU727
 2417 0ed0 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r14+rdx]	# tmp312, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2417      1416
GAS LISTING /tmp/ccG38KJh.s 			page 71


 2418 0ed6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2418      1414
 326:sieve_extend.c ****         copy_word++;
 2419              		.loc 1 326 9 is_stmt 1 view .LVU728
 327:sieve_extend.c ****     }
 2420              		.loc 1 327 9 view .LVU729
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2421              		.loc 1 324 10 view .LVU730
 2422 0edc 4883C220 		add	rdx, 32	# ivtmp.270,
 2423 0ee0 4839F2   		cmp	rdx, rsi	# ivtmp.270, _128
 2424 0ee3 0F849600 		je	.L245	#,
 2424      0000
 2425              	.L148:
 325:sieve_extend.c ****         source_word++;
 2426              		.loc 1 325 9 view .LVU731
 2427              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2428              		.loc 1 325 31 is_stmt 0 view .LVU732
 2429 0ee9 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r14+rdx]	# tmp286, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2429      1C16
 2430 0eef C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm3	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B], t
 2430      1C14
 326:sieve_extend.c ****         copy_word++;
 2431              		.loc 1 326 9 is_stmt 1 view .LVU733
 327:sieve_extend.c ****     }
 2432              		.loc 1 327 9 view .LVU734
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2433              		.loc 1 324 10 view .LVU735
 325:sieve_extend.c ****         source_word++;
 2434              		.loc 1 325 9 view .LVU736
 2435              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2436              		.loc 1 325 31 is_stmt 0 view .LVU737
 2437 0ef5 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r14+rdx]	# tmp287, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2437      441620
 2438 0efc C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm8	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B],
 2438      441420
 326:sieve_extend.c ****         copy_word++;
 2439              		.loc 1 326 9 is_stmt 1 view .LVU738
 327:sieve_extend.c ****     }
 2440              		.loc 1 327 9 view .LVU739
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2441              		.loc 1 324 10 view .LVU740
 325:sieve_extend.c ****         source_word++;
 2442              		.loc 1 325 9 view .LVU741
 2443              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2444              		.loc 1 325 31 is_stmt 0 view .LVU742
 2445 0f03 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rdx]	# tmp288, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2445      4C1640
 2446 0f0a C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm9	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B],
 2446      4C1440
 326:sieve_extend.c ****         copy_word++;
 2447              		.loc 1 326 9 is_stmt 1 view .LVU743
 327:sieve_extend.c ****     }
 2448              		.loc 1 327 9 view .LVU744
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccG38KJh.s 			page 72


 2449              		.loc 1 324 10 view .LVU745
 325:sieve_extend.c ****         source_word++;
 2450              		.loc 1 325 9 view .LVU746
 2451              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2452              		.loc 1 325 31 is_stmt 0 view .LVU747
 2453 0f11 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 96[r14+rdx]	# tmp289, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2453      541660
 2454 0f18 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm10	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B]
 2454      541460
 326:sieve_extend.c ****         copy_word++;
 2455              		.loc 1 326 9 is_stmt 1 view .LVU748
 327:sieve_extend.c ****     }
 2456              		.loc 1 327 9 view .LVU749
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2457              		.loc 1 324 10 view .LVU750
 325:sieve_extend.c ****         source_word++;
 2458              		.loc 1 325 9 view .LVU751
 2459              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2460              		.loc 1 325 31 is_stmt 0 view .LVU752
 2461 0f1f C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 128[r14+rdx]	# tmp290, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2461      9C168000 
 2461      0000
 2462 0f29 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B
 2462      9C148000 
 2462      0000
 326:sieve_extend.c ****         copy_word++;
 2463              		.loc 1 326 9 is_stmt 1 view .LVU753
 327:sieve_extend.c ****     }
 2464              		.loc 1 327 9 view .LVU754
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2465              		.loc 1 324 10 view .LVU755
 325:sieve_extend.c ****         source_word++;
 2466              		.loc 1 325 9 view .LVU756
 2467              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2468              		.loc 1 325 31 is_stmt 0 view .LVU757
 2469 0f33 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r14+rdx]	# tmp291, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2469      A416A000 
 2469      0000
 2470 0f3d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm12	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B
 2470      A414A000 
 2470      0000
 326:sieve_extend.c ****         copy_word++;
 2471              		.loc 1 326 9 is_stmt 1 view .LVU758
 327:sieve_extend.c ****     }
 2472              		.loc 1 327 9 view .LVU759
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2473              		.loc 1 324 10 view .LVU760
 325:sieve_extend.c ****         source_word++;
 2474              		.loc 1 325 9 view .LVU761
 2475              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2476              		.loc 1 325 31 is_stmt 0 view .LVU762
 2477 0f47 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r14+rdx]	# tmp292, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2477      AC16C000 
GAS LISTING /tmp/ccG38KJh.s 			page 73


 2477      0000
 2478 0f51 C4417E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm13	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B
 2478      AC14C000 
 2478      0000
 326:sieve_extend.c ****         copy_word++;
 2479              		.loc 1 326 9 is_stmt 1 view .LVU763
 327:sieve_extend.c ****     }
 2480              		.loc 1 327 9 view .LVU764
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2481              		.loc 1 324 10 view .LVU765
 325:sieve_extend.c ****         source_word++;
 2482              		.loc 1 325 9 view .LVU766
 2483              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2484              		.loc 1 325 31 is_stmt 0 view .LVU767
 2485 0f5b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 224[r14+rdx]	# tmp293, MEM[base: _5, index: ivtmp.270_126, offset: 0B]
 2485      B416E000 
 2485      0000
 2486 0f65 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm14	# MEM[base: vectp.257_98, index: ivtmp.270_126, offset: 0B
 2486      B414E000 
 2486      0000
 326:sieve_extend.c ****         copy_word++;
 2487              		.loc 1 326 9 is_stmt 1 view .LVU768
 327:sieve_extend.c ****     }
 2488              		.loc 1 327 9 view .LVU769
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2489              		.loc 1 324 10 view .LVU770
 2490 0f6f 4881C200 		add	rdx, 256	# ivtmp.270,
 2490      010000
 2491 0f76 4839F2   		cmp	rdx, rsi	# ivtmp.270, _128
 2492 0f79 0F856AFF 		jne	.L148	#,
 2492      FFFF
 2493              	.L245:
 2494 0f7f 4C8B2424 		mov	r12, QWORD PTR [rsp]	# source_word, %sfp
 2495 0f83 4D89CE   		mov	r14, r9	# niters_vector_mult_vf.250, niters.248
 2496 0f86 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.250,
 2497 0f8a 4D01F4   		add	r12, r14	# source_word, niters_vector_mult_vf.250
 2498 0f8d 4C01F0   		add	rax, r14	# tmp.252, niters_vector_mult_vf.250
 2499 0f90 4D39F1   		cmp	r9, r14	# niters.248, niters_vector_mult_vf.250
 2500 0f93 745B     		je	.L248	#,
 2501              	.LVL111:
 325:sieve_extend.c ****         source_word++;
 2502              		.loc 1 325 9 view .LVU771
 2503              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2504              		.loc 1 325 43 is_stmt 0 view .LVU772
 2505 0f95 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# bitstorage, %sfp
 2505      10
 2506              	# sieve_extend.c:327:         copy_word++;
 327:sieve_extend.c ****     }
 2507              		.loc 1 327 18 view .LVU773
 2508 0f9a 4C8D7801 		lea	r15, 1[rax]	# copy_word,
 2509              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2510              		.loc 1 325 43 view .LVU774
 2511 0f9e 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# _37, *_21
 2511      00
GAS LISTING /tmp/ccG38KJh.s 			page 74


 2512              	# sieve_extend.c:326:         source_word++;
 326:sieve_extend.c ****         copy_word++;
 2513              		.loc 1 326 20 view .LVU775
 2514 0fa3 49FFC4   		inc	r12	# source_word
 2515              	.LVL112:
 2516              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2517              		.loc 1 325 31 view .LVU776
 2518 0fa6 49897CC5 		mov	QWORD PTR 0[r13+rax*8], rdi	# *_23, _37
 2518      00
 326:sieve_extend.c ****         copy_word++;
 2519              		.loc 1 326 9 is_stmt 1 view .LVU777
 2520              	.LVL113:
 327:sieve_extend.c ****     }
 2521              		.loc 1 327 9 view .LVU778
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2522              		.loc 1 324 10 view .LVU779
 2523 0fab 4C39FB   		cmp	rbx, r15	# destination_stop_word, copy_word
 2524 0fae 7640     		jbe	.L248	#,
 325:sieve_extend.c ****         source_word++;
 2525              		.loc 1 325 9 view .LVU780
 2526              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2527              		.loc 1 325 43 is_stmt 0 view .LVU781
 2528 0fb0 4F8B5CE5 		mov	r11, QWORD PTR 0[r13+r12*8]	# _111, *_108
 2528      00
 2529              	# sieve_extend.c:327:         copy_word++;
 327:sieve_extend.c ****     }
 2530              		.loc 1 327 18 view .LVU782
 2531 0fb5 4883C002 		add	rax, 2	# copy_word,
 2532              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2533              		.loc 1 325 31 view .LVU783
 2534 0fb9 4F895CFD 		mov	QWORD PTR 0[r13+r15*8], r11	# *_110, _111
 2534      00
 326:sieve_extend.c ****         copy_word++;
 2535              		.loc 1 326 9 is_stmt 1 view .LVU784
 327:sieve_extend.c ****     }
 2536              		.loc 1 327 9 view .LVU785
 2537              	.LVL114:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2538              		.loc 1 324 10 view .LVU786
 2539              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2540              		.loc 1 325 43 is_stmt 0 view .LVU787
 2541 0fbe 4E8D14E5 		lea	r10, 0[0+r12*8]	# _107,
 2541      00000000 
 2542              	# sieve_extend.c:324:    while (copy_word < destination_stop_word) {
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2543              		.loc 1 324 10 view .LVU788
 2544 0fc6 4839C3   		cmp	rbx, rax	# destination_stop_word, copy_word
 2545 0fc9 7625     		jbe	.L248	#,
 325:sieve_extend.c ****         source_word++;
 2546              		.loc 1 325 9 is_stmt 1 view .LVU789
 2547              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2548              		.loc 1 325 43 is_stmt 0 view .LVU790
GAS LISTING /tmp/ccG38KJh.s 			page 75


 2549 0fcb 4F8B4C15 		mov	r9, QWORD PTR 8[r13+r10]	# _83, *_80
 2549      08
 2550              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2551              		.loc 1 325 31 view .LVU791
 2552 0fd0 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_82, _83
 2552      00
 326:sieve_extend.c ****         copy_word++;
 2553              		.loc 1 326 9 is_stmt 1 view .LVU792
 327:sieve_extend.c ****     }
 2554              		.loc 1 327 9 view .LVU793
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2555              		.loc 1 324 10 view .LVU794
 2556 0fd5 C5F877   		vzeroupper
 2557              	.LVL115:
 2558              	.L249:
 2559              	# sieve_extend.c:330: }
 330:sieve_extend.c **** 
 2560              		.loc 1 330 1 is_stmt 0 view .LVU795
 2561 0fd8 488D65D8 		lea	rsp, -40[rbp]	#,
 2562              	.LVL116:
 330:sieve_extend.c **** 
 2563              		.loc 1 330 1 view .LVU796
 2564 0fdc 5B       		pop	rbx	#
 2565 0fdd 415C     		pop	r12	#
 2566 0fdf 415D     		pop	r13	#
 2567 0fe1 415E     		pop	r14	#
 2568 0fe3 415F     		pop	r15	#
 2569 0fe5 5D       		pop	rbp	#
 2570              		.cfi_remember_state
 2571              		.cfi_def_cfa 7, 8
 2572              	.LVL117:
 330:sieve_extend.c **** 
 2573              		.loc 1 330 1 view .LVU797
 2574 0fe6 C3       		ret	
 2575              	.LVL118:
 2576 0fe7 660F1F84 		.p2align 4,,10
 2576      00000000 
 2576      00
 2577              		.p2align 3
 2578              	.L248:
 2579              		.cfi_restore_state
 330:sieve_extend.c **** 
 2580              		.loc 1 330 1 view .LVU798
 2581 0ff0 C5F877   		vzeroupper
 2582 0ff3 488D65D8 		lea	rsp, -40[rbp]	#,
 2583              	.LVL119:
 330:sieve_extend.c **** 
 2584              		.loc 1 330 1 view .LVU799
 2585 0ff7 5B       		pop	rbx	#
 2586              	.LVL120:
 330:sieve_extend.c **** 
 2587              		.loc 1 330 1 view .LVU800
 2588 0ff8 415C     		pop	r12	#
 2589 0ffa 415D     		pop	r13	#
 2590 0ffc 415E     		pop	r14	#
 2591 0ffe 415F     		pop	r15	#
GAS LISTING /tmp/ccG38KJh.s 			page 76


 2592 1000 5D       		pop	rbp	#
 2593              		.cfi_remember_state
 2594              		.cfi_def_cfa 7, 8
 2595              	.LVL121:
 330:sieve_extend.c **** 
 2596              		.loc 1 330 1 view .LVU801
 2597 1001 C3       		ret	
 2598              	.LVL122:
 2599              		.p2align 4,,10
 2600 1002 660F1F44 		.p2align 3
 2600      0000
 2601              	.L147:
 2602              		.cfi_restore_state
 330:sieve_extend.c **** 
 2603              		.loc 1 330 1 view .LVU802
 2604 1008 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# bitstorage, %sfp
 2604      10
 2605              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2606              		.loc 1 325 43 view .LVU803
 2607 100d 488B1424 		mov	rdx, QWORD PTR [rsp]	# source_word, %sfp
 2608 1011 4C8D04DE 		lea	r8, [rsi+rbx*8]	# _125,
 2609 1015 4901F4   		add	r12, rsi	# ivtmp.265, bitstorage
 2610 1018 4829C2   		sub	rdx, rax	# source_word, ivtmp.279
 2611 101b 4C89C0   		mov	rax, r8	# tmp191, _125
 2612 101e 4C29E0   		sub	rax, r12	# tmp191, ivtmp.265
 2613 1021 4883E808 		sub	rax, 8	# tmp192,
 2614 1025 48C1E803 		shr	rax, 3	# tmp190,
 2615 1029 48FFC0   		inc	rax	# tmp193
 2616 102c 83E007   		and	eax, 7	# tmp194,
 2617 102f 0F848800 		je	.L150	#,
 2617      0000
 2618 1035 4883F801 		cmp	rax, 1	# tmp194,
 2619 1039 746C     		je	.L215	#,
 2620 103b 4883F802 		cmp	rax, 2	# tmp194,
 2621 103f 7459     		je	.L216	#,
 2622 1041 4883F803 		cmp	rax, 3	# tmp194,
 2623 1045 7446     		je	.L217	#,
 2624 1047 4883F804 		cmp	rax, 4	# tmp194,
 2625 104b 7433     		je	.L218	#,
 2626 104d 4883F805 		cmp	rax, 5	# tmp194,
 2627 1051 7420     		je	.L219	#,
 2628 1053 4883F806 		cmp	rax, 6	# tmp194,
 2629 1057 740D     		je	.L220	#,
 2630              	.LVL123:
 325:sieve_extend.c ****         source_word++;
 2631              		.loc 1 325 9 is_stmt 1 view .LVU804
 2632              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2633              		.loc 1 325 43 is_stmt 0 view .LVU805
 2634 1059 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2635 105d 4983C408 		add	r12, 8	# ivtmp.265,
 2636              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2637              		.loc 1 325 31 view .LVU806
 2638 1061 4D897424 		mov	QWORD PTR -8[r12], r14	# MEM[base: _120, offset: 0B], _70
 2638      F8
GAS LISTING /tmp/ccG38KJh.s 			page 77


 326:sieve_extend.c ****         copy_word++;
 2639              		.loc 1 326 9 is_stmt 1 view .LVU807
 327:sieve_extend.c ****     }
 2640              		.loc 1 327 9 view .LVU808
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2641              		.loc 1 324 10 view .LVU809
 2642              	.L220:
 325:sieve_extend.c ****         source_word++;
 2643              		.loc 1 325 9 view .LVU810
 2644              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2645              		.loc 1 325 43 is_stmt 0 view .LVU811
 2646 1066 4D8B2CD4 		mov	r13, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2647 106a 4983C408 		add	r12, 8	# ivtmp.265,
 2648              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2649              		.loc 1 325 31 view .LVU812
 2650 106e 4D896C24 		mov	QWORD PTR -8[r12], r13	# MEM[base: _120, offset: 0B], _70
 2650      F8
 326:sieve_extend.c ****         copy_word++;
 2651              		.loc 1 326 9 is_stmt 1 view .LVU813
 327:sieve_extend.c ****     }
 2652              		.loc 1 327 9 view .LVU814
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2653              		.loc 1 324 10 view .LVU815
 2654              	.L219:
 325:sieve_extend.c ****         source_word++;
 2655              		.loc 1 325 9 view .LVU816
 2656              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2657              		.loc 1 325 43 is_stmt 0 view .LVU817
 2658 1073 498B3CD4 		mov	rdi, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2659 1077 4983C408 		add	r12, 8	# ivtmp.265,
 2660              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2661              		.loc 1 325 31 view .LVU818
 2662 107b 49897C24 		mov	QWORD PTR -8[r12], rdi	# MEM[base: _120, offset: 0B], _70
 2662      F8
 326:sieve_extend.c ****         copy_word++;
 2663              		.loc 1 326 9 is_stmt 1 view .LVU819
 327:sieve_extend.c ****     }
 2664              		.loc 1 327 9 view .LVU820
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2665              		.loc 1 324 10 view .LVU821
 2666              	.L218:
 325:sieve_extend.c ****         source_word++;
 2667              		.loc 1 325 9 view .LVU822
 2668              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2669              		.loc 1 325 43 is_stmt 0 view .LVU823
 2670 1080 4D8B3CD4 		mov	r15, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2671 1084 4983C408 		add	r12, 8	# ivtmp.265,
 2672              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2673              		.loc 1 325 31 view .LVU824
 2674 1088 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 2674      F8
GAS LISTING /tmp/ccG38KJh.s 			page 78


 326:sieve_extend.c ****         copy_word++;
 2675              		.loc 1 326 9 is_stmt 1 view .LVU825
 327:sieve_extend.c ****     }
 2676              		.loc 1 327 9 view .LVU826
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2677              		.loc 1 324 10 view .LVU827
 2678              	.L217:
 325:sieve_extend.c ****         source_word++;
 2679              		.loc 1 325 9 view .LVU828
 2680              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2681              		.loc 1 325 43 is_stmt 0 view .LVU829
 2682 108d 4D8B14D4 		mov	r10, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2683 1091 4983C408 		add	r12, 8	# ivtmp.265,
 2684              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2685              		.loc 1 325 31 view .LVU830
 2686 1095 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _120, offset: 0B], _70
 2686      F8
 326:sieve_extend.c ****         copy_word++;
 2687              		.loc 1 326 9 is_stmt 1 view .LVU831
 327:sieve_extend.c ****     }
 2688              		.loc 1 327 9 view .LVU832
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2689              		.loc 1 324 10 view .LVU833
 2690              	.L216:
 325:sieve_extend.c ****         source_word++;
 2691              		.loc 1 325 9 view .LVU834
 2692              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2693              		.loc 1 325 43 is_stmt 0 view .LVU835
 2694 109a 4D8B1CD4 		mov	r11, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2695 109e 4983C408 		add	r12, 8	# ivtmp.265,
 2696              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2697              		.loc 1 325 31 view .LVU836
 2698 10a2 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _120, offset: 0B], _70
 2698      F8
 326:sieve_extend.c ****         copy_word++;
 2699              		.loc 1 326 9 is_stmt 1 view .LVU837
 327:sieve_extend.c ****     }
 2700              		.loc 1 327 9 view .LVU838
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2701              		.loc 1 324 10 view .LVU839
 2702              	.L215:
 325:sieve_extend.c ****         source_word++;
 2703              		.loc 1 325 9 view .LVU840
 2704              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2705              		.loc 1 325 43 is_stmt 0 view .LVU841
 2706 10a7 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2707 10ab 4983C408 		add	r12, 8	# ivtmp.265,
 2708              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2709              		.loc 1 325 31 view .LVU842
 2710 10af 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _120, offset: 0B], _70
 2710      F8
GAS LISTING /tmp/ccG38KJh.s 			page 79


 326:sieve_extend.c ****         copy_word++;
 2711              		.loc 1 326 9 is_stmt 1 view .LVU843
 327:sieve_extend.c ****     }
 2712              		.loc 1 327 9 view .LVU844
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2713              		.loc 1 324 10 view .LVU845
 2714 10b4 4D39C4   		cmp	r12, r8	# ivtmp.265, _125
 2715 10b7 0F841BFF 		je	.L249	#,
 2715      FFFF
 2716              	.LVL124:
 2717              	.L150:
 325:sieve_extend.c ****         source_word++;
 2718              		.loc 1 325 9 view .LVU846
 2719              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2720              		.loc 1 325 43 is_stmt 0 view .LVU847
 2721 10bd 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2722              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2723              		.loc 1 325 31 view .LVU848
 2724 10c1 49891C24 		mov	QWORD PTR [r12], rbx	# MEM[base: _120, offset: 0B], _70
 326:sieve_extend.c ****         copy_word++;
 2725              		.loc 1 326 9 is_stmt 1 view .LVU849
 327:sieve_extend.c ****     }
 2726              		.loc 1 327 9 view .LVU850
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2727              		.loc 1 324 10 view .LVU851
 325:sieve_extend.c ****         source_word++;
 2728              		.loc 1 325 9 view .LVU852
 2729              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2730              		.loc 1 325 43 is_stmt 0 view .LVU853
 2731 10c5 4D8B4CD4 		mov	r9, QWORD PTR 8[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2731      08
 2732              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2733              		.loc 1 325 31 view .LVU854
 2734 10ca 4D894C24 		mov	QWORD PTR 8[r12], r9	# MEM[base: _120, offset: 0B], _70
 2734      08
 326:sieve_extend.c ****         copy_word++;
 2735              		.loc 1 326 9 is_stmt 1 view .LVU855
 327:sieve_extend.c ****     }
 2736              		.loc 1 327 9 view .LVU856
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2737              		.loc 1 324 10 view .LVU857
 325:sieve_extend.c ****         source_word++;
 2738              		.loc 1 325 9 view .LVU858
 2739              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2740              		.loc 1 325 43 is_stmt 0 view .LVU859
 2741 10cf 498B74D4 		mov	rsi, QWORD PTR 16[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2741      10
 2742              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2743              		.loc 1 325 31 view .LVU860
 2744 10d4 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _120, offset: 0B], _70
 2744      10
GAS LISTING /tmp/ccG38KJh.s 			page 80


 326:sieve_extend.c ****         copy_word++;
 2745              		.loc 1 326 9 is_stmt 1 view .LVU861
 327:sieve_extend.c ****     }
 2746              		.loc 1 327 9 view .LVU862
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2747              		.loc 1 324 10 view .LVU863
 325:sieve_extend.c ****         source_word++;
 2748              		.loc 1 325 9 view .LVU864
 2749              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2750              		.loc 1 325 43 is_stmt 0 view .LVU865
 2751 10d9 498B44D4 		mov	rax, QWORD PTR 24[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2751      18
 2752              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2753              		.loc 1 325 31 view .LVU866
 2754 10de 49894424 		mov	QWORD PTR 24[r12], rax	# MEM[base: _120, offset: 0B], _70
 2754      18
 326:sieve_extend.c ****         copy_word++;
 2755              		.loc 1 326 9 is_stmt 1 view .LVU867
 327:sieve_extend.c ****     }
 2756              		.loc 1 327 9 view .LVU868
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2757              		.loc 1 324 10 view .LVU869
 325:sieve_extend.c ****         source_word++;
 2758              		.loc 1 325 9 view .LVU870
 2759              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2760              		.loc 1 325 43 is_stmt 0 view .LVU871
 2761 10e3 4D8B74D4 		mov	r14, QWORD PTR 32[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2761      20
 2762              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2763              		.loc 1 325 31 view .LVU872
 2764 10e8 4D897424 		mov	QWORD PTR 32[r12], r14	# MEM[base: _120, offset: 0B], _70
 2764      20
 326:sieve_extend.c ****         copy_word++;
 2765              		.loc 1 326 9 is_stmt 1 view .LVU873
 327:sieve_extend.c ****     }
 2766              		.loc 1 327 9 view .LVU874
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2767              		.loc 1 324 10 view .LVU875
 325:sieve_extend.c ****         source_word++;
 2768              		.loc 1 325 9 view .LVU876
 2769              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2770              		.loc 1 325 43 is_stmt 0 view .LVU877
 2771 10ed 4D8B6CD4 		mov	r13, QWORD PTR 40[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2771      28
 2772              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2773              		.loc 1 325 31 view .LVU878
 2774 10f2 4D896C24 		mov	QWORD PTR 40[r12], r13	# MEM[base: _120, offset: 0B], _70
 2774      28
 326:sieve_extend.c ****         copy_word++;
 2775              		.loc 1 326 9 is_stmt 1 view .LVU879
 327:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 81


 2776              		.loc 1 327 9 view .LVU880
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2777              		.loc 1 324 10 view .LVU881
 325:sieve_extend.c ****         source_word++;
 2778              		.loc 1 325 9 view .LVU882
 2779              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2780              		.loc 1 325 43 is_stmt 0 view .LVU883
 2781 10f7 498B7CD4 		mov	rdi, QWORD PTR 48[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2781      30
 2782              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2783              		.loc 1 325 31 view .LVU884
 2784 10fc 49897C24 		mov	QWORD PTR 48[r12], rdi	# MEM[base: _120, offset: 0B], _70
 2784      30
 326:sieve_extend.c ****         copy_word++;
 2785              		.loc 1 326 9 is_stmt 1 view .LVU885
 327:sieve_extend.c ****     }
 2786              		.loc 1 327 9 view .LVU886
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2787              		.loc 1 324 10 view .LVU887
 325:sieve_extend.c ****         source_word++;
 2788              		.loc 1 325 9 view .LVU888
 2789              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2790              		.loc 1 325 43 is_stmt 0 view .LVU889
 2791 1101 4D8B7CD4 		mov	r15, QWORD PTR 56[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2791      38
 2792 1106 4983C440 		add	r12, 64	# ivtmp.265,
 2793              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2794              		.loc 1 325 31 view .LVU890
 2795 110a 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 2795      F8
 326:sieve_extend.c ****         copy_word++;
 2796              		.loc 1 326 9 is_stmt 1 view .LVU891
 327:sieve_extend.c ****     }
 2797              		.loc 1 327 9 view .LVU892
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2798              		.loc 1 324 10 view .LVU893
 2799 110f 4D39C4   		cmp	r12, r8	# ivtmp.265, _125
 2800 1112 75A9     		jne	.L150	#,
 2801 1114 E9BFFEFF 		jmp	.L249	#
 2801      FF
 2802              		.cfi_endproc
 2803              	.LFE60:
 2805 1119 0F1F8000 		.p2align 4
 2805      000000
 2807              	continuePattern_shiftleft:
 2808              	.LVL125:
 2809              	.LFB63:
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2810              		.loc 1 370 148 view -0
 2811              		.cfi_startproc
 371:sieve_extend.c **** 
 2812              		.loc 1 371 5 view .LVU895
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccG38KJh.s 			page 82


 2813              		.loc 1 373 5 view .LVU896
 2814              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2815              		.loc 1 370 148 is_stmt 0 view .LVU897
 2816 1120 55       		push	rbp	#
 2817              		.cfi_def_cfa_offset 16
 2818              		.cfi_offset 6, -16
 2819              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2820              		.loc 1 373 21 view .LVU898
 2821 1121 48C1E906 		shr	rcx, 6	# tmp924,
 2822              	.LVL126:
 2823              	# sieve_extend.c:374:     const counter_t copy_start = source_start + size;
 374:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 2824              		.loc 1 374 21 view .LVU899
 2825 1125 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 2826              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2827              		.loc 1 370 148 view .LVU900
 2828 1129 4889E5   		mov	rbp, rsp	#,
 2829              		.cfi_def_cfa_register 6
 2830 112c 4157     		push	r15	#
 2831              		.cfi_offset 15, -24
 2832              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2833              		.loc 1 373 21 view .LVU901
 2834 112e 4989CF   		mov	r15, rcx	# destination_stop_word, tmp924
 2835              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2836              		.loc 1 370 148 view .LVU902
 2837 1131 4989D2   		mov	r10, rdx	# size, tmp923
 2838 1134 4156     		push	r14	#
 2839              		.cfi_offset 14, -32
 2840              	# sieve_extend.c:378:     register counter_t copy_word = wordindex(copy_start);
 378:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 2841              		.loc 1 378 24 view .LVU903
 2842 1136 4D89C6   		mov	r14, r8	# copy_word, copy_start
 2843 1139 49C1EE06 		shr	r14, 6	# copy_word,
 2844              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2845              		.loc 1 370 148 view .LVU904
 2846 113d 4155     		push	r13	#
 2847 113f 4154     		push	r12	#
 2848 1141 53       		push	rbx	#
 2849              		.cfi_offset 13, -40
 2850              		.cfi_offset 12, -48
 2851              		.cfi_offset 3, -56
 2852 1142 4889FB   		mov	rbx, rdi	# bitstorage, tmp921
 2853 1145 4883E4E0 		and	rsp, -32	#,
 2854 1149 4883EC60 		sub	rsp, 96	#,
 2855              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2856              		.loc 1 373 21 view .LVU905
 2857 114d 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 2857      58
 2858              	.LVL127:
 374:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
GAS LISTING /tmp/ccG38KJh.s 			page 83


 2859              		.loc 1 374 5 is_stmt 1 view .LVU906
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2860              		.loc 1 375 5 view .LVU907
 2861              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2862              		.loc 1 375 39 is_stmt 0 view .LVU908
 2863 1152 4889F1   		mov	rcx, rsi	# _4, source_start
 2864              	.LVL128:
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2865              		.loc 1 375 39 view .LVU909
 2866 1155 83E13F   		and	ecx, 63	# _4,
 2867              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2868              		.loc 1 370 148 view .LVU910
 2869 1158 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 2869      18
 2870              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2871              		.loc 1 375 69 view .LVU911
 2872 115d 4C89C2   		mov	rdx, r8	# _5, copy_start
 2873              	.LVL129:
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2874              		.loc 1 375 69 view .LVU912
 2875 1160 83E23F   		and	edx, 63	# _5,
 2876              	.LVL130:
 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2877              		.loc 1 376 5 is_stmt 1 view .LVU913
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2878              		.loc 1 377 5 view .LVU914
 2879              	# sieve_extend.c:377:     register counter_t source_word = wordindex(source_start);
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2880              		.loc 1 377 24 is_stmt 0 view .LVU915
 2881 1163 48C1EE06 		shr	rsi, 6	# source_start,
 2882              	.LVL131:
 2883              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2884              		.loc 1 375 31 view .LVU916
 2885 1167 4989CD   		mov	r13, rcx	# shift, _4
 2886              	# sieve_extend.c:377:     register counter_t source_word = wordindex(source_start);
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2887              		.loc 1 377 24 view .LVU917
 2888 116a 4989F1   		mov	r9, rsi	# source_word, source_start
 2889              	.LVL132:
 378:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 2890              		.loc 1 378 5 is_stmt 1 view .LVU918
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2891              		.loc 1 379 5 view .LVU919
 2892              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2893              		.loc 1 375 31 is_stmt 0 view .LVU920
 2894 116d 4929D5   		sub	r13, rdx	# shift, _5
 2895              	.LVL133:
 2896              	# sieve_extend.c:376:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2897              		.loc 1 376 31 view .LVU921
 2898 1170 4829CA   		sub	rdx, rcx	# tmp418, _4
 2899              	.LVL134:
GAS LISTING /tmp/ccG38KJh.s 			page 84


 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2900              		.loc 1 376 31 view .LVU922
 2901 1173 4883C240 		add	rdx, 64	# shift_flipped,
 2902              	.LVL135:
 2903              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2904              		.loc 1 379 42 view .LVU923
 2905 1177 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 2905      00000000 
 2906              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2907              		.loc 1 380 59 view .LVU924
 2908 117f C462E9F7 		shlx	r12, QWORD PTR 8[rdi+rax], rdx	# tmp420, *_16, shift_flipped
 2908      640708
 2909              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2910              		.loc 1 379 56 view .LVU925
 2911 1186 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 2912              	.LVL136:
 2913              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2914              		.loc 1 380 43 view .LVU926
 2915 118a 4D8D5901 		lea	r11, 1[r9]	# tmp.300,
 2916              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2917              		.loc 1 386 41 view .LVU927
 2918 118e 4F8D1413 		lea	r10, [r11+r10]	# tmp431,
 2919              	.LVL137:
 2920              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2921              		.loc 1 379 56 view .LVU928
 2922 1192 C46293F7 		shrx	r9, rdi, r13	# tmp422, *_10, shift
 2922      CF
 2923              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2924              		.loc 1 379 27 view .LVU929
 2925 1197 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _6,
 2925      00000000 
 2926              	.LVL138:
 2927              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2928              		.loc 1 380 30 view .LVU930
 2929 119f 4D09E1   		or	r9, r12	# tmp424, tmp420
 2930              	# sieve_extend.c:381:                              & ~chopmask(copy_start); // because this is the 
 381:sieve_extend.c **** 
 2931              		.loc 1 381 33 view .LVU931
 2932 11a2 41F7D0   		not	r8d	# tmp425
 2933              	.LVL139:
 381:sieve_extend.c **** 
 2934              		.loc 1 381 33 view .LVU932
 2935 11a5 48C7C1FF 		mov	rcx, -1	# tmp428,
 2935      FFFFFF
 2936 11ac C462BBF7 		shrx	r8, rcx, r8	# tmp427, tmp428, tmp425
 2936      C1
 2937              	# sieve_extend.c:381:                              & ~chopmask(copy_start); // because this is the 
 381:sieve_extend.c **** 
 2938              		.loc 1 381 30 view .LVU933
GAS LISTING /tmp/ccG38KJh.s 			page 85


 2939 11b1 C442B8F2 		andn	r12, r8, r9	# tmp430, tmp427, tmp424
 2939      E1
 2940              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2941              		.loc 1 379 27 view .LVU934
 2942 11b6 4C092433 		or	QWORD PTR [rbx+rsi], r12	# *_7, tmp430
 383:sieve_extend.c ****     source_word++;
 2943              		.loc 1 383 5 is_stmt 1 view .LVU935
 2944              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2945              		.loc 1 386 21 is_stmt 0 view .LVU936
 2946 11ba 4D39FA   		cmp	r10, r15	# tmp431, destination_stop_word
 2947 11bd 4D0F47D7 		cmova	r10, r15	# tmp431,, tmp431, destination_stop_word
 2948              	.LBB398:
 2949              	.LBB399:
 2950              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2951              		.loc 1 354 91 view .LVU937
 2952 11c1 41B90200 		mov	r9d, 2	# tmp432,
 2952      0000
 2953 11c7 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 2954 11cb 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 2955              	.LBE399:
 2956              	.LBE398:
 2957              	# sieve_extend.c:383:     copy_word++;
 383:sieve_extend.c ****     source_word++;
 2958              		.loc 1 383 14 view .LVU938
 2959 11cf 4D8D6601 		lea	r12, 1[r14]	# tmp.301,
 2960              	.LVL140:
 384:sieve_extend.c **** 
 2961              		.loc 1 384 5 is_stmt 1 view .LVU939
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2962              		.loc 1 386 5 view .LVU940
 2963              	.LBB421:
 2964              	.LBB417:
 2965              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2966              		.loc 1 354 21 is_stmt 0 view .LVU941
 2967 11d3 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 2968              	.LBE417:
 2969              	.LBE421:
 2970              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2971              		.loc 1 379 56 view .LVU942
 2972 11d7 44896C24 		mov	DWORD PTR 64[rsp], r13d	# %sfp, shift
 2972      40
 2973              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2974              		.loc 1 380 59 view .LVU943
 2975 11dc 8954243C 		mov	DWORD PTR 60[rsp], edx	# %sfp, shift_flipped
 2976              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2977              		.loc 1 386 21 view .LVU944
 2978 11e0 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 2978      50
 2979              	.LVL141:
 387:sieve_extend.c ****     source_word += distance;
GAS LISTING /tmp/ccG38KJh.s 			page 86


 2980              		.loc 1 387 5 is_stmt 1 view .LVU945
 2981              	.LBB422:
 2982              	.LBI398:
 353:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 2983              		.loc 1 353 25 view .LVU946
 2984              	.LBB418:
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2985              		.loc 1 354 5 view .LVU947
 2986              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2987              		.loc 1 354 21 is_stmt 0 view .LVU948
 2988 11e5 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, fast_loop_stop_word
 2988      28
 2989              	.LVL142:
 355:sieve_extend.c ****     counter_t distance = 0;
 2990              		.loc 1 355 5 is_stmt 1 view .LVU949
 356:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 2991              		.loc 1 356 5 view .LVU950
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2992              		.loc 1 357 5 view .LVU951
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2993              		.loc 1 357 11 view .LVU952
 2994 11ea 4939FC   		cmp	r12, rdi	# tmp.301, fast_loop_stop_word
 2995 11ed 0F83A004 		jnb	.L252	#,
 2995      0000
 2996 11f3 4C8D5040 		lea	r10, 64[rax]	# tmp435,
 2997              	.LVL143:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2998              		.loc 1 357 11 is_stmt 0 view .LVU953
 2999 11f7 4C8D4610 		lea	r8, 16[rsi]	# tmp436,
 3000 11fb 4D29F1   		sub	r9, r14	# tmp433, copy_word
 3001 11fe 488D7E48 		lea	rdi, 72[rsi]	# tmp439,
 3002              	.LVL144:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3003              		.loc 1 357 11 view .LVU954
 3004 1202 4983E904 		sub	r9, 4	# _215,
 3005 1206 488D4808 		lea	rcx, 8[rax]	# tmp612,
 3006 120a 4D39C2   		cmp	r10, r8	# tmp435, tmp436
 3007 120d 410F9EC7 		setle	r15b	#, tmp438
 3008              	.LVL145:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3009              		.loc 1 357 11 view .LVU955
 3010 1211 4839CF   		cmp	rdi, rcx	# tmp439, tmp612
 3011 1214 4C894C24 		mov	QWORD PTR 48[rsp], r9	# %sfp, _215
 3011      30
 3012 1219 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp439
 3012      48
 3013 121e 4C8D4850 		lea	r9, 80[rax]	# tmp444,
 3014 1222 400F9EC7 		setle	dil	#, tmp442
 3015 1226 4109FF   		or	r15d, edi	# tmp443, tmp442
 3016 1229 4D39C1   		cmp	r9, r8	# tmp444, tmp436
 3017 122c 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, tmp444
 3017      20
 3018 1231 410F9EC1 		setle	r9b	#, tmp447
 3019 1235 4883C010 		add	rax, 16	# tmp449,
 3020 1239 48394424 		cmp	QWORD PTR 72[rsp], rax	# %sfp, tmp449
 3020      48
GAS LISTING /tmp/ccG38KJh.s 			page 87


 3021 123e 400F9EC7 		setle	dil	#, tmp451
 3022 1242 4409CF   		or	edi, r9d	# tmp452, tmp447
 3023 1245 4421FF   		and	edi, r15d	# tmp453, tmp443
 3024 1248 48837C24 		cmp	QWORD PTR 48[rsp], 11	# %sfp,
 3024      300B
 3025 124e 410F97C7 		seta	r15b	#, tmp455
 3026 1252 4C8D4E08 		lea	r9, 8[rsi]	# tmp458,
 3027 1256 4421FF   		and	edi, r15d	# tmp456, tmp455
 3028 1259 4D39CA   		cmp	r10, r9	# tmp435, tmp458
 3029 125c 410F9EC2 		setle	r10b	#, tmp460
 3030 1260 4883C640 		add	rsi, 64	# tmp461,
 3031 1264 4839CE   		cmp	rsi, rcx	# tmp461, tmp612
 3032 1267 410F9EC7 		setle	r15b	#, tmp464
 3033 126b 4509FA   		or	r10d, r15d	# tmp465, tmp464
 3034 126e 4421D7   		and	edi, r10d	# tmp466, tmp465
 3035 1271 4C394C24 		cmp	QWORD PTR 32[rsp], r9	# %sfp, tmp458
 3035      20
 3036 1276 410F9EC2 		setle	r10b	#, tmp470
 3037 127a 4839C6   		cmp	rsi, rax	# tmp461, tmp449
 3038 127d 410F9EC7 		setle	r15b	#, tmp474
 3039 1281 4509FA   		or	r10d, r15d	# tmp475, tmp474
 3040 1284 4484D7   		test	dil, r10b	# tmp466, tmp475
 3041 1287 0F84F30A 		je	.L253	#,
 3041      0000
 3042 128d 4C394C24 		cmp	QWORD PTR 72[rsp], r9	# %sfp, tmp458
 3042      48
 3043 1292 400F9EC7 		setle	dil	#, tmp480
 3044 1296 4C39C6   		cmp	rsi, r8	# tmp461, tmp436
 3045 1299 400F9EC6 		setle	sil	#, tmp484
 3046 129d 4008F7   		or	dil, sil	# tmp480, tmp484
 3047 12a0 0F84DA0A 		je	.L253	#,
 3047      0000
 3048 12a6 4801D9   		add	rcx, rbx	# vectp.322, bitstorage
 3049              	.LBB400:
 3050              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3051              		.loc 1 358 19 view .LVU956
 3052 12a9 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1004, MEM[base: vectp.322_373, index: ivtmp.377_533, offset: 
 3053 12ad 4801D8   		add	rax, rbx	# vectp.326, bitstorage
 3054              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3055              		.loc 1 359 19 view .LVU957
 3056 12b0 C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B], MEM[
 3057 12b4 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 32B], M
 3057      20
 3058              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3059              		.loc 1 358 19 view .LVU958
 3060 12b9 C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp496, tmp1004, MEM[base: vectp.322_373, index: ivt
 3060      20
 3061              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3062              		.loc 1 359 19 view .LVU959
 3063 12be C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp492, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B],
 3064 12c2 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp510, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B]
 3065 12c6 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_390, tmp492,
 3065      C5D8
GAS LISTING /tmp/ccG38KJh.s 			page 88


 3066 12cc C4C1796E 		vmovd	xmm3, r13d	# _12,
 3066      DD
 3067 12d1 C5F96EE2 		vmovd	xmm4, edx	# _18,
 3068              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3069              		.loc 1 358 19 view .LVU960
 3070 12d5 C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp495, tmp496,
 3070      F2D8
 3071              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3072              		.loc 1 359 19 view .LVU961
 3073 12db C443FD00 		vpermq	ymm15, ymm14, 216	# tmp509, tmp510,
 3073      FED8
 3074 12e1 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# _215, %sfp
 3074      30
 3075              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3076              		.loc 1 360 44 view .LVU962
 3077 12e6 C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.329, tmp495, _12
 3078              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3079              		.loc 1 360 65 view .LVU963
 3080 12ea C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.330, vect_perm_even_390, _18
 3081              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3082              		.loc 1 362 65 view .LVU964
 3083 12ee C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.333, tmp509, _18
 3084              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3085              		.loc 1 362 44 view .LVU965
 3086 12f2 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.332, vect_perm_even_390, _12
 3087              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3088              		.loc 1 360 54 view .LVU966
 3089 12f6 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.331, vect__98.329, vect__100.330
 3089      DA
 3090              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3091              		.loc 1 362 54 view .LVU967
 3092 12fb C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.334, vect__110.333, vect__109.332
 3093 12ff 49C1EE03 		shr	r14, 3	# _215,
 3094              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3095              		.loc 1 360 33 view .LVU968
 3096 1303 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp506, vect__104.331
 3096      DD01
 3097              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3098              		.loc 1 362 33 view .LVU969
 3099 1309 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp520, vect__114.334
 3099      EF01
 3100 130f 4D8D56FF 		lea	r10, -1[r14]	# tmp631,
 3101              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3102              		.loc 1 360 33 view .LVU970
 3103 1313 C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _396, index: ivtmp.377_533, offset: 0B], tmp502
 3103      1C0B
GAS LISTING /tmp/ccG38KJh.s 			page 89


 3104 1319 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _396, index: ivtmp.377_533, offset: 32B], tmp506
 3104      6C0B20
 3105 1320 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 16B], tmp50
 3105      5C0B1001 
 3106 1328 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 48B], tmp50
 3106      6C0B3001 
 3107 1330 4E8D3C0B 		lea	r15, [rbx+r9]	# _396,
 3108 1334 4A8D3C03 		lea	rdi, [rbx+r8]	# _416,
 3109              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3110              		.loc 1 362 33 view .LVU971
 3111 1338 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _416, index: ivtmp.377_533, offset: 0B], tmp516
 3111      2C03
 3112 133e C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _416, index: ivtmp.377_533, offset: 32B], tmp520
 3112      7C0320
 3113 1345 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 16B], tmp516
 3113      6C031001 
 3114 134d C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 48B], tmp520
 3114      7C033001 
 3115 1355 4183E201 		and	r10d, 1	# tmp633,
 3116              	.LVL146:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3117              		.loc 1 358 9 is_stmt 1 view .LVU972
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3118              		.loc 1 359 9 view .LVU973
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3119              		.loc 1 360 9 view .LVU974
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3120              		.loc 1 361 9 view .LVU975
 362:sieve_extend.c ****         copy_word += 2;
 3121              		.loc 1 362 9 view .LVU976
 363:sieve_extend.c ****         source_word += 2;
 3122              		.loc 1 363 9 view .LVU977
 364:sieve_extend.c ****         distance += 2;
 3123              		.loc 1 364 9 view .LVU978
 365:sieve_extend.c ****     }
 3124              		.loc 1 365 9 view .LVU979
 365:sieve_extend.c ****     }
 3125              		.loc 1 365 9 is_stmt 0 view .LVU980
 3126              	.LBE400:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3127              		.loc 1 357 11 is_stmt 1 view .LVU981
 3128 1359 41B90100 		mov	r9d, 1	# ivtmp.375,
 3128      0000
 3129 135f 41B84000 		mov	r8d, 64	# ivtmp.377,
 3129      0000
 3130 1365 4983FE01 		cmp	r14, 1	# bnd.315,
 3131 1369 0F86ED01 		jbe	.L386	#,
 3131      0000
 3132 136f 4D85D2   		test	r10, r10	# tmp633
 3133 1372 0F84A800 		je	.L254	#,
 3133      0000
 3134              	.LBB401:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3135              		.loc 1 358 9 view .LVU982
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3136              		.loc 1 359 9 view .LVU983
GAS LISTING /tmp/ccG38KJh.s 			page 90


 3137              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3138              		.loc 1 358 19 is_stmt 0 view .LVU984
 3139 1378 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1097, MEM[base: vectp.322_373, index: ivtmp.377_533, offset
 3139      40
 3140              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3141              		.loc 1 359 19 view .LVU985
 3142 137d C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B], ME
 3142      40
 3143 1382 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 32B], 
 3143      60
 3144              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3145              		.loc 1 358 19 view .LVU986
 3146 1387 C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp899, tmp1097, MEM[base: vectp.322_373, index: iv
 3146      60
 3147              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3148              		.loc 1 359 19 view .LVU987
 3149 138c C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp895, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B]
 3149      D2
 3150 1391 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp910, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B]
 3150      C2
 3151 1396 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_390, tmp895,
 3151      DAD8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3152              		.loc 1 360 9 is_stmt 1 view .LVU988
 3153              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3154              		.loc 1 358 19 is_stmt 0 view .LVU989
 3155 139c C443FD00 		vpermq	ymm13, ymm12, 216	# tmp900, tmp899,
 3155      ECD8
 3156              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3157              		.loc 1 359 19 view .LVU990
 3158 13a2 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp911, tmp910,
 3158      F8D8
 3159              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3160              		.loc 1 360 44 view .LVU991
 3161 13a8 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.329, tmp900, _12
 3162              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3163              		.loc 1 360 65 view .LVU992
 3164 13ac C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.330, vect_perm_even_390, _18
 3165              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3166              		.loc 1 362 65 view .LVU993
 3167 13b0 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.333, tmp911, _18
 3168              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3169              		.loc 1 362 44 view .LVU994
 3170 13b4 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.332, vect_perm_even_390, _12
 3171              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3172              		.loc 1 360 54 view .LVU995
GAS LISTING /tmp/ccG38KJh.s 			page 91


 3173 13b8 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.331, vect__98.329, vect__100.330
 3173      CF
 3174              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3175              		.loc 1 362 54 view .LVU996
 3176 13bd C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.334, vect__110.333, vect__109.332
 3176      D2
 3177              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3178              		.loc 1 360 33 view .LVU997
 3179 13c2 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp907, vect__104.331
 3179      CD01
 3180              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3181              		.loc 1 362 33 view .LVU998
 3182 13c8 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp918, vect__114.334
 3182      D601
 3183              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3184              		.loc 1 360 33 view .LVU999
 3185 13ce C4C179D6 		vmovq	QWORD PTR 64[r15], xmm1	# MEM[base: _396, index: ivtmp.377_533, offset: 0B], tmp904
 3185      4F40
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3186              		.loc 1 360 33 view .LVU1000
 3187 13d4 C4C179D6 		vmovq	QWORD PTR 96[r15], xmm5	# MEM[base: _396, index: ivtmp.377_533, offset: 32B], tmp907
 3187      6F60
 3188 13da C4C3F916 		vpextrq	QWORD PTR 80[r15], xmm1, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 16B], tmp904
 3188      4F5001
 3189 13e1 C4C3F916 		vpextrq	QWORD PTR 112[r15], xmm5, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 48B], tmp907
 3189      6F7001
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3190              		.loc 1 361 9 is_stmt 1 view .LVU1001
 362:sieve_extend.c ****         copy_word += 2;
 3191              		.loc 1 362 9 view .LVU1002
 3192 13e8 41B90200 		mov	r9d, 2	# ivtmp.375,
 3192      0000
 3193              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3194              		.loc 1 362 33 is_stmt 0 view .LVU1003
 3195 13ee C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _416, index: ivtmp.377_533, offset: 0B], tmp915
 3195      40
 362:sieve_extend.c ****         copy_word += 2;
 3196              		.loc 1 362 33 view .LVU1004
 3197 13f3 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _416, index: ivtmp.377_533, offset: 32B], tmp918
 3197      60
 3198 13f8 41B88000 		mov	r8d, 128	# ivtmp.377,
 3198      0000
 3199 13fe C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 16B], tmp915
 3199      575001
 3200 1405 C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 48B], tmp918
 3200      777001
 363:sieve_extend.c ****         source_word += 2;
 3201              		.loc 1 363 9 is_stmt 1 view .LVU1005
 364:sieve_extend.c ****         distance += 2;
 3202              		.loc 1 364 9 view .LVU1006
 365:sieve_extend.c ****     }
 3203              		.loc 1 365 9 view .LVU1007
GAS LISTING /tmp/ccG38KJh.s 			page 92


 365:sieve_extend.c ****     }
 3204              		.loc 1 365 9 is_stmt 0 view .LVU1008
 3205              	.LBE401:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3206              		.loc 1 357 11 is_stmt 1 view .LVU1009
 3207 140c 4983FE02 		cmp	r14, 2	# bnd.315,
 3208 1410 0F864601 		jbe	.L386	#,
 3208      0000
 3209 1416 662E0F1F 		.p2align 4,,10
 3209      84000000 
 3209      0000
 3210              		.p2align 3
 3211              	.L254:
 3212              	.LBB402:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3213              		.loc 1 358 9 view .LVU1010
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3214              		.loc 1 359 9 view .LVU1011
 3215              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3216              		.loc 1 358 19 is_stmt 0 view .LVU1012
 3217 1420 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1005, MEM[base: vectp.322_373, index: ivtmp.377_533, offse
 3217      0C01
 3218              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3219              		.loc 1 359 19 view .LVU1013
 3220 1426 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B], 
 3220      2400
 3221 142c C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 32B
 3221      6C0020
 3222              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3223              		.loc 1 358 19 view .LVU1014
 3224 1433 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp644, tmp1005, MEM[base: vectp.322_373, index: 
 3224      440120
 3225              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3226              		.loc 1 359 19 view .LVU1015
 3227 143a C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp640, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0
 3227      F5
 3228 143f C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp655, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0
 3228      DD
 3229 1444 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_390, tmp640,
 3229      FED8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3230              		.loc 1 360 9 is_stmt 1 view .LVU1016
 3231              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3232              		.loc 1 358 19 is_stmt 0 view .LVU1017
 3233 144a C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp645, tmp644,
 3233      E8D8
 3234              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3235              		.loc 1 359 19 view .LVU1018
 3236 1450 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp656, tmp655,
 3236      F3D8
 3237              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccG38KJh.s 			page 93


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3238              		.loc 1 360 44 view .LVU1019
 3239 1456 C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.329, tmp645, _12
 3240              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3241              		.loc 1 360 65 view .LVU1020
 3242 145a C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.330, vect_perm_even_390, _18
 3243              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3244              		.loc 1 362 65 view .LVU1021
 3245 145e C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.333, tmp656, _18
 3246              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3247              		.loc 1 362 44 view .LVU1022
 3248 1462 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.332, vect_perm_even_390, _12
 3249              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3250              		.loc 1 360 54 view .LVU1023
 3251 1466 C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.331, vect__98.329, vect__100.330
 3252              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3253              		.loc 1 362 54 view .LVU1024
 3254 146a C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.334, vect__110.333, vect__109.332
 3254      F5
 3255              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3256              		.loc 1 360 33 view .LVU1025
 3257 146f C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp652, vect__104.331
 3257      CA01
 3258              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3259              		.loc 1 362 33 view .LVU1026
 3260 1475 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp663, vect__114.334
 3260      F101
 3261              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3262              		.loc 1 360 33 view .LVU1027
 3263 147b C40179D6 		vmovq	QWORD PTR [r15+r8], xmm9	# MEM[base: _396, index: ivtmp.377_533, offset: 0B], tmp649
 3263      0C07
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3264              		.loc 1 360 33 view .LVU1028
 3265 1481 C48179D6 		vmovq	QWORD PTR 32[r15+r8], xmm2	# MEM[base: _396, index: ivtmp.377_533, offset: 32B], tmp652
 3265      540720
 3266 1488 C403F916 		vpextrq	QWORD PTR 16[r15+r8], xmm9, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 16B], tmp649
 3266      4C071001 
 3267 1490 C483F916 		vpextrq	QWORD PTR 48[r15+r8], xmm2, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 48B], tmp652
 3267      54073001 
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3268              		.loc 1 361 9 is_stmt 1 view .LVU1029
 362:sieve_extend.c ****         copy_word += 2;
 3269              		.loc 1 362 9 view .LVU1030
 3270              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3271              		.loc 1 362 33 is_stmt 0 view .LVU1031
 3272 1498 C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _416, index: ivtmp.377_533, offset: 0B], tmp660
 3272      3407
 362:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccG38KJh.s 			page 94


 3273              		.loc 1 362 33 view .LVU1032
 3274 149e C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _416, index: ivtmp.377_533, offset: 32B], tmp663
 3274      4C0720
 3275 14a5 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 16B], tmp66
 3275      74071001 
 3276 14ad C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 48B], tmp663
 3276      4C073001 
 363:sieve_extend.c ****         source_word += 2;
 3277              		.loc 1 363 9 is_stmt 1 view .LVU1033
 364:sieve_extend.c ****         distance += 2;
 3278              		.loc 1 364 9 view .LVU1034
 365:sieve_extend.c ****     }
 3279              		.loc 1 365 9 view .LVU1035
 365:sieve_extend.c ****     }
 3280              		.loc 1 365 9 is_stmt 0 view .LVU1036
 3281              	.LBE402:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3282              		.loc 1 357 11 is_stmt 1 view .LVU1037
 3283              	.LBB403:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3284              		.loc 1 358 9 view .LVU1038
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3285              		.loc 1 359 9 view .LVU1039
 3286              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3287              		.loc 1 358 19 is_stmt 0 view .LVU1040
 3288 14b5 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1006, MEM[base: vectp.322_373, index: ivtmp.377_533, off
 3288      7C0140
 3289              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3290              		.loc 1 359 19 view .LVU1041
 3291 14bc C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B],
 3291      440040
 3292 14c3 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 32B]
 3292      440060
 3293              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3294              		.loc 1 358 19 view .LVU1042
 3295 14ca C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp674, tmp1006, MEM[base: vectp.322_373, index:
 3295      540160
 3296              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3297              		.loc 1 359 19 view .LVU1043
 3298 14d1 C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp670, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B],
 3299 14d5 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp685, MEM[base: vectp.326_382, index: ivtmp.377_533, offset: 0B]
 3300 14d9 C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_390, tmp670,
 3300      CDD8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3301              		.loc 1 360 9 is_stmt 1 view .LVU1044
 3302              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3303              		.loc 1 358 19 is_stmt 0 view .LVU1045
 3304 14df C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp675, tmp674,
 3304      D2D8
 3305              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3306              		.loc 1 359 19 view .LVU1046
GAS LISTING /tmp/ccG38KJh.s 			page 95


 3307 14e5 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp686, tmp685,
 3307      CFD8
 3308              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3309              		.loc 1 360 44 view .LVU1047
 3310 14eb C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.329, tmp675, _12
 3311              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3312              		.loc 1 360 65 view .LVU1048
 3313 14ef C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.330, vect_perm_even_390, _18
 3314              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3315              		.loc 1 362 65 view .LVU1049
 3316 14f3 C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.333, tmp686, _18
 3317              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3318              		.loc 1 362 44 view .LVU1050
 3319 14f7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.332, vect_perm_even_390, _12
 3320              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3321              		.loc 1 360 54 view .LVU1051
 3322 14fb C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.331, vect__98.329, vect__100.330
 3323              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3324              		.loc 1 362 54 view .LVU1052
 3325 14ff C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.334, vect__110.333, vect__109.332
 3326              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3327              		.loc 1 360 33 view .LVU1053
 3328 1503 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp682, vect__104.331
 3328      E601
 3329              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3330              		.loc 1 362 33 view .LVU1054
 3331 1509 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp693, vect__114.334
 3331      EF01
 3332 150f 4983C102 		add	r9, 2	# ivtmp.375,
 3333              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3334              		.loc 1 360 33 view .LVU1055
 3335 1513 C40179D6 		vmovq	QWORD PTR 64[r15+r8], xmm12	# MEM[base: _396, index: ivtmp.377_533, offset: 0B], tmp679
 3335      640740
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3336              		.loc 1 360 33 view .LVU1056
 3337 151a C40179D6 		vmovq	QWORD PTR 96[r15+r8], xmm14	# MEM[base: _396, index: ivtmp.377_533, offset: 32B], tmp682
 3337      740760
 3338 1521 C403F916 		vpextrq	QWORD PTR 80[r15+r8], xmm12, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 16B], tmp67
 3338      64075001 
 3339 1529 C403F916 		vpextrq	QWORD PTR 112[r15+r8], xmm14, 1	# MEM[base: _396, index: ivtmp.377_533, offset: 48B], tmp6
 3339      74077001 
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3340              		.loc 1 361 9 is_stmt 1 view .LVU1057
 362:sieve_extend.c ****         copy_word += 2;
 3341              		.loc 1 362 9 view .LVU1058
 3342              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3343              		.loc 1 362 33 is_stmt 0 view .LVU1059
GAS LISTING /tmp/ccG38KJh.s 			page 96


 3344 1531 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _416, index: ivtmp.377_533, offset: 0B], tmp690
 3344      6C0740
 362:sieve_extend.c ****         copy_word += 2;
 3345              		.loc 1 362 33 view .LVU1060
 3346 1538 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _416, index: ivtmp.377_533, offset: 32B], tmp693
 3346      7C0760
 3347 153f C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 16B], tmp690
 3347      6C075001 
 3348 1547 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _416, index: ivtmp.377_533, offset: 48B], tmp69
 3348      7C077001 
 363:sieve_extend.c ****         source_word += 2;
 3349              		.loc 1 363 9 is_stmt 1 view .LVU1061
 364:sieve_extend.c ****         distance += 2;
 3350              		.loc 1 364 9 view .LVU1062
 365:sieve_extend.c ****     }
 3351              		.loc 1 365 9 view .LVU1063
 365:sieve_extend.c ****     }
 3352              		.loc 1 365 9 is_stmt 0 view .LVU1064
 3353              	.LBE403:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3354              		.loc 1 357 11 is_stmt 1 view .LVU1065
 3355 154f 4983E880 		sub	r8, -128	# ivtmp.377,
 3356 1553 4D39CE   		cmp	r14, r9	# bnd.315, ivtmp.375
 3357 1556 0F87C4FE 		ja	.L254	#,
 3357      FFFF
 3358              	.L386:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3359              		.loc 1 357 11 is_stmt 0 view .LVU1066
 3360 155c 49C1E603 		sal	r14, 3	# _366,
 3361 1560 4B8D0C33 		lea	rcx, [r11+r14]	# tmp.317,
 3362              	.LBB404:
 3363              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3364              		.loc 1 358 39 view .LVU1067
 3365 1564 4C8D3CCD 		lea	r15, 0[0+rcx*8]	# _55,
 3365      00000000 
 3366              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3367              		.loc 1 359 19 view .LVU1068
 3368 156c 4A8B7C3B 		mov	rdi, QWORD PTR 8[rbx+r15]	# source1, *_156
 3368      08
 3369 1571 4B8D0434 		lea	rax, [r12+r14]	# tmp.318,
 3370              	.LVL147:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3371              		.loc 1 358 9 is_stmt 1 view .LVU1069
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3372              		.loc 1 359 9 view .LVU1070
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3373              		.loc 1 360 9 view .LVU1071
 3374              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3375              		.loc 1 360 44 is_stmt 0 view .LVU1072
 3376 1575 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp524, *_56, shift
 3376      34CB
 3377              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3378              		.loc 1 360 65 view .LVU1073
GAS LISTING /tmp/ccG38KJh.s 			page 97


 3379 157b C462E9F7 		shlx	r10, rdi, rdx	# tmp526, source1, shift_flipped
 3379      D7
 3380              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3381              		.loc 1 360 54 view .LVU1074
 3382 1580 4C09D6   		or	rsi, r10	# tmp527, tmp526
 3383 1583 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_79, tmp527
 3384              	.LVL148:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3385              		.loc 1 361 9 is_stmt 1 view .LVU1075
 3386              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3387              		.loc 1 362 44 is_stmt 0 view .LVU1076
 3388 1587 C4E293F7 		shrx	rdi, rdi, r13	# tmp530, source1, shift
 3388      FF
 3389              	.LVL149:
 3390              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3391              		.loc 1 361 39 view .LVU1077
 3392 158c 4C8D4902 		lea	r9, 2[rcx]	# _439,
 3393              	.LVL150:
 362:sieve_extend.c ****         copy_word += 2;
 3394              		.loc 1 362 9 is_stmt 1 view .LVU1078
 3395              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3396              		.loc 1 362 65 is_stmt 0 view .LVU1079
 3397 1590 4E8B443B 		mov	r8, QWORD PTR 16[rbx+r15]	# *_441, *_441
 3397      10
 3398              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3399              		.loc 1 365 18 view .LVU1080
 3400 1595 4D8D5602 		lea	r10, 2[r14]	# distance,
 3401              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3402              		.loc 1 362 65 view .LVU1081
 3403 1599 C442E9F7 		shlx	r15, r8, rdx	# tmp528, *_441, shift_flipped
 3403      F8
 3404              	.LVL151:
 3405              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3406              		.loc 1 362 54 view .LVU1082
 3407 159e 4C09FF   		or	rdi, r15	# tmp531, tmp528
 3408              	.LBE404:
 3409              	# sieve_extend.c:357:     while (copy_word < fast_loop_stop_word) {
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3410              		.loc 1 357 11 view .LVU1083
 3411 15a1 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# fast_loop_stop_word, %sfp
 3411      28
 3412              	.LBB405:
 3413              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3414              		.loc 1 363 19 view .LVU1084
 3415 15a6 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 3416              	.LVL152:
 3417              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3418              		.loc 1 362 54 view .LVU1085
GAS LISTING /tmp/ccG38KJh.s 			page 98


 3419 15aa 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_447, tmp531
 3419      08
 3420              	.LVL153:
 363:sieve_extend.c ****         source_word += 2;
 3421              		.loc 1 363 9 is_stmt 1 view .LVU1086
 364:sieve_extend.c ****         distance += 2;
 3422              		.loc 1 364 9 view .LVU1087
 365:sieve_extend.c ****     }
 3423              		.loc 1 365 9 view .LVU1088
 365:sieve_extend.c ****     }
 3424              		.loc 1 365 9 is_stmt 0 view .LVU1089
 3425              	.LBE405:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3426              		.loc 1 357 11 is_stmt 1 view .LVU1090
 3427 15af 4D39C7   		cmp	r15, r8	# fast_loop_stop_word, copy_word
 3428 15b2 0F86D500 		jbe	.L257	#,
 3428      0000
 3429              	.LBB406:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3430              		.loc 1 358 9 view .LVU1091
 3431              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3432              		.loc 1 358 39 is_stmt 0 view .LVU1092
 3433 15b8 4E8D14CD 		lea	r10, 0[0+r9*8]	# _456,
 3433      00000000 
 3434              	.LVL154:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3435              		.loc 1 359 9 is_stmt 1 view .LVU1093
 3436              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3437              		.loc 1 359 19 is_stmt 0 view .LVU1094
 3438 15c0 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_461
 3438      08
 3439              	.LVL155:
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3440              		.loc 1 360 9 is_stmt 1 view .LVU1095
 3441              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3442              		.loc 1 360 44 is_stmt 0 view .LVU1096
 3443 15c5 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_457, *_457
 3444              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3445              		.loc 1 360 65 view .LVU1097
 3446 15c9 C462E9F7 		shlx	r9, rdi, rdx	# tmp534, source1, shift_flipped
 3446      CF
 3447              	.LVL156:
 3448              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3449              		.loc 1 360 44 view .LVU1098
 3450 15ce C4E293F7 		shrx	rsi, rsi, r13	# tmp532, *_457, shift
 3450      F6
 3451              	.LVL157:
 3452              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3453              		.loc 1 360 54 view .LVU1099
 3454 15d3 4C09CE   		or	rsi, r9	# tmp535, tmp534
 3455 15d6 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_466, tmp535
GAS LISTING /tmp/ccG38KJh.s 			page 99


 3456              	.LVL158:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3457              		.loc 1 361 9 is_stmt 1 view .LVU1100
 3458              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3459              		.loc 1 362 44 is_stmt 0 view .LVU1101
 3460 15da C4E293F7 		shrx	rdi, rdi, r13	# tmp538, source1, shift
 3460      FF
 3461              	.LVL159:
 3462              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3463              		.loc 1 361 39 view .LVU1102
 3464 15df 4C8D4904 		lea	r9, 4[rcx]	# _469,
 3465              	.LVL160:
 362:sieve_extend.c ****         copy_word += 2;
 3466              		.loc 1 362 9 is_stmt 1 view .LVU1103
 3467              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3468              		.loc 1 362 65 is_stmt 0 view .LVU1104
 3469 15e3 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_471, *_471
 3469      10
 3470              	.LVL161:
 362:sieve_extend.c ****         copy_word += 2;
 3471              		.loc 1 362 65 view .LVU1105
 3472 15e8 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp536, *_471, shift_flipped
 3472      F2
 3473              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3474              		.loc 1 362 54 view .LVU1106
 3475 15ed 4809F7   		or	rdi, rsi	# tmp539, tmp536
 3476 15f0 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_477, tmp539
 3476      08
 363:sieve_extend.c ****         source_word += 2;
 3477              		.loc 1 363 9 is_stmt 1 view .LVU1107
 3478              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3479              		.loc 1 363 19 is_stmt 0 view .LVU1108
 3480 15f5 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 3481              	.LVL162:
 364:sieve_extend.c ****         distance += 2;
 3482              		.loc 1 364 9 is_stmt 1 view .LVU1109
 365:sieve_extend.c ****     }
 3483              		.loc 1 365 9 view .LVU1110
 3484              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3485              		.loc 1 365 18 is_stmt 0 view .LVU1111
 3486 15f9 4D8D5604 		lea	r10, 4[r14]	# distance,
 3487              	.LVL163:
 365:sieve_extend.c ****     }
 3488              		.loc 1 365 18 view .LVU1112
 3489              	.LBE406:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3490              		.loc 1 357 11 is_stmt 1 view .LVU1113
 3491 15fd 4D39C7   		cmp	r15, r8	# fast_loop_stop_word, copy_word
 3492 1600 0F868700 		jbe	.L257	#,
 3492      0000
 3493              	.LBB407:
GAS LISTING /tmp/ccG38KJh.s 			page 100


 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3494              		.loc 1 358 9 view .LVU1114
 3495              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3496              		.loc 1 358 39 is_stmt 0 view .LVU1115
 3497 1606 4E8D14CD 		lea	r10, 0[0+r9*8]	# _486,
 3497      00000000 
 3498              	.LVL164:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3499              		.loc 1 359 9 is_stmt 1 view .LVU1116
 3500              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3501              		.loc 1 359 19 is_stmt 0 view .LVU1117
 3502 160e 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_491
 3502      08
 3503              	.LVL165:
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3504              		.loc 1 360 9 is_stmt 1 view .LVU1118
 3505              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3506              		.loc 1 360 44 is_stmt 0 view .LVU1119
 3507 1613 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_487, *_487
 3508              	.LVL166:
 3509              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3510              		.loc 1 363 19 view .LVU1120
 3511 1617 4883C006 		add	rax, 6	# copy_word,
 3512              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3513              		.loc 1 360 44 view .LVU1121
 3514 161b C4C293F7 		shrx	rsi, r9, r13	# tmp540, *_487, shift
 3514      F1
 3515              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3516              		.loc 1 360 65 view .LVU1122
 3517 1620 C462E9F7 		shlx	r9, rdi, rdx	# tmp542, source1, shift_flipped
 3517      CF
 3518              	.LVL167:
 3519              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3520              		.loc 1 360 54 view .LVU1123
 3521 1625 4C09CE   		or	rsi, r9	# tmp543, tmp542
 3522 1628 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_496, tmp543
 3523              	.LVL168:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3524              		.loc 1 361 9 is_stmt 1 view .LVU1124
 3525              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3526              		.loc 1 362 44 is_stmt 0 view .LVU1125
 3527 162c C4E293F7 		shrx	rdi, rdi, r13	# tmp546, source1, shift
 3527      FF
 3528              	.LVL169:
 3529              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3530              		.loc 1 361 39 view .LVU1126
 3531 1631 4883C106 		add	rcx, 6	# _499,
 3532              	.LVL170:
GAS LISTING /tmp/ccG38KJh.s 			page 101


 362:sieve_extend.c ****         copy_word += 2;
 3533              		.loc 1 362 9 is_stmt 1 view .LVU1127
 3534              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3535              		.loc 1 362 65 is_stmt 0 view .LVU1128
 3536 1635 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_501, *_501
 3536      10
 3537              	.LVL171:
 362:sieve_extend.c ****         copy_word += 2;
 3538              		.loc 1 362 65 view .LVU1129
 3539 163a C4C2E9F7 		shlx	rsi, r10, rdx	# tmp544, *_501, shift_flipped
 3539      F2
 3540              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3541              		.loc 1 362 54 view .LVU1130
 3542 163f 4809F7   		or	rdi, rsi	# tmp547, tmp544
 3543 1642 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_507, tmp547
 3543      08
 363:sieve_extend.c ****         source_word += 2;
 3544              		.loc 1 363 9 is_stmt 1 view .LVU1131
 3545              	.LVL172:
 364:sieve_extend.c ****         distance += 2;
 3546              		.loc 1 364 9 view .LVU1132
 365:sieve_extend.c ****     }
 3547              		.loc 1 365 9 view .LVU1133
 3548              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3549              		.loc 1 365 18 is_stmt 0 view .LVU1134
 3550 1647 4D8D5606 		lea	r10, 6[r14]	# distance,
 3551              	.LVL173:
 365:sieve_extend.c ****     }
 3552              		.loc 1 365 18 view .LVU1135
 3553              	.LBE407:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3554              		.loc 1 357 11 is_stmt 1 view .LVU1136
 3555 164b 4939C7   		cmp	r15, rax	# fast_loop_stop_word, copy_word
 3556 164e 763D     		jbe	.L257	#,
 3557              	.LBB408:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3558              		.loc 1 358 9 view .LVU1137
 3559              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3560              		.loc 1 358 39 is_stmt 0 view .LVU1138
 3561 1650 4C8D3CCD 		lea	r15, 0[0+rcx*8]	# _335,
 3561      00000000 
 3562              	.LVL174:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3563              		.loc 1 359 9 is_stmt 1 view .LVU1139
 3564              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3565              		.loc 1 359 19 is_stmt 0 view .LVU1140
 3566 1658 4E8B4C3B 		mov	r9, QWORD PTR 8[rbx+r15]	# source1, *_340
 3566      08
 3567              	.LVL175:
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3568              		.loc 1 360 9 is_stmt 1 view .LVU1141
 3569              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccG38KJh.s 			page 102


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3570              		.loc 1 360 44 is_stmt 0 view .LVU1142
 3571 165d 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_336, *_336
 3572              	.LVL176:
 3573              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3574              		.loc 1 360 65 view .LVU1143
 3575 1661 C442E9F7 		shlx	r8, r9, rdx	# tmp550, source1, shift_flipped
 3575      C1
 3576              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3577              		.loc 1 360 44 view .LVU1144
 3578 1666 C46293F7 		shrx	r10, rcx, r13	# tmp548, *_336, shift
 3578      D1
 3579              	.LVL177:
 3580              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3581              		.loc 1 360 54 view .LVU1145
 3582 166b 4D09C2   		or	r10, r8	# tmp551, tmp550
 3583 166e 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_345, tmp551
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3584              		.loc 1 361 9 is_stmt 1 view .LVU1146
 3585              	.LVL178:
 362:sieve_extend.c ****         copy_word += 2;
 3586              		.loc 1 362 9 view .LVU1147
 3587              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3588              		.loc 1 365 18 is_stmt 0 view .LVU1148
 3589 1672 4D8D5608 		lea	r10, 8[r14]	# distance,
 3590              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3591              		.loc 1 362 65 view .LVU1149
 3592 1676 4A8B743B 		mov	rsi, QWORD PTR 16[rbx+r15]	# *_350, *_350
 3592      10
 3593              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3594              		.loc 1 362 44 view .LVU1150
 3595 167b C44293F7 		shrx	r15, r9, r13	# tmp554, source1, shift
 3595      F9
 3596              	.LVL179:
 3597              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3598              		.loc 1 362 65 view .LVU1151
 3599 1680 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp552, *_350, shift_flipped
 3599      FE
 3600              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3601              		.loc 1 362 54 view .LVU1152
 3602 1685 4909FF   		or	r15, rdi	# tmp555, tmp552
 3603 1688 4C897CC3 		mov	QWORD PTR 8[rbx+rax*8], r15	# *_356, tmp555
 3603      08
 363:sieve_extend.c ****         source_word += 2;
 3604              		.loc 1 363 9 is_stmt 1 view .LVU1153
 364:sieve_extend.c ****         distance += 2;
 3605              		.loc 1 364 9 view .LVU1154
 3606              	.LVL180:
 365:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 103


 3607              		.loc 1 365 9 view .LVU1155
 365:sieve_extend.c ****     }
 3608              		.loc 1 365 9 is_stmt 0 view .LVU1156
 3609              	.LBE408:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3610              		.loc 1 357 11 is_stmt 1 view .LVU1157
 3611              	.L257:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3612              		.loc 1 357 11 is_stmt 0 view .LVU1158
 3613 168d 4D01D3   		add	r11, r10	# tmp.300, distance
 3614 1690 4D01D4   		add	r12, r10	# tmp.301, distance
 3615              	.LVL181:
 3616              	.L252:
 367:sieve_extend.c **** }
 3617              		.loc 1 367 5 is_stmt 1 view .LVU1159
 367:sieve_extend.c **** }
 3618              		.loc 1 367 5 is_stmt 0 view .LVU1160
 3619              	.LBE418:
 3620              	.LBE422:
 388:sieve_extend.c ****     copy_word += distance;
 3621              		.loc 1 388 5 is_stmt 1 view .LVU1161
 389:sieve_extend.c **** 
 3622              		.loc 1 389 5 view .LVU1162
 391:sieve_extend.c **** 
 3623              		.loc 1 391 5 view .LVU1163
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3624              		.loc 1 394 11 view .LVU1164
 3625              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3626              		.loc 1 394 5 is_stmt 0 view .LVU1165
 3627 1693 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 3627      50
 3628 1698 4C39E7   		cmp	rdi, r12	# aligned_copy_word, tmp.301
 3629 169b 0F82CF08 		jb	.L270	#,
 3629      0000
 3630 16a1 488D4F01 		lea	rcx, 1[rdi]	# tmp.291,
 3631 16a5 4989CE   		mov	r14, rcx	# niters.297, tmp.291
 3632 16a8 4C29E7   		sub	rdi, r12	# tmp566, tmp.301
 3633 16ab 4D29E6   		sub	r14, r12	# niters.297, tmp.301
 3634 16ae 4883FF02 		cmp	rdi, 2	# tmp566,
 3635 16b2 0F86B902 		jbe	.L259	#,
 3635      0000
 3636 16b8 4D89F2   		mov	r10, r14	# bnd.298, niters.297
 3637 16bb 49C1EA02 		shr	r10, 2	# bnd.298,
 3638 16bf 49C1E205 		sal	r10, 5	# _518,
 3639 16c3 498D72E0 		lea	rsi, -32[r10]	# tmp621,
 3640 16c7 48C1EE05 		shr	rsi, 5	# tmp619,
 3641 16cb 4A8D04DD 		lea	rax, 0[0+r11*8]	# _31,
 3641      00000000 
 3642 16d3 48FFC6   		inc	rsi	# tmp622
 3643 16d6 C5796E54 		vmovd	xmm10, DWORD PTR 64[rsp]	# _12, %sfp
 3643      2440
 3644 16dc C5796E5C 		vmovd	xmm11, DWORD PTR 60[rsp]	# _18, %sfp
 3644      243C
 3645 16e2 4C8D3C03 		lea	r15, [rbx+rax]	# vectp.303,
 3646 16e6 4C8D4403 		lea	r8, 8[rbx+rax]	# vectp.307,
 3646      08
GAS LISTING /tmp/ccG38KJh.s 			page 104


 3647 16eb 4E8D0CE3 		lea	r9, [rbx+r12*8]	# vectp.312,
 3648 16ef 31FF     		xor	edi, edi	# ivtmp.353
 3649 16f1 83E607   		and	esi, 7	# tmp623,
 3650 16f4 0F841801 		je	.L260	#,
 3650      0000
 3651 16fa 4883FE01 		cmp	rsi, 1	# tmp623,
 3652 16fe 0F84E000 		je	.L345	#,
 3652      0000
 3653 1704 4883FE02 		cmp	rsi, 2	# tmp623,
 3654 1708 0F84B200 		je	.L346	#,
 3654      0000
 3655 170e 4883FE03 		cmp	rsi, 3	# tmp623,
 3656 1712 0F848300 		je	.L347	#,
 3656      0000
 3657 1718 4883FE04 		cmp	rsi, 4	# tmp623,
 3658 171c 7458     		je	.L348	#,
 3659 171e 4883FE05 		cmp	rsi, 5	# tmp623,
 3660 1722 742E     		je	.L349	#,
 3661 1724 4883FE06 		cmp	rsi, 6	# tmp623,
 3662 1728 0F852A06 		jne	.L412	#,
 3662      0000
 3663              	.L350:
 395:sieve_extend.c ****     }
 3664              		.loc 1 395 9 is_stmt 1 view .LVU1166
 3665              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3666              		.loc 1 395 60 is_stmt 0 view .LVU1167
 3667 172e C4417E6F 		vmovdqu	ymm13, YMMWORD PTR [r15+rdi]	# tmp1072, MEM[base: vectp.303_32, index: ivtmp.353_516, offs
 3667      2C3F
 3668              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3669              		.loc 1 395 100 view .LVU1168
 3670 1734 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdi]	# tmp1073, MEM[base: vectp.307_1, index: ivtmp.353_516, offset
 3670      3C38
 3671              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3672              		.loc 1 395 60 view .LVU1169
 3673 173a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.305, tmp1072, _12
 3673      F2
 3674              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3675              		.loc 1 395 100 view .LVU1170
 3676 173f C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.309, tmp1073, _18
 3676      CB
 3677              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3678              		.loc 1 395 70 view .LVU1171
 3679 1744 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.310, vect__38.305, vect__43.309
 3680              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3681              		.loc 1 395 31 view .LVU1172
 3682 1748 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm8	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], v
 3682      0439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3683              		.loc 1 394 43 is_stmt 1 view .LVU1173
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3684              		.loc 1 394 11 view .LVU1174
GAS LISTING /tmp/ccG38KJh.s 			page 105


 3685 174e 4883C720 		add	rdi, 32	# ivtmp.353,
 3686              	.L349:
 395:sieve_extend.c ****     }
 3687              		.loc 1 395 9 view .LVU1175
 3688              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3689              		.loc 1 395 60 is_stmt 0 view .LVU1176
 3690 1752 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r15+rdi]	# tmp1074, MEM[base: vectp.303_32, index: ivtmp.353_516, offse
 3690      043F
 3691              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3692              		.loc 1 395 100 view .LVU1177
 3693 1758 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdi]	# tmp1075, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3693      0C38
 3694              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3695              		.loc 1 395 60 view .LVU1178
 3696 175e C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.305, tmp1074, _12
 3696      EA
 3697              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3698              		.loc 1 395 100 view .LVU1179
 3699 1763 C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.309, tmp1075, _18
 3699      FB
 3700              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3701              		.loc 1 395 70 view .LVU1180
 3702 1768 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.310, vect__38.305, vect__43.309
 3703              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3704              		.loc 1 395 31 view .LVU1181
 3705 176c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm3	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], v
 3705      1C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3706              		.loc 1 394 43 is_stmt 1 view .LVU1182
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3707              		.loc 1 394 11 view .LVU1183
 3708 1772 4883C720 		add	rdi, 32	# ivtmp.353,
 3709              	.L348:
 395:sieve_extend.c ****     }
 3710              		.loc 1 395 9 view .LVU1184
 3711              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3712              		.loc 1 395 60 is_stmt 0 view .LVU1185
 3713 1776 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r15+rdi]	# tmp1076, MEM[base: vectp.303_32, index: ivtmp.353_516, offse
 3713      143F
 3714              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3715              		.loc 1 395 100 view .LVU1186
 3716 177c C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8+rdi]	# tmp1077, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3716      2438
 3717              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3718              		.loc 1 395 60 view .LVU1187
 3719 1782 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.305, tmp1076, _12
 3719      F2
 3720              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccG38KJh.s 			page 106


 395:sieve_extend.c ****     }
 3721              		.loc 1 395 100 view .LVU1188
 3722 1787 C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.309, tmp1077, _18
 3722      E3
 3723              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3724              		.loc 1 395 70 view .LVU1189
 3725 178c C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.310, vect__38.305, vect__43.309
 3725      EC
 3726              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3727              		.loc 1 395 31 view .LVU1190
 3728 1791 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm13	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], 
 3728      2C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3729              		.loc 1 394 43 is_stmt 1 view .LVU1191
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3730              		.loc 1 394 11 view .LVU1192
 3731 1797 4883C720 		add	rdi, 32	# ivtmp.353,
 3732              	.L347:
 395:sieve_extend.c ****     }
 3733              		.loc 1 395 9 view .LVU1193
 3734              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3735              		.loc 1 395 60 is_stmt 0 view .LVU1194
 3736 179b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r15+rdi]	# tmp1078, MEM[base: vectp.303_32, index: ivtmp.353_516, offs
 3736      343F
 3737              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3738              		.loc 1 395 100 view .LVU1195
 3739 17a1 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rdi]	# tmp1079, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3739      0C38
 3740              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3741              		.loc 1 395 60 view .LVU1196
 3742 17a7 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.305, tmp1078, _12
 3742      FA
 3743              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3744              		.loc 1 395 100 view .LVU1197
 3745 17ac C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.309, tmp1079, _18
 3745      C3
 3746              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3747              		.loc 1 395 70 view .LVU1198
 3748 17b1 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.310, vect__38.305, vect__43.309
 3748      C0
 3749              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3750              		.loc 1 395 31 view .LVU1199
 3751 17b6 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm0	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], v
 3751      0439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3752              		.loc 1 394 43 is_stmt 1 view .LVU1200
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3753              		.loc 1 394 11 view .LVU1201
 3754 17bc 4883C720 		add	rdi, 32	# ivtmp.353,
GAS LISTING /tmp/ccG38KJh.s 			page 107


 3755              	.L346:
 395:sieve_extend.c ****     }
 3756              		.loc 1 395 9 view .LVU1202
 3757              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3758              		.loc 1 395 60 is_stmt 0 view .LVU1203
 3759 17c0 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r15+rdi]	# tmp1080, MEM[base: vectp.303_32, index: ivtmp.353_516, offse
 3759      2C3F
 3760              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3761              		.loc 1 395 100 view .LVU1204
 3762 17c6 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rdi]	# tmp1081, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3762      3C38
 3763              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3764              		.loc 1 395 60 view .LVU1205
 3765 17cc C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.305, tmp1080, _12
 3765      CA
 3766              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3767              		.loc 1 395 100 view .LVU1206
 3768 17d1 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.309, tmp1081, _18
 3768      DB
 3769              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3770              		.loc 1 395 70 view .LVU1207
 3771 17d6 C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.310, vect__38.305, vect__43.309
 3772              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3773              		.loc 1 395 31 view .LVU1208
 3774 17da C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm2	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], v
 3774      1439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3775              		.loc 1 394 43 is_stmt 1 view .LVU1209
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3776              		.loc 1 394 11 view .LVU1210
 3777 17e0 4883C720 		add	rdi, 32	# ivtmp.353,
 3778              	.L345:
 395:sieve_extend.c ****     }
 3779              		.loc 1 395 9 view .LVU1211
 3780              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3781              		.loc 1 395 60 is_stmt 0 view .LVU1212
 3782 17e4 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r15+rdi]	# tmp1082, MEM[base: vectp.303_32, index: ivtmp.353_516, offse
 3782      343F
 3783              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3784              		.loc 1 395 100 view .LVU1213
 3785 17ea C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8+rdi]	# tmp1083, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3785      2438
 3786              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3787              		.loc 1 395 60 view .LVU1214
 3788 17f0 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.305, tmp1082, _12
 3788      E2
 3789              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 108


 3790              		.loc 1 395 100 view .LVU1215
 3791 17f5 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.309, tmp1083, _18
 3791      EB
 3792              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3793              		.loc 1 395 70 view .LVU1216
 3794 17fa C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.310, vect__38.305, vect__43.309
 3794      F5
 3795              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3796              		.loc 1 395 31 view .LVU1217
 3797 17ff C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm14	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], 
 3797      3439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3798              		.loc 1 394 43 is_stmt 1 view .LVU1218
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3799              		.loc 1 394 11 view .LVU1219
 3800 1805 4883C720 		add	rdi, 32	# ivtmp.353,
 3801 1809 4C39D7   		cmp	rdi, r10	# ivtmp.353, _518
 3802 180c 0F844D01 		je	.L391	#,
 3802      0000
 3803              	.L260:
 395:sieve_extend.c ****     }
 3804              		.loc 1 395 9 discriminator 2 view .LVU1220
 3805              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3806              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1221
 3807 1812 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r15+rdi]	# tmp1023, MEM[base: vectp.303_32, index: ivtmp.353_516, offs
 3807      3C3F
 3808              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3809              		.loc 1 395 100 discriminator 2 view .LVU1222
 3810 1818 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rdi]	# tmp1024, MEM[base: vectp.307_1, index: ivtmp.353_516, offset:
 3810      0438
 3811              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3812              		.loc 1 395 60 discriminator 2 view .LVU1223
 3813 181e C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.305, tmp1023, _12
 3813      CA
 3814              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3815              		.loc 1 395 100 discriminator 2 view .LVU1224
 3816 1823 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.309, tmp1024, _18
 3816      C3
 3817              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3818              		.loc 1 395 70 discriminator 2 view .LVU1225
 3819 1828 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.310, vect__38.305, vect__43.309
 3820              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3821              		.loc 1 395 31 discriminator 2 view .LVU1226
 3822 182c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm5	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], v
 3822      2C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3823              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1227
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3824              		.loc 1 394 11 discriminator 2 view .LVU1228
GAS LISTING /tmp/ccG38KJh.s 			page 109


 395:sieve_extend.c ****     }
 3825              		.loc 1 395 9 discriminator 2 view .LVU1229
 3826              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3827              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1230
 3828 1832 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 32[r15+rdi]	# tmp1025, MEM[base: vectp.303_32, index: ivtmp.353_516, off
 3828      4C3F20
 3829              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3830              		.loc 1 395 100 discriminator 2 view .LVU1231
 3831 1839 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 32[r8+rdi]	# tmp1026, MEM[base: vectp.307_1, index: ivtmp.353_516, offse
 3831      5C3820
 3832              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3833              		.loc 1 395 60 discriminator 2 view .LVU1232
 3834 1840 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.305, tmp1025, _12
 3834      FA
 3835              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3836              		.loc 1 395 100 discriminator 2 view .LVU1233
 3837 1845 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.309, tmp1026, _18
 3837      D3
 3838              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3839              		.loc 1 395 70 discriminator 2 view .LVU1234
 3840 184a C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.310, vect__38.305, vect__43.309
 3841              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3842              		.loc 1 395 31 discriminator 2 view .LVU1235
 3843 184e C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rdi], ymm6	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B],
 3843      743920
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3844              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1236
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3845              		.loc 1 394 11 discriminator 2 view .LVU1237
 395:sieve_extend.c ****     }
 3846              		.loc 1 395 9 discriminator 2 view .LVU1238
 3847              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3848              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1239
 3849 1855 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 64[r15+rdi]	# tmp1027, MEM[base: vectp.303_32, index: ivtmp.353_516, of
 3849      643F40
 3850              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3851              		.loc 1 395 100 discriminator 2 view .LVU1240
 3852 185c C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 64[r8+rdi]	# tmp1028, MEM[base: vectp.307_1, index: ivtmp.353_516, offse
 3852      643840
 3853              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3854              		.loc 1 395 60 discriminator 2 view .LVU1241
 3855 1863 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.305, tmp1027, _12
 3855      EA
 3856              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3857              		.loc 1 395 100 discriminator 2 view .LVU1242
 3858 1868 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.309, tmp1028, _18
 3858      F3
GAS LISTING /tmp/ccG38KJh.s 			page 110


 3859              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3860              		.loc 1 395 70 discriminator 2 view .LVU1243
 3861 186d C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.310, vect__38.305, vect__43.309
 3861      FE
 3862              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3863              		.loc 1 395 31 discriminator 2 view .LVU1244
 3864 1872 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdi], ymm15	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B]
 3864      7C3940
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3865              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1245
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3866              		.loc 1 394 11 discriminator 2 view .LVU1246
 395:sieve_extend.c ****     }
 3867              		.loc 1 395 9 discriminator 2 view .LVU1247
 3868              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3869              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1248
 3870 1879 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR 96[r15+rdi]	# tmp1029, MEM[base: vectp.303_32, index: ivtmp.353_516, off
 3870      4C3F60
 3871              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3872              		.loc 1 395 100 discriminator 2 view .LVU1249
 3873 1880 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rdi]	# tmp1030, MEM[base: vectp.307_1, index: ivtmp.353_516, offse
 3873      443860
 3874              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3875              		.loc 1 395 60 discriminator 2 view .LVU1250
 3876 1887 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.305, tmp1029, _12
 3876      C2
 3877              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3878              		.loc 1 395 100 discriminator 2 view .LVU1251
 3879 188c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.309, tmp1030, _18
 3879      EB
 3880              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3881              		.loc 1 395 70 discriminator 2 view .LVU1252
 3882 1891 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.310, vect__38.305, vect__43.309
 3883              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3884              		.loc 1 395 31 discriminator 2 view .LVU1253
 3885 1895 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rdi], ymm9	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B],
 3885      4C3960
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3886              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1254
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3887              		.loc 1 394 11 discriminator 2 view .LVU1255
 395:sieve_extend.c ****     }
 3888              		.loc 1 395 9 discriminator 2 view .LVU1256
 3889              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3890              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1257
 3891 189c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r15+rdi]	# tmp1031, MEM[base: vectp.303_32, index: ivtmp.353_516, of
 3891      BC3F8000 
 3891      0000
GAS LISTING /tmp/ccG38KJh.s 			page 111


 3892              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3893              		.loc 1 395 100 discriminator 2 view .LVU1258
 3894 18a6 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 128[r8+rdi]	# tmp1032, MEM[base: vectp.307_1, index: ivtmp.353_516, offs
 3894      9C388000 
 3894      0000
 3895              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3896              		.loc 1 395 60 discriminator 2 view .LVU1259
 3897 18b0 C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.305, tmp1031, _12
 3897      D2
 3898              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3899              		.loc 1 395 100 discriminator 2 view .LVU1260
 3900 18b5 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.309, tmp1032, _18
 3900      F3
 3901              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3902              		.loc 1 395 70 discriminator 2 view .LVU1261
 3903 18ba C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.310, vect__38.305, vect__43.309
 3904              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3905              		.loc 1 395 31 discriminator 2 view .LVU1262
 3906 18be C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdi], ymm12	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B
 3906      A4398000 
 3906      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3907              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1263
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3908              		.loc 1 394 11 discriminator 2 view .LVU1264
 395:sieve_extend.c ****     }
 3909              		.loc 1 395 9 discriminator 2 view .LVU1265
 3910              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3911              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1266
 3912 18c8 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 160[r15+rdi]	# tmp1033, MEM[base: vectp.303_32, index: ivtmp.353_516, o
 3912      AC3FA000 
 3912      0000
 3913              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3914              		.loc 1 395 100 discriminator 2 view .LVU1267
 3915 18d2 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 160[r8+rdi]	# tmp1034, MEM[base: vectp.307_1, index: ivtmp.353_516, offs
 3915      A438A000 
 3915      0000
 3916              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3917              		.loc 1 395 60 discriminator 2 view .LVU1268
 3918 18dc C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.305, tmp1033, _12
 3918      F2
 3919              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3920              		.loc 1 395 100 discriminator 2 view .LVU1269
 3921 18e1 C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.309, tmp1034, _18
 3921      FB
 3922              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3923              		.loc 1 395 70 discriminator 2 view .LVU1270
GAS LISTING /tmp/ccG38KJh.s 			page 112


 3924 18e6 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.310, vect__38.305, vect__43.309
 3924      CF
 3925              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3926              		.loc 1 395 31 discriminator 2 view .LVU1271
 3927 18eb C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rdi], ymm1	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B]
 3927      8C39A000 
 3927      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3928              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1272
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3929              		.loc 1 394 11 discriminator 2 view .LVU1273
 395:sieve_extend.c ****     }
 3930              		.loc 1 395 9 discriminator 2 view .LVU1274
 3931              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3932              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1275
 3933 18f5 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 192[r15+rdi]	# tmp1035, MEM[base: vectp.303_32, index: ivtmp.353_516, of
 3933      843FC000 
 3933      0000
 3934              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3935              		.loc 1 395 100 discriminator 2 view .LVU1276
 3936 18ff C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rdi]	# tmp1036, MEM[base: vectp.307_1, index: ivtmp.353_516, offs
 3936      AC38C000 
 3936      0000
 3937              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3938              		.loc 1 395 60 discriminator 2 view .LVU1277
 3939 1909 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.305, tmp1035, _12
 3939      C2
 3940              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3941              		.loc 1 395 100 discriminator 2 view .LVU1278
 3942 190e C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.309, tmp1036, _18
 3942      CB
 3943              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3944              		.loc 1 395 70 discriminator 2 view .LVU1279
 3945 1913 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.310, vect__38.305, vect__43.309
 3945      F9
 3946              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3947              		.loc 1 395 31 discriminator 2 view .LVU1280
 3948 1918 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rdi], ymm7	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B]
 3948      BC39C000 
 3948      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3949              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1281
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3950              		.loc 1 394 11 discriminator 2 view .LVU1282
 395:sieve_extend.c ****     }
 3951              		.loc 1 395 9 discriminator 2 view .LVU1283
 3952              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3953              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1284
 3954 1922 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 224[r15+rdi]	# tmp1037, MEM[base: vectp.303_32, index: ivtmp.353_516, of
GAS LISTING /tmp/ccG38KJh.s 			page 113


 3954      943FE000 
 3954      0000
 3955              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3956              		.loc 1 395 100 discriminator 2 view .LVU1285
 3957 192c C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 224[r8+rdi]	# tmp1038, MEM[base: vectp.307_1, index: ivtmp.353_516, offs
 3957      9C38E000 
 3957      0000
 3958              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3959              		.loc 1 395 60 discriminator 2 view .LVU1286
 3960 1936 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.305, tmp1037, _12
 3960      F2
 3961              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3962              		.loc 1 395 100 discriminator 2 view .LVU1287
 3963 193b C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.309, tmp1038, _18
 3963      E3
 3964              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3965              		.loc 1 395 70 discriminator 2 view .LVU1288
 3966 1940 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.310, vect__38.305, vect__43.309
 3966      EC
 3967              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3968              		.loc 1 395 31 discriminator 2 view .LVU1289
 3969 1945 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdi], ymm13	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B
 3969      AC39E000 
 3969      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3970              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1290
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3971              		.loc 1 394 11 discriminator 2 view .LVU1291
 3972 194f 4881C700 		add	rdi, 256	# ivtmp.353,
 3972      010000
 3973 1956 4C39D7   		cmp	rdi, r10	# ivtmp.353, _518
 3974 1959 0F85B3FE 		jne	.L260	#,
 3974      FFFF
 3975              	.L391:
 3976 195f 4C89F0   		mov	rax, r14	# niters_vector_mult_vf.299, niters.297
 3977 1962 4883E0FC 		and	rax, -4	# niters_vector_mult_vf.299,
 3978 1966 4901C3   		add	r11, rax	# tmp.300, niters_vector_mult_vf.299
 3979 1969 4901C4   		add	r12, rax	# tmp.301, niters_vector_mult_vf.299
 3980 196c 4C39F0   		cmp	rax, r14	# niters_vector_mult_vf.299, niters.297
 3981 196f 7463     		je	.L258	#,
 3982              	.L259:
 3983              	.LVL182:
 395:sieve_extend.c ****     }
 3984              		.loc 1 395 9 view .LVU1292
 3985              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3986              		.loc 1 394 5 is_stmt 0 view .LVU1293
 3987 1971 4C8B5424 		mov	r10, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 3987      50
 3988              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3989              		.loc 1 395 100 view .LVU1294
GAS LISTING /tmp/ccG38KJh.s 			page 114


 3990 1976 C422E9F7 		shlx	r14, QWORD PTR 8[rbx+r11*8], rdx	# tmp577, *_430, shift_flipped
 3990      74DB08
 3991              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3992              		.loc 1 395 60 view .LVU1295
 3993 197d C42293F7 		shrx	r8, QWORD PTR [rbx+r11*8], r13	# tmp579, *_110, shift
 3993      04DB
 3994              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3995              		.loc 1 394 52 view .LVU1296
 3996 1983 4D8D4C24 		lea	r9, 1[r12]	# copy_word,
 3996      01
 3997              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3998              		.loc 1 395 70 view .LVU1297
 3999 1988 4D09C6   		or	r14, r8	# tmp581, tmp579
 4000 198b 4E8934E3 		mov	QWORD PTR [rbx+r12*8], r14	# *_433, tmp581
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4001              		.loc 1 394 43 is_stmt 1 view .LVU1298
 4002              	.LVL183:
 4003              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4004              		.loc 1 395 83 is_stmt 0 view .LVU1299
 4005 198f 4D8D7B01 		lea	r15, 1[r11]	# _113,
 4006              	.LVL184:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4007              		.loc 1 394 11 is_stmt 1 view .LVU1300
 4008              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4009              		.loc 1 394 5 is_stmt 0 view .LVU1301
 4010 1993 4D39CA   		cmp	r10, r9	# aligned_copy_word, copy_word
 4011 1996 723C     		jb	.L258	#,
 395:sieve_extend.c ****     }
 4012              		.loc 1 395 9 is_stmt 1 view .LVU1302
 4013              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4014              		.loc 1 395 60 is_stmt 0 view .LVU1303
 4015 1998 4A8B3CFB 		mov	rdi, QWORD PTR [rbx+r15*8]	# *_38, *_38
 4016              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4017              		.loc 1 395 100 view .LVU1304
 4018 199c C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r15*8], rdx	# tmp582, *_43, shift_flipped
 4018      74FB08
 4019              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4020              		.loc 1 395 60 view .LVU1305
 4021 19a3 C4E293F7 		shrx	rax, rdi, r13	# tmp584, *_38, shift
 4021      C7
 4022              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4023              		.loc 1 394 52 view .LVU1306
 4024 19a8 4D8D6424 		lea	r12, 2[r12]	# copy_word,
 4024      02
 4025              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4026              		.loc 1 395 70 view .LVU1307
 4027 19ad 4809C6   		or	rsi, rax	# tmp586, tmp584
GAS LISTING /tmp/ccG38KJh.s 			page 115


 4028 19b0 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_83, tmp586
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4029              		.loc 1 394 43 is_stmt 1 view .LVU1308
 4030              	.LVL185:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4031              		.loc 1 394 11 view .LVU1309
 4032              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4033              		.loc 1 395 83 is_stmt 0 view .LVU1310
 4034 19b4 4D8D5B02 		lea	r11, 2[r11]	# _41,
 4035              	.LVL186:
 4036              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4037              		.loc 1 394 5 view .LVU1311
 4038 19b8 4D39E2   		cmp	r10, r12	# aligned_copy_word, copy_word
 4039 19bb 7217     		jb	.L258	#,
 395:sieve_extend.c ****     }
 4040              		.loc 1 395 9 is_stmt 1 view .LVU1312
 4041              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4042              		.loc 1 395 60 is_stmt 0 view .LVU1313
 4043 19bd 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_151, *_151
 4044              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4045              		.loc 1 395 100 view .LVU1314
 4046 19c1 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r11*8], rdx	# tmp587, *_146, shift_flipped
 4046      54DB08
 4047              	.LVL187:
 4048              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4049              		.loc 1 395 60 view .LVU1315
 4050 19c8 C44293F7 		shrx	r13, r15, r13	# tmp589, *_151, shift
 4050      EF
 4051              	.LVL188:
 4052              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4053              		.loc 1 395 70 view .LVU1316
 4054 19cd 4C09EA   		or	rdx, r13	# tmp591, tmp589
 4055 19d0 4A8914E3 		mov	QWORD PTR [rbx+r12*8], rdx	# *_120, tmp591
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4056              		.loc 1 394 43 is_stmt 1 view .LVU1317
 4057              	.LVL189:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4058              		.loc 1 394 11 view .LVU1318
 4059              	.L258:
 398:sieve_extend.c **** 
 4060              		.loc 1 398 5 view .LVU1319
 4061              	# sieve_extend.c:398:     if (copy_word >= destination_stop_word) return;
 398:sieve_extend.c **** 
 4062              		.loc 1 398 8 is_stmt 0 view .LVU1320
 4063 19d4 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 4063      58
 4064 19d9 4939C9   		cmp	r9, rcx	# destination_stop_word, tmp.291
 4065 19dc 0F865E03 		jbe	.L409	#,
 4065      0000
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4066              		.loc 1 400 5 is_stmt 1 view .LVU1321
GAS LISTING /tmp/ccG38KJh.s 			page 116


 4067              	# sieve_extend.c:400:     source_word = copy_word - size; // recalibrate
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4068              		.loc 1 400 17 is_stmt 0 view .LVU1322
 4069 19e2 4C8B5424 		mov	r10, QWORD PTR 24[rsp]	# size, %sfp
 4069      18
 4070 19e7 4989CF   		mov	r15, rcx	# tmp.290, tmp.291
 4071              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4072              		.loc 1 404 21 view .LVU1323
 4073 19ea 4D8D040A 		lea	r8, [r10+rcx]	# ivtmp.348,
 4074              	# sieve_extend.c:400:     source_word = copy_word - size; // recalibrate
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4075              		.loc 1 400 17 view .LVU1324
 4076 19ee 4D29D7   		sub	r15, r10	# tmp.290, size
 4077              	.LVL190:
 401:sieve_extend.c **** 
 4078              		.loc 1 401 5 is_stmt 1 view .LVU1325
 4079              	# sieve_extend.c:401:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 401:sieve_extend.c **** 
 4080              		.loc 1 401 18 is_stmt 0 view .LVU1326
 4081 19f1 4E8D2CD5 		lea	r13, 0[0+r10*8]	# memsize,
 4081      00000000 
 4082              	.LVL191:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4083              		.loc 1 404 11 is_stmt 1 view .LVU1327
 4084              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4085              		.loc 1 404 5 is_stmt 0 view .LVU1328
 4086 19f9 4D39C1   		cmp	r9, r8	# destination_stop_word, ivtmp.348
 4087 19fc 0F826301 		jb	.L263	#,
 4087      0000
 4088 1a02 4C8D24CB 		lea	r12, [rbx+rcx*8]	# tmp594,
 4089 1a06 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# tmp595,
 4089      00000000 
 4090              	.LVL192:
 4091              	# sieve_extend.c:405:         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 405:sieve_extend.c **** 
 4092              		.loc 1 405 40 view .LVU1329
 4093 1a0e 4E8D34FB 		lea	r14, [rbx+r15*8]	# _48,
 4094 1a12 4C897C24 		mov	QWORD PTR 72[rsp], r15	# %sfp, tmp.290
 4094      48
 4095 1a17 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitstorage
 4095      40
 4096 1a1c 4929CC   		sub	r12, rcx	# _370, tmp595
 4097 1a1f 4C89CB   		mov	rbx, r9	# destination_stop_word, destination_stop_word
 4098              	.LVL193:
 405:sieve_extend.c **** 
 4099              		.loc 1 405 40 view .LVU1330
 4100 1a22 4D89D7   		mov	r15, r10	# size, size
 4101              	.LVL194:
 405:sieve_extend.c **** 
 4102              		.loc 1 405 40 view .LVU1331
 4103 1a25 C5F877   		vzeroupper
 4104              	.LVL195:
 4105              	.L264:
 405:sieve_extend.c **** 
 4106              		.loc 1 405 9 is_stmt 1 discriminator 2 view .LVU1332
GAS LISTING /tmp/ccG38KJh.s 			page 117


 4107              	.LBB423:
 4108              	.LBI423:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4109              		.loc 2 31 1 discriminator 2 view .LVU1333
 4110              	.LBB424:
 4111              		.loc 2 34 3 discriminator 2 view .LVU1334
 4112              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4113              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1335
 4114 1a28 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp597,
 4115 1a2c 4C89EA   		mov	rdx, r13	#, memsize
 4116 1a2f 4C89F6   		mov	rsi, r14	#, _48
 4117 1a32 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.348
 4117      50
 4118 1a37 E8000000 		call	memcpy@PLT	#
 4118      00
 4119              	.LVL196:
 4120              		.loc 2 34 10 discriminator 2 view .LVU1336
 4121              	.LBE424:
 4122              	.LBE423:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4123              		.loc 1 404 54 is_stmt 1 discriminator 2 view .LVU1337
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4124              		.loc 1 404 11 discriminator 2 view .LVU1338
 4125 1a3c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4125      50
 4126 1a41 4E8D0439 		lea	r8, [rcx+r15]	# ivtmp.348,
 4127              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4128              		.loc 1 404 5 is_stmt 0 discriminator 2 view .LVU1339
 4129 1a45 4939D8   		cmp	r8, rbx	# ivtmp.348, destination_stop_word
 4130 1a48 0F870201 		ja	.L400	#,
 4130      0000
 405:sieve_extend.c **** 
 4131              		.loc 1 405 9 is_stmt 1 view .LVU1340
 4132              	.LVL197:
 4133              	.LBB432:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4134              		.loc 2 31 1 view .LVU1341
 4135              	.LBB425:
 4136              		.loc 2 34 3 view .LVU1342
 4137              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4138              		.loc 2 34 10 is_stmt 0 view .LVU1343
 4139 1a4e 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp810,
 4140 1a52 4C89EA   		mov	rdx, r13	#, memsize
 4141 1a55 4C89F6   		mov	rsi, r14	#, _48
 4142 1a58 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.348
 4142      50
 4143              	.LVL198:
 4144              		.loc 2 34 10 view .LVU1344
 4145 1a5d E8000000 		call	memcpy@PLT	#
 4145      00
 4146              	.LVL199:
 4147              		.loc 2 34 10 view .LVU1345
 4148              	.LBE425:
 4149              	.LBE432:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4150              		.loc 1 404 54 is_stmt 1 view .LVU1346
GAS LISTING /tmp/ccG38KJh.s 			page 118


 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4151              		.loc 1 404 11 view .LVU1347
 4152 1a62 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4152      50
 4153 1a67 4E8D1C39 		lea	r11, [rcx+r15]	# ivtmp.348,
 4154              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4155              		.loc 1 404 5 is_stmt 0 view .LVU1348
 4156 1a6b 4939DB   		cmp	r11, rbx	# ivtmp.348, destination_stop_word
 4157 1a6e 0F87DC00 		ja	.L400	#,
 4157      0000
 405:sieve_extend.c **** 
 4158              		.loc 1 405 9 is_stmt 1 view .LVU1349
 4159              	.LVL200:
 4160              	.LBB433:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4161              		.loc 2 31 1 view .LVU1350
 4162              	.LBB426:
 4163              		.loc 2 34 3 view .LVU1351
 4164              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4165              		.loc 2 34 10 is_stmt 0 view .LVU1352
 4166 1a74 4C89F6   		mov	rsi, r14	#, _48
 4167 1a77 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp813,
 4168 1a7b 4C89EA   		mov	rdx, r13	#, memsize
 4169 1a7e 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.348
 4169      50
 4170 1a83 E8000000 		call	memcpy@PLT	#
 4170      00
 4171              	.LVL201:
 4172              		.loc 2 34 10 view .LVU1353
 4173              	.LBE426:
 4174              	.LBE433:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4175              		.loc 1 404 54 is_stmt 1 view .LVU1354
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4176              		.loc 1 404 11 view .LVU1355
 4177 1a88 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4177      50
 4178 1a8d 4A8D3439 		lea	rsi, [rcx+r15]	# ivtmp.348,
 4179              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4180              		.loc 1 404 5 is_stmt 0 view .LVU1356
 4181 1a91 4839DE   		cmp	rsi, rbx	# ivtmp.348, destination_stop_word
 4182 1a94 0F87B600 		ja	.L400	#,
 4182      0000
 405:sieve_extend.c **** 
 4183              		.loc 1 405 9 is_stmt 1 view .LVU1357
 4184              	.LVL202:
 4185              	.LBB434:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4186              		.loc 2 31 1 view .LVU1358
 4187              	.LBB427:
 4188              		.loc 2 34 3 view .LVU1359
 4189              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4190              		.loc 2 34 10 is_stmt 0 view .LVU1360
 4191 1a9a 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.348
 4191      50
GAS LISTING /tmp/ccG38KJh.s 			page 119


 4192 1a9f 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp816,
 4193 1aa3 4C89EA   		mov	rdx, r13	#, memsize
 4194 1aa6 4C89F6   		mov	rsi, r14	#, _48
 4195 1aa9 E8000000 		call	memcpy@PLT	#
 4195      00
 4196              	.LVL203:
 4197              		.loc 2 34 10 view .LVU1361
 4198              	.LBE427:
 4199              	.LBE434:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4200              		.loc 1 404 54 is_stmt 1 view .LVU1362
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4201              		.loc 1 404 11 view .LVU1363
 4202 1aae 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4202      50
 4203 1ab3 4A8D0439 		lea	rax, [rcx+r15]	# ivtmp.348,
 4204              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4205              		.loc 1 404 5 is_stmt 0 view .LVU1364
 4206 1ab7 4839D8   		cmp	rax, rbx	# ivtmp.348, destination_stop_word
 4207 1aba 0F879000 		ja	.L400	#,
 4207      0000
 405:sieve_extend.c **** 
 4208              		.loc 1 405 9 is_stmt 1 view .LVU1365
 4209              	.LVL204:
 4210              	.LBB435:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4211              		.loc 2 31 1 view .LVU1366
 4212              	.LBB428:
 4213              		.loc 2 34 3 view .LVU1367
 4214              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4215              		.loc 2 34 10 is_stmt 0 view .LVU1368
 4216 1ac0 4C89EA   		mov	rdx, r13	#, memsize
 4217 1ac3 498D3CC4 		lea	rdi, [r12+rax*8]	# tmp819,
 4218 1ac7 4C89F6   		mov	rsi, r14	#, _48
 4219 1aca 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.348
 4219      50
 4220 1acf E8000000 		call	memcpy@PLT	#
 4220      00
 4221              	.LVL205:
 4222              		.loc 2 34 10 view .LVU1369
 4223              	.LBE428:
 4224              	.LBE435:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4225              		.loc 1 404 54 is_stmt 1 view .LVU1370
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4226              		.loc 1 404 11 view .LVU1371
 4227 1ad4 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4227      50
 4228 1ad9 4A8D1439 		lea	rdx, [rcx+r15]	# ivtmp.348,
 4229              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4230              		.loc 1 404 5 is_stmt 0 view .LVU1372
 4231 1add 4839DA   		cmp	rdx, rbx	# ivtmp.348, destination_stop_word
 4232 1ae0 776E     		ja	.L400	#,
 405:sieve_extend.c **** 
 4233              		.loc 1 405 9 is_stmt 1 view .LVU1373
GAS LISTING /tmp/ccG38KJh.s 			page 120


 4234              	.LVL206:
 4235              	.LBB436:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4236              		.loc 2 31 1 view .LVU1374
 4237              	.LBB429:
 4238              		.loc 2 34 3 view .LVU1375
 4239              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4240              		.loc 2 34 10 is_stmt 0 view .LVU1376
 4241 1ae2 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.348
 4241      50
 4242 1ae7 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp822,
 4243 1aeb 4C89F6   		mov	rsi, r14	#, _48
 4244 1aee 4C89EA   		mov	rdx, r13	#, memsize
 4245 1af1 E8000000 		call	memcpy@PLT	#
 4245      00
 4246              	.LVL207:
 4247              		.loc 2 34 10 view .LVU1377
 4248              	.LBE429:
 4249              	.LBE436:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4250              		.loc 1 404 54 is_stmt 1 view .LVU1378
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4251              		.loc 1 404 11 view .LVU1379
 4252 1af6 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4252      50
 4253 1afb 4E8D0C39 		lea	r9, [rcx+r15]	# ivtmp.348,
 4254              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4255              		.loc 1 404 5 is_stmt 0 view .LVU1380
 4256 1aff 4939D9   		cmp	r9, rbx	# ivtmp.348, destination_stop_word
 4257 1b02 774C     		ja	.L400	#,
 405:sieve_extend.c **** 
 4258              		.loc 1 405 9 is_stmt 1 view .LVU1381
 4259              	.LVL208:
 4260              	.LBB437:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4261              		.loc 2 31 1 view .LVU1382
 4262              	.LBB430:
 4263              		.loc 2 34 3 view .LVU1383
 4264              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4265              		.loc 2 34 10 is_stmt 0 view .LVU1384
 4266 1b04 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp825,
 4267 1b08 4C89EA   		mov	rdx, r13	#, memsize
 4268 1b0b 4C89F6   		mov	rsi, r14	#, _48
 4269 1b0e 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.348
 4269      50
 4270 1b13 E8000000 		call	memcpy@PLT	#
 4270      00
 4271              	.LVL209:
 4272              		.loc 2 34 10 view .LVU1385
 4273              	.LBE430:
 4274              	.LBE437:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4275              		.loc 1 404 54 is_stmt 1 view .LVU1386
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4276              		.loc 1 404 11 view .LVU1387
 4277 1b18 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
GAS LISTING /tmp/ccG38KJh.s 			page 121


 4277      50
 4278 1b1d 4E8D1439 		lea	r10, [rcx+r15]	# ivtmp.348,
 4279              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4280              		.loc 1 404 5 is_stmt 0 view .LVU1388
 4281 1b21 4939DA   		cmp	r10, rbx	# ivtmp.348, destination_stop_word
 4282 1b24 772A     		ja	.L400	#,
 405:sieve_extend.c **** 
 4283              		.loc 1 405 9 is_stmt 1 view .LVU1389
 4284              	.LVL210:
 4285              	.LBB438:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4286              		.loc 2 31 1 view .LVU1390
 4287              	.LBB431:
 4288              		.loc 2 34 3 view .LVU1391
 4289              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4290              		.loc 2 34 10 is_stmt 0 view .LVU1392
 4291 1b26 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp828,
 4292 1b2a 4C89EA   		mov	rdx, r13	#, memsize
 4293 1b2d 4C89F6   		mov	rsi, r14	#, _48
 4294 1b30 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.348
 4294      50
 4295 1b35 E8000000 		call	memcpy@PLT	#
 4295      00
 4296              	.LVL211:
 4297              		.loc 2 34 10 view .LVU1393
 4298              	.LBE431:
 4299              	.LBE438:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4300              		.loc 1 404 54 is_stmt 1 view .LVU1394
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4301              		.loc 1 404 11 view .LVU1395
 4302 1b3a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.348, %sfp
 4302      50
 4303              	.LVL212:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4304              		.loc 1 404 11 is_stmt 0 view .LVU1396
 4305 1b3f 4E8D0439 		lea	r8, [rcx+r15]	# ivtmp.348,
 4306              	.LVL213:
 4307              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4308              		.loc 1 404 5 view .LVU1397
 4309 1b43 4939D8   		cmp	r8, rbx	# ivtmp.348, destination_stop_word
 4310 1b46 0F86DCFE 		jbe	.L264	#,
 4310      FFFF
 4311              	.LVL214:
 4312 1b4c 0F1F4000 		.p2align 4,,10
 4313              		.p2align 3
 4314              	.L400:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4315              		.loc 1 404 5 view .LVU1398
 4316 1b50 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# tmp.290, %sfp
 4316      48
 4317 1b55 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitstorage, %sfp
 4317      40
 4318              	.LVL215:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccG38KJh.s 			page 122


 4319              		.loc 1 408 11 is_stmt 1 view .LVU1399
 4320              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4321              		.loc 1 408 5 is_stmt 0 view .LVU1400
 4322 1b5a 483B4C24 		cmp	rcx, QWORD PTR 88[rsp]	# tmp.291, %sfp
 4322      58
 4323 1b5f 0F87C401 		ja	.L410	#,
 4323      0000
 4324              	.LVL216:
 4325              	.L263:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4326              		.loc 1 408 5 view .LVU1401
 4327 1b65 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 4327      58
 4328 1b6a 4C8D6F01 		lea	r13, 1[rdi]	# tmp603,
 4329              	.LVL217:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4330              		.loc 1 408 5 view .LVU1402
 4331 1b6e 4829CF   		sub	rdi, rcx	# tmp604, tmp.291
 4332 1b71 4929CD   		sub	r13, rcx	# niters.287, tmp.291
 4333 1b74 4883FF02 		cmp	rdi, 2	# tmp604,
 4334 1b78 0F866D01 		jbe	.L266	#,
 4334      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4335              		.loc 1 408 5 view .LVU1403
 4336 1b7e 4D89EB   		mov	r11, r13	# bnd.288, niters.287
 4337 1b81 49C1EB02 		shr	r11, 2	# bnd.288,
 4338 1b85 49C1E305 		sal	r11, 5	# _133,
 4339 1b89 498D73E0 		lea	rsi, -32[r11]	# tmp615,
 4340 1b8d 48C1EE05 		shr	rsi, 5	# tmp613,
 4341 1b91 48FFC6   		inc	rsi	# tmp616
 4342 1b94 4E8D34FB 		lea	r14, [rbx+r15*8]	# vectp.293,
 4343 1b98 4C8D24CB 		lea	r12, [rbx+rcx*8]	# vectp.296,
 4344              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4345              		.loc 1 394 5 view .LVU1404
 4346 1b9c 31C0     		xor	eax, eax	# ivtmp.340
 4347 1b9e 83E607   		and	esi, 7	# tmp617,
 4348 1ba1 0F849D00 		je	.L267	#,
 4348      0000
 4349 1ba7 4883FE01 		cmp	rsi, 1	# tmp617,
 4350 1bab 747E     		je	.L352	#,
 4351 1bad 4883FE02 		cmp	rsi, 2	# tmp617,
 4352 1bb1 7468     		je	.L353	#,
 4353 1bb3 4883FE03 		cmp	rsi, 3	# tmp617,
 4354 1bb7 7452     		je	.L354	#,
 4355 1bb9 4883FE04 		cmp	rsi, 4	# tmp617,
 4356 1bbd 743C     		je	.L355	#,
 4357 1bbf 4883FE05 		cmp	rsi, 5	# tmp617,
 4358 1bc3 7426     		je	.L356	#,
 4359 1bc5 4883FE06 		cmp	rsi, 6	# tmp617,
 4360 1bc9 7410     		je	.L357	#,
 4361              	.LVL218:
 409:sieve_extend.c **** 
 4362              		.loc 1 409 9 is_stmt 1 view .LVU1405
 4363              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
GAS LISTING /tmp/ccG38KJh.s 			page 123


 4364              		.loc 1 409 31 is_stmt 0 view .LVU1406
 4365 1bcb C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r14]	# tmp1063, MEM[base: vectp.293_170, index: ivtmp.340_107, offset:
 4365      16
 4366 1bd0 B8200000 		mov	eax, 32	# ivtmp.340,
 4366      00
 4367 1bd5 C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B], tmp
 4367      1424
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4368              		.loc 1 408 48 is_stmt 1 view .LVU1407
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4369              		.loc 1 408 11 view .LVU1408
 4370              	.L357:
 409:sieve_extend.c **** 
 4371              		.loc 1 409 9 view .LVU1409
 4372              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4373              		.loc 1 409 31 is_stmt 0 view .LVU1410
 4374 1bdb C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r14+rax]	# tmp1064, MEM[base: vectp.293_170, index: ivtmp.340_107, off
 4374      1C06
 4375 1be1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm11	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B],
 4375      1C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4376              		.loc 1 408 48 is_stmt 1 view .LVU1411
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4377              		.loc 1 408 11 view .LVU1412
 4378 1be7 4883C020 		add	rax, 32	# ivtmp.340,
 4379              	.L356:
 409:sieve_extend.c **** 
 4380              		.loc 1 409 9 view .LVU1413
 4381              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4382              		.loc 1 409 31 is_stmt 0 view .LVU1414
 4383 1beb C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r14+rax]	# tmp1065, MEM[base: vectp.293_170, index: ivtmp.340_107, off
 4383      3406
 4384 1bf1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B],
 4384      3404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4385              		.loc 1 408 48 is_stmt 1 view .LVU1415
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4386              		.loc 1 408 11 view .LVU1416
 4387 1bf7 4883C020 		add	rax, 32	# ivtmp.340,
 4388              	.L355:
 409:sieve_extend.c **** 
 4389              		.loc 1 409 9 view .LVU1417
 4390              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4391              		.loc 1 409 31 is_stmt 0 view .LVU1418
 4392 1bfb C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rax]	# tmp1066, MEM[base: vectp.293_170, index: ivtmp.340_107, offs
 4392      2406
 4393 1c01 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm4	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B], 
 4393      2404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4394              		.loc 1 408 48 is_stmt 1 view .LVU1419
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4395              		.loc 1 408 11 view .LVU1420
 4396 1c07 4883C020 		add	rax, 32	# ivtmp.340,
 4397              	.L354:
GAS LISTING /tmp/ccG38KJh.s 			page 124


 409:sieve_extend.c **** 
 4398              		.loc 1 409 9 view .LVU1421
 4399              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4400              		.loc 1 409 31 is_stmt 0 view .LVU1422
 4401 1c0b C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r14+rax]	# tmp1067, MEM[base: vectp.293_170, index: ivtmp.340_107, off
 4401      3C06
 4402 1c11 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B],
 4402      3C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4403              		.loc 1 408 48 is_stmt 1 view .LVU1423
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4404              		.loc 1 408 11 view .LVU1424
 4405 1c17 4883C020 		add	rax, 32	# ivtmp.340,
 4406              	.L353:
 409:sieve_extend.c **** 
 4407              		.loc 1 409 9 view .LVU1425
 4408              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4409              		.loc 1 409 31 is_stmt 0 view .LVU1426
 4410 1c1b C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14+rax]	# tmp1068, MEM[base: vectp.293_170, index: ivtmp.340_107, offs
 4410      0C06
 4411 1c21 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B], 
 4411      0C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4412              		.loc 1 408 48 is_stmt 1 view .LVU1427
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4413              		.loc 1 408 11 view .LVU1428
 4414 1c27 4883C020 		add	rax, 32	# ivtmp.340,
 4415              	.L352:
 409:sieve_extend.c **** 
 4416              		.loc 1 409 9 view .LVU1429
 4417              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4418              		.loc 1 409 31 is_stmt 0 view .LVU1430
 4419 1c2b C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r14+rax]	# tmp1069, MEM[base: vectp.293_170, index: ivtmp.340_107, offs
 4419      0406
 4420 1c31 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B], 
 4420      0404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4421              		.loc 1 408 48 is_stmt 1 view .LVU1431
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4422              		.loc 1 408 11 view .LVU1432
 4423 1c37 4883C020 		add	rax, 32	# ivtmp.340,
 4424 1c3b 4C39D8   		cmp	rax, r11	# ivtmp.340, _133
 4425 1c3e 0F849500 		je	.L389	#,
 4425      0000
 4426              	.L267:
 409:sieve_extend.c **** 
 4427              		.loc 1 409 9 discriminator 2 view .LVU1433
 4428              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4429              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1434
 4430 1c44 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rax]	# tmp1052, MEM[base: vectp.293_170, index: ivtmp.340_107, offs
 4430      0406
 4431 1c4a C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B], 
 4431      0404
GAS LISTING /tmp/ccG38KJh.s 			page 125


 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4432              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1435
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4433              		.loc 1 408 11 discriminator 2 view .LVU1436
 409:sieve_extend.c **** 
 4434              		.loc 1 409 9 discriminator 2 view .LVU1437
 4435              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4436              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1438
 4437 1c50 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r14+rax]	# tmp1053, MEM[base: vectp.293_170, index: ivtmp.340_107, of
 4437      6C0620
 4438 1c57 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B]
 4438      6C0420
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4439              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1439
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4440              		.loc 1 408 11 discriminator 2 view .LVU1440
 409:sieve_extend.c **** 
 4441              		.loc 1 409 9 discriminator 2 view .LVU1441
 4442              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4443              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1442
 4444 1c5e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rax]	# tmp1054, MEM[base: vectp.293_170, index: ivtmp.340_107, of
 4444      4C0640
 4445 1c65 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B]
 4445      4C0440
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4446              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1443
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4447              		.loc 1 408 11 discriminator 2 view .LVU1444
 409:sieve_extend.c **** 
 4448              		.loc 1 409 9 discriminator 2 view .LVU1445
 4449              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4450              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1446
 4451 1c6c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 96[r14+rax]	# tmp1055, MEM[base: vectp.293_170, index: ivtmp.340_107, of
 4451      7C0660
 4452 1c73 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm7	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B]
 4452      7C0460
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4453              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1447
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4454              		.loc 1 408 11 discriminator 2 view .LVU1448
 409:sieve_extend.c **** 
 4455              		.loc 1 409 9 discriminator 2 view .LVU1449
 4456              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4457              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1450
 4458 1c7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r14+rax]	# tmp1056, MEM[base: vectp.293_170, index: ivtmp.340_107, o
 4458      94068000 
 4458      0000
 4459 1c84 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm2	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B
 4459      94048000 
 4459      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4460              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1451
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccG38KJh.s 			page 126


 4461              		.loc 1 408 11 discriminator 2 view .LVU1452
 409:sieve_extend.c **** 
 4462              		.loc 1 409 9 discriminator 2 view .LVU1453
 4463              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4464              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1454
 4465 1c8e C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 160[r14+rax]	# tmp1057, MEM[base: vectp.293_170, index: ivtmp.340_107, o
 4465      B406A000 
 4465      0000
 4466 1c98 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B
 4466      B404A000 
 4466      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4467              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1455
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4468              		.loc 1 408 11 discriminator 2 view .LVU1456
 409:sieve_extend.c **** 
 4469              		.loc 1 409 9 discriminator 2 view .LVU1457
 4470              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4471              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1458
 4472 1ca2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 192[r14+rax]	# tmp1058, MEM[base: vectp.293_170, index: ivtmp.340_107, o
 4472      9C06C000 
 4472      0000
 4473 1cac C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm3	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0B
 4473      9C04C000 
 4473      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4474              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1459
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4475              		.loc 1 408 11 discriminator 2 view .LVU1460
 409:sieve_extend.c **** 
 4476              		.loc 1 409 9 discriminator 2 view .LVU1461
 4477              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4478              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1462
 4479 1cb6 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 224[r14+rax]	# tmp1059, MEM[base: vectp.293_170, index: ivtmp.340_107, 
 4479      A406E000 
 4479      0000
 4480 1cc0 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm12	# MEM[base: vectp.296_165, index: ivtmp.340_107, offset: 0
 4480      A404E000 
 4480      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4481              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1463
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4482              		.loc 1 408 11 discriminator 2 view .LVU1464
 4483 1cca 48050001 		add	rax, 256	# ivtmp.340,
 4483      0000
 4484 1cd0 4C39D8   		cmp	rax, r11	# ivtmp.340, _133
 4485 1cd3 0F856BFF 		jne	.L267	#,
 4485      FFFF
 4486              	.L389:
 4487 1cd9 4C89EA   		mov	rdx, r13	# niters_vector_mult_vf.289, niters.287
 4488 1cdc 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.289,
 4489 1ce0 4901D7   		add	r15, rdx	# tmp.290, niters_vector_mult_vf.289
 4490 1ce3 4801D1   		add	rcx, rdx	# tmp.291, niters_vector_mult_vf.289
 4491 1ce6 4939D5   		cmp	r13, rdx	# niters.287, niters_vector_mult_vf.289
GAS LISTING /tmp/ccG38KJh.s 			page 127


 4492 1ce9 7455     		je	.L409	#,
 4493              	.L266:
 4494              	.LVL219:
 409:sieve_extend.c **** 
 4495              		.loc 1 409 9 view .LVU1465
 4496              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4497              		.loc 1 409 43 is_stmt 0 view .LVU1466
 4498 1ceb 4E8B0CFB 		mov	r9, QWORD PTR [rbx+r15*8]	# _90, *_141
 4499              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4500              		.loc 1 408 5 view .LVU1467
 4501 1cef 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 4501      58
 4502              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4503              		.loc 1 408 57 view .LVU1468
 4504 1cf4 4C8D5101 		lea	r10, 1[rcx]	# copy_word,
 4505              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4506              		.loc 1 409 31 view .LVU1469
 4507 1cf8 4C890CCB 		mov	QWORD PTR [rbx+rcx*8], r9	# *_372, _90
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4508              		.loc 1 408 48 is_stmt 1 view .LVU1470
 4509              	.LVL220:
 4510              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4511              		.loc 1 408 71 is_stmt 0 view .LVU1471
 4512 1cfc 49FFC7   		inc	r15	# source_word
 4513              	.LVL221:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4514              		.loc 1 408 11 is_stmt 1 view .LVU1472
 4515              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4516              		.loc 1 408 5 is_stmt 0 view .LVU1473
 4517 1cff 4D39D0   		cmp	r8, r10	# destination_stop_word, copy_word
 4518 1d02 723C     		jb	.L409	#,
 409:sieve_extend.c **** 
 4519              		.loc 1 409 9 is_stmt 1 view .LVU1474
 4520              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4521              		.loc 1 409 43 is_stmt 0 view .LVU1475
 4522 1d04 4A8D3CFD 		lea	rdi, 0[0+r15*8]	# _96,
 4522      00000000 
 4523 1d0c 4E8B3CFB 		mov	r15, QWORD PTR [rbx+r15*8]	# _103, *_98
 4524              	.LVL222:
 4525              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4526              		.loc 1 408 57 view .LVU1476
 4527 1d10 4883C102 		add	rcx, 2	# copy_word,
 4528              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4529              		.loc 1 409 31 view .LVU1477
 4530 1d14 4E893CD3 		mov	QWORD PTR [rbx+r10*8], r15	# *_102, _103
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4531              		.loc 1 408 48 is_stmt 1 view .LVU1478
 4532              	.LVL223:
GAS LISTING /tmp/ccG38KJh.s 			page 128


 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4533              		.loc 1 408 11 view .LVU1479
 4534              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4535              		.loc 1 408 5 is_stmt 0 view .LVU1480
 4536 1d18 4939C8   		cmp	r8, rcx	# destination_stop_word, copy_word
 4537 1d1b 7223     		jb	.L409	#,
 409:sieve_extend.c **** 
 4538              		.loc 1 409 9 is_stmt 1 view .LVU1481
 4539              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4540              		.loc 1 409 43 is_stmt 0 view .LVU1482
 4541 1d1d 4C8B6C3B 		mov	r13, QWORD PTR 8[rbx+rdi]	# _191, *_194
 4541      08
 4542              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4543              		.loc 1 409 31 view .LVU1483
 4544 1d22 4C892CCB 		mov	QWORD PTR [rbx+rcx*8], r13	# *_192, _191
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4545              		.loc 1 408 48 is_stmt 1 view .LVU1484
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4546              		.loc 1 408 11 view .LVU1485
 4547 1d26 C5F877   		vzeroupper
 4548              	.L410:
 4549              	# sieve_extend.c:412:  }
 412:sieve_extend.c **** 
 4550              		.loc 1 412 2 is_stmt 0 view .LVU1486
 4551 1d29 488D65D8 		lea	rsp, -40[rbp]	#,
 4552              	.LVL224:
 412:sieve_extend.c **** 
 4553              		.loc 1 412 2 view .LVU1487
 4554 1d2d 5B       		pop	rbx	#
 4555 1d2e 415C     		pop	r12	#
 4556 1d30 415D     		pop	r13	#
 4557 1d32 415E     		pop	r14	#
 4558 1d34 415F     		pop	r15	#
 4559 1d36 5D       		pop	rbp	#
 4560              		.cfi_remember_state
 4561              		.cfi_def_cfa 7, 8
 4562              	.LVL225:
 412:sieve_extend.c **** 
 4563              		.loc 1 412 2 view .LVU1488
 4564 1d37 C3       		ret	
 4565              	.LVL226:
 4566 1d38 0F1F8400 		.p2align 4,,10
 4566      00000000 
 4567              		.p2align 3
 4568              	.L409:
 4569              		.cfi_restore_state
 412:sieve_extend.c **** 
 4570              		.loc 1 412 2 view .LVU1489
 4571 1d40 C5F877   		vzeroupper
 4572 1d43 488D65D8 		lea	rsp, -40[rbp]	#,
 4573              	.LVL227:
 412:sieve_extend.c **** 
 4574              		.loc 1 412 2 view .LVU1490
 4575 1d47 5B       		pop	rbx	#
GAS LISTING /tmp/ccG38KJh.s 			page 129


 4576 1d48 415C     		pop	r12	#
 4577 1d4a 415D     		pop	r13	#
 4578 1d4c 415E     		pop	r14	#
 4579 1d4e 415F     		pop	r15	#
 4580 1d50 5D       		pop	rbp	#
 4581              		.cfi_remember_state
 4582              		.cfi_def_cfa 7, 8
 4583              	.LVL228:
 412:sieve_extend.c **** 
 4584              		.loc 1 412 2 view .LVU1491
 4585 1d51 C3       		ret	
 4586              	.LVL229:
 4587              		.p2align 4,,10
 4588 1d52 660F1F44 		.p2align 3
 4588      0000
 4589              	.L412:
 4590              		.cfi_restore_state
 395:sieve_extend.c ****     }
 4591              		.loc 1 395 9 is_stmt 1 view .LVU1492
 4592              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4593              		.loc 1 395 60 is_stmt 0 view .LVU1493
 4594 1d58 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r15]	# tmp1070, MEM[base: vectp.303_32, index: ivtmp.353_516, offset: 0
 4594      1F
 4595              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4596              		.loc 1 395 100 view .LVU1494
 4597 1d5d C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1071, MEM[base: vectp.307_1, index: ivtmp.353_516, offset: 0B]
 4597      20
 4598              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4599              		.loc 1 395 60 view .LVU1495
 4600 1d62 C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.305, tmp1070, _12
 4600      D2
 4601              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4602              		.loc 1 395 100 view .LVU1496
 4603 1d67 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.309, tmp1071, _18
 4603      F3
 4604 1d6c BF200000 		mov	edi, 32	# ivtmp.353,
 4604      00
 4605              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4606              		.loc 1 395 70 view .LVU1497
 4607 1d71 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.310, vect__38.305, vect__43.309
 4608              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4609              		.loc 1 395 31 view .LVU1498
 4610 1d75 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.312_207, index: ivtmp.353_516, offset: 0B], vect
 4610      21
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4611              		.loc 1 394 43 is_stmt 1 view .LVU1499
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4612              		.loc 1 394 11 view .LVU1500
 4613 1d7a E9AFF9FF 		jmp	.L350	#
 4613      FF
 4614              	.LVL230:
GAS LISTING /tmp/ccG38KJh.s 			page 130


 4615 1d7f 90       		.p2align 4,,10
 4616              		.p2align 3
 4617              	.L253:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4618              		.loc 1 394 11 is_stmt 0 view .LVU1501
 4619 1d80 4801D9   		add	rcx, rbx	# ivtmp.368, bitstorage
 4620              	.LBB439:
 4621              	.LBB419:
 4622              	.LBB409:
 4623              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4624              		.loc 1 359 19 view .LVU1502
 4625 1d83 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _528, offset: 8B]
 4626              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4627              		.loc 1 360 44 view .LVU1503
 4628 1d87 4489E8   		mov	eax, r13d	# tmp1012, _12
 4629              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4630              		.loc 1 360 65 view .LVU1504
 4631 1d8a 89D7     		mov	edi, edx	# tmp1013, _18
 4632              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4633              		.loc 1 360 44 view .LVU1505
 4634 1d8c C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp557, MEM[base: _528, offset: 0B], tmp1012
 4634      01
 4635              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4636              		.loc 1 360 65 view .LVU1506
 4637 1d91 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp559, source1, tmp1013
 4637      FE
 4638              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4639              		.loc 1 360 54 view .LVU1507
 4640 1d96 4809F8   		or	rax, rdi	# tmp560, tmp559
 4641 1d99 4A8904E3 		mov	QWORD PTR [rbx+r12*8], rax	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4642 1d9d 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# fast_loop_stop_word, %sfp
 4642      28
 4643 1da2 4D89E0   		mov	r8, r12	# tmp626, tmp.301
 4644 1da5 49F7D0   		not	r8	# tmp626
 4645              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4646              		.loc 1 360 65 view .LVU1508
 4647 1da8 4189D2   		mov	r10d, edx	# _18, shift_flipped
 4648 1dab 4D01F8   		add	r8, r15	# tmp627, fast_loop_stop_word
 4649              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4650              		.loc 1 360 44 view .LVU1509
 4651 1dae 4589E9   		mov	r9d, r13d	# _12, shift
 4652              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4653              		.loc 1 362 65 view .LVU1510
 4654 1db1 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp561, MEM[base: _528, offset: 16B], tmp1014
 4654      4110
 4655 1db7 49F7D6   		not	r14	# tmp611
 4656 1dba 49D1E8   		shr	r8	# tmp625
 4657              	# sieve_extend.c:363:         copy_word += 2;
GAS LISTING /tmp/ccG38KJh.s 			page 131


 363:sieve_extend.c ****         source_word += 2;
 4658              		.loc 1 363 19 view .LVU1511
 4659 1dbd 498D7C24 		lea	rdi, 2[r12]	# copy_word,
 4659      02
 4660              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4661              		.loc 1 362 44 view .LVU1512
 4662 1dc2 C4E2B3F7 		shrx	rsi, rsi, r9	# tmp563, source1, tmp1015
 4662      F6
 4663              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4664              		.loc 1 362 54 view .LVU1513
 4665 1dc7 4809C6   		or	rsi, rax	# tmp564, tmp561
 4666 1dca 4A8974E3 		mov	QWORD PTR 8[rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4666      08
 4667 1dcf 4183E003 		and	r8d, 3	# tmp628,
 4668              	.LVL231:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4669              		.loc 1 358 9 is_stmt 1 view .LVU1514
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4670              		.loc 1 359 9 view .LVU1515
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4671              		.loc 1 360 9 view .LVU1516
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4672              		.loc 1 361 9 view .LVU1517
 362:sieve_extend.c ****         copy_word += 2;
 4673              		.loc 1 362 9 view .LVU1518
 363:sieve_extend.c ****         source_word += 2;
 4674              		.loc 1 363 9 view .LVU1519
 364:sieve_extend.c ****         distance += 2;
 4675              		.loc 1 364 9 view .LVU1520
 365:sieve_extend.c ****     }
 4676              		.loc 1 365 9 view .LVU1521
 4677 1dd3 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4678              		.loc 1 365 9 is_stmt 0 view .LVU1522
 4679              	.LBE409:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4680              		.loc 1 357 11 is_stmt 1 view .LVU1523
 4681 1dd7 488D4110 		lea	rax, 16[rcx]	# ivtmp.368,
 4682 1ddb 4939FF   		cmp	r15, rdi	# fast_loop_stop_word, copy_word
 4683 1dde 0F86A9F8 		jbe	.L257	#,
 4683      FFFF
 4684 1de4 4D85C0   		test	r8, r8	# tmp628
 4685 1de7 0F849700 		je	.L403	#,
 4685      0000
 4686 1ded 4983F801 		cmp	r8, 1	# tmp628,
 4687 1df1 7446     		je	.L364	#,
 4688 1df3 4983F802 		cmp	r8, 2	# tmp628,
 4689 1df7 0F857B01 		jne	.L413	#,
 4689      0000
 4690              	.LVL232:
 4691              	.L365:
 4692              	.LBB410:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4693              		.loc 1 358 9 view .LVU1524
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccG38KJh.s 			page 132


 4694              		.loc 1 359 9 view .LVU1525
 4695              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4696              		.loc 1 359 19 is_stmt 0 view .LVU1526
 4697 1dfd 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4698              		.loc 1 360 9 is_stmt 1 view .LVU1527
 4699              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4700              		.loc 1 360 44 is_stmt 0 view .LVU1528
 4701 1e01 4489E9   		mov	ecx, r13d	# tmp1088, _12
 4702              	.LVL233:
 4703              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4704              		.loc 1 360 65 view .LVU1529
 4705 1e04 4189D0   		mov	r8d, edx	# tmp1089, _18
 4706              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4707              		.loc 1 360 44 view .LVU1530
 4708 1e07 C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp876, MEM[base: _528, offset: 0B], tmp1088
 4708      08
 4709              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4710              		.loc 1 360 65 view .LVU1531
 4711 1e0c C462B9F7 		shlx	r9, rsi, r8	# tmp877, source1, tmp1089
 4711      CE
 4712              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4713              		.loc 1 360 54 view .LVU1532
 4714 1e11 4C09C9   		or	rcx, r9	# tmp878, tmp877
 4715 1e14 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4716              	.LVL234:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4717              		.loc 1 361 9 is_stmt 1 view .LVU1533
 362:sieve_extend.c ****         copy_word += 2;
 4718              		.loc 1 362 9 view .LVU1534
 4719              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4720              		.loc 1 360 44 is_stmt 0 view .LVU1535
 4721 1e18 4589EA   		mov	r10d, r13d	# _12, shift
 4722              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4723              		.loc 1 360 65 view .LVU1536
 4724 1e1b 4189D7   		mov	r15d, edx	# _18, shift_flipped
 4725              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4726              		.loc 1 362 65 view .LVU1537
 4727 1e1e C4E281F7 		shlx	rcx, QWORD PTR 16[rax], r15	# tmp880, MEM[base: _528, offset: 16B], tmp1090
 4727      4810
 4728              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4729              		.loc 1 362 44 view .LVU1538
 4730 1e24 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp881, source1, tmp1091
 4730      F6
 4731              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4732              		.loc 1 362 54 view .LVU1539
GAS LISTING /tmp/ccG38KJh.s 			page 133


 4733 1e29 4809CE   		or	rsi, rcx	# tmp882, tmp880
 4734 1e2c 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4734      08
 4735              	.LVL235:
 363:sieve_extend.c ****         source_word += 2;
 4736              		.loc 1 363 9 is_stmt 1 view .LVU1540
 4737 1e31 4883C010 		add	rax, 16	# ivtmp.368,
 4738              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4739              		.loc 1 363 19 is_stmt 0 view .LVU1541
 4740 1e35 4883C702 		add	rdi, 2	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4741              		.loc 1 364 9 is_stmt 1 view .LVU1542
 4742              	.LVL236:
 365:sieve_extend.c ****     }
 4743              		.loc 1 365 9 view .LVU1543
 365:sieve_extend.c ****     }
 4744              		.loc 1 365 9 is_stmt 0 view .LVU1544
 4745              	.LBE410:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4746              		.loc 1 357 11 is_stmt 1 view .LVU1545
 4747              	.L364:
 4748              	.LBB411:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4749              		.loc 1 358 9 view .LVU1546
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4750              		.loc 1 359 9 view .LVU1547
 4751              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4752              		.loc 1 359 19 is_stmt 0 view .LVU1548
 4753 1e39 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4754              		.loc 1 360 9 is_stmt 1 view .LVU1549
 4755              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4756              		.loc 1 360 44 is_stmt 0 view .LVU1550
 4757 1e3d 4589E8   		mov	r8d, r13d	# tmp1092, _12
 4758              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4759              		.loc 1 360 65 view .LVU1551
 4760 1e40 4189D1   		mov	r9d, edx	# tmp1093, _18
 4761              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4762              		.loc 1 360 44 view .LVU1552
 4763 1e43 C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp886, MEM[base: _528, offset: 0B], tmp1092
 4763      08
 4764              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4765              		.loc 1 360 65 view .LVU1553
 4766 1e48 C462B1F7 		shlx	r8, rsi, r9	# tmp887, source1, tmp1093
 4766      C6
 4767              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4768              		.loc 1 360 54 view .LVU1554
 4769 1e4d 4C09C1   		or	rcx, r8	# tmp888, tmp887
 4770 1e50 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4771              	.LVL237:
GAS LISTING /tmp/ccG38KJh.s 			page 134


 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4772              		.loc 1 361 9 is_stmt 1 view .LVU1555
 362:sieve_extend.c ****         copy_word += 2;
 4773              		.loc 1 362 9 view .LVU1556
 4774              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4775              		.loc 1 360 44 is_stmt 0 view .LVU1557
 4776 1e54 4589EA   		mov	r10d, r13d	# _12, shift
 4777              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4778              		.loc 1 360 65 view .LVU1558
 4779 1e57 4189D7   		mov	r15d, edx	# _18, shift_flipped
 4780              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4781              		.loc 1 362 65 view .LVU1559
 4782 1e5a C4E281F7 		shlx	rcx, QWORD PTR 16[rax], r15	# tmp890, MEM[base: _528, offset: 16B], tmp1094
 4782      4810
 4783              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4784              		.loc 1 362 44 view .LVU1560
 4785 1e60 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp891, source1, tmp1095
 4785      F6
 4786              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4787              		.loc 1 362 54 view .LVU1561
 4788 1e65 4809CE   		or	rsi, rcx	# tmp892, tmp890
 4789 1e68 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4789      08
 4790              	.LVL238:
 363:sieve_extend.c ****         source_word += 2;
 4791              		.loc 1 363 9 is_stmt 1 view .LVU1562
 4792              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4793              		.loc 1 363 19 is_stmt 0 view .LVU1563
 4794 1e6d 4883C702 		add	rdi, 2	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4795              		.loc 1 364 9 is_stmt 1 view .LVU1564
 4796              	.LVL239:
 365:sieve_extend.c ****     }
 4797              		.loc 1 365 9 view .LVU1565
 4798 1e71 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4799              		.loc 1 365 9 is_stmt 0 view .LVU1566
 4800              	.LBE411:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4801              		.loc 1 357 11 is_stmt 1 view .LVU1567
 4802 1e75 4883C010 		add	rax, 16	# ivtmp.368,
 4803 1e79 48397C24 		cmp	QWORD PTR 40[rsp], rdi	# %sfp, copy_word
 4803      28
 4804 1e7e 0F8609F8 		jbe	.L257	#,
 4804      FFFF
 4805              	.LVL240:
 4806              	.L403:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4807              		.loc 1 357 11 is_stmt 0 view .LVU1568
 4808 1e84 4C895C24 		mov	QWORD PTR 72[rsp], r11	# %sfp, tmp.300
 4808      48
GAS LISTING /tmp/ccG38KJh.s 			page 135


 4809 1e89 4489E9   		mov	ecx, r13d	# _12, shift
 4810 1e8c 4189D0   		mov	r8d, edx	# _18, shift_flipped
 4811              	.LVL241:
 4812              	.L256:
 4813              	.LBB412:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4814              		.loc 1 358 9 is_stmt 1 view .LVU1569
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4815              		.loc 1 359 9 view .LVU1570
 4816              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4817              		.loc 1 359 19 is_stmt 0 view .LVU1571
 4818 1e8f 4C8B5808 		mov	r11, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4819              		.loc 1 360 9 is_stmt 1 view .LVU1572
 4820              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4821              		.loc 1 360 44 is_stmt 0 view .LVU1573
 4822 1e93 C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp700, MEM[base: _528, offset: 0B], _12
 4822      08
 4823              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4824              		.loc 1 360 65 view .LVU1574
 4825 1e98 C442B9F7 		shlx	r15, r11, r8	# tmp701, source1, _18
 4825      FB
 4826              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4827              		.loc 1 360 54 view .LVU1575
 4828 1e9d 4D09F9   		or	r9, r15	# tmp702, tmp701
 4829 1ea0 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset:
 4830              	.LVL242:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4831              		.loc 1 361 9 is_stmt 1 view .LVU1576
 362:sieve_extend.c ****         copy_word += 2;
 4832              		.loc 1 362 9 view .LVU1577
 4833              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4834              		.loc 1 362 44 is_stmt 0 view .LVU1578
 4835 1ea4 C442F3F7 		shrx	r10, r11, rcx	# tmp705, source1, _12
 4835      D3
 4836              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4837              		.loc 1 363 19 view .LVU1579
 4838 1ea9 4C8D5F02 		lea	r11, 2[rdi]	# tmp629,
 4839              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4840              		.loc 1 362 65 view .LVU1580
 4841 1ead C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp704, MEM[base: _528, offset: 16B], _18
 4841      7010
 4842              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4843              		.loc 1 362 54 view .LVU1581
 4844 1eb3 4C09D6   		or	rsi, r10	# tmp706, tmp705
 4845 1eb6 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4845      08
 4846              	.LVL243:
 363:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccG38KJh.s 			page 136


 4847              		.loc 1 363 9 is_stmt 1 view .LVU1582
 364:sieve_extend.c ****         distance += 2;
 4848              		.loc 1 364 9 view .LVU1583
 365:sieve_extend.c ****     }
 4849              		.loc 1 365 9 view .LVU1584
 365:sieve_extend.c ****     }
 4850              		.loc 1 365 9 is_stmt 0 view .LVU1585
 4851              	.LBE412:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4852              		.loc 1 357 11 is_stmt 1 view .LVU1586
 4853              	.LBB413:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4854              		.loc 1 358 9 view .LVU1587
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4855              		.loc 1 359 9 view .LVU1588
 4856 1ebb 4883C040 		add	rax, 64	# ivtmp.368,
 4857              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4858              		.loc 1 359 19 is_stmt 0 view .LVU1589
 4859 1ebf 4C8B48D8 		mov	r9, QWORD PTR -40[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4860              		.loc 1 360 9 is_stmt 1 view .LVU1590
 4861              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4862              		.loc 1 360 44 is_stmt 0 view .LVU1591
 4863 1ec3 C4E2F3F7 		shrx	rsi, QWORD PTR -48[rax], rcx	# tmp712, MEM[base: _528, offset: 0B], _12
 4863      70D0
 4864              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4865              		.loc 1 360 65 view .LVU1592
 4866 1ec9 C442B9F7 		shlx	r15, r9, r8	# tmp713, source1, _18
 4866      F9
 4867              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4868              		.loc 1 360 54 view .LVU1593
 4869 1ece 4C09FE   		or	rsi, r15	# tmp714, tmp713
 4870 1ed1 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4871              	.LVL244:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4872              		.loc 1 361 9 is_stmt 1 view .LVU1594
 362:sieve_extend.c ****         copy_word += 2;
 4873              		.loc 1 362 9 view .LVU1595
 4874              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4875              		.loc 1 362 44 is_stmt 0 view .LVU1596
 4876 1ed5 C442F3F7 		shrx	r9, r9, rcx	# tmp717, source1, _12
 4876      C9
 4877              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4878              		.loc 1 362 65 view .LVU1597
 4879 1eda 4C8B50E0 		mov	r10, QWORD PTR -32[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4880 1ede C4C2B9F7 		shlx	rsi, r10, r8	# tmp716, MEM[base: _528, offset: 16B], _18
 4880      F2
 4881              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4882              		.loc 1 362 54 view .LVU1598
 4883 1ee3 4909F1   		or	r9, rsi	# tmp718, tmp716
GAS LISTING /tmp/ccG38KJh.s 			page 137


 4884 1ee6 4E894CDB 		mov	QWORD PTR 8[rbx+r11*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4884      08
 4885              	.LVL245:
 363:sieve_extend.c ****         source_word += 2;
 4886              		.loc 1 363 9 is_stmt 1 view .LVU1599
 4887              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4888              		.loc 1 363 19 is_stmt 0 view .LVU1600
 4889 1eeb 4C8D5F04 		lea	r11, 4[rdi]	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4890              		.loc 1 364 9 is_stmt 1 view .LVU1601
 4891              	.LVL246:
 365:sieve_extend.c ****     }
 4892              		.loc 1 365 9 view .LVU1602
 365:sieve_extend.c ****     }
 4893              		.loc 1 365 9 is_stmt 0 view .LVU1603
 4894              	.LBE413:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4895              		.loc 1 357 11 is_stmt 1 view .LVU1604
 4896              	.LBB414:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4897              		.loc 1 358 9 view .LVU1605
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4898              		.loc 1 359 9 view .LVU1606
 4899              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4900              		.loc 1 359 19 is_stmt 0 view .LVU1607
 4901 1eef 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4902              		.loc 1 360 9 is_stmt 1 view .LVU1608
 4903              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4904              		.loc 1 360 44 is_stmt 0 view .LVU1609
 4905 1ef3 C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp724, MEM[base: _528, offset: 0B], _12
 4905      70E0
 4906              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4907              		.loc 1 360 65 view .LVU1610
 4908 1ef9 C442B9F7 		shlx	r15, r10, r8	# tmp725, source1, _18
 4908      FA
 4909              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4910              		.loc 1 360 54 view .LVU1611
 4911 1efe 4C09FE   		or	rsi, r15	# tmp726, tmp725
 4912 1f01 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4913              	.LVL247:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4914              		.loc 1 361 9 is_stmt 1 view .LVU1612
 362:sieve_extend.c ****         copy_word += 2;
 4915              		.loc 1 362 9 view .LVU1613
 4916              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4917              		.loc 1 362 44 is_stmt 0 view .LVU1614
 4918 1f05 C442F3F7 		shrx	r10, r10, rcx	# tmp729, source1, _12
 4918      D2
 4919              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccG38KJh.s 			page 138


 4920              		.loc 1 362 65 view .LVU1615
 4921 1f0a 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4922 1f0e C4C2B9F7 		shlx	rsi, r9, r8	# tmp728, MEM[base: _528, offset: 16B], _18
 4922      F1
 4923              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4924              		.loc 1 362 54 view .LVU1616
 4925 1f13 4909F2   		or	r10, rsi	# tmp730, tmp728
 4926 1f16 4E8954DB 		mov	QWORD PTR 8[rbx+r11*8], r10	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4926      08
 4927              	.LVL248:
 363:sieve_extend.c ****         source_word += 2;
 4928              		.loc 1 363 9 is_stmt 1 view .LVU1617
 4929              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4930              		.loc 1 363 19 is_stmt 0 view .LVU1618
 4931 1f1b 4C8D5F06 		lea	r11, 6[rdi]	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4932              		.loc 1 364 9 is_stmt 1 view .LVU1619
 4933              	.LVL249:
 365:sieve_extend.c ****     }
 4934              		.loc 1 365 9 view .LVU1620
 365:sieve_extend.c ****     }
 4935              		.loc 1 365 9 is_stmt 0 view .LVU1621
 4936              	.LBE414:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4937              		.loc 1 357 11 is_stmt 1 view .LVU1622
 4938              	.LBB415:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4939              		.loc 1 358 9 view .LVU1623
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4940              		.loc 1 359 9 view .LVU1624
 4941              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4942              		.loc 1 363 19 is_stmt 0 view .LVU1625
 4943 1f1f 4883C708 		add	rdi, 8	# copy_word,
 4944              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4945              		.loc 1 359 19 view .LVU1626
 4946 1f23 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4947              		.loc 1 360 9 is_stmt 1 view .LVU1627
 4948              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4949              		.loc 1 360 44 is_stmt 0 view .LVU1628
 4950 1f27 C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp736, MEM[base: _528, offset: 0B], _12
 4950      70F0
 4951              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4952              		.loc 1 360 65 view .LVU1629
 4953 1f2d C442B9F7 		shlx	r15, r9, r8	# tmp737, source1, _18
 4953      F9
 4954              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4955              		.loc 1 360 54 view .LVU1630
 4956 1f32 4C09FE   		or	rsi, r15	# tmp738, tmp737
 4957 1f35 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
GAS LISTING /tmp/ccG38KJh.s 			page 139


 4958              	.LVL250:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4959              		.loc 1 361 9 is_stmt 1 view .LVU1631
 362:sieve_extend.c ****         copy_word += 2;
 4960              		.loc 1 362 9 view .LVU1632
 4961              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4962              		.loc 1 362 44 is_stmt 0 view .LVU1633
 4963 1f39 C442F3F7 		shrx	r9, r9, rcx	# tmp741, source1, _12
 4963      C9
 4964              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4965              		.loc 1 362 65 view .LVU1634
 4966 1f3e 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4967 1f41 C4C2B9F7 		shlx	rsi, r10, r8	# tmp740, MEM[base: _528, offset: 16B], _18
 4967      F2
 4968              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4969              		.loc 1 362 54 view .LVU1635
 4970 1f46 4909F1   		or	r9, rsi	# tmp742, tmp740
 4971 1f49 4E894CDB 		mov	QWORD PTR 8[rbx+r11*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4971      08
 4972              	.LVL251:
 363:sieve_extend.c ****         source_word += 2;
 4973              		.loc 1 363 9 is_stmt 1 view .LVU1636
 364:sieve_extend.c ****         distance += 2;
 4974              		.loc 1 364 9 view .LVU1637
 365:sieve_extend.c ****     }
 4975              		.loc 1 365 9 view .LVU1638
 4976 1f4e 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4977              		.loc 1 365 9 is_stmt 0 view .LVU1639
 4978              	.LBE415:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4979              		.loc 1 357 11 is_stmt 1 view .LVU1640
 4980 1f52 48397C24 		cmp	QWORD PTR 40[rsp], rdi	# %sfp, copy_word
 4980      28
 4981 1f57 0F8732FF 		ja	.L256	#,
 4981      FFFF
 4982 1f5d 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# tmp.300, %sfp
 4982      48
 4983 1f62 E926F7FF 		jmp	.L257	#
 4983      FF
 4984              	.LVL252:
 4985 1f67 660F1F84 		.p2align 4,,10
 4985      00000000 
 4985      00
 4986              		.p2align 3
 4987              	.L270:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4988              		.loc 1 357 11 is_stmt 0 view .LVU1641
 4989              	.LBE419:
 4990              	.LBE439:
 4991              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4992              		.loc 1 394 5 view .LVU1642
 4993 1f70 4C89E1   		mov	rcx, r12	# tmp.291, tmp.301
GAS LISTING /tmp/ccG38KJh.s 			page 140


 4994 1f73 E95CFAFF 		jmp	.L258	#
 4994      FF
 4995              	.LVL253:
 4996              	.L413:
 4997              	.LBB440:
 4998              	.LBB420:
 4999              	.LBB416:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 5000              		.loc 1 358 9 is_stmt 1 view .LVU1643
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5001              		.loc 1 359 9 view .LVU1644
 5002              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5003              		.loc 1 359 19 is_stmt 0 view .LVU1645
 5004 1f78 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5005              		.loc 1 360 9 is_stmt 1 view .LVU1646
 5006              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5007              		.loc 1 360 44 is_stmt 0 view .LVU1647
 5008 1f7c 4589E8   		mov	r8d, r13d	# tmp1084, _12
 5009 1f7f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp866, MEM[base: _528, offset: 0B], tmp1084
 5009      30
 5010              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5011              		.loc 1 360 65 view .LVU1648
 5012 1f84 4189D0   		mov	r8d, edx	# tmp1085, _18
 5013 1f87 C442B9F7 		shlx	r8, r9, r8	# tmp867, source1, tmp1085
 5013      C1
 5014              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5015              		.loc 1 360 54 view .LVU1649
 5016 1f8c 4C09C6   		or	rsi, r8	# tmp868, tmp867
 5017 1f8f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 5018              	.LVL254:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5019              		.loc 1 361 9 is_stmt 1 view .LVU1650
 362:sieve_extend.c ****         copy_word += 2;
 5020              		.loc 1 362 9 view .LVU1651
 5021              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5022              		.loc 1 360 44 is_stmt 0 view .LVU1652
 5023 1f93 4589EA   		mov	r10d, r13d	# _12, shift
 5024              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 5025              		.loc 1 360 65 view .LVU1653
 5026 1f96 4189D7   		mov	r15d, edx	# _18, shift_flipped
 5027              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 5028              		.loc 1 362 65 view .LVU1654
 5029 1f99 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 5030              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 5031              		.loc 1 362 44 view .LVU1655
 5032 1f9d C442ABF7 		shrx	r9, r9, r10	# tmp871, source1, tmp1087
 5032      C9
 5033              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccG38KJh.s 			page 141


 362:sieve_extend.c ****         copy_word += 2;
 5034              		.loc 1 362 65 view .LVU1656
 5035 1fa2 C46281F7 		shlx	r8, rax, r15	# tmp870, MEM[base: _528, offset: 16B], tmp1086
 5035      C0
 5036              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 5037              		.loc 1 362 54 view .LVU1657
 5038 1fa7 4D09C8   		or	r8, r9	# tmp872, tmp871
 5039 1faa 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 5039      08
 5040              	.LVL255:
 363:sieve_extend.c ****         source_word += 2;
 5041              		.loc 1 363 9 is_stmt 1 view .LVU1658
 5042 1faf 488D4120 		lea	rax, 32[rcx]	# ivtmp.368,
 5043              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 5044              		.loc 1 363 19 is_stmt 0 view .LVU1659
 5045 1fb3 498D7C24 		lea	rdi, 4[r12]	# copy_word,
 5045      04
 364:sieve_extend.c ****         distance += 2;
 5046              		.loc 1 364 9 is_stmt 1 view .LVU1660
 5047              	.LVL256:
 365:sieve_extend.c ****     }
 5048              		.loc 1 365 9 view .LVU1661
 365:sieve_extend.c ****     }
 5049              		.loc 1 365 9 is_stmt 0 view .LVU1662
 5050              	.LBE416:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5051              		.loc 1 357 11 is_stmt 1 view .LVU1663
 5052 1fb8 E940FEFF 		jmp	.L365	#
 5052      FF
 5053              	.LBE420:
 5054              	.LBE440:
 5055              		.cfi_endproc
 5056              	.LFE63:
 5058              		.section	.rodata.str1.1,"aMS",@progbits,1
 5059              	.LC6:
 5060 0000 25336A75 		.string	"%3ju "
 5060      2000
 5061              	.LC7:
 5062 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 5062      6E642025 
 5062      6A752070 
 5062      72696D65 
 5062      7320756E 
 5063              		.text
 5064 1fbd 0F1F00   		.p2align 4
 5066              	show_primes.isra.0:
 5067              	.LVL257:
 5068              	.LFB80:
 534:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 5069              		.loc 1 534 13 view -0
 5070              		.cfi_startproc
 5071              	.LBB441:
 536:sieve_extend.c ****         primeCount++;
 5072              		.loc 1 536 30 view .LVU1665
 5073              	.LBE441:
GAS LISTING /tmp/ccG38KJh.s 			page 142


 5074              	# sieve_extend.c:534: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 534:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 5075              		.loc 1 534 13 is_stmt 0 view .LVU1666
 5076 1fc0 4157     		push	r15	#
 5077              		.cfi_def_cfa_offset 16
 5078              		.cfi_offset 15, -16
 5079 1fc2 4156     		push	r14	#
 5080              		.cfi_def_cfa_offset 24
 5081              		.cfi_offset 14, -24
 5082 1fc4 4155     		push	r13	#
 5083              		.cfi_def_cfa_offset 32
 5084              		.cfi_offset 13, -32
 5085 1fc6 4154     		push	r12	#
 5086              		.cfi_def_cfa_offset 40
 5087              		.cfi_offset 12, -40
 5088 1fc8 55       		push	rbp	#
 5089              		.cfi_def_cfa_offset 48
 5090              		.cfi_offset 6, -48
 5091 1fc9 4889F5   		mov	rbp, rsi	# ISRA.107, tmp168
 5092 1fcc 53       		push	rbx	#
 5093              		.cfi_def_cfa_offset 56
 5094              		.cfi_offset 3, -56
 5095 1fcd 4883EC08 		sub	rsp, 8	#,
 5096              		.cfi_def_cfa_offset 64
 5097              	.LBB458:
 5098              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5099              		.loc 1 536 44 view .LVU1667
 5100 1fd1 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.107_32(D)
 5101              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5102              		.loc 1 536 5 view .LVU1668
 5103 1fd4 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 5104 1fd8 0F867601 		jbe	.L421	#,
 5104      0000
 5105              	# sieve_extend.c:538:         if (factor < maxFactor/2) {
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5106              		.loc 1 538 31 view .LVU1669
 5107 1fde 48D1EA   		shr	rdx	# maxFactor
 5108              	.LVL258:
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5109              		.loc 1 538 31 view .LVU1670
 5110 1fe1 4989FC   		mov	r12, rdi	# ISRA.106, tmp167
 5111 1fe4 4989D7   		mov	r15, rdx	# _4, maxFactor
 5112              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5113              		.loc 1 536 20 view .LVU1671
 5114 1fe7 BB010000 		mov	ebx, 1	# factor,
 5114      00
 5115              	.LBE458:
 5116              	# sieve_extend.c:535:     counter_t primeCount = 1;    // We already have 2
 535:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 5117              		.loc 1 535 15 view .LVU1672
 5118 1fec 41BE0100 		mov	r14d, 1	# primeCount,
 5118      0000
 5119              	.LBB459:
 5120              	.LBB442:
GAS LISTING /tmp/ccG38KJh.s 			page 143


 5121              	.LBB443:
 5122              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5123              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccG38KJh.s 			page 144


  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 5124              		.loc 3 107 10 view .LVU1673
 5125 1ff2 49BDCDCC 		movabs	r13, -3689348814741910323	# tmp136,
 5125      CCCCCCCC 
 5125      CCCC
GAS LISTING /tmp/ccG38KJh.s 			page 145


 5126              	.LVL259:
 5127 1ffc 0F1F4000 		.p2align 4,,10
 5128              		.p2align 3
 5129              	.L420:
 5130              		.loc 3 107 10 view .LVU1674
 5131              	.LBE443:
 5132              	.LBE442:
 537:sieve_extend.c ****         if (factor < maxFactor/2) {
 5133              		.loc 1 537 9 is_stmt 1 view .LVU1675
 5134              	# sieve_extend.c:537:         primeCount++;
 537:sieve_extend.c ****         if (factor < maxFactor/2) {
 5135              		.loc 1 537 19 is_stmt 0 view .LVU1676
 5136 2000 49FFC6   		inc	r14	# primeCount
 5137              	.LVL260:
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5138              		.loc 1 538 9 is_stmt 1 view .LVU1677
 5139              	# sieve_extend.c:538:         if (factor < maxFactor/2) {
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 5140              		.loc 1 538 12 is_stmt 0 view .LVU1678
 5141 2003 4939DF   		cmp	r15, rbx	# _4, factor
 5142 2006 0F87FC00 		ja	.L444	#,
 5142      0000
 5143              	.L416:
 536:sieve_extend.c ****         primeCount++;
 5144              		.loc 1 536 52 is_stmt 1 view .LVU1679
 5145              	.LVL261:
 5146              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5147              		.loc 1 536 61 is_stmt 0 view .LVU1680
 5148 200c 4D8B0424 		mov	r8, QWORD PTR [r12]	# _11, *ISRA.106_33(D)
 5149 2010 48FFC3   		inc	rbx	# factor
 5150              	.LVL262:
 5151              	.L443:
 5152              	.LBB448:
 5153              	.LBI448:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 5154              		.loc 1 121 25 is_stmt 1 view .LVU1681
 5155              	.LBB449:
 122:sieve_extend.c ****     return index;
 5156              		.loc 1 122 5 view .LVU1682
 122:sieve_extend.c ****     return index;
 5157              		.loc 1 122 11 view .LVU1683
 5158              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5159              		.loc 1 122 23 is_stmt 0 view .LVU1684
 5160 2013 4889D9   		mov	rcx, rbx	# tmp124, factor
 5161 2016 48C1E906 		shr	rcx, 6	# tmp124,
 5162              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5163              		.loc 1 122 12 view .LVU1685
 5164 201a 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 5165              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5166              		.loc 1 122 11 view .LVU1686
 5167 201e 490FA3D9 		bt	r9, rbx	# *_39, factor
 5168 2022 0F83A800 		jnc	.L418	#,
 5168      0000
GAS LISTING /tmp/ccG38KJh.s 			page 146


 122:sieve_extend.c ****     return index;
 5169              		.loc 1 122 60 is_stmt 1 view .LVU1687
 5170              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5171              		.loc 1 122 65 is_stmt 0 view .LVU1688
 5172 2028 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 5173              	.LVL263:
 5174              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5175              		.loc 1 122 23 view .LVU1689
 5176 202c 4D89D3   		mov	r11, r10	# tmp129, factor
 5177 202f 49C1EB06 		shr	r11, 6	# tmp129,
 5178              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5179              		.loc 1 122 12 view .LVU1690
 5180 2033 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 5181              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5182              		.loc 1 122 65 view .LVU1691
 5183 2037 4C89D3   		mov	rbx, r10	# factor, tmp138
 122:sieve_extend.c ****     return index;
 5184              		.loc 1 122 11 is_stmt 1 view .LVU1692
 5185 203a 4C0FA3D0 		bt	rax, r10	# *_16, factor
 5186 203e 0F838C00 		jnc	.L418	#,
 5186      0000
 122:sieve_extend.c ****     return index;
 5187              		.loc 1 122 60 view .LVU1693
 5188              	.LVL264:
 5189              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5190              		.loc 1 122 65 is_stmt 0 view .LVU1694
 5191 2044 48FFC3   		inc	rbx	# factor
 5192              	.LVL265:
 122:sieve_extend.c ****     return index;
 5193              		.loc 1 122 11 is_stmt 1 view .LVU1695
 5194              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5195              		.loc 1 122 23 is_stmt 0 view .LVU1696
 5196 2047 4889DA   		mov	rdx, rbx	# tmp139, factor
 5197 204a 48C1EA06 		shr	rdx, 6	# tmp139,
 5198              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5199              		.loc 1 122 12 view .LVU1697
 5200 204e 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 5201              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5202              		.loc 1 122 11 view .LVU1698
 5203 2052 480FA3DF 		bt	rdi, rbx	# *_16, factor
 5204 2056 7378     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5205              		.loc 1 122 60 is_stmt 1 view .LVU1699
 5206              	.LVL266:
 5207              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5208              		.loc 1 122 65 is_stmt 0 view .LVU1700
 5209 2058 498D5A02 		lea	rbx, 2[r10]	# factor,
 5210              	.LVL267:
GAS LISTING /tmp/ccG38KJh.s 			page 147


 122:sieve_extend.c ****     return index;
 5211              		.loc 1 122 11 is_stmt 1 view .LVU1701
 5212              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5213              		.loc 1 122 23 is_stmt 0 view .LVU1702
 5214 205c 4889D9   		mov	rcx, rbx	# tmp143, factor
 5215 205f 48C1E906 		shr	rcx, 6	# tmp143,
 5216              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5217              		.loc 1 122 12 view .LVU1703
 5218 2063 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 5219              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5220              		.loc 1 122 11 view .LVU1704
 5221 2067 490FA3D9 		bt	r9, rbx	# *_16, factor
 5222 206b 7363     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5223              		.loc 1 122 60 is_stmt 1 view .LVU1705
 5224              	.LVL268:
 5225              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5226              		.loc 1 122 65 is_stmt 0 view .LVU1706
 5227 206d 498D5A03 		lea	rbx, 3[r10]	# factor,
 5228              	.LVL269:
 122:sieve_extend.c ****     return index;
 5229              		.loc 1 122 11 is_stmt 1 view .LVU1707
 5230              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5231              		.loc 1 122 23 is_stmt 0 view .LVU1708
 5232 2071 4989DB   		mov	r11, rbx	# tmp147, factor
 5233 2074 49C1EB06 		shr	r11, 6	# tmp147,
 5234              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5235              		.loc 1 122 12 view .LVU1709
 5236 2078 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 5237              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5238              		.loc 1 122 11 view .LVU1710
 5239 207c 480FA3D8 		bt	rax, rbx	# *_16, factor
 5240 2080 734E     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5241              		.loc 1 122 60 is_stmt 1 view .LVU1711
 5242              	.LVL270:
 5243              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5244              		.loc 1 122 65 is_stmt 0 view .LVU1712
 5245 2082 498D5A04 		lea	rbx, 4[r10]	# factor,
 5246              	.LVL271:
 122:sieve_extend.c ****     return index;
 5247              		.loc 1 122 11 is_stmt 1 view .LVU1713
 5248              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5249              		.loc 1 122 23 is_stmt 0 view .LVU1714
 5250 2086 4889DA   		mov	rdx, rbx	# tmp151, factor
 5251 2089 48C1EA06 		shr	rdx, 6	# tmp151,
 5252              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccG38KJh.s 			page 148


 5253              		.loc 1 122 12 view .LVU1715
 5254 208d 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 5255              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5256              		.loc 1 122 11 view .LVU1716
 5257 2091 480FA3DF 		bt	rdi, rbx	# *_16, factor
 5258 2095 7339     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5259              		.loc 1 122 60 is_stmt 1 view .LVU1717
 5260              	.LVL272:
 5261              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5262              		.loc 1 122 65 is_stmt 0 view .LVU1718
 5263 2097 498D5A05 		lea	rbx, 5[r10]	# factor,
 5264              	.LVL273:
 122:sieve_extend.c ****     return index;
 5265              		.loc 1 122 11 is_stmt 1 view .LVU1719
 5266              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5267              		.loc 1 122 23 is_stmt 0 view .LVU1720
 5268 209b 4889D9   		mov	rcx, rbx	# tmp155, factor
 5269 209e 48C1E906 		shr	rcx, 6	# tmp155,
 5270              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5271              		.loc 1 122 12 view .LVU1721
 5272 20a2 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 5273              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5274              		.loc 1 122 11 view .LVU1722
 5275 20a6 490FA3D9 		bt	r9, rbx	# *_16, factor
 5276 20aa 7324     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5277              		.loc 1 122 60 is_stmt 1 view .LVU1723
 5278              	.LVL274:
 5279              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5280              		.loc 1 122 65 is_stmt 0 view .LVU1724
 5281 20ac 498D5A06 		lea	rbx, 6[r10]	# factor,
 5282              	.LVL275:
 122:sieve_extend.c ****     return index;
 5283              		.loc 1 122 11 is_stmt 1 view .LVU1725
 5284              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5285              		.loc 1 122 23 is_stmt 0 view .LVU1726
 5286 20b0 4989DB   		mov	r11, rbx	# tmp159, factor
 5287 20b3 49C1EB06 		shr	r11, 6	# tmp159,
 5288              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5289              		.loc 1 122 12 view .LVU1727
 5290 20b7 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 5291              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5292              		.loc 1 122 11 view .LVU1728
 5293 20bb 480FA3D8 		bt	rax, rbx	# *_16, factor
 5294 20bf 730F     		jnc	.L418	#,
 122:sieve_extend.c ****     return index;
 5295              		.loc 1 122 60 is_stmt 1 view .LVU1729
GAS LISTING /tmp/ccG38KJh.s 			page 149


 5296              	.LVL276:
 5297              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5298              		.loc 1 122 65 is_stmt 0 view .LVU1730
 5299 20c1 498D5A07 		lea	rbx, 7[r10]	# factor,
 5300              	.LVL277:
 122:sieve_extend.c ****     return index;
 5301              		.loc 1 122 11 is_stmt 1 view .LVU1731
 5302 20c5 E949FFFF 		jmp	.L443	#
 5302      FF
 5303 20ca 660F1F44 		.p2align 4,,10
 5303      0000
 5304              		.p2align 3
 5305              	.L418:
 5306              	.LVL278:
 122:sieve_extend.c ****     return index;
 5307              		.loc 1 122 11 is_stmt 0 view .LVU1732
 5308              	.LBE449:
 5309              	.LBE448:
 536:sieve_extend.c ****         primeCount++;
 5310              		.loc 1 536 30 is_stmt 1 view .LVU1733
 5311              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5312              		.loc 1 536 5 is_stmt 0 view .LVU1734
 5313 20d0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 5314 20d3 0F8227FF 		jb	.L420	#,
 5314      FFFF
 5315              	.LVL279:
 5316              	.L415:
 536:sieve_extend.c ****         primeCount++;
 5317              		.loc 1 536 5 view .LVU1735
 5318              	.LBE459:
 543:sieve_extend.c **** }
 5319              		.loc 1 543 5 is_stmt 1 view .LVU1736
 5320              	.LBB460:
 5321              	.LBI460:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5322              		.loc 3 105 1 view .LVU1737
 5323              	.LBB461:
 5324              		.loc 3 107 3 view .LVU1738
 5325              	.LBE461:
 5326              	.LBE460:
 5327              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5328              		.loc 1 544 1 is_stmt 0 view .LVU1739
 5329 20d9 4883C408 		add	rsp, 8	#,
 5330              		.cfi_remember_state
 5331              		.cfi_def_cfa_offset 56
 5332 20dd 5B       		pop	rbx	#
 5333              		.cfi_def_cfa_offset 48
 5334 20de 5D       		pop	rbp	#
 5335              		.cfi_def_cfa_offset 40
 5336 20df 415C     		pop	r12	#
 5337              		.cfi_def_cfa_offset 32
 5338 20e1 415D     		pop	r13	#
 5339              		.cfi_def_cfa_offset 24
 5340              	.LBB465:
GAS LISTING /tmp/ccG38KJh.s 			page 150


 5341              	.LBB462:
 5342              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5343              		.loc 3 107 10 view .LVU1740
 5344 20e3 4C89F2   		mov	rdx, r14	#, primeCount
 5345              	.LBE462:
 5346              	.LBE465:
 5347              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5348              		.loc 1 544 1 view .LVU1741
 5349 20e6 415E     		pop	r14	#
 5350              		.cfi_def_cfa_offset 16
 5351              	# sieve_extend.c:543:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 543:sieve_extend.c **** }
 5352              		.loc 1 543 5 view .LVU1742
 5353 20e8 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 5353      01
 5354              	.LBB466:
 5355              	.LBB463:
 5356              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5357              		.loc 3 107 10 view .LVU1743
 5358 20ed BF010000 		mov	edi, 1	#,
 5358      00
 5359 20f2 488D3500 		lea	rsi, .LC7[rip]	#,
 5359      000000
 5360 20f9 31C0     		xor	eax, eax	#
 5361              	.LBE463:
 5362              	.LBE466:
 5363              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5364              		.loc 1 544 1 view .LVU1744
 5365 20fb 415F     		pop	r15	#
 5366              		.cfi_def_cfa_offset 8
 5367              	.LBB467:
 5368              	.LBB464:
 5369              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5370              		.loc 3 107 10 view .LVU1745
 5371 20fd E9000000 		jmp	__printf_chk@PLT	#
 5371      00
 5372              	.LVL280:
 5373              		.p2align 4,,10
 5374 2102 660F1F44 		.p2align 3
 5374      0000
 5375              	.L444:
 5376              		.cfi_restore_state
 5377              		.loc 3 107 10 view .LVU1746
 5378              	.LBE464:
 5379              	.LBE467:
 5380              	.LBB468:
 539:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5381              		.loc 1 539 13 is_stmt 1 view .LVU1747
 5382              	.LBB450:
 5383              	.LBI442:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5384              		.loc 3 105 1 view .LVU1748
 5385              	.LBB444:
 5386              		.loc 3 107 3 view .LVU1749
 5387              	.LBE444:
GAS LISTING /tmp/ccG38KJh.s 			page 151


 5388              	.LBE450:
 5389              	# sieve_extend.c:539:             printf("%3ju ",(uintmax_t)factor*2+1);
 539:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5390              		.loc 1 539 13 is_stmt 0 view .LVU1750
 5391 2108 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 5391      01
 5392              	.LBB451:
 5393              	.LBB445:
 5394              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5395              		.loc 3 107 10 view .LVU1751
 5396 210d BF010000 		mov	edi, 1	#,
 5396      00
 5397 2112 488D3500 		lea	rsi, .LC6[rip]	#,
 5397      000000
 5398 2119 31C0     		xor	eax, eax	#
 5399 211b E8000000 		call	__printf_chk@PLT	#
 5399      00
 5400              	.LVL281:
 5401              		.loc 3 107 10 view .LVU1752
 5402              	.LBE445:
 5403              	.LBE451:
 540:sieve_extend.c ****         }
 5404              		.loc 1 540 13 is_stmt 1 view .LVU1753
 5405              	.LBB452:
 5406              	.LBB446:
 5407              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5408              		.loc 3 107 10 is_stmt 0 view .LVU1754
 5409 2120 4C89F0   		mov	rax, r14	# tmp120, primeCount
 5410 2123 490FAFC5 		imul	rax, r13	# tmp120, tmp136
 5411              	.LBE446:
 5412              	.LBE452:
 5413              	# sieve_extend.c:540:             if (primeCount % 10 == 0) printf("\n");
 540:sieve_extend.c ****         }
 5414              		.loc 1 540 16 view .LVU1755
 5415 2127 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 5415      99999999 
 5415      9919
 5416              	.LBB453:
 5417              	.LBB447:
 5418              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5419              		.loc 3 107 10 view .LVU1756
 5420 2131 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 5420      D001
 5421              	.LBE447:
 5422              	.LBE453:
 5423              	# sieve_extend.c:540:             if (primeCount % 10 == 0) printf("\n");
 540:sieve_extend.c ****         }
 5424              		.loc 1 540 16 view .LVU1757
 5425 2137 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 5426 213a 760C     		jbe	.L417	#,
 5427              	.L442:
 5428 213c 488B7500 		mov	rsi, QWORD PTR 0[rbp]	# prephitmp_86, *ISRA.107_32(D)
 5429              	.LBB454:
 5430              	.LBB455:
 5431              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5432              		.loc 3 107 10 view .LVU1758
 5433 2140 E9C7FEFF 		jmp	.L416	#
GAS LISTING /tmp/ccG38KJh.s 			page 152


 5433      FF
 5434              		.p2align 4,,10
 5435 2145 0F1F00   		.p2align 3
 5436              	.L417:
 5437              	.LBE455:
 5438              	.LBE454:
 540:sieve_extend.c ****         }
 5439              		.loc 1 540 39 is_stmt 1 view .LVU1759
 5440              	.LVL282:
 5441              	.LBB457:
 5442              	.LBI454:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5443              		.loc 3 105 1 view .LVU1760
 5444              	.LBB456:
 5445              		.loc 3 107 3 view .LVU1761
 5446              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5447              		.loc 3 107 10 is_stmt 0 view .LVU1762
 5448 2148 BF0A0000 		mov	edi, 10	#,
 5448      00
 5449 214d E8000000 		call	putchar@PLT	#
 5449      00
 5450              	.LVL283:
 5451 2152 EBE8     		jmp	.L442	#
 5452              	.LVL284:
 5453              	.L421:
 5454              		.loc 3 107 10 view .LVU1763
 5455              	.LBE456:
 5456              	.LBE457:
 5457              	.LBE468:
 5458              	# sieve_extend.c:535:     counter_t primeCount = 1;    // We already have 2
 535:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 5459              		.loc 1 535 15 view .LVU1764
 5460 2154 41BE0100 		mov	r14d, 1	# primeCount,
 5460      0000
 5461 215a E97AFFFF 		jmp	.L415	#
 5461      FF
 5462              		.cfi_endproc
 5463              	.LFE80:
 5465 215f 90       		.p2align 4
 5467              	sieve_shake:
 5468              	.LVL285:
 5469              	.LFB67:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5470              		.loc 1 506 88 is_stmt 1 view -0
 5471              		.cfi_startproc
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5472              		.loc 1 506 88 is_stmt 0 view .LVU1766
 5473 2160 55       		push	rbp	#
 5474              		.cfi_def_cfa_offset 16
 5475              		.cfi_offset 6, -16
 5476 2161 4889E5   		mov	rbp, rsp	#,
 5477              		.cfi_def_cfa_register 6
 5478 2164 4157     		push	r15	#
 5479 2166 4156     		push	r14	#
 5480 2168 4155     		push	r13	#
 5481 216a 4154     		push	r12	#
 5482 216c 53       		push	rbx	#
GAS LISTING /tmp/ccG38KJh.s 			page 153


 5483              		.cfi_offset 15, -24
 5484              		.cfi_offset 14, -32
 5485              		.cfi_offset 13, -40
 5486              		.cfi_offset 12, -48
 5487              		.cfi_offset 3, -56
 5488 216d 4889FB   		mov	rbx, rdi	# maxints, tmp1135
 5489              	.LBB542:
 5490              	.LBB543:
 5491              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5492              		.loc 1 109 86 view .LVU1767
 5493 2170 4989DE   		mov	r14, rbx	# _2, maxints
 5494              	.LBE543:
 5495              	.LBE542:
 5496              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5497              		.loc 1 506 88 view .LVU1768
 5498 2173 4883E4E0 		and	rsp, -32	#,
 5499 2177 4881ECC0 		sub	rsp, 192	#,
 5499      000000
 5500              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5501              		.loc 1 506 88 view .LVU1769
 5502 217e 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, tmp1136
 5502      38
 5503              	.LBB547:
 5504              	.LBB544:
 5505              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5506              		.loc 1 109 86 view .LVU1770
 5507 2183 49D1EE   		shr	r14	# _2
 5508              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5509              		.loc 1 108 29 view .LVU1771
 5510 2186 BE180000 		mov	esi, 24	#,
 5510      00
 5511              	.LVL286:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5512              		.loc 1 108 29 view .LVU1772
 5513 218b BF080000 		mov	edi, 8	#,
 5513      00
 5514              	.LVL287:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5515              		.loc 1 108 29 view .LVU1773
 5516              	.LBE544:
 5517              	.LBE547:
 5518              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5519              		.loc 1 506 88 view .LVU1774
 5520 2190 64488B04 		mov	rax, QWORD PTR fs:40	# tmp1488, MEM[(<address-space-1> long unsigned int *)40B]
 5520      25280000 
 5520      00
 5521 2199 48898424 		mov	QWORD PTR 184[rsp], rax	# D.7565, tmp1488
 5521      B8000000 
 5522 21a1 31C0     		xor	eax, eax	# tmp1488
 507:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 5523              		.loc 1 507 5 is_stmt 1 view .LVU1775
GAS LISTING /tmp/ccG38KJh.s 			page 154


 5524              	.LVL288:
 5525              	.LBB548:
 5526              	.LBI542:
 107:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 5527              		.loc 1 107 24 view .LVU1776
 5528              	.LBB545:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5529              		.loc 1 108 5 view .LVU1777
 5530              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5531              		.loc 1 108 29 is_stmt 0 view .LVU1778
 5532 21a3 E8000000 		call	aligned_alloc@PLT	#
 5532      00
 5533              	.LVL289:
 5534              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5535              		.loc 1 109 86 view .LVU1779
 5536 21a8 498DB600 		lea	rsi, 1024[r14]	# tmp521,
 5536      040000
 5537              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5538              		.loc 1 109 78 view .LVU1780
 5539 21af 48C1EE0A 		shr	rsi, 10	# tmp522,
 5540              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5541              		.loc 1 109 25 view .LVU1781
 5542 21b3 48C1E607 		sal	rsi, 7	# tmp523,
 5543 21b7 BF800000 		mov	edi, 128	#,
 5543      00
 5544              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5545              		.loc 1 108 29 view .LVU1782
 5546 21bc 4989C5   		mov	r13, rax	# <retval>, tmp1137
 5547 21bf 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, <retval>
 5547      10
 5548              	.LVL290:
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5549              		.loc 1 109 5 is_stmt 1 view .LVU1783
 5550              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5551              		.loc 1 109 86 is_stmt 0 view .LVU1784
 5552 21c4 4C897424 		mov	QWORD PTR 112[rsp], r14	# %sfp, _2
 5552      70
 5553              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5554              		.loc 1 109 25 view .LVU1785
 5555 21c9 E8000000 		call	aligned_alloc@PLT	#
 5555      00
 5556              	.LVL291:
 5557              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5558              		.loc 1 109 23 view .LVU1786
 5559 21ce 49894500 		mov	QWORD PTR 0[r13], rax	# sieve_96->bitstorage, _101
 110:sieve_extend.c ****     sieve->size     = size;
 5560              		.loc 1 110 5 is_stmt 1 view .LVU1787
 5561              	# sieve_extend.c:110:     sieve->bits     = size >> 1;
 110:sieve_extend.c ****     sieve->size     = size;
GAS LISTING /tmp/ccG38KJh.s 			page 155


 5562              		.loc 1 110 21 is_stmt 0 view .LVU1788
 5563 21d2 4D897508 		mov	QWORD PTR 8[r13], r14	# sieve_96->bits, _2
 111:sieve_extend.c ****     return sieve;
 5564              		.loc 1 111 5 is_stmt 1 view .LVU1789
 5565              	# sieve_extend.c:111:     sieve->size     = size;
 111:sieve_extend.c ****     return sieve;
 5566              		.loc 1 111 21 is_stmt 0 view .LVU1790
 5567 21d6 49895D10 		mov	QWORD PTR 16[r13], rbx	# sieve_96->size, maxints
 112:sieve_extend.c **** }
 5568              		.loc 1 112 5 is_stmt 1 view .LVU1791
 5569              	.LVL292:
 112:sieve_extend.c **** }
 5570              		.loc 1 112 5 is_stmt 0 view .LVU1792
 5571              	.LBE545:
 5572              	.LBE548:
 508:sieve_extend.c **** 
 5573              		.loc 1 508 5 is_stmt 1 view .LVU1793
 510:sieve_extend.c **** 
 5574              		.loc 1 510 5 view .LVU1794
 513:sieve_extend.c **** 
 5575              		.loc 1 513 5 view .LVU1795
 5576              	.LBB549:
 5577              	.LBI549:
 466:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 5578              		.loc 1 466 21 view .LVU1796
 5579              	.LBB550:
 467:sieve_extend.c ****     register counter_t prime   = 0;
 5580              		.loc 1 467 5 view .LVU1797
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5581              		.loc 1 468 5 view .LVU1798
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5582              		.loc 1 469 5 view .LVU1799
 470:sieve_extend.c ****     counter_t range_stop       = block_start;
 5583              		.loc 1 470 5 view .LVU1800
 471:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 5584              		.loc 1 471 5 view .LVU1801
 472:sieve_extend.c **** 
 5585              		.loc 1 472 5 view .LVU1802
 474:sieve_extend.c ****     
 5586              		.loc 1 474 5 view .LVU1803
 5587              	# sieve_extend.c:474:     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first 
 474:sieve_extend.c ****     
 5588              		.loc 1 474 47 is_stmt 0 view .LVU1804
 5589 21da 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_101],
 5589      000000
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5590              		.loc 1 476 5 is_stmt 1 view .LVU1805
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5591              		.loc 1 476 11 view .LVU1806
 5592              	.LBE550:
 5593              	.LBE549:
 5594              	.LBB631:
 5595              	.LBB546:
 5596              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5597              		.loc 1 109 25 is_stmt 0 view .LVU1807
 5598 21e1 4989C7   		mov	r15, rax	# _101, tmp1138
GAS LISTING /tmp/ccG38KJh.s 			page 156


 5599              	.LBE546:
 5600              	.LBE631:
 5601              	.LBB632:
 5602              	.LBB626:
 5603              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5604              		.loc 1 476 5 view .LVU1808
 5605 21e4 4D85F6   		test	r14, r14	# _2
 5606 21e7 0F84C81C 		je	.L1082	#,
 5606      0000
 5607              	.LBB551:
 5608              	# sieve_extend.c:477:         prime = searchBitFalse(bitstorage, prime+1);
 477:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 5609              		.loc 1 477 17 view .LVU1809
 5610 21ed 48C74424 		mov	QWORD PTR 104[rsp], 1	# %sfp,
 5610      68010000 
 5610      00
 5611              	.LBE551:
 5612              	# sieve_extend.c:470:     counter_t pattern_start    = 0;
 470:sieve_extend.c ****     counter_t range_stop       = block_start;
 5613              		.loc 1 470 15 view .LVU1810
 5614 21f6 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 5614      60000000 
 5614      00
 5615              	# sieve_extend.c:469:     counter_t patternsize_bits = 1;
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5616              		.loc 1 469 15 view .LVU1811
 5617 21ff 41BE0100 		mov	r14d, 1	# patternsize_bits,
 5617      0000
 5618              	.LVL293:
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5619              		.loc 1 469 15 view .LVU1812
 5620 2205 488B7424 		mov	rsi, QWORD PTR 104[rsp]	# index, %sfp
 5620      68
 5621              	# sieve_extend.c:472:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 472:sieve_extend.c **** 
 5622              		.loc 1 472 18 view .LVU1813
 5623 220a 31C0     		xor	eax, eax	# block$pattern_size
 5624              	.LVL294:
 472:sieve_extend.c **** 
 5625              		.loc 1 472 18 view .LVU1814
 5626 220c 31D2     		xor	edx, edx	# block$pattern_start
 5627              	# sieve_extend.c:468:     register counter_t prime   = 0;
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5628              		.loc 1 468 24 view .LVU1815
 5629 220e 31C9     		xor	ecx, ecx	# prime
 5630              	.LVL295:
 5631              		.p2align 4,,10
 5632              		.p2align 3
 5633              	.L446:
 5634              	.LBB619:
 5635              	.LBB552:
 5636              	.LBB553:
 123:sieve_extend.c **** }
 5637              		.loc 1 123 5 is_stmt 1 view .LVU1816
 123:sieve_extend.c **** }
 5638              		.loc 1 123 5 is_stmt 0 view .LVU1817
GAS LISTING /tmp/ccG38KJh.s 			page 157


 5639              	.LBE553:
 5640              	.LBE552:
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5641              		.loc 1 478 9 is_stmt 1 view .LVU1818
 5642              	# sieve_extend.c:478:         counter_t start = prime * prime * 2 + prime * 2;
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5643              		.loc 1 478 45 is_stmt 0 view .LVU1819
 5644 2210 4C8D6E01 		lea	r13, 1[rsi]	# index,
 5645 2214 4C8D2436 		lea	r12, [rsi+rsi]	# _888,
 5646              	# sieve_extend.c:478:         counter_t start = prime * prime * 2 + prime * 2;
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5647              		.loc 1 478 19 view .LVU1820
 5648 2218 4C89EB   		mov	rbx, r13	# index, index
 5649 221b 490FAFDC 		imul	rbx, r12	# index, _888
 5650              	.LVL296:
 479:sieve_extend.c **** 
 5651              		.loc 1 479 9 is_stmt 1 view .LVU1821
 5652              	# sieve_extend.c:479:         if unlikely(start > block_stop) break;
 479:sieve_extend.c **** 
 5653              		.loc 1 479 12 is_stmt 0 view .LVU1822
 5654 221f 483B5C24 		cmp	rbx, QWORD PTR 112[rsp]	# index, %sfp
 5654      70
 5655 2224 0F87580C 		ja	.L543	#,
 5655      0000
 481:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5656              		.loc 1 481 9 is_stmt 1 view .LVU1823
 5657              	# sieve_extend.c:481:         const counter_t step  = prime * 2 + 1;
 481:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5658              		.loc 1 481 25 is_stmt 0 view .LVU1824
 5659 222a 49FFC4   		inc	r12	# step
 5660              	.LVL297:
 482:sieve_extend.c **** 
 5661              		.loc 1 482 9 is_stmt 1 view .LVU1825
 5662              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5663              		.loc 1 482 12 is_stmt 0 view .LVU1826
 5664 222d 4D85ED   		test	r13, r13	# index
 5665 2230 7516     		jne	.L451	#,
 482:sieve_extend.c **** 
 5666              		.loc 1 482 41 is_stmt 1 view .LVU1827
 5667              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5668              		.loc 1 482 102 is_stmt 0 view .LVU1828
 5669 2232 48C7C0FF 		mov	rax, -1	# tmp538,
 5669      FFFFFF
 5670 2239 31D2     		xor	edx, edx	# tmp537
 5671 223b 49F7F4   		div	r12	# step
 5672              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5673              		.loc 1 482 47 view .LVU1829
 5674 223e 48C7C3FE 		mov	rbx, -2	# tmp539,
 5674      FFFFFF
 5675              	.LVL298:
 482:sieve_extend.c **** 
 5676              		.loc 1 482 47 view .LVU1830
 5677 2245 4829D3   		sub	rbx, rdx	# index, tmp537
 5678              	.LVL299:
GAS LISTING /tmp/ccG38KJh.s 			page 158


 5679              	.L451:
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5680              		.loc 1 484 9 is_stmt 1 view .LVU1831
 5681              	# sieve_extend.c:484:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5682              		.loc 1 484 53 is_stmt 0 view .LVU1832
 5683 2248 4C89F7   		mov	rdi, r14	# _69, patternsize_bits
 5684 224b 490FAFFC 		imul	rdi, r12	# _69, step
 5685 224f 48897C24 		mov	QWORD PTR 88[rsp], rdi	# %sfp, _69
 5685      58
 5686              	# sieve_extend.c:484:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5687              		.loc 1 484 60 view .LVU1833
 5688 2254 4801FF   		add	rdi, rdi	# _70
 5689 2257 48897C24 		mov	QWORD PTR 120[rsp], rdi	# %sfp, _70
 5689      78
 5690              	.LVL300:
 485:sieve_extend.c ****         block.pattern_start = pattern_start;
 5691              		.loc 1 485 9 is_stmt 1 view .LVU1834
 486:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 5692              		.loc 1 486 9 view .LVU1835
 487:sieve_extend.c **** 
 5693              		.loc 1 487 9 view .LVU1836
 5694              	# sieve_extend.c:487:         if unlikely(range_stop > block_stop) break;//return block; //range_st
 487:sieve_extend.c **** 
 5695              		.loc 1 487 12 is_stmt 0 view .LVU1837
 5696 225c 483B7C24 		cmp	rdi, QWORD PTR 112[rsp]	# _70, %sfp
 5696      70
 5697 2261 0F870219 		ja	.L930	#,
 5697      0000
 489:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5698              		.loc 1 489 9 is_stmt 1 view .LVU1838
 5699              	# sieve_extend.c:489:         if likely(patternsize_bits>1) {
 489:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5700              		.loc 1 489 12 is_stmt 0 view .LVU1839
 5701 2267 4983FE01 		cmp	r14, 1	# patternsize_bits,
 5702 226b 0F860219 		jbe	.L544	#,
 5702      0000
 490:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 5703              		.loc 1 490 13 is_stmt 1 view .LVU1840
 5704              	.LVL301:
 491:sieve_extend.c ****         }
 5705              		.loc 1 491 13 view .LVU1841
 5706              	.LBB555:
 5707              	.LBI555:
 419:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 5708              		.loc 1 419 20 view .LVU1842
 5709              	.LBB556:
 420:sieve_extend.c **** 
 5710              		.loc 1 420 5 view .LVU1843
 5711              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 5712              		.loc 1 420 8 is_stmt 0 view .LVU1844
 5713 2271 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 5714 2275 0F86EF0A 		jbe	.L1083	#,
 5714      0000
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
GAS LISTING /tmp/ccG38KJh.s 			page 159


 5715              		.loc 1 422 5 is_stmt 1 view .LVU1845
 5716              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 5717              		.loc 1 422 35 is_stmt 0 view .LVU1846
 5718 227b 4F8D0C36 		lea	r9, [r14+r14]	# tmp540,
 5719              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 5720              		.loc 1 423 22 view .LVU1847
 5721 227f 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 5722              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 5723              		.loc 1 422 22 view .LVU1848
 5724 2282 4183E13F 		and	r9d, 63	# copy_bit,
 5725              	.LVL302:
 423:sieve_extend.c **** 
 5726              		.loc 1 423 5 is_stmt 1 view .LVU1849
 5727              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 5728              		.loc 1 423 22 is_stmt 0 view .LVU1850
 5729 2286 4183E23F 		and	r10d, 63	# source_bit,
 5730              	.LVL303:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5731              		.loc 1 425 5 is_stmt 1 view .LVU1851
 5732              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5733              		.loc 1 425 13 is_stmt 0 view .LVU1852
 5734 228a 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 5735              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5736              		.loc 1 425 37 view .LVU1853
 5737 228d 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	#, %sfp
 5737      78
 5738 2292 4C89F2   		mov	rdx, r14	#, patternsize_bits
 5739 2295 4C89F6   		mov	rsi, r14	#, patternsize_bits
 5740 2298 4C89FF   		mov	rdi, r15	#, _101
 5741              	.LVL304:
 5742              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5743              		.loc 1 425 13 view .LVU1854
 5744 229b 0F82B70A 		jb	.L1084	#,
 5744      0000
 5745              	.LVL305:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5746              		.loc 1 426 10 is_stmt 1 view .LVU1855
 5747              	# sieve_extend.c:426:     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, so
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5748              		.loc 1 426 13 is_stmt 0 view .LVU1856
 5749 22a1 0F86990A 		jbe	.L455	#,
 5749      0000
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5750              		.loc 1 426 37 is_stmt 1 view .LVU1857
 5751 22a7 C5F877   		vzeroupper
 5752 22aa E8B1E3FF 		call	continuePattern_shiftright	#
 5752      FF
 5753              	.LVL306:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5754              		.loc 1 426 37 is_stmt 0 view .LVU1858
GAS LISTING /tmp/ccG38KJh.s 			page 160


 5755 22af 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 5755      50
 5756              	.LVL307:
 5757              	.L452:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5758              		.loc 1 426 37 view .LVU1859
 5759              	.LBE556:
 5760              	.LBE555:
 493:sieve_extend.c **** 
 5761              		.loc 1 493 9 is_stmt 1 view .LVU1860
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 5762              		.loc 1 495 9 view .LVU1861
 5763              	# sieve_extend.c:495:         if (step < MEDIUMSTEP_FASTER)      setBitsTrue_mediumStep(bitstorage,
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 5764              		.loc 1 495 12 is_stmt 0 view .LVU1862
 5765 22b4 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 5765      000000
 5766 22bb 0F828707 		jb	.L1085	#,
 5766      0000
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5767              		.loc 1 496 14 is_stmt 1 view .LVU1863
 5768              	# sieve_extend.c:496:         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bits
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5769              		.loc 1 496 17 is_stmt 0 view .LVU1864
 5770 22c1 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 5770      000000
 5771 22c8 0F834A05 		jnb	.L472	#,
 5771      0000
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5772              		.loc 1 496 44 is_stmt 1 view .LVU1865
 5773              	.LVL308:
 5774              	.LBB558:
 5775              	.LBI558:
 231:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 5776              		.loc 1 231 20 view .LVU1866
 5777              	.LBB559:
 232:sieve_extend.c **** 
 5778              		.loc 1 232 5 view .LVU1867
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 5779              		.loc 1 234 5 view .LVU1868
 5780              	# sieve_extend.c:234:     counter_t range_start_atvector = vectorstart(range_start);
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 5781              		.loc 1 234 15 is_stmt 0 view .LVU1869
 5782 22ce 4989DA   		mov	r10, rbx	# range_start_atvector, index
 5783 22d1 4530D2   		xor	r10b, r10b	# range_start_atvector
 5784              	.LVL309:
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 5785              		.loc 1 235 5 is_stmt 1 view .LVU1870
 5786              	# sieve_extend.c:235:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 5787              		.loc 1 235 8 is_stmt 0 view .LVU1871
 5788 22d4 4B8D3C14 		lea	rdi, [r12+r10]	# tmp569,
 5789 22d8 4839FB   		cmp	rbx, rdi	# index, tmp569
 5790 22db 0F86EF00 		jbe	.L473	#,
 5790      0000
 236:sieve_extend.c **** 
 5791              		.loc 1 236 9 is_stmt 1 view .LVU1872
GAS LISTING /tmp/ccG38KJh.s 			page 161


 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 5792              		.loc 1 238 9 view .LVU1873
 5793              	# sieve_extend.c:238:         range_start_atvector += VECTOR_SIZE; // find next vector
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 5794              		.loc 1 238 30 is_stmt 0 view .LVU1874
 5795 22e1 4981C200 		add	r10, 256	# range_start_atvector,
 5795      010000
 5796              	.LVL310:
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 5797              		.loc 1 239 9 is_stmt 1 view .LVU1875
 5798              	# sieve_extend.c:239:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 5799              		.loc 1 239 12 is_stmt 0 view .LVU1876
 5800 22e8 4C395424 		cmp	QWORD PTR 120[rsp], r10	# %sfp, range_start_atvector
 5800      78
 5801 22ed 0F82CA1A 		jb	.L474	#,
 5801      0000
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5802              		.loc 1 245 16 is_stmt 1 view .LVU1877
 5803              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5804              		.loc 1 246 56 is_stmt 0 view .LVU1878
 5805 22f3 BA010000 		mov	edx, 1	# tmp579,
 5805      00
 5806              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5807              		.loc 1 245 9 view .LVU1879
 5808 22f8 4C39D3   		cmp	rbx, r10	# index, range_start_atvector
 5809 22fb 0F87CF00 		ja	.L473	#,
 5809      0000
 5810              	.LVL311:
 5811              	.L475:
 246:sieve_extend.c ****     }
 5812              		.loc 1 246 13 is_stmt 1 view .LVU1880
 5813              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5814              		.loc 1 246 53 is_stmt 0 view .LVU1881
 5815 2301 4989D8   		mov	r8, rbx	# tmp575, index
 5816              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5817              		.loc 1 246 56 view .LVU1882
 5818 2304 C462E1F7 		shlx	r9, rdx, rbx	# tmp578, tmp579, index
 5818      CA
 5819              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5820              		.loc 1 246 53 view .LVU1883
 5821 2309 49C1E806 		shr	r8, 6	# tmp575,
 5822              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5823              		.loc 1 245 65 view .LVU1884
 5824 230d 4C01E3   		add	rbx, r12	# index, step
 5825              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5826              		.loc 1 246 53 view .LVU1885
 5827 2310 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_195, tmp578
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5828              		.loc 1 245 53 is_stmt 1 view .LVU1886
GAS LISTING /tmp/ccG38KJh.s 			page 162


 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5829              		.loc 1 245 16 view .LVU1887
 5830              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5831              		.loc 1 245 9 is_stmt 0 view .LVU1888
 5832 2314 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5833 2317 0F82B300 		jb	.L473	#,
 5833      0000
 246:sieve_extend.c ****     }
 5834              		.loc 1 246 13 is_stmt 1 view .LVU1889
 5835              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5836              		.loc 1 246 53 is_stmt 0 view .LVU1890
 5837 231d 4989DB   		mov	r11, rbx	# tmp1101, index
 5838              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5839              		.loc 1 246 56 view .LVU1891
 5840 2320 C4E2E1F7 		shlx	rcx, rdx, rbx	# tmp1104, tmp579, index
 5840      CA
 5841              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5842              		.loc 1 246 53 view .LVU1892
 5843 2325 49C1EB06 		shr	r11, 6	# tmp1101,
 5844              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5845              		.loc 1 245 65 view .LVU1893
 5846 2329 4C01E3   		add	rbx, r12	# index, step
 5847              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5848              		.loc 1 246 53 view .LVU1894
 5849 232c 4B090CDF 		or	QWORD PTR [r15+r11*8], rcx	# *_195, tmp1104
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5850              		.loc 1 245 53 is_stmt 1 view .LVU1895
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5851              		.loc 1 245 16 view .LVU1896
 5852              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5853              		.loc 1 245 9 is_stmt 0 view .LVU1897
 5854 2330 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5855 2333 0F829700 		jb	.L473	#,
 5855      0000
 246:sieve_extend.c ****     }
 5856              		.loc 1 246 13 is_stmt 1 view .LVU1898
 5857              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5858              		.loc 1 246 53 is_stmt 0 view .LVU1899
 5859 2339 4889D8   		mov	rax, rbx	# tmp1105, index
 5860              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5861              		.loc 1 246 56 view .LVU1900
 5862 233c C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp1108, tmp579, index
 5862      F2
 5863              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5864              		.loc 1 246 53 view .LVU1901
 5865 2341 48C1E806 		shr	rax, 6	# tmp1105,
 5866              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
GAS LISTING /tmp/ccG38KJh.s 			page 163


 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5867              		.loc 1 245 65 view .LVU1902
 5868 2345 4C01E3   		add	rbx, r12	# index, step
 5869              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5870              		.loc 1 246 53 view .LVU1903
 5871 2348 490934C7 		or	QWORD PTR [r15+rax*8], rsi	# *_195, tmp1108
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5872              		.loc 1 245 53 is_stmt 1 view .LVU1904
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5873              		.loc 1 245 16 view .LVU1905
 5874              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5875              		.loc 1 245 9 is_stmt 0 view .LVU1906
 5876 234c 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5877 234f 727F     		jb	.L473	#,
 246:sieve_extend.c ****     }
 5878              		.loc 1 246 13 is_stmt 1 view .LVU1907
 5879              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5880              		.loc 1 246 53 is_stmt 0 view .LVU1908
 5881 2351 4889DF   		mov	rdi, rbx	# tmp1109, index
 5882              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5883              		.loc 1 246 56 view .LVU1909
 5884 2354 C462E1F7 		shlx	r8, rdx, rbx	# tmp1112, tmp579, index
 5884      C2
 5885              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5886              		.loc 1 246 53 view .LVU1910
 5887 2359 48C1EF06 		shr	rdi, 6	# tmp1109,
 5888              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5889              		.loc 1 245 65 view .LVU1911
 5890 235d 4C01E3   		add	rbx, r12	# index, step
 5891              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5892              		.loc 1 246 53 view .LVU1912
 5893 2360 4D0904FF 		or	QWORD PTR [r15+rdi*8], r8	# *_195, tmp1112
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5894              		.loc 1 245 53 is_stmt 1 view .LVU1913
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5895              		.loc 1 245 16 view .LVU1914
 5896              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5897              		.loc 1 245 9 is_stmt 0 view .LVU1915
 5898 2364 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5899 2367 7267     		jb	.L473	#,
 246:sieve_extend.c ****     }
 5900              		.loc 1 246 13 is_stmt 1 view .LVU1916
 5901              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5902              		.loc 1 246 53 is_stmt 0 view .LVU1917
 5903 2369 4989D9   		mov	r9, rbx	# tmp1113, index
 5904              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5905              		.loc 1 246 56 view .LVU1918
GAS LISTING /tmp/ccG38KJh.s 			page 164


 5906 236c C462E1F7 		shlx	r11, rdx, rbx	# tmp1116, tmp579, index
 5906      DA
 5907              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5908              		.loc 1 246 53 view .LVU1919
 5909 2371 49C1E906 		shr	r9, 6	# tmp1113,
 5910              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5911              		.loc 1 245 65 view .LVU1920
 5912 2375 4C01E3   		add	rbx, r12	# index, step
 5913              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5914              		.loc 1 246 53 view .LVU1921
 5915 2378 4F091CCF 		or	QWORD PTR [r15+r9*8], r11	# *_195, tmp1116
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5916              		.loc 1 245 53 is_stmt 1 view .LVU1922
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5917              		.loc 1 245 16 view .LVU1923
 5918              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5919              		.loc 1 245 9 is_stmt 0 view .LVU1924
 5920 237c 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5921 237f 724F     		jb	.L473	#,
 246:sieve_extend.c ****     }
 5922              		.loc 1 246 13 is_stmt 1 view .LVU1925
 5923              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5924              		.loc 1 246 53 is_stmt 0 view .LVU1926
 5925 2381 4889D9   		mov	rcx, rbx	# tmp1117, index
 5926              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5927              		.loc 1 246 56 view .LVU1927
 5928 2384 C4E2E1F7 		shlx	rax, rdx, rbx	# tmp1120, tmp579, index
 5928      C2
 5929              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5930              		.loc 1 246 53 view .LVU1928
 5931 2389 48C1E906 		shr	rcx, 6	# tmp1117,
 5932              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5933              		.loc 1 245 65 view .LVU1929
 5934 238d 4C01E3   		add	rbx, r12	# index, step
 5935              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5936              		.loc 1 246 53 view .LVU1930
 5937 2390 490904CF 		or	QWORD PTR [r15+rcx*8], rax	# *_195, tmp1120
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5938              		.loc 1 245 53 is_stmt 1 view .LVU1931
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5939              		.loc 1 245 16 view .LVU1932
 5940              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5941              		.loc 1 245 9 is_stmt 0 view .LVU1933
 5942 2394 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5943 2397 7237     		jb	.L473	#,
 246:sieve_extend.c ****     }
 5944              		.loc 1 246 13 is_stmt 1 view .LVU1934
GAS LISTING /tmp/ccG38KJh.s 			page 165


 5945              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5946              		.loc 1 246 53 is_stmt 0 view .LVU1935
 5947 2399 4889DF   		mov	rdi, rbx	# tmp1121, index
 5948              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5949              		.loc 1 246 56 view .LVU1936
 5950 239c C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp1124, tmp579, index
 5950      F2
 5951              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5952              		.loc 1 246 53 view .LVU1937
 5953 23a1 48C1EF06 		shr	rdi, 6	# tmp1121,
 5954              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5955              		.loc 1 245 65 view .LVU1938
 5956 23a5 4C01E3   		add	rbx, r12	# index, step
 5957              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5958              		.loc 1 246 53 view .LVU1939
 5959 23a8 490934FF 		or	QWORD PTR [r15+rdi*8], rsi	# *_195, tmp1124
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5960              		.loc 1 245 53 is_stmt 1 view .LVU1940
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5961              		.loc 1 245 16 view .LVU1941
 5962              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5963              		.loc 1 245 9 is_stmt 0 view .LVU1942
 5964 23ac 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5965 23af 721F     		jb	.L473	#,
 246:sieve_extend.c ****     }
 5966              		.loc 1 246 13 is_stmt 1 view .LVU1943
 5967              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5968              		.loc 1 246 53 is_stmt 0 view .LVU1944
 5969 23b1 4989D8   		mov	r8, rbx	# tmp1125, index
 5970              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5971              		.loc 1 246 56 view .LVU1945
 5972 23b4 C462E1F7 		shlx	r9, rdx, rbx	# tmp1128, tmp579, index
 5972      CA
 5973              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5974              		.loc 1 246 53 view .LVU1946
 5975 23b9 49C1E806 		shr	r8, 6	# tmp1125,
 5976              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5977              		.loc 1 245 65 view .LVU1947
 5978 23bd 4C01E3   		add	rbx, r12	# index, step
 5979              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5980              		.loc 1 246 53 view .LVU1948
 5981 23c0 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_195, tmp1128
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5982              		.loc 1 245 53 is_stmt 1 view .LVU1949
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5983              		.loc 1 245 16 view .LVU1950
GAS LISTING /tmp/ccG38KJh.s 			page 166


 5984              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5985              		.loc 1 245 9 is_stmt 0 view .LVU1951
 5986 23c4 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5987 23c7 0F8334FF 		jnb	.L475	#,
 5987      FFFF
 5988 23cd 0F1F00   		.p2align 4,,10
 5989              		.p2align 3
 5990              	.L473:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5991              		.loc 1 249 5 is_stmt 1 view .LVU1952
 5992              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5993              		.loc 1 249 76 is_stmt 0 view .LVU1953
 5994 23d0 4D89E2   		mov	r10, r12	# tmp580, step
 5995              	.LVL312:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5996              		.loc 1 249 76 view .LVU1954
 5997 23d3 49C1E208 		sal	r10, 8	# tmp580,
 5998              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5999              		.loc 1 249 21 view .LVU1955
 6000 23d7 4901DA   		add	r10, rbx	# range_stop_unique, index
 6001 23da 4D89D3   		mov	r11, r10	# range_stop_unique, range_stop_unique
 6002              	.LVL313:
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 6003              		.loc 1 250 5 is_stmt 1 view .LVU1956
 6004              	# sieve_extend.c:250:     if (range_stop_unique >= range_stop) {
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 6005              		.loc 1 250 8 is_stmt 0 view .LVU1957
 6006 23dd 4C395424 		cmp	QWORD PTR 120[rsp], r10	# %sfp, range_stop_unique
 6006      78
 6007 23e2 0F86B417 		jbe	.L477	#,
 6007      0000
 6008              	.LVL314:
 6009              	.LBB560:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6010              		.loc 1 256 41 is_stmt 1 view .LVU1958
 6011              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6012              		.loc 1 256 5 is_stmt 0 view .LVU1959
 6013 23e8 4C39D3   		cmp	rbx, r10	# index, range_stop_unique
 6014 23eb 0F832A03 		jnb	.L462	#,
 6014      0000
 6015              	.LBB561:
 6016              	.LBB562:
 6017              	.LBB563:
 6018              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 6019              		.loc 1 173 21 view .LVU1960
 6020 23f1 488B4424 		mov	rax, QWORD PTR 120[rsp]	# range_stop_vector, %sfp
 6020      78
 6021              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 6022              		.loc 1 175 117 view .LVU1961
 6023 23f6 4A8D0CA5 		lea	rcx, 0[0+r12*4]	# _292,
 6023      00000000 
GAS LISTING /tmp/ccG38KJh.s 			page 167


 6024              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 6025              		.loc 1 173 21 view .LVU1962
 6026 23fe 48C1E808 		shr	rax, 8	# range_stop_vector,
 6027              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 6028              		.loc 1 175 142 view .LVU1963
 6029 2402 4889C7   		mov	rdi, rax	# tmp604, range_stop_vector
 6030 2405 4829CF   		sub	rdi, rcx	# tmp604, _292
 6031              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 6032              		.loc 1 185 97 view .LVU1964
 6033 2408 4989C0   		mov	r8, rax	# tmp602, range_stop_vector
 6034 240b 49C1E005 		sal	r8, 5	# tmp602,
 6035              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 6036              		.loc 1 175 92 view .LVU1965
 6037 240f 48C1E705 		sal	rdi, 5	# tmp605,
 6038              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6039              		.loc 1 179 38 view .LVU1966
 6040 2413 4C89E2   		mov	rdx, r12	# _301, step
 6041 2416 4C01FF   		add	rdi, r15	# tmp606, _101
 6042 2419 48C1E205 		sal	rdx, 5	# _301,
 6043 241d 4D01F8   		add	r8, r15	# _1121, _101
 6044 2420 4C89E6   		mov	rsi, r12	# _1155, step
 6045 2423 4839C8   		cmp	rax, rcx	# range_stop_vector, _292
 6046              	.LBE563:
 6047              	.LBE562:
 6048              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6049              		.loc 1 265 31 view .LVU1967
 6050 2426 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, patternsize_bits
 6050      48
 6051 242b 490F46FF 		cmovbe	rdi, r15	# _101,, fast_loop_ptr
 6052 242f 4C89E1   		mov	rcx, r12	# _1158, step
 6053 2432 48C1E606 		sal	rsi, 6	# _1155,
 6054 2436 4C896C24 		mov	QWORD PTR 64[rsp], r13	# %sfp, index
 6054      40
 6055 243b 48C1E107 		sal	rcx, 7	# _1158,
 6056              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 6057              		.loc 1 260 30 view .LVU1968
 6058 243f C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp608
 6059              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6060              		.loc 1 265 31 view .LVU1969
 6061 2443 41BA0100 		mov	r10d, 1	# tmp611,
 6061      0000
 6062              	.LVL315:
 265:sieve_extend.c ****             index += step;
 6063              		.loc 1 265 31 view .LVU1970
 6064 2449 4989F5   		mov	r13, rsi	# _1155, _1155
 6065              	.LVL316:
 6066 244c 0F1F4000 		.p2align 4,,10
 6067              		.p2align 3
 6068              	.L489:
GAS LISTING /tmp/ccG38KJh.s 			page 168


 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 6069              		.loc 1 257 9 is_stmt 1 view .LVU1971
 6070              	# sieve_extend.c:257:         const counter_t current_vector =  vectorindex(index);
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 6071              		.loc 1 257 25 is_stmt 0 view .LVU1972
 6072 2450 4889D8   		mov	rax, rbx	# current_vector, index
 6073 2453 48C1E808 		shr	rax, 8	# current_vector,
 6074              	.LVL317:
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 6075              		.loc 1 258 9 is_stmt 1 view .LVU1973
 6076              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 6077              		.loc 1 259 35 is_stmt 0 view .LVU1974
 6078 2457 4989D9   		mov	r9, rbx	# tmp607, index
 6079              	# sieve_extend.c:258:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 6080              		.loc 1 258 25 view .LVU1975
 6081 245a 488D3485 		lea	rsi, 0[0+rax*4]	# current_vector_start_word,
 6081      00000000 
 6082              	.LVL318:
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 6083              		.loc 1 259 9 is_stmt 1 view .LVU1976
 6084              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 6085              		.loc 1 259 35 is_stmt 0 view .LVU1977
 6086 2462 49C1E906 		shr	r9, 6	# tmp607,
 6087              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 6088              		.loc 1 259 28 view .LVU1978
 6089 2466 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 6090              	.LVL319:
 260:sieve_extend.c **** 
 6091              		.loc 1 260 9 is_stmt 1 view .LVU1979
 6092              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 6093              		.loc 1 260 30 is_stmt 0 view .LVU1980
 6094 2469 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp608
 6094      24800000 
 6094      00
 6095              	.L485:
 265:sieve_extend.c ****             index += step;
 6096              		.loc 1 265 13 is_stmt 1 view .LVU1981
 6097              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6098              		.loc 1 265 31 is_stmt 0 view .LVU1982
 6099 2472 C442E1F7 		shlx	r14, r10, rbx	# tmp610, tmp611, index
 6099      F2
 6100              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6101              		.loc 1 266 19 view .LVU1983
 6102 2477 4C01E3   		add	rbx, r12	# index, step
 6103              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6104              		.loc 1 265 28 view .LVU1984
 6105 247a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp610
 6105      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccG38KJh.s 			page 169


 6106              		.loc 1 266 13 is_stmt 1 view .LVU1985
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6107              		.loc 1 267 13 view .LVU1986
 6108              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6109              		.loc 1 267 20 is_stmt 0 view .LVU1987
 6110 2482 4989D9   		mov	r9, rbx	# tmp612, index
 6111              	.LVL320:
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6112              		.loc 1 267 20 view .LVU1988
 6113 2485 49C1E906 		shr	r9, 6	# tmp612,
 6114              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6115              		.loc 1 267 18 view .LVU1989
 6116 2489 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6117              		.loc 1 268 17 is_stmt 1 view .LVU1990
 6118              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6119              		.loc 1 268 9 is_stmt 0 view .LVU1991
 6120 248c 4983F903 		cmp	r9, 3	# word,
 6121 2490 0F87FA00 		ja	.L929	#,
 6121      0000
 265:sieve_extend.c ****             index += step;
 6122              		.loc 1 265 13 is_stmt 1 view .LVU1992
 6123              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6124              		.loc 1 265 31 is_stmt 0 view .LVU1993
 6125 2496 C442E1F7 		shlx	r14, r10, rbx	# tmp1081, tmp611, index
 6125      F2
 6126              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6127              		.loc 1 266 19 view .LVU1994
 6128 249b 4C01E3   		add	rbx, r12	# index, step
 6129              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6130              		.loc 1 265 28 view .LVU1995
 6131 249e 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1081
 6131      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6132              		.loc 1 266 13 is_stmt 1 view .LVU1996
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6133              		.loc 1 267 13 view .LVU1997
 6134              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6135              		.loc 1 267 20 is_stmt 0 view .LVU1998
 6136 24a6 4989D9   		mov	r9, rbx	# tmp1082, index
 6137 24a9 49C1E906 		shr	r9, 6	# tmp1082,
 6138              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6139              		.loc 1 267 18 view .LVU1999
 6140 24ad 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6141              		.loc 1 268 17 is_stmt 1 view .LVU2000
 6142              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6143              		.loc 1 268 9 is_stmt 0 view .LVU2001
GAS LISTING /tmp/ccG38KJh.s 			page 170


 6144 24b0 4983F903 		cmp	r9, 3	# word,
 6145 24b4 0F87D600 		ja	.L929	#,
 6145      0000
 265:sieve_extend.c ****             index += step;
 6146              		.loc 1 265 13 is_stmt 1 view .LVU2002
 6147              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6148              		.loc 1 265 31 is_stmt 0 view .LVU2003
 6149 24ba C442E1F7 		shlx	r14, r10, rbx	# tmp1084, tmp611, index
 6149      F2
 6150              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6151              		.loc 1 266 19 view .LVU2004
 6152 24bf 4C01E3   		add	rbx, r12	# index, step
 6153              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6154              		.loc 1 265 28 view .LVU2005
 6155 24c2 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1084
 6155      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6156              		.loc 1 266 13 is_stmt 1 view .LVU2006
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6157              		.loc 1 267 13 view .LVU2007
 6158              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6159              		.loc 1 267 20 is_stmt 0 view .LVU2008
 6160 24ca 4989D9   		mov	r9, rbx	# tmp1085, index
 6161 24cd 49C1E906 		shr	r9, 6	# tmp1085,
 6162              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6163              		.loc 1 267 18 view .LVU2009
 6164 24d1 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6165              		.loc 1 268 17 is_stmt 1 view .LVU2010
 6166              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6167              		.loc 1 268 9 is_stmt 0 view .LVU2011
 6168 24d4 4983F903 		cmp	r9, 3	# word,
 6169 24d8 0F87B200 		ja	.L929	#,
 6169      0000
 265:sieve_extend.c ****             index += step;
 6170              		.loc 1 265 13 is_stmt 1 view .LVU2012
 6171              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6172              		.loc 1 265 31 is_stmt 0 view .LVU2013
 6173 24de C442E1F7 		shlx	r14, r10, rbx	# tmp1087, tmp611, index
 6173      F2
 6174              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6175              		.loc 1 266 19 view .LVU2014
 6176 24e3 4C01E3   		add	rbx, r12	# index, step
 6177              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6178              		.loc 1 265 28 view .LVU2015
 6179 24e6 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1087
 6179      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccG38KJh.s 			page 171


 6180              		.loc 1 266 13 is_stmt 1 view .LVU2016
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6181              		.loc 1 267 13 view .LVU2017
 6182              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6183              		.loc 1 267 20 is_stmt 0 view .LVU2018
 6184 24ee 4989D9   		mov	r9, rbx	# tmp1088, index
 6185 24f1 49C1E906 		shr	r9, 6	# tmp1088,
 6186              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6187              		.loc 1 267 18 view .LVU2019
 6188 24f5 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6189              		.loc 1 268 17 is_stmt 1 view .LVU2020
 6190              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6191              		.loc 1 268 9 is_stmt 0 view .LVU2021
 6192 24f8 4983F903 		cmp	r9, 3	# word,
 6193 24fc 0F878E00 		ja	.L929	#,
 6193      0000
 265:sieve_extend.c ****             index += step;
 6194              		.loc 1 265 13 is_stmt 1 view .LVU2022
 6195              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6196              		.loc 1 265 31 is_stmt 0 view .LVU2023
 6197 2502 C442E1F7 		shlx	r14, r10, rbx	# tmp1090, tmp611, index
 6197      F2
 6198              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6199              		.loc 1 266 19 view .LVU2024
 6200 2507 4C01E3   		add	rbx, r12	# index, step
 6201              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6202              		.loc 1 265 28 view .LVU2025
 6203 250a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1090
 6203      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6204              		.loc 1 266 13 is_stmt 1 view .LVU2026
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6205              		.loc 1 267 13 view .LVU2027
 6206              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6207              		.loc 1 267 20 is_stmt 0 view .LVU2028
 6208 2512 4989D9   		mov	r9, rbx	# tmp1091, index
 6209 2515 49C1E906 		shr	r9, 6	# tmp1091,
 6210              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6211              		.loc 1 267 18 view .LVU2029
 6212 2519 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6213              		.loc 1 268 17 is_stmt 1 view .LVU2030
 6214              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6215              		.loc 1 268 9 is_stmt 0 view .LVU2031
 6216 251c 4983F903 		cmp	r9, 3	# word,
 6217 2520 776E     		ja	.L929	#,
 265:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccG38KJh.s 			page 172


 6218              		.loc 1 265 13 is_stmt 1 view .LVU2032
 6219              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6220              		.loc 1 265 31 is_stmt 0 view .LVU2033
 6221 2522 C442E1F7 		shlx	r14, r10, rbx	# tmp1093, tmp611, index
 6221      F2
 6222              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6223              		.loc 1 266 19 view .LVU2034
 6224 2527 4C01E3   		add	rbx, r12	# index, step
 6225              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6226              		.loc 1 265 28 view .LVU2035
 6227 252a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1093
 6227      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6228              		.loc 1 266 13 is_stmt 1 view .LVU2036
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6229              		.loc 1 267 13 view .LVU2037
 6230              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6231              		.loc 1 267 20 is_stmt 0 view .LVU2038
 6232 2532 4989D9   		mov	r9, rbx	# tmp1094, index
 6233 2535 49C1E906 		shr	r9, 6	# tmp1094,
 6234              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6235              		.loc 1 267 18 view .LVU2039
 6236 2539 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6237              		.loc 1 268 17 is_stmt 1 view .LVU2040
 6238              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6239              		.loc 1 268 9 is_stmt 0 view .LVU2041
 6240 253c 4983F903 		cmp	r9, 3	# word,
 6241 2540 774E     		ja	.L929	#,
 265:sieve_extend.c ****             index += step;
 6242              		.loc 1 265 13 is_stmt 1 view .LVU2042
 6243              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6244              		.loc 1 265 31 is_stmt 0 view .LVU2043
 6245 2542 C442E1F7 		shlx	r14, r10, rbx	# tmp1096, tmp611, index
 6245      F2
 6246              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6247              		.loc 1 266 19 view .LVU2044
 6248 2547 4C01E3   		add	rbx, r12	# index, step
 6249              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6250              		.loc 1 265 28 view .LVU2045
 6251 254a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1096
 6251      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6252              		.loc 1 266 13 is_stmt 1 view .LVU2046
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6253              		.loc 1 267 13 view .LVU2047
 6254              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccG38KJh.s 			page 173


 6255              		.loc 1 267 20 is_stmt 0 view .LVU2048
 6256 2552 4989D9   		mov	r9, rbx	# tmp1097, index
 6257 2555 49C1E906 		shr	r9, 6	# tmp1097,
 6258              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6259              		.loc 1 267 18 view .LVU2049
 6260 2559 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6261              		.loc 1 268 17 is_stmt 1 view .LVU2050
 6262              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6263              		.loc 1 268 9 is_stmt 0 view .LVU2051
 6264 255c 4983F903 		cmp	r9, 3	# word,
 6265 2560 772E     		ja	.L929	#,
 265:sieve_extend.c ****             index += step;
 6266              		.loc 1 265 13 is_stmt 1 view .LVU2052
 6267              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6268              		.loc 1 265 31 is_stmt 0 view .LVU2053
 6269 2562 C442E1F7 		shlx	r14, r10, rbx	# tmp1099, tmp611, index
 6269      F2
 6270              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6271              		.loc 1 266 19 view .LVU2054
 6272 2567 4C01E3   		add	rbx, r12	# index, step
 6273              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6274              		.loc 1 265 28 view .LVU2055
 6275 256a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1099
 6275      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6276              		.loc 1 266 13 is_stmt 1 view .LVU2056
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6277              		.loc 1 267 13 view .LVU2057
 6278              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6279              		.loc 1 267 20 is_stmt 0 view .LVU2058
 6280 2572 4989D9   		mov	r9, rbx	# tmp1100, index
 6281 2575 49C1E906 		shr	r9, 6	# tmp1100,
 6282              	.LVL321:
 6283              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6284              		.loc 1 267 18 view .LVU2059
 6285 2579 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 6286              	.LVL322:
 268:sieve_extend.c **** 
 6287              		.loc 1 268 17 is_stmt 1 view .LVU2060
 6288              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6289              		.loc 1 268 9 is_stmt 0 view .LVU2061
 6290 257c 4983F903 		cmp	r9, 3	# word,
 6291 2580 0F86ECFE 		jbe	.L485	#,
 6291      FFFF
 6292              	.LVL323:
 6293 2586 662E0F1F 		.p2align 4,,10
 6293      84000000 
 6293      0000
GAS LISTING /tmp/ccG38KJh.s 			page 174


 6294              		.p2align 3
 6295              	.L929:
 272:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 6296              		.loc 1 272 9 is_stmt 1 view .LVU2062
 273:sieve_extend.c ****     }
 6297              		.loc 1 273 9 view .LVU2063
 6298              	.LBB566:
 6299              	.LBB564:
 6300              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6301              		.loc 1 174 92 is_stmt 0 view .LVU2064
 6302 2590 48C1E005 		sal	rax, 5	# tmp613,
 6303              	.LVL324:
 6304              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6305              		.loc 1 174 81 view .LVU2065
 6306 2594 4C01F8   		add	rax, r15	# index_ptr, _101
 6307              	.LBE564:
 6308              	.LBE566:
 6309              	# sieve_extend.c:273:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 273:sieve_extend.c ****     }
 6310              		.loc 1 273 9 view .LVU2066
 6311 2597 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.94_219, quadmask
 6311      24800000 
 6311      00
 6312              	.LVL325:
 6313              	.LBB567:
 6314              	.LBI562:
 172:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 6315              		.loc 1 172 20 is_stmt 1 view .LVU2067
 6316              	.LBB565:
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 6317              		.loc 1 173 5 view .LVU2068
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6318              		.loc 1 174 5 view .LVU2069
 175:sieve_extend.c ****     
 6319              		.loc 1 175 5 view .LVU2070
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6320              		.loc 1 178 11 view .LVU2071
 6321 25a0 4839F8   		cmp	rax, rdi	# index_ptr, fast_loop_ptr
 6322 25a3 0F83CF00 		jnb	.L1080	#,
 6322      0000
 6323 25a9 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.601,
 6324              	.LVL326:
 6325              	.L487:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6326              		.loc 1 179 9 view .LVU2072
 6327              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6328              		.loc 1 179 20 is_stmt 0 view .LVU2073
 6329 25ad C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp614, quadmask.94_219, MEM[base: index_ptr_840, offset: 0B]
 6330 25b1 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_840, offset: 0B], tmp614
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6331              		.loc 1 179 29 is_stmt 1 view .LVU2074
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6332              		.loc 1 180 9 view .LVU2075
 6333              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 175


 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6334              		.loc 1 180 20 is_stmt 0 view .LVU2076
 6335 25b5 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp615, quadmask.94_219, MEM[base: index_ptr_840, index: 
 6335      10
 6336 25ba C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp615
 6336      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6337              		.loc 1 180 29 is_stmt 1 view .LVU2077
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6338              		.loc 1 181 9 view .LVU2078
 6339              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6340              		.loc 1 181 20 is_stmt 0 view .LVU2079
 6341 25bf C5FDEB26 		vpor	ymm4, ymm0, YMMWORD PTR [rsi]	# tmp616, quadmask.94_219, MEM[base: _1147, offset: 0B]
 6342 25c3 4801C8   		add	rax, rcx	# index_ptr, _1158
 6343 25c6 C5FD7F26 		vmovdqa	YMMWORD PTR [rsi], ymm4	# MEM[base: _1147, offset: 0B], tmp616
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6344              		.loc 1 181 29 is_stmt 1 view .LVU2080
 182:sieve_extend.c ****     }
 6345              		.loc 1 182 9 view .LVU2081
 6346              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6347              		.loc 1 182 20 is_stmt 0 view .LVU2082
 6348 25ca C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rsi+rdx]	# tmp617, quadmask.94_219, MEM[base: _1147, index: _301, of
 6348      16
 6349 25cf C5FD7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm5	# MEM[base: _1147, index: _301, offset: 0B], tmp617
 6349      16
 182:sieve_extend.c ****     }
 6350              		.loc 1 182 29 is_stmt 1 view .LVU2083
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6351              		.loc 1 178 11 view .LVU2084
 6352 25d4 4801CE   		add	rsi, rcx	# ivtmp.601, _1158
 6353 25d7 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6354 25da 0F869800 		jbe	.L1080	#,
 6354      0000
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6355              		.loc 1 179 9 view .LVU2085
 6356              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6357              		.loc 1 179 20 is_stmt 0 view .LVU2086
 6358 25e0 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp1067, quadmask.94_219, MEM[base: index_ptr_840, offset: 0B
 6359 25e4 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_840, offset: 0B], tmp1067
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6360              		.loc 1 179 29 is_stmt 1 view .LVU2087
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6361              		.loc 1 180 9 view .LVU2088
 6362              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6363              		.loc 1 180 20 is_stmt 0 view .LVU2089
 6364 25e8 C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp1068, quadmask.94_219, MEM[base: index_ptr_840, index:
 6364      10
 6365 25ed C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1068
 6365      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6366              		.loc 1 180 29 is_stmt 1 view .LVU2090
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6367              		.loc 1 181 9 view .LVU2091
GAS LISTING /tmp/ccG38KJh.s 			page 176


 6368              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6369              		.loc 1 181 20 is_stmt 0 view .LVU2092
 6370 25f2 C57DEB06 		vpor	ymm8, ymm0, YMMWORD PTR [rsi]	# tmp1069, quadmask.94_219, MEM[base: _1147, offset: 0B]
 6371 25f6 4801C8   		add	rax, rcx	# index_ptr, _1158
 6372 25f9 C57D7F06 		vmovdqa	YMMWORD PTR [rsi], ymm8	# MEM[base: _1147, offset: 0B], tmp1069
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6373              		.loc 1 181 29 is_stmt 1 view .LVU2093
 182:sieve_extend.c ****     }
 6374              		.loc 1 182 9 view .LVU2094
 6375              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6376              		.loc 1 182 20 is_stmt 0 view .LVU2095
 6377 25fd C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1070, quadmask.94_219, MEM[base: _1147, index: _301, o
 6377      16
 6378 2602 C57D7F0C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm9	# MEM[base: _1147, index: _301, offset: 0B], tmp1070
 6378      16
 182:sieve_extend.c ****     }
 6379              		.loc 1 182 29 is_stmt 1 view .LVU2096
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6380              		.loc 1 178 11 view .LVU2097
 6381 2607 4801CE   		add	rsi, rcx	# ivtmp.601, _1158
 6382 260a 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6383 260d 7669     		jbe	.L1080	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6384              		.loc 1 179 9 view .LVU2098
 6385              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6386              		.loc 1 179 20 is_stmt 0 view .LVU2099
 6387 260f C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp1072, quadmask.94_219, MEM[base: index_ptr_840, offset: 0
 6388 2613 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_840, offset: 0B], tmp1072
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6389              		.loc 1 179 29 is_stmt 1 view .LVU2100
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6390              		.loc 1 180 9 view .LVU2101
 6391              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6392              		.loc 1 180 20 is_stmt 0 view .LVU2102
 6393 2617 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp1073, quadmask.94_219, MEM[base: index_ptr_840, index
 6393      10
 6394 261c C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1073
 6394      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6395              		.loc 1 180 29 is_stmt 1 view .LVU2103
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6396              		.loc 1 181 9 view .LVU2104
 6397              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6398              		.loc 1 181 20 is_stmt 0 view .LVU2105
 6399 2621 C57DEB26 		vpor	ymm12, ymm0, YMMWORD PTR [rsi]	# tmp1074, quadmask.94_219, MEM[base: _1147, offset: 0B]
 6400 2625 4801C8   		add	rax, rcx	# index_ptr, _1158
 6401 2628 C57D7F26 		vmovdqa	YMMWORD PTR [rsi], ymm12	# MEM[base: _1147, offset: 0B], tmp1074
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6402              		.loc 1 181 29 is_stmt 1 view .LVU2106
 182:sieve_extend.c ****     }
 6403              		.loc 1 182 9 view .LVU2107
 6404              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 177


 182:sieve_extend.c ****     }
 6405              		.loc 1 182 20 is_stmt 0 view .LVU2108
 6406 262c C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1075, quadmask.94_219, MEM[base: _1147, index: _301, 
 6406      16
 6407 2631 C57D7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm13	# MEM[base: _1147, index: _301, offset: 0B], tmp1075
 6407      16
 182:sieve_extend.c ****     }
 6408              		.loc 1 182 29 is_stmt 1 view .LVU2109
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6409              		.loc 1 178 11 view .LVU2110
 6410 2636 4801CE   		add	rsi, rcx	# ivtmp.601, _1158
 6411 2639 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6412 263c 763A     		jbe	.L1080	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6413              		.loc 1 179 9 view .LVU2111
 6414              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6415              		.loc 1 179 20 is_stmt 0 view .LVU2112
 6416 263e C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp1077, quadmask.94_219, MEM[base: index_ptr_840, offset: 0
 6417 2642 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_840, offset: 0B], tmp1077
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6418              		.loc 1 179 29 is_stmt 1 view .LVU2113
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6419              		.loc 1 180 9 view .LVU2114
 6420              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6421              		.loc 1 180 20 is_stmt 0 view .LVU2115
 6422 2646 C57DEB3C 		vpor	ymm15, ymm0, YMMWORD PTR [rax+rdx]	# tmp1078, quadmask.94_219, MEM[base: index_ptr_840, index
 6422      10
 6423 264b C57D7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm15	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1078
 6423      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6424              		.loc 1 180 29 is_stmt 1 view .LVU2116
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6425              		.loc 1 181 9 view .LVU2117
 6426              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6427              		.loc 1 181 20 is_stmt 0 view .LVU2118
 6428 2650 C5FDEB0E 		vpor	ymm1, ymm0, YMMWORD PTR [rsi]	# tmp1079, quadmask.94_219, MEM[base: _1147, offset: 0B]
 6429 2654 4801C8   		add	rax, rcx	# index_ptr, _1158
 6430 2657 C5FD7F0E 		vmovdqa	YMMWORD PTR [rsi], ymm1	# MEM[base: _1147, offset: 0B], tmp1079
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6431              		.loc 1 181 29 is_stmt 1 view .LVU2119
 182:sieve_extend.c ****     }
 6432              		.loc 1 182 9 view .LVU2120
 6433              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6434              		.loc 1 182 20 is_stmt 0 view .LVU2121
 6435 265b C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1080, quadmask.94_219, MEM[base: _1147, index: _301, o
 6435      16
 6436 2660 C5FD7F1C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm3	# MEM[base: _1147, index: _301, offset: 0B], tmp1080
 6436      16
 182:sieve_extend.c ****     }
 6437              		.loc 1 182 29 is_stmt 1 view .LVU2122
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6438              		.loc 1 178 11 view .LVU2123
 6439 2665 4801CE   		add	rsi, rcx	# ivtmp.601, _1158
GAS LISTING /tmp/ccG38KJh.s 			page 178


 6440 2668 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6441 266b 0F873CFF 		ja	.L487	#,
 6441      FFFF
 6442              		.p2align 4,,10
 6443 2671 0F1F8000 		.p2align 3
 6443      000000
 6444              	.L1080:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6445              		.loc 1 186 11 view .LVU2124
 6446 2678 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6447 267b 0F878700 		ja	.L490	#,
 6447      0000
 6448              	.L488:
 187:sieve_extend.c ****     }
 6449              		.loc 1 187 9 view .LVU2125
 6450              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6451              		.loc 1 187 20 is_stmt 0 view .LVU2126
 6452 2681 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp618, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B]
 6453 2685 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_173, offset: 0B], tmp618
 187:sieve_extend.c ****     }
 6454              		.loc 1 187 29 is_stmt 1 view .LVU2127
 6455              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6456              		.loc 1 187 38 is_stmt 0 view .LVU2128
 6457 2689 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6458              		.loc 1 186 11 is_stmt 1 view .LVU2129
 6459 268c 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6460 268f 7777     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6461              		.loc 1 187 9 view .LVU2130
 6462              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6463              		.loc 1 187 20 is_stmt 0 view .LVU2131
 6464 2691 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp1054, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B
 6465 2695 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_173, offset: 0B], tmp1054
 187:sieve_extend.c ****     }
 6466              		.loc 1 187 29 is_stmt 1 view .LVU2132
 6467              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6468              		.loc 1 187 38 is_stmt 0 view .LVU2133
 6469 2699 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6470              		.loc 1 186 11 is_stmt 1 view .LVU2134
 6471 269c 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6472 269f 7767     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6473              		.loc 1 187 9 view .LVU2135
 6474              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6475              		.loc 1 187 20 is_stmt 0 view .LVU2136
 6476 26a1 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp1056, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B
 6477 26a5 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_173, offset: 0B], tmp1056
 187:sieve_extend.c ****     }
 6478              		.loc 1 187 29 is_stmt 1 view .LVU2137
 6479              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 179


 187:sieve_extend.c ****     }
 6480              		.loc 1 187 38 is_stmt 0 view .LVU2138
 6481 26a9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6482              		.loc 1 186 11 is_stmt 1 view .LVU2139
 6483 26ac 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6484 26af 7757     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6485              		.loc 1 187 9 view .LVU2140
 6486              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6487              		.loc 1 187 20 is_stmt 0 view .LVU2141
 6488 26b1 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp1058, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B
 6489 26b5 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_173, offset: 0B], tmp1058
 187:sieve_extend.c ****     }
 6490              		.loc 1 187 29 is_stmt 1 view .LVU2142
 6491              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6492              		.loc 1 187 38 is_stmt 0 view .LVU2143
 6493 26b9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6494              		.loc 1 186 11 is_stmt 1 view .LVU2144
 6495 26bc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6496 26bf 7747     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6497              		.loc 1 187 9 view .LVU2145
 6498              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6499              		.loc 1 187 20 is_stmt 0 view .LVU2146
 6500 26c1 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp1060, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B
 6501 26c5 C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: index_ptr_173, offset: 0B], tmp1060
 187:sieve_extend.c ****     }
 6502              		.loc 1 187 29 is_stmt 1 view .LVU2147
 6503              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6504              		.loc 1 187 38 is_stmt 0 view .LVU2148
 6505 26c9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6506              		.loc 1 186 11 is_stmt 1 view .LVU2149
 6507 26cc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6508 26cf 7737     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6509              		.loc 1 187 9 view .LVU2150
 6510              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6511              		.loc 1 187 20 is_stmt 0 view .LVU2151
 6512 26d1 C57DEB08 		vpor	ymm9, ymm0, YMMWORD PTR [rax]	# tmp1062, quadmask.94_219, MEM[base: index_ptr_173, offset: 0B
 6513 26d5 C57D7F08 		vmovdqa	YMMWORD PTR [rax], ymm9	# MEM[base: index_ptr_173, offset: 0B], tmp1062
 187:sieve_extend.c ****     }
 6514              		.loc 1 187 29 is_stmt 1 view .LVU2152
 6515              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6516              		.loc 1 187 38 is_stmt 0 view .LVU2153
 6517 26d9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6518              		.loc 1 186 11 is_stmt 1 view .LVU2154
 6519 26dc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
GAS LISTING /tmp/ccG38KJh.s 			page 180


 6520 26df 7727     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6521              		.loc 1 187 9 view .LVU2155
 6522              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6523              		.loc 1 187 20 is_stmt 0 view .LVU2156
 6524 26e1 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp1064, quadmask.94_219, MEM[base: index_ptr_173, offset: 0
 6525 26e5 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_173, offset: 0B], tmp1064
 187:sieve_extend.c ****     }
 6526              		.loc 1 187 29 is_stmt 1 view .LVU2157
 6527              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6528              		.loc 1 187 38 is_stmt 0 view .LVU2158
 6529 26e9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6530              		.loc 1 186 11 is_stmt 1 view .LVU2159
 6531 26ec 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6532 26ef 7717     		ja	.L490	#,
 187:sieve_extend.c ****     }
 6533              		.loc 1 187 9 view .LVU2160
 6534              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6535              		.loc 1 187 20 is_stmt 0 view .LVU2161
 6536 26f1 C57DEB18 		vpor	ymm11, ymm0, YMMWORD PTR [rax]	# tmp1066, quadmask.94_219, MEM[base: index_ptr_173, offset: 0
 6537 26f5 C57D7F18 		vmovdqa	YMMWORD PTR [rax], ymm11	# MEM[base: index_ptr_173, offset: 0B], tmp1066
 187:sieve_extend.c ****     }
 6538              		.loc 1 187 29 is_stmt 1 view .LVU2162
 6539              	.LVL327:
 6540              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6541              		.loc 1 187 38 is_stmt 0 view .LVU2163
 6542 26f9 4801D0   		add	rax, rdx	# index_ptr, _301
 6543              	.LVL328:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6544              		.loc 1 186 11 is_stmt 1 view .LVU2164
 6545 26fc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6546 26ff 7680     		jbe	.L488	#,
 6547              	.LVL329:
 6548              		.p2align 4,,10
 6549 2701 0F1F8000 		.p2align 3
 6549      000000
 6550              	.L490:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6551              		.loc 1 186 11 is_stmt 0 view .LVU2165
 6552              	.LBE565:
 6553              	.LBE567:
 6554              	.LBE561:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6555              		.loc 1 256 41 is_stmt 1 view .LVU2166
 6556              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6557              		.loc 1 256 5 is_stmt 0 view .LVU2167
 6558 2708 4939DB   		cmp	r11, rbx	# range_stop_unique, index
 6559 270b 0F873FFD 		ja	.L489	#,
 6559      FFFF
 6560 2711 4C8B7424 		mov	r14, QWORD PTR 72[rsp]	# patternsize_bits, %sfp
 6560      48
GAS LISTING /tmp/ccG38KJh.s 			page 181


 6561 2716 4C8B6C24 		mov	r13, QWORD PTR 64[rsp]	# index, %sfp
 6561      40
 6562              	.LVL330:
 6563              	.L462:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6564              		.loc 1 256 5 view .LVU2168
 6565              	.LBE560:
 6566              	.LBE559:
 6567              	.LBE558:
 6568              	.LBE619:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 6569              		.loc 1 476 11 is_stmt 1 view .LVU2169
 6570              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 6571              		.loc 1 476 5 is_stmt 0 view .LVU2170
 6572 271b 488B5C24 		mov	rbx, QWORD PTR 112[rsp]	# _2, %sfp
 6572      70
 6573 2720 48395C24 		cmp	QWORD PTR 120[rsp], rbx	# %sfp, _2
 6573      78
 6574 2725 0F83F602 		jnb	.L1086	#,
 6574      0000
 6575              	.LVL331:
 6576              	.L461:
 6577              	.LBB620:
 477:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 6578              		.loc 1 477 9 is_stmt 1 view .LVU2171
 6579              	.LBB584:
 6580              	.LBI552:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 6581              		.loc 1 121 25 view .LVU2172
 6582              	.LBB554:
 122:sieve_extend.c ****     return index;
 6583              		.loc 1 122 5 view .LVU2173
 122:sieve_extend.c ****     return index;
 6584              		.loc 1 122 11 view .LVU2174
 6585              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6586              		.loc 1 122 23 is_stmt 0 view .LVU2175
 6587 272b 4D89EC   		mov	r12, r13	# tmp525, index
 6588 272e 49C1EC06 		shr	r12, 6	# tmp525,
 6589              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6590              		.loc 1 122 12 view .LVU2176
 6591 2732 4F8B1CE7 		mov	r11, QWORD PTR [r15+r12*8]	# *_873,* _101
 6592              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6593              		.loc 1 122 11 view .LVU2177
 6594 2736 4D0FA3EB 		bt	r11, r13	# *_873, index
 6595 273a 0F83A800 		jnc	.L448	#,
 6595      0000
 122:sieve_extend.c ****     return index;
 6596              		.loc 1 122 60 is_stmt 1 view .LVU2178
 6597              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6598              		.loc 1 122 65 is_stmt 0 view .LVU2179
 6599 2740 498D7D01 		lea	rdi, 1[r13]	# tmp760,
 6600              	.LVL332:
GAS LISTING /tmp/ccG38KJh.s 			page 182


 6601              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6602              		.loc 1 122 23 view .LVU2180
 6603 2744 4889F9   		mov	rcx, rdi	# tmp530, index
 6604 2747 48C1E906 		shr	rcx, 6	# tmp530,
 6605              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6606              		.loc 1 122 12 view .LVU2181
 6607 274b 4D8B04CF 		mov	r8, QWORD PTR [r15+rcx*8]	# *_50, *_50
 6608              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6609              		.loc 1 122 65 view .LVU2182
 6610 274f 4989FD   		mov	r13, rdi	# index, tmp760
 122:sieve_extend.c ****     return index;
 6611              		.loc 1 122 11 is_stmt 1 view .LVU2183
 6612 2752 490FA3F8 		bt	r8, rdi	# *_50, index
 6613 2756 0F838C00 		jnc	.L448	#,
 6613      0000
 122:sieve_extend.c ****     return index;
 6614              		.loc 1 122 60 view .LVU2184
 6615              	.LVL333:
 6616              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6617              		.loc 1 122 65 is_stmt 0 view .LVU2185
 6618 275c 49FFC5   		inc	r13	# index
 6619              	.LVL334:
 122:sieve_extend.c ****     return index;
 6620              		.loc 1 122 11 is_stmt 1 view .LVU2186
 6621              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6622              		.loc 1 122 23 is_stmt 0 view .LVU2187
 6623 275f 4D89EA   		mov	r10, r13	# tmp952, index
 6624 2762 49C1EA06 		shr	r10, 6	# tmp952,
 6625              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6626              		.loc 1 122 12 view .LVU2188
 6627 2766 4B8B14D7 		mov	rdx, QWORD PTR [r15+r10*8]	# *_50, *_50
 6628              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6629              		.loc 1 122 11 view .LVU2189
 6630 276a 4C0FA3EA 		bt	rdx, r13	# *_50, index
 6631 276e 7378     		jnc	.L448	#,
 122:sieve_extend.c ****     return index;
 6632              		.loc 1 122 60 is_stmt 1 view .LVU2190
 6633              	.LVL335:
 6634              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6635              		.loc 1 122 65 is_stmt 0 view .LVU2191
 6636 2770 4C8D6F02 		lea	r13, 2[rdi]	# index,
 6637              	.LVL336:
 122:sieve_extend.c ****     return index;
 6638              		.loc 1 122 11 is_stmt 1 view .LVU2192
 6639              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6640              		.loc 1 122 23 is_stmt 0 view .LVU2193
 6641 2774 4C89E8   		mov	rax, r13	# tmp956, index
 6642 2777 48C1E806 		shr	rax, 6	# tmp956,
GAS LISTING /tmp/ccG38KJh.s 			page 183


 6643              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6644              		.loc 1 122 12 view .LVU2194
 6645 277b 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_50, *_50
 6646              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6647              		.loc 1 122 11 view .LVU2195
 6648 277f 4C0FA3EE 		bt	rsi, r13	# *_50, index
 6649 2783 7363     		jnc	.L448	#,
 122:sieve_extend.c ****     return index;
 6650              		.loc 1 122 60 is_stmt 1 view .LVU2196
 6651              	.LVL337:
 6652              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6653              		.loc 1 122 65 is_stmt 0 view .LVU2197
 6654 2785 4C8D6F03 		lea	r13, 3[rdi]	# index,
 6655              	.LVL338:
 122:sieve_extend.c ****     return index;
 6656              		.loc 1 122 11 is_stmt 1 view .LVU2198
 6657              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6658              		.loc 1 122 23 is_stmt 0 view .LVU2199
 6659 2789 4D89E9   		mov	r9, r13	# tmp960, index
 6660 278c 49C1E906 		shr	r9, 6	# tmp960,
 6661              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6662              		.loc 1 122 12 view .LVU2200
 6663 2790 4B8B1CCF 		mov	rbx, QWORD PTR [r15+r9*8]	# *_50, *_50
 6664              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6665              		.loc 1 122 11 view .LVU2201
 6666 2794 4C0FA3EB 		bt	rbx, r13	# *_50, index
 6667 2798 734E     		jnc	.L448	#,
 122:sieve_extend.c ****     return index;
 6668              		.loc 1 122 60 is_stmt 1 view .LVU2202
 6669              	.LVL339:
 6670              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6671              		.loc 1 122 65 is_stmt 0 view .LVU2203
 6672 279a 4C8D6F04 		lea	r13, 4[rdi]	# index,
 6673              	.LVL340:
 122:sieve_extend.c ****     return index;
 6674              		.loc 1 122 11 is_stmt 1 view .LVU2204
 6675              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6676              		.loc 1 122 23 is_stmt 0 view .LVU2205
 6677 279e 4D89EC   		mov	r12, r13	# tmp964, index
 6678 27a1 49C1EC06 		shr	r12, 6	# tmp964,
 6679              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6680              		.loc 1 122 12 view .LVU2206
 6681 27a5 4F8B1CE7 		mov	r11, QWORD PTR [r15+r12*8]	# *_50, *_50
 6682              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6683              		.loc 1 122 11 view .LVU2207
 6684 27a9 4D0FA3EB 		bt	r11, r13	# *_50, index
 6685 27ad 7339     		jnc	.L448	#,
GAS LISTING /tmp/ccG38KJh.s 			page 184


 122:sieve_extend.c ****     return index;
 6686              		.loc 1 122 60 is_stmt 1 view .LVU2208
 6687              	.LVL341:
 6688              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6689              		.loc 1 122 65 is_stmt 0 view .LVU2209
 6690 27af 4C8D6F05 		lea	r13, 5[rdi]	# index,
 6691              	.LVL342:
 122:sieve_extend.c ****     return index;
 6692              		.loc 1 122 11 is_stmt 1 view .LVU2210
 6693              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6694              		.loc 1 122 23 is_stmt 0 view .LVU2211
 6695 27b3 4C89E9   		mov	rcx, r13	# tmp968, index
 6696 27b6 48C1E906 		shr	rcx, 6	# tmp968,
 6697              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6698              		.loc 1 122 12 view .LVU2212
 6699 27ba 4D8B04CF 		mov	r8, QWORD PTR [r15+rcx*8]	# *_50, *_50
 6700              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6701              		.loc 1 122 11 view .LVU2213
 6702 27be 4D0FA3E8 		bt	r8, r13	# *_50, index
 6703 27c2 7324     		jnc	.L448	#,
 122:sieve_extend.c ****     return index;
 6704              		.loc 1 122 60 is_stmt 1 view .LVU2214
 6705              	.LVL343:
 6706              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6707              		.loc 1 122 65 is_stmt 0 view .LVU2215
 6708 27c4 4C8D6F06 		lea	r13, 6[rdi]	# index,
 6709              	.LVL344:
 122:sieve_extend.c ****     return index;
 6710              		.loc 1 122 11 is_stmt 1 view .LVU2216
 6711              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6712              		.loc 1 122 23 is_stmt 0 view .LVU2217
 6713 27c8 4D89EA   		mov	r10, r13	# tmp972, index
 6714 27cb 49C1EA06 		shr	r10, 6	# tmp972,
 6715              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6716              		.loc 1 122 12 view .LVU2218
 6717 27cf 4B8B14D7 		mov	rdx, QWORD PTR [r15+r10*8]	# *_50, *_50
 6718              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6719              		.loc 1 122 11 view .LVU2219
 6720 27d3 4C0FA3EA 		bt	rdx, r13	# *_50, index
 6721 27d7 730F     		jnc	.L448	#,
 122:sieve_extend.c ****     return index;
 6722              		.loc 1 122 60 is_stmt 1 view .LVU2220
 6723              	.LVL345:
 6724              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6725              		.loc 1 122 65 is_stmt 0 view .LVU2221
 6726 27d9 4C8D6F07 		lea	r13, 7[rdi]	# index,
 6727              	.LVL346:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccG38KJh.s 			page 185


 6728              		.loc 1 122 11 is_stmt 1 view .LVU2222
 6729 27dd E949FFFF 		jmp	.L461	#
 6729      FF
 6730              	.LVL347:
 6731              		.p2align 4,,10
 6732 27e2 660F1F44 		.p2align 3
 6732      0000
 6733              	.L448:
 122:sieve_extend.c ****     return index;
 6734              		.loc 1 122 11 is_stmt 0 view .LVU2223
 6735              	.LBE554:
 6736              	.LBE584:
 6737              	.LBE620:
 6738              	.LBE626:
 6739              	.LBE632:
 6740              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6741              		.loc 1 506 88 view .LVU2224
 6742 27e8 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# pattern_start, %sfp
 6742      50
 6743 27ed 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 6743      60
 6744 27f2 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	# prime, %sfp
 6744      68
 6745 27f7 4C89F0   		mov	rax, r14	# block$pattern_size, patternsize_bits
 6746 27fa 48897C24 		mov	QWORD PTR 96[rsp], rdi	# %sfp, pattern_start
 6746      60
 6747              	.LVL348:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6748              		.loc 1 506 88 view .LVU2225
 6749 27ff 4C896C24 		mov	QWORD PTR 104[rsp], r13	# %sfp, index
 6749      68
 6750              	.LVL349:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6751              		.loc 1 506 88 view .LVU2226
 6752 2804 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# patternsize_bits, %sfp
 6752      58
 6753              	.LVL350:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6754              		.loc 1 506 88 view .LVU2227
 6755 2809 4C89EE   		mov	rsi, r13	# index, index
 6756 280c E9FFF9FF 		jmp	.L446	#
 6756      FF
 6757              	.LVL351:
 6758              		.p2align 4,,10
 6759 2811 0F1F8000 		.p2align 3
 6759      000000
 6760              	.L472:
 6761              	.LBB633:
 6762              	.LBB627:
 6763              	.LBB621:
 497:sieve_extend.c ****         block.prime = prime;
 6764              		.loc 1 497 44 is_stmt 1 view .LVU2228
 6765              	.LBB585:
 6766              	.LBI585:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 6767              		.loc 1 221 20 view .LVU2229
GAS LISTING /tmp/ccG38KJh.s 			page 186


 6768              	.LBB586:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 6769              		.loc 1 222 5 view .LVU2230
 223:sieve_extend.c **** 
 6770              		.loc 1 223 5 view .LVU2231
 6771              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 6772              		.loc 1 223 74 is_stmt 0 view .LVU2232
 6773 2818 4D89E2   		mov	r10, r12	# tmp619, step
 6774 281b 49C1E206 		sal	r10, 6	# tmp619,
 6775              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 6776              		.loc 1 223 21 view .LVU2233
 6777 281f 4901DA   		add	r10, rbx	# range_stop_unique, index
 6778              	.LVL352:
 6779              	.LBB587:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6780              		.loc 1 226 10 is_stmt 1 view .LVU2234
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6781              		.loc 1 226 50 view .LVU2235
 6782              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6783              		.loc 1 226 5 is_stmt 0 view .LVU2236
 6784 2822 4C39D3   		cmp	rbx, r10	# index, range_stop_unique
 6785 2825 0F83F0FE 		jnb	.L462	#,
 6785      FFFF
 6786              	.LBB588:
 6787              	.LBB589:
 6788              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6789              		.loc 1 147 20 view .LVU2237
 6790 282b 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# _70, %sfp
 6790      78
 6791              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6792              		.loc 1 149 112 view .LVU2238
 6793 2830 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp622,
 6794              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6795              		.loc 1 147 20 view .LVU2239
 6796 2834 4989CB   		mov	r11, rcx	# range_stop_word, _70
 6797 2837 49C1EB06 		shr	r11, 6	# range_stop_word,
 6798              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6799              		.loc 1 149 135 view .LVU2240
 6800 283b 4D89D9   		mov	r9, r11	# tmp628, range_stop_word
 6801              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6802              		.loc 1 167 29 view .LVU2241
 6803 283e 89C8     		mov	eax, ecx	# tmp623, _70
 6804              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6805              		.loc 1 149 135 view .LVU2242
 6806 2840 4929F9   		sub	r9, rdi	# tmp628, tmp622
 6807              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6808              		.loc 1 167 29 view .LVU2243
GAS LISTING /tmp/ccG38KJh.s 			page 187


 6809 2843 F7D0     		not	eax	# tmp623
 6810 2845 48C7C6FF 		mov	rsi, -1	# tmp1562,
 6810      FFFFFF
 6811              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6812              		.loc 1 149 53 view .LVU2244
 6813 284c 4939FB   		cmp	r11, rdi	# range_stop_word, tmp622
 6814              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6815              		.loc 1 167 29 view .LVU2245
 6816 284f C462FBF7 		shrx	r8, rsi, rax	# _380, tmp1562, tmp623
 6816      C6
 6817              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6818              		.loc 1 149 53 view .LVU2246
 6819 2854 4F8D0CCF 		lea	r9, [r15+r9*8]	# tmp630,
 6820              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6821              		.loc 1 167 29 view .LVU2247
 6822 2858 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _380
 6822      48
 6823              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 6824              		.loc 1 161 83 view .LVU2248
 6825 285d 4F8D04DF 		lea	r8, [r15+r11*8]	# _365,
 6826 2861 4D89E3   		mov	r11, r12	# _1133, step
 6827              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6828              		.loc 1 149 53 view .LVU2249
 6829 2864 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 6830              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6831              		.loc 1 154 38 view .LVU2250
 6832 2868 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _347,
 6832      00000000 
 6833 2870 48C1E703 		sal	rdi, 3	# tmp634,
 6834 2874 49C1E304 		sal	r11, 4	# _1133,
 6835 2878 0F1F8400 		.p2align 4,,10
 6835      00000000 
 6836              		.p2align 3
 6837              	.L496:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6838              		.loc 1 154 38 view .LVU2251
 6839              	.LBE589:
 6840              	.LBE588:
 227:sieve_extend.c ****     }
 6841              		.loc 1 227 9 is_stmt 1 view .LVU2252
 6842 2880 4889D8   		mov	rax, rbx	# tmp637, index
 6843 2883 48C1E806 		shr	rax, 6	# tmp637,
 6844 2887 B9010000 		mov	ecx, 1	# tmp1565,
 6844      00
 6845              	.LBB593:
 6846              	.LBB590:
 6847              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 6848              		.loc 1 148 78 is_stmt 0 view .LVU2253
 6849 288c 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
GAS LISTING /tmp/ccG38KJh.s 			page 188


 6850              	.LBE590:
 6851              	.LBE593:
 6852              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 6853              		.loc 1 227 9 view .LVU2254
 6854 2890 C4E2E1F7 		shlx	rcx, rcx, rbx	# _332, tmp1565, index
 6854      C9
 6855              	.LVL353:
 6856              	.LBB594:
 6857              	.LBI588:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 6858              		.loc 1 146 20 is_stmt 1 view .LVU2255
 6859              	.LBB591:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6860              		.loc 1 147 4 view .LVU2256
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 6861              		.loc 1 148 4 view .LVU2257
 149:sieve_extend.c **** 
 6862              		.loc 1 149 4 view .LVU2258
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6863              		.loc 1 153 10 view .LVU2259
 6864 2895 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 6865 2898 0F830201 		jnb	.L491	#,
 6865      0000
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6866              		.loc 1 153 10 is_stmt 0 view .LVU2260
 6867 289e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.628,
 6868              	.L492:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6869              		.loc 1 154 8 is_stmt 1 view .LVU2261
 6870              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6871              		.loc 1 154 19 is_stmt 0 view .LVU2262
 6872 28a2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6873              		.loc 1 154 29 is_stmt 1 view .LVU2263
 6874              	.LVL354:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6875              		.loc 1 155 8 view .LVU2264
 6876              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6877              		.loc 1 155 19 is_stmt 0 view .LVU2265
 6878 28a5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6879              		.loc 1 155 29 is_stmt 1 view .LVU2266
 6880              	.LVL355:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6881              		.loc 1 156 8 view .LVU2267
 6882              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6883              		.loc 1 156 19 is_stmt 0 view .LVU2268
 6884 28a9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6885              		.loc 1 156 29 is_stmt 1 view .LVU2269
 6886              	.LVL356:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6887              		.loc 1 157 8 view .LVU2270
GAS LISTING /tmp/ccG38KJh.s 			page 189


 6888              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6889              		.loc 1 157 19 is_stmt 0 view .LVU2271
 6890 28ac 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6891              		.loc 1 157 29 is_stmt 1 view .LVU2272
 6892              	.LVL357:
 158:sieve_extend.c ****    }
 6893              		.loc 1 158 8 view .LVU2273
 6894 28b0 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 6895              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6896              		.loc 1 158 19 is_stmt 0 view .LVU2274
 6897 28b3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6898              		.loc 1 158 29 is_stmt 1 view .LVU2275
 6899 28b7 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6900              	.LVL358:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6901              		.loc 1 153 10 view .LVU2276
 6902 28ba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6903 28bd 0F86DD00 		jbe	.L491	#,
 6903      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6904              		.loc 1 154 8 view .LVU2277
 6905              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6906              		.loc 1 154 19 is_stmt 0 view .LVU2278
 6907 28c3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6908              		.loc 1 154 29 is_stmt 1 view .LVU2279
 6909              	.LVL359:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6910              		.loc 1 155 8 view .LVU2280
 6911              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6912              		.loc 1 155 19 is_stmt 0 view .LVU2281
 6913 28c6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6914              		.loc 1 155 29 is_stmt 1 view .LVU2282
 6915              	.LVL360:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6916              		.loc 1 156 8 view .LVU2283
 6917              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6918              		.loc 1 156 19 is_stmt 0 view .LVU2284
 6919 28ca 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6920              		.loc 1 156 29 is_stmt 1 view .LVU2285
 6921              	.LVL361:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6922              		.loc 1 157 8 view .LVU2286
 6923              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6924              		.loc 1 157 19 is_stmt 0 view .LVU2287
 6925 28cd 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 190


 6926              		.loc 1 157 29 is_stmt 1 view .LVU2288
 6927              	.LVL362:
 158:sieve_extend.c ****    }
 6928              		.loc 1 158 8 view .LVU2289
 6929 28d1 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 6930              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6931              		.loc 1 158 19 is_stmt 0 view .LVU2290
 6932 28d4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6933              		.loc 1 158 29 is_stmt 1 view .LVU2291
 6934 28d8 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6935              	.LVL363:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6936              		.loc 1 153 10 view .LVU2292
 6937 28db 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6938 28de 0F86BC00 		jbe	.L491	#,
 6938      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6939              		.loc 1 154 8 view .LVU2293
 6940              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6941              		.loc 1 154 19 is_stmt 0 view .LVU2294
 6942 28e4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6943              		.loc 1 154 29 is_stmt 1 view .LVU2295
 6944              	.LVL364:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6945              		.loc 1 155 8 view .LVU2296
 6946              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6947              		.loc 1 155 19 is_stmt 0 view .LVU2297
 6948 28e7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6949              		.loc 1 155 29 is_stmt 1 view .LVU2298
 6950              	.LVL365:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6951              		.loc 1 156 8 view .LVU2299
 6952              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6953              		.loc 1 156 19 is_stmt 0 view .LVU2300
 6954 28eb 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6955              		.loc 1 156 29 is_stmt 1 view .LVU2301
 6956              	.LVL366:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6957              		.loc 1 157 8 view .LVU2302
 6958              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6959              		.loc 1 157 19 is_stmt 0 view .LVU2303
 6960 28ee 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6961              		.loc 1 157 29 is_stmt 1 view .LVU2304
 6962              	.LVL367:
 158:sieve_extend.c ****    }
 6963              		.loc 1 158 8 view .LVU2305
 6964 28f2 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
GAS LISTING /tmp/ccG38KJh.s 			page 191


 6965              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6966              		.loc 1 158 19 is_stmt 0 view .LVU2306
 6967 28f5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6968              		.loc 1 158 29 is_stmt 1 view .LVU2307
 6969 28f9 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6970              	.LVL368:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6971              		.loc 1 153 10 view .LVU2308
 6972 28fc 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6973 28ff 0F869B00 		jbe	.L491	#,
 6973      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6974              		.loc 1 154 8 view .LVU2309
 6975              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6976              		.loc 1 154 19 is_stmt 0 view .LVU2310
 6977 2905 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6978              		.loc 1 154 29 is_stmt 1 view .LVU2311
 6979              	.LVL369:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6980              		.loc 1 155 8 view .LVU2312
 6981              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6982              		.loc 1 155 19 is_stmt 0 view .LVU2313
 6983 2908 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6984              		.loc 1 155 29 is_stmt 1 view .LVU2314
 6985              	.LVL370:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6986              		.loc 1 156 8 view .LVU2315
 6987              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6988              		.loc 1 156 19 is_stmt 0 view .LVU2316
 6989 290c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6990              		.loc 1 156 29 is_stmt 1 view .LVU2317
 6991              	.LVL371:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6992              		.loc 1 157 8 view .LVU2318
 6993              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6994              		.loc 1 157 19 is_stmt 0 view .LVU2319
 6995 290f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6996              		.loc 1 157 29 is_stmt 1 view .LVU2320
 6997              	.LVL372:
 158:sieve_extend.c ****    }
 6998              		.loc 1 158 8 view .LVU2321
 6999 2913 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 7000              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7001              		.loc 1 158 19 is_stmt 0 view .LVU2322
 7002 2916 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 192


 7003              		.loc 1 158 29 is_stmt 1 view .LVU2323
 7004 291a 4801F8   		add	rax, rdi	# index_ptr, tmp634
 7005              	.LVL373:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7006              		.loc 1 153 10 view .LVU2324
 7007 291d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7008 2920 767E     		jbe	.L491	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7009              		.loc 1 154 8 view .LVU2325
 7010              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7011              		.loc 1 154 19 is_stmt 0 view .LVU2326
 7012 2922 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7013              		.loc 1 154 29 is_stmt 1 view .LVU2327
 7014              	.LVL374:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7015              		.loc 1 155 8 view .LVU2328
 7016              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7017              		.loc 1 155 19 is_stmt 0 view .LVU2329
 7018 2925 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7019              		.loc 1 155 29 is_stmt 1 view .LVU2330
 7020              	.LVL375:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7021              		.loc 1 156 8 view .LVU2331
 7022              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7023              		.loc 1 156 19 is_stmt 0 view .LVU2332
 7024 2929 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7025              		.loc 1 156 29 is_stmt 1 view .LVU2333
 7026              	.LVL376:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7027              		.loc 1 157 8 view .LVU2334
 7028              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7029              		.loc 1 157 19 is_stmt 0 view .LVU2335
 7030 292c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7031              		.loc 1 157 29 is_stmt 1 view .LVU2336
 7032              	.LVL377:
 158:sieve_extend.c ****    }
 7033              		.loc 1 158 8 view .LVU2337
 7034 2930 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 7035              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7036              		.loc 1 158 19 is_stmt 0 view .LVU2338
 7037 2933 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 7038              		.loc 1 158 29 is_stmt 1 view .LVU2339
 7039 2937 4801F8   		add	rax, rdi	# index_ptr, tmp634
 7040              	.LVL378:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7041              		.loc 1 153 10 view .LVU2340
 7042 293a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccG38KJh.s 			page 193


 7043 293d 7661     		jbe	.L491	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7044              		.loc 1 154 8 view .LVU2341
 7045              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7046              		.loc 1 154 19 is_stmt 0 view .LVU2342
 7047 293f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7048              		.loc 1 154 29 is_stmt 1 view .LVU2343
 7049              	.LVL379:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7050              		.loc 1 155 8 view .LVU2344
 7051              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7052              		.loc 1 155 19 is_stmt 0 view .LVU2345
 7053 2942 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7054              		.loc 1 155 29 is_stmt 1 view .LVU2346
 7055              	.LVL380:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7056              		.loc 1 156 8 view .LVU2347
 7057              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7058              		.loc 1 156 19 is_stmt 0 view .LVU2348
 7059 2946 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7060              		.loc 1 156 29 is_stmt 1 view .LVU2349
 7061              	.LVL381:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7062              		.loc 1 157 8 view .LVU2350
 7063              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7064              		.loc 1 157 19 is_stmt 0 view .LVU2351
 7065 2949 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7066              		.loc 1 157 29 is_stmt 1 view .LVU2352
 7067              	.LVL382:
 158:sieve_extend.c ****    }
 7068              		.loc 1 158 8 view .LVU2353
 7069 294d 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 7070              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7071              		.loc 1 158 19 is_stmt 0 view .LVU2354
 7072 2950 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 7073              		.loc 1 158 29 is_stmt 1 view .LVU2355
 7074 2954 4801F8   		add	rax, rdi	# index_ptr, tmp634
 7075              	.LVL383:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7076              		.loc 1 153 10 view .LVU2356
 7077 2957 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7078 295a 7644     		jbe	.L491	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7079              		.loc 1 154 8 view .LVU2357
 7080              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7081              		.loc 1 154 19 is_stmt 0 view .LVU2358
GAS LISTING /tmp/ccG38KJh.s 			page 194


 7082 295c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7083              		.loc 1 154 29 is_stmt 1 view .LVU2359
 7084              	.LVL384:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7085              		.loc 1 155 8 view .LVU2360
 7086              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7087              		.loc 1 155 19 is_stmt 0 view .LVU2361
 7088 295f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7089              		.loc 1 155 29 is_stmt 1 view .LVU2362
 7090              	.LVL385:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7091              		.loc 1 156 8 view .LVU2363
 7092              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7093              		.loc 1 156 19 is_stmt 0 view .LVU2364
 7094 2963 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7095              		.loc 1 156 29 is_stmt 1 view .LVU2365
 7096              	.LVL386:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7097              		.loc 1 157 8 view .LVU2366
 7098              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7099              		.loc 1 157 19 is_stmt 0 view .LVU2367
 7100 2966 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7101              		.loc 1 157 29 is_stmt 1 view .LVU2368
 7102              	.LVL387:
 158:sieve_extend.c ****    }
 7103              		.loc 1 158 8 view .LVU2369
 7104 296a 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 7105              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7106              		.loc 1 158 19 is_stmt 0 view .LVU2370
 7107 296d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 7108              		.loc 1 158 29 is_stmt 1 view .LVU2371
 7109 2971 4801F8   		add	rax, rdi	# index_ptr, tmp634
 7110              	.LVL388:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7111              		.loc 1 153 10 view .LVU2372
 7112 2974 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7113 2977 7627     		jbe	.L491	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7114              		.loc 1 154 8 view .LVU2373
 7115              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7116              		.loc 1 154 19 is_stmt 0 view .LVU2374
 7117 2979 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7118              		.loc 1 154 29 is_stmt 1 view .LVU2375
 7119              	.LVL389:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7120              		.loc 1 155 8 view .LVU2376
GAS LISTING /tmp/ccG38KJh.s 			page 195


 7121              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7122              		.loc 1 155 19 is_stmt 0 view .LVU2377
 7123 297c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7124              		.loc 1 155 29 is_stmt 1 view .LVU2378
 7125              	.LVL390:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7126              		.loc 1 156 8 view .LVU2379
 7127              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7128              		.loc 1 156 19 is_stmt 0 view .LVU2380
 7129 2980 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7130              		.loc 1 156 29 is_stmt 1 view .LVU2381
 7131              	.LVL391:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7132              		.loc 1 157 8 view .LVU2382
 7133              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7134              		.loc 1 157 19 is_stmt 0 view .LVU2383
 7135 2983 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7136              		.loc 1 157 29 is_stmt 1 view .LVU2384
 7137              	.LVL392:
 158:sieve_extend.c ****    }
 7138              		.loc 1 158 8 view .LVU2385
 7139 2987 4801FE   		add	rsi, rdi	# ivtmp.628, tmp634
 7140              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7141              		.loc 1 158 19 is_stmt 0 view .LVU2386
 7142 298a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 7143              		.loc 1 158 29 is_stmt 1 view .LVU2387
 7144 298e 4801F8   		add	rax, rdi	# index_ptr, tmp634
 7145              	.LVL393:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7146              		.loc 1 153 10 view .LVU2388
 7147 2991 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7148 2994 0F8708FF 		ja	.L492	#,
 7148      FFFF
 7149 299a 660F1F44 		.p2align 4,,10
 7149      0000
 7150              		.p2align 3
 7151              	.L491:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 7152              		.loc 1 161 4 view .LVU2389
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7153              		.loc 1 162 4 view .LVU2390
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7154              		.loc 1 162 10 view .LVU2391
 7155 29a0 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7156 29a3 735B     		jnb	.L493	#,
 7157              	.L494:
 163:sieve_extend.c ****    }
 7158              		.loc 1 163 8 view .LVU2392
 7159              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 196


 163:sieve_extend.c ****    }
 7160              		.loc 1 163 19 is_stmt 0 view .LVU2393
 7161 29a5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7162              		.loc 1 163 29 is_stmt 1 view .LVU2394
 7163              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7164              		.loc 1 163 38 is_stmt 0 view .LVU2395
 7165 29a8 4801D0   		add	rax, rdx	# index_ptr, _347
 7166              	.LVL394:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7167              		.loc 1 162 10 is_stmt 1 view .LVU2396
 7168 29ab 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7169 29ae 7350     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7170              		.loc 1 163 8 view .LVU2397
 7171              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7172              		.loc 1 163 19 is_stmt 0 view .LVU2398
 7173 29b0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7174              		.loc 1 163 29 is_stmt 1 view .LVU2399
 7175              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7176              		.loc 1 163 38 is_stmt 0 view .LVU2400
 7177 29b3 4801D0   		add	rax, rdx	# index_ptr, _347
 7178              	.LVL395:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7179              		.loc 1 162 10 is_stmt 1 view .LVU2401
 7180 29b6 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7181 29b9 7345     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7182              		.loc 1 163 8 view .LVU2402
 7183              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7184              		.loc 1 163 19 is_stmt 0 view .LVU2403
 7185 29bb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7186              		.loc 1 163 29 is_stmt 1 view .LVU2404
 7187              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7188              		.loc 1 163 38 is_stmt 0 view .LVU2405
 7189 29be 4801D0   		add	rax, rdx	# index_ptr, _347
 7190              	.LVL396:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7191              		.loc 1 162 10 is_stmt 1 view .LVU2406
 7192 29c1 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7193 29c4 733A     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7194              		.loc 1 163 8 view .LVU2407
 7195              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7196              		.loc 1 163 19 is_stmt 0 view .LVU2408
 7197 29c6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7198              		.loc 1 163 29 is_stmt 1 view .LVU2409
 7199              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 197


 163:sieve_extend.c ****    }
 7200              		.loc 1 163 38 is_stmt 0 view .LVU2410
 7201 29c9 4801D0   		add	rax, rdx	# index_ptr, _347
 7202              	.LVL397:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7203              		.loc 1 162 10 is_stmt 1 view .LVU2411
 7204 29cc 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7205 29cf 732F     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7206              		.loc 1 163 8 view .LVU2412
 7207              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7208              		.loc 1 163 19 is_stmt 0 view .LVU2413
 7209 29d1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7210              		.loc 1 163 29 is_stmt 1 view .LVU2414
 7211              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7212              		.loc 1 163 38 is_stmt 0 view .LVU2415
 7213 29d4 4801D0   		add	rax, rdx	# index_ptr, _347
 7214              	.LVL398:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7215              		.loc 1 162 10 is_stmt 1 view .LVU2416
 7216 29d7 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7217 29da 7324     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7218              		.loc 1 163 8 view .LVU2417
 7219              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7220              		.loc 1 163 19 is_stmt 0 view .LVU2418
 7221 29dc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7222              		.loc 1 163 29 is_stmt 1 view .LVU2419
 7223              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7224              		.loc 1 163 38 is_stmt 0 view .LVU2420
 7225 29df 4801D0   		add	rax, rdx	# index_ptr, _347
 7226              	.LVL399:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7227              		.loc 1 162 10 is_stmt 1 view .LVU2421
 7228 29e2 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7229 29e5 7319     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7230              		.loc 1 163 8 view .LVU2422
 7231              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7232              		.loc 1 163 19 is_stmt 0 view .LVU2423
 7233 29e7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7234              		.loc 1 163 29 is_stmt 1 view .LVU2424
 7235              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7236              		.loc 1 163 38 is_stmt 0 view .LVU2425
 7237 29ea 4801D0   		add	rax, rdx	# index_ptr, _347
 7238              	.LVL400:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7239              		.loc 1 162 10 is_stmt 1 view .LVU2426
GAS LISTING /tmp/ccG38KJh.s 			page 198


 7240 29ed 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7241 29f0 730E     		jnb	.L493	#,
 163:sieve_extend.c ****    }
 7242              		.loc 1 163 8 view .LVU2427
 7243              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7244              		.loc 1 163 19 is_stmt 0 view .LVU2428
 7245 29f2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7246              		.loc 1 163 29 is_stmt 1 view .LVU2429
 7247              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7248              		.loc 1 163 38 is_stmt 0 view .LVU2430
 7249 29f5 4801D0   		add	rax, rdx	# index_ptr, _347
 7250              	.LVL401:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7251              		.loc 1 162 10 is_stmt 1 view .LVU2431
 7252 29f8 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7253 29fb 72A8     		jb	.L494	#,
 7254 29fd 0F1F00   		.p2align 4,,10
 7255              		.p2align 3
 7256              	.L493:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7257              		.loc 1 166 4 view .LVU2432
 7258              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7259              		.loc 1 166 7 is_stmt 0 view .LVU2433
 7260 2a00 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7261 2a03 7433     		je	.L1087	#,
 7262              	.LVL402:
 7263              	.L495:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7264              		.loc 1 166 7 view .LVU2434
 7265              	.LBE591:
 7266              	.LBE594:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7267              		.loc 1 226 77 is_stmt 1 view .LVU2435
 7268              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7269              		.loc 1 226 83 is_stmt 0 view .LVU2436
 7270 2a05 4C01E3   		add	rbx, r12	# index, step
 7271              	.LVL403:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7272              		.loc 1 226 50 is_stmt 1 view .LVU2437
 7273              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7274              		.loc 1 226 5 is_stmt 0 view .LVU2438
 7275 2a08 4939DA   		cmp	r10, rbx	# range_stop_unique, index
 7276 2a0b 0F876FFE 		ja	.L496	#,
 7276      FFFF
 7277              	.LVL404:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7278              		.loc 1 226 5 view .LVU2439
 7279              	.LBE587:
 7280              	.LBE586:
 7281              	.LBE585:
 7282              	.LBE621:
GAS LISTING /tmp/ccG38KJh.s 			page 199


 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7283              		.loc 1 476 11 is_stmt 1 view .LVU2440
 7284              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7285              		.loc 1 476 5 is_stmt 0 view .LVU2441
 7286 2a11 488B5C24 		mov	rbx, QWORD PTR 112[rsp]	# _2, %sfp
 7286      70
 7287              	.LVL405:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7288              		.loc 1 476 5 view .LVU2442
 7289 2a16 48395C24 		cmp	QWORD PTR 120[rsp], rbx	# %sfp, _2
 7289      78
 7290 2a1b 0F820AFD 		jb	.L461	#,
 7290      FFFF
 7291              	.LVL406:
 7292              	.L1086:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7293              		.loc 1 476 5 view .LVU2443
 7294 2a21 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# index, %sfp
 7294      68
 7295 2a26 48895C24 		mov	QWORD PTR 48[rsp], rbx	# %sfp, index
 7295      30
 7296 2a2b 4889D9   		mov	rcx, rbx	# prime, index
 7297 2a2e E95C0400 		jmp	.L450	#
 7297      00
 7298              	.LVL407:
 7299              		.p2align 4,,10
 7300 2a33 0F1F4400 		.p2align 3
 7300      00
 7301              	.L1087:
 7302              	.LBB622:
 7303              	.LBB598:
 7304              	.LBB597:
 7305              	.LBB596:
 7306              	.LBB595:
 7307              	.LBB592:
 167:sieve_extend.c ****    }
 7308              		.loc 1 167 7 is_stmt 1 view .LVU2444
 7309              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7310              		.loc 1 167 27 is_stmt 0 view .LVU2445
 7311 2a38 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp639, %sfp
 7311      48
 7312              	.LVL408:
 7313              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7314              		.loc 1 167 18 view .LVU2446
 7315 2a3d 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_162, tmp639
 7316 2a40 EBC3     		jmp	.L495	#
 7317              	.LVL409:
 7318              		.p2align 4,,10
 7319 2a42 660F1F44 		.p2align 3
 7319      0000
 7320              	.L1085:
 167:sieve_extend.c ****    }
 7321              		.loc 1 167 18 view .LVU2447
 7322              	.LBE592:
GAS LISTING /tmp/ccG38KJh.s 			page 200


 7323              	.LBE595:
 7324              	.LBE596:
 7325              	.LBE597:
 7326              	.LBE598:
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 7327              		.loc 1 495 44 is_stmt 1 view .LVU2448
 7328              	.LBB599:
 7329              	.LBI599:
 195:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 7330              		.loc 1 195 14 view .LVU2449
 7331              	.LBB600:
 196:sieve_extend.c **** 
 7332              		.loc 1 196 5 view .LVU2450
 7333              	# sieve_extend.c:196:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 196:sieve_extend.c **** 
 7334              		.loc 1 196 74 is_stmt 0 view .LVU2451
 7335 2a48 4D89E3   		mov	r11, r12	# tmp541, step
 7336 2a4b 49C1E306 		sal	r11, 6	# tmp541,
 7337 2a4f 31FF     		xor	edi, edi	# _252
 7338 2a51 4901DB   		add	r11, rbx	# tmp542, index
 7339 2a54 400F92C7 		setc	dil	#, _252
 7340              	.LVL410:
 198:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 7341              		.loc 1 198 5 is_stmt 1 view .LVU2452
 7342              	# sieve_extend.c:198:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 198:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 7343              		.loc 1 198 8 is_stmt 0 view .LVU2453
 7344 2a58 4C395C24 		cmp	QWORD PTR 120[rsp], r11	# %sfp, tmp542
 7344      78
 7345 2a5d 0F822503 		jb	.L459	#,
 7345      0000
 7346              	.LVL411:
 7347              	.LBB601:
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7348              		.loc 1 211 54 is_stmt 1 view .LVU2454
 7349              	# sieve_extend.c:211:         for (register counter_t index = range_start; index <= range_stop_uniq
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7350              		.loc 1 211 9 is_stmt 0 view .LVU2455
 7351 2a63 4885FF   		test	rdi, rdi	# _252
 7352 2a66 0F85AFFC 		jne	.L462	#,
 7352      FFFF
 7353              	.LBB602:
 7354              	.LBB603:
 7355              	.LBB604:
 7356              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7357              		.loc 1 147 20 view .LVU2456
 7358 2a6c 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# _70, %sfp
 7358      78
 7359              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 7360              		.loc 1 149 112 view .LVU2457
 7361 2a71 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp550,
 7362              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7363              		.loc 1 147 20 view .LVU2458
 7364 2a75 4989D2   		mov	r10, rdx	# range_stop_word, _70
GAS LISTING /tmp/ccG38KJh.s 			page 201


 7365 2a78 49C1EA06 		shr	r10, 6	# range_stop_word,
 7366              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7367              		.loc 1 167 29 view .LVU2459
 7368 2a7c 4189D1   		mov	r9d, edx	# tmp551, _70
 7369              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 7370              		.loc 1 149 135 view .LVU2460
 7371 2a7f 4C89D6   		mov	rsi, r10	# tmp556, range_stop_word
 7372 2a82 4829FE   		sub	rsi, rdi	# tmp556, tmp550
 7373              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7374              		.loc 1 167 29 view .LVU2461
 7375 2a85 41F7D1   		not	r9d	# tmp551
 7376 2a88 48C7C0FF 		mov	rax, -1	# tmp1523,
 7376      FFFFFF
 7377 2a8f 4939FA   		cmp	r10, rdi	# range_stop_word, tmp550
 7378 2a92 C462B3F7 		shrx	r8, rax, r9	# _179, tmp1523, tmp551
 7378      C0
 7379 2a97 4C89E2   		mov	rdx, r12	# _1193, step
 7380 2a9a 4D8D0CF7 		lea	r9, [r15+rsi*8]	# tmp558,
 7381 2a9e 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 7382 2aa2 48C1E204 		sal	rdx, 4	# _1193,
 7383 2aa6 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _179
 7383      48
 7384              	.LBE604:
 7385              	.LBE603:
 7386              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7387              		.loc 1 214 74 view .LVU2462
 7388 2aab 4C897424 		mov	QWORD PTR 64[rsp], r14	# %sfp, patternsize_bits
 7388      40
 7389              	.LBB608:
 7390              	.LBB605:
 7391              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 7392              		.loc 1 161 83 view .LVU2463
 7393 2ab0 4F8D04D7 		lea	r8, [r15+r10*8]	# _164,
 7394              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7395              		.loc 1 154 38 view .LVU2464
 7396 2ab4 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _146,
 7396      00000000 
 7397 2abc 48C1E703 		sal	rdi, 3	# tmp562,
 7398              	.LBE605:
 7399              	.LBE608:
 7400              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7401              		.loc 1 214 74 view .LVU2465
 7402 2ac0 41BA0100 		mov	r10d, 1	# tmp565,
 7402      0000
 7403 2ac6 4989D6   		mov	r14, rdx	# _1193, _1193
 7404              	.LVL412:
 7405 2ac9 0F1F8000 		.p2align 4,,10
 7405      000000
 7406              		.p2align 3
 7407              	.L471:
GAS LISTING /tmp/ccG38KJh.s 			page 202


 212:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7408              		.loc 1 212 13 is_stmt 1 view .LVU2466
 7409              	# sieve_extend.c:212:             register counter_t index_word = wordindex(index);
 212:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7410              		.loc 1 212 32 is_stmt 0 view .LVU2467
 7411 2ad0 4889D8   		mov	rax, rbx	# index_word, index
 7412 2ad3 48C1E806 		shr	rax, 6	# index_word,
 7413              	.LVL413:
 213:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 7414              		.loc 1 213 13 is_stmt 1 view .LVU2468
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7415              		.loc 1 214 13 view .LVU2469
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7416              		.loc 1 214 19 view .LVU2470
 7417              	# sieve_extend.c:213:             register bitword_t mask = SAFE_ZERO;
 213:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 7418              		.loc 1 213 32 is_stmt 0 view .LVU2471
 7419 2ad7 31D2     		xor	edx, edx	# mask
 7420              	.LVL414:
 7421              	.L465:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7422              		.loc 1 214 66 is_stmt 1 view .LVU2472
 7423              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7424              		.loc 1 214 74 is_stmt 0 view .LVU2473
 7425 2ad9 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp564, tmp565, index
 7425      F2
 7426              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7427              		.loc 1 214 57 view .LVU2474
 7428 2ade 4C01E3   		add	rbx, r12	# index, step
 7429              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7430              		.loc 1 214 71 view .LVU2475
 7431 2ae1 4809F2   		or	rdx, rsi	# mask, tmp564
 7432              	.LVL415:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7433              		.loc 1 214 51 is_stmt 1 view .LVU2476
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7434              		.loc 1 214 19 view .LVU2477
 7435              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7436              		.loc 1 214 33 is_stmt 0 view .LVU2478
 7437 2ae4 4889DE   		mov	rsi, rbx	# tmp566, index
 7438 2ae7 48C1EE06 		shr	rsi, 6	# tmp566,
 7439              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7440              		.loc 1 214 13 view .LVU2479
 7441 2aeb 4839F0   		cmp	rax, rsi	# index_word, tmp566
 7442 2aee 0F85AC00 		jne	.L928	#,
 7442      0000
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7443              		.loc 1 214 66 is_stmt 1 view .LVU2480
 7444              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7445              		.loc 1 214 74 is_stmt 0 view .LVU2481
 7446 2af4 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1000, tmp565, index
GAS LISTING /tmp/ccG38KJh.s 			page 203


 7446      F2
 7447              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7448              		.loc 1 214 57 view .LVU2482
 7449 2af9 4C01E3   		add	rbx, r12	# index, step
 7450              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7451              		.loc 1 214 71 view .LVU2483
 7452 2afc 4809F2   		or	rdx, rsi	# mask, tmp1000
 7453              	.LVL416:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7454              		.loc 1 214 51 is_stmt 1 view .LVU2484
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7455              		.loc 1 214 19 view .LVU2485
 7456              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7457              		.loc 1 214 33 is_stmt 0 view .LVU2486
 7458 2aff 4889DE   		mov	rsi, rbx	# tmp1001, index
 7459 2b02 48C1EE06 		shr	rsi, 6	# tmp1001,
 7460              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7461              		.loc 1 214 13 view .LVU2487
 7462 2b06 4839F0   		cmp	rax, rsi	# index_word, tmp1001
 7463 2b09 0F859100 		jne	.L928	#,
 7463      0000
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7464              		.loc 1 214 66 is_stmt 1 view .LVU2488
 7465              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7466              		.loc 1 214 74 is_stmt 0 view .LVU2489
 7467 2b0f C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1002, tmp565, index
 7467      F2
 7468              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7469              		.loc 1 214 57 view .LVU2490
 7470 2b14 4C01E3   		add	rbx, r12	# index, step
 7471              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7472              		.loc 1 214 71 view .LVU2491
 7473 2b17 4809F2   		or	rdx, rsi	# mask, tmp1002
 7474              	.LVL417:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7475              		.loc 1 214 51 is_stmt 1 view .LVU2492
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7476              		.loc 1 214 19 view .LVU2493
 7477              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7478              		.loc 1 214 33 is_stmt 0 view .LVU2494
 7479 2b1a 4889DE   		mov	rsi, rbx	# tmp1003, index
 7480 2b1d 48C1EE06 		shr	rsi, 6	# tmp1003,
 7481              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7482              		.loc 1 214 13 view .LVU2495
 7483 2b21 4839F0   		cmp	rax, rsi	# index_word, tmp1003
 7484 2b24 757A     		jne	.L928	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7485              		.loc 1 214 66 is_stmt 1 view .LVU2496
GAS LISTING /tmp/ccG38KJh.s 			page 204


 7486              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7487              		.loc 1 214 74 is_stmt 0 view .LVU2497
 7488 2b26 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1004, tmp565, index
 7488      F2
 7489              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7490              		.loc 1 214 57 view .LVU2498
 7491 2b2b 4C01E3   		add	rbx, r12	# index, step
 7492              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7493              		.loc 1 214 71 view .LVU2499
 7494 2b2e 4809F2   		or	rdx, rsi	# mask, tmp1004
 7495              	.LVL418:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7496              		.loc 1 214 51 is_stmt 1 view .LVU2500
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7497              		.loc 1 214 19 view .LVU2501
 7498              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7499              		.loc 1 214 33 is_stmt 0 view .LVU2502
 7500 2b31 4889DE   		mov	rsi, rbx	# tmp1005, index
 7501 2b34 48C1EE06 		shr	rsi, 6	# tmp1005,
 7502              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7503              		.loc 1 214 13 view .LVU2503
 7504 2b38 4839F0   		cmp	rax, rsi	# index_word, tmp1005
 7505 2b3b 7563     		jne	.L928	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7506              		.loc 1 214 66 is_stmt 1 view .LVU2504
 7507              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7508              		.loc 1 214 74 is_stmt 0 view .LVU2505
 7509 2b3d C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1006, tmp565, index
 7509      F2
 7510              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7511              		.loc 1 214 57 view .LVU2506
 7512 2b42 4C01E3   		add	rbx, r12	# index, step
 7513              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7514              		.loc 1 214 71 view .LVU2507
 7515 2b45 4809F2   		or	rdx, rsi	# mask, tmp1006
 7516              	.LVL419:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7517              		.loc 1 214 51 is_stmt 1 view .LVU2508
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7518              		.loc 1 214 19 view .LVU2509
 7519              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7520              		.loc 1 214 33 is_stmt 0 view .LVU2510
 7521 2b48 4889DE   		mov	rsi, rbx	# tmp1007, index
 7522 2b4b 48C1EE06 		shr	rsi, 6	# tmp1007,
 7523              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7524              		.loc 1 214 13 view .LVU2511
 7525 2b4f 4839F0   		cmp	rax, rsi	# index_word, tmp1007
GAS LISTING /tmp/ccG38KJh.s 			page 205


 7526 2b52 754C     		jne	.L928	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7527              		.loc 1 214 66 is_stmt 1 view .LVU2512
 7528              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7529              		.loc 1 214 74 is_stmt 0 view .LVU2513
 7530 2b54 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1008, tmp565, index
 7530      F2
 7531              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7532              		.loc 1 214 57 view .LVU2514
 7533 2b59 4C01E3   		add	rbx, r12	# index, step
 7534              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7535              		.loc 1 214 71 view .LVU2515
 7536 2b5c 4809F2   		or	rdx, rsi	# mask, tmp1008
 7537              	.LVL420:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7538              		.loc 1 214 51 is_stmt 1 view .LVU2516
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7539              		.loc 1 214 19 view .LVU2517
 7540              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7541              		.loc 1 214 33 is_stmt 0 view .LVU2518
 7542 2b5f 4889DE   		mov	rsi, rbx	# tmp1009, index
 7543 2b62 48C1EE06 		shr	rsi, 6	# tmp1009,
 7544              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7545              		.loc 1 214 13 view .LVU2519
 7546 2b66 4839F0   		cmp	rax, rsi	# index_word, tmp1009
 7547 2b69 7535     		jne	.L928	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7548              		.loc 1 214 66 is_stmt 1 view .LVU2520
 7549              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7550              		.loc 1 214 74 is_stmt 0 view .LVU2521
 7551 2b6b C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1010, tmp565, index
 7551      F2
 7552              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7553              		.loc 1 214 57 view .LVU2522
 7554 2b70 4C01E3   		add	rbx, r12	# index, step
 7555              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7556              		.loc 1 214 71 view .LVU2523
 7557 2b73 4809F2   		or	rdx, rsi	# mask, tmp1010
 7558              	.LVL421:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7559              		.loc 1 214 51 is_stmt 1 view .LVU2524
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7560              		.loc 1 214 19 view .LVU2525
 7561              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7562              		.loc 1 214 33 is_stmt 0 view .LVU2526
 7563 2b76 4889DE   		mov	rsi, rbx	# tmp1011, index
 7564 2b79 48C1EE06 		shr	rsi, 6	# tmp1011,
 7565              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
GAS LISTING /tmp/ccG38KJh.s 			page 206


 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7566              		.loc 1 214 13 view .LVU2527
 7567 2b7d 4839F0   		cmp	rax, rsi	# index_word, tmp1011
 7568 2b80 751E     		jne	.L928	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7569              		.loc 1 214 66 is_stmt 1 view .LVU2528
 7570              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7571              		.loc 1 214 74 is_stmt 0 view .LVU2529
 7572 2b82 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1012, tmp565, index
 7572      F2
 7573              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7574              		.loc 1 214 57 view .LVU2530
 7575 2b87 4C01E3   		add	rbx, r12	# index, step
 7576              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7577              		.loc 1 214 71 view .LVU2531
 7578 2b8a 4809F2   		or	rdx, rsi	# mask, tmp1012
 7579              	.LVL422:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7580              		.loc 1 214 51 is_stmt 1 view .LVU2532
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7581              		.loc 1 214 19 view .LVU2533
 7582              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7583              		.loc 1 214 33 is_stmt 0 view .LVU2534
 7584 2b8d 4889DE   		mov	rsi, rbx	# tmp1013, index
 7585 2b90 48C1EE06 		shr	rsi, 6	# tmp1013,
 7586              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7587              		.loc 1 214 13 view .LVU2535
 7588 2b94 4839F0   		cmp	rax, rsi	# index_word, tmp1013
 7589 2b97 0F843CFF 		je	.L465	#,
 7589      FFFF
 7590 2b9d 0F1F00   		.p2align 4,,10
 7591              		.p2align 3
 7592              	.L928:
 215:sieve_extend.c ****         }
 7593              		.loc 1 215 13 is_stmt 1 view .LVU2536
 7594              	.LVL423:
 7595              	.LBB609:
 7596              	.LBI603:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 7597              		.loc 1 146 20 view .LVU2537
 7598              	.LBB606:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7599              		.loc 1 147 4 view .LVU2538
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 7600              		.loc 1 148 4 view .LVU2539
 7601              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 7602              		.loc 1 148 78 is_stmt 0 view .LVU2540
 7603 2ba0 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 7604              	.LVL424:
 149:sieve_extend.c **** 
 7605              		.loc 1 149 4 is_stmt 1 view .LVU2541
GAS LISTING /tmp/ccG38KJh.s 			page 207


 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7606              		.loc 1 153 10 view .LVU2542
 7607 2ba4 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 7608 2ba7 0F830301 		jnb	.L466	#,
 7608      0000
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7609              		.loc 1 153 10 is_stmt 0 view .LVU2543
 7610 2bad 4A8D3430 		lea	rsi, [rax+r14]	# ivtmp.552,
 7611              	.L467:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7612              		.loc 1 154 8 is_stmt 1 view .LVU2544
 7613              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7614              		.loc 1 154 19 is_stmt 0 view .LVU2545
 7615 2bb1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7616              		.loc 1 154 29 is_stmt 1 view .LVU2546
 7617              	.LVL425:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7618              		.loc 1 155 8 view .LVU2547
 7619              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7620              		.loc 1 155 19 is_stmt 0 view .LVU2548
 7621 2bb4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7622              		.loc 1 155 29 is_stmt 1 view .LVU2549
 7623              	.LVL426:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7624              		.loc 1 156 8 view .LVU2550
 7625              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7626              		.loc 1 156 19 is_stmt 0 view .LVU2551
 7627 2bb8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7628              		.loc 1 156 29 is_stmt 1 view .LVU2552
 7629              	.LVL427:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7630              		.loc 1 157 8 view .LVU2553
 7631              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7632              		.loc 1 157 19 is_stmt 0 view .LVU2554
 7633 2bbb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7634              		.loc 1 157 29 is_stmt 1 view .LVU2555
 7635              	.LVL428:
 158:sieve_extend.c ****    }
 7636              		.loc 1 158 8 view .LVU2556
 7637 2bbf 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7638              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7639              		.loc 1 158 19 is_stmt 0 view .LVU2557
 7640 2bc2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7641              		.loc 1 158 29 is_stmt 1 view .LVU2558
 7642 2bc6 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7643              	.LVL429:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 208


 7644              		.loc 1 153 10 view .LVU2559
 7645 2bc9 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7646 2bcc 0F86DE00 		jbe	.L466	#,
 7646      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7647              		.loc 1 154 8 view .LVU2560
 7648              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7649              		.loc 1 154 19 is_stmt 0 view .LVU2561
 7650 2bd2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7651              		.loc 1 154 29 is_stmt 1 view .LVU2562
 7652              	.LVL430:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7653              		.loc 1 155 8 view .LVU2563
 7654              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7655              		.loc 1 155 19 is_stmt 0 view .LVU2564
 7656 2bd5 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7657              		.loc 1 155 29 is_stmt 1 view .LVU2565
 7658              	.LVL431:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7659              		.loc 1 156 8 view .LVU2566
 7660              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7661              		.loc 1 156 19 is_stmt 0 view .LVU2567
 7662 2bd9 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7663              		.loc 1 156 29 is_stmt 1 view .LVU2568
 7664              	.LVL432:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7665              		.loc 1 157 8 view .LVU2569
 7666              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7667              		.loc 1 157 19 is_stmt 0 view .LVU2570
 7668 2bdc 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7669              		.loc 1 157 29 is_stmt 1 view .LVU2571
 7670              	.LVL433:
 158:sieve_extend.c ****    }
 7671              		.loc 1 158 8 view .LVU2572
 7672 2be0 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7673              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7674              		.loc 1 158 19 is_stmt 0 view .LVU2573
 7675 2be3 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7676              		.loc 1 158 29 is_stmt 1 view .LVU2574
 7677 2be7 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7678              	.LVL434:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7679              		.loc 1 153 10 view .LVU2575
 7680 2bea 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7681 2bed 0F86BD00 		jbe	.L466	#,
 7681      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 209


 7682              		.loc 1 154 8 view .LVU2576
 7683              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7684              		.loc 1 154 19 is_stmt 0 view .LVU2577
 7685 2bf3 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7686              		.loc 1 154 29 is_stmt 1 view .LVU2578
 7687              	.LVL435:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7688              		.loc 1 155 8 view .LVU2579
 7689              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7690              		.loc 1 155 19 is_stmt 0 view .LVU2580
 7691 2bf6 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7692              		.loc 1 155 29 is_stmt 1 view .LVU2581
 7693              	.LVL436:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7694              		.loc 1 156 8 view .LVU2582
 7695              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7696              		.loc 1 156 19 is_stmt 0 view .LVU2583
 7697 2bfa 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7698              		.loc 1 156 29 is_stmt 1 view .LVU2584
 7699              	.LVL437:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7700              		.loc 1 157 8 view .LVU2585
 7701              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7702              		.loc 1 157 19 is_stmt 0 view .LVU2586
 7703 2bfd 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7704              		.loc 1 157 29 is_stmt 1 view .LVU2587
 7705              	.LVL438:
 158:sieve_extend.c ****    }
 7706              		.loc 1 158 8 view .LVU2588
 7707 2c01 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7708              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7709              		.loc 1 158 19 is_stmt 0 view .LVU2589
 7710 2c04 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7711              		.loc 1 158 29 is_stmt 1 view .LVU2590
 7712 2c08 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7713              	.LVL439:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7714              		.loc 1 153 10 view .LVU2591
 7715 2c0b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7716 2c0e 0F869C00 		jbe	.L466	#,
 7716      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7717              		.loc 1 154 8 view .LVU2592
 7718              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7719              		.loc 1 154 19 is_stmt 0 view .LVU2593
 7720 2c14 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
GAS LISTING /tmp/ccG38KJh.s 			page 210


 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7721              		.loc 1 154 29 is_stmt 1 view .LVU2594
 7722              	.LVL440:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7723              		.loc 1 155 8 view .LVU2595
 7724              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7725              		.loc 1 155 19 is_stmt 0 view .LVU2596
 7726 2c17 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7727              		.loc 1 155 29 is_stmt 1 view .LVU2597
 7728              	.LVL441:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7729              		.loc 1 156 8 view .LVU2598
 7730              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7731              		.loc 1 156 19 is_stmt 0 view .LVU2599
 7732 2c1b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7733              		.loc 1 156 29 is_stmt 1 view .LVU2600
 7734              	.LVL442:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7735              		.loc 1 157 8 view .LVU2601
 7736              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7737              		.loc 1 157 19 is_stmt 0 view .LVU2602
 7738 2c1e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7739              		.loc 1 157 29 is_stmt 1 view .LVU2603
 7740              	.LVL443:
 158:sieve_extend.c ****    }
 7741              		.loc 1 158 8 view .LVU2604
 7742 2c22 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7743              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7744              		.loc 1 158 19 is_stmt 0 view .LVU2605
 7745 2c25 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7746              		.loc 1 158 29 is_stmt 1 view .LVU2606
 7747 2c29 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7748              	.LVL444:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7749              		.loc 1 153 10 view .LVU2607
 7750 2c2c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7751 2c2f 767F     		jbe	.L466	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7752              		.loc 1 154 8 view .LVU2608
 7753              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7754              		.loc 1 154 19 is_stmt 0 view .LVU2609
 7755 2c31 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7756              		.loc 1 154 29 is_stmt 1 view .LVU2610
 7757              	.LVL445:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7758              		.loc 1 155 8 view .LVU2611
 7759              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 211


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7760              		.loc 1 155 19 is_stmt 0 view .LVU2612
 7761 2c34 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7762              		.loc 1 155 29 is_stmt 1 view .LVU2613
 7763              	.LVL446:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7764              		.loc 1 156 8 view .LVU2614
 7765              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7766              		.loc 1 156 19 is_stmt 0 view .LVU2615
 7767 2c38 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7768              		.loc 1 156 29 is_stmt 1 view .LVU2616
 7769              	.LVL447:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7770              		.loc 1 157 8 view .LVU2617
 7771              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7772              		.loc 1 157 19 is_stmt 0 view .LVU2618
 7773 2c3b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7774              		.loc 1 157 29 is_stmt 1 view .LVU2619
 7775              	.LVL448:
 158:sieve_extend.c ****    }
 7776              		.loc 1 158 8 view .LVU2620
 7777 2c3f 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7778              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7779              		.loc 1 158 19 is_stmt 0 view .LVU2621
 7780 2c42 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7781              		.loc 1 158 29 is_stmt 1 view .LVU2622
 7782 2c46 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7783              	.LVL449:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7784              		.loc 1 153 10 view .LVU2623
 7785 2c49 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7786 2c4c 7662     		jbe	.L466	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7787              		.loc 1 154 8 view .LVU2624
 7788              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7789              		.loc 1 154 19 is_stmt 0 view .LVU2625
 7790 2c4e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7791              		.loc 1 154 29 is_stmt 1 view .LVU2626
 7792              	.LVL450:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7793              		.loc 1 155 8 view .LVU2627
 7794              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7795              		.loc 1 155 19 is_stmt 0 view .LVU2628
 7796 2c51 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7797              		.loc 1 155 29 is_stmt 1 view .LVU2629
 7798              	.LVL451:
GAS LISTING /tmp/ccG38KJh.s 			page 212


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7799              		.loc 1 156 8 view .LVU2630
 7800              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7801              		.loc 1 156 19 is_stmt 0 view .LVU2631
 7802 2c55 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7803              		.loc 1 156 29 is_stmt 1 view .LVU2632
 7804              	.LVL452:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7805              		.loc 1 157 8 view .LVU2633
 7806              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7807              		.loc 1 157 19 is_stmt 0 view .LVU2634
 7808 2c58 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7809              		.loc 1 157 29 is_stmt 1 view .LVU2635
 7810              	.LVL453:
 158:sieve_extend.c ****    }
 7811              		.loc 1 158 8 view .LVU2636
 7812 2c5c 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7813              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7814              		.loc 1 158 19 is_stmt 0 view .LVU2637
 7815 2c5f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7816              		.loc 1 158 29 is_stmt 1 view .LVU2638
 7817 2c63 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7818              	.LVL454:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7819              		.loc 1 153 10 view .LVU2639
 7820 2c66 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7821 2c69 7645     		jbe	.L466	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7822              		.loc 1 154 8 view .LVU2640
 7823              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7824              		.loc 1 154 19 is_stmt 0 view .LVU2641
 7825 2c6b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7826              		.loc 1 154 29 is_stmt 1 view .LVU2642
 7827              	.LVL455:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7828              		.loc 1 155 8 view .LVU2643
 7829              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7830              		.loc 1 155 19 is_stmt 0 view .LVU2644
 7831 2c6e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7832              		.loc 1 155 29 is_stmt 1 view .LVU2645
 7833              	.LVL456:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7834              		.loc 1 156 8 view .LVU2646
 7835              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7836              		.loc 1 156 19 is_stmt 0 view .LVU2647
 7837 2c72 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
GAS LISTING /tmp/ccG38KJh.s 			page 213


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7838              		.loc 1 156 29 is_stmt 1 view .LVU2648
 7839              	.LVL457:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7840              		.loc 1 157 8 view .LVU2649
 7841              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7842              		.loc 1 157 19 is_stmt 0 view .LVU2650
 7843 2c75 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7844              		.loc 1 157 29 is_stmt 1 view .LVU2651
 7845              	.LVL458:
 158:sieve_extend.c ****    }
 7846              		.loc 1 158 8 view .LVU2652
 7847 2c79 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7848              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7849              		.loc 1 158 19 is_stmt 0 view .LVU2653
 7850 2c7c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7851              		.loc 1 158 29 is_stmt 1 view .LVU2654
 7852 2c80 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7853              	.LVL459:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7854              		.loc 1 153 10 view .LVU2655
 7855 2c83 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7856 2c86 7628     		jbe	.L466	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7857              		.loc 1 154 8 view .LVU2656
 7858              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7859              		.loc 1 154 19 is_stmt 0 view .LVU2657
 7860 2c88 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7861              		.loc 1 154 29 is_stmt 1 view .LVU2658
 7862              	.LVL460:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7863              		.loc 1 155 8 view .LVU2659
 7864              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7865              		.loc 1 155 19 is_stmt 0 view .LVU2660
 7866 2c8b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7867              		.loc 1 155 29 is_stmt 1 view .LVU2661
 7868              	.LVL461:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7869              		.loc 1 156 8 view .LVU2662
 7870              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7871              		.loc 1 156 19 is_stmt 0 view .LVU2663
 7872 2c8f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7873              		.loc 1 156 29 is_stmt 1 view .LVU2664
 7874              	.LVL462:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7875              		.loc 1 157 8 view .LVU2665
 7876              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 214


 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7877              		.loc 1 157 19 is_stmt 0 view .LVU2666
 7878 2c92 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7879              		.loc 1 157 29 is_stmt 1 view .LVU2667
 7880              	.LVL463:
 158:sieve_extend.c ****    }
 7881              		.loc 1 158 8 view .LVU2668
 7882 2c96 4801FE   		add	rsi, rdi	# ivtmp.552, tmp562
 7883              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7884              		.loc 1 158 19 is_stmt 0 view .LVU2669
 7885 2c99 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7886              		.loc 1 158 29 is_stmt 1 view .LVU2670
 7887 2c9d 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7888              	.LVL464:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7889              		.loc 1 153 10 view .LVU2671
 7890 2ca0 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7891 2ca3 0F8708FF 		ja	.L467	#,
 7891      FFFF
 7892 2ca9 0F1F8000 		.p2align 4,,10
 7892      000000
 7893              		.p2align 3
 7894              	.L466:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 7895              		.loc 1 161 4 view .LVU2672
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7896              		.loc 1 162 4 view .LVU2673
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7897              		.loc 1 162 10 view .LVU2674
 7898 2cb0 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7899 2cb3 735B     		jnb	.L468	#,
 7900              	.L469:
 163:sieve_extend.c ****    }
 7901              		.loc 1 163 8 view .LVU2675
 7902              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7903              		.loc 1 163 19 is_stmt 0 view .LVU2676
 7904 2cb5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7905              		.loc 1 163 29 is_stmt 1 view .LVU2677
 7906              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7907              		.loc 1 163 38 is_stmt 0 view .LVU2678
 7908 2cb8 4801C8   		add	rax, rcx	# index_ptr, _146
 7909              	.LVL465:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7910              		.loc 1 162 10 is_stmt 1 view .LVU2679
 7911 2cbb 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7912 2cbe 7350     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7913              		.loc 1 163 8 view .LVU2680
 7914              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7915              		.loc 1 163 19 is_stmt 0 view .LVU2681
GAS LISTING /tmp/ccG38KJh.s 			page 215


 7916 2cc0 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7917              		.loc 1 163 29 is_stmt 1 view .LVU2682
 7918              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7919              		.loc 1 163 38 is_stmt 0 view .LVU2683
 7920 2cc3 4801C8   		add	rax, rcx	# index_ptr, _146
 7921              	.LVL466:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7922              		.loc 1 162 10 is_stmt 1 view .LVU2684
 7923 2cc6 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7924 2cc9 7345     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7925              		.loc 1 163 8 view .LVU2685
 7926              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7927              		.loc 1 163 19 is_stmt 0 view .LVU2686
 7928 2ccb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7929              		.loc 1 163 29 is_stmt 1 view .LVU2687
 7930              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7931              		.loc 1 163 38 is_stmt 0 view .LVU2688
 7932 2cce 4801C8   		add	rax, rcx	# index_ptr, _146
 7933              	.LVL467:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7934              		.loc 1 162 10 is_stmt 1 view .LVU2689
 7935 2cd1 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7936 2cd4 733A     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7937              		.loc 1 163 8 view .LVU2690
 7938              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7939              		.loc 1 163 19 is_stmt 0 view .LVU2691
 7940 2cd6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7941              		.loc 1 163 29 is_stmt 1 view .LVU2692
 7942              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7943              		.loc 1 163 38 is_stmt 0 view .LVU2693
 7944 2cd9 4801C8   		add	rax, rcx	# index_ptr, _146
 7945              	.LVL468:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7946              		.loc 1 162 10 is_stmt 1 view .LVU2694
 7947 2cdc 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7948 2cdf 732F     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7949              		.loc 1 163 8 view .LVU2695
 7950              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7951              		.loc 1 163 19 is_stmt 0 view .LVU2696
 7952 2ce1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7953              		.loc 1 163 29 is_stmt 1 view .LVU2697
 7954              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7955              		.loc 1 163 38 is_stmt 0 view .LVU2698
GAS LISTING /tmp/ccG38KJh.s 			page 216


 7956 2ce4 4801C8   		add	rax, rcx	# index_ptr, _146
 7957              	.LVL469:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7958              		.loc 1 162 10 is_stmt 1 view .LVU2699
 7959 2ce7 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7960 2cea 7324     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7961              		.loc 1 163 8 view .LVU2700
 7962              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7963              		.loc 1 163 19 is_stmt 0 view .LVU2701
 7964 2cec 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7965              		.loc 1 163 29 is_stmt 1 view .LVU2702
 7966              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7967              		.loc 1 163 38 is_stmt 0 view .LVU2703
 7968 2cef 4801C8   		add	rax, rcx	# index_ptr, _146
 7969              	.LVL470:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7970              		.loc 1 162 10 is_stmt 1 view .LVU2704
 7971 2cf2 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7972 2cf5 7319     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7973              		.loc 1 163 8 view .LVU2705
 7974              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7975              		.loc 1 163 19 is_stmt 0 view .LVU2706
 7976 2cf7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7977              		.loc 1 163 29 is_stmt 1 view .LVU2707
 7978              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7979              		.loc 1 163 38 is_stmt 0 view .LVU2708
 7980 2cfa 4801C8   		add	rax, rcx	# index_ptr, _146
 7981              	.LVL471:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7982              		.loc 1 162 10 is_stmt 1 view .LVU2709
 7983 2cfd 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7984 2d00 730E     		jnb	.L468	#,
 163:sieve_extend.c ****    }
 7985              		.loc 1 163 8 view .LVU2710
 7986              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7987              		.loc 1 163 19 is_stmt 0 view .LVU2711
 7988 2d02 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7989              		.loc 1 163 29 is_stmt 1 view .LVU2712
 7990              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7991              		.loc 1 163 38 is_stmt 0 view .LVU2713
 7992 2d05 4801C8   		add	rax, rcx	# index_ptr, _146
 7993              	.LVL472:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7994              		.loc 1 162 10 is_stmt 1 view .LVU2714
 7995 2d08 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7996 2d0b 72A8     		jb	.L469	#,
GAS LISTING /tmp/ccG38KJh.s 			page 217


 7997 2d0d 0F1F00   		.p2align 4,,10
 7998              		.p2align 3
 7999              	.L468:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8000              		.loc 1 166 4 view .LVU2715
 8001              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8002              		.loc 1 166 7 is_stmt 0 view .LVU2716
 8003 2d10 4C39C0   		cmp	rax, r8	# index_ptr, _164
 8004 2d13 741B     		je	.L1088	#,
 8005              	.LVL473:
 8006              	.L470:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8007              		.loc 1 166 7 view .LVU2717
 8008              	.LBE606:
 8009              	.LBE609:
 8010              	.LBE602:
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8011              		.loc 1 211 54 is_stmt 1 view .LVU2718
 8012              	# sieve_extend.c:211:         for (register counter_t index = range_start; index <= range_stop_uniq
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8013              		.loc 1 211 9 is_stmt 0 view .LVU2719
 8014 2d15 4939DB   		cmp	r11, rbx	# tmp542, index
 8015 2d18 0F83B2FD 		jnb	.L471	#,
 8015      FFFF
 8016 2d1e 4C8B7424 		mov	r14, QWORD PTR 64[rsp]	# patternsize_bits, %sfp
 8016      40
 8017 2d23 E9F3F9FF 		jmp	.L462	#
 8017      FF
 8018              	.LVL474:
 8019 2d28 0F1F8400 		.p2align 4,,10
 8019      00000000 
 8020              		.p2align 3
 8021              	.L1088:
 8022              	.LBB611:
 8023              	.LBB610:
 8024              	.LBB607:
 167:sieve_extend.c ****    }
 8025              		.loc 1 167 7 is_stmt 1 view .LVU2720
 8026              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8027              		.loc 1 167 27 is_stmt 0 view .LVU2721
 8028 2d30 48235424 		and	rdx, QWORD PTR 72[rsp]	# tmp568, %sfp
 8028      48
 8029              	.LVL475:
 8030              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8031              		.loc 1 167 18 view .LVU2722
 8032 2d35 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_846, tmp568
 8033 2d38 EBDB     		jmp	.L470	#
 8034              	.LVL476:
 8035 2d3a 660F1F44 		.p2align 4,,10
 8035      0000
 8036              		.p2align 3
 8037              	.L455:
 167:sieve_extend.c ****    }
 8038              		.loc 1 167 18 view .LVU2723
GAS LISTING /tmp/ccG38KJh.s 			page 218


 8039              	.LBE607:
 8040              	.LBE610:
 8041              	.LBE611:
 8042              	.LBE601:
 8043              	.LBE600:
 8044              	.LBE599:
 8045              	.LBB615:
 8046              	.LBB557:
 427:sieve_extend.c **** }
 8047              		.loc 1 427 37 is_stmt 1 view .LVU2724
 8048 2d40 C5F877   		vzeroupper
 8049 2d43 E8D8DEFF 		call	continuePattern_aligned	#
 8049      FF
 8050              	.LVL477:
 427:sieve_extend.c **** }
 8051              		.loc 1 427 37 is_stmt 0 view .LVU2725
 8052 2d48 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8052      50
 8053 2d4d E962F5FF 		jmp	.L452	#
 8053      FF
 8054              	.LVL478:
 8055              		.p2align 4,,10
 8056 2d52 660F1F44 		.p2align 3
 8056      0000
 8057              	.L1084:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8058              		.loc 1 425 37 is_stmt 1 view .LVU2726
 8059 2d58 C5F877   		vzeroupper
 8060 2d5b E8C0E3FF 		call	continuePattern_shiftleft	#
 8060      FF
 8061              	.LVL479:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8062              		.loc 1 425 37 is_stmt 0 view .LVU2727
 8063 2d60 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8063      50
 8064 2d65 E94AF5FF 		jmp	.L452	#
 8064      FF
 8065              	.LVL480:
 8066              	.L1083:
 420:sieve_extend.c **** 
 8067              		.loc 1 420 35 is_stmt 1 view .LVU2728
 8068              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 8069              		.loc 1 420 42 is_stmt 0 view .LVU2729
 8070 2d6a 4889F9   		mov	rcx, rdi	#, _70
 8071 2d6d 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8072 2d70 4C89F6   		mov	rsi, r14	#, patternsize_bits
 8073 2d73 4C89FF   		mov	rdi, r15	#, _101
 8074              	.LVL481:
 420:sieve_extend.c **** 
 8075              		.loc 1 420 42 view .LVU2730
 8076 2d76 C5F877   		vzeroupper
 8077 2d79 E882D2FF 		call	continuePattern_smallSize	#
 8077      FF
 8078              	.LVL482:
 8079 2d7e 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8079      50
GAS LISTING /tmp/ccG38KJh.s 			page 219


 8080 2d83 E92CF5FF 		jmp	.L452	#
 8080      FF
 8081              	.LVL483:
 8082              	.L459:
 420:sieve_extend.c **** 
 8083              		.loc 1 420 42 view .LVU2731
 8084              	.LBE557:
 8085              	.LBE615:
 8086              	.LBB616:
 8087              	.LBB614:
 8088              	.LBB612:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8089              		.loc 1 201 54 is_stmt 1 view .LVU2732
 8090              	# sieve_extend.c:201:         for (register counter_t index = range_start; index <= range_stop;) {
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8091              		.loc 1 201 9 is_stmt 0 view .LVU2733
 8092 2d88 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# _70, %sfp
 8092      78
 8093              	.LVL484:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8094              		.loc 1 201 9 view .LVU2734
 8095 2d8d 4939DB   		cmp	r11, rbx	# _70, index
 8096 2d90 0F8285F9 		jb	.L462	#,
 8096      FFFF
 8097              	.LBB613:
 8098              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8099              		.loc 1 204 74 view .LVU2735
 8100 2d96 BF010000 		mov	edi, 1	# tmp545,
 8100      00
 8101              	.LVL485:
 8102 2d9b 0F1F4400 		.p2align 4,,10
 8102      00
 8103              		.p2align 3
 8104              	.L464:
 202:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 8105              		.loc 1 202 13 is_stmt 1 view .LVU2736
 8106              	# sieve_extend.c:202:             register counter_t index_word = wordindex(index);
 202:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 8107              		.loc 1 202 32 is_stmt 0 view .LVU2737
 8108 2da0 4889D9   		mov	rcx, rbx	# index_word, index
 8109 2da3 48C1E906 		shr	rcx, 6	# index_word,
 8110              	.LVL486:
 203:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 8111              		.loc 1 203 13 is_stmt 1 view .LVU2738
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8112              		.loc 1 204 13 view .LVU2739
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8113              		.loc 1 204 19 view .LVU2740
 8114              	# sieve_extend.c:203:             register bitword_t mask = SAFE_ZERO;
 203:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 8115              		.loc 1 203 32 is_stmt 0 view .LVU2741
 8116 2da7 4531C0   		xor	r8d, r8d	# mask
 8117              	.LVL487:
 8118              	.L463:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8119              		.loc 1 204 66 is_stmt 1 view .LVU2742
GAS LISTING /tmp/ccG38KJh.s 			page 220


 8120              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8121              		.loc 1 204 74 is_stmt 0 view .LVU2743
 8122 2daa C462E1F7 		shlx	r9, rdi, rbx	# tmp544, tmp545, index
 8122      CF
 8123              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8124              		.loc 1 204 57 view .LVU2744
 8125 2daf 4C01E3   		add	rbx, r12	# index, step
 8126              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8127              		.loc 1 204 33 view .LVU2745
 8128 2db2 4989DA   		mov	r10, rbx	# tmp546, index
 8129 2db5 49C1EA06 		shr	r10, 6	# tmp546,
 8130              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8131              		.loc 1 204 71 view .LVU2746
 8132 2db9 4D09C8   		or	r8, r9	# mask, tmp544
 8133              	.LVL488:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8134              		.loc 1 204 51 is_stmt 1 view .LVU2747
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8135              		.loc 1 204 19 view .LVU2748
 8136              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8137              		.loc 1 204 13 is_stmt 0 view .LVU2749
 8138 2dbc 4C39D1   		cmp	rcx, r10	# index_word, tmp546
 8139 2dbf 0F85AB00 		jne	.L927	#,
 8139      0000
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8140              		.loc 1 204 66 is_stmt 1 view .LVU2750
 8141              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8142              		.loc 1 204 74 is_stmt 0 view .LVU2751
 8143 2dc5 C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp980, tmp545, index
 8143      D7
 8144              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8145              		.loc 1 204 57 view .LVU2752
 8146 2dca 4C01E3   		add	rbx, r12	# index, step
 8147              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8148              		.loc 1 204 33 view .LVU2753
 8149 2dcd 4889D8   		mov	rax, rbx	# tmp981, index
 8150 2dd0 48C1E806 		shr	rax, 6	# tmp981,
 8151              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8152              		.loc 1 204 71 view .LVU2754
 8153 2dd4 4909D0   		or	r8, rdx	# mask, tmp980
 8154              	.LVL489:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8155              		.loc 1 204 51 is_stmt 1 view .LVU2755
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8156              		.loc 1 204 19 view .LVU2756
 8157              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8158              		.loc 1 204 13 is_stmt 0 view .LVU2757
GAS LISTING /tmp/ccG38KJh.s 			page 221


 8159 2dd7 4839C1   		cmp	rcx, rax	# index_word, tmp981
 8160 2dda 0F859000 		jne	.L927	#,
 8160      0000
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8161              		.loc 1 204 66 is_stmt 1 view .LVU2758
 8162              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8163              		.loc 1 204 74 is_stmt 0 view .LVU2759
 8164 2de0 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp982, tmp545, index
 8164      F7
 8165              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8166              		.loc 1 204 57 view .LVU2760
 8167 2de5 4C01E3   		add	rbx, r12	# index, step
 8168              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8169              		.loc 1 204 33 view .LVU2761
 8170 2de8 4989D9   		mov	r9, rbx	# tmp983, index
 8171 2deb 49C1E906 		shr	r9, 6	# tmp983,
 8172              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8173              		.loc 1 204 71 view .LVU2762
 8174 2def 4909F0   		or	r8, rsi	# mask, tmp982
 8175              	.LVL490:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8176              		.loc 1 204 51 is_stmt 1 view .LVU2763
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8177              		.loc 1 204 19 view .LVU2764
 8178              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8179              		.loc 1 204 13 is_stmt 0 view .LVU2765
 8180 2df2 4C39C9   		cmp	rcx, r9	# index_word, tmp983
 8181 2df5 7579     		jne	.L927	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8182              		.loc 1 204 66 is_stmt 1 view .LVU2766
 8183              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8184              		.loc 1 204 74 is_stmt 0 view .LVU2767
 8185 2df7 C462E1F7 		shlx	r10, rdi, rbx	# tmp984, tmp545, index
 8185      D7
 8186              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8187              		.loc 1 204 57 view .LVU2768
 8188 2dfc 4C01E3   		add	rbx, r12	# index, step
 8189              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8190              		.loc 1 204 33 view .LVU2769
 8191 2dff 4889DA   		mov	rdx, rbx	# tmp985, index
 8192 2e02 48C1EA06 		shr	rdx, 6	# tmp985,
 8193              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8194              		.loc 1 204 71 view .LVU2770
 8195 2e06 4D09D0   		or	r8, r10	# mask, tmp984
 8196              	.LVL491:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8197              		.loc 1 204 51 is_stmt 1 view .LVU2771
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
GAS LISTING /tmp/ccG38KJh.s 			page 222


 8198              		.loc 1 204 19 view .LVU2772
 8199              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8200              		.loc 1 204 13 is_stmt 0 view .LVU2773
 8201 2e09 4839D1   		cmp	rcx, rdx	# index_word, tmp985
 8202 2e0c 7562     		jne	.L927	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8203              		.loc 1 204 66 is_stmt 1 view .LVU2774
 8204              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8205              		.loc 1 204 74 is_stmt 0 view .LVU2775
 8206 2e0e C4E2E1F7 		shlx	rax, rdi, rbx	# tmp986, tmp545, index
 8206      C7
 8207              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8208              		.loc 1 204 57 view .LVU2776
 8209 2e13 4C01E3   		add	rbx, r12	# index, step
 8210              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8211              		.loc 1 204 33 view .LVU2777
 8212 2e16 4889DE   		mov	rsi, rbx	# tmp987, index
 8213 2e19 48C1EE06 		shr	rsi, 6	# tmp987,
 8214              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8215              		.loc 1 204 71 view .LVU2778
 8216 2e1d 4909C0   		or	r8, rax	# mask, tmp986
 8217              	.LVL492:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8218              		.loc 1 204 51 is_stmt 1 view .LVU2779
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8219              		.loc 1 204 19 view .LVU2780
 8220              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8221              		.loc 1 204 13 is_stmt 0 view .LVU2781
 8222 2e20 4839F1   		cmp	rcx, rsi	# index_word, tmp987
 8223 2e23 754B     		jne	.L927	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8224              		.loc 1 204 66 is_stmt 1 view .LVU2782
 8225              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8226              		.loc 1 204 74 is_stmt 0 view .LVU2783
 8227 2e25 C462E1F7 		shlx	r9, rdi, rbx	# tmp988, tmp545, index
 8227      CF
 8228              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8229              		.loc 1 204 57 view .LVU2784
 8230 2e2a 4C01E3   		add	rbx, r12	# index, step
 8231              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8232              		.loc 1 204 33 view .LVU2785
 8233 2e2d 4989DA   		mov	r10, rbx	# tmp989, index
 8234 2e30 49C1EA06 		shr	r10, 6	# tmp989,
 8235              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8236              		.loc 1 204 71 view .LVU2786
 8237 2e34 4D09C8   		or	r8, r9	# mask, tmp988
 8238              	.LVL493:
GAS LISTING /tmp/ccG38KJh.s 			page 223


 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8239              		.loc 1 204 51 is_stmt 1 view .LVU2787
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8240              		.loc 1 204 19 view .LVU2788
 8241              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8242              		.loc 1 204 13 is_stmt 0 view .LVU2789
 8243 2e37 4C39D1   		cmp	rcx, r10	# index_word, tmp989
 8244 2e3a 7534     		jne	.L927	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8245              		.loc 1 204 66 is_stmt 1 view .LVU2790
 8246              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8247              		.loc 1 204 74 is_stmt 0 view .LVU2791
 8248 2e3c C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp990, tmp545, index
 8248      D7
 8249              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8250              		.loc 1 204 57 view .LVU2792
 8251 2e41 4C01E3   		add	rbx, r12	# index, step
 8252              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8253              		.loc 1 204 33 view .LVU2793
 8254 2e44 4889D8   		mov	rax, rbx	# tmp991, index
 8255 2e47 48C1E806 		shr	rax, 6	# tmp991,
 8256              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8257              		.loc 1 204 71 view .LVU2794
 8258 2e4b 4909D0   		or	r8, rdx	# mask, tmp990
 8259              	.LVL494:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8260              		.loc 1 204 51 is_stmt 1 view .LVU2795
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8261              		.loc 1 204 19 view .LVU2796
 8262              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8263              		.loc 1 204 13 is_stmt 0 view .LVU2797
 8264 2e4e 4839C1   		cmp	rcx, rax	# index_word, tmp991
 8265 2e51 751D     		jne	.L927	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8266              		.loc 1 204 66 is_stmt 1 view .LVU2798
 8267              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8268              		.loc 1 204 74 is_stmt 0 view .LVU2799
 8269 2e53 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp992, tmp545, index
 8269      F7
 8270              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8271              		.loc 1 204 57 view .LVU2800
 8272 2e58 4C01E3   		add	rbx, r12	# index, step
 8273              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8274              		.loc 1 204 33 view .LVU2801
 8275 2e5b 4989D9   		mov	r9, rbx	# tmp993, index
 8276 2e5e 49C1E906 		shr	r9, 6	# tmp993,
 8277              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
GAS LISTING /tmp/ccG38KJh.s 			page 224


 8278              		.loc 1 204 71 view .LVU2802
 8279 2e62 4909F0   		or	r8, rsi	# mask, tmp992
 8280              	.LVL495:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8281              		.loc 1 204 51 is_stmt 1 view .LVU2803
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8282              		.loc 1 204 19 view .LVU2804
 8283              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8284              		.loc 1 204 13 is_stmt 0 view .LVU2805
 8285 2e65 4C39C9   		cmp	rcx, r9	# index_word, tmp993
 8286 2e68 0F843CFF 		je	.L463	#,
 8286      FFFF
 8287 2e6e 6690     		.p2align 4,,10
 8288              		.p2align 3
 8289              	.L927:
 205:sieve_extend.c ****         }
 8290              		.loc 1 205 13 is_stmt 1 view .LVU2806
 8291              	# sieve_extend.c:205:             bitstorage[index_word] |= mask;
 205:sieve_extend.c ****         }
 8292              		.loc 1 205 36 is_stmt 0 view .LVU2807
 8293 2e70 4D0904CF 		or	QWORD PTR [r15+rcx*8], r8	# *_117, mask
 205:sieve_extend.c ****         }
 8294              		.loc 1 205 36 view .LVU2808
 8295              	.LBE613:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8296              		.loc 1 201 54 is_stmt 1 view .LVU2809
 8297              	# sieve_extend.c:201:         for (register counter_t index = range_start; index <= range_stop;) {
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8298              		.loc 1 201 9 is_stmt 0 view .LVU2810
 8299 2e74 4939DB   		cmp	r11, rbx	# _70, index
 8300 2e77 0F8323FF 		jnb	.L464	#,
 8300      FFFF
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8301              		.loc 1 201 9 view .LVU2811
 8302 2e7d E999F8FF 		jmp	.L462	#
 8302      FF
 8303              	.LVL496:
 8304              	.L543:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8305              		.loc 1 201 9 view .LVU2812
 8306 2e82 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 8306      30
 8307              	.LBE612:
 8308              	.LBE614:
 8309              	.LBE616:
 8310              	.LBE622:
 8311 2e87 48895424 		mov	QWORD PTR 96[rsp], rdx	# %sfp, block$pattern_start
 8311      60
 8312 2e8c 4989C6   		mov	r14, rax	# patternsize_bits, block$pattern_size
 8313              	.LVL497:
 8314              	.L450:
 501:sieve_extend.c **** }
 8315              		.loc 1 501 5 is_stmt 1 view .LVU2813
 501:sieve_extend.c **** }
 8316              		.loc 1 501 5 is_stmt 0 view .LVU2814
 8317              	.LBE627:
GAS LISTING /tmp/ccG38KJh.s 			page 225


 8318              	.LBE633:
 516:sieve_extend.c **** 
 8319              		.loc 1 516 5 is_stmt 1 view .LVU2815
 519:sieve_extend.c **** 
 8320              		.loc 1 519 5 view .LVU2816
 8321 2e8f 488B4424 		mov	rax, QWORD PTR 16[rsp]	# <retval>, %sfp
 8321      10
 8322 2e94 4989C9   		mov	r9, rcx	# tmp640, prime
 8323 2e97 488B7008 		mov	rsi, QWORD PTR 8[rax]	# _2, sieve_96->bits
 8324 2e9b 49C1E906 		shr	r9, 6	# tmp640,
 8325 2e9f 4B8D1CCF 		lea	rbx, [r15+r9*8]	# _1263,
 8326 2ea3 41BC0100 		mov	r12d, 1	# tmp643,
 8326      0000
 8327 2ea9 C442F1F7 		shlx	r11, r12, rcx	# _1265, tmp643, tmp1573
 8327      DC
 8328 2eae 48897424 		mov	QWORD PTR 112[rsp], rsi	# %sfp, _2
 8328      70
 8329              	.LVL498:
 8330              	.LBB634:
 8331              	.LBI634:
 419:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 8332              		.loc 1 419 20 view .LVU2817
 8333              	.LBB635:
 420:sieve_extend.c **** 
 8334              		.loc 1 420 5 view .LVU2818
 8335 2eb3 48895C24 		mov	QWORD PTR 40[rsp], rbx	# %sfp, _1263
 8335      28
 8336 2eb8 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, _1265
 8336      20
 8337              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 8338              		.loc 1 420 8 is_stmt 0 view .LVU2819
 8339 2ebd 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 8340 2ec1 0F86D90E 		jbe	.L1089	#,
 8340      0000
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8341              		.loc 1 422 5 is_stmt 1 view .LVU2820
 8342              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8343              		.loc 1 422 35 is_stmt 0 view .LVU2821
 8344 2ec7 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 8344      60
 8345              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8346              		.loc 1 425 37 view .LVU2822
 8347 2ecc 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 8347      70
 8348              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8349              		.loc 1 422 35 view .LVU2823
 8350 2ed1 4D8D0416 		lea	r8, [r14+rdx]	# tmp644,
 8351              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8352              		.loc 1 422 22 view .LVU2824
 8353 2ed5 4183E03F 		and	r8d, 63	# copy_bit,
 8354              	.LVL499:
 423:sieve_extend.c **** 
GAS LISTING /tmp/ccG38KJh.s 			page 226


 8355              		.loc 1 423 5 is_stmt 1 view .LVU2825
 8356              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 8357              		.loc 1 423 22 is_stmt 0 view .LVU2826
 8358 2ed9 83E23F   		and	edx, 63	# source_bit,
 8359              	.LVL500:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8360              		.loc 1 425 5 is_stmt 1 view .LVU2827
 8361              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8362              		.loc 1 425 13 is_stmt 0 view .LVU2828
 8363 2edc 4939D0   		cmp	r8, rdx	# copy_bit, source_bit
 8364              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8365              		.loc 1 425 37 view .LVU2829
 8366 2edf 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
 8366      60
 8367              	.LVL501:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8368              		.loc 1 425 37 view .LVU2830
 8369 2ee4 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8370              	.LVL502:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8371              		.loc 1 425 37 view .LVU2831
 8372 2ee7 4C89FF   		mov	rdi, r15	#, _101
 8373              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8374              		.loc 1 425 13 view .LVU2832
 8375 2eea 0F829F0C 		jb	.L1090	#,
 8375      0000
 8376              	.LVL503:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8377              		.loc 1 426 10 is_stmt 1 view .LVU2833
 8378              	# sieve_extend.c:426:     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, so
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8379              		.loc 1 426 13 is_stmt 0 view .LVU2834
 8380 2ef0 0F868C0C 		jbe	.L500	#,
 8380      0000
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8381              		.loc 1 426 37 is_stmt 1 view .LVU2835
 8382 2ef6 C5F877   		vzeroupper
 8383 2ef9 E862D7FF 		call	continuePattern_shiftright	#
 8383      FF
 8384              	.LVL504:
 8385              	.L498:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8386              		.loc 1 426 37 is_stmt 0 view .LVU2836
 8387              	.LBE635:
 8388              	.LBE634:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8389              		.loc 1 524 5 is_stmt 1 view .LVU2837
 8390              	.LBB638:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8391              		.loc 1 524 10 view .LVU2838
 8392              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8393              		.loc 1 524 83 is_stmt 0 view .LVU2839
GAS LISTING /tmp/ccG38KJh.s 			page 227


 8394 2efe 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# <retval>, %sfp
 8394      10
 8395              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8396              		.loc 1 524 38 view .LVU2840
 8397 2f03 488B5424 		mov	rdx, QWORD PTR 56[rsp]	# blocksize, %sfp
 8397      38
 8398              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8399              		.loc 1 524 83 view .LVU2841
 8400 2f08 4C8B6F08 		mov	r13, QWORD PTR 8[rdi]	# _383, sieve_96->bits
 8401              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8402              		.loc 1 524 20 view .LVU2842
 8403 2f0c 48C74424 		mov	QWORD PTR 104[rsp], 0	# %sfp,
 8403      68000000 
 8403      00
 8404              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8405              		.loc 1 524 83 view .LVU2843
 8406 2f15 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, _383
 8406      48
 8407              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8408              		.loc 1 524 38 view .LVU2844
 8409 2f1a 48FFCA   		dec	rdx	# block_stop
 8410              	.LVL505:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8411              		.loc 1 524 63 is_stmt 1 view .LVU2845
 8412              	.LBB639:
 8413              	.LBB640:
 8414              	.LBB641:
 8415              	.LBB642:
 8416              	.LBB643:
 8417              	.LBB644:
 8418              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 8419              		.loc 1 227 9 is_stmt 0 view .LVU2846
 8420 2f1d 41BD0100 		mov	r13d, 1	# tmp753,
 8420      0000
 8421              	.LBE644:
 8422              	.LBE643:
 8423              	.LBE642:
 8424              	.LBB673:
 8425              	.LBB674:
 8426              	.LBB675:
 8427              	.LBB676:
 8428              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 8429              		.loc 1 260 30 view .LVU2847
 8430 2f23 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp756
 8431 2f27 4D89FE   		mov	r14, r15	# _101, _101
 8432              	.LVL506:
 8433 2f2a 660F1F44 		.p2align 4,,10
 8433      0000
 8434              		.p2align 3
 8435              	.L504:
GAS LISTING /tmp/ccG38KJh.s 			page 228


 260:sieve_extend.c **** 
 8436              		.loc 1 260 30 view .LVU2848
 8437              	.LBE676:
 8438              	.LBE675:
 8439              	.LBE674:
 8440              	.LBE673:
 8441              	.LBE641:
 8442              	.LBE640:
 525:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 8443              		.loc 1 525 9 is_stmt 1 view .LVU2849
 8444 2f30 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# _383, %sfp
 8444      48
 8445              	.LBB737:
 8446              	.LBB738:
 8447              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8448              		.loc 1 122 11 is_stmt 0 view .LVU2850
 8449 2f35 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# _1263, %sfp
 8449      28
 8450 2f3a 4939D7   		cmp	r15, rdx	# _383, block_stop
 8451 2f3d 490F46D7 		cmovbe	rdx, r15	# _383,, block_stop
 8452              	.LVL507:
 122:sieve_extend.c ****     return index;
 8453              		.loc 1 122 11 view .LVU2851
 8454 2f41 488B4424 		mov	rax, QWORD PTR 32[rsp]	# _1265, %sfp
 8454      20
 8455 2f46 48895424 		mov	QWORD PTR 112[rsp], rdx	# %sfp, block_stop
 8455      70
 8456              	.LVL508:
 122:sieve_extend.c ****     return index;
 8457              		.loc 1 122 11 view .LVU2852
 8458              	.LBE738:
 8459              	.LBE737:
 526:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 8460              		.loc 1 526 9 is_stmt 1 view .LVU2853
 8461              	.LBB740:
 8462              	.LBI737:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 8463              		.loc 1 121 25 view .LVU2854
 8464              	.LBB739:
 122:sieve_extend.c ****     return index;
 8465              		.loc 1 122 5 view .LVU2855
 122:sieve_extend.c ****     return index;
 8466              		.loc 1 122 11 view .LVU2856
 8467 2f4b 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# index, %sfp
 8467      30
 8468              	.LVL509:
 122:sieve_extend.c ****     return index;
 8469              		.loc 1 122 11 is_stmt 0 view .LVU2857
 8470 2f50 488501   		test	QWORD PTR [rcx], rax	# MEM[(uint64_t *)prephitmp_1266], _1265
 8471 2f53 0F84B700 		je	.L501	#,
 8471      0000
 8472              	.L502:
 8473              	.LVL510:
 122:sieve_extend.c ****     return index;
 8474              		.loc 1 122 60 is_stmt 1 view .LVU2858
 8475              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccG38KJh.s 			page 229


 122:sieve_extend.c ****     return index;
 8476              		.loc 1 122 65 is_stmt 0 view .LVU2859
 8477 2f59 488D7201 		lea	rsi, 1[rdx]	# tmp759,
 8478              	.LVL511:
 8479              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8480              		.loc 1 122 23 view .LVU2860
 8481 2f5d 4989F1   		mov	r9, rsi	# tmp646, index
 8482 2f60 49C1E906 		shr	r9, 6	# tmp646,
 8483              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8484              		.loc 1 122 12 view .LVU2861
 8485 2f64 4B8B1CCE 		mov	rbx, QWORD PTR [r14+r9*8]	# *_32, *_32
 8486              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8487              		.loc 1 122 65 view .LVU2862
 8488 2f68 4889F2   		mov	rdx, rsi	# index, tmp759
 122:sieve_extend.c ****     return index;
 8489              		.loc 1 122 11 is_stmt 1 view .LVU2863
 8490 2f6b 480FA3F3 		bt	rbx, rsi	# *_32, index
 8491 2f6f 0F839B00 		jnc	.L501	#,
 8491      0000
 122:sieve_extend.c ****     return index;
 8492              		.loc 1 122 60 view .LVU2864
 8493              	.LVL512:
 8494              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8495              		.loc 1 122 65 is_stmt 0 view .LVU2865
 8496 2f75 48FFC2   		inc	rdx	# index
 8497              	.LVL513:
 122:sieve_extend.c ****     return index;
 8498              		.loc 1 122 11 is_stmt 1 view .LVU2866
 8499              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8500              		.loc 1 122 23 is_stmt 0 view .LVU2867
 8501 2f78 4989D4   		mov	r12, rdx	# tmp924, index
 8502 2f7b 49C1EC06 		shr	r12, 6	# tmp924,
 8503              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8504              		.loc 1 122 12 view .LVU2868
 8505 2f7f 4F8B1CE6 		mov	r11, QWORD PTR [r14+r12*8]	# *_32, *_32
 8506              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8507              		.loc 1 122 11 view .LVU2869
 8508 2f83 490FA3D3 		bt	r11, rdx	# *_32, index
 8509 2f87 0F838300 		jnc	.L501	#,
 8509      0000
 122:sieve_extend.c ****     return index;
 8510              		.loc 1 122 60 is_stmt 1 view .LVU2870
 8511              	.LVL514:
 8512              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8513              		.loc 1 122 65 is_stmt 0 view .LVU2871
 8514 2f8d 488D5602 		lea	rdx, 2[rsi]	# index,
 8515              	.LVL515:
 122:sieve_extend.c ****     return index;
 8516              		.loc 1 122 11 is_stmt 1 view .LVU2872
GAS LISTING /tmp/ccG38KJh.s 			page 230


 8517              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8518              		.loc 1 122 23 is_stmt 0 view .LVU2873
 8519 2f91 4989D0   		mov	r8, rdx	# tmp928, index
 8520 2f94 49C1E806 		shr	r8, 6	# tmp928,
 8521              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8522              		.loc 1 122 12 view .LVU2874
 8523 2f98 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_32, *_32
 8524              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8525              		.loc 1 122 11 view .LVU2875
 8526 2f9c 490FA3D2 		bt	r10, rdx	# *_32, index
 8527 2fa0 736E     		jnc	.L501	#,
 122:sieve_extend.c ****     return index;
 8528              		.loc 1 122 60 is_stmt 1 view .LVU2876
 8529              	.LVL516:
 8530              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8531              		.loc 1 122 65 is_stmt 0 view .LVU2877
 8532 2fa2 488D5603 		lea	rdx, 3[rsi]	# index,
 8533              	.LVL517:
 122:sieve_extend.c ****     return index;
 8534              		.loc 1 122 11 is_stmt 1 view .LVU2878
 8535              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8536              		.loc 1 122 23 is_stmt 0 view .LVU2879
 8537 2fa6 4889D7   		mov	rdi, rdx	# tmp932, index
 8538 2fa9 48C1EF06 		shr	rdi, 6	# tmp932,
 8539              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8540              		.loc 1 122 12 view .LVU2880
 8541 2fad 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# *_32, *_32
 8542              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8543              		.loc 1 122 11 view .LVU2881
 8544 2fb1 490FA3D7 		bt	r15, rdx	# *_32, index
 8545 2fb5 7359     		jnc	.L501	#,
 122:sieve_extend.c ****     return index;
 8546              		.loc 1 122 60 is_stmt 1 view .LVU2882
 8547              	.LVL518:
 8548              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8549              		.loc 1 122 65 is_stmt 0 view .LVU2883
 8550 2fb7 488D5604 		lea	rdx, 4[rsi]	# index,
 8551              	.LVL519:
 122:sieve_extend.c ****     return index;
 8552              		.loc 1 122 11 is_stmt 1 view .LVU2884
 8553              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8554              		.loc 1 122 23 is_stmt 0 view .LVU2885
 8555 2fbb 4889D1   		mov	rcx, rdx	# tmp936, index
 8556 2fbe 48C1E906 		shr	rcx, 6	# tmp936,
 8557              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8558              		.loc 1 122 12 view .LVU2886
 8559 2fc2 498B04CE 		mov	rax, QWORD PTR [r14+rcx*8]	# *_32, *_32
GAS LISTING /tmp/ccG38KJh.s 			page 231


 8560              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8561              		.loc 1 122 11 view .LVU2887
 8562 2fc6 480FA3D0 		bt	rax, rdx	# *_32, index
 8563 2fca 7344     		jnc	.L501	#,
 122:sieve_extend.c ****     return index;
 8564              		.loc 1 122 60 is_stmt 1 view .LVU2888
 8565              	.LVL520:
 8566              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8567              		.loc 1 122 65 is_stmt 0 view .LVU2889
 8568 2fcc 488D5605 		lea	rdx, 5[rsi]	# index,
 8569              	.LVL521:
 122:sieve_extend.c ****     return index;
 8570              		.loc 1 122 11 is_stmt 1 view .LVU2890
 8571              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8572              		.loc 1 122 23 is_stmt 0 view .LVU2891
 8573 2fd0 4989D1   		mov	r9, rdx	# tmp940, index
 8574 2fd3 49C1E906 		shr	r9, 6	# tmp940,
 8575              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8576              		.loc 1 122 12 view .LVU2892
 8577 2fd7 4B8B1CCE 		mov	rbx, QWORD PTR [r14+r9*8]	# *_32, *_32
 8578              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8579              		.loc 1 122 11 view .LVU2893
 8580 2fdb 480FA3D3 		bt	rbx, rdx	# *_32, index
 8581 2fdf 732F     		jnc	.L501	#,
 122:sieve_extend.c ****     return index;
 8582              		.loc 1 122 60 is_stmt 1 view .LVU2894
 8583              	.LVL522:
 8584              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8585              		.loc 1 122 65 is_stmt 0 view .LVU2895
 8586 2fe1 488D5606 		lea	rdx, 6[rsi]	# index,
 8587              	.LVL523:
 122:sieve_extend.c ****     return index;
 8588              		.loc 1 122 11 is_stmt 1 view .LVU2896
 8589              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8590              		.loc 1 122 23 is_stmt 0 view .LVU2897
 8591 2fe5 4989D4   		mov	r12, rdx	# tmp944, index
 8592 2fe8 49C1EC06 		shr	r12, 6	# tmp944,
 8593              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8594              		.loc 1 122 12 view .LVU2898
 8595 2fec 4F8B1CE6 		mov	r11, QWORD PTR [r14+r12*8]	# *_32, *_32
 8596              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8597              		.loc 1 122 11 view .LVU2899
 8598 2ff0 490FA3D3 		bt	r11, rdx	# *_32, index
 8599 2ff4 731A     		jnc	.L501	#,
 122:sieve_extend.c ****     return index;
 8600              		.loc 1 122 60 is_stmt 1 view .LVU2900
 8601              	.LVL524:
 8602              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccG38KJh.s 			page 232


 122:sieve_extend.c ****     return index;
 8603              		.loc 1 122 65 is_stmt 0 view .LVU2901
 8604 2ff6 488D5607 		lea	rdx, 7[rsi]	# index,
 8605              	.LVL525:
 122:sieve_extend.c ****     return index;
 8606              		.loc 1 122 11 is_stmt 1 view .LVU2902
 8607              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8608              		.loc 1 122 23 is_stmt 0 view .LVU2903
 8609 2ffa 4889D6   		mov	rsi, rdx	# tmp948, index
 8610 2ffd 48C1EE06 		shr	rsi, 6	# tmp948,
 8611              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8612              		.loc 1 122 12 view .LVU2904
 8613 3001 4D8B04F6 		mov	r8, QWORD PTR [r14+rsi*8]	# *_32, *_32
 8614              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8615              		.loc 1 122 11 view .LVU2905
 8616 3005 490FA3D0 		bt	r8, rdx	# *_32, index
 8617 3009 0F824AFF 		jc	.L502	#,
 8617      FFFF
 8618              	.LVL526:
 8619 300f 90       		.p2align 4,,10
 8620              		.p2align 3
 8621              	.L501:
 123:sieve_extend.c **** }
 8622              		.loc 1 123 5 is_stmt 1 view .LVU2906
 123:sieve_extend.c **** }
 8623              		.loc 1 123 5 is_stmt 0 view .LVU2907
 8624              	.LBE739:
 8625              	.LBE740:
 527:sieve_extend.c ****     } 
 8626              		.loc 1 527 9 is_stmt 1 view .LVU2908
 8627              	.LBB741:
 8628              	.LBI640:
 430:sieve_extend.c ****     counter_t prime = prime_start;
 8629              		.loc 1 430 13 view .LVU2909
 8630              	.LBB735:
 431:sieve_extend.c ****     counter_t start = 0;
 8631              		.loc 1 431 5 view .LVU2910
 432:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 8632              		.loc 1 432 5 view .LVU2911
 433:sieve_extend.c **** 
 8633              		.loc 1 433 5 view .LVU2912
 8634              	# sieve_extend.c:433:     counter_t step  = prime * 2 + 1;
 433:sieve_extend.c **** 
 8635              		.loc 1 433 15 is_stmt 0 view .LVU2913
 8636 3010 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 8636      01
 8637              	.LVL527:
 435:sieve_extend.c ****     
 8638              		.loc 1 435 5 is_stmt 1 view .LVU2914
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8639              		.loc 1 437 5 view .LVU2915
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8640              		.loc 1 437 11 view .LVU2916
 8641              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
GAS LISTING /tmp/ccG38KJh.s 			page 233


 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8642              		.loc 1 437 17 is_stmt 0 view .LVU2917
 8643 3015 4989F2   		mov	r10, rsi	# tmp652, step
 8644 3018 4C0FAFD2 		imul	r10, rdx	# tmp652, index
 8645              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8646              		.loc 1 437 11 view .LVU2918
 8647 301c 4C395424 		cmp	QWORD PTR 112[rsp], r10	# %sfp, tmp652
 8647      70
 8648 3021 0F82B002 		jb	.L540	#,
 8648      0000
 8649              	.LBB716:
 8650              	.LBB667:
 8651              	.LBB661:
 8652              	.LBB645:
 8653              	.LBB646:
 8654              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8655              		.loc 1 147 20 view .LVU2919
 8656 3027 4C8B7C24 		mov	r15, QWORD PTR 112[rsp]	# block_stop, %sfp
 8656      70
 8657              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8658              		.loc 1 167 29 view .LVU2920
 8659 302c 48C7C1FF 		mov	rcx, -1	# tmp1597,
 8659      FFFFFF
 8660 3033 4489F8   		mov	eax, r15d	# tmp654, block_stop
 8661              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8662              		.loc 1 147 20 view .LVU2921
 8663 3036 4C89FF   		mov	rdi, r15	# range_stop_word, block_stop
 8664              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8665              		.loc 1 167 29 view .LVU2922
 8666 3039 F7D0     		not	eax	# tmp654
 8667              	.LBE646:
 8668              	.LBE645:
 8669              	.LBE661:
 8670              	.LBE667:
 8671              	.LBE716:
 8672              	.LBB717:
 8673              	.LBB711:
 8674              	.LBB693:
 8675              	.LBB689:
 8676              	.LBB677:
 8677              	.LBB678:
 8678              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 8679              		.loc 1 173 21 view .LVU2923
 8680 303b 49C1EF08 		shr	r15, 8	# range_stop_vector,
 8681 303f 488B1D00 		mov	rbx, QWORD PTR global_VECTORSTEP_FASTER[rip]	# pretmp_1166, global_VECTORSTEP_FASTER
 8681      000000
 8682              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 8683              		.loc 1 185 97 view .LVU2924
 8684 3046 4D89FC   		mov	r12, r15	# _549, range_stop_vector
 8685              	.LBE678:
GAS LISTING /tmp/ccG38KJh.s 			page 234


 8686              	.LBE677:
 8687              	.LBE689:
 8688              	.LBE693:
 8689              	.LBE711:
 8690              	.LBE717:
 8691              	.LBB718:
 8692              	.LBB668:
 8693              	.LBB662:
 8694              	.LBB654:
 8695              	.LBB647:
 8696              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8697              		.loc 1 167 29 view .LVU2925
 8698 3049 C462FBF7 		shrx	r9, rcx, rax	# _641, tmp1597, tmp654
 8698      C9
 8699              	.LBE647:
 8700              	.LBE654:
 8701              	.LBE662:
 8702              	.LBE668:
 8703              	.LBE718:
 8704              	.LBB719:
 8705              	.LBB712:
 8706              	.LBB694:
 8707              	.LBB690:
 8708              	.LBB684:
 8709              	.LBB679:
 8710              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 8711              		.loc 1 173 21 view .LVU2926
 8712 304e 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, range_stop_vector
 8712      40
 8713              	.LBE679:
 8714              	.LBE684:
 8715              	.LBE690:
 8716              	.LBE694:
 8717              	.LBE712:
 8718              	.LBE719:
 8719              	.LBB720:
 8720              	.LBB669:
 8721              	.LBB663:
 8722              	.LBB655:
 8723              	.LBB648:
 8724              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8725              		.loc 1 167 29 view .LVU2927
 8726 3053 4C894C24 		mov	QWORD PTR 96[rsp], r9	# %sfp, _641
 8726      60
 8727              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8728              		.loc 1 147 20 view .LVU2928
 8729 3058 48C1EF06 		shr	rdi, 6	# range_stop_word,
 8730              	.LBE648:
 8731              	.LBE655:
 8732              	.LBE663:
 8733              	.LBE669:
 8734              	.LBE720:
 8735              	.LBB721:
GAS LISTING /tmp/ccG38KJh.s 			page 235


 8736              	.LBB713:
 8737              	.LBB695:
 8738              	.LBB691:
 8739              	.LBB685:
 8740              	.LBB680:
 8741              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 8742              		.loc 1 185 97 view .LVU2929
 8743 305c 49C1E405 		sal	r12, 5	# _549,
 8744              	.LBE680:
 8745              	.LBE685:
 8746              	.LBE691:
 8747              	.LBE695:
 8748              	.LBE713:
 8749              	.LBE721:
 8750              	.LBB722:
 8751              	.LBB670:
 8752              	.LBB664:
 8753              	.LBB656:
 8754              	.LBB649:
 8755              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8756              		.loc 1 147 20 view .LVU2930
 8757 3060 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, range_stop_word
 8757      50
 8758 3065 48895C24 		mov	QWORD PTR 88[rsp], rbx	# %sfp, pretmp_1166
 8758      58
 8759              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8760              		.loc 1 161 83 view .LVU2931
 8761 306a 498D3CFE 		lea	rdi, [r14+rdi*8]	# _626,
 8762 306e 4B8D1C26 		lea	rbx, [r14+r12]	# _1234,
 8763              	.LVL528:
 8764              		.p2align 4,,10
 8765 3072 660F1F44 		.p2align 3
 8765      0000
 8766              	.L539:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8767              		.loc 1 161 83 view .LVU2932
 8768              	.LBE649:
 8769              	.LBE656:
 8770              	.LBE664:
 8771              	.LBE670:
 8772              	.LBE722:
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 8773              		.loc 1 438 9 is_stmt 1 view .LVU2933
 8774              	# sieve_extend.c:438:         if likely(block_start >= (prime + 1)) 
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 8775              		.loc 1 438 12 is_stmt 0 view .LVU2934
 8776 3078 488B4424 		mov	rax, QWORD PTR 104[rsp]	# block_start, %sfp
 8776      68
 8777 307d 4C8D7A01 		lea	r15, 1[rdx]	# _387,
 8778 3081 4939C7   		cmp	r15, rax	# _387, block_start
 8779 3084 0F87E607 		ja	.L506	#,
 8779      0000
 439:sieve_extend.c ****         else 
 8780              		.loc 1 439 13 is_stmt 1 view .LVU2935
GAS LISTING /tmp/ccG38KJh.s 			page 236


 8781              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8782              		.loc 1 439 33 is_stmt 0 view .LVU2936
 8783 308a 4801D0   		add	rax, rdx	# _391, index
 8784              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8785              		.loc 1 439 41 view .LVU2937
 8786 308d 4C8D0C02 		lea	r9, [rdx+rax]	# tmp657,
 8787              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8788              		.loc 1 439 74 view .LVU2938
 8789 3091 31D2     		xor	edx, edx	# tmp659
 8790 3093 48F7F6   		div	rsi	# step
 8791              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8792              		.loc 1 439 19 view .LVU2939
 8793 3096 4929D1   		sub	r9, rdx	# index, tmp659
 8794              	.LVL529:
 8795              	.L507:
 443:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 8796              		.loc 1 443 9 is_stmt 1 view .LVU2940
 8797              	# sieve_extend.c:443:         if unlikely(step < VECTORSTEP_FASTER) {
 443:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 8798              		.loc 1 443 12 is_stmt 0 view .LVU2941
 8799 3099 483B7424 		cmp	rsi, QWORD PTR 88[rsp]	# step, %sfp
 8799      58
 8800 309e 0F829C02 		jb	.L1091	#,
 8800      0000
 448:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 8801              		.loc 1 448 13 is_stmt 1 view .LVU2942
 8802              	.LVL530:
 8803              	.LBB723:
 8804              	.LBI642:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8805              		.loc 1 221 20 view .LVU2943
 8806              	.LBB671:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 8807              		.loc 1 222 5 view .LVU2944
 223:sieve_extend.c **** 
 8808              		.loc 1 223 5 view .LVU2945
 8809              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 8810              		.loc 1 223 74 is_stmt 0 view .LVU2946
 8811 30a4 4989F4   		mov	r12, rsi	# tmp717, step
 8812 30a7 49C1E406 		sal	r12, 6	# tmp717,
 8813              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 8814              		.loc 1 223 21 view .LVU2947
 8815 30ab 4D01CC   		add	r12, r9	# range_stop_unique, index
 8816              	.LVL531:
 8817              	.LBB665:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8818              		.loc 1 226 10 is_stmt 1 view .LVU2948
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8819              		.loc 1 226 50 view .LVU2949
 8820              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
GAS LISTING /tmp/ccG38KJh.s 			page 237


 8821              		.loc 1 226 5 is_stmt 0 view .LVU2950
 8822 30ae 4D39E1   		cmp	r9, r12	# index, range_stop_unique
 8823 30b1 0F83CE01 		jnb	.L538	#,
 8823      0000
 8824              	.LBB657:
 8825              	.LBB650:
 8826              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8827              		.loc 1 149 135 view .LVU2951
 8828 30b7 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 8828      50
 8829              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8830              		.loc 1 149 112 view .LVU2952
 8831 30bc 4C8D14B6 		lea	r10, [rsi+rsi*4]	# tmp727,
 8832              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8833              		.loc 1 149 135 view .LVU2953
 8834 30c0 4D89C3   		mov	r11, r8	# tmp729, range_stop_word
 8835 30c3 4D29D3   		sub	r11, r10	# tmp729, tmp727
 8836              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8837              		.loc 1 149 53 view .LVU2954
 8838 30c6 4F8D1CDE 		lea	r11, [r14+r11*8]	# tmp731,
 8839 30ca 4D39D0   		cmp	r8, r10	# range_stop_word, tmp727
 8840 30cd 4889F1   		mov	rcx, rsi	# _1212, step
 8841 30d0 4D0F46DE 		cmovbe	r11, r14	# _101,, fast_loop_ptr
 8842 30d4 48C1E104 		sal	rcx, 4	# _1212,
 8843 30d8 48894C24 		mov	QWORD PTR 120[rsp], rcx	# %sfp, _1212
 8843      78
 8844              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8845              		.loc 1 154 38 view .LVU2955
 8846 30dd 488D14F5 		lea	rdx, 0[0+rsi*8]	# _608,
 8846      00000000 
 8847 30e5 49C1E203 		sal	r10, 3	# tmp735,
 8848 30e9 0F1F8000 		.p2align 4,,10
 8848      000000
 8849              		.p2align 3
 8850              	.L537:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8851              		.loc 1 154 38 view .LVU2956
 8852              	.LBE650:
 8853              	.LBE657:
 227:sieve_extend.c ****     }
 8854              		.loc 1 227 9 is_stmt 1 view .LVU2957
 8855 30f0 4C89C8   		mov	rax, r9	# tmp738, index
 8856 30f3 48C1E806 		shr	rax, 6	# tmp738,
 8857              	.LBB658:
 8858              	.LBB651:
 8859              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8860              		.loc 1 148 78 is_stmt 0 view .LVU2958
 8861 30f7 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 8862              	.LBE651:
 8863              	.LBE658:
 8864              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
GAS LISTING /tmp/ccG38KJh.s 			page 238


 227:sieve_extend.c ****     }
 8865              		.loc 1 227 9 view .LVU2959
 8866 30fb C4C2B1F7 		shlx	rcx, r13, r9	# _593, tmp753, index
 8866      CD
 8867              	.LVL532:
 8868              	.LBB659:
 8869              	.LBI645:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 8870              		.loc 1 146 20 is_stmt 1 view .LVU2960
 8871              	.LBB652:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8872              		.loc 1 147 4 view .LVU2961
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8873              		.loc 1 148 4 view .LVU2962
 149:sieve_extend.c **** 
 8874              		.loc 1 149 4 view .LVU2963
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8875              		.loc 1 153 10 view .LVU2964
 8876 3100 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 8877 3103 0F830701 		jnb	.L532	#,
 8877      0000
 8878 3109 4C8B4424 		mov	r8, QWORD PTR 120[rsp]	# _1212, %sfp
 8878      78
 8879 310e 4901C0   		add	r8, rax	# ivtmp.509, index_ptr
 8880              	.L533:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8881              		.loc 1 154 8 view .LVU2965
 8882              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8883              		.loc 1 154 19 is_stmt 0 view .LVU2966
 8884 3111 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8885              		.loc 1 154 29 is_stmt 1 view .LVU2967
 8886              	.LVL533:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8887              		.loc 1 155 8 view .LVU2968
 8888              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8889              		.loc 1 155 19 is_stmt 0 view .LVU2969
 8890 3114 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8891              		.loc 1 155 29 is_stmt 1 view .LVU2970
 8892              	.LVL534:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8893              		.loc 1 156 8 view .LVU2971
 8894              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8895              		.loc 1 156 19 is_stmt 0 view .LVU2972
 8896 3118 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8897              		.loc 1 156 29 is_stmt 1 view .LVU2973
 8898              	.LVL535:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8899              		.loc 1 157 8 view .LVU2974
 8900              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8901              		.loc 1 157 19 is_stmt 0 view .LVU2975
GAS LISTING /tmp/ccG38KJh.s 			page 239


 8902 311b 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8903              		.loc 1 157 29 is_stmt 1 view .LVU2976
 8904              	.LVL536:
 158:sieve_extend.c ****    }
 8905              		.loc 1 158 8 view .LVU2977
 8906 311f 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 8907              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8908              		.loc 1 158 19 is_stmt 0 view .LVU2978
 8909 3122 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8910              		.loc 1 158 29 is_stmt 1 view .LVU2979
 8911 3126 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8912              	.LVL537:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8913              		.loc 1 153 10 view .LVU2980
 8914 3129 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8915 312c 0F86DE00 		jbe	.L532	#,
 8915      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8916              		.loc 1 154 8 view .LVU2981
 8917              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8918              		.loc 1 154 19 is_stmt 0 view .LVU2982
 8919 3132 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8920              		.loc 1 154 29 is_stmt 1 view .LVU2983
 8921              	.LVL538:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8922              		.loc 1 155 8 view .LVU2984
 8923              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8924              		.loc 1 155 19 is_stmt 0 view .LVU2985
 8925 3135 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8926              		.loc 1 155 29 is_stmt 1 view .LVU2986
 8927              	.LVL539:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8928              		.loc 1 156 8 view .LVU2987
 8929              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8930              		.loc 1 156 19 is_stmt 0 view .LVU2988
 8931 3139 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8932              		.loc 1 156 29 is_stmt 1 view .LVU2989
 8933              	.LVL540:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8934              		.loc 1 157 8 view .LVU2990
 8935              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8936              		.loc 1 157 19 is_stmt 0 view .LVU2991
 8937 313c 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8938              		.loc 1 157 29 is_stmt 1 view .LVU2992
 8939              	.LVL541:
 158:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 240


 8940              		.loc 1 158 8 view .LVU2993
 8941 3140 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 8942              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8943              		.loc 1 158 19 is_stmt 0 view .LVU2994
 8944 3143 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8945              		.loc 1 158 29 is_stmt 1 view .LVU2995
 8946 3147 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8947              	.LVL542:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8948              		.loc 1 153 10 view .LVU2996
 8949 314a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8950 314d 0F86BD00 		jbe	.L532	#,
 8950      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8951              		.loc 1 154 8 view .LVU2997
 8952              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8953              		.loc 1 154 19 is_stmt 0 view .LVU2998
 8954 3153 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8955              		.loc 1 154 29 is_stmt 1 view .LVU2999
 8956              	.LVL543:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8957              		.loc 1 155 8 view .LVU3000
 8958              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8959              		.loc 1 155 19 is_stmt 0 view .LVU3001
 8960 3156 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8961              		.loc 1 155 29 is_stmt 1 view .LVU3002
 8962              	.LVL544:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8963              		.loc 1 156 8 view .LVU3003
 8964              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8965              		.loc 1 156 19 is_stmt 0 view .LVU3004
 8966 315a 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8967              		.loc 1 156 29 is_stmt 1 view .LVU3005
 8968              	.LVL545:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8969              		.loc 1 157 8 view .LVU3006
 8970              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8971              		.loc 1 157 19 is_stmt 0 view .LVU3007
 8972 315d 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8973              		.loc 1 157 29 is_stmt 1 view .LVU3008
 8974              	.LVL546:
 158:sieve_extend.c ****    }
 8975              		.loc 1 158 8 view .LVU3009
 8976 3161 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 8977              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8978              		.loc 1 158 19 is_stmt 0 view .LVU3010
GAS LISTING /tmp/ccG38KJh.s 			page 241


 8979 3164 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8980              		.loc 1 158 29 is_stmt 1 view .LVU3011
 8981 3168 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8982              	.LVL547:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8983              		.loc 1 153 10 view .LVU3012
 8984 316b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8985 316e 0F869C00 		jbe	.L532	#,
 8985      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8986              		.loc 1 154 8 view .LVU3013
 8987              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8988              		.loc 1 154 19 is_stmt 0 view .LVU3014
 8989 3174 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8990              		.loc 1 154 29 is_stmt 1 view .LVU3015
 8991              	.LVL548:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8992              		.loc 1 155 8 view .LVU3016
 8993              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8994              		.loc 1 155 19 is_stmt 0 view .LVU3017
 8995 3177 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8996              		.loc 1 155 29 is_stmt 1 view .LVU3018
 8997              	.LVL549:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8998              		.loc 1 156 8 view .LVU3019
 8999              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9000              		.loc 1 156 19 is_stmt 0 view .LVU3020
 9001 317b 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9002              		.loc 1 156 29 is_stmt 1 view .LVU3021
 9003              	.LVL550:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9004              		.loc 1 157 8 view .LVU3022
 9005              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9006              		.loc 1 157 19 is_stmt 0 view .LVU3023
 9007 317e 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9008              		.loc 1 157 29 is_stmt 1 view .LVU3024
 9009              	.LVL551:
 158:sieve_extend.c ****    }
 9010              		.loc 1 158 8 view .LVU3025
 9011 3182 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 9012              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 9013              		.loc 1 158 19 is_stmt 0 view .LVU3026
 9014 3185 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 9015              		.loc 1 158 29 is_stmt 1 view .LVU3027
 9016 3189 4C01D0   		add	rax, r10	# index_ptr, tmp735
 9017              	.LVL552:
GAS LISTING /tmp/ccG38KJh.s 			page 242


 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9018              		.loc 1 153 10 view .LVU3028
 9019 318c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9020 318f 767F     		jbe	.L532	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9021              		.loc 1 154 8 view .LVU3029
 9022              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9023              		.loc 1 154 19 is_stmt 0 view .LVU3030
 9024 3191 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9025              		.loc 1 154 29 is_stmt 1 view .LVU3031
 9026              	.LVL553:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9027              		.loc 1 155 8 view .LVU3032
 9028              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9029              		.loc 1 155 19 is_stmt 0 view .LVU3033
 9030 3194 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9031              		.loc 1 155 29 is_stmt 1 view .LVU3034
 9032              	.LVL554:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9033              		.loc 1 156 8 view .LVU3035
 9034              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9035              		.loc 1 156 19 is_stmt 0 view .LVU3036
 9036 3198 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9037              		.loc 1 156 29 is_stmt 1 view .LVU3037
 9038              	.LVL555:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9039              		.loc 1 157 8 view .LVU3038
 9040              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9041              		.loc 1 157 19 is_stmt 0 view .LVU3039
 9042 319b 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9043              		.loc 1 157 29 is_stmt 1 view .LVU3040
 9044              	.LVL556:
 158:sieve_extend.c ****    }
 9045              		.loc 1 158 8 view .LVU3041
 9046 319f 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 9047              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 9048              		.loc 1 158 19 is_stmt 0 view .LVU3042
 9049 31a2 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 9050              		.loc 1 158 29 is_stmt 1 view .LVU3043
 9051 31a6 4C01D0   		add	rax, r10	# index_ptr, tmp735
 9052              	.LVL557:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9053              		.loc 1 153 10 view .LVU3044
 9054 31a9 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9055 31ac 7662     		jbe	.L532	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9056              		.loc 1 154 8 view .LVU3045
GAS LISTING /tmp/ccG38KJh.s 			page 243


 9057              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9058              		.loc 1 154 19 is_stmt 0 view .LVU3046
 9059 31ae 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9060              		.loc 1 154 29 is_stmt 1 view .LVU3047
 9061              	.LVL558:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9062              		.loc 1 155 8 view .LVU3048
 9063              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9064              		.loc 1 155 19 is_stmt 0 view .LVU3049
 9065 31b1 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9066              		.loc 1 155 29 is_stmt 1 view .LVU3050
 9067              	.LVL559:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9068              		.loc 1 156 8 view .LVU3051
 9069              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9070              		.loc 1 156 19 is_stmt 0 view .LVU3052
 9071 31b5 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9072              		.loc 1 156 29 is_stmt 1 view .LVU3053
 9073              	.LVL560:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9074              		.loc 1 157 8 view .LVU3054
 9075              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9076              		.loc 1 157 19 is_stmt 0 view .LVU3055
 9077 31b8 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9078              		.loc 1 157 29 is_stmt 1 view .LVU3056
 9079              	.LVL561:
 158:sieve_extend.c ****    }
 9080              		.loc 1 158 8 view .LVU3057
 9081 31bc 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 9082              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 9083              		.loc 1 158 19 is_stmt 0 view .LVU3058
 9084 31bf 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 9085              		.loc 1 158 29 is_stmt 1 view .LVU3059
 9086 31c3 4C01D0   		add	rax, r10	# index_ptr, tmp735
 9087              	.LVL562:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9088              		.loc 1 153 10 view .LVU3060
 9089 31c6 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9090 31c9 7645     		jbe	.L532	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9091              		.loc 1 154 8 view .LVU3061
 9092              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9093              		.loc 1 154 19 is_stmt 0 view .LVU3062
 9094 31cb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9095              		.loc 1 154 29 is_stmt 1 view .LVU3063
GAS LISTING /tmp/ccG38KJh.s 			page 244


 9096              	.LVL563:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9097              		.loc 1 155 8 view .LVU3064
 9098              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9099              		.loc 1 155 19 is_stmt 0 view .LVU3065
 9100 31ce 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9101              		.loc 1 155 29 is_stmt 1 view .LVU3066
 9102              	.LVL564:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9103              		.loc 1 156 8 view .LVU3067
 9104              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9105              		.loc 1 156 19 is_stmt 0 view .LVU3068
 9106 31d2 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9107              		.loc 1 156 29 is_stmt 1 view .LVU3069
 9108              	.LVL565:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9109              		.loc 1 157 8 view .LVU3070
 9110              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9111              		.loc 1 157 19 is_stmt 0 view .LVU3071
 9112 31d5 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9113              		.loc 1 157 29 is_stmt 1 view .LVU3072
 9114              	.LVL566:
 158:sieve_extend.c ****    }
 9115              		.loc 1 158 8 view .LVU3073
 9116 31d9 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 9117              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 9118              		.loc 1 158 19 is_stmt 0 view .LVU3074
 9119 31dc 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 9120              		.loc 1 158 29 is_stmt 1 view .LVU3075
 9121 31e0 4C01D0   		add	rax, r10	# index_ptr, tmp735
 9122              	.LVL567:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9123              		.loc 1 153 10 view .LVU3076
 9124 31e3 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9125 31e6 7628     		jbe	.L532	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9126              		.loc 1 154 8 view .LVU3077
 9127              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9128              		.loc 1 154 19 is_stmt 0 view .LVU3078
 9129 31e8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9130              		.loc 1 154 29 is_stmt 1 view .LVU3079
 9131              	.LVL568:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9132              		.loc 1 155 8 view .LVU3080
 9133              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9134              		.loc 1 155 19 is_stmt 0 view .LVU3081
GAS LISTING /tmp/ccG38KJh.s 			page 245


 9135 31eb 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9136              		.loc 1 155 29 is_stmt 1 view .LVU3082
 9137              	.LVL569:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9138              		.loc 1 156 8 view .LVU3083
 9139              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9140              		.loc 1 156 19 is_stmt 0 view .LVU3084
 9141 31ef 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9142              		.loc 1 156 29 is_stmt 1 view .LVU3085
 9143              	.LVL570:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9144              		.loc 1 157 8 view .LVU3086
 9145              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9146              		.loc 1 157 19 is_stmt 0 view .LVU3087
 9147 31f2 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9148              		.loc 1 157 29 is_stmt 1 view .LVU3088
 9149              	.LVL571:
 158:sieve_extend.c ****    }
 9150              		.loc 1 158 8 view .LVU3089
 9151 31f6 4D01D0   		add	r8, r10	# ivtmp.509, tmp735
 9152              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 9153              		.loc 1 158 19 is_stmt 0 view .LVU3090
 9154 31f9 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 9155              		.loc 1 158 29 is_stmt 1 view .LVU3091
 9156 31fd 4C01D0   		add	rax, r10	# index_ptr, tmp735
 9157              	.LVL572:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9158              		.loc 1 153 10 view .LVU3092
 9159 3200 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9160 3203 0F8708FF 		ja	.L533	#,
 9160      FFFF
 9161 3209 0F1F8000 		.p2align 4,,10
 9161      000000
 9162              		.p2align 3
 9163              	.L532:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9164              		.loc 1 161 4 view .LVU3093
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9165              		.loc 1 162 4 view .LVU3094
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9166              		.loc 1 162 10 view .LVU3095
 9167 3210 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9168 3213 735B     		jnb	.L534	#,
 9169              	.L535:
 163:sieve_extend.c ****    }
 9170              		.loc 1 163 8 view .LVU3096
 9171              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9172              		.loc 1 163 19 is_stmt 0 view .LVU3097
 9173 3215 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
GAS LISTING /tmp/ccG38KJh.s 			page 246


 163:sieve_extend.c ****    }
 9174              		.loc 1 163 29 is_stmt 1 view .LVU3098
 9175              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9176              		.loc 1 163 38 is_stmt 0 view .LVU3099
 9177 3218 4801D0   		add	rax, rdx	# index_ptr, _608
 9178              	.LVL573:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9179              		.loc 1 162 10 is_stmt 1 view .LVU3100
 9180 321b 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9181 321e 7350     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9182              		.loc 1 163 8 view .LVU3101
 9183              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9184              		.loc 1 163 19 is_stmt 0 view .LVU3102
 9185 3220 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9186              		.loc 1 163 29 is_stmt 1 view .LVU3103
 9187              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9188              		.loc 1 163 38 is_stmt 0 view .LVU3104
 9189 3223 4801D0   		add	rax, rdx	# index_ptr, _608
 9190              	.LVL574:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9191              		.loc 1 162 10 is_stmt 1 view .LVU3105
 9192 3226 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9193 3229 7345     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9194              		.loc 1 163 8 view .LVU3106
 9195              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9196              		.loc 1 163 19 is_stmt 0 view .LVU3107
 9197 322b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9198              		.loc 1 163 29 is_stmt 1 view .LVU3108
 9199              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9200              		.loc 1 163 38 is_stmt 0 view .LVU3109
 9201 322e 4801D0   		add	rax, rdx	# index_ptr, _608
 9202              	.LVL575:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9203              		.loc 1 162 10 is_stmt 1 view .LVU3110
 9204 3231 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9205 3234 733A     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9206              		.loc 1 163 8 view .LVU3111
 9207              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9208              		.loc 1 163 19 is_stmt 0 view .LVU3112
 9209 3236 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9210              		.loc 1 163 29 is_stmt 1 view .LVU3113
 9211              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9212              		.loc 1 163 38 is_stmt 0 view .LVU3114
 9213 3239 4801D0   		add	rax, rdx	# index_ptr, _608
GAS LISTING /tmp/ccG38KJh.s 			page 247


 9214              	.LVL576:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9215              		.loc 1 162 10 is_stmt 1 view .LVU3115
 9216 323c 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9217 323f 732F     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9218              		.loc 1 163 8 view .LVU3116
 9219              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9220              		.loc 1 163 19 is_stmt 0 view .LVU3117
 9221 3241 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9222              		.loc 1 163 29 is_stmt 1 view .LVU3118
 9223              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9224              		.loc 1 163 38 is_stmt 0 view .LVU3119
 9225 3244 4801D0   		add	rax, rdx	# index_ptr, _608
 9226              	.LVL577:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9227              		.loc 1 162 10 is_stmt 1 view .LVU3120
 9228 3247 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9229 324a 7324     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9230              		.loc 1 163 8 view .LVU3121
 9231              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9232              		.loc 1 163 19 is_stmt 0 view .LVU3122
 9233 324c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9234              		.loc 1 163 29 is_stmt 1 view .LVU3123
 9235              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9236              		.loc 1 163 38 is_stmt 0 view .LVU3124
 9237 324f 4801D0   		add	rax, rdx	# index_ptr, _608
 9238              	.LVL578:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9239              		.loc 1 162 10 is_stmt 1 view .LVU3125
 9240 3252 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9241 3255 7319     		jnb	.L534	#,
 163:sieve_extend.c ****    }
 9242              		.loc 1 163 8 view .LVU3126
 9243              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9244              		.loc 1 163 19 is_stmt 0 view .LVU3127
 9245 3257 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9246              		.loc 1 163 29 is_stmt 1 view .LVU3128
 9247              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9248              		.loc 1 163 38 is_stmt 0 view .LVU3129
 9249 325a 4801D0   		add	rax, rdx	# index_ptr, _608
 9250              	.LVL579:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9251              		.loc 1 162 10 is_stmt 1 view .LVU3130
 9252 325d 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9253 3260 730E     		jnb	.L534	#,
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 248


 9254              		.loc 1 163 8 view .LVU3131
 9255              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9256              		.loc 1 163 19 is_stmt 0 view .LVU3132
 9257 3262 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9258              		.loc 1 163 29 is_stmt 1 view .LVU3133
 9259              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9260              		.loc 1 163 38 is_stmt 0 view .LVU3134
 9261 3265 4801D0   		add	rax, rdx	# index_ptr, _608
 9262              	.LVL580:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9263              		.loc 1 162 10 is_stmt 1 view .LVU3135
 9264 3268 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9265 326b 72A8     		jb	.L535	#,
 9266 326d 0F1F00   		.p2align 4,,10
 9267              		.p2align 3
 9268              	.L534:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9269              		.loc 1 166 4 view .LVU3136
 9270              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9271              		.loc 1 166 7 is_stmt 0 view .LVU3137
 9272 3270 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9273 3273 0F84B700 		je	.L1092	#,
 9273      0000
 9274              	.LVL581:
 9275              	.L536:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9276              		.loc 1 166 7 view .LVU3138
 9277              	.LBE652:
 9278              	.LBE659:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9279              		.loc 1 226 77 is_stmt 1 view .LVU3139
 9280              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9281              		.loc 1 226 83 is_stmt 0 view .LVU3140
 9282 3279 4901F1   		add	r9, rsi	# index, step
 9283              	.LVL582:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9284              		.loc 1 226 50 is_stmt 1 view .LVU3141
 9285              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9286              		.loc 1 226 5 is_stmt 0 view .LVU3142
 9287 327c 4D39CC   		cmp	r12, r9	# range_stop_unique, index
 9288 327f 0F876BFE 		ja	.L537	#,
 9288      FFFF
 9289              	.LVL583:
 9290              	.L538:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9291              		.loc 1 226 5 view .LVU3143
 9292              	.LBE665:
 9293              	.LBE671:
 9294              	.LBE723:
 449:sieve_extend.c ****         }
 9295              		.loc 1 449 13 is_stmt 1 view .LVU3144
GAS LISTING /tmp/ccG38KJh.s 			page 249


 9296              	.LBB724:
 9297              	.LBI724:
 127:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 9298              		.loc 1 127 25 view .LVU3145
 9299              	.LBB725:
 128:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9300              		.loc 1 128 4 view .LVU3146
 9301              	# sieve_extend.c:129:    register counter_t index_word = wordindex(index);
 129:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9302              		.loc 1 129 23 is_stmt 0 view .LVU3147
 9303 3285 4D89FC   		mov	r12, r15	# index_word, _387
 9304 3288 49C1EC06 		shr	r12, 6	# index_word,
 9305              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9306              		.loc 1 130 90 view .LVU3148
 9307 328c 4F8B14E6 		mov	r10, QWORD PTR [r14+r12*8]	# *_564, *_564
 9308              	# sieve_extend.c:128:    const bitshift_t index_bit  = bitindex_calc(index);
 128:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9309              		.loc 1 128 21 view .LVU3149
 9310 3290 4D89F9   		mov	r9, r15	# index_bit, _387
 9311 3293 4183E13F 		and	r9d, 63	# index_bit,
 9312              	.LVL584:
 129:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9313              		.loc 1 129 4 is_stmt 1 view .LVU3150
 130:sieve_extend.c ****    index += distance;
 9314              		.loc 1 130 4 view .LVU3151
 9315              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9316              		.loc 1 130 24 is_stmt 0 view .LVU3152
 9317 3297 4531DB   		xor	r11d, r11d	# distance
 9318              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9319              		.loc 1 130 90 view .LVU3153
 9320 329a C4C2B3F7 		shrx	rdx, r10, r9	# tmp720, *_564, index_bit
 9320      D2
 9321              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9322              		.loc 1 130 65 view .LVU3154
 9323 329f 48F7D2   		not	rdx	# tmp722
 9324              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9325              		.loc 1 130 24 view .LVU3155
 9326 32a2 F34C0FBC 		tzcnt	r11, rdx	# distance, tmp722
 9326      DA
 9327              	.LVL585:
 131:sieve_extend.c ****    distance += index_bit;
 9328              		.loc 1 131 4 is_stmt 1 view .LVU3156
 9329              	# sieve_extend.c:131:    index += distance;
 131:sieve_extend.c ****    distance += index_bit;
 9330              		.loc 1 131 10 is_stmt 0 view .LVU3157
 9331 32a7 4B8D141F 		lea	rdx, [r15+r11]	# index,
 9332              	.LVL586:
 132:sieve_extend.c **** 
 9333              		.loc 1 132 4 is_stmt 1 view .LVU3158
 134:sieve_extend.c ****        index_word++;
 9334              		.loc 1 134 4 view .LVU3159
 134:sieve_extend.c ****        index_word++;
GAS LISTING /tmp/ccG38KJh.s 			page 250


 9335              		.loc 1 134 10 view .LVU3160
 9336              	# sieve_extend.c:132:    distance += index_bit;
 132:sieve_extend.c **** 
 9337              		.loc 1 132 13 is_stmt 0 view .LVU3161
 9338 32ab 4D01CB   		add	r11, r9	# distance, index_bit
 9339              	.LVL587:
 9340              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9341              		.loc 1 130 77 view .LVU3162
 9342 32ae 4A8D34E5 		lea	rsi, 0[0+r12*8]	# _563,
 9342      00000000 
 9343              	.LVL588:
 9344              	# sieve_extend.c:134:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 134:sieve_extend.c ****        index_word++;
 9345              		.loc 1 134 10 view .LVU3163
 9346 32b6 4983FB40 		cmp	r11, 64	# distance,
 9347 32ba 0F849805 		je	.L1093	#,
 9347      0000
 9348              	.LVL589:
 9349              	.L514:
 134:sieve_extend.c ****        index_word++;
 9350              		.loc 1 134 10 view .LVU3164
 9351              	.LBE725:
 9352              	.LBE724:
 452:sieve_extend.c ****     }
 9353              		.loc 1 452 9 is_stmt 1 view .LVU3165
 9354              	# sieve_extend.c:452:         step  = prime * 2 + 1;
 452:sieve_extend.c ****     }
 9355              		.loc 1 452 15 is_stmt 0 view .LVU3166
 9356 32c0 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 9356      01
 9357              	.LVL590:
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9358              		.loc 1 437 11 is_stmt 1 view .LVU3167
 9359              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9360              		.loc 1 437 17 is_stmt 0 view .LVU3168
 9361 32c5 4989D2   		mov	r10, rdx	# tmp746, index
 9362 32c8 4C0FAFD6 		imul	r10, rsi	# tmp746, step
 9363              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9364              		.loc 1 437 11 view .LVU3169
 9365 32cc 4C395424 		cmp	QWORD PTR 112[rsp], r10	# %sfp, tmp746
 9365      70
 9366 32d1 0F83A1FD 		jnb	.L539	#,
 9366      FFFF
 9367              	.LVL591:
 9368              	.L540:
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9369              		.loc 1 437 11 view .LVU3170
 9370              	.LBE735:
 9371              	.LBE741:
 9372              	.LBE639:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9373              		.loc 1 524 91 is_stmt 1 view .LVU3171
 9374              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccG38KJh.s 			page 251


 9375              		.loc 1 524 103 is_stmt 0 view .LVU3172
 9376 32d7 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	# blocksize, %sfp
 9376      38
 9377              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9378              		.loc 1 524 128 view .LVU3173
 9379 32dc 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# block_stop, %sfp
 9379      70
 9380              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9381              		.loc 1 524 103 view .LVU3174
 9382 32e1 48017C24 		add	QWORD PTR 104[rsp], rdi	# %sfp, blocksize
 9382      68
 9383              	.LVL592:
 9384              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9385              		.loc 1 524 128 view .LVU3175
 9386 32e6 4801FA   		add	rdx, rdi	# block_stop, blocksize
 9387              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9388              		.loc 1 524 103 view .LVU3176
 9389 32e9 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# block_start, %sfp
 9389      68
 9390              	.LVL593:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9391              		.loc 1 524 63 is_stmt 1 view .LVU3177
 9392              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9393              		.loc 1 524 5 is_stmt 0 view .LVU3178
 9394 32ee 483B5C24 		cmp	rbx, QWORD PTR 72[rsp]	# block_start, %sfp
 9394      48
 9395 32f3 0F8637FC 		jbe	.L504	#,
 9395      FFFF
 9396              	.LBE638:
 9397              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 9398              		.loc 1 532 1 view .LVU3179
 9399 32f9 488B8424 		mov	rax, QWORD PTR 184[rsp]	# tmp1489, D.7565
 9399      B8000000 
 9400 3301 64483304 		xor	rax, QWORD PTR fs:40	# tmp1489, MEM[(<address-space-1> long unsigned int *)40B]
 9400      25280000 
 9400      00
 9401 330a 0F85CA0B 		jne	.L1094	#,
 9401      0000
 9402 3310 488B4424 		mov	rax, QWORD PTR 16[rsp]	#, %sfp
 9402      10
 9403 3315 C5F877   		vzeroupper
 9404 3318 488D65D8 		lea	rsp, -40[rbp]	#,
 9405              	.LVL594:
 532:sieve_extend.c **** 
 9406              		.loc 1 532 1 view .LVU3180
 9407 331c 5B       		pop	rbx	#
 9408              	.LVL595:
 532:sieve_extend.c **** 
 9409              		.loc 1 532 1 view .LVU3181
 9410 331d 415C     		pop	r12	#
 9411 331f 415D     		pop	r13	#
GAS LISTING /tmp/ccG38KJh.s 			page 252


 9412 3321 415E     		pop	r14	#
 9413              	.LVL596:
 532:sieve_extend.c **** 
 9414              		.loc 1 532 1 view .LVU3182
 9415 3323 415F     		pop	r15	#
 9416 3325 5D       		pop	rbp	#
 9417              		.cfi_remember_state
 9418              		.cfi_def_cfa 7, 8
 9419              	.LVL597:
 532:sieve_extend.c **** 
 9420              		.loc 1 532 1 view .LVU3183
 9421 3326 C3       		ret	
 9422              	.LVL598:
 9423 3327 660F1F84 		.p2align 4,,10
 9423      00000000 
 9423      00
 9424              		.p2align 3
 9425              	.L1092:
 9426              		.cfi_restore_state
 9427              	.LBB744:
 9428              	.LBB743:
 9429              	.LBB742:
 9430              	.LBB736:
 9431              	.LBB727:
 9432              	.LBB672:
 9433              	.LBB666:
 9434              	.LBB660:
 9435              	.LBB653:
 167:sieve_extend.c ****    }
 9436              		.loc 1 167 7 is_stmt 1 view .LVU3184
 9437              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 9438              		.loc 1 167 27 is_stmt 0 view .LVU3185
 9439 3330 48234C24 		and	rcx, QWORD PTR 96[rsp]	# tmp740, %sfp
 9439      60
 9440              	.LVL599:
 9441              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 9442              		.loc 1 167 18 view .LVU3186
 9443 3335 48090F   		or	QWORD PTR [rdi], rcx	# *index_ptr_823, tmp740
 9444 3338 E93CFFFF 		jmp	.L536	#
 9444      FF
 9445              	.LVL600:
 9446 333d 0F1F00   		.p2align 4,,10
 9447              		.p2align 3
 9448              	.L1091:
 167:sieve_extend.c ****    }
 9449              		.loc 1 167 18 view .LVU3187
 9450              	.LBE653:
 9451              	.LBE660:
 9452              	.LBE666:
 9453              	.LBE672:
 9454              	.LBE727:
 444:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 9455              		.loc 1 444 13 is_stmt 1 view .LVU3188
 9456              	.LBB728:
 9457              	.LBI673:
GAS LISTING /tmp/ccG38KJh.s 			page 253


 231:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 9458              		.loc 1 231 20 view .LVU3189
 9459              	.LBB714:
 232:sieve_extend.c **** 
 9460              		.loc 1 232 5 view .LVU3190
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 9461              		.loc 1 234 5 view .LVU3191
 9462              	# sieve_extend.c:234:     counter_t range_start_atvector = vectorstart(range_start);
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 9463              		.loc 1 234 15 is_stmt 0 view .LVU3192
 9464 3340 4C89C8   		mov	rax, r9	# range_start_atvector, index
 9465 3343 30C0     		xor	al, al	# range_start_atvector
 9466              	.LVL601:
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 9467              		.loc 1 235 5 is_stmt 1 view .LVU3193
 9468              	# sieve_extend.c:235:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 9469              		.loc 1 235 8 is_stmt 0 view .LVU3194
 9470 3345 4C8D0406 		lea	r8, [rsi+rax]	# tmp662,
 9471 3349 4D39C1   		cmp	r9, r8	# index, tmp662
 9472 334c 0F86EE00 		jbe	.L509	#,
 9472      0000
 236:sieve_extend.c **** 
 9473              		.loc 1 236 9 is_stmt 1 view .LVU3195
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 9474              		.loc 1 238 9 view .LVU3196
 9475              	# sieve_extend.c:238:         range_start_atvector += VECTOR_SIZE; // find next vector
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 9476              		.loc 1 238 30 is_stmt 0 view .LVU3197
 9477 3352 48050001 		add	rax, 256	# range_start_atvector,
 9477      0000
 9478              	.LVL602:
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 9479              		.loc 1 239 9 is_stmt 1 view .LVU3198
 9480              	# sieve_extend.c:239:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 9481              		.loc 1 239 12 is_stmt 0 view .LVU3199
 9482 3358 48394424 		cmp	QWORD PTR 112[rsp], rax	# %sfp, range_start_atvector
 9482      70
 9483 335d 0F820F07 		jb	.L510	#,
 9483      0000
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9484              		.loc 1 245 16 is_stmt 1 view .LVU3200
 9485              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9486              		.loc 1 245 9 is_stmt 0 view .LVU3201
 9487 3363 4939C1   		cmp	r9, rax	# index, range_start_atvector
 9488 3366 0F87D400 		ja	.L509	#,
 9488      0000
 9489              	.L511:
 246:sieve_extend.c ****     }
 9490              		.loc 1 246 13 is_stmt 1 view .LVU3202
 9491              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9492              		.loc 1 246 53 is_stmt 0 view .LVU3203
 9493 336c 4D89CC   		mov	r12, r9	# tmp673, index
 9494              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccG38KJh.s 			page 254


 246:sieve_extend.c ****     }
 9495              		.loc 1 246 56 view .LVU3204
 9496 336f C442B1F7 		shlx	r10, r13, r9	# tmp676, tmp753, index
 9496      D5
 9497              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9498              		.loc 1 246 53 view .LVU3205
 9499 3374 49C1EC06 		shr	r12, 6	# tmp673,
 9500              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9501              		.loc 1 245 65 view .LVU3206
 9502 3378 4901F1   		add	r9, rsi	# index, step
 9503              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9504              		.loc 1 246 53 view .LVU3207
 9505 337b 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp676
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9506              		.loc 1 245 53 is_stmt 1 view .LVU3208
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9507              		.loc 1 245 16 view .LVU3209
 9508              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9509              		.loc 1 245 9 is_stmt 0 view .LVU3210
 9510 337f 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9511 3382 0F82B800 		jb	.L509	#,
 9511      0000
 246:sieve_extend.c ****     }
 9512              		.loc 1 246 13 is_stmt 1 view .LVU3211
 9513              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9514              		.loc 1 246 53 is_stmt 0 view .LVU3212
 9515 3388 4C89CA   		mov	rdx, r9	# tmp890, index
 9516              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9517              		.loc 1 246 56 view .LVU3213
 9518 338b C442B1F7 		shlx	r11, r13, r9	# tmp893, tmp753, index
 9518      DD
 9519              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9520              		.loc 1 246 53 view .LVU3214
 9521 3390 48C1EA06 		shr	rdx, 6	# tmp890,
 9522              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9523              		.loc 1 245 65 view .LVU3215
 9524 3394 4901F1   		add	r9, rsi	# index, step
 9525              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9526              		.loc 1 246 53 view .LVU3216
 9527 3397 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp893
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9528              		.loc 1 245 53 is_stmt 1 view .LVU3217
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9529              		.loc 1 245 16 view .LVU3218
 9530              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9531              		.loc 1 245 9 is_stmt 0 view .LVU3219
 9532 339b 4C39C8   		cmp	rax, r9	# range_start_atvector, index
GAS LISTING /tmp/ccG38KJh.s 			page 255


 9533 339e 0F829C00 		jb	.L509	#,
 9533      0000
 246:sieve_extend.c ****     }
 9534              		.loc 1 246 13 is_stmt 1 view .LVU3220
 9535              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9536              		.loc 1 246 53 is_stmt 0 view .LVU3221
 9537 33a4 4D89C8   		mov	r8, r9	# tmp894, index
 9538              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9539              		.loc 1 246 56 view .LVU3222
 9540 33a7 C4C2B1F7 		shlx	rcx, r13, r9	# tmp897, tmp753, index
 9540      CD
 9541              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9542              		.loc 1 246 53 view .LVU3223
 9543 33ac 49C1E806 		shr	r8, 6	# tmp894,
 9544              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9545              		.loc 1 245 65 view .LVU3224
 9546 33b0 4901F1   		add	r9, rsi	# index, step
 9547              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9548              		.loc 1 246 53 view .LVU3225
 9549 33b3 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_429, tmp897
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9550              		.loc 1 245 53 is_stmt 1 view .LVU3226
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9551              		.loc 1 245 16 view .LVU3227
 9552              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9553              		.loc 1 245 9 is_stmt 0 view .LVU3228
 9554 33b7 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9555 33ba 0F828000 		jb	.L509	#,
 9555      0000
 246:sieve_extend.c ****     }
 9556              		.loc 1 246 13 is_stmt 1 view .LVU3229
 9557              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9558              		.loc 1 246 53 is_stmt 0 view .LVU3230
 9559 33c0 4D89CC   		mov	r12, r9	# tmp898, index
 9560              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9561              		.loc 1 246 56 view .LVU3231
 9562 33c3 C442B1F7 		shlx	r10, r13, r9	# tmp901, tmp753, index
 9562      D5
 9563              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9564              		.loc 1 246 53 view .LVU3232
 9565 33c8 49C1EC06 		shr	r12, 6	# tmp898,
 9566              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9567              		.loc 1 245 65 view .LVU3233
 9568 33cc 4901F1   		add	r9, rsi	# index, step
 9569              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9570              		.loc 1 246 53 view .LVU3234
GAS LISTING /tmp/ccG38KJh.s 			page 256


 9571 33cf 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp901
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9572              		.loc 1 245 53 is_stmt 1 view .LVU3235
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9573              		.loc 1 245 16 view .LVU3236
 9574              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9575              		.loc 1 245 9 is_stmt 0 view .LVU3237
 9576 33d3 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9577 33d6 7268     		jb	.L509	#,
 246:sieve_extend.c ****     }
 9578              		.loc 1 246 13 is_stmt 1 view .LVU3238
 9579              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9580              		.loc 1 246 53 is_stmt 0 view .LVU3239
 9581 33d8 4C89CA   		mov	rdx, r9	# tmp902, index
 9582              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9583              		.loc 1 246 56 view .LVU3240
 9584 33db C442B1F7 		shlx	r11, r13, r9	# tmp905, tmp753, index
 9584      DD
 9585              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9586              		.loc 1 246 53 view .LVU3241
 9587 33e0 48C1EA06 		shr	rdx, 6	# tmp902,
 9588              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9589              		.loc 1 245 65 view .LVU3242
 9590 33e4 4901F1   		add	r9, rsi	# index, step
 9591              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9592              		.loc 1 246 53 view .LVU3243
 9593 33e7 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp905
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9594              		.loc 1 245 53 is_stmt 1 view .LVU3244
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9595              		.loc 1 245 16 view .LVU3245
 9596              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9597              		.loc 1 245 9 is_stmt 0 view .LVU3246
 9598 33eb 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9599 33ee 7250     		jb	.L509	#,
 246:sieve_extend.c ****     }
 9600              		.loc 1 246 13 is_stmt 1 view .LVU3247
 9601              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9602              		.loc 1 246 53 is_stmt 0 view .LVU3248
 9603 33f0 4D89C8   		mov	r8, r9	# tmp906, index
 9604              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9605              		.loc 1 246 56 view .LVU3249
 9606 33f3 C4C2B1F7 		shlx	rcx, r13, r9	# tmp909, tmp753, index
 9606      CD
 9607              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9608              		.loc 1 246 53 view .LVU3250
 9609 33f8 49C1E806 		shr	r8, 6	# tmp906,
GAS LISTING /tmp/ccG38KJh.s 			page 257


 9610              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9611              		.loc 1 245 65 view .LVU3251
 9612 33fc 4901F1   		add	r9, rsi	# index, step
 9613              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9614              		.loc 1 246 53 view .LVU3252
 9615 33ff 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_429, tmp909
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9616              		.loc 1 245 53 is_stmt 1 view .LVU3253
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9617              		.loc 1 245 16 view .LVU3254
 9618              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9619              		.loc 1 245 9 is_stmt 0 view .LVU3255
 9620 3403 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9621 3406 7238     		jb	.L509	#,
 246:sieve_extend.c ****     }
 9622              		.loc 1 246 13 is_stmt 1 view .LVU3256
 9623              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9624              		.loc 1 246 53 is_stmt 0 view .LVU3257
 9625 3408 4D89CC   		mov	r12, r9	# tmp910, index
 9626              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9627              		.loc 1 246 56 view .LVU3258
 9628 340b C442B1F7 		shlx	r10, r13, r9	# tmp913, tmp753, index
 9628      D5
 9629              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9630              		.loc 1 246 53 view .LVU3259
 9631 3410 49C1EC06 		shr	r12, 6	# tmp910,
 9632              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9633              		.loc 1 245 65 view .LVU3260
 9634 3414 4901F1   		add	r9, rsi	# index, step
 9635              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9636              		.loc 1 246 53 view .LVU3261
 9637 3417 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp913
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9638              		.loc 1 245 53 is_stmt 1 view .LVU3262
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9639              		.loc 1 245 16 view .LVU3263
 9640              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9641              		.loc 1 245 9 is_stmt 0 view .LVU3264
 9642 341b 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9643 341e 7220     		jb	.L509	#,
 246:sieve_extend.c ****     }
 9644              		.loc 1 246 13 is_stmt 1 view .LVU3265
 9645              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9646              		.loc 1 246 53 is_stmt 0 view .LVU3266
 9647 3420 4C89CA   		mov	rdx, r9	# tmp914, index
 9648              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
GAS LISTING /tmp/ccG38KJh.s 			page 258


 9649              		.loc 1 246 56 view .LVU3267
 9650 3423 C442B1F7 		shlx	r11, r13, r9	# tmp917, tmp753, index
 9650      DD
 9651              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9652              		.loc 1 246 53 view .LVU3268
 9653 3428 48C1EA06 		shr	rdx, 6	# tmp914,
 9654              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9655              		.loc 1 245 65 view .LVU3269
 9656 342c 4901F1   		add	r9, rsi	# index, step
 9657              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9658              		.loc 1 246 53 view .LVU3270
 9659 342f 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp917
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9660              		.loc 1 245 53 is_stmt 1 view .LVU3271
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9661              		.loc 1 245 16 view .LVU3272
 9662              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9663              		.loc 1 245 9 is_stmt 0 view .LVU3273
 9664 3433 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9665 3436 0F8330FF 		jnb	.L511	#,
 9665      FFFF
 9666 343c 0F1F4000 		.p2align 4,,10
 9667              		.p2align 3
 9668              	.L509:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9669              		.loc 1 249 5 is_stmt 1 view .LVU3274
 9670              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9671              		.loc 1 249 76 is_stmt 0 view .LVU3275
 9672 3440 4889F0   		mov	rax, rsi	# tmp678, step
 9673              	.LVL603:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9674              		.loc 1 249 76 view .LVU3276
 9675 3443 48C1E008 		sal	rax, 8	# tmp678,
 9676              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9677              		.loc 1 249 21 view .LVU3277
 9678 3447 4C01C8   		add	rax, r9	# range_stop_unique, index
 9679 344a 4989C2   		mov	r10, rax	# range_stop_unique, range_stop_unique
 9680              	.LVL604:
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 9681              		.loc 1 250 5 is_stmt 1 view .LVU3278
 9682              	# sieve_extend.c:250:     if (range_stop_unique >= range_stop) {
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 9683              		.loc 1 250 8 is_stmt 0 view .LVU3279
 9684 344d 48394424 		cmp	QWORD PTR 112[rsp], rax	# %sfp, range_stop_unique
 9684      70
 9685 3452 0F862804 		jbe	.L516	#,
 9685      0000
 9686              	.LVL605:
 9687              	.LBB696:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 9688              		.loc 1 256 41 is_stmt 1 view .LVU3280
GAS LISTING /tmp/ccG38KJh.s 			page 259


 9689              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 9690              		.loc 1 256 5 is_stmt 0 view .LVU3281
 9691 3458 4939C1   		cmp	r9, rax	# index, range_stop_unique
 9692 345b 0F830A03 		jnb	.L515	#,
 9692      0000
 9693              	.LBB692:
 9694              	.LBB686:
 9695              	.LBB681:
 9696              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9697              		.loc 1 175 142 view .LVU3282
 9698 3461 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	# range_stop_vector, %sfp
 9698      40
 9699              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9700              		.loc 1 175 117 view .LVU3283
 9701 3466 4C8D04B5 		lea	r8, 0[0+rsi*4]	# _526,
 9701      00000000 
 9702              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9703              		.loc 1 175 142 view .LVU3284
 9704 346e 4989CB   		mov	r11, rcx	# tmp697, range_stop_vector
 9705 3471 4D29C3   		sub	r11, r8	# tmp697, _526
 9706              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9707              		.loc 1 175 92 view .LVU3285
 9708 3474 49C1E305 		sal	r11, 5	# tmp698,
 9709              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9710              		.loc 1 179 38 view .LVU3286
 9711 3478 4889F2   		mov	rdx, rsi	# _535, step
 9712 347b 4C897C24 		mov	QWORD PTR 120[rsp], r15	# %sfp, _387
 9712      78
 9713 3480 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, _626
 9713      18
 9714 3485 4D01F3   		add	r11, r14	# tmp699, _101
 9715 3488 48C1E205 		sal	rdx, 5	# _535,
 9716 348c 4989F4   		mov	r12, rsi	# _1238, step
 9717 348f 4C39C1   		cmp	rcx, r8	# range_stop_vector, _526
 9718 3492 4889F1   		mov	rcx, rsi	# _1242, step
 9719 3495 4D0F46DE 		cmovbe	r11, r14	# _101,, fast_loop_ptr
 9720 3499 48C1E107 		sal	rcx, 7	# _1242,
 9721 349d 49C1E406 		sal	r12, 6	# _1238,
 9722              	.LVL606:
 9723              		.p2align 4,,10
 9724 34a1 0F1F8000 		.p2align 3
 9724      000000
 9725              	.L528:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9726              		.loc 1 179 38 view .LVU3287
 9727              	.LBE681:
 9728              	.LBE686:
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 9729              		.loc 1 257 9 is_stmt 1 view .LVU3288
 9730              	# sieve_extend.c:257:         const counter_t current_vector =  vectorindex(index);
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
GAS LISTING /tmp/ccG38KJh.s 			page 260


 9731              		.loc 1 257 25 is_stmt 0 view .LVU3289
 9732 34a8 4C89C8   		mov	rax, r9	# current_vector, index
 9733 34ab 48C1E808 		shr	rax, 8	# current_vector,
 9734              	.LVL607:
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 9735              		.loc 1 258 9 is_stmt 1 view .LVU3290
 9736              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9737              		.loc 1 259 35 is_stmt 0 view .LVU3291
 9738 34af 4D89C8   		mov	r8, r9	# tmp700, index
 9739              	# sieve_extend.c:258:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 9740              		.loc 1 258 25 view .LVU3292
 9741 34b2 488D3C85 		lea	rdi, 0[0+rax*4]	# current_vector_start_word,
 9741      00000000 
 9742              	.LVL608:
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9743              		.loc 1 259 9 is_stmt 1 view .LVU3293
 9744              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9745              		.loc 1 259 35 is_stmt 0 view .LVU3294
 9746 34ba 49C1E806 		shr	r8, 6	# tmp700,
 9747              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9748              		.loc 1 259 28 view .LVU3295
 9749 34be 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 9750              	.LVL609:
 260:sieve_extend.c **** 
 9751              		.loc 1 260 9 is_stmt 1 view .LVU3296
 9752              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 9753              		.loc 1 260 30 is_stmt 0 view .LVU3297
 9754 34c1 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp756
 9754      24800000 
 9754      00
 9755              	.L524:
 265:sieve_extend.c ****             index += step;
 9756              		.loc 1 265 13 is_stmt 1 view .LVU3298
 9757              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9758              		.loc 1 265 31 is_stmt 0 view .LVU3299
 9759 34ca C442B1F7 		shlx	r15, r13, r9	# tmp703, tmp753, index
 9759      FD
 9760              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9761              		.loc 1 266 19 view .LVU3300
 9762 34cf 4901F1   		add	r9, rsi	# index, step
 9763              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9764              		.loc 1 265 28 view .LVU3301
 9765 34d2 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp703
 9765      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9766              		.loc 1 266 13 is_stmt 1 view .LVU3302
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9767              		.loc 1 267 13 view .LVU3303
 9768              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccG38KJh.s 			page 261


 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9769              		.loc 1 267 20 is_stmt 0 view .LVU3304
 9770 34da 4D89C8   		mov	r8, r9	# tmp705, index
 9771              	.LVL610:
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9772              		.loc 1 267 20 view .LVU3305
 9773 34dd 49C1E806 		shr	r8, 6	# tmp705,
 9774              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9775              		.loc 1 267 18 view .LVU3306
 9776 34e1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9777              		.loc 1 268 17 is_stmt 1 view .LVU3307
 9778              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9779              		.loc 1 268 9 is_stmt 0 view .LVU3308
 9780 34e4 4983F803 		cmp	r8, 3	# word,
 9781 34e8 0F87F200 		ja	.L926	#,
 9781      0000
 265:sieve_extend.c ****             index += step;
 9782              		.loc 1 265 13 is_stmt 1 view .LVU3309
 9783              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9784              		.loc 1 265 31 is_stmt 0 view .LVU3310
 9785 34ee C442B1F7 		shlx	r15, r13, r9	# tmp870, tmp753, index
 9785      FD
 9786              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9787              		.loc 1 266 19 view .LVU3311
 9788 34f3 4901F1   		add	r9, rsi	# index, step
 9789              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9790              		.loc 1 265 28 view .LVU3312
 9791 34f6 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp870
 9791      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9792              		.loc 1 266 13 is_stmt 1 view .LVU3313
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9793              		.loc 1 267 13 view .LVU3314
 9794              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9795              		.loc 1 267 20 is_stmt 0 view .LVU3315
 9796 34fe 4D89C8   		mov	r8, r9	# tmp871, index
 9797 3501 49C1E806 		shr	r8, 6	# tmp871,
 9798              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9799              		.loc 1 267 18 view .LVU3316
 9800 3505 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9801              		.loc 1 268 17 is_stmt 1 view .LVU3317
 9802              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9803              		.loc 1 268 9 is_stmt 0 view .LVU3318
 9804 3508 4983F803 		cmp	r8, 3	# word,
 9805 350c 0F87CE00 		ja	.L926	#,
 9805      0000
 265:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccG38KJh.s 			page 262


 9806              		.loc 1 265 13 is_stmt 1 view .LVU3319
 9807              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9808              		.loc 1 265 31 is_stmt 0 view .LVU3320
 9809 3512 C442B1F7 		shlx	r15, r13, r9	# tmp873, tmp753, index
 9809      FD
 9810              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9811              		.loc 1 266 19 view .LVU3321
 9812 3517 4901F1   		add	r9, rsi	# index, step
 9813              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9814              		.loc 1 265 28 view .LVU3322
 9815 351a 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp873
 9815      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9816              		.loc 1 266 13 is_stmt 1 view .LVU3323
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9817              		.loc 1 267 13 view .LVU3324
 9818              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9819              		.loc 1 267 20 is_stmt 0 view .LVU3325
 9820 3522 4D89C8   		mov	r8, r9	# tmp874, index
 9821 3525 49C1E806 		shr	r8, 6	# tmp874,
 9822              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9823              		.loc 1 267 18 view .LVU3326
 9824 3529 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9825              		.loc 1 268 17 is_stmt 1 view .LVU3327
 9826              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9827              		.loc 1 268 9 is_stmt 0 view .LVU3328
 9828 352c 4983F803 		cmp	r8, 3	# word,
 9829 3530 0F87AA00 		ja	.L926	#,
 9829      0000
 265:sieve_extend.c ****             index += step;
 9830              		.loc 1 265 13 is_stmt 1 view .LVU3329
 9831              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9832              		.loc 1 265 31 is_stmt 0 view .LVU3330
 9833 3536 C442B1F7 		shlx	r15, r13, r9	# tmp876, tmp753, index
 9833      FD
 9834              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9835              		.loc 1 266 19 view .LVU3331
 9836 353b 4901F1   		add	r9, rsi	# index, step
 9837              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9838              		.loc 1 265 28 view .LVU3332
 9839 353e 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp876
 9839      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9840              		.loc 1 266 13 is_stmt 1 view .LVU3333
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9841              		.loc 1 267 13 view .LVU3334
 9842              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccG38KJh.s 			page 263


 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9843              		.loc 1 267 20 is_stmt 0 view .LVU3335
 9844 3546 4D89C8   		mov	r8, r9	# tmp877, index
 9845 3549 49C1E806 		shr	r8, 6	# tmp877,
 9846              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9847              		.loc 1 267 18 view .LVU3336
 9848 354d 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9849              		.loc 1 268 17 is_stmt 1 view .LVU3337
 9850              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9851              		.loc 1 268 9 is_stmt 0 view .LVU3338
 9852 3550 4983F803 		cmp	r8, 3	# word,
 9853 3554 0F878600 		ja	.L926	#,
 9853      0000
 265:sieve_extend.c ****             index += step;
 9854              		.loc 1 265 13 is_stmt 1 view .LVU3339
 9855              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9856              		.loc 1 265 31 is_stmt 0 view .LVU3340
 9857 355a C442B1F7 		shlx	r15, r13, r9	# tmp879, tmp753, index
 9857      FD
 9858              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9859              		.loc 1 266 19 view .LVU3341
 9860 355f 4901F1   		add	r9, rsi	# index, step
 9861              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9862              		.loc 1 265 28 view .LVU3342
 9863 3562 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp879
 9863      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9864              		.loc 1 266 13 is_stmt 1 view .LVU3343
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9865              		.loc 1 267 13 view .LVU3344
 9866              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9867              		.loc 1 267 20 is_stmt 0 view .LVU3345
 9868 356a 4D89C8   		mov	r8, r9	# tmp880, index
 9869 356d 49C1E806 		shr	r8, 6	# tmp880,
 9870              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9871              		.loc 1 267 18 view .LVU3346
 9872 3571 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9873              		.loc 1 268 17 is_stmt 1 view .LVU3347
 9874              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9875              		.loc 1 268 9 is_stmt 0 view .LVU3348
 9876 3574 4983F803 		cmp	r8, 3	# word,
 9877 3578 7766     		ja	.L926	#,
 265:sieve_extend.c ****             index += step;
 9878              		.loc 1 265 13 is_stmt 1 view .LVU3349
 9879              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9880              		.loc 1 265 31 is_stmt 0 view .LVU3350
GAS LISTING /tmp/ccG38KJh.s 			page 264


 9881 357a C442B1F7 		shlx	r15, r13, r9	# tmp882, tmp753, index
 9881      FD
 9882              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9883              		.loc 1 266 19 view .LVU3351
 9884 357f 4901F1   		add	r9, rsi	# index, step
 9885              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9886              		.loc 1 265 28 view .LVU3352
 9887 3582 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp882
 9887      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9888              		.loc 1 266 13 is_stmt 1 view .LVU3353
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9889              		.loc 1 267 13 view .LVU3354
 9890              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9891              		.loc 1 267 20 is_stmt 0 view .LVU3355
 9892 358a 4D89C8   		mov	r8, r9	# tmp883, index
 9893 358d 49C1E806 		shr	r8, 6	# tmp883,
 9894              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9895              		.loc 1 267 18 view .LVU3356
 9896 3591 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9897              		.loc 1 268 17 is_stmt 1 view .LVU3357
 9898              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9899              		.loc 1 268 9 is_stmt 0 view .LVU3358
 9900 3594 4983F803 		cmp	r8, 3	# word,
 9901 3598 7746     		ja	.L926	#,
 265:sieve_extend.c ****             index += step;
 9902              		.loc 1 265 13 is_stmt 1 view .LVU3359
 9903              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9904              		.loc 1 265 31 is_stmt 0 view .LVU3360
 9905 359a C442B1F7 		shlx	r15, r13, r9	# tmp885, tmp753, index
 9905      FD
 9906              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9907              		.loc 1 266 19 view .LVU3361
 9908 359f 4901F1   		add	r9, rsi	# index, step
 9909              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9910              		.loc 1 265 28 view .LVU3362
 9911 35a2 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp885
 9911      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9912              		.loc 1 266 13 is_stmt 1 view .LVU3363
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9913              		.loc 1 267 13 view .LVU3364
 9914              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9915              		.loc 1 267 20 is_stmt 0 view .LVU3365
 9916 35aa 4D89C8   		mov	r8, r9	# tmp886, index
 9917 35ad 49C1E806 		shr	r8, 6	# tmp886,
 9918              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccG38KJh.s 			page 265


 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9919              		.loc 1 267 18 view .LVU3366
 9920 35b1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9921              		.loc 1 268 17 is_stmt 1 view .LVU3367
 9922              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9923              		.loc 1 268 9 is_stmt 0 view .LVU3368
 9924 35b4 4983F803 		cmp	r8, 3	# word,
 9925 35b8 7726     		ja	.L926	#,
 265:sieve_extend.c ****             index += step;
 9926              		.loc 1 265 13 is_stmt 1 view .LVU3369
 9927              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9928              		.loc 1 265 31 is_stmt 0 view .LVU3370
 9929 35ba C442B1F7 		shlx	r15, r13, r9	# tmp888, tmp753, index
 9929      FD
 9930              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9931              		.loc 1 266 19 view .LVU3371
 9932 35bf 4901F1   		add	r9, rsi	# index, step
 9933              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9934              		.loc 1 265 28 view .LVU3372
 9935 35c2 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp888
 9935      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9936              		.loc 1 266 13 is_stmt 1 view .LVU3373
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9937              		.loc 1 267 13 view .LVU3374
 9938              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9939              		.loc 1 267 20 is_stmt 0 view .LVU3375
 9940 35ca 4D89C8   		mov	r8, r9	# tmp889, index
 9941 35cd 49C1E806 		shr	r8, 6	# tmp889,
 9942              	.LVL611:
 9943              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9944              		.loc 1 267 18 view .LVU3376
 9945 35d1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 9946              	.LVL612:
 268:sieve_extend.c **** 
 9947              		.loc 1 268 17 is_stmt 1 view .LVU3377
 9948              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9949              		.loc 1 268 9 is_stmt 0 view .LVU3378
 9950 35d4 4983F803 		cmp	r8, 3	# word,
 9951 35d8 0F86ECFE 		jbe	.L524	#,
 9951      FFFF
 9952              	.LVL613:
 9953 35de 6690     		.p2align 4,,10
 9954              		.p2align 3
 9955              	.L926:
 272:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 9956              		.loc 1 272 9 is_stmt 1 view .LVU3379
 273:sieve_extend.c ****     }
 9957              		.loc 1 273 9 view .LVU3380
GAS LISTING /tmp/ccG38KJh.s 			page 266


 9958              	.LBB687:
 9959              	.LBB682:
 9960              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9961              		.loc 1 174 92 is_stmt 0 view .LVU3381
 9962 35e0 48C1E005 		sal	rax, 5	# tmp706,
 9963              	.LVL614:
 9964              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9965              		.loc 1 174 81 view .LVU3382
 9966 35e4 4C01F0   		add	rax, r14	# index_ptr, _101
 9967              	.LBE682:
 9968              	.LBE687:
 9969              	# sieve_extend.c:273:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 273:sieve_extend.c ****     }
 9970              		.loc 1 273 9 view .LVU3383
 9971 35e7 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.94_453, quadmask
 9971      24800000 
 9971      00
 9972              	.LVL615:
 9973              	.LBB688:
 9974              	.LBI677:
 172:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 9975              		.loc 1 172 20 is_stmt 1 view .LVU3384
 9976              	.LBB683:
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 9977              		.loc 1 173 5 view .LVU3385
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9978              		.loc 1 174 5 view .LVU3386
 175:sieve_extend.c ****     
 9979              		.loc 1 175 5 view .LVU3387
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9980              		.loc 1 178 11 view .LVU3388
 9981 35f0 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 9982 35f3 0F83CF00 		jnb	.L1081	#,
 9982      0000
 9983 35f9 4A8D3C20 		lea	rdi, [rax+r12]	# ivtmp.482,
 9984              	.LVL616:
 9985              	.L526:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9986              		.loc 1 179 9 view .LVU3389
 9987              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9988              		.loc 1 179 20 is_stmt 0 view .LVU3390
 9989 35fd C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp707, quadmask.94_453, MEM[base: index_ptr_834, offset: 0B
 9990 3601 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_834, offset: 0B], tmp707
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9991              		.loc 1 179 29 is_stmt 1 view .LVU3391
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9992              		.loc 1 180 9 view .LVU3392
 9993              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9994              		.loc 1 180 20 is_stmt 0 view .LVU3393
 9995 3605 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rax+rdx]	# tmp708, quadmask.94_453, MEM[base: index_ptr_834, index:
 9995      10
 9996 360a C57D7F2C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm13	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp708
 9996      10
GAS LISTING /tmp/ccG38KJh.s 			page 267


 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9997              		.loc 1 180 29 is_stmt 1 view .LVU3394
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9998              		.loc 1 181 9 view .LVU3395
 9999              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10000              		.loc 1 181 20 is_stmt 0 view .LVU3396
 10001 360f C57DEB37 		vpor	ymm14, ymm0, YMMWORD PTR [rdi]	# tmp709, quadmask.94_453, MEM[base: _1226, offset: 0B]
 10002 3613 4801C8   		add	rax, rcx	# index_ptr, _1242
 10003 3616 C57D7F37 		vmovdqa	YMMWORD PTR [rdi], ymm14	# MEM[base: _1226, offset: 0B], tmp709
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10004              		.loc 1 181 29 is_stmt 1 view .LVU3397
 182:sieve_extend.c ****     }
 10005              		.loc 1 182 9 view .LVU3398
 10006              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 10007              		.loc 1 182 20 is_stmt 0 view .LVU3399
 10008 361a C57DEB3C 		vpor	ymm15, ymm0, YMMWORD PTR [rdi+rdx]	# tmp710, quadmask.94_453, MEM[base: _1226, index: _535, o
 10008      17
 10009 361f C57D7F3C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm15	# MEM[base: _1226, index: _535, offset: 0B], tmp710
 10009      17
 182:sieve_extend.c ****     }
 10010              		.loc 1 182 29 is_stmt 1 view .LVU3400
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10011              		.loc 1 178 11 view .LVU3401
 10012 3624 4801CF   		add	rdi, rcx	# ivtmp.482, _1242
 10013 3627 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10014 362a 0F869800 		jbe	.L1081	#,
 10014      0000
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10015              		.loc 1 179 9 view .LVU3402
 10016              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10017              		.loc 1 179 20 is_stmt 0 view .LVU3403
 10018 3630 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp856, quadmask.94_453, MEM[base: index_ptr_834, offset: 0B]
 10019 3634 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_834, offset: 0B], tmp856
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10020              		.loc 1 179 29 is_stmt 1 view .LVU3404
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10021              		.loc 1 180 9 view .LVU3405
 10022              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10023              		.loc 1 180 20 is_stmt 0 view .LVU3406
 10024 3638 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp857, quadmask.94_453, MEM[base: index_ptr_834, index: 
 10024      10
 10025 363d C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp857
 10025      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10026              		.loc 1 180 29 is_stmt 1 view .LVU3407
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10027              		.loc 1 181 9 view .LVU3408
 10028              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10029              		.loc 1 181 20 is_stmt 0 view .LVU3409
 10030 3642 C5FDEB27 		vpor	ymm4, ymm0, YMMWORD PTR [rdi]	# tmp858, quadmask.94_453, MEM[base: _1226, offset: 0B]
 10031 3646 4801C8   		add	rax, rcx	# index_ptr, _1242
 10032 3649 C5FD7F27 		vmovdqa	YMMWORD PTR [rdi], ymm4	# MEM[base: _1226, offset: 0B], tmp858
GAS LISTING /tmp/ccG38KJh.s 			page 268


 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10033              		.loc 1 181 29 is_stmt 1 view .LVU3410
 182:sieve_extend.c ****     }
 10034              		.loc 1 182 9 view .LVU3411
 10035              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 10036              		.loc 1 182 20 is_stmt 0 view .LVU3412
 10037 364d C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rdi+rdx]	# tmp859, quadmask.94_453, MEM[base: _1226, index: _535, of
 10037      17
 10038 3652 C5FD7F2C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm5	# MEM[base: _1226, index: _535, offset: 0B], tmp859
 10038      17
 182:sieve_extend.c ****     }
 10039              		.loc 1 182 29 is_stmt 1 view .LVU3413
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10040              		.loc 1 178 11 view .LVU3414
 10041 3657 4801CF   		add	rdi, rcx	# ivtmp.482, _1242
 10042 365a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10043 365d 7669     		jbe	.L1081	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10044              		.loc 1 179 9 view .LVU3415
 10045              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10046              		.loc 1 179 20 is_stmt 0 view .LVU3416
 10047 365f C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp861, quadmask.94_453, MEM[base: index_ptr_834, offset: 0B]
 10048 3663 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_834, offset: 0B], tmp861
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10049              		.loc 1 179 29 is_stmt 1 view .LVU3417
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10050              		.loc 1 180 9 view .LVU3418
 10051              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10052              		.loc 1 180 20 is_stmt 0 view .LVU3419
 10053 3667 C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp862, quadmask.94_453, MEM[base: index_ptr_834, index: 
 10053      10
 10054 366c C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp862
 10054      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10055              		.loc 1 180 29 is_stmt 1 view .LVU3420
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10056              		.loc 1 181 9 view .LVU3421
 10057              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10058              		.loc 1 181 20 is_stmt 0 view .LVU3422
 10059 3671 C57DEB07 		vpor	ymm8, ymm0, YMMWORD PTR [rdi]	# tmp863, quadmask.94_453, MEM[base: _1226, offset: 0B]
 10060 3675 4801C8   		add	rax, rcx	# index_ptr, _1242
 10061 3678 C57D7F07 		vmovdqa	YMMWORD PTR [rdi], ymm8	# MEM[base: _1226, offset: 0B], tmp863
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10062              		.loc 1 181 29 is_stmt 1 view .LVU3423
 182:sieve_extend.c ****     }
 10063              		.loc 1 182 9 view .LVU3424
 10064              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 10065              		.loc 1 182 20 is_stmt 0 view .LVU3425
 10066 367c C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rdi+rdx]	# tmp864, quadmask.94_453, MEM[base: _1226, index: _535, of
 10066      17
 10067 3681 C57D7F0C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm9	# MEM[base: _1226, index: _535, offset: 0B], tmp864
 10067      17
GAS LISTING /tmp/ccG38KJh.s 			page 269


 182:sieve_extend.c ****     }
 10068              		.loc 1 182 29 is_stmt 1 view .LVU3426
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10069              		.loc 1 178 11 view .LVU3427
 10070 3686 4801CF   		add	rdi, rcx	# ivtmp.482, _1242
 10071 3689 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10072 368c 763A     		jbe	.L1081	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10073              		.loc 1 179 9 view .LVU3428
 10074              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10075              		.loc 1 179 20 is_stmt 0 view .LVU3429
 10076 368e C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp866, quadmask.94_453, MEM[base: index_ptr_834, offset: 0B
 10077 3692 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_834, offset: 0B], tmp866
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10078              		.loc 1 179 29 is_stmt 1 view .LVU3430
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10079              		.loc 1 180 9 view .LVU3431
 10080              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10081              		.loc 1 180 20 is_stmt 0 view .LVU3432
 10082 3696 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp867, quadmask.94_453, MEM[base: index_ptr_834, index:
 10082      10
 10083 369b C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp867
 10083      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10084              		.loc 1 180 29 is_stmt 1 view .LVU3433
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10085              		.loc 1 181 9 view .LVU3434
 10086              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10087              		.loc 1 181 20 is_stmt 0 view .LVU3435
 10088 36a0 C57DEB27 		vpor	ymm12, ymm0, YMMWORD PTR [rdi]	# tmp868, quadmask.94_453, MEM[base: _1226, offset: 0B]
 10089 36a4 4801C8   		add	rax, rcx	# index_ptr, _1242
 10090 36a7 C57D7F27 		vmovdqa	YMMWORD PTR [rdi], ymm12	# MEM[base: _1226, offset: 0B], tmp868
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10091              		.loc 1 181 29 is_stmt 1 view .LVU3436
 182:sieve_extend.c ****     }
 10092              		.loc 1 182 9 view .LVU3437
 10093              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 10094              		.loc 1 182 20 is_stmt 0 view .LVU3438
 10095 36ab C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rdi+rdx]	# tmp869, quadmask.94_453, MEM[base: _1226, index: _535, o
 10095      17
 10096 36b0 C57D7F2C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm13	# MEM[base: _1226, index: _535, offset: 0B], tmp869
 10096      17
 182:sieve_extend.c ****     }
 10097              		.loc 1 182 29 is_stmt 1 view .LVU3439
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10098              		.loc 1 178 11 view .LVU3440
 10099 36b5 4801CF   		add	rdi, rcx	# ivtmp.482, _1242
 10100 36b8 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10101 36bb 0F873CFF 		ja	.L526	#,
 10101      FFFF
 10102              		.p2align 4,,10
 10103 36c1 0F1F8000 		.p2align 3
 10103      000000
GAS LISTING /tmp/ccG38KJh.s 			page 270


 10104              	.L1081:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10105              		.loc 1 186 11 view .LVU3441
 10106 36c8 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10107 36cb 0F878700 		ja	.L529	#,
 10107      0000
 10108              	.L527:
 187:sieve_extend.c ****     }
 10109              		.loc 1 187 9 view .LVU3442
 10110              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10111              		.loc 1 187 20 is_stmt 0 view .LVU3443
 10112 36d1 C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp711, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B
 10113 36d5 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_832, offset: 0B], tmp711
 187:sieve_extend.c ****     }
 10114              		.loc 1 187 29 is_stmt 1 view .LVU3444
 10115              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10116              		.loc 1 187 38 is_stmt 0 view .LVU3445
 10117 36d9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10118              		.loc 1 186 11 is_stmt 1 view .LVU3446
 10119 36dc 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10120 36df 7777     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10121              		.loc 1 187 9 view .LVU3447
 10122              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10123              		.loc 1 187 20 is_stmt 0 view .LVU3448
 10124 36e1 C57DEB38 		vpor	ymm15, ymm0, YMMWORD PTR [rax]	# tmp843, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B
 10125 36e5 C57D7F38 		vmovdqa	YMMWORD PTR [rax], ymm15	# MEM[base: index_ptr_832, offset: 0B], tmp843
 187:sieve_extend.c ****     }
 10126              		.loc 1 187 29 is_stmt 1 view .LVU3449
 10127              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10128              		.loc 1 187 38 is_stmt 0 view .LVU3450
 10129 36e9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10130              		.loc 1 186 11 is_stmt 1 view .LVU3451
 10131 36ec 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10132 36ef 7767     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10133              		.loc 1 187 9 view .LVU3452
 10134              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10135              		.loc 1 187 20 is_stmt 0 view .LVU3453
 10136 36f1 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp845, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10137 36f5 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_832, offset: 0B], tmp845
 187:sieve_extend.c ****     }
 10138              		.loc 1 187 29 is_stmt 1 view .LVU3454
 10139              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10140              		.loc 1 187 38 is_stmt 0 view .LVU3455
 10141 36f9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10142              		.loc 1 186 11 is_stmt 1 view .LVU3456
 10143 36fc 4839D8   		cmp	rax, rbx	# index_ptr, _1234
GAS LISTING /tmp/ccG38KJh.s 			page 271


 10144 36ff 7757     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10145              		.loc 1 187 9 view .LVU3457
 10146              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10147              		.loc 1 187 20 is_stmt 0 view .LVU3458
 10148 3701 C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp847, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10149 3705 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: index_ptr_832, offset: 0B], tmp847
 187:sieve_extend.c ****     }
 10150              		.loc 1 187 29 is_stmt 1 view .LVU3459
 10151              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10152              		.loc 1 187 38 is_stmt 0 view .LVU3460
 10153 3709 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10154              		.loc 1 186 11 is_stmt 1 view .LVU3461
 10155 370c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10156 370f 7747     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10157              		.loc 1 187 9 view .LVU3462
 10158              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10159              		.loc 1 187 20 is_stmt 0 view .LVU3463
 10160 3711 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp849, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10161 3715 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_832, offset: 0B], tmp849
 187:sieve_extend.c ****     }
 10162              		.loc 1 187 29 is_stmt 1 view .LVU3464
 10163              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10164              		.loc 1 187 38 is_stmt 0 view .LVU3465
 10165 3719 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10166              		.loc 1 186 11 is_stmt 1 view .LVU3466
 10167 371c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10168 371f 7737     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10169              		.loc 1 187 9 view .LVU3467
 10170              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10171              		.loc 1 187 20 is_stmt 0 view .LVU3468
 10172 3721 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp851, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10173 3725 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_832, offset: 0B], tmp851
 187:sieve_extend.c ****     }
 10174              		.loc 1 187 29 is_stmt 1 view .LVU3469
 10175              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10176              		.loc 1 187 38 is_stmt 0 view .LVU3470
 10177 3729 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10178              		.loc 1 186 11 is_stmt 1 view .LVU3471
 10179 372c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10180 372f 7727     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10181              		.loc 1 187 9 view .LVU3472
 10182              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10183              		.loc 1 187 20 is_stmt 0 view .LVU3473
GAS LISTING /tmp/ccG38KJh.s 			page 272


 10184 3731 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp853, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10185 3735 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_832, offset: 0B], tmp853
 187:sieve_extend.c ****     }
 10186              		.loc 1 187 29 is_stmt 1 view .LVU3474
 10187              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10188              		.loc 1 187 38 is_stmt 0 view .LVU3475
 10189 3739 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10190              		.loc 1 186 11 is_stmt 1 view .LVU3476
 10191 373c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10192 373f 7717     		ja	.L529	#,
 187:sieve_extend.c ****     }
 10193              		.loc 1 187 9 view .LVU3477
 10194              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10195              		.loc 1 187 20 is_stmt 0 view .LVU3478
 10196 3741 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp855, quadmask.94_453, MEM[base: index_ptr_832, offset: 0B]
 10197 3745 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_832, offset: 0B], tmp855
 187:sieve_extend.c ****     }
 10198              		.loc 1 187 29 is_stmt 1 view .LVU3479
 10199              	.LVL617:
 10200              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10201              		.loc 1 187 38 is_stmt 0 view .LVU3480
 10202 3749 4801D0   		add	rax, rdx	# index_ptr, _535
 10203              	.LVL618:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10204              		.loc 1 186 11 is_stmt 1 view .LVU3481
 10205 374c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10206 374f 7680     		jbe	.L527	#,
 10207              	.LVL619:
 10208              		.p2align 4,,10
 10209 3751 0F1F8000 		.p2align 3
 10209      000000
 10210              	.L529:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10211              		.loc 1 186 11 is_stmt 0 view .LVU3482
 10212              	.LBE683:
 10213              	.LBE688:
 10214              	.LBE692:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10215              		.loc 1 256 41 is_stmt 1 view .LVU3483
 10216              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10217              		.loc 1 256 5 is_stmt 0 view .LVU3484
 10218 3758 4D39CA   		cmp	r10, r9	# range_stop_unique, index
 10219 375b 0F8747FD 		ja	.L528	#,
 10219      FFFF
 10220 3761 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# _387, %sfp
 10220      78
 10221 3766 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _626, %sfp
 10221      18
 10222              	.LVL620:
 10223              	.L515:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10224              		.loc 1 256 5 view .LVU3485
GAS LISTING /tmp/ccG38KJh.s 			page 273


 10225              	.LBE696:
 10226              	.LBE714:
 10227              	.LBE728:
 445:sieve_extend.c ****         }
 10228              		.loc 1 445 13 is_stmt 1 view .LVU3486
 10229              	.LBB729:
 10230              	.LBI729:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 10231              		.loc 1 121 25 view .LVU3487
 10232              	.LBB730:
 122:sieve_extend.c ****     return index;
 10233              		.loc 1 122 5 view .LVU3488
 122:sieve_extend.c ****     return index;
 10234              		.loc 1 122 11 view .LVU3489
 10235              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10236              		.loc 1 122 23 is_stmt 0 view .LVU3490
 10237 376b 4C89FE   		mov	rsi, r15	# tmp663, _387
 10238              	.LVL621:
 122:sieve_extend.c ****     return index;
 10239              		.loc 1 122 23 view .LVU3491
 10240 376e 48C1EE06 		shr	rsi, 6	# tmp663,
 10241              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10242              		.loc 1 122 12 view .LVU3492
 10243 3772 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_647, *_647
 10244              	.LBE730:
 10245              	.LBE729:
 10246              	# sieve_extend.c:438:         if likely(block_start >= (prime + 1)) 
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10247              		.loc 1 438 12 view .LVU3493
 10248 3776 4C89FA   		mov	rdx, r15	# index, _387
 10249              	.LBB732:
 10250              	.LBB731:
 10251              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10252              		.loc 1 122 11 view .LVU3494
 10253 3779 4D0FA3FA 		bt	r10, r15	# *_647, _387
 10254 377d 0F833DFB 		jnc	.L514	#,
 10254      FFFF
 10255              	.LVL622:
 10256              	.L513:
 122:sieve_extend.c ****     return index;
 10257              		.loc 1 122 60 is_stmt 1 view .LVU3495
 10258              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10259              		.loc 1 122 65 is_stmt 0 view .LVU3496
 10260 3783 4C8D7A01 		lea	r15, 1[rdx]	# tmp758,
 10261              	.LVL623:
 10262              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10263              		.loc 1 122 23 view .LVU3497
 10264 3787 4C89F8   		mov	rax, r15	# tmp712, index
 10265 378a 48C1E806 		shr	rax, 6	# tmp712,
 10266              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10267              		.loc 1 122 12 view .LVU3498
GAS LISTING /tmp/ccG38KJh.s 			page 274


 10268 378e 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_407, *_407
 10269              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10270              		.loc 1 122 65 view .LVU3499
 10271 3792 4C89FA   		mov	rdx, r15	# index, tmp758
 122:sieve_extend.c ****     return index;
 10272              		.loc 1 122 11 is_stmt 1 view .LVU3500
 10273 3795 4D0FA3F8 		bt	r8, r15	# *_407, index
 10274 3799 0F8321FB 		jnc	.L514	#,
 10274      FFFF
 122:sieve_extend.c ****     return index;
 10275              		.loc 1 122 60 view .LVU3501
 10276              	.LVL624:
 10277              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10278              		.loc 1 122 65 is_stmt 0 view .LVU3502
 10279 379f 48FFC2   		inc	rdx	# index
 10280              	.LVL625:
 122:sieve_extend.c ****     return index;
 10281              		.loc 1 122 11 is_stmt 1 view .LVU3503
 10282              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10283              		.loc 1 122 23 is_stmt 0 view .LVU3504
 10284 37a2 4989D3   		mov	r11, rdx	# tmp775, index
 10285 37a5 49C1EB06 		shr	r11, 6	# tmp775,
 10286              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10287              		.loc 1 122 12 view .LVU3505
 10288 37a9 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_407, *_407
 10289              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10290              		.loc 1 122 11 view .LVU3506
 10291 37ad 490FA3D4 		bt	r12, rdx	# *_407, index
 10292 37b1 0F8309FB 		jnc	.L514	#,
 10292      FFFF
 122:sieve_extend.c ****     return index;
 10293              		.loc 1 122 60 is_stmt 1 view .LVU3507
 10294              	.LVL626:
 10295              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10296              		.loc 1 122 65 is_stmt 0 view .LVU3508
 10297 37b7 498D5702 		lea	rdx, 2[r15]	# index,
 10298              	.LVL627:
 122:sieve_extend.c ****     return index;
 10299              		.loc 1 122 11 is_stmt 1 view .LVU3509
 10300              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10301              		.loc 1 122 23 is_stmt 0 view .LVU3510
 10302 37bb 4889D1   		mov	rcx, rdx	# tmp779, index
 10303 37be 48C1E906 		shr	rcx, 6	# tmp779,
 10304              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10305              		.loc 1 122 12 view .LVU3511
 10306 37c2 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_407, *_407
 10307              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10308              		.loc 1 122 11 view .LVU3512
GAS LISTING /tmp/ccG38KJh.s 			page 275


 10309 37c6 490FA3D1 		bt	r9, rdx	# *_407, index
 10310 37ca 0F83F0FA 		jnc	.L514	#,
 10310      FFFF
 122:sieve_extend.c ****     return index;
 10311              		.loc 1 122 60 is_stmt 1 view .LVU3513
 10312              	.LVL628:
 10313              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10314              		.loc 1 122 65 is_stmt 0 view .LVU3514
 10315 37d0 498D5703 		lea	rdx, 3[r15]	# index,
 10316              	.LVL629:
 122:sieve_extend.c ****     return index;
 10317              		.loc 1 122 11 is_stmt 1 view .LVU3515
 10318              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10319              		.loc 1 122 23 is_stmt 0 view .LVU3516
 10320 37d4 4889D6   		mov	rsi, rdx	# tmp783, index
 10321 37d7 48C1EE06 		shr	rsi, 6	# tmp783,
 10322              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10323              		.loc 1 122 12 view .LVU3517
 10324 37db 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_407, *_407
 10325              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10326              		.loc 1 122 11 view .LVU3518
 10327 37df 490FA3D2 		bt	r10, rdx	# *_407, index
 10328 37e3 0F83D7FA 		jnc	.L514	#,
 10328      FFFF
 122:sieve_extend.c ****     return index;
 10329              		.loc 1 122 60 is_stmt 1 view .LVU3519
 10330              	.LVL630:
 10331              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10332              		.loc 1 122 65 is_stmt 0 view .LVU3520
 10333 37e9 498D5704 		lea	rdx, 4[r15]	# index,
 10334              	.LVL631:
 122:sieve_extend.c ****     return index;
 10335              		.loc 1 122 11 is_stmt 1 view .LVU3521
 10336              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10337              		.loc 1 122 23 is_stmt 0 view .LVU3522
 10338 37ed 4889D0   		mov	rax, rdx	# tmp787, index
 10339 37f0 48C1E806 		shr	rax, 6	# tmp787,
 10340              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10341              		.loc 1 122 12 view .LVU3523
 10342 37f4 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_407, *_407
 10343              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10344              		.loc 1 122 11 view .LVU3524
 10345 37f8 490FA3D0 		bt	r8, rdx	# *_407, index
 10346 37fc 0F83BEFA 		jnc	.L514	#,
 10346      FFFF
 122:sieve_extend.c ****     return index;
 10347              		.loc 1 122 60 is_stmt 1 view .LVU3525
 10348              	.LVL632:
 10349              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccG38KJh.s 			page 276


 122:sieve_extend.c ****     return index;
 10350              		.loc 1 122 65 is_stmt 0 view .LVU3526
 10351 3802 498D5705 		lea	rdx, 5[r15]	# index,
 10352              	.LVL633:
 122:sieve_extend.c ****     return index;
 10353              		.loc 1 122 11 is_stmt 1 view .LVU3527
 10354              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10355              		.loc 1 122 23 is_stmt 0 view .LVU3528
 10356 3806 4989D3   		mov	r11, rdx	# tmp791, index
 10357 3809 49C1EB06 		shr	r11, 6	# tmp791,
 10358              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10359              		.loc 1 122 12 view .LVU3529
 10360 380d 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_407, *_407
 10361              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10362              		.loc 1 122 11 view .LVU3530
 10363 3811 490FA3D4 		bt	r12, rdx	# *_407, index
 10364 3815 0F83A5FA 		jnc	.L514	#,
 10364      FFFF
 122:sieve_extend.c ****     return index;
 10365              		.loc 1 122 60 is_stmt 1 view .LVU3531
 10366              	.LVL634:
 10367              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10368              		.loc 1 122 65 is_stmt 0 view .LVU3532
 10369 381b 498D5706 		lea	rdx, 6[r15]	# index,
 10370              	.LVL635:
 122:sieve_extend.c ****     return index;
 10371              		.loc 1 122 11 is_stmt 1 view .LVU3533
 10372              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10373              		.loc 1 122 23 is_stmt 0 view .LVU3534
 10374 381f 4889D1   		mov	rcx, rdx	# tmp795, index
 10375 3822 48C1E906 		shr	rcx, 6	# tmp795,
 10376              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10377              		.loc 1 122 12 view .LVU3535
 10378 3826 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_407, *_407
 10379              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10380              		.loc 1 122 11 view .LVU3536
 10381 382a 490FA3D1 		bt	r9, rdx	# *_407, index
 10382 382e 0F838CFA 		jnc	.L514	#,
 10382      FFFF
 122:sieve_extend.c ****     return index;
 10383              		.loc 1 122 60 is_stmt 1 view .LVU3537
 10384              	.LVL636:
 10385              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10386              		.loc 1 122 65 is_stmt 0 view .LVU3538
 10387 3834 498D5707 		lea	rdx, 7[r15]	# index,
 10388              	.LVL637:
 122:sieve_extend.c ****     return index;
 10389              		.loc 1 122 11 is_stmt 1 view .LVU3539
 10390              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccG38KJh.s 			page 277


 122:sieve_extend.c ****     return index;
 10391              		.loc 1 122 23 is_stmt 0 view .LVU3540
 10392 3838 4989D7   		mov	r15, rdx	# tmp799, index
 10393 383b 49C1EF06 		shr	r15, 6	# tmp799,
 10394              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10395              		.loc 1 122 12 view .LVU3541
 10396 383f 4B8B34FE 		mov	rsi, QWORD PTR [r14+r15*8]	# *_407, *_407
 10397              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10398              		.loc 1 122 11 view .LVU3542
 10399 3843 480FA3D6 		bt	rsi, rdx	# *_407, index
 10400 3847 0F8236FF 		jc	.L513	#,
 10400      FFFF
 10401 384d E96EFAFF 		jmp	.L514	#
 10401      FF
 10402              	.LVL638:
 10403              		.p2align 4,,10
 10404 3852 660F1F44 		.p2align 3
 10404      0000
 10405              	.L1093:
 122:sieve_extend.c ****     return index;
 10406              		.loc 1 122 11 view .LVU3543
 10407              	.LBE731:
 10408              	.LBE732:
 10409              	.LBB733:
 10410              	.LBB726:
 135:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 10411              		.loc 1 135 8 is_stmt 1 view .LVU3544
 136:sieve_extend.c ****        index += distance;
 10412              		.loc 1 136 8 view .LVU3545
 10413              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10414              		.loc 1 136 48 is_stmt 0 view .LVU3546
 10415 3858 4D8B7C36 		mov	r15, QWORD PTR 8[r14+rsi]	# *_576, *_576
 10415      08
 10416              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10417              		.loc 1 136 17 view .LVU3547
 10418 385d 31C9     		xor	ecx, ecx	# distance
 10419              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10420              		.loc 1 136 48 view .LVU3548
 10421 385f 49F7D7   		not	r15	# tmp741
 10422              	.LVL639:
 137:sieve_extend.c ****    }
 10423              		.loc 1 137 8 is_stmt 1 view .LVU3549
 10424              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10425              		.loc 1 136 17 is_stmt 0 view .LVU3550
 10426 3862 F3490FBC 		tzcnt	rcx, r15	# distance, tmp741
 10426      CF
 10427              	.LVL640:
 10428              	# sieve_extend.c:137:        index += distance;
 137:sieve_extend.c ****    }
 10429              		.loc 1 137 14 view .LVU3551
 10430 3867 4801CA   		add	rdx, rcx	# index, distance
GAS LISTING /tmp/ccG38KJh.s 			page 278


 10431              	.LVL641:
 134:sieve_extend.c ****        index_word++;
 10432              		.loc 1 134 10 is_stmt 1 view .LVU3552
 10433 386a E951FAFF 		jmp	.L514	#
 10433      FF
 10434              	.LVL642:
 10435 386f 90       		.p2align 4,,10
 10436              		.p2align 3
 10437              	.L506:
 134:sieve_extend.c ****        index_word++;
 10438              		.loc 1 134 10 is_stmt 0 view .LVU3553
 10439              	.LBE726:
 10440              	.LBE733:
 441:sieve_extend.c **** 
 10441              		.loc 1 441 13 is_stmt 1 view .LVU3554
 10442              	# sieve_extend.c:441:             start = prime * prime * 2 + prime * 2;
 441:sieve_extend.c **** 
 10443              		.loc 1 441 19 is_stmt 0 view .LVU3555
 10444 3870 490FAFD7 		imul	rdx, r15	# tmp661, _387
 10445 3874 4C8D0C12 		lea	r9, [rdx+rdx]	# index,
 10446              	.LVL643:
 441:sieve_extend.c **** 
 10447              		.loc 1 441 19 view .LVU3556
 10448 3878 E91CF8FF 		jmp	.L507	#
 10448      FF
 10449              	.LVL644:
 10450 387d 0F1F00   		.p2align 4,,10
 10451              		.p2align 3
 10452              	.L516:
 10453              	.LBB734:
 10454              	.LBB715:
 251:sieve_extend.c ****         return;
 10455              		.loc 1 251 9 is_stmt 1 view .LVU3557
 10456              	.LBB697:
 10457              	.LBI697:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10458              		.loc 1 221 20 view .LVU3558
 10459              	.LBB698:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10460              		.loc 1 222 5 view .LVU3559
 223:sieve_extend.c **** 
 10461              		.loc 1 223 5 view .LVU3560
 10462              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 10463              		.loc 1 223 74 is_stmt 0 view .LVU3561
 10464 3880 4989F0   		mov	r8, rsi	# tmp679, step
 10465 3883 49C1E006 		sal	r8, 6	# tmp679,
 10466              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 10467              		.loc 1 223 21 view .LVU3562
 10468 3887 4F8D0408 		lea	r8, [r8+r9]	# range_stop_unique,
 10469              	.LVL645:
 10470              	.LBB699:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10471              		.loc 1 226 10 is_stmt 1 view .LVU3563
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10472              		.loc 1 226 50 view .LVU3564
GAS LISTING /tmp/ccG38KJh.s 			page 279


 10473              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10474              		.loc 1 226 5 is_stmt 0 view .LVU3565
 10475 388b 4D39C1   		cmp	r9, r8	# index, range_stop_unique
 10476 388e 0F83D7FE 		jnb	.L515	#,
 10476      FFFF
 10477              	.LBB700:
 10478              	.LBB701:
 10479              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10480              		.loc 1 149 135 view .LVU3566
 10481 3894 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 10481      50
 10482              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10483              		.loc 1 149 112 view .LVU3567
 10484 3899 4C8D14B6 		lea	r10, [rsi+rsi*4]	# tmp682,
 10485              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10486              		.loc 1 149 135 view .LVU3568
 10487 389d 4889C8   		mov	rax, rcx	# tmp684, range_stop_word
 10488              	.LVL646:
 149:sieve_extend.c **** 
 10489              		.loc 1 149 135 view .LVU3569
 10490 38a0 4C29D0   		sub	rax, r10	# tmp684, tmp682
 10491              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10492              		.loc 1 149 53 view .LVU3570
 10493 38a3 4D8D1CC6 		lea	r11, [r14+rax*8]	# tmp686,
 10494 38a7 4939CA   		cmp	r10, rcx	# tmp682, range_stop_word
 10495 38aa 4989F4   		mov	r12, rsi	# _782, step
 10496 38ad 4D0F43DE 		cmovnb	r11, r14	# _101,, fast_loop_ptr
 10497 38b1 4C897C24 		mov	QWORD PTR 120[rsp], r15	# %sfp, _387
 10497      78
 10498              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10499              		.loc 1 154 38 view .LVU3571
 10500 38b6 488D14F5 		lea	rdx, 0[0+rsi*8]	# _485,
 10500      00000000 
 10501 38be 49C1E203 		sal	r10, 3	# tmp690,
 10502 38c2 49C1E404 		sal	r12, 4	# _782,
 10503 38c6 4D89C7   		mov	r15, r8	# range_stop_unique, range_stop_unique
 10504              	.LVL647:
 10505 38c9 0F1F8000 		.p2align 4,,10
 10505      000000
 10506              		.p2align 3
 10507              	.L523:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10508              		.loc 1 154 38 view .LVU3572
 10509              	.LBE701:
 10510              	.LBE700:
 227:sieve_extend.c ****     }
 10511              		.loc 1 227 9 is_stmt 1 view .LVU3573
 10512 38d0 4D89C8   		mov	r8, r9	# tmp693, index
 10513 38d3 49C1E806 		shr	r8, 6	# tmp693,
 10514              	.LBB705:
 10515              	.LBB702:
GAS LISTING /tmp/ccG38KJh.s 			page 280


 10516              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10517              		.loc 1 148 78 is_stmt 0 view .LVU3574
 10518 38d7 4B8D04C6 		lea	rax, [r14+r8*8]	# index_ptr,
 10519              	.LBE702:
 10520              	.LBE705:
 10521              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 10522              		.loc 1 227 9 view .LVU3575
 10523 38db C4C2B1F7 		shlx	rcx, r13, r9	# _470, tmp753, index
 10523      CD
 10524              	.LVL648:
 10525              	.LBB706:
 10526              	.LBI700:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10527              		.loc 1 146 20 is_stmt 1 view .LVU3576
 10528              	.LBB703:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10529              		.loc 1 147 4 view .LVU3577
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10530              		.loc 1 148 4 view .LVU3578
 149:sieve_extend.c **** 
 10531              		.loc 1 149 4 view .LVU3579
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10532              		.loc 1 153 10 view .LVU3580
 10533 38e0 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 10534 38e3 0F83FF00 		jnb	.L518	#,
 10534      0000
 10535 38e9 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.461,
 10536              	.L519:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10537              		.loc 1 154 8 view .LVU3581
 10538              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10539              		.loc 1 154 19 is_stmt 0 view .LVU3582
 10540 38ed 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10541              		.loc 1 154 29 is_stmt 1 view .LVU3583
 10542              	.LVL649:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10543              		.loc 1 155 8 view .LVU3584
 10544              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10545              		.loc 1 155 19 is_stmt 0 view .LVU3585
 10546 38f0 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10547              		.loc 1 155 29 is_stmt 1 view .LVU3586
 10548              	.LVL650:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10549              		.loc 1 156 8 view .LVU3587
 10550              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10551              		.loc 1 156 19 is_stmt 0 view .LVU3588
 10552 38f4 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10553              		.loc 1 156 29 is_stmt 1 view .LVU3589
 10554              	.LVL651:
GAS LISTING /tmp/ccG38KJh.s 			page 281


 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10555              		.loc 1 157 8 view .LVU3590
 10556              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10557              		.loc 1 157 19 is_stmt 0 view .LVU3591
 10558 38f7 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10559              		.loc 1 157 29 is_stmt 1 view .LVU3592
 10560              	.LVL652:
 158:sieve_extend.c ****    }
 10561              		.loc 1 158 8 view .LVU3593
 10562 38fb 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10563              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10564              		.loc 1 158 19 is_stmt 0 view .LVU3594
 10565 38fe 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10566              		.loc 1 158 29 is_stmt 1 view .LVU3595
 10567 3902 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10568              	.LVL653:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10569              		.loc 1 153 10 view .LVU3596
 10570 3905 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10571 3908 0F86DA00 		jbe	.L518	#,
 10571      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10572              		.loc 1 154 8 view .LVU3597
 10573              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10574              		.loc 1 154 19 is_stmt 0 view .LVU3598
 10575 390e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10576              		.loc 1 154 29 is_stmt 1 view .LVU3599
 10577              	.LVL654:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10578              		.loc 1 155 8 view .LVU3600
 10579              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10580              		.loc 1 155 19 is_stmt 0 view .LVU3601
 10581 3911 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10582              		.loc 1 155 29 is_stmt 1 view .LVU3602
 10583              	.LVL655:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10584              		.loc 1 156 8 view .LVU3603
 10585              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10586              		.loc 1 156 19 is_stmt 0 view .LVU3604
 10587 3915 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10588              		.loc 1 156 29 is_stmt 1 view .LVU3605
 10589              	.LVL656:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10590              		.loc 1 157 8 view .LVU3606
 10591              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10592              		.loc 1 157 19 is_stmt 0 view .LVU3607
GAS LISTING /tmp/ccG38KJh.s 			page 282


 10593 3918 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10594              		.loc 1 157 29 is_stmt 1 view .LVU3608
 10595              	.LVL657:
 158:sieve_extend.c ****    }
 10596              		.loc 1 158 8 view .LVU3609
 10597 391c 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10598              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10599              		.loc 1 158 19 is_stmt 0 view .LVU3610
 10600 391f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10601              		.loc 1 158 29 is_stmt 1 view .LVU3611
 10602 3923 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10603              	.LVL658:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10604              		.loc 1 153 10 view .LVU3612
 10605 3926 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10606 3929 0F86B900 		jbe	.L518	#,
 10606      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10607              		.loc 1 154 8 view .LVU3613
 10608              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10609              		.loc 1 154 19 is_stmt 0 view .LVU3614
 10610 392f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10611              		.loc 1 154 29 is_stmt 1 view .LVU3615
 10612              	.LVL659:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10613              		.loc 1 155 8 view .LVU3616
 10614              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10615              		.loc 1 155 19 is_stmt 0 view .LVU3617
 10616 3932 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10617              		.loc 1 155 29 is_stmt 1 view .LVU3618
 10618              	.LVL660:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10619              		.loc 1 156 8 view .LVU3619
 10620              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10621              		.loc 1 156 19 is_stmt 0 view .LVU3620
 10622 3936 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10623              		.loc 1 156 29 is_stmt 1 view .LVU3621
 10624              	.LVL661:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10625              		.loc 1 157 8 view .LVU3622
 10626              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10627              		.loc 1 157 19 is_stmt 0 view .LVU3623
 10628 3939 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10629              		.loc 1 157 29 is_stmt 1 view .LVU3624
 10630              	.LVL662:
 158:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 283


 10631              		.loc 1 158 8 view .LVU3625
 10632 393d 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10633              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10634              		.loc 1 158 19 is_stmt 0 view .LVU3626
 10635 3940 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10636              		.loc 1 158 29 is_stmt 1 view .LVU3627
 10637 3944 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10638              	.LVL663:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10639              		.loc 1 153 10 view .LVU3628
 10640 3947 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10641 394a 0F869800 		jbe	.L518	#,
 10641      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10642              		.loc 1 154 8 view .LVU3629
 10643              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10644              		.loc 1 154 19 is_stmt 0 view .LVU3630
 10645 3950 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10646              		.loc 1 154 29 is_stmt 1 view .LVU3631
 10647              	.LVL664:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10648              		.loc 1 155 8 view .LVU3632
 10649              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10650              		.loc 1 155 19 is_stmt 0 view .LVU3633
 10651 3953 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10652              		.loc 1 155 29 is_stmt 1 view .LVU3634
 10653              	.LVL665:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10654              		.loc 1 156 8 view .LVU3635
 10655              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10656              		.loc 1 156 19 is_stmt 0 view .LVU3636
 10657 3957 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10658              		.loc 1 156 29 is_stmt 1 view .LVU3637
 10659              	.LVL666:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10660              		.loc 1 157 8 view .LVU3638
 10661              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10662              		.loc 1 157 19 is_stmt 0 view .LVU3639
 10663 395a 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10664              		.loc 1 157 29 is_stmt 1 view .LVU3640
 10665              	.LVL667:
 158:sieve_extend.c ****    }
 10666              		.loc 1 158 8 view .LVU3641
 10667 395e 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10668              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10669              		.loc 1 158 19 is_stmt 0 view .LVU3642
GAS LISTING /tmp/ccG38KJh.s 			page 284


 10670 3961 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10671              		.loc 1 158 29 is_stmt 1 view .LVU3643
 10672 3965 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10673              	.LVL668:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10674              		.loc 1 153 10 view .LVU3644
 10675 3968 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10676 396b 767B     		jbe	.L518	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10677              		.loc 1 154 8 view .LVU3645
 10678              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10679              		.loc 1 154 19 is_stmt 0 view .LVU3646
 10680 396d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10681              		.loc 1 154 29 is_stmt 1 view .LVU3647
 10682              	.LVL669:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10683              		.loc 1 155 8 view .LVU3648
 10684              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10685              		.loc 1 155 19 is_stmt 0 view .LVU3649
 10686 3970 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10687              		.loc 1 155 29 is_stmt 1 view .LVU3650
 10688              	.LVL670:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10689              		.loc 1 156 8 view .LVU3651
 10690              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10691              		.loc 1 156 19 is_stmt 0 view .LVU3652
 10692 3974 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10693              		.loc 1 156 29 is_stmt 1 view .LVU3653
 10694              	.LVL671:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10695              		.loc 1 157 8 view .LVU3654
 10696              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10697              		.loc 1 157 19 is_stmt 0 view .LVU3655
 10698 3977 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10699              		.loc 1 157 29 is_stmt 1 view .LVU3656
 10700              	.LVL672:
 158:sieve_extend.c ****    }
 10701              		.loc 1 158 8 view .LVU3657
 10702 397b 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10703              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10704              		.loc 1 158 19 is_stmt 0 view .LVU3658
 10705 397e 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10706              		.loc 1 158 29 is_stmt 1 view .LVU3659
 10707 3982 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10708              	.LVL673:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 285


 10709              		.loc 1 153 10 view .LVU3660
 10710 3985 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10711 3988 765E     		jbe	.L518	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10712              		.loc 1 154 8 view .LVU3661
 10713              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10714              		.loc 1 154 19 is_stmt 0 view .LVU3662
 10715 398a 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10716              		.loc 1 154 29 is_stmt 1 view .LVU3663
 10717              	.LVL674:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10718              		.loc 1 155 8 view .LVU3664
 10719              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10720              		.loc 1 155 19 is_stmt 0 view .LVU3665
 10721 398d 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10722              		.loc 1 155 29 is_stmt 1 view .LVU3666
 10723              	.LVL675:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10724              		.loc 1 156 8 view .LVU3667
 10725              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10726              		.loc 1 156 19 is_stmt 0 view .LVU3668
 10727 3991 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10728              		.loc 1 156 29 is_stmt 1 view .LVU3669
 10729              	.LVL676:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10730              		.loc 1 157 8 view .LVU3670
 10731              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10732              		.loc 1 157 19 is_stmt 0 view .LVU3671
 10733 3994 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10734              		.loc 1 157 29 is_stmt 1 view .LVU3672
 10735              	.LVL677:
 158:sieve_extend.c ****    }
 10736              		.loc 1 158 8 view .LVU3673
 10737 3998 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10738              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10739              		.loc 1 158 19 is_stmt 0 view .LVU3674
 10740 399b 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10741              		.loc 1 158 29 is_stmt 1 view .LVU3675
 10742 399f 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10743              	.LVL678:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10744              		.loc 1 153 10 view .LVU3676
 10745 39a2 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10746 39a5 7641     		jbe	.L518	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10747              		.loc 1 154 8 view .LVU3677
 10748              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 286


 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10749              		.loc 1 154 19 is_stmt 0 view .LVU3678
 10750 39a7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10751              		.loc 1 154 29 is_stmt 1 view .LVU3679
 10752              	.LVL679:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10753              		.loc 1 155 8 view .LVU3680
 10754              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10755              		.loc 1 155 19 is_stmt 0 view .LVU3681
 10756 39aa 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10757              		.loc 1 155 29 is_stmt 1 view .LVU3682
 10758              	.LVL680:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10759              		.loc 1 156 8 view .LVU3683
 10760              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10761              		.loc 1 156 19 is_stmt 0 view .LVU3684
 10762 39ae 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10763              		.loc 1 156 29 is_stmt 1 view .LVU3685
 10764              	.LVL681:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10765              		.loc 1 157 8 view .LVU3686
 10766              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10767              		.loc 1 157 19 is_stmt 0 view .LVU3687
 10768 39b1 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10769              		.loc 1 157 29 is_stmt 1 view .LVU3688
 10770              	.LVL682:
 158:sieve_extend.c ****    }
 10771              		.loc 1 158 8 view .LVU3689
 10772 39b5 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10773              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10774              		.loc 1 158 19 is_stmt 0 view .LVU3690
 10775 39b8 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10776              		.loc 1 158 29 is_stmt 1 view .LVU3691
 10777 39bc 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10778              	.LVL683:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10779              		.loc 1 153 10 view .LVU3692
 10780 39bf 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10781 39c2 7624     		jbe	.L518	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10782              		.loc 1 154 8 view .LVU3693
 10783              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10784              		.loc 1 154 19 is_stmt 0 view .LVU3694
 10785 39c4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10786              		.loc 1 154 29 is_stmt 1 view .LVU3695
 10787              	.LVL684:
GAS LISTING /tmp/ccG38KJh.s 			page 287


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10788              		.loc 1 155 8 view .LVU3696
 10789              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10790              		.loc 1 155 19 is_stmt 0 view .LVU3697
 10791 39c7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10792              		.loc 1 155 29 is_stmt 1 view .LVU3698
 10793              	.LVL685:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10794              		.loc 1 156 8 view .LVU3699
 10795              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10796              		.loc 1 156 19 is_stmt 0 view .LVU3700
 10797 39cb 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10798              		.loc 1 156 29 is_stmt 1 view .LVU3701
 10799              	.LVL686:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10800              		.loc 1 157 8 view .LVU3702
 10801              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10802              		.loc 1 157 19 is_stmt 0 view .LVU3703
 10803 39ce 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10804              		.loc 1 157 29 is_stmt 1 view .LVU3704
 10805              	.LVL687:
 158:sieve_extend.c ****    }
 10806              		.loc 1 158 8 view .LVU3705
 10807 39d2 4D01D0   		add	r8, r10	# ivtmp.461, tmp690
 10808              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10809              		.loc 1 158 19 is_stmt 0 view .LVU3706
 10810 39d5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10811              		.loc 1 158 29 is_stmt 1 view .LVU3707
 10812 39d9 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10813              	.LVL688:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10814              		.loc 1 153 10 view .LVU3708
 10815 39dc 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10816 39df 0F8708FF 		ja	.L519	#,
 10816      FFFF
 10817              		.p2align 4,,10
 10818 39e5 0F1F00   		.p2align 3
 10819              	.L518:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10820              		.loc 1 161 4 view .LVU3709
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10821              		.loc 1 162 4 view .LVU3710
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10822              		.loc 1 162 10 view .LVU3711
 10823 39e8 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10824 39eb 735B     		jnb	.L520	#,
 10825              	.L521:
 163:sieve_extend.c ****    }
 10826              		.loc 1 163 8 view .LVU3712
GAS LISTING /tmp/ccG38KJh.s 			page 288


 10827              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10828              		.loc 1 163 19 is_stmt 0 view .LVU3713
 10829 39ed 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10830              		.loc 1 163 29 is_stmt 1 view .LVU3714
 10831              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10832              		.loc 1 163 38 is_stmt 0 view .LVU3715
 10833 39f0 4801D0   		add	rax, rdx	# index_ptr, _485
 10834              	.LVL689:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10835              		.loc 1 162 10 is_stmt 1 view .LVU3716
 10836 39f3 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10837 39f6 7350     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10838              		.loc 1 163 8 view .LVU3717
 10839              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10840              		.loc 1 163 19 is_stmt 0 view .LVU3718
 10841 39f8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10842              		.loc 1 163 29 is_stmt 1 view .LVU3719
 10843              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10844              		.loc 1 163 38 is_stmt 0 view .LVU3720
 10845 39fb 4801D0   		add	rax, rdx	# index_ptr, _485
 10846              	.LVL690:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10847              		.loc 1 162 10 is_stmt 1 view .LVU3721
 10848 39fe 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10849 3a01 7345     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10850              		.loc 1 163 8 view .LVU3722
 10851              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10852              		.loc 1 163 19 is_stmt 0 view .LVU3723
 10853 3a03 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10854              		.loc 1 163 29 is_stmt 1 view .LVU3724
 10855              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10856              		.loc 1 163 38 is_stmt 0 view .LVU3725
 10857 3a06 4801D0   		add	rax, rdx	# index_ptr, _485
 10858              	.LVL691:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10859              		.loc 1 162 10 is_stmt 1 view .LVU3726
 10860 3a09 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10861 3a0c 733A     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10862              		.loc 1 163 8 view .LVU3727
 10863              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10864              		.loc 1 163 19 is_stmt 0 view .LVU3728
 10865 3a0e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10866              		.loc 1 163 29 is_stmt 1 view .LVU3729
GAS LISTING /tmp/ccG38KJh.s 			page 289


 10867              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10868              		.loc 1 163 38 is_stmt 0 view .LVU3730
 10869 3a11 4801D0   		add	rax, rdx	# index_ptr, _485
 10870              	.LVL692:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10871              		.loc 1 162 10 is_stmt 1 view .LVU3731
 10872 3a14 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10873 3a17 732F     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10874              		.loc 1 163 8 view .LVU3732
 10875              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10876              		.loc 1 163 19 is_stmt 0 view .LVU3733
 10877 3a19 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10878              		.loc 1 163 29 is_stmt 1 view .LVU3734
 10879              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10880              		.loc 1 163 38 is_stmt 0 view .LVU3735
 10881 3a1c 4801D0   		add	rax, rdx	# index_ptr, _485
 10882              	.LVL693:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10883              		.loc 1 162 10 is_stmt 1 view .LVU3736
 10884 3a1f 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10885 3a22 7324     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10886              		.loc 1 163 8 view .LVU3737
 10887              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10888              		.loc 1 163 19 is_stmt 0 view .LVU3738
 10889 3a24 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10890              		.loc 1 163 29 is_stmt 1 view .LVU3739
 10891              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10892              		.loc 1 163 38 is_stmt 0 view .LVU3740
 10893 3a27 4801D0   		add	rax, rdx	# index_ptr, _485
 10894              	.LVL694:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10895              		.loc 1 162 10 is_stmt 1 view .LVU3741
 10896 3a2a 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10897 3a2d 7319     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10898              		.loc 1 163 8 view .LVU3742
 10899              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10900              		.loc 1 163 19 is_stmt 0 view .LVU3743
 10901 3a2f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10902              		.loc 1 163 29 is_stmt 1 view .LVU3744
 10903              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10904              		.loc 1 163 38 is_stmt 0 view .LVU3745
 10905 3a32 4801D0   		add	rax, rdx	# index_ptr, _485
 10906              	.LVL695:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccG38KJh.s 			page 290


 10907              		.loc 1 162 10 is_stmt 1 view .LVU3746
 10908 3a35 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10909 3a38 730E     		jnb	.L520	#,
 163:sieve_extend.c ****    }
 10910              		.loc 1 163 8 view .LVU3747
 10911              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10912              		.loc 1 163 19 is_stmt 0 view .LVU3748
 10913 3a3a 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10914              		.loc 1 163 29 is_stmt 1 view .LVU3749
 10915              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10916              		.loc 1 163 38 is_stmt 0 view .LVU3750
 10917 3a3d 4801D0   		add	rax, rdx	# index_ptr, _485
 10918              	.LVL696:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10919              		.loc 1 162 10 is_stmt 1 view .LVU3751
 10920 3a40 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10921 3a43 72A8     		jb	.L521	#,
 10922              		.p2align 4,,10
 10923 3a45 0F1F00   		.p2align 3
 10924              	.L520:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10925              		.loc 1 166 4 view .LVU3752
 10926              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10927              		.loc 1 166 7 is_stmt 0 view .LVU3753
 10928 3a48 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10929 3a4b 741B     		je	.L1095	#,
 10930              	.LVL697:
 10931              	.L522:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10932              		.loc 1 166 7 view .LVU3754
 10933              	.LBE703:
 10934              	.LBE706:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10935              		.loc 1 226 77 is_stmt 1 view .LVU3755
 10936              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10937              		.loc 1 226 83 is_stmt 0 view .LVU3756
 10938 3a4d 4901F1   		add	r9, rsi	# index, step
 10939              	.LVL698:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10940              		.loc 1 226 50 is_stmt 1 view .LVU3757
 10941              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10942              		.loc 1 226 5 is_stmt 0 view .LVU3758
 10943 3a50 4D39CF   		cmp	r15, r9	# range_stop_unique, index
 10944 3a53 0F8777FE 		ja	.L523	#,
 10944      FFFF
 10945 3a59 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# _387, %sfp
 10945      78
 10946              	.LVL699:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10947              		.loc 1 226 5 view .LVU3759
 10948 3a5e E908FDFF 		jmp	.L515	#
GAS LISTING /tmp/ccG38KJh.s 			page 291


 10948      FF
 10949              	.LVL700:
 10950              		.p2align 4,,10
 10951 3a63 0F1F4400 		.p2align 3
 10951      00
 10952              	.L1095:
 10953              	.LBB707:
 10954              	.LBB704:
 167:sieve_extend.c ****    }
 10955              		.loc 1 167 7 is_stmt 1 view .LVU3760
 10956              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 10957              		.loc 1 167 27 is_stmt 0 view .LVU3761
 10958 3a68 48234C24 		and	rcx, QWORD PTR 96[rsp]	# tmp695, %sfp
 10958      60
 10959              	.LVL701:
 10960              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 10961              		.loc 1 167 18 view .LVU3762
 10962 3a6d 48090F   		or	QWORD PTR [rdi], rcx	# *index_ptr_836, tmp695
 10963 3a70 EBDB     		jmp	.L522	#
 10964              	.LVL702:
 10965              	.L510:
 167:sieve_extend.c ****    }
 10966              		.loc 1 167 18 view .LVU3763
 10967              	.LBE704:
 10968              	.LBE707:
 10969              	.LBE699:
 10970              	.LBE698:
 10971              	.LBE697:
 10972              	.LBB708:
 10973              	.LBB709:
 10974              	.LBB710:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10975              		.loc 1 240 49 is_stmt 1 view .LVU3764
 10976 3a72 4C8B5424 		mov	r10, QWORD PTR 112[rsp]	# block_stop, %sfp
 10976      70
 10977              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10978              		.loc 1 240 13 is_stmt 0 view .LVU3765
 10979 3a77 4C394C24 		cmp	QWORD PTR 112[rsp], r9	# %sfp, index
 10979      70
 10980 3a7c 0F82E9FC 		jb	.L515	#,
 10980      FFFF
 10981              	.LVL703:
 10982              	.L512:
 241:sieve_extend.c ****             return;
 10983              		.loc 1 241 17 is_stmt 1 view .LVU3766
 10984              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10985              		.loc 1 241 51 is_stmt 0 view .LVU3767
 10986 3a82 4C89CA   		mov	rdx, r9	# tmp668, index
 10987              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10988              		.loc 1 241 54 view .LVU3768
 10989 3a85 C442B1F7 		shlx	r11, r13, r9	# tmp671, tmp753, index
 10989      DD
GAS LISTING /tmp/ccG38KJh.s 			page 292


 10990              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10991              		.loc 1 241 51 view .LVU3769
 10992 3a8a 48C1EA06 		shr	rdx, 6	# tmp668,
 10993              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10994              		.loc 1 240 76 view .LVU3770
 10995 3a8e 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 10996              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10997              		.loc 1 241 51 view .LVU3771
 10998 3a92 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp671
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10999              		.loc 1 240 70 is_stmt 1 view .LVU3772
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11000              		.loc 1 240 49 view .LVU3773
 11001              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11002              		.loc 1 240 13 is_stmt 0 view .LVU3774
 11003 3a96 4D39CA   		cmp	r10, r9	# block_stop, index
 11004 3a99 0F82CCFC 		jb	.L515	#,
 11004      FFFF
 241:sieve_extend.c ****             return;
 11005              		.loc 1 241 17 is_stmt 1 view .LVU3775
 11006              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11007              		.loc 1 241 51 is_stmt 0 view .LVU3776
 11008 3a9f 4D89CC   		mov	r12, r9	# tmp803, index
 11009              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11010              		.loc 1 241 54 view .LVU3777
 11011 3aa2 C4C2B1F7 		shlx	rcx, r13, r9	# tmp806, tmp753, index
 11011      CD
 11012              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11013              		.loc 1 241 51 view .LVU3778
 11014 3aa7 49C1EC06 		shr	r12, 6	# tmp803,
 11015              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11016              		.loc 1 240 76 view .LVU3779
 11017 3aab 4901F1   		add	r9, rsi	# index, step
 11018              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11019              		.loc 1 241 51 view .LVU3780
 11020 3aae 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp806
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11021              		.loc 1 240 70 is_stmt 1 view .LVU3781
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11022              		.loc 1 240 49 view .LVU3782
 11023              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11024              		.loc 1 240 13 is_stmt 0 view .LVU3783
 11025 3ab2 4D39CA   		cmp	r10, r9	# block_stop, index
 11026 3ab5 0F82B0FC 		jb	.L515	#,
 11026      FFFF
 241:sieve_extend.c ****             return;
 11027              		.loc 1 241 17 is_stmt 1 view .LVU3784
GAS LISTING /tmp/ccG38KJh.s 			page 293


 11028              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11029              		.loc 1 241 51 is_stmt 0 view .LVU3785
 11030 3abb 4C89C8   		mov	rax, r9	# tmp808, index
 11031              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11032              		.loc 1 241 54 view .LVU3786
 11033 3abe C442B1F7 		shlx	r8, r13, r9	# tmp811, tmp753, index
 11033      C5
 11034              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11035              		.loc 1 241 51 view .LVU3787
 11036 3ac3 48C1E806 		shr	rax, 6	# tmp808,
 11037              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11038              		.loc 1 240 76 view .LVU3788
 11039 3ac7 4901F1   		add	r9, rsi	# index, step
 11040              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11041              		.loc 1 241 51 view .LVU3789
 11042 3aca 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_459, tmp811
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11043              		.loc 1 240 70 is_stmt 1 view .LVU3790
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11044              		.loc 1 240 49 view .LVU3791
 11045              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11046              		.loc 1 240 13 is_stmt 0 view .LVU3792
 11047 3ace 4D39CA   		cmp	r10, r9	# block_stop, index
 11048 3ad1 0F8294FC 		jb	.L515	#,
 11048      FFFF
 241:sieve_extend.c ****             return;
 11049              		.loc 1 241 17 is_stmt 1 view .LVU3793
 11050              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11051              		.loc 1 241 51 is_stmt 0 view .LVU3794
 11052 3ad7 4C89CA   		mov	rdx, r9	# tmp813, index
 11053              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11054              		.loc 1 241 54 view .LVU3795
 11055 3ada C442B1F7 		shlx	r11, r13, r9	# tmp816, tmp753, index
 11055      DD
 11056              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11057              		.loc 1 241 51 view .LVU3796
 11058 3adf 48C1EA06 		shr	rdx, 6	# tmp813,
 11059              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11060              		.loc 1 240 76 view .LVU3797
 11061 3ae3 4901F1   		add	r9, rsi	# index, step
 11062              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11063              		.loc 1 241 51 view .LVU3798
 11064 3ae6 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp816
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11065              		.loc 1 240 70 is_stmt 1 view .LVU3799
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccG38KJh.s 			page 294


 11066              		.loc 1 240 49 view .LVU3800
 11067              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11068              		.loc 1 240 13 is_stmt 0 view .LVU3801
 11069 3aea 4D39CA   		cmp	r10, r9	# block_stop, index
 11070 3aed 0F8278FC 		jb	.L515	#,
 11070      FFFF
 241:sieve_extend.c ****             return;
 11071              		.loc 1 241 17 is_stmt 1 view .LVU3802
 11072              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11073              		.loc 1 241 51 is_stmt 0 view .LVU3803
 11074 3af3 4D89CC   		mov	r12, r9	# tmp818, index
 11075              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11076              		.loc 1 241 54 view .LVU3804
 11077 3af6 C4C2B1F7 		shlx	rcx, r13, r9	# tmp821, tmp753, index
 11077      CD
 11078              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11079              		.loc 1 241 51 view .LVU3805
 11080 3afb 49C1EC06 		shr	r12, 6	# tmp818,
 11081              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11082              		.loc 1 240 76 view .LVU3806
 11083 3aff 4901F1   		add	r9, rsi	# index, step
 11084              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11085              		.loc 1 241 51 view .LVU3807
 11086 3b02 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp821
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11087              		.loc 1 240 70 is_stmt 1 view .LVU3808
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11088              		.loc 1 240 49 view .LVU3809
 11089              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11090              		.loc 1 240 13 is_stmt 0 view .LVU3810
 11091 3b06 4D39CA   		cmp	r10, r9	# block_stop, index
 11092 3b09 0F825CFC 		jb	.L515	#,
 11092      FFFF
 241:sieve_extend.c ****             return;
 11093              		.loc 1 241 17 is_stmt 1 view .LVU3811
 11094              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11095              		.loc 1 241 51 is_stmt 0 view .LVU3812
 11096 3b0f 4C89C8   		mov	rax, r9	# tmp823, index
 11097              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11098              		.loc 1 241 54 view .LVU3813
 11099 3b12 C442B1F7 		shlx	r8, r13, r9	# tmp826, tmp753, index
 11099      C5
 11100              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11101              		.loc 1 241 51 view .LVU3814
 11102 3b17 48C1E806 		shr	rax, 6	# tmp823,
 11103              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccG38KJh.s 			page 295


 11104              		.loc 1 240 76 view .LVU3815
 11105 3b1b 4901F1   		add	r9, rsi	# index, step
 11106              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11107              		.loc 1 241 51 view .LVU3816
 11108 3b1e 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_459, tmp826
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11109              		.loc 1 240 70 is_stmt 1 view .LVU3817
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11110              		.loc 1 240 49 view .LVU3818
 11111              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11112              		.loc 1 240 13 is_stmt 0 view .LVU3819
 11113 3b22 4D39CA   		cmp	r10, r9	# block_stop, index
 11114 3b25 0F8240FC 		jb	.L515	#,
 11114      FFFF
 241:sieve_extend.c ****             return;
 11115              		.loc 1 241 17 is_stmt 1 view .LVU3820
 11116              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11117              		.loc 1 241 51 is_stmt 0 view .LVU3821
 11118 3b2b 4C89CA   		mov	rdx, r9	# tmp828, index
 11119              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11120              		.loc 1 241 54 view .LVU3822
 11121 3b2e C442B1F7 		shlx	r11, r13, r9	# tmp831, tmp753, index
 11121      DD
 11122              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11123              		.loc 1 241 51 view .LVU3823
 11124 3b33 48C1EA06 		shr	rdx, 6	# tmp828,
 11125              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11126              		.loc 1 240 76 view .LVU3824
 11127 3b37 4901F1   		add	r9, rsi	# index, step
 11128              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11129              		.loc 1 241 51 view .LVU3825
 11130 3b3a 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp831
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11131              		.loc 1 240 70 is_stmt 1 view .LVU3826
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11132              		.loc 1 240 49 view .LVU3827
 11133              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11134              		.loc 1 240 13 is_stmt 0 view .LVU3828
 11135 3b3e 4D39CA   		cmp	r10, r9	# block_stop, index
 11136 3b41 0F8224FC 		jb	.L515	#,
 11136      FFFF
 241:sieve_extend.c ****             return;
 11137              		.loc 1 241 17 is_stmt 1 view .LVU3829
 11138              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11139              		.loc 1 241 51 is_stmt 0 view .LVU3830
 11140 3b47 4D89CC   		mov	r12, r9	# tmp833, index
 11141              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
GAS LISTING /tmp/ccG38KJh.s 			page 296


 11142              		.loc 1 241 54 view .LVU3831
 11143 3b4a C4C2B1F7 		shlx	rcx, r13, r9	# tmp836, tmp753, index
 11143      CD
 11144              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11145              		.loc 1 241 51 view .LVU3832
 11146 3b4f 49C1EC06 		shr	r12, 6	# tmp833,
 11147              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11148              		.loc 1 240 76 view .LVU3833
 11149 3b53 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 11150              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11151              		.loc 1 241 51 view .LVU3834
 11152 3b57 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp836
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11153              		.loc 1 240 70 is_stmt 1 view .LVU3835
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11154              		.loc 1 240 49 view .LVU3836
 11155              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11156              		.loc 1 240 13 is_stmt 0 view .LVU3837
 11157 3b5b 4D39CA   		cmp	r10, r9	# block_stop, index
 11158 3b5e 0F831EFF 		jnb	.L512	#,
 11158      FFFF
 11159 3b64 E902FCFF 		jmp	.L515	#
 11159      FF
 11160              	.LVL704:
 11161              	.L930:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11162              		.loc 1 240 13 view .LVU3838
 11163 3b69 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 11163      30
 11164 3b6e E91CF3FF 		jmp	.L450	#
 11164      FF
 11165              	.L544:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11166              		.loc 1 240 13 view .LVU3839
 11167              	.LBE710:
 11168              	.LBE709:
 11169              	.LBE708:
 11170              	.LBE715:
 11171              	.LBE734:
 11172              	.LBE736:
 11173              	.LBE742:
 11174              	.LBE743:
 11175              	.LBE744:
 11176              	.LBB745:
 11177              	.LBB628:
 11178              	.LBB623:
 11179 3b73 4C8B4424 		mov	r8, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 11179      60
 11180 3b78 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, block$pattern_start
 11180      50
 11181 3b7d E932E7FF 		jmp	.L452	#
 11181      FF
 11182              	.LVL705:
GAS LISTING /tmp/ccG38KJh.s 			page 297


 11183              	.L500:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11184              		.loc 1 240 13 view .LVU3840
 11185              	.LBE623:
 11186              	.LBE628:
 11187              	.LBE745:
 11188              	.LBB746:
 11189              	.LBB636:
 427:sieve_extend.c **** }
 11190              		.loc 1 427 37 is_stmt 1 view .LVU3841
 11191 3b82 C5F877   		vzeroupper
 11192 3b85 E896D0FF 		call	continuePattern_aligned	#
 11192      FF
 11193              	.LVL706:
 427:sieve_extend.c **** }
 11194              		.loc 1 427 37 is_stmt 0 view .LVU3842
 11195 3b8a E96FF3FF 		jmp	.L498	#
 11195      FF
 11196              	.LVL707:
 11197              	.L1090:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11198              		.loc 1 425 37 is_stmt 1 view .LVU3843
 11199 3b8f C5F877   		vzeroupper
 11200 3b92 E889D5FF 		call	continuePattern_shiftleft	#
 11200      FF
 11201              	.LVL708:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11202              		.loc 1 425 37 is_stmt 0 view .LVU3844
 11203 3b97 E962F3FF 		jmp	.L498	#
 11203      FF
 11204              	.LVL709:
 11205              	.L477:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11206              		.loc 1 425 37 view .LVU3845
 11207              	.LBE636:
 11208              	.LBE746:
 11209              	.LBB747:
 11210              	.LBB629:
 11211              	.LBB624:
 11212              	.LBB617:
 11213              	.LBB582:
 251:sieve_extend.c ****         return;
 11214              		.loc 1 251 9 is_stmt 1 view .LVU3846
 11215              	.LBB568:
 11216              	.LBI568:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 11217              		.loc 1 221 20 view .LVU3847
 11218              	.LBB569:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11219              		.loc 1 222 5 view .LVU3848
 223:sieve_extend.c **** 
 11220              		.loc 1 223 5 view .LVU3849
 11221              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 11222              		.loc 1 223 74 is_stmt 0 view .LVU3850
 11223 3b9c 4D89E3   		mov	r11, r12	# tmp581, step
 11224 3b9f 49C1E306 		sal	r11, 6	# tmp581,
GAS LISTING /tmp/ccG38KJh.s 			page 298


 11225              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 11226              		.loc 1 223 21 view .LVU3851
 11227 3ba3 4901DB   		add	r11, rbx	# range_stop_unique, index
 11228              	.LVL710:
 11229              	.LBB570:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11230              		.loc 1 226 10 is_stmt 1 view .LVU3852
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11231              		.loc 1 226 50 view .LVU3853
 11232              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11233              		.loc 1 226 5 is_stmt 0 view .LVU3854
 11234 3ba6 4C39DB   		cmp	rbx, r11	# index, range_stop_unique
 11235 3ba9 0F836CEB 		jnb	.L462	#,
 11235      FFFF
 11236              	.LBB571:
 11237              	.LBB572:
 11238              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11239              		.loc 1 147 20 view .LVU3855
 11240 3baf 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# _70, %sfp
 11240      78
 11241              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11242              		.loc 1 149 112 view .LVU3856
 11243 3bb4 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp584,
 11244              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11245              		.loc 1 147 20 view .LVU3857
 11246 3bb8 4889C8   		mov	rax, rcx	# range_stop_word, _70
 11247 3bbb 48C1E806 		shr	rax, 6	# range_stop_word,
 11248              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11249              		.loc 1 167 29 view .LVU3858
 11250 3bbf 4189C9   		mov	r9d, ecx	# tmp585, _70
 11251              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11252              		.loc 1 149 135 view .LVU3859
 11253 3bc2 4989C2   		mov	r10, rax	# tmp590, range_stop_word
 11254              	.LVL711:
 149:sieve_extend.c **** 
 11255              		.loc 1 149 135 view .LVU3860
 11256 3bc5 4929FA   		sub	r10, rdi	# tmp590, tmp584
 11257              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11258              		.loc 1 167 29 view .LVU3861
 11259 3bc8 41F7D1   		not	r9d	# tmp585
 11260 3bcb 48C7C6FF 		mov	rsi, -1	# tmp1543,
 11260      FFFFFF
 11261              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11262              		.loc 1 149 53 view .LVU3862
 11263 3bd2 4839F8   		cmp	rax, rdi	# range_stop_word, tmp584
 11264              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11265              		.loc 1 167 29 view .LVU3863
GAS LISTING /tmp/ccG38KJh.s 			page 299


 11266 3bd5 C462B3F7 		shrx	r8, rsi, r9	# _284, tmp1543, tmp585
 11266      C6
 11267              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11268              		.loc 1 149 53 view .LVU3864
 11269 3bda 4F8D0CD7 		lea	r9, [r15+r10*8]	# tmp592,
 11270 3bde 4D89E2   		mov	r10, r12	# _1173, step
 11271 3be1 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 11272              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11273              		.loc 1 167 29 view .LVU3865
 11274 3be5 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _284
 11274      48
 11275              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11276              		.loc 1 154 38 view .LVU3866
 11277 3bea 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _251,
 11277      00000000 
 11278              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11279              		.loc 1 161 83 view .LVU3867
 11280 3bf2 4D8D04C7 		lea	r8, [r15+rax*8]	# _269,
 11281 3bf6 48C1E703 		sal	rdi, 3	# tmp596,
 11282 3bfa 49C1E204 		sal	r10, 4	# _1173,
 11283              	.LVL712:
 11284 3bfe 6690     		.p2align 4,,10
 11285              		.p2align 3
 11286              	.L484:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11287              		.loc 1 161 83 view .LVU3868
 11288              	.LBE572:
 11289              	.LBE571:
 227:sieve_extend.c ****     }
 11290              		.loc 1 227 9 is_stmt 1 view .LVU3869
 11291 3c00 4889D8   		mov	rax, rbx	# tmp599, index
 11292 3c03 48C1E806 		shr	rax, 6	# tmp599,
 11293 3c07 B9010000 		mov	ecx, 1	# tmp1546,
 11293      00
 11294              	.LBB576:
 11295              	.LBB573:
 11296              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11297              		.loc 1 148 78 is_stmt 0 view .LVU3870
 11298 3c0c 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11299              	.LBE573:
 11300              	.LBE576:
 11301              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 11302              		.loc 1 227 9 view .LVU3871
 11303 3c10 C4E2E1F7 		shlx	rcx, rcx, rbx	# _236, tmp1546, index
 11303      C9
 11304              	.LVL713:
 11305              	.LBB577:
 11306              	.LBI571:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 11307              		.loc 1 146 20 is_stmt 1 view .LVU3872
 11308              	.LBB574:
GAS LISTING /tmp/ccG38KJh.s 			page 300


 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11309              		.loc 1 147 4 view .LVU3873
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11310              		.loc 1 148 4 view .LVU3874
 149:sieve_extend.c **** 
 11311              		.loc 1 149 4 view .LVU3875
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11312              		.loc 1 153 10 view .LVU3876
 11313 3c15 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 11314 3c18 0F830201 		jnb	.L479	#,
 11314      0000
 11315 3c1e 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.580,
 11316              	.L480:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11317              		.loc 1 154 8 view .LVU3877
 11318              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11319              		.loc 1 154 19 is_stmt 0 view .LVU3878
 11320 3c22 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11321              		.loc 1 154 29 is_stmt 1 view .LVU3879
 11322              	.LVL714:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11323              		.loc 1 155 8 view .LVU3880
 11324              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11325              		.loc 1 155 19 is_stmt 0 view .LVU3881
 11326 3c25 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11327              		.loc 1 155 29 is_stmt 1 view .LVU3882
 11328              	.LVL715:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11329              		.loc 1 156 8 view .LVU3883
 11330              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11331              		.loc 1 156 19 is_stmt 0 view .LVU3884
 11332 3c29 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11333              		.loc 1 156 29 is_stmt 1 view .LVU3885
 11334              	.LVL716:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11335              		.loc 1 157 8 view .LVU3886
 11336              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11337              		.loc 1 157 19 is_stmt 0 view .LVU3887
 11338 3c2c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11339              		.loc 1 157 29 is_stmt 1 view .LVU3888
 11340              	.LVL717:
 158:sieve_extend.c ****    }
 11341              		.loc 1 158 8 view .LVU3889
 11342 3c30 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11343              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11344              		.loc 1 158 19 is_stmt 0 view .LVU3890
 11345 3c33 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 301


 11346              		.loc 1 158 29 is_stmt 1 view .LVU3891
 11347 3c37 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11348              	.LVL718:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11349              		.loc 1 153 10 view .LVU3892
 11350 3c3a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11351 3c3d 0F86DD00 		jbe	.L479	#,
 11351      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11352              		.loc 1 154 8 view .LVU3893
 11353              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11354              		.loc 1 154 19 is_stmt 0 view .LVU3894
 11355 3c43 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11356              		.loc 1 154 29 is_stmt 1 view .LVU3895
 11357              	.LVL719:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11358              		.loc 1 155 8 view .LVU3896
 11359              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11360              		.loc 1 155 19 is_stmt 0 view .LVU3897
 11361 3c46 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11362              		.loc 1 155 29 is_stmt 1 view .LVU3898
 11363              	.LVL720:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11364              		.loc 1 156 8 view .LVU3899
 11365              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11366              		.loc 1 156 19 is_stmt 0 view .LVU3900
 11367 3c4a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11368              		.loc 1 156 29 is_stmt 1 view .LVU3901
 11369              	.LVL721:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11370              		.loc 1 157 8 view .LVU3902
 11371              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11372              		.loc 1 157 19 is_stmt 0 view .LVU3903
 11373 3c4d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11374              		.loc 1 157 29 is_stmt 1 view .LVU3904
 11375              	.LVL722:
 158:sieve_extend.c ****    }
 11376              		.loc 1 158 8 view .LVU3905
 11377 3c51 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11378              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11379              		.loc 1 158 19 is_stmt 0 view .LVU3906
 11380 3c54 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11381              		.loc 1 158 29 is_stmt 1 view .LVU3907
 11382 3c58 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11383              	.LVL723:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11384              		.loc 1 153 10 view .LVU3908
GAS LISTING /tmp/ccG38KJh.s 			page 302


 11385 3c5b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11386 3c5e 0F86BC00 		jbe	.L479	#,
 11386      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11387              		.loc 1 154 8 view .LVU3909
 11388              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11389              		.loc 1 154 19 is_stmt 0 view .LVU3910
 11390 3c64 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11391              		.loc 1 154 29 is_stmt 1 view .LVU3911
 11392              	.LVL724:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11393              		.loc 1 155 8 view .LVU3912
 11394              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11395              		.loc 1 155 19 is_stmt 0 view .LVU3913
 11396 3c67 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11397              		.loc 1 155 29 is_stmt 1 view .LVU3914
 11398              	.LVL725:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11399              		.loc 1 156 8 view .LVU3915
 11400              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11401              		.loc 1 156 19 is_stmt 0 view .LVU3916
 11402 3c6b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11403              		.loc 1 156 29 is_stmt 1 view .LVU3917
 11404              	.LVL726:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11405              		.loc 1 157 8 view .LVU3918
 11406              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11407              		.loc 1 157 19 is_stmt 0 view .LVU3919
 11408 3c6e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11409              		.loc 1 157 29 is_stmt 1 view .LVU3920
 11410              	.LVL727:
 158:sieve_extend.c ****    }
 11411              		.loc 1 158 8 view .LVU3921
 11412 3c72 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11413              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11414              		.loc 1 158 19 is_stmt 0 view .LVU3922
 11415 3c75 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11416              		.loc 1 158 29 is_stmt 1 view .LVU3923
 11417 3c79 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11418              	.LVL728:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11419              		.loc 1 153 10 view .LVU3924
 11420 3c7c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11421 3c7f 0F869B00 		jbe	.L479	#,
 11421      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11422              		.loc 1 154 8 view .LVU3925
GAS LISTING /tmp/ccG38KJh.s 			page 303


 11423              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11424              		.loc 1 154 19 is_stmt 0 view .LVU3926
 11425 3c85 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11426              		.loc 1 154 29 is_stmt 1 view .LVU3927
 11427              	.LVL729:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11428              		.loc 1 155 8 view .LVU3928
 11429              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11430              		.loc 1 155 19 is_stmt 0 view .LVU3929
 11431 3c88 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11432              		.loc 1 155 29 is_stmt 1 view .LVU3930
 11433              	.LVL730:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11434              		.loc 1 156 8 view .LVU3931
 11435              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11436              		.loc 1 156 19 is_stmt 0 view .LVU3932
 11437 3c8c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11438              		.loc 1 156 29 is_stmt 1 view .LVU3933
 11439              	.LVL731:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11440              		.loc 1 157 8 view .LVU3934
 11441              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11442              		.loc 1 157 19 is_stmt 0 view .LVU3935
 11443 3c8f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11444              		.loc 1 157 29 is_stmt 1 view .LVU3936
 11445              	.LVL732:
 158:sieve_extend.c ****    }
 11446              		.loc 1 158 8 view .LVU3937
 11447 3c93 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11448              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11449              		.loc 1 158 19 is_stmt 0 view .LVU3938
 11450 3c96 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11451              		.loc 1 158 29 is_stmt 1 view .LVU3939
 11452 3c9a 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11453              	.LVL733:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11454              		.loc 1 153 10 view .LVU3940
 11455 3c9d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11456 3ca0 767E     		jbe	.L479	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11457              		.loc 1 154 8 view .LVU3941
 11458              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11459              		.loc 1 154 19 is_stmt 0 view .LVU3942
 11460 3ca2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11461              		.loc 1 154 29 is_stmt 1 view .LVU3943
GAS LISTING /tmp/ccG38KJh.s 			page 304


 11462              	.LVL734:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11463              		.loc 1 155 8 view .LVU3944
 11464              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11465              		.loc 1 155 19 is_stmt 0 view .LVU3945
 11466 3ca5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11467              		.loc 1 155 29 is_stmt 1 view .LVU3946
 11468              	.LVL735:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11469              		.loc 1 156 8 view .LVU3947
 11470              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11471              		.loc 1 156 19 is_stmt 0 view .LVU3948
 11472 3ca9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11473              		.loc 1 156 29 is_stmt 1 view .LVU3949
 11474              	.LVL736:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11475              		.loc 1 157 8 view .LVU3950
 11476              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11477              		.loc 1 157 19 is_stmt 0 view .LVU3951
 11478 3cac 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11479              		.loc 1 157 29 is_stmt 1 view .LVU3952
 11480              	.LVL737:
 158:sieve_extend.c ****    }
 11481              		.loc 1 158 8 view .LVU3953
 11482 3cb0 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11483              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11484              		.loc 1 158 19 is_stmt 0 view .LVU3954
 11485 3cb3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11486              		.loc 1 158 29 is_stmt 1 view .LVU3955
 11487 3cb7 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11488              	.LVL738:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11489              		.loc 1 153 10 view .LVU3956
 11490 3cba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11491 3cbd 7661     		jbe	.L479	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11492              		.loc 1 154 8 view .LVU3957
 11493              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11494              		.loc 1 154 19 is_stmt 0 view .LVU3958
 11495 3cbf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11496              		.loc 1 154 29 is_stmt 1 view .LVU3959
 11497              	.LVL739:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11498              		.loc 1 155 8 view .LVU3960
 11499              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11500              		.loc 1 155 19 is_stmt 0 view .LVU3961
GAS LISTING /tmp/ccG38KJh.s 			page 305


 11501 3cc2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11502              		.loc 1 155 29 is_stmt 1 view .LVU3962
 11503              	.LVL740:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11504              		.loc 1 156 8 view .LVU3963
 11505              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11506              		.loc 1 156 19 is_stmt 0 view .LVU3964
 11507 3cc6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11508              		.loc 1 156 29 is_stmt 1 view .LVU3965
 11509              	.LVL741:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11510              		.loc 1 157 8 view .LVU3966
 11511              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11512              		.loc 1 157 19 is_stmt 0 view .LVU3967
 11513 3cc9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11514              		.loc 1 157 29 is_stmt 1 view .LVU3968
 11515              	.LVL742:
 158:sieve_extend.c ****    }
 11516              		.loc 1 158 8 view .LVU3969
 11517 3ccd 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11518              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11519              		.loc 1 158 19 is_stmt 0 view .LVU3970
 11520 3cd0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11521              		.loc 1 158 29 is_stmt 1 view .LVU3971
 11522 3cd4 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11523              	.LVL743:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11524              		.loc 1 153 10 view .LVU3972
 11525 3cd7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11526 3cda 7644     		jbe	.L479	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11527              		.loc 1 154 8 view .LVU3973
 11528              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11529              		.loc 1 154 19 is_stmt 0 view .LVU3974
 11530 3cdc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11531              		.loc 1 154 29 is_stmt 1 view .LVU3975
 11532              	.LVL744:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11533              		.loc 1 155 8 view .LVU3976
 11534              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11535              		.loc 1 155 19 is_stmt 0 view .LVU3977
 11536 3cdf 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11537              		.loc 1 155 29 is_stmt 1 view .LVU3978
 11538              	.LVL745:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11539              		.loc 1 156 8 view .LVU3979
GAS LISTING /tmp/ccG38KJh.s 			page 306


 11540              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11541              		.loc 1 156 19 is_stmt 0 view .LVU3980
 11542 3ce3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11543              		.loc 1 156 29 is_stmt 1 view .LVU3981
 11544              	.LVL746:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11545              		.loc 1 157 8 view .LVU3982
 11546              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11547              		.loc 1 157 19 is_stmt 0 view .LVU3983
 11548 3ce6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11549              		.loc 1 157 29 is_stmt 1 view .LVU3984
 11550              	.LVL747:
 158:sieve_extend.c ****    }
 11551              		.loc 1 158 8 view .LVU3985
 11552 3cea 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11553              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11554              		.loc 1 158 19 is_stmt 0 view .LVU3986
 11555 3ced 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11556              		.loc 1 158 29 is_stmt 1 view .LVU3987
 11557 3cf1 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11558              	.LVL748:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11559              		.loc 1 153 10 view .LVU3988
 11560 3cf4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11561 3cf7 7627     		jbe	.L479	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11562              		.loc 1 154 8 view .LVU3989
 11563              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11564              		.loc 1 154 19 is_stmt 0 view .LVU3990
 11565 3cf9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11566              		.loc 1 154 29 is_stmt 1 view .LVU3991
 11567              	.LVL749:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11568              		.loc 1 155 8 view .LVU3992
 11569              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11570              		.loc 1 155 19 is_stmt 0 view .LVU3993
 11571 3cfc 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11572              		.loc 1 155 29 is_stmt 1 view .LVU3994
 11573              	.LVL750:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11574              		.loc 1 156 8 view .LVU3995
 11575              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11576              		.loc 1 156 19 is_stmt 0 view .LVU3996
 11577 3d00 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11578              		.loc 1 156 29 is_stmt 1 view .LVU3997
GAS LISTING /tmp/ccG38KJh.s 			page 307


 11579              	.LVL751:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11580              		.loc 1 157 8 view .LVU3998
 11581              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11582              		.loc 1 157 19 is_stmt 0 view .LVU3999
 11583 3d03 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11584              		.loc 1 157 29 is_stmt 1 view .LVU4000
 11585              	.LVL752:
 158:sieve_extend.c ****    }
 11586              		.loc 1 158 8 view .LVU4001
 11587 3d07 4801FE   		add	rsi, rdi	# ivtmp.580, tmp596
 11588              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11589              		.loc 1 158 19 is_stmt 0 view .LVU4002
 11590 3d0a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11591              		.loc 1 158 29 is_stmt 1 view .LVU4003
 11592 3d0e 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11593              	.LVL753:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11594              		.loc 1 153 10 view .LVU4004
 11595 3d11 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11596 3d14 0F8708FF 		ja	.L480	#,
 11596      FFFF
 11597 3d1a 660F1F44 		.p2align 4,,10
 11597      0000
 11598              		.p2align 3
 11599              	.L479:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11600              		.loc 1 161 4 view .LVU4005
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11601              		.loc 1 162 4 view .LVU4006
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11602              		.loc 1 162 10 view .LVU4007
 11603 3d20 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11604 3d23 735B     		jnb	.L481	#,
 11605              	.L482:
 163:sieve_extend.c ****    }
 11606              		.loc 1 163 8 view .LVU4008
 11607              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11608              		.loc 1 163 19 is_stmt 0 view .LVU4009
 11609 3d25 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11610              		.loc 1 163 29 is_stmt 1 view .LVU4010
 11611              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11612              		.loc 1 163 38 is_stmt 0 view .LVU4011
 11613 3d28 4801D0   		add	rax, rdx	# index_ptr, _251
 11614              	.LVL754:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11615              		.loc 1 162 10 is_stmt 1 view .LVU4012
 11616 3d2b 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11617 3d2e 7350     		jnb	.L481	#,
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 308


 11618              		.loc 1 163 8 view .LVU4013
 11619              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11620              		.loc 1 163 19 is_stmt 0 view .LVU4014
 11621 3d30 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11622              		.loc 1 163 29 is_stmt 1 view .LVU4015
 11623              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11624              		.loc 1 163 38 is_stmt 0 view .LVU4016
 11625 3d33 4801D0   		add	rax, rdx	# index_ptr, _251
 11626              	.LVL755:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11627              		.loc 1 162 10 is_stmt 1 view .LVU4017
 11628 3d36 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11629 3d39 7345     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11630              		.loc 1 163 8 view .LVU4018
 11631              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11632              		.loc 1 163 19 is_stmt 0 view .LVU4019
 11633 3d3b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11634              		.loc 1 163 29 is_stmt 1 view .LVU4020
 11635              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11636              		.loc 1 163 38 is_stmt 0 view .LVU4021
 11637 3d3e 4801D0   		add	rax, rdx	# index_ptr, _251
 11638              	.LVL756:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11639              		.loc 1 162 10 is_stmt 1 view .LVU4022
 11640 3d41 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11641 3d44 733A     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11642              		.loc 1 163 8 view .LVU4023
 11643              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11644              		.loc 1 163 19 is_stmt 0 view .LVU4024
 11645 3d46 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11646              		.loc 1 163 29 is_stmt 1 view .LVU4025
 11647              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11648              		.loc 1 163 38 is_stmt 0 view .LVU4026
 11649 3d49 4801D0   		add	rax, rdx	# index_ptr, _251
 11650              	.LVL757:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11651              		.loc 1 162 10 is_stmt 1 view .LVU4027
 11652 3d4c 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11653 3d4f 732F     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11654              		.loc 1 163 8 view .LVU4028
 11655              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11656              		.loc 1 163 19 is_stmt 0 view .LVU4029
 11657 3d51 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 309


 11658              		.loc 1 163 29 is_stmt 1 view .LVU4030
 11659              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11660              		.loc 1 163 38 is_stmt 0 view .LVU4031
 11661 3d54 4801D0   		add	rax, rdx	# index_ptr, _251
 11662              	.LVL758:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11663              		.loc 1 162 10 is_stmt 1 view .LVU4032
 11664 3d57 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11665 3d5a 7324     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11666              		.loc 1 163 8 view .LVU4033
 11667              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11668              		.loc 1 163 19 is_stmt 0 view .LVU4034
 11669 3d5c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11670              		.loc 1 163 29 is_stmt 1 view .LVU4035
 11671              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11672              		.loc 1 163 38 is_stmt 0 view .LVU4036
 11673 3d5f 4801D0   		add	rax, rdx	# index_ptr, _251
 11674              	.LVL759:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11675              		.loc 1 162 10 is_stmt 1 view .LVU4037
 11676 3d62 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11677 3d65 7319     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11678              		.loc 1 163 8 view .LVU4038
 11679              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11680              		.loc 1 163 19 is_stmt 0 view .LVU4039
 11681 3d67 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11682              		.loc 1 163 29 is_stmt 1 view .LVU4040
 11683              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11684              		.loc 1 163 38 is_stmt 0 view .LVU4041
 11685 3d6a 4801D0   		add	rax, rdx	# index_ptr, _251
 11686              	.LVL760:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11687              		.loc 1 162 10 is_stmt 1 view .LVU4042
 11688 3d6d 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11689 3d70 730E     		jnb	.L481	#,
 163:sieve_extend.c ****    }
 11690              		.loc 1 163 8 view .LVU4043
 11691              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11692              		.loc 1 163 19 is_stmt 0 view .LVU4044
 11693 3d72 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11694              		.loc 1 163 29 is_stmt 1 view .LVU4045
 11695              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11696              		.loc 1 163 38 is_stmt 0 view .LVU4046
 11697 3d75 4801D0   		add	rax, rdx	# index_ptr, _251
 11698              	.LVL761:
GAS LISTING /tmp/ccG38KJh.s 			page 310


 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11699              		.loc 1 162 10 is_stmt 1 view .LVU4047
 11700 3d78 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11701 3d7b 72A8     		jb	.L482	#,
 11702 3d7d 0F1F00   		.p2align 4,,10
 11703              		.p2align 3
 11704              	.L481:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11705              		.loc 1 166 4 view .LVU4048
 11706              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11707              		.loc 1 166 7 is_stmt 0 view .LVU4049
 11708 3d80 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11709 3d83 7411     		je	.L1096	#,
 11710              	.LVL762:
 11711              	.L483:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11712              		.loc 1 166 7 view .LVU4050
 11713              	.LBE574:
 11714              	.LBE577:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11715              		.loc 1 226 77 is_stmt 1 view .LVU4051
 11716              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11717              		.loc 1 226 83 is_stmt 0 view .LVU4052
 11718 3d85 4C01E3   		add	rbx, r12	# index, step
 11719              	.LVL763:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11720              		.loc 1 226 50 is_stmt 1 view .LVU4053
 11721              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11722              		.loc 1 226 5 is_stmt 0 view .LVU4054
 11723 3d88 4939DB   		cmp	r11, rbx	# range_stop_unique, index
 11724 3d8b 0F876FFE 		ja	.L484	#,
 11724      FFFF
 11725 3d91 E985E9FF 		jmp	.L462	#
 11725      FF
 11726              	.LVL764:
 11727              	.L1096:
 11728              	.LBB578:
 11729              	.LBB575:
 167:sieve_extend.c ****    }
 11730              		.loc 1 167 7 is_stmt 1 view .LVU4055
 11731              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11732              		.loc 1 167 27 is_stmt 0 view .LVU4056
 11733 3d96 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp601, %sfp
 11733      48
 11734              	.LVL765:
 11735              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11736              		.loc 1 167 18 view .LVU4057
 11737 3d9b 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_841, tmp601
 11738 3d9e EBE5     		jmp	.L483	#
 11739              	.LVL766:
 11740              	.L1089:
 167:sieve_extend.c ****    }
GAS LISTING /tmp/ccG38KJh.s 			page 311


 11741              		.loc 1 167 18 view .LVU4058
 11742 3da0 C5F877   		vzeroupper
 11743              	.LVL767:
 11744              	.L447:
 167:sieve_extend.c ****    }
 11745              		.loc 1 167 18 view .LVU4059
 11746              	.LBE575:
 11747              	.LBE578:
 11748              	.LBE570:
 11749              	.LBE569:
 11750              	.LBE568:
 11751              	.LBE582:
 11752              	.LBE617:
 11753              	.LBE624:
 11754              	.LBE629:
 11755              	.LBE747:
 11756              	.LBB748:
 11757              	.LBB637:
 420:sieve_extend.c **** 
 11758              		.loc 1 420 35 is_stmt 1 view .LVU4060
 11759              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 11760              		.loc 1 420 42 is_stmt 0 view .LVU4061
 11761 3da3 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 11761      70
 11762 3da8 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
 11762      60
 11763 3dad 4C89F2   		mov	rdx, r14	#, patternsize_bits
 11764 3db0 4C89FF   		mov	rdi, r15	#, _101
 11765 3db3 E848C2FF 		call	continuePattern_smallSize	#
 11765      FF
 11766              	.LVL768:
 11767 3db8 E941F1FF 		jmp	.L498	#
 11767      FF
 11768              	.LVL769:
 11769              	.L474:
 420:sieve_extend.c **** 
 11770              		.loc 1 420 42 view .LVU4062
 11771              	.LBE637:
 11772              	.LBE748:
 11773              	.LBB749:
 11774              	.LBB630:
 11775              	.LBB625:
 11776              	.LBB618:
 11777              	.LBB583:
 11778              	.LBB579:
 11779              	.LBB580:
 11780              	.LBB581:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11781              		.loc 1 240 49 is_stmt 1 view .LVU4063
 11782              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11783              		.loc 1 240 13 is_stmt 0 view .LVU4064
 11784 3dbd 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# _70, %sfp
 11784      78
 11785 3dc2 4939DB   		cmp	r11, rbx	# _70, index
 11786 3dc5 0F8250E9 		jb	.L462	#,
GAS LISTING /tmp/ccG38KJh.s 			page 312


 11786      FFFF
 11787              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11788              		.loc 1 241 54 view .LVU4065
 11789 3dcb BF010000 		mov	edi, 1	# tmp574,
 11789      00
 11790              	.LVL770:
 11791              	.L476:
 241:sieve_extend.c ****             return;
 11792              		.loc 1 241 17 is_stmt 1 view .LVU4066
 11793              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11794              		.loc 1 241 51 is_stmt 0 view .LVU4067
 11795 3dd0 4889DA   		mov	rdx, rbx	# tmp570, index
 11796              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11797              		.loc 1 241 54 view .LVU4068
 11798 3dd3 C462E1F7 		shlx	r8, rdi, rbx	# tmp573, tmp574, index
 11798      C7
 11799              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11800              		.loc 1 241 51 view .LVU4069
 11801 3dd8 48C1EA06 		shr	rdx, 6	# tmp570,
 11802              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11803              		.loc 1 240 76 view .LVU4070
 11804 3ddc 4C01E3   		add	rbx, r12	# index, step
 11805              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11806              		.loc 1 241 51 view .LVU4071
 11807 3ddf 4D0904D7 		or	QWORD PTR [r15+rdx*8], r8	# *_225, tmp573
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11808              		.loc 1 240 70 is_stmt 1 view .LVU4072
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11809              		.loc 1 240 49 view .LVU4073
 11810              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11811              		.loc 1 240 13 is_stmt 0 view .LVU4074
 11812 3de3 4939DB   		cmp	r11, rbx	# _70, index
 11813 3de6 0F822FE9 		jb	.L462	#,
 11813      FFFF
 241:sieve_extend.c ****             return;
 11814              		.loc 1 241 17 is_stmt 1 view .LVU4075
 11815              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11816              		.loc 1 241 51 is_stmt 0 view .LVU4076
 11817 3dec 4989D9   		mov	r9, rbx	# tmp1014, index
 11818              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11819              		.loc 1 241 54 view .LVU4077
 11820 3def C462E1F7 		shlx	r10, rdi, rbx	# tmp1017, tmp574, index
 11820      D7
 11821              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11822              		.loc 1 241 51 view .LVU4078
 11823 3df4 49C1E906 		shr	r9, 6	# tmp1014,
 11824              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/ccG38KJh.s 			page 313


 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11825              		.loc 1 240 76 view .LVU4079
 11826 3df8 4C01E3   		add	rbx, r12	# index, step
 11827              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11828              		.loc 1 241 51 view .LVU4080
 11829 3dfb 4F0914CF 		or	QWORD PTR [r15+r9*8], r10	# *_225, tmp1017
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11830              		.loc 1 240 70 is_stmt 1 view .LVU4081
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11831              		.loc 1 240 49 view .LVU4082
 11832              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11833              		.loc 1 240 13 is_stmt 0 view .LVU4083
 11834 3dff 4939DB   		cmp	r11, rbx	# _70, index
 11835 3e02 0F8213E9 		jb	.L462	#,
 11835      FFFF
 241:sieve_extend.c ****             return;
 11836              		.loc 1 241 17 is_stmt 1 view .LVU4084
 11837              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11838              		.loc 1 241 51 is_stmt 0 view .LVU4085
 11839 3e08 4889D9   		mov	rcx, rbx	# tmp1019, index
 11840              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11841              		.loc 1 241 54 view .LVU4086
 11842 3e0b C4E2E1F7 		shlx	rax, rdi, rbx	# tmp1022, tmp574, index
 11842      C7
 11843              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11844              		.loc 1 241 51 view .LVU4087
 11845 3e10 48C1E906 		shr	rcx, 6	# tmp1019,
 11846              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11847              		.loc 1 240 76 view .LVU4088
 11848 3e14 4C01E3   		add	rbx, r12	# index, step
 11849              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11850              		.loc 1 241 51 view .LVU4089
 11851 3e17 490904CF 		or	QWORD PTR [r15+rcx*8], rax	# *_225, tmp1022
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11852              		.loc 1 240 70 is_stmt 1 view .LVU4090
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11853              		.loc 1 240 49 view .LVU4091
 11854              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11855              		.loc 1 240 13 is_stmt 0 view .LVU4092
 11856 3e1b 4939DB   		cmp	r11, rbx	# _70, index
 11857 3e1e 0F82F7E8 		jb	.L462	#,
 11857      FFFF
 241:sieve_extend.c ****             return;
 11858              		.loc 1 241 17 is_stmt 1 view .LVU4093
 11859              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11860              		.loc 1 241 51 is_stmt 0 view .LVU4094
 11861 3e24 4889DA   		mov	rdx, rbx	# tmp1024, index
 11862              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccG38KJh.s 			page 314


 241:sieve_extend.c ****             return;
 11863              		.loc 1 241 54 view .LVU4095
 11864 3e27 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp1027, tmp574, index
 11864      F7
 11865              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11866              		.loc 1 241 51 view .LVU4096
 11867 3e2c 48C1EA06 		shr	rdx, 6	# tmp1024,
 11868              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11869              		.loc 1 240 76 view .LVU4097
 11870 3e30 4C01E3   		add	rbx, r12	# index, step
 11871              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11872              		.loc 1 241 51 view .LVU4098
 11873 3e33 490934D7 		or	QWORD PTR [r15+rdx*8], rsi	# *_225, tmp1027
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11874              		.loc 1 240 70 is_stmt 1 view .LVU4099
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11875              		.loc 1 240 49 view .LVU4100
 11876              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11877              		.loc 1 240 13 is_stmt 0 view .LVU4101
 11878 3e37 4939DB   		cmp	r11, rbx	# _70, index
 11879 3e3a 0F82DBE8 		jb	.L462	#,
 11879      FFFF
 241:sieve_extend.c ****             return;
 11880              		.loc 1 241 17 is_stmt 1 view .LVU4102
 11881              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11882              		.loc 1 241 51 is_stmt 0 view .LVU4103
 11883 3e40 4989D8   		mov	r8, rbx	# tmp1029, index
 11884              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11885              		.loc 1 241 54 view .LVU4104
 11886 3e43 C462E1F7 		shlx	r9, rdi, rbx	# tmp1032, tmp574, index
 11886      CF
 11887              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11888              		.loc 1 241 51 view .LVU4105
 11889 3e48 49C1E806 		shr	r8, 6	# tmp1029,
 11890              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11891              		.loc 1 240 76 view .LVU4106
 11892 3e4c 4C01E3   		add	rbx, r12	# index, step
 11893              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11894              		.loc 1 241 51 view .LVU4107
 11895 3e4f 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_225, tmp1032
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11896              		.loc 1 240 70 is_stmt 1 view .LVU4108
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11897              		.loc 1 240 49 view .LVU4109
 11898              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11899              		.loc 1 240 13 is_stmt 0 view .LVU4110
 11900 3e53 4939DB   		cmp	r11, rbx	# _70, index
GAS LISTING /tmp/ccG38KJh.s 			page 315


 11901 3e56 0F82BFE8 		jb	.L462	#,
 11901      FFFF
 241:sieve_extend.c ****             return;
 11902              		.loc 1 241 17 is_stmt 1 view .LVU4111
 11903              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11904              		.loc 1 241 51 is_stmt 0 view .LVU4112
 11905 3e5c 4989DA   		mov	r10, rbx	# tmp1034, index
 11906              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11907              		.loc 1 241 54 view .LVU4113
 11908 3e5f C4E2E1F7 		shlx	rcx, rdi, rbx	# tmp1037, tmp574, index
 11908      CF
 11909              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11910              		.loc 1 241 51 view .LVU4114
 11911 3e64 49C1EA06 		shr	r10, 6	# tmp1034,
 11912              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11913              		.loc 1 240 76 view .LVU4115
 11914 3e68 4C01E3   		add	rbx, r12	# index, step
 11915              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11916              		.loc 1 241 51 view .LVU4116
 11917 3e6b 4B090CD7 		or	QWORD PTR [r15+r10*8], rcx	# *_225, tmp1037
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11918              		.loc 1 240 70 is_stmt 1 view .LVU4117
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11919              		.loc 1 240 49 view .LVU4118
 11920              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11921              		.loc 1 240 13 is_stmt 0 view .LVU4119
 11922 3e6f 4939DB   		cmp	r11, rbx	# _70, index
 11923 3e72 0F82A3E8 		jb	.L462	#,
 11923      FFFF
 241:sieve_extend.c ****             return;
 11924              		.loc 1 241 17 is_stmt 1 view .LVU4120
 11925              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11926              		.loc 1 241 51 is_stmt 0 view .LVU4121
 11927 3e78 4889D8   		mov	rax, rbx	# tmp1039, index
 11928              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11929              		.loc 1 241 54 view .LVU4122
 11930 3e7b C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp1042, tmp574, index
 11930      D7
 11931              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11932              		.loc 1 241 51 view .LVU4123
 11933 3e80 48C1E806 		shr	rax, 6	# tmp1039,
 11934              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11935              		.loc 1 240 76 view .LVU4124
 11936 3e84 4C01E3   		add	rbx, r12	# index, step
 11937              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11938              		.loc 1 241 51 view .LVU4125
GAS LISTING /tmp/ccG38KJh.s 			page 316


 11939 3e87 490914C7 		or	QWORD PTR [r15+rax*8], rdx	# *_225, tmp1042
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11940              		.loc 1 240 70 is_stmt 1 view .LVU4126
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11941              		.loc 1 240 49 view .LVU4127
 11942              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11943              		.loc 1 240 13 is_stmt 0 view .LVU4128
 11944 3e8b 4939DB   		cmp	r11, rbx	# _70, index
 11945 3e8e 0F8287E8 		jb	.L462	#,
 11945      FFFF
 241:sieve_extend.c ****             return;
 11946              		.loc 1 241 17 is_stmt 1 view .LVU4129
 11947              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11948              		.loc 1 241 51 is_stmt 0 view .LVU4130
 11949 3e94 4989D8   		mov	r8, rbx	# tmp1044, index
 11950              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11951              		.loc 1 241 54 view .LVU4131
 11952 3e97 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp1047, tmp574, index
 11952      F7
 11953              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11954              		.loc 1 241 51 view .LVU4132
 11955 3e9c 49C1E806 		shr	r8, 6	# tmp1044,
 11956              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11957              		.loc 1 240 76 view .LVU4133
 11958 3ea0 4C01E3   		add	rbx, r12	# index, step
 11959              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11960              		.loc 1 241 51 view .LVU4134
 11961 3ea3 4B0934C7 		or	QWORD PTR [r15+r8*8], rsi	# *_225, tmp1047
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11962              		.loc 1 240 70 is_stmt 1 view .LVU4135
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11963              		.loc 1 240 49 view .LVU4136
 11964              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11965              		.loc 1 240 13 is_stmt 0 view .LVU4137
 11966 3ea7 4939DB   		cmp	r11, rbx	# _70, index
 11967 3eaa 0F8320FF 		jnb	.L476	#,
 11967      FFFF
 11968 3eb0 E966E8FF 		jmp	.L462	#
 11968      FF
 11969              	.LVL771:
 11970              	.L1082:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11971              		.loc 1 240 13 view .LVU4138
 11972              	.LBE581:
 11973              	.LBE580:
 11974              	.LBE579:
 11975              	.LBE583:
 11976              	.LBE618:
 11977              	.LBE625:
 11978              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
GAS LISTING /tmp/ccG38KJh.s 			page 317


 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11979              		.loc 1 476 5 view .LVU4139
 11980 3eb5 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, _101
 11980      28
 11981              	# sieve_extend.c:468:     register counter_t prime   = 0;
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11982              		.loc 1 468 24 view .LVU4140
 11983 3eba 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 11983      30000000 
 11983      00
 11984              	# sieve_extend.c:472:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 472:sieve_extend.c **** 
 11985              		.loc 1 472 18 view .LVU4141
 11986 3ec3 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 11986      60000000 
 11986      00
 11987              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11988              		.loc 1 476 5 view .LVU4142
 11989 3ecc 48C74424 		mov	QWORD PTR 32[rsp], 1	# %sfp,
 11989      20010000 
 11989      00
 11990 3ed5 E9C9FEFF 		jmp	.L447	#
 11990      FF
 11991              	.LVL772:
 11992              	.L1094:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11993              		.loc 1 476 5 view .LVU4143
 11994              	.LBE630:
 11995              	.LBE749:
 11996              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 11997              		.loc 1 532 1 view .LVU4144
 11998 3eda C5F877   		vzeroupper
 11999 3edd E8000000 		call	__stack_chk_fail@PLT	#
 11999      00
 12000              	.LVL773:
 532:sieve_extend.c **** 
 12001              		.loc 1 532 1 view .LVU4145
 12002              		.cfi_endproc
 12003              	.LFE67:
 12005 3ee2 66662E0F 		.p2align 4
 12005      1F840000 
 12005      0000000F 
 12005      1F00
 12007              	main._omp_fn.0:
 12008              	.LVL774:
 12009              	.LFB78:
 672:sieve_extend.c **** 
 673:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
 674:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 675:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 676:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
 677:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
 678:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
 679:sieve_extend.c **** }
 680:sieve_extend.c **** 
GAS LISTING /tmp/ccG38KJh.s 			page 318


 681:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, counter_t threads, int option_ver
 682:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 683:sieve_extend.c **** 
 684:sieve_extend.c ****     double best_avg = 0;
 685:sieve_extend.c ****     best_blocksize_bits = 0;
 686:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 687:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 688:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 689:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 690:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 691:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 692:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 693:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 694:sieve_extend.c ****     double sample_duration = default_sample_duration;
 695:sieve_extend.c **** 
 696:sieve_extend.c ****     // determines the size of the resultset
 697:sieve_extend.c ****     switch (tune_level) {
 698:sieve_extend.c ****         case 1:
 699:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
 700:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
 701:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 702:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
 703:sieve_extend.c ****             sample_max = 16;
 704:sieve_extend.c ****             sample_duration = 0.1;
 705:sieve_extend.c ****             break;
 706:sieve_extend.c ****         case 2:
 707:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
 708:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 709:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 710:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
 711:sieve_extend.c ****             sample_max = 16;
 712:sieve_extend.c ****             sample_duration = 0.2;
 713:sieve_extend.c ****             break;
 714:sieve_extend.c ****         case 3:
 715:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
 716:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 717:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
 718:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
 719:sieve_extend.c ****             sample_max = 16;
 720:sieve_extend.c ****             sample_duration = 0.2;
 721:sieve_extend.c ****             break;
 722:sieve_extend.c ****     }
 723:sieve_extend.c ****     
 724:sieve_extend.c ****     verbose(2) printf("\n");
 725:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 726:sieve_extend.c ****     verbose(2) printf("\n");
 727:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 728:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 729:sieve_extend.c ****     counter_t tuning_results=0;
 730:sieve_extend.c ****     counter_t tuning_result_index=0;
 731:sieve_extend.c ****     
 732:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= 0; smallstep_faster += smallstep_faste
 733:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 734:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 735:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 736:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 737:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
GAS LISTING /tmp/ccG38KJh.s 			page 319


 738:sieve_extend.c **** 
 739:sieve_extend.c ****                         // set variables
 740:sieve_extend.c ****                         tuning_results++;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 750:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 751:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 752:sieve_extend.c **** 
 753:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
 754:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 755:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 756:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 757:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 758:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 759:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 760:sieve_extend.c ****                         }
 761:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
 762:sieve_extend.c ****                         tuning_result_index++;
 763:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 764:sieve_extend.c ****                     }
 765:sieve_extend.c ****                 }
 766:sieve_extend.c ****             }
 767:sieve_extend.c ****         }
 768:sieve_extend.c ****     }
 769:sieve_extend.c ****     verbose_at(1) { printf("\rTuning...tuned %ju options..",(uintmax_t)tuning_results); }
 770:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 771:sieve_extend.c ****     verbose(2) {
 772:sieve_extend.c ****         printf("%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 773:sieve_extend.c ****         printf("Best options\n");
 774:sieve_extend.c ****     }
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     counter_t step=0;
 777:sieve_extend.c ****     counter_t tuning_results_max = tuning_results;
 778:sieve_extend.c ****     while (tuning_results>4) {
 779:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 780:sieve_extend.c ****         step++;
 781:sieve_extend.c ****         verbose(2) {
 782:sieve_extend.c ****             tuning_result_index = 0;
 783:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 784:sieve_extend.c ****             fflush(stdout);
 785:sieve_extend.c ****             verbose(3) {
 786:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(40,tuning_results); t
 787:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 788:sieve_extend.c ****                 }
 789:sieve_extend.c ****             }
 790:sieve_extend.c ****         }
 791:sieve_extend.c **** 
 792:sieve_extend.c ****         tuning_results = tuning_results / 2;
 793:sieve_extend.c **** 
 794:sieve_extend.c ****         verbose(2) printf("\n");
GAS LISTING /tmp/ccG38KJh.s 			page 320


 795:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 796:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 797:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 798:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 799:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 800:sieve_extend.c ****         }
 801:sieve_extend.c ****         verbose(2) printf("\n");
 802:sieve_extend.c ****         
 803:sieve_extend.c ****     }
 804:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
 805:sieve_extend.c ****     verbose(2) {
 806:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 807:sieve_extend.c ****     }
 808:sieve_extend.c ****     verbose(1) printf("\n");
 809:sieve_extend.c **** 
 810:sieve_extend.c ****     free(tuning_result);
 811:sieve_extend.c ****     return best_result;
 812:sieve_extend.c **** }
 813:sieve_extend.c **** 
 814:sieve_extend.c **** 
 815:sieve_extend.c **** int main(int argc, char *argv[]) {
 816:sieve_extend.c ****     
 817:sieve_extend.c ****     // initialize options
 818:sieve_extend.c ****     double option_max_time = default_max_time;
 819:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 820:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 821:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 822:sieve_extend.c ****     int option_check = default_check_level;
 823:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 824:sieve_extend.c ****     int option_threads = 1;
 825:sieve_extend.c ****     #ifdef _OPENMP
 826:sieve_extend.c ****     int max_threads = omp_get_max_threads();
 827:sieve_extend.c ****     option_threads = max_threads;
 828:sieve_extend.c ****     #endif
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     // processing command line changes to options
 831:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 832:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 833:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 834:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 835:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 836:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 837:sieve_extend.c ****             }
 838:sieve_extend.c ****             verbose(1) printf("Verbose level set to %d\n",option_verboselevel);
 839:sieve_extend.c ****         } 
 840:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 841:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 842:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 843:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 844:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 845:sieve_extend.c ****             }
 846:sieve_extend.c ****             verbose(1) printf("Tune level set to %d\n",option_tunelevel);
 847:sieve_extend.c ****         }
 848:sieve_extend.c ****         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 849:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 850:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 851:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
GAS LISTING /tmp/ccG38KJh.s 			page 321


 852:sieve_extend.c ****             }
 853:sieve_extend.c ****             verbose(1) printf("Max time is set to %d seconds\n",option_tunelevel);
 854:sieve_extend.c ****         }
 855:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 856:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 857:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 858:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 859:sieve_extend.c ****             }
 860:sieve_extend.c ****             verbose(1) printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
 861:sieve_extend.c ****         }
 862:sieve_extend.c ****         else if (strcmp(argv[arg], "--threads")==0) { 
 863:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 864:sieve_extend.c ****         #ifdef _OPENMP
 865:sieve_extend.c ****             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 866:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 867:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 868:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 869:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 870:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 871:sieve_extend.c ****         #else
 872:sieve_extend.c ****             verbose(1) printf("This is the version without multithreading - ignoring threads\n");
 873:sieve_extend.c ****         #endif
 874:sieve_extend.c ****         }
 875:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
 876:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 877:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 878:sieve_extend.c ****         }
 879:sieve_extend.c ****     }
 880:sieve_extend.c **** 
 881:sieve_extend.c ****     // for debugging
 882:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 883:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
 884:sieve_extend.c ****         printf("\nResult set:\n");
 885:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 886:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
 887:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
 888:sieve_extend.c ****         else printf("The sieve is VALID\n");
 889:sieve_extend.c ****         sieve_delete(sieve);
 890:sieve_extend.c ****         exit(0);
 891:sieve_extend.c ****     }
 892:sieve_extend.c ****         
 893:sieve_extend.c ****     // if --check is needed
 894:sieve_extend.c ****     if (option_check) {
 895:sieve_extend.c ****         // Count the number of primes and validate the result
 896:sieve_extend.c ****         verbose(1) { printf("Validating..."); fflush(stdout); }
 897:sieve_extend.c ****         verbose(2) printf("\n");
 898:sieve_extend.c **** 
 899:sieve_extend.c ****         // validate algorithm - run one time for all sizes
 900:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; sieveSize_check *=10) {
 901:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 902:sieve_extend.c ****             struct sieve_t *sieve_check;
 903:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
 904:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 905:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 906:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 907:sieve_extend.c ****                 sieve_delete(sieve_check);
 908:sieve_extend.c ****                 if (!valid) return 0; else verbose(3) printf("valid;");
GAS LISTING /tmp/ccG38KJh.s 			page 322


 909:sieve_extend.c ****             }
 910:sieve_extend.c ****             verbose(2) printf("valid\n");
 911:sieve_extend.c ****         }
 912:sieve_extend.c ****         verbose(1) printf("valid algorithm\n");
 913:sieve_extend.c ****     }
 914:sieve_extend.c ****     
 915:sieve_extend.c ****     // tuning - try combinations of different settings and apply these
 916:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 917:sieve_extend.c ****     if (option_tunelevel) {
 918:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_threads,
 919:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 920:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 921:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 922:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 923:sieve_extend.c ****     }
 924:sieve_extend.c **** 
 925:sieve_extend.c ****     // time the algorithm using the best settings
 926:sieve_extend.c ****     struct timespec start_time,end_time;
 927:sieve_extend.c ****     counter_t used_threads = 1;
 928:sieve_extend.c **** 
 929:sieve_extend.c ****     // this section will only by linked in if the -fopenmp option is used.
 930:sieve_extend.c ****     // will default to max threads and then device by 2 for a non-hyperthreading option
 931:sieve_extend.c ****     #ifdef _OPENMP
 932:sieve_extend.c ****     counter_t max_tries = 4;
 933:sieve_extend.c ****     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  ) {
 934:sieve_extend.c ****         omp_set_num_threads(threads);
 935:sieve_extend.c ****         used_threads=threads;
 936:sieve_extend.c ****         if (--max_tries ==1) threads = 2;
 937:sieve_extend.c ****     #endif
 938:sieve_extend.c ****         verbose(2) printf("\n");
 939:sieve_extend.c ****         verbose(1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads fo
 940:sieve_extend.c ****         counter_t passes = 0;
 941:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 942:sieve_extend.c ****         double elapsed_time = 0;
 943:sieve_extend.c ****         struct sieve_t *sieve;
 944:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 945:sieve_extend.c ****         #ifdef _OPENMP
 946:sieve_extend.c ****         #pragma omp parallel reduction(+:passes)
 12010              		.loc 1 946 17 is_stmt 1 view -0
 12011              		.cfi_startproc
 12012              		.loc 1 946 17 is_stmt 0 view .LVU4147
 12013 3ef0 F30F1EFA 		endbr64	
 12014              	.LVL775:
 12015              		.loc 1 946 17 view .LVU4148
 12016 3ef4 4155     		push	r13	#
 12017              		.cfi_def_cfa_offset 16
 12018              		.cfi_offset 13, -16
 12019 3ef6 4154     		push	r12	#
 12020              		.cfi_def_cfa_offset 24
 12021              		.cfi_offset 12, -24
 12022 3ef8 4531E4   		xor	r12d, r12d	# passes
 12023 3efb 55       		push	rbp	#
 12024              		.cfi_def_cfa_offset 32
 12025              		.cfi_offset 6, -32
 12026 3efc 53       		push	rbx	#
 12027              		.cfi_def_cfa_offset 40
 12028              		.cfi_offset 3, -40
GAS LISTING /tmp/ccG38KJh.s 			page 323


 12029 3efd 4889FB   		mov	rbx, rdi	# .omp_data_i, tmp135
 12030 3f00 4883EC08 		sub	rsp, 8	#,
 12031              		.cfi_def_cfa_offset 48
 12032              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 947:sieve_extend.c ****         #endif
 948:sieve_extend.c ****         for (;elapsed_time <= option_max_time;) {
 12033              		.loc 1 948 28 view .LVU4149
 12034 3f04 488B07   		mov	rax, QWORD PTR [rdi]	# *.omp_data_i_4(D).option_max_time, *.omp_data_i_4(D).option_max_time
 12035              	# sieve_extend.c:946:         #pragma omp parallel reduction(+:passes)
 946:sieve_extend.c ****         #endif
 12036              		.loc 1 946 17 view .LVU4150
 12037 3f07 4C8B6F20 		mov	r13, QWORD PTR 32[rdi]	# blocksize_bits, *.omp_data_i_4(D).blocksize_bits
 12038              	.LVL776:
 12039              		.loc 1 948 9 is_stmt 1 view .LVU4151
 12040              		.loc 1 948 15 view .LVU4152
 12041              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 12042              		.loc 1 948 9 is_stmt 0 view .LVU4153
 12043 3f0b C5FB1000 		vmovsd	xmm0, QWORD PTR [rax]	# *_41, *_41
 12044 3f0f C5F92F47 		vcomisd	xmm0, QWORD PTR 40[rdi]	# *_41, *.omp_data_i_4(D).elapsed_time
 12044      28
 12045 3f14 0F820D01 		jb	.L1099	#,
 12045      0000
 12046              	.LVL777:
 12047              	.L1098:
 949:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12048              		.loc 1 949 13 is_stmt 1 view .LVU4154
 12049              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 12050              		.loc 1 949 21 is_stmt 0 view .LVU4155
 12051 3f1a 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# *.omp_data_i_4(D).option_maxFactor, *.omp_data_i_4(D).option_maxFactor
 12052 3f1e 4C89EE   		mov	rsi, r13	#, blocksize_bits
 12053 3f21 488B3A   		mov	rdi, QWORD PTR [rdx]	#, *_11
 12054              	# sieve_extend.c:951:             passes++;
 950:sieve_extend.c ****             sieve_delete(sieve);
 951:sieve_extend.c ****             passes++;
 12055              		.loc 1 951 19 view .LVU4156
 12056 3f24 49FFC4   		inc	r12	# passes
 12057              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12058              		.loc 1 949 21 view .LVU4157
 12059 3f27 E834E2FF 		call	sieve_shake	#
 12059      FF
 12060              	.LVL778:
 12061 3f2c 48894330 		mov	QWORD PTR 48[rbx], rax	# *.omp_data_i_4(D).sieve, _14
 950:sieve_extend.c ****             sieve_delete(sieve);
 12062              		.loc 1 950 13 is_stmt 1 view .LVU4158
 12063              	.LVL779:
 12064              	.LBB750:
 12065              	.LBI750:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 12066              		.loc 1 115 13 view .LVU4159
 12067              	.LBB751:
 116:sieve_extend.c ****     free(sieve);
 12068              		.loc 1 116 5 view .LVU4160
 12069 3f30 488B38   		mov	rdi, QWORD PTR [rax]	#, _14->bitstorage
 12070              	.LBE751:
 12071              	.LBE750:
 12072              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
GAS LISTING /tmp/ccG38KJh.s 			page 324


 949:sieve_extend.c ****             sieve_delete(sieve);
 12073              		.loc 1 949 21 is_stmt 0 view .LVU4161
 12074 3f33 4889C5   		mov	rbp, rax	# _14, tmp136
 12075              	.LBB755:
 12076              	.LBB752:
 12077              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 12078              		.loc 1 116 5 view .LVU4162
 12079 3f36 E8000000 		call	free@PLT	#
 12079      00
 12080              	.LVL780:
 117:sieve_extend.c **** }
 12081              		.loc 1 117 5 is_stmt 1 view .LVU4163
 12082 3f3b 4889EF   		mov	rdi, rbp	#, _14
 12083 3f3e E8000000 		call	free@PLT	#
 12083      00
 12084              	.LVL781:
 117:sieve_extend.c **** }
 12085              		.loc 1 117 5 is_stmt 0 view .LVU4164
 12086              	.LBE752:
 12087              	.LBE755:
 12088              		.loc 1 951 13 is_stmt 1 view .LVU4165
 952:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 12089              		.loc 1 952 13 view .LVU4166
 12090 3f43 488B7318 		mov	rsi, QWORD PTR 24[rbx]	# *.omp_data_i_4(D).end_time, *.omp_data_i_4(D).end_time
 12091 3f47 BF010000 		mov	edi, 1	#,
 12091      00
 12092 3f4c E8000000 		call	clock_gettime@PLT	#
 12092      00
 12093              	.LVL782:
 953:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 12094              		.loc 1 953 13 view .LVU4167
 12095              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12096              		.loc 1 953 36 is_stmt 0 view .LVU4168
 12097 3f51 488B4B18 		mov	rcx, QWORD PTR 24[rbx]	# _20, *.omp_data_i_4(D).end_time
 12098              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12099              		.loc 1 953 80 view .LVU4169
 12100 3f55 488B7310 		mov	rsi, QWORD PTR 16[rbx]	# _27, *.omp_data_i_4(D).start_time
 12101              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12102              		.loc 1 953 62 view .LVU4170
 12103 3f59 C5E857D2 		vxorps	xmm2, xmm2, xmm2	# tmp138
 12104 3f5d C4E1EB2A 		vcvtsi2sd	xmm1, xmm2, QWORD PTR 8[rcx]	# tmp139, tmp138, _20->tv_nsec
 12104      4908
 12105              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12106              		.loc 1 953 68 view .LVU4171
 12107 3f63 C4E1EB2A 		vcvtsi2sd	xmm5, xmm2, QWORD PTR [rsi]	# tmp140, tmp138, _27->tv_sec
 12107      2E
 12108 3f68 C5FB101D 		vmovsd	xmm3, QWORD PTR .LC8[rip]	# _42,
 12108      00000000 
 12109              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12110              		.loc 1 953 44 view .LVU4172
 12111 3f70 C4E1EB2A 		vcvtsi2sd	xmm7, xmm2, QWORD PTR [rcx]	# tmp142, tmp138, _20->tv_sec
 12111      39
 12112              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12113              		.loc 1 948 28 view .LVU4173
 12114 3f75 488B3B   		mov	rdi, QWORD PTR [rbx]	# *.omp_data_i_4(D).option_max_time, *.omp_data_i_4(D).option_max_time
GAS LISTING /tmp/ccG38KJh.s 			page 325


 12115 3f78 C4E2D19B 		vfmsub132sd	xmm3, xmm5, xmm1	# _42, tmp114, tmp113
 12115      D9
 12116              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12117              		.loc 1 953 108 view .LVU4174
 12118 3f7d C4E1EB2A 		vcvtsi2sd	xmm1, xmm2, QWORD PTR 8[rsi]	# tmp141, tmp138, _27->tv_nsec
 12118      4E08
 12119 3f83 C4E2F1BD 		vfnmadd231sd	xmm7, xmm1, QWORD PTR .LC8[rip]	# _16, tmp116,
 12119      3D000000 
 12119      00
 12120              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12121              		.loc 1 953 26 view .LVU4175
 12122 3f8c C54358C3 		vaddsd	xmm8, xmm7, xmm3	# _34, _16, _42
 12123 3f90 C57B1143 		vmovsd	QWORD PTR 40[rbx], xmm8	# *.omp_data_i_4(D).elapsed_time, _34
 12123      28
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12124              		.loc 1 948 15 is_stmt 1 view .LVU4176
 12125              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12126              		.loc 1 948 9 is_stmt 0 view .LVU4177
 12127 3f95 C5792F07 		vcomisd	xmm8, QWORD PTR [rdi]	# _34, *_6
 12128 3f99 0F878800 		ja	.L1099	#,
 12128      0000
 949:sieve_extend.c ****             sieve_delete(sieve);
 12129              		.loc 1 949 13 is_stmt 1 view .LVU4178
 12130              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve_delete(sieve);
 12131              		.loc 1 949 21 is_stmt 0 view .LVU4179
 12132 3f9f 4C8B4308 		mov	r8, QWORD PTR 8[rbx]	# *.omp_data_i_4(D).option_maxFactor, *.omp_data_i_4(D).option_maxFactor
 12133 3fa3 4C89EE   		mov	rsi, r13	#, blocksize_bits
 12134 3fa6 498B38   		mov	rdi, QWORD PTR [r8]	#, *_11
 12135              	# sieve_extend.c:951:             passes++;
 951:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 12136              		.loc 1 951 19 view .LVU4180
 12137 3fa9 49FFC4   		inc	r12	# passes
 12138              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve_delete(sieve);
 12139              		.loc 1 949 21 view .LVU4181
 12140 3fac E8AFE1FF 		call	sieve_shake	#
 12140      FF
 12141              	.LVL783:
 12142 3fb1 48894330 		mov	QWORD PTR 48[rbx], rax	# *.omp_data_i_4(D).sieve, _14
 950:sieve_extend.c ****             passes++;
 12143              		.loc 1 950 13 is_stmt 1 view .LVU4182
 12144              	.LVL784:
 12145              	.LBB756:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 12146              		.loc 1 115 13 view .LVU4183
 12147              	.LBB753:
 116:sieve_extend.c ****     free(sieve);
 12148              		.loc 1 116 5 view .LVU4184
 12149 3fb5 488B38   		mov	rdi, QWORD PTR [rax]	#, _14->bitstorage
 12150              	.LBE753:
 12151              	.LBE756:
 12152              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve_delete(sieve);
 12153              		.loc 1 949 21 is_stmt 0 view .LVU4185
 12154 3fb8 4889C5   		mov	rbp, rax	# _14, tmp137
GAS LISTING /tmp/ccG38KJh.s 			page 326


 12155              	.LVL785:
 12156              	.LBB757:
 12157              	.LBB754:
 12158              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 12159              		.loc 1 116 5 view .LVU4186
 12160 3fbb E8000000 		call	free@PLT	#
 12160      00
 12161              	.LVL786:
 117:sieve_extend.c **** }
 12162              		.loc 1 117 5 is_stmt 1 view .LVU4187
 12163 3fc0 4889EF   		mov	rdi, rbp	#, _14
 12164 3fc3 E8000000 		call	free@PLT	#
 12164      00
 12165              	.LVL787:
 117:sieve_extend.c **** }
 12166              		.loc 1 117 5 is_stmt 0 view .LVU4188
 12167              	.LBE754:
 12168              	.LBE757:
 951:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 12169              		.loc 1 951 13 is_stmt 1 view .LVU4189
 952:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 12170              		.loc 1 952 13 view .LVU4190
 12171 3fc8 488B7318 		mov	rsi, QWORD PTR 24[rbx]	# *.omp_data_i_4(D).end_time, *.omp_data_i_4(D).end_time
 12172 3fcc BF010000 		mov	edi, 1	#,
 12172      00
 12173 3fd1 E8000000 		call	clock_gettime@PLT	#
 12173      00
 12174              	.LVL788:
 12175              		.loc 1 953 13 view .LVU4191
 12176              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12177              		.loc 1 953 36 is_stmt 0 view .LVU4192
 12178 3fd6 4C8B4B18 		mov	r9, QWORD PTR 24[rbx]	# _20, *.omp_data_i_4(D).end_time
 12179              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12180              		.loc 1 953 80 view .LVU4193
 12181 3fda 4C8B5310 		mov	r10, QWORD PTR 16[rbx]	# _27, *.omp_data_i_4(D).start_time
 12182              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12183              		.loc 1 953 62 view .LVU4194
 12184 3fde C4413057 		vxorps	xmm9, xmm9, xmm9	# tmp138
 12184      C9
 12185 3fe3 C4C1B32A 		vcvtsi2sd	xmm1, xmm9, QWORD PTR 8[r9]	# tmp143, tmp138, _20->tv_nsec
 12185      4908
 12186              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12187              		.loc 1 953 68 view .LVU4195
 12188 3fe9 C441B32A 		vcvtsi2sd	xmm11, xmm9, QWORD PTR [r10]	# tmp144, tmp138, _27->tv_sec
 12188      1A
 12189 3fee C57B1025 		vmovsd	xmm12, QWORD PTR .LC8[rip]	# _42,
 12189      00000000 
 12190              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12191              		.loc 1 953 44 view .LVU4196
 12192 3ff6 C441B32A 		vcvtsi2sd	xmm14, xmm9, QWORD PTR [r9]	# tmp146, tmp138, _20->tv_sec
 12192      31
 12193              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12194              		.loc 1 948 28 view .LVU4197
 12195 3ffb 4C8B1B   		mov	r11, QWORD PTR [rbx]	# *.omp_data_i_4(D).option_max_time, *.omp_data_i_4(D).option_max_time
 12196 3ffe C462A19B 		vfmsub132sd	xmm12, xmm11, xmm1	# _42, tmp128, tmp127
GAS LISTING /tmp/ccG38KJh.s 			page 327


 12196      E1
 12197              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12198              		.loc 1 953 108 view .LVU4198
 12199 4003 C4C1B32A 		vcvtsi2sd	xmm1, xmm9, QWORD PTR 8[r10]	# tmp145, tmp138, _27->tv_nsec
 12199      4A08
 12200 4009 C462F1BD 		vfnmadd231sd	xmm14, xmm1, QWORD PTR .LC8[rip]	# _16, tmp130,
 12200      35000000 
 12200      00
 12201              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 12202              		.loc 1 953 26 view .LVU4199
 12203 4012 C4410B58 		vaddsd	xmm15, xmm14, xmm12	# _34, _16, _42
 12203      FC
 12204 4017 C57B117B 		vmovsd	QWORD PTR 40[rbx], xmm15	# *.omp_data_i_4(D).elapsed_time, _34
 12204      28
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12205              		.loc 1 948 15 is_stmt 1 view .LVU4200
 12206              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 12207              		.loc 1 948 9 is_stmt 0 view .LVU4201
 12208 401c C441792F 		vcomisd	xmm15, QWORD PTR [r11]	# _34, *_6
 12208      3B
 12209 4021 0F86F3FE 		jbe	.L1098	#,
 12209      FFFF
 12210              	.L1099:
 12211              	# sieve_extend.c:946:         #pragma omp parallel reduction(+:passes)
 946:sieve_extend.c ****         #endif
 12212              		.loc 1 946 39 view .LVU4202
 12213 4027 F04C0163 		lock add	QWORD PTR 56[rbx], r12	#,, passes
 12213      38
 12214              	# sieve_extend.c:946:         #pragma omp parallel reduction(+:passes)
 946:sieve_extend.c ****         #endif
 12215              		.loc 1 946 17 view .LVU4203
 12216 402c 4883C408 		add	rsp, 8	#,
 12217              		.cfi_def_cfa_offset 40
 12218 4030 5B       		pop	rbx	#
 12219              		.cfi_def_cfa_offset 32
 12220              	.LVL789:
 946:sieve_extend.c ****         #endif
 12221              		.loc 1 946 17 view .LVU4204
 12222 4031 5D       		pop	rbp	#
 12223              		.cfi_def_cfa_offset 24
 12224 4032 415C     		pop	r12	#
 12225              		.cfi_def_cfa_offset 16
 12226 4034 415D     		pop	r13	#
 12227              		.cfi_def_cfa_offset 8
 12228              	.LVL790:
 946:sieve_extend.c ****         #endif
 12229              		.loc 1 946 17 view .LVU4205
 12230 4036 C3       		ret	
 12231              		.cfi_endproc
 12232              	.LFE78:
 12234 4037 660F1F84 		.p2align 4
 12234      00000000 
 12234      00
 12236              	tune_benchmark._omp_fn.0:
 12237              	.LVL791:
 12238              	.LFB79:
GAS LISTING /tmp/ccG38KJh.s 			page 328


 659:sieve_extend.c ****     #endif
 12239              		.loc 1 659 13 is_stmt 1 view -0
 12240              		.cfi_startproc
 659:sieve_extend.c ****     #endif
 12241              		.loc 1 659 13 is_stmt 0 view .LVU4207
 12242 4040 F30F1EFA 		endbr64	
 12243              	.LVL792:
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12244              		.loc 1 661 5 is_stmt 1 view .LVU4208
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12245              		.loc 1 661 11 view .LVU4209
 12246              	# sieve_extend.c:659:     #pragma omp parallel reduction(+:passes)
 659:sieve_extend.c ****     #endif
 12247              		.loc 1 659 13 is_stmt 0 view .LVU4210
 12248 4044 4155     		push	r13	#
 12249              		.cfi_def_cfa_offset 16
 12250              		.cfi_offset 13, -16
 12251              	.LVL793:
 659:sieve_extend.c ****     #endif
 12252              		.loc 1 659 13 view .LVU4211
 12253 4046 4531ED   		xor	r13d, r13d	# passes
 12254 4049 4154     		push	r12	#
 12255              		.cfi_def_cfa_offset 24
 12256              		.cfi_offset 12, -24
 12257 404b 55       		push	rbp	#
 12258              		.cfi_def_cfa_offset 32
 12259              		.cfi_offset 6, -32
 12260 404c 53       		push	rbx	#
 12261              		.cfi_def_cfa_offset 40
 12262              		.cfi_offset 3, -40
 12263 404d 4889FB   		mov	rbx, rdi	# .omp_data_i, tmp124
 12264 4050 4883EC08 		sub	rsp, 8	#,
 12265              		.cfi_def_cfa_offset 48
 12266              	# sieve_extend.c:661:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12267              		.loc 1 661 41 view .LVU4212
 12268 4054 4C6B6708 		imul	r12, QWORD PTR 8[rdi], 104	# tmp111, *.omp_data_i_4(D).tuning_result_index,
 12268      68
 12269 4059 4C0327   		add	r12, QWORD PTR [rdi]	# _46, *.omp_data_i_4(D).tuning_result
 12270              	# sieve_extend.c:661:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12271              		.loc 1 661 11 view .LVU4213
 12272 405c C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r12]	# _46->sample_duration, _46->sample_duration
 12272      442448
 12273 4063 C5F92F47 		vcomisd	xmm0, QWORD PTR 16[rdi]	# _46->sample_duration, *.omp_data_i_4(D).elapsed_time
 12273      10
 12274 4068 0F838A00 		jnb	.L1109	#,
 12274      0000
 12275 406e E9900000 		jmp	.L1110	#
 12275      00
 12276              	.LVL794:
 12277              		.p2align 4,,10
 12278 4073 0F1F4400 		.p2align 3
 12278      00
 12279              	.L1117:
 662:sieve_extend.c ****         sieve_delete(sieve);
 12280              		.loc 1 662 9 is_stmt 1 view .LVU4214
GAS LISTING /tmp/ccG38KJh.s 			page 329


 12281              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 662:sieve_extend.c ****         sieve_delete(sieve);
 12282              		.loc 1 662 17 is_stmt 0 view .LVU4215
 12283 4078 498B7424 		mov	rsi, QWORD PTR 8[r12]	# _46->blocksize_bits, _46->blocksize_bits
 12283      08
 12284 407d 498B3C24 		mov	rdi, QWORD PTR [r12]	#, _46->maxints
 12285              	# sieve_extend.c:664:         passes++;
 664:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 12286              		.loc 1 664 15 view .LVU4216
 12287 4081 49FFC5   		inc	r13	# passes
 12288              	.LVL795:
 12289              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 662:sieve_extend.c ****         sieve_delete(sieve);
 12290              		.loc 1 662 17 view .LVU4217
 12291 4084 E8D7E0FF 		call	sieve_shake	#
 12291      FF
 12292              	.LVL796:
 12293 4089 48894328 		mov	QWORD PTR 40[rbx], rax	# *.omp_data_i_4(D).sieve, _16
 663:sieve_extend.c ****         passes++;
 12294              		.loc 1 663 9 is_stmt 1 view .LVU4218
 12295              	.LVL797:
 12296              	.LBB758:
 12297              	.LBI758:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 12298              		.loc 1 115 13 view .LVU4219
 12299              	.LBB759:
 116:sieve_extend.c ****     free(sieve);
 12300              		.loc 1 116 5 view .LVU4220
 12301 408d 488B38   		mov	rdi, QWORD PTR [rax]	#, _16->bitstorage
 12302              	.LBE759:
 12303              	.LBE758:
 12304              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 662:sieve_extend.c ****         sieve_delete(sieve);
 12305              		.loc 1 662 17 is_stmt 0 view .LVU4221
 12306 4090 4889C5   		mov	rbp, rax	# _16, tmp125
 12307              	.LBB761:
 12308              	.LBB760:
 12309              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 12310              		.loc 1 116 5 view .LVU4222
 12311 4093 E8000000 		call	free@PLT	#
 12311      00
 12312              	.LVL798:
 117:sieve_extend.c **** }
 12313              		.loc 1 117 5 is_stmt 1 view .LVU4223
 12314 4098 4889EF   		mov	rdi, rbp	#, _16
 12315 409b E8000000 		call	free@PLT	#
 12315      00
 12316              	.LVL799:
 117:sieve_extend.c **** }
 12317              		.loc 1 117 5 is_stmt 0 view .LVU4224
 12318              	.LBE760:
 12319              	.LBE761:
 664:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 12320              		.loc 1 664 9 is_stmt 1 view .LVU4225
 665:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 12321              		.loc 1 665 9 view .LVU4226
GAS LISTING /tmp/ccG38KJh.s 			page 330


 12322 40a0 488B7320 		mov	rsi, QWORD PTR 32[rbx]	# *.omp_data_i_4(D).end_time, *.omp_data_i_4(D).end_time
 12323 40a4 BF010000 		mov	edi, 1	#,
 12323      00
 12324 40a9 E8000000 		call	clock_gettime@PLT	#
 12324      00
 12325              	.LVL800:
 666:sieve_extend.c ****     }
 12326              		.loc 1 666 9 view .LVU4227
 12327              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12328              		.loc 1 666 32 is_stmt 0 view .LVU4228
 12329 40ae 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _21, *.omp_data_i_4(D).end_time
 12330              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12331              		.loc 1 666 58 view .LVU4229
 12332 40b2 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp126
 12333 40b6 C4E1E32A 		vcvtsi2sd	xmm1, xmm3, QWORD PTR 8[rax]	# tmp127, tmp126, _21->tv_nsec
 12333      4808
 12334              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12335              		.loc 1 666 76 view .LVU4230
 12336 40bc 488B5318 		mov	rdx, QWORD PTR 24[rbx]	# _28, *.omp_data_i_4(D).start_time
 12337              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12338              		.loc 1 666 40 view .LVU4231
 12339 40c0 C4E1E32A 		vcvtsi2sd	xmm7, xmm3, QWORD PTR [rax]	# tmp130, tmp126, _21->tv_sec
 12339      38
 12340              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12341              		.loc 1 666 64 view .LVU4232
 12342 40c5 C4E1E32A 		vcvtsi2sd	xmm4, xmm3, QWORD PTR [rdx]	# tmp128, tmp126, _28->tv_sec
 12342      22
 12343              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12344              		.loc 1 666 58 view .LVU4233
 12345 40ca C5F928D1 		vmovapd	xmm2, xmm1	# tmp117, tmp127
 12346              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12347              		.loc 1 666 104 view .LVU4234
 12348 40ce C4E1E32A 		vcvtsi2sd	xmm1, xmm3, QWORD PTR 8[rdx]	# tmp129, tmp126, _28->tv_nsec
 12348      4A08
 12349 40d4 C4E2D99B 		vfmsub132sd	xmm2, xmm4, QWORD PTR .LC8[rip]	# tmp117, tmp118,
 12349      15000000 
 12349      00
 12350 40dd C4E2F1BD 		vfnmadd231sd	xmm7, xmm1, QWORD PTR .LC8[rip]	# _1, tmp120,
 12350      3D000000 
 12350      00
 12351              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 666:sieve_extend.c ****     }
 12352              		.loc 1 666 22 view .LVU4235
 12353 40e6 C54358C2 		vaddsd	xmm8, xmm7, xmm2	# _35, _1, _2
 12354              	# sieve_extend.c:661:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12355              		.loc 1 661 11 view .LVU4236
 12356 40ea C441792F 		vcomisd	xmm8, QWORD PTR 72[r12]	# _35, _46->sample_duration
 12356      442448
 12357 40f1 C57B1143 		vmovsd	QWORD PTR 16[rbx], xmm8	# *.omp_data_i_4(D).elapsed_time, _35
GAS LISTING /tmp/ccG38KJh.s 			page 331


 12357      10
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12358              		.loc 1 661 11 is_stmt 1 view .LVU4237
 12359 40f6 770B     		ja	.L1110	#,
 12360              	.LVL801:
 12361              	.L1109:
 12362              	# sieve_extend.c:661:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12363              		.loc 1 661 79 is_stmt 0 discriminator 1 view .LVU4238
 12364 40f8 4D396C24 		cmp	QWORD PTR 64[r12], r13	# _46->sample_max, passes
 12364      40
 12365 40fd 0F8775FF 		ja	.L1117	#,
 12365      FFFF
 12366              	.LVL802:
 12367              	.L1110:
 12368              	# sieve_extend.c:659:     #pragma omp parallel reduction(+:passes)
 659:sieve_extend.c ****     #endif
 12369              		.loc 1 659 35 view .LVU4239
 12370 4103 F04C016B 		lock add	QWORD PTR 48[rbx], r13	#,, passes
 12370      30
 12371              	# sieve_extend.c:659:     #pragma omp parallel reduction(+:passes)
 659:sieve_extend.c ****     #endif
 12372              		.loc 1 659 13 view .LVU4240
 12373 4108 4883C408 		add	rsp, 8	#,
 12374              		.cfi_def_cfa_offset 40
 12375 410c 5B       		pop	rbx	#
 12376              		.cfi_def_cfa_offset 32
 12377              	.LVL803:
 659:sieve_extend.c ****     #endif
 12378              		.loc 1 659 13 view .LVU4241
 12379 410d 5D       		pop	rbp	#
 12380              		.cfi_def_cfa_offset 24
 12381 410e 415C     		pop	r12	#
 12382              		.cfi_def_cfa_offset 16
 12383 4110 415D     		pop	r13	#
 12384              		.cfi_def_cfa_offset 8
 12385 4112 C3       		ret	
 12386              		.cfi_endproc
 12387              	.LFE79:
 12389              		.section	.rodata.str1.8,"aMS",@progbits,1
 12390              		.align 8
 12391              	.LC9:
 12392 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 12392      6C743A20 
 12392      53696576 
 12392      6573697A 
 12392      6520256A 
 12393 0055 000000   		.align 8
 12394              	.LC10:
 12395 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 12395      616C6964 
 12395      20726573 
 12395      756C742E 
 12395      20536965 
 12396              		.section	.rodata.str1.1
 12397              	.LC11:
 12398 0023 44656570 		.string	"DeepAnalyzing"
GAS LISTING /tmp/ccG38KJh.s 			page 332


 12398      416E616C 
 12398      797A696E 
 12398      6700
 12399              		.section	.rodata.str1.8
 12400 00bb 00000000 		.align 8
 12400      00
 12401              	.LC12:
 12402 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 12402      65722025 
 12402      6A752028 
 12402      256A7529 
 12402      20776173 
 12403              		.align 8
 12404              	.LC13:
 12405 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 12405      65722025 
 12405      6A752028 
 12405      256A7529 
 12405      20776173 
 12406              		.text
 12407 4113 66662E0F 		.p2align 4
 12407      1F840000 
 12407      00000066 
 12407      90
 12408              		.globl	validatePrimeCount
 12410              	validatePrimeCount:
 12411              	.LVL804:
 12412              	.LFB71:
 575:sieve_extend.c **** 
 12413              		.loc 1 575 72 is_stmt 1 view -0
 12414              		.cfi_startproc
 575:sieve_extend.c **** 
 12415              		.loc 1 575 72 is_stmt 0 view .LVU4243
 12416 4120 F30F1EFA 		endbr64	
 577:sieve_extend.c ****     counter_t valid_primes = 0;
 12417              		.loc 1 577 5 is_stmt 1 view .LVU4244
 12418              	# sieve_extend.c:575: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 575:sieve_extend.c **** 
 12419              		.loc 1 575 72 is_stmt 0 view .LVU4245
 12420 4124 4157     		push	r15	#
 12421              		.cfi_def_cfa_offset 16
 12422              		.cfi_offset 15, -16
 12423 4126 4156     		push	r14	#
 12424              		.cfi_def_cfa_offset 24
 12425              		.cfi_offset 14, -24
 12426 4128 4155     		push	r13	#
 12427              		.cfi_def_cfa_offset 32
 12428              		.cfi_offset 13, -32
 12429 412a 4154     		push	r12	#
 12430              		.cfi_def_cfa_offset 40
 12431              		.cfi_offset 12, -40
 12432 412c 55       		push	rbp	#
 12433              		.cfi_def_cfa_offset 48
 12434              		.cfi_offset 6, -48
 12435 412d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 12436 4130 53       		push	rbx	#
 12437              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccG38KJh.s 			page 333


 12438              		.cfi_offset 3, -56
 12439 4131 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 12440 4133 4883EC28 		sub	rsp, 40	#,
 12441              		.cfi_def_cfa_offset 96
 12442              	# sieve_extend.c:577:     counter_t primecount = count_primes(sieve);
 577:sieve_extend.c ****     counter_t valid_primes = 0;
 12443              		.loc 1 577 28 view .LVU4246
 12444 4137 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 12445 413a 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 12446              	.LVL805:
 12447              	.LBB783:
 12448              	.LBI783:
 546:sieve_extend.c ****     counter_t primeCount = 1;
 12449              		.loc 1 546 18 is_stmt 1 view .LVU4247
 12450              	.LBB784:
 12451              	.LBB785:
 548:sieve_extend.c ****     return primeCount;
 12452              		.loc 1 548 30 view .LVU4248
 12453 413e 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 12454              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12455              		.loc 1 548 5 is_stmt 0 view .LVU4249
 12456 4142 4883FF01 		cmp	rdi, 1	# _25,
 12457 4146 0F861705 		jbe	.L1119	#,
 12457      0000
 12458              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12459              		.loc 1 548 20 view .LVU4250
 12460 414c B8010000 		mov	eax, 1	# factor,
 12460      00
 12461              	.LBE785:
 12462              	# sieve_extend.c:547:     counter_t primeCount = 1;
 547:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 12463              		.loc 1 547 15 view .LVU4251
 12464 4151 41B80100 		mov	r8d, 1	# primeCount,
 12464      0000
 12465              	.LVL806:
 12466 4157 660F1F84 		.p2align 4,,10
 12466      00000000 
 12466      00
 12467              		.p2align 3
 12468              	.L1122:
 12469              	.LBB788:
 548:sieve_extend.c ****     return primeCount;
 12470              		.loc 1 548 106 is_stmt 1 view .LVU4252
 12471              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12472              		.loc 1 548 116 is_stmt 0 view .LVU4253
 12473 4160 49FFC0   		inc	r8	# primeCount
 12474              	.LVL807:
 548:sieve_extend.c ****     return primeCount;
 12475              		.loc 1 548 52 is_stmt 1 view .LVU4254
 12476              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12477              		.loc 1 548 61 is_stmt 0 view .LVU4255
 12478 4163 48FFC0   		inc	rax	# factor
 12479              	.LVL808:
GAS LISTING /tmp/ccG38KJh.s 			page 334


 12480              	.L1266:
 12481              	.LBB786:
 12482              	.LBI786:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 12483              		.loc 1 121 25 is_stmt 1 view .LVU4256
 12484              	.LBB787:
 122:sieve_extend.c ****     return index;
 12485              		.loc 1 122 5 view .LVU4257
 122:sieve_extend.c ****     return index;
 12486              		.loc 1 122 11 view .LVU4258
 12487              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12488              		.loc 1 122 23 is_stmt 0 view .LVU4259
 12489 4166 4889C1   		mov	rcx, rax	# tmp162, factor
 12490 4169 48C1E906 		shr	rcx, 6	# tmp162,
 12491              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12492              		.loc 1 122 12 view .LVU4260
 12493 416d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 12494              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12495              		.loc 1 122 11 view .LVU4261
 12496 4171 490FA3C3 		bt	r11, rax	# *_106, factor
 12497 4175 0F83A500 		jnc	.L1120	#,
 12497      0000
 122:sieve_extend.c ****     return index;
 12498              		.loc 1 122 60 is_stmt 1 view .LVU4262
 12499              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12500              		.loc 1 122 65 is_stmt 0 view .LVU4263
 12501 417b 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 12502              	.LVL809:
 12503              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12504              		.loc 1 122 23 view .LVU4264
 12505 417f 4D89EE   		mov	r14, r13	# tmp167, factor
 12506 4182 49C1EE06 		shr	r14, 6	# tmp167,
 12507              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12508              		.loc 1 122 12 view .LVU4265
 12509 4186 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
 12510              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12511              		.loc 1 122 65 view .LVU4266
 12512 418a 4C89E8   		mov	rax, r13	# factor, tmp235
 122:sieve_extend.c ****     return index;
 12513              		.loc 1 122 11 is_stmt 1 view .LVU4267
 12514 418d 4D0FA3EF 		bt	r15, r13	# *_35, factor
 12515 4191 0F838900 		jnc	.L1120	#,
 12515      0000
 122:sieve_extend.c ****     return index;
 12516              		.loc 1 122 60 view .LVU4268
 12517              	.LVL810:
 12518              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12519              		.loc 1 122 65 is_stmt 0 view .LVU4269
 12520 4197 48FFC0   		inc	rax	# factor
GAS LISTING /tmp/ccG38KJh.s 			page 335


 12521              	.LVL811:
 122:sieve_extend.c ****     return index;
 12522              		.loc 1 122 11 is_stmt 1 view .LVU4270
 12523              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12524              		.loc 1 122 23 is_stmt 0 view .LVU4271
 12525 419a 4989C4   		mov	r12, rax	# tmp279, factor
 12526 419d 49C1EC06 		shr	r12, 6	# tmp279,
 12527              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12528              		.loc 1 122 12 view .LVU4272
 12529 41a1 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 12530              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12531              		.loc 1 122 11 view .LVU4273
 12532 41a5 480FA3C6 		bt	rsi, rax	# *_35, factor
 12533 41a9 7375     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
 12534              		.loc 1 122 60 is_stmt 1 view .LVU4274
 12535              	.LVL812:
 12536              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12537              		.loc 1 122 65 is_stmt 0 view .LVU4275
 12538 41ab 498D4502 		lea	rax, 2[r13]	# factor,
 12539              	.LVL813:
 122:sieve_extend.c ****     return index;
 12540              		.loc 1 122 11 is_stmt 1 view .LVU4276
 12541              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12542              		.loc 1 122 23 is_stmt 0 view .LVU4277
 12543 41af 4989C2   		mov	r10, rax	# tmp283, factor
 12544 41b2 49C1EA06 		shr	r10, 6	# tmp283,
 12545              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12546              		.loc 1 122 12 view .LVU4278
 12547 41b6 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 12548              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12549              		.loc 1 122 11 view .LVU4279
 12550 41ba 480FA3C1 		bt	rcx, rax	# *_35, factor
 12551 41be 7360     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
 12552              		.loc 1 122 60 is_stmt 1 view .LVU4280
 12553              	.LVL814:
 12554              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12555              		.loc 1 122 65 is_stmt 0 view .LVU4281
 12556 41c0 498D4503 		lea	rax, 3[r13]	# factor,
 12557              	.LVL815:
 122:sieve_extend.c ****     return index;
 12558              		.loc 1 122 11 is_stmt 1 view .LVU4282
 12559              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12560              		.loc 1 122 23 is_stmt 0 view .LVU4283
 12561 41c4 4989C3   		mov	r11, rax	# tmp287, factor
 12562 41c7 49C1EB06 		shr	r11, 6	# tmp287,
 12563              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccG38KJh.s 			page 336


 122:sieve_extend.c ****     return index;
 12564              		.loc 1 122 12 view .LVU4284
 12565 41cb 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 12566              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12567              		.loc 1 122 11 view .LVU4285
 12568 41cf 490FA3C6 		bt	r14, rax	# *_35, factor
 12569 41d3 734B     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
 12570              		.loc 1 122 60 is_stmt 1 view .LVU4286
 12571              	.LVL816:
 12572              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12573              		.loc 1 122 65 is_stmt 0 view .LVU4287
 12574 41d5 498D4504 		lea	rax, 4[r13]	# factor,
 12575              	.LVL817:
 122:sieve_extend.c ****     return index;
 12576              		.loc 1 122 11 is_stmt 1 view .LVU4288
 12577              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12578              		.loc 1 122 23 is_stmt 0 view .LVU4289
 12579 41d9 4989C7   		mov	r15, rax	# tmp291, factor
 12580 41dc 49C1EF06 		shr	r15, 6	# tmp291,
 12581              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12582              		.loc 1 122 12 view .LVU4290
 12583 41e0 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 12584              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12585              		.loc 1 122 11 view .LVU4291
 12586 41e4 490FA3C4 		bt	r12, rax	# *_35, factor
 12587 41e8 7336     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
 12588              		.loc 1 122 60 is_stmt 1 view .LVU4292
 12589              	.LVL818:
 12590              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12591              		.loc 1 122 65 is_stmt 0 view .LVU4293
 12592 41ea 498D4505 		lea	rax, 5[r13]	# factor,
 12593              	.LVL819:
 122:sieve_extend.c ****     return index;
 12594              		.loc 1 122 11 is_stmt 1 view .LVU4294
 12595              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12596              		.loc 1 122 23 is_stmt 0 view .LVU4295
 12597 41ee 4889C6   		mov	rsi, rax	# tmp295, factor
 12598 41f1 48C1EE06 		shr	rsi, 6	# tmp295,
 12599              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12600              		.loc 1 122 12 view .LVU4296
 12601 41f5 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 12602              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12603              		.loc 1 122 11 view .LVU4297
 12604 41f9 490FA3C2 		bt	r10, rax	# *_35, factor
 12605 41fd 7321     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccG38KJh.s 			page 337


 12606              		.loc 1 122 60 is_stmt 1 view .LVU4298
 12607              	.LVL820:
 12608              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12609              		.loc 1 122 65 is_stmt 0 view .LVU4299
 12610 41ff 498D4506 		lea	rax, 6[r13]	# factor,
 12611              	.LVL821:
 122:sieve_extend.c ****     return index;
 12612              		.loc 1 122 11 is_stmt 1 view .LVU4300
 12613              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12614              		.loc 1 122 23 is_stmt 0 view .LVU4301
 12615 4203 4889C1   		mov	rcx, rax	# tmp299, factor
 12616 4206 48C1E906 		shr	rcx, 6	# tmp299,
 12617              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12618              		.loc 1 122 12 view .LVU4302
 12619 420a 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 12620              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12621              		.loc 1 122 11 view .LVU4303
 12622 420e 490FA3C3 		bt	r11, rax	# *_35, factor
 12623 4212 730C     		jnc	.L1120	#,
 122:sieve_extend.c ****     return index;
 12624              		.loc 1 122 60 is_stmt 1 view .LVU4304
 12625              	.LVL822:
 12626              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12627              		.loc 1 122 65 is_stmt 0 view .LVU4305
 12628 4214 498D4507 		lea	rax, 7[r13]	# factor,
 12629              	.LVL823:
 122:sieve_extend.c ****     return index;
 12630              		.loc 1 122 11 is_stmt 1 view .LVU4306
 12631 4218 E949FFFF 		jmp	.L1266	#
 12631      FF
 12632 421d 0F1F00   		.p2align 4,,10
 12633              		.p2align 3
 12634              	.L1120:
 12635              	.LVL824:
 122:sieve_extend.c ****     return index;
 12636              		.loc 1 122 11 is_stmt 0 view .LVU4307
 12637              	.LBE787:
 12638              	.LBE786:
 548:sieve_extend.c ****     return primeCount;
 12639              		.loc 1 548 30 is_stmt 1 view .LVU4308
 12640              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12641              		.loc 1 548 5 is_stmt 0 view .LVU4309
 12642 4220 4839C7   		cmp	rdi, rax	# _25, factor
 12643 4223 0F8737FF 		ja	.L1122	#,
 12643      FFFF
 548:sieve_extend.c ****     return primeCount;
 12644              		.loc 1 548 5 view .LVU4310
 12645              	.LBE788:
 549:sieve_extend.c **** }
 12646              		.loc 1 549 5 is_stmt 1 view .LVU4311
 12647              	.LVL825:
GAS LISTING /tmp/ccG38KJh.s 			page 338


 549:sieve_extend.c **** }
 12648              		.loc 1 549 5 is_stmt 0 view .LVU4312
 12649              	.LBE784:
 12650              	.LBE783:
 578:sieve_extend.c ****     switch(sieve->size) {
 12651              		.loc 1 578 5 is_stmt 1 view .LVU4313
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12652              		.loc 1 579 5 view .LVU4314
 12653 4229 83FB03   		cmp	ebx, 3	# option_verboselevel,
 12654 422c 0F9FC2   		setg	dl	#, tmp172
 12655 422f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 12655      860100
 12656 4236 0F843F06 		je	.L1123	#,
 12656      0000
 12657 423c 0F86D202 		jbe	.L1267	#,
 12657      0000
 12658 4242 4981F900 		cmp	r9, 100000000	# pretmp_201,
 12658      E1F505
 12659 4249 0F84EB05 		je	.L1131	#,
 12659      0000
 12660 424f 0F863B03 		jbe	.L1268	#,
 12660      0000
 12661 4255 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 12661      CA9A3B
 12662 425c 0F85FD05 		jne	.L1129	#,
 12662      0000
 12663 4262 4981F82E 		cmp	r8, 50847534	# primeCount,
 12663      DF0703
 12664 4269 410F94C5 		sete	r13b	#, tmp189
 12665 426d 4421EA   		and	edx, r13d	# _253, tmp189
 12666 4270 4981F82E 		cmp	r8, 50847534	# primeCount,
 12666      DF0703
 12667 4277 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 12668 427b 410F95C4 		setne	r12b	#, _135
 588:sieve_extend.c ****         default:            valid_primes= 0;
 12669              		.loc 1 588 29 view .LVU4315
 12670              	.LVL826:
 588:sieve_extend.c ****         default:            valid_primes= 0;
 12671              		.loc 1 588 54 view .LVU4316
 12672              	# sieve_extend.c:588:         case 1000000000:    valid_primes = 50847534; break;
 588:sieve_extend.c ****         default:            valid_primes= 0;
 12673              		.loc 1 588 42 is_stmt 0 view .LVU4317
 12674 427f B92EDF07 		mov	ecx, 50847534	# valid_primes,
 12674      03
 12675              	.LVL827:
 12676              		.p2align 4,,10
 12677 4284 0F1F4000 		.p2align 3
 12678              	.L1136:
 592:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 12679              		.loc 1 592 5 is_stmt 1 view .LVU4318
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12680              		.loc 1 593 5 view .LVU4319
 12681              	# sieve_extend.c:593:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12682              		.loc 1 593 8 is_stmt 0 view .LVU4320
 12683 4288 84D2     		test	dl, dl	# _253
 12684 428a 0F842A04 		je	.L1137	#,
GAS LISTING /tmp/ccG38KJh.s 			page 339


 12684      0000
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12685              		.loc 1 593 45 is_stmt 1 discriminator 1 view .LVU4321
 12686              	.LVL828:
 12687              	.LBB790:
 12688              	.LBI790:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12689              		.loc 3 105 1 discriminator 1 view .LVU4322
 12690              	.LBB791:
 12691              		.loc 3 107 3 discriminator 1 view .LVU4323
 12692              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12693              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4324
 12694 4290 4C89CA   		mov	rdx, r9	#, pretmp_201
 12695 4293 488D3500 		lea	rsi, .LC9[rip]	#,
 12695      000000
 12696 429a BF010000 		mov	edi, 1	#,
 12696      00
 12697 429f 31C0     		xor	eax, eax	#
 12698 42a1 E8000000 		call	__printf_chk@PLT	#
 12698      00
 12699              	.LVL829:
 12700              		.loc 3 107 10 discriminator 1 view .LVU4325
 12701              	.LBE791:
 12702              	.LBE790:
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 12703              		.loc 1 594 5 is_stmt 1 discriminator 1 view .LVU4326
 12704              	.L1138:
 598:sieve_extend.c ****     return (valid);
 12705              		.loc 1 598 5 view .LVU4327
 12706              	# sieve_extend.c:598:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 598:sieve_extend.c ****     return (valid);
 12707              		.loc 1 598 8 is_stmt 0 view .LVU4328
 12708 42a6 83FB01   		cmp	ebx, 1	# option_verboselevel,
 12709 42a9 0F8E5302 		jle	.L1118	#,
 12709      0000
 12710 42af 4584E4   		test	r12b, r12b	# _135
 12711 42b2 0F844A02 		je	.L1118	#,
 12711      0000
 12712              	.L1140:
 598:sieve_extend.c ****     return (valid);
 12713              		.loc 1 598 45 is_stmt 1 discriminator 1 view .LVU4329
 12714              	.LBB792:
 12715              	.LBI792:
 552:sieve_extend.c ****     printf("DeepAnalyzing\n");
 12716              		.loc 1 552 13 discriminator 1 view .LVU4330
 12717              	.LVL830:
 12718              	.LBB793:
 553:sieve_extend.c ****     counter_t warn_prime = 0;
 12719              		.loc 1 553 5 discriminator 1 view .LVU4331
 12720              	.LBB794:
 12721              	.LBI794:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12722              		.loc 3 105 1 discriminator 1 view .LVU4332
 12723              	.LBB795:
 12724              		.loc 3 107 3 discriminator 1 view .LVU4333
 12725              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12726              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4334
GAS LISTING /tmp/ccG38KJh.s 			page 340


 12727 42b8 488D3D00 		lea	rdi, .LC11[rip]	#,
 12727      000000
 12728 42bf E8000000 		call	puts@PLT	#
 12728      00
 12729              	.LVL831:
 12730              		.loc 3 107 10 discriminator 1 view .LVU4335
 12731              	.LBE795:
 12732              	.LBE794:
 554:sieve_extend.c ****     counter_t warn_nonprime = 0;
 12733              		.loc 1 554 5 is_stmt 1 discriminator 1 view .LVU4336
 555:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12734              		.loc 1 555 5 discriminator 1 view .LVU4337
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12735              		.loc 1 556 5 discriminator 1 view .LVU4338
 12736              	.LBB796:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12737              		.loc 1 556 10 discriminator 1 view .LVU4339
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12738              		.loc 1 556 31 discriminator 1 view .LVU4340
 12739              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12740              		.loc 1 556 44 is_stmt 0 discriminator 1 view .LVU4341
 12741 42c4 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12742              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12743              		.loc 1 556 5 discriminator 1 view .LVU4342
 12744 42c8 4883FF01 		cmp	rdi, 1	# _137,
 12745 42cc 0F863002 		jbe	.L1118	#,
 12745      0000
 12746              	.LBE796:
 12747              	# sieve_extend.c:555:     counter_t warn_nonprime = 0;
 555:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12748              		.loc 1 555 15 view .LVU4343
 12749 42d2 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 12749      08000000 
 12749      00
 12750              	.LBB818:
 12751              	.LBB797:
 12752              	.LBB798:
 12753              	.LBB799:
 12754              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12755              		.loc 3 107 10 view .LVU4344
 12756 42db 44896C24 		mov	DWORD PTR 20[rsp], r13d	# %sfp, <retval>
 12756      14
 12757              	.LBE799:
 12758              	.LBE798:
 12759              	.LBE797:
 12760              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12761              		.loc 1 556 5 view .LVU4345
 12762 42e0 41BF0200 		mov	r15d, 2	# ivtmp.678,
 12762      0000
 12763 42e6 41BC0300 		mov	r12d, 3	# ivtmp.676,
 12763      0000
 12764              	.LBE818:
 12765              	# sieve_extend.c:554:     counter_t warn_prime = 0;
 554:sieve_extend.c ****     counter_t warn_nonprime = 0;
GAS LISTING /tmp/ccG38KJh.s 			page 341


 12766              		.loc 1 554 15 view .LVU4346
 12767 42ec 4531C0   		xor	r8d, r8d	# warn_prime
 12768              	.LBB819:
 12769              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12770              		.loc 1 556 20 view .LVU4347
 12771 42ef 41BE0100 		mov	r14d, 1	# prime,
 12771      0000
 12772              	.LBB806:
 12773              	.LBB803:
 12774              	.LBB800:
 12775              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12776              		.loc 3 107 10 view .LVU4348
 12777 42f5 4989ED   		mov	r13, rbp	# sieve, sieve
 12778              	.LVL832:
 12779 42f8 0F1F8400 		.p2align 4,,10
 12779      00000000 
 12780              		.p2align 3
 12781              	.L1149:
 12782              		.loc 3 107 10 view .LVU4349
 12783              	.LBE800:
 12784              	.LBE803:
 12785              	.LBE806:
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12786              		.loc 1 557 9 is_stmt 1 view .LVU4350
 12787              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12788              		.loc 1 557 31 is_stmt 0 view .LVU4351
 12789 4300 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 12790              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12791              		.loc 1 557 32 view .LVU4352
 12792 4304 4C89F3   		mov	rbx, r14	# tmp198, prime
 12793 4307 48C1EB06 		shr	rbx, 6	# tmp198,
 12794              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12795              		.loc 1 557 73 view .LVU4353
 12796 430b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 12796      00
 12797 4310 C4C28BF7 		shrx	rcx, r9, r14	# tmp201, *_47, prime
 12797      C9
 12798              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12799              		.loc 1 557 12 view .LVU4354
 12800 4315 83E101   		and	ecx, 1	# c,
 12801 4318 0F84BA02 		je	.L1141	#,
 12801      0000
 12802              	.LVL833:
 12803              	.LBB807:
 12804              	.LBB808:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12805              		.loc 1 566 32 is_stmt 1 view .LVU4355
 12806              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12807              		.loc 1 566 13 is_stmt 0 view .LVU4356
 12808 431e BE030000 		mov	esi, 3	# ivtmp.668,
 12808      00
GAS LISTING /tmp/ccG38KJh.s 			page 342


 12809              	.LBE808:
 12810              	# sieve_extend.c:565:             counter_t c_prime = 0;
 565:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12811              		.loc 1 565 23 view .LVU4357
 12812 4323 31ED     		xor	ebp, ebp	# c_prime
 12813              	.LBB809:
 12814              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12815              		.loc 1 566 13 view .LVU4358
 12816 4325 4885FF   		test	rdi, rdi	# _137
 12817 4328 0F84EB03 		je	.L1256	#,
 12817      0000
 12818 432e 4989FB   		mov	r11, rdi	# tmp231, _137
 12819 4331 4929CB   		sub	r11, rcx	# tmp231, c
 12820 4334 4183E303 		and	r11d, 3	# tmp231,
 12821 4338 4D89DA   		mov	r10, r11	# tmp232, tmp231
 12822 433b 0F84B700 		je	.L1142	#,
 12822      0000
 12823              	.LVL834:
 567:sieve_extend.c ****             }
 12824              		.loc 1 567 17 is_stmt 1 view .LVU4359
 12825              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12826              		.loc 1 567 48 is_stmt 0 view .LVU4360
 12827 4341 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 12828 4345 4C39F8   		cmp	rax, r15	# tmp239, ivtmp.678
 12829 4348 7411     		je	.L1196	#,
 12830              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12831              		.loc 1 567 33 view .LVU4361
 12832 434a 31D2     		xor	edx, edx	# tmp241
 12833 434c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.676
 12834 434f 48F7F6   		div	rsi	# ivtmp.668
 12835              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12836              		.loc 1 567 82 view .LVU4362
 12837 4352 31ED     		xor	ebp, ebp	# c_prime
 567:sieve_extend.c ****             }
 12838              		.loc 1 567 82 view .LVU4363
 12839 4354 4885D2   		test	rdx, rdx	# tmp241
 12840 4357 400F94C5 		sete	bpl	#, c_prime
 12841              	.LVL835:
 12842              	.L1196:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12843              		.loc 1 566 68 is_stmt 1 view .LVU4364
 12844              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12845              		.loc 1 566 69 is_stmt 0 view .LVU4365
 12846 435b 48FFC1   		inc	rcx	# c
 12847              	.LVL836:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12848              		.loc 1 566 32 is_stmt 1 view .LVU4366
 12849              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12850              		.loc 1 566 13 is_stmt 0 view .LVU4367
 12851 435e 4839F9   		cmp	rcx, rdi	# c, _137
 12852 4361 0F877901 		ja	.L1148	#,
GAS LISTING /tmp/ccG38KJh.s 			page 343


 12852      0000
 12853              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12854              		.loc 1 566 51 view .LVU4368
 12855 4367 4989C9   		mov	r9, rcx	# tmp244, c
 12856 436a 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 12857 436e BE050000 		mov	esi, 5	# ivtmp.668,
 12857      00
 12858              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12859              		.loc 1 566 47 view .LVU4369
 12860 4373 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.676
 12861 4376 0F876401 		ja	.L1148	#,
 12861      0000
 12862 437c 4983FA01 		cmp	r10, 1	# tmp232,
 12863 4380 7476     		je	.L1142	#,
 12864 4382 4983FA02 		cmp	r10, 2	# tmp232,
 12865 4386 7437     		je	.L1227	#,
 567:sieve_extend.c ****             }
 12866              		.loc 1 567 17 is_stmt 1 view .LVU4370
 12867              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12868              		.loc 1 567 48 is_stmt 0 view .LVU4371
 12869 4388 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 12870 438c 4C39FB   		cmp	rbx, r15	# tmp245, ivtmp.678
 12871 438f 7417     		je	.L1198	#,
 12872              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12873              		.loc 1 567 33 view .LVU4372
 12874 4391 31D2     		xor	edx, edx	# tmp247
 12875 4393 4C89E0   		mov	rax, r12	# tmp248, ivtmp.676
 12876 4396 48F7F6   		div	rsi	# ivtmp.668
 12877              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12878              		.loc 1 567 20 view .LVU4373
 12879 4399 4885D2   		test	rdx, rdx	# tmp247
 12880 439c 410F94C3 		sete	r11b	#, tmp249
 12881              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12882              		.loc 1 567 82 view .LVU4374
 12883 43a0 4180FB01 		cmp	r11b, 1	# tmp249,
 12884 43a4 4883DDFF 		sbb	rbp, -1	# c_prime,
 12885              	.LVL837:
 12886              	.L1198:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12887              		.loc 1 566 68 is_stmt 1 view .LVU4375
 12888              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12889              		.loc 1 566 69 is_stmt 0 view .LVU4376
 12890 43a8 48FFC1   		inc	rcx	# c
 12891              	.LVL838:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12892              		.loc 1 566 32 is_stmt 1 view .LVU4377
 12893              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12894              		.loc 1 566 51 is_stmt 0 view .LVU4378
 12895 43ab 4989CA   		mov	r10, rcx	# tmp250, c
GAS LISTING /tmp/ccG38KJh.s 			page 344


 12896 43ae 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 12897 43b2 4883C602 		add	rsi, 2	# ivtmp.668,
 12898              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12899              		.loc 1 566 47 view .LVU4379
 12900 43b6 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.676
 12901 43b9 0F872101 		ja	.L1148	#,
 12901      0000
 12902              	.L1227:
 567:sieve_extend.c ****             }
 12903              		.loc 1 567 17 is_stmt 1 view .LVU4380
 12904              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12905              		.loc 1 567 48 is_stmt 0 view .LVU4381
 12906 43bf 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 12907 43c3 4D39F9   		cmp	r9, r15	# tmp251, ivtmp.678
 12908 43c6 7415     		je	.L1201	#,
 12909              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12910              		.loc 1 567 33 view .LVU4382
 12911 43c8 31D2     		xor	edx, edx	# tmp253
 12912 43ca 4C89E0   		mov	rax, r12	# tmp254, ivtmp.676
 12913 43cd 48F7F6   		div	rsi	# ivtmp.668
 12914              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12915              		.loc 1 567 20 view .LVU4383
 12916 43d0 4885D2   		test	rdx, rdx	# tmp253
 12917 43d3 0F94C3   		sete	bl	#, tmp255
 12918              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12919              		.loc 1 567 82 view .LVU4384
 12920 43d6 80FB01   		cmp	bl, 1	# tmp255,
 12921 43d9 4883DDFF 		sbb	rbp, -1	# c_prime,
 12922              	.LVL839:
 12923              	.L1201:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12924              		.loc 1 566 68 is_stmt 1 view .LVU4385
 12925              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12926              		.loc 1 566 69 is_stmt 0 view .LVU4386
 12927 43dd 48FFC1   		inc	rcx	# c
 12928              	.LVL840:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12929              		.loc 1 566 32 is_stmt 1 view .LVU4387
 12930              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12931              		.loc 1 566 51 is_stmt 0 view .LVU4388
 12932 43e0 4989CB   		mov	r11, rcx	# tmp256, c
 12933 43e3 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 12934 43e7 4883C602 		add	rsi, 2	# ivtmp.668,
 12935              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12936              		.loc 1 566 47 view .LVU4389
 12937 43eb 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.676
 12938 43ee 0F87EC00 		ja	.L1148	#,
 12938      0000
 12939              	.LVL841:
GAS LISTING /tmp/ccG38KJh.s 			page 345


 12940              		.p2align 4,,10
 12941 43f4 0F1F4000 		.p2align 3
 12942              	.L1142:
 567:sieve_extend.c ****             }
 12943              		.loc 1 567 17 is_stmt 1 view .LVU4390
 12944              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12945              		.loc 1 567 48 is_stmt 0 view .LVU4391
 12946 43f8 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 12947 43fc 4D39FA   		cmp	r10, r15	# tmp210, ivtmp.678
 12948 43ff 7417     		je	.L1147	#,
 12949              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12950              		.loc 1 567 33 view .LVU4392
 12951 4401 31D2     		xor	edx, edx	# tmp214
 12952 4403 4C89E0   		mov	rax, r12	# tmp215, ivtmp.676
 12953 4406 48F7F6   		div	rsi	# ivtmp.668
 12954              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12955              		.loc 1 567 20 view .LVU4393
 12956 4409 4885D2   		test	rdx, rdx	# tmp214
 12957 440c 410F94C1 		sete	r9b	#, tmp217
 12958              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12959              		.loc 1 567 82 view .LVU4394
 12960 4410 4180F901 		cmp	r9b, 1	# tmp217,
 12961 4414 4883DDFF 		sbb	rbp, -1	# c_prime,
 12962              	.LVL842:
 12963              	.L1147:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12964              		.loc 1 566 68 is_stmt 1 view .LVU4395
 12965              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12966              		.loc 1 566 69 is_stmt 0 view .LVU4396
 12967 4418 48FFC1   		inc	rcx	# tmp234
 12968              	.LVL843:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12969              		.loc 1 566 32 is_stmt 1 view .LVU4397
 12970              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12971              		.loc 1 566 13 is_stmt 0 view .LVU4398
 12972 441b 4839F9   		cmp	rcx, rdi	# tmp234, _137
 12973 441e 0F87BC00 		ja	.L1148	#,
 12973      0000
 12974              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12975              		.loc 1 566 51 view .LVU4399
 12976 4424 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 12977 4427 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 12978 442b 4883C602 		add	rsi, 2	# tmp233,
 12979              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12980              		.loc 1 566 47 view .LVU4400
 12981 442f 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.676
 12982 4432 0F87A800 		ja	.L1148	#,
 12982      0000
 567:sieve_extend.c ****             }
GAS LISTING /tmp/ccG38KJh.s 			page 346


 12983              		.loc 1 567 17 is_stmt 1 view .LVU4401
 12984              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12985              		.loc 1 567 48 is_stmt 0 view .LVU4402
 12986 4438 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 12987 443c 4D39FB   		cmp	r11, r15	# tmp257, ivtmp.678
 12988 443f 7417     		je	.L1205	#,
 12989              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12990              		.loc 1 567 33 view .LVU4403
 12991 4441 31D2     		xor	edx, edx	# tmp259
 12992 4443 4C89E0   		mov	rax, r12	# tmp260, ivtmp.676
 12993 4446 48F7F6   		div	rsi	# tmp233
 12994              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12995              		.loc 1 567 20 view .LVU4404
 12996 4449 4885D2   		test	rdx, rdx	# tmp259
 12997 444c 410F94C2 		sete	r10b	#, tmp261
 12998              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12999              		.loc 1 567 82 view .LVU4405
 13000 4450 4180FA01 		cmp	r10b, 1	# tmp261,
 13001 4454 4883DDFF 		sbb	rbp, -1	# c_prime,
 13002              	.LVL844:
 13003              	.L1205:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13004              		.loc 1 566 68 is_stmt 1 view .LVU4406
 13005              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13006              		.loc 1 566 69 is_stmt 0 view .LVU4407
 13007 4458 4C8D4901 		lea	r9, 1[rcx]	# c,
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13008              		.loc 1 566 32 is_stmt 1 view .LVU4408
 13009              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13010              		.loc 1 566 51 is_stmt 0 view .LVU4409
 13011 445c 4D89CB   		mov	r11, r9	# tmp264, c
 13012 445f 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13013 4463 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.668,
 13014              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13015              		.loc 1 566 47 view .LVU4410
 13016 4467 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.676
 13017 446a 7774     		ja	.L1148	#,
 567:sieve_extend.c ****             }
 13018              		.loc 1 567 17 is_stmt 1 view .LVU4411
 13019              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13020              		.loc 1 567 48 is_stmt 0 view .LVU4412
 13021 446c 4D01C9   		add	r9, r9	# tmp265
 13022 446f 4D39F9   		cmp	r9, r15	# tmp265, ivtmp.678
 13023 4472 7417     		je	.L1207	#,
 13024              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13025              		.loc 1 567 33 view .LVU4413
 13026 4474 31D2     		xor	edx, edx	# tmp267
 13027 4476 4C89E0   		mov	rax, r12	# tmp268, ivtmp.676
GAS LISTING /tmp/ccG38KJh.s 			page 347


 13028 4479 48F7F3   		div	rbx	# ivtmp.668
 13029              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13030              		.loc 1 567 20 view .LVU4414
 13031 447c 4885D2   		test	rdx, rdx	# tmp267
 13032 447f 410F94C2 		sete	r10b	#, tmp269
 13033              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13034              		.loc 1 567 82 view .LVU4415
 13035 4483 4180FA01 		cmp	r10b, 1	# tmp269,
 13036 4487 4883DDFF 		sbb	rbp, -1	# c_prime,
 13037              	.LVL845:
 13038              	.L1207:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13039              		.loc 1 566 68 is_stmt 1 view .LVU4416
 13040              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13041              		.loc 1 566 69 is_stmt 0 view .LVU4417
 13042 448b 4C8D4902 		lea	r9, 2[rcx]	# c,
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13043              		.loc 1 566 32 is_stmt 1 view .LVU4418
 13044              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13045              		.loc 1 566 51 is_stmt 0 view .LVU4419
 13046 448f 4D89CB   		mov	r11, r9	# tmp272, c
 13047 4492 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13048 4496 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.668,
 13049              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13050              		.loc 1 566 47 view .LVU4420
 13051 449a 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.676
 13052 449d 7741     		ja	.L1148	#,
 567:sieve_extend.c ****             }
 13053              		.loc 1 567 17 is_stmt 1 view .LVU4421
 13054              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13055              		.loc 1 567 48 is_stmt 0 view .LVU4422
 13056 449f 4D01C9   		add	r9, r9	# tmp273
 13057 44a2 4D39F9   		cmp	r9, r15	# tmp273, ivtmp.678
 13058 44a5 7417     		je	.L1209	#,
 13059              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13060              		.loc 1 567 33 view .LVU4423
 13061 44a7 31D2     		xor	edx, edx	# tmp275
 13062 44a9 4C89E0   		mov	rax, r12	# tmp276, ivtmp.676
 13063 44ac 48F7F3   		div	rbx	# ivtmp.668
 13064              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13065              		.loc 1 567 20 view .LVU4424
 13066 44af 4885D2   		test	rdx, rdx	# tmp275
 13067 44b2 410F94C2 		sete	r10b	#, tmp277
 13068              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 13069              		.loc 1 567 82 view .LVU4425
 13070 44b6 4180FA01 		cmp	r10b, 1	# tmp277,
 13071 44ba 4883DDFF 		sbb	rbp, -1	# c_prime,
 13072              	.LVL846:
GAS LISTING /tmp/ccG38KJh.s 			page 348


 13073              	.L1209:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13074              		.loc 1 566 68 is_stmt 1 view .LVU4426
 13075              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13076              		.loc 1 566 69 is_stmt 0 view .LVU4427
 13077 44be 4883C103 		add	rcx, 3	# c,
 13078              	.LVL847:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13079              		.loc 1 566 32 is_stmt 1 view .LVU4428
 13080              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13081              		.loc 1 566 51 is_stmt 0 view .LVU4429
 13082 44c2 4989C9   		mov	r9, rcx	# tmp278, c
 13083 44c5 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13084 44c9 4883C606 		add	rsi, 6	# ivtmp.668,
 13085              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13086              		.loc 1 566 47 view .LVU4430
 13087 44cd 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.676
 13088 44d0 0F8622FF 		jbe	.L1142	#,
 13088      FFFF
 13089              	.LVL848:
 13090 44d6 662E0F1F 		.p2align 4,,10
 13090      84000000 
 13090      0000
 13091              		.p2align 3
 13092              	.L1148:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13093              		.loc 1 566 47 view .LVU4431
 13094              	.LBE809:
 569:sieve_extend.c ****         }
 13095              		.loc 1 569 13 is_stmt 1 view .LVU4432
 13096              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13097              		.loc 1 569 16 is_stmt 0 view .LVU4433
 13098 44e0 4885ED   		test	rbp, rbp	# c_prime
 13099 44e3 0F841702 		je	.L1269	#,
 13099      0000
 13100              	.LVL849:
 13101              	.L1145:
 569:sieve_extend.c ****         }
 13102              		.loc 1 569 16 view .LVU4434
 13103              	.LBE807:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13104              		.loc 1 556 52 is_stmt 1 view .LVU4435
 13105              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13106              		.loc 1 556 57 is_stmt 0 view .LVU4436
 13107 44e9 49FFC6   		inc	r14	# prime
 13108              	.LVL850:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13109              		.loc 1 556 31 is_stmt 1 view .LVU4437
 13110 44ec 4983C402 		add	r12, 2	# ivtmp.676,
 13111 44f0 4983C702 		add	r15, 2	# ivtmp.678,
 13112              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccG38KJh.s 			page 349


 13113              		.loc 1 556 5 is_stmt 0 view .LVU4438
 13114 44f4 4939FE   		cmp	r14, rdi	# prime, _137
 13115 44f7 0F8203FE 		jb	.L1149	#,
 13115      FFFF
 13116              	.LVL851:
 13117              	.L1258:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13118              		.loc 1 556 5 view .LVU4439
 13119 44fd 448B6C24 		mov	r13d, DWORD PTR 20[rsp]	# <retval>, %sfp
 13119      14
 13120              	.LVL852:
 13121              	.L1118:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13122              		.loc 1 556 5 view .LVU4440
 13123              	.LBE819:
 13124              	.LBE793:
 13125              	.LBE792:
 13126              	# sieve_extend.c:600: }
 600:sieve_extend.c **** 
 13127              		.loc 1 600 1 view .LVU4441
 13128 4502 4883C428 		add	rsp, 40	#,
 13129              		.cfi_remember_state
 13130              		.cfi_def_cfa_offset 56
 13131 4506 5B       		pop	rbx	#
 13132              		.cfi_def_cfa_offset 48
 13133 4507 5D       		pop	rbp	#
 13134              		.cfi_def_cfa_offset 40
 13135 4508 415C     		pop	r12	#
 13136              		.cfi_def_cfa_offset 32
 13137 450a 4489E8   		mov	eax, r13d	#, <retval>
 13138 450d 415D     		pop	r13	#
 13139              		.cfi_def_cfa_offset 24
 13140 450f 415E     		pop	r14	#
 13141              		.cfi_def_cfa_offset 16
 13142 4511 415F     		pop	r15	#
 13143              		.cfi_def_cfa_offset 8
 13144 4513 C3       		ret	
 13145              	.LVL853:
 13146              	.L1267:
 13147              		.cfi_restore_state
 13148              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13149              		.loc 1 579 5 view .LVU4442
 13150 4514 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13150      030000
 13151 451b 0F84F202 		je	.L1125	#,
 13151      0000
 13152 4521 7633     		jbe	.L1270	#,
 13153 4523 4981F910 		cmp	r9, 10000	# pretmp_201,
 13153      270000
 13154 452a 0F852F03 		jne	.L1129	#,
 13154      0000
 13155 4530 4981F8CD 		cmp	r8, 1229	# primeCount,
 13155      040000
 13156 4537 400F94C6 		sete	sil	#, tmp179
 13157 453b 21F2     		and	edx, esi	# _253, tmp179
 13158 453d 4981F8CD 		cmp	r8, 1229	# primeCount,
GAS LISTING /tmp/ccG38KJh.s 			page 350


 13158      040000
 13159 4544 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13160 4548 410F95C4 		setne	r12b	#, _135
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13161              		.loc 1 583 29 is_stmt 1 view .LVU4443
 13162              	.LVL854:
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13163              		.loc 1 583 54 view .LVU4444
 13164              	# sieve_extend.c:583:         case 10000:         valid_primes = 1229;     break;
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13165              		.loc 1 583 42 is_stmt 0 view .LVU4445
 13166 454c B9CD0400 		mov	ecx, 1229	# valid_primes,
 13166      00
 13167              	# sieve_extend.c:583:         case 10000:         valid_primes = 1229;     break;
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13168              		.loc 1 583 9 view .LVU4446
 13169 4551 E932FDFF 		jmp	.L1136	#
 13169      FF
 13170              	.LVL855:
 13171              	.L1270:
 13172              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13173              		.loc 1 579 5 view .LVU4447
 13174 4556 4983F90A 		cmp	r9, 10	# pretmp_201,
 13175 455a 0F842602 		je	.L1127	#,
 13175      0000
 13176 4560 4983F964 		cmp	r9, 100	# pretmp_201,
 13177 4564 0F85F502 		jne	.L1129	#,
 13177      0000
 13178 456a 4983F819 		cmp	r8, 25	# primeCount,
 13179 456e 0F94C1   		sete	cl	#, tmp173
 13180 4571 21CA     		and	edx, ecx	# _253, tmp173
 13181 4573 4983F819 		cmp	r8, 25	# primeCount,
 13182 4577 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13183 457b 410F95C4 		setne	r12b	#, _135
 13184              	# sieve_extend.c:581:         case 100:           valid_primes = 25;       break;
 581:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13185              		.loc 1 581 42 view .LVU4448
 13186 457f B9190000 		mov	ecx, 25	# valid_primes,
 13186      00
 13187 4584 E9FFFCFF 		jmp	.L1136	#
 13187      FF
 13188 4589 0F1F8000 		.p2align 4,,10
 13188      000000
 13189              		.p2align 3
 13190              	.L1268:
 13191              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13192              		.loc 1 579 5 view .LVU4449
 13193 4590 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13193      420F00
 13194 4597 0F84C201 		je	.L1133	#,
 13194      0000
 13195 459d 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13195      969800
 13196 45a4 0F85B502 		jne	.L1129	#,
 13196      0000
GAS LISTING /tmp/ccG38KJh.s 			page 351


 13197 45aa 4981F803 		cmp	r8, 664579	# primeCount,
 13197      240A00
 13198 45b1 410F94C7 		sete	r15b	#, tmp185
 13199 45b5 4421FA   		and	edx, r15d	# _253, tmp185
 13200 45b8 4981F803 		cmp	r8, 664579	# primeCount,
 13200      240A00
 13201 45bf 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13202 45c3 410F95C4 		setne	r12b	#, _135
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13203              		.loc 1 586 29 is_stmt 1 view .LVU4450
 13204              	.LVL856:
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13205              		.loc 1 586 54 view .LVU4451
 13206              	# sieve_extend.c:586:         case 10000000:      valid_primes = 664579;   break;
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13207              		.loc 1 586 42 is_stmt 0 view .LVU4452
 13208 45c7 B903240A 		mov	ecx, 664579	# valid_primes,
 13208      00
 13209              	# sieve_extend.c:586:         case 10000000:      valid_primes = 664579;   break;
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13210              		.loc 1 586 9 view .LVU4453
 13211 45cc E9B7FCFF 		jmp	.L1136	#
 13211      FF
 13212              	.LVL857:
 13213              		.p2align 4,,10
 13214 45d1 0F1F8000 		.p2align 3
 13214      000000
 13215              	.L1141:
 13216              	.LBB824:
 13217              	.LBB822:
 13218              	.LBB820:
 13219              	.LBB816:
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13220              		.loc 1 558 32 is_stmt 1 view .LVU4454
 13221              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13222              		.loc 1 558 13 is_stmt 0 view .LVU4455
 13223 45d8 4885FF   		test	rdi, rdi	# _137
 13224 45db 0F841CFF 		je	.L1258	#,
 13224      FFFF
 13225              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13226              		.loc 1 558 27 view .LVU4456
 13227 45e1 BB010000 		mov	ebx, 1	# c,
 13227      00
 13228 45e6 EB27     		jmp	.L1146	#
 13229              	.LVL858:
 13230 45e8 0F1F8400 		.p2align 4,,10
 13230      00000000 
 13231              		.p2align 3
 13232              	.L1155:
 13233              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 13234              		.loc 1 560 35 view .LVU4457
 13235 45f0 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13236              	.LVL859:
 13237              	.L1144:
GAS LISTING /tmp/ccG38KJh.s 			page 352


 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13238              		.loc 1 558 68 is_stmt 1 view .LVU4458
 13239              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13240              		.loc 1 558 69 is_stmt 0 view .LVU4459
 13241 45f3 48FFC3   		inc	rbx	# c
 13242              	.LVL860:
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13243              		.loc 1 558 32 is_stmt 1 view .LVU4460
 13244              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13245              		.loc 1 558 13 is_stmt 0 view .LVU4461
 13246 45f6 4839FB   		cmp	rbx, rdi	# c, _137
 13247 45f9 0F87EAFE 		ja	.L1145	#,
 13247      FFFF
 13248              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13249              		.loc 1 558 51 view .LVU4462
 13250 45ff 4989DB   		mov	r11, rbx	# tmp209, c
 13251 4602 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 13252              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13253              		.loc 1 558 47 view .LVU4463
 13254 4606 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.676
 13255 4609 0F87DAFE 		ja	.L1145	#,
 13255      FFFF
 13256              	.LVL861:
 13257              	.L1146:
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13258              		.loc 1 559 17 is_stmt 1 view .LVU4464
 13259 460f 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 13260              	# sieve_extend.c:559:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13261              		.loc 1 559 39 is_stmt 0 view .LVU4465
 13262 4613 488D7501 		lea	rsi, 1[rbp]	# _55,
 13263 4617 4C89E0   		mov	rax, r12	# tmp203, ivtmp.676
 13264 461a 31D2     		xor	edx, edx	# tmp204
 13265 461c 48F7F6   		div	rsi	# _55
 13266              	# sieve_extend.c:559:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13267              		.loc 1 559 48 view .LVU4466
 13268 461f 4885D2   		test	rdx, rdx	# tmp204
 13269 4622 75CF     		jne	.L1144	#,
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13270              		.loc 1 559 48 view .LVU4467
 13271 4624 4939EF   		cmp	r15, rbp	# ivtmp.678, _218
 13272 4627 74CA     		je	.L1144	#,
 560:sieve_extend.c ****                 }
 13273              		.loc 1 560 21 is_stmt 1 view .LVU4468
 13274              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 13275              		.loc 1 560 35 is_stmt 0 view .LVU4469
 13276 4629 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 13277              	.LVL862:
 13278              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 13279              		.loc 1 560 24 view .LVU4470
GAS LISTING /tmp/ccG38KJh.s 			page 353


 13280 462d 4983F81D 		cmp	r8, 29	# warn_prime,
 13281 4631 77BD     		ja	.L1155	#,
 560:sieve_extend.c ****                 }
 13282              		.loc 1 560 44 is_stmt 1 view .LVU4471
 13283              	.LVL863:
 13284              	.LBB804:
 13285              	.LBI798:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13286              		.loc 3 105 1 view .LVU4472
 13287              	.LBB801:
 13288              		.loc 3 107 3 view .LVU4473
 13289              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13290              		.loc 3 107 10 is_stmt 0 view .LVU4474
 13291 4633 4883EC08 		sub	rsp, 8	#,
 13292              		.cfi_def_cfa_offset 104
 13293 4637 4154     		push	r12	# ivtmp.676
 13294              		.cfi_def_cfa_offset 112
 13295 4639 4989F0   		mov	r8, rsi	#, _55
 13296 463c 4989C1   		mov	r9, rax	#, tmp203
 13297 463f 4C89E2   		mov	rdx, r12	#, ivtmp.676
 13298 4642 BF010000 		mov	edi, 1	#,
 13298      00
 13299 4647 4C89F1   		mov	rcx, r14	#, prime
 13300 464a 488D3500 		lea	rsi, .LC12[rip]	#,
 13300      000000
 13301 4651 31C0     		xor	eax, eax	#
 13302 4653 E8000000 		call	__printf_chk@PLT	#
 13302      00
 13303              	.LVL864:
 13304 4658 58       		pop	rax	#
 13305              		.cfi_def_cfa_offset 104
 13306 4659 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13307 465d 5A       		pop	rdx	#
 13308              		.cfi_def_cfa_offset 96
 13309              	.LBE801:
 13310              	.LBE804:
 13311              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 13312              		.loc 1 560 35 view .LVU4475
 13313 465e 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13314              	.LBB805:
 13315              	.LBB802:
 13316              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13317              		.loc 3 107 10 view .LVU4476
 13318 4661 EB90     		jmp	.L1144	#
 13319              	.LVL865:
 13320              	.L1119:
 13321              		.loc 3 107 10 view .LVU4477
 13322              	.LBE802:
 13323              	.LBE805:
 13324              	.LBE816:
 13325              	.LBE820:
 13326              	.LBE822:
 13327              	.LBE824:
 13328              	.LBB825:
 13329              	.LBB789:
 549:sieve_extend.c **** }
GAS LISTING /tmp/ccG38KJh.s 			page 354


 13330              		.loc 1 549 5 is_stmt 1 view .LVU4478
 549:sieve_extend.c **** }
 13331              		.loc 1 549 5 is_stmt 0 view .LVU4479
 13332              	.LBE789:
 13333              	.LBE825:
 578:sieve_extend.c ****     switch(sieve->size) {
 13334              		.loc 1 578 5 is_stmt 1 view .LVU4480
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13335              		.loc 1 579 5 view .LVU4481
 13336 4663 41BC0100 		mov	r12d, 1	# _135,
 13336      0000
 13337 4669 41B80100 		mov	r8d, 1	# primeCount,
 13337      0000
 13338 466f 4531ED   		xor	r13d, r13d	# <retval>
 13339 4672 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13339      860100
 13340 4679 0F842202 		je	.L1158	#,
 13340      0000
 13341 467f 0F872201 		ja	.L1150	#,
 13341      0000
 13342 4685 B9190000 		mov	ecx, 25	# valid_primes,
 13342      00
 13343 468a 4983F964 		cmp	r9, 100	# pretmp_201,
 13344 468e 742A     		je	.L1137	#,
 13345 4690 0F863F01 		jbe	.L1271	#,
 13345      0000
 13346              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13347              		.loc 1 582 42 is_stmt 0 view .LVU4482
 13348 4696 B9A80000 		mov	ecx, 168	# valid_primes,
 13348      00
 13349              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13350              		.loc 1 579 5 view .LVU4483
 13351 469b 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13351      030000
 13352 46a2 7416     		je	.L1137	#,
 13353 46a4 4981F910 		cmp	r9, 10000	# pretmp_201,
 13353      270000
 13354 46ab B9CD0400 		mov	ecx, 1229	# tmp223,
 13354      00
 13355 46b0 41BA0000 		mov	r10d, 0	# tmp224,
 13355      0000
 13356 46b6 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 13357              	.LVL866:
 13358              	.L1137:
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13359              		.loc 1 594 5 is_stmt 1 view .LVU4484
 13360              	# sieve_extend.c:594:     if (!valid && option_verboselevel >= 1) {
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13361              		.loc 1 594 8 is_stmt 0 view .LVU4485
 13362 46ba 85DB     		test	ebx, ebx	# option_verboselevel
 13363 46bc 0F8EE4FB 		jle	.L1138	#,
 13363      FFFF
 13364 46c2 4584E4   		test	r12b, r12b	# _135
 13365 46c5 0F84DBFB 		je	.L1138	#,
 13365      FFFF
GAS LISTING /tmp/ccG38KJh.s 			page 355


 595:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 13366              		.loc 1 595 9 is_stmt 1 view .LVU4486
 13367              	.LVL867:
 13368              	.LBB826:
 13369              	.LBI826:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13370              		.loc 3 105 1 view .LVU4487
 13371              	.LBB827:
 13372              		.loc 3 107 3 view .LVU4488
 13373              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13374              		.loc 3 107 10 is_stmt 0 view .LVU4489
 13375 46cb 31C0     		xor	eax, eax	#
 13376 46cd 4C89CA   		mov	rdx, r9	#, pretmp_201
 13377 46d0 488D3500 		lea	rsi, .LC10[rip]	#,
 13377      000000
 13378 46d7 BF010000 		mov	edi, 1	#,
 13378      00
 13379 46dc E8000000 		call	__printf_chk@PLT	#
 13379      00
 13380              	.LVL868:
 13381              		.loc 3 107 10 view .LVU4490
 13382              	.LBE827:
 13383              	.LBE826:
 596:sieve_extend.c ****     }
 13384              		.loc 1 596 9 is_stmt 1 view .LVU4491
 13385              	# sieve_extend.c:596:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 596:sieve_extend.c ****     }
 13386              		.loc 1 596 12 is_stmt 0 view .LVU4492
 13387 46e1 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13388 46e4 0F8418FE 		je	.L1118	#,
 13388      FFFF
 596:sieve_extend.c ****     }
 13389              		.loc 1 596 49 is_stmt 1 discriminator 1 view .LVU4493
 13390 46ea 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 13391 46ee BA640000 		mov	edx, 100	#,
 13391      00
 13392 46f3 4889EF   		mov	rdi, rbp	#, sieve
 13393 46f6 E8C5D8FF 		call	show_primes.isra.0	#
 13393      FF
 13394              	.LVL869:
 598:sieve_extend.c ****     return (valid);
 13395              		.loc 1 598 5 discriminator 1 view .LVU4494
 13396 46fb E9B8FBFF 		jmp	.L1140	#
 13396      FF
 13397              	.LVL870:
 13398              	.L1269:
 13399              	.LBB828:
 13400              	.LBB823:
 13401              	.LBB821:
 13402              	.LBB817:
 13403              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13404              		.loc 1 569 44 is_stmt 0 view .LVU4495
 13405 4700 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 13405      08
 13406 4705 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 13407              	.LVL871:
GAS LISTING /tmp/ccG38KJh.s 			page 356


 13408              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13409              		.loc 1 569 28 view .LVU4496
 13410 4709 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 13411 470d 761D     		jbe	.L1153	#,
 13412              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13413              		.loc 1 569 44 view .LVU4497
 13414 470f 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 13414      08
 13415 4714 E9D0FDFF 		jmp	.L1145	#
 13415      FF
 13416              	.LVL872:
 13417              	.L1256:
 569:sieve_extend.c ****         }
 13418              		.loc 1 569 44 view .LVU4498
 13419 4719 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 13419      08
 13420 471e 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 13421              	.LVL873:
 13422              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13423              		.loc 1 569 28 view .LVU4499
 13424 4722 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 13425 4726 0F87D1FD 		ja	.L1258	#,
 13425      FFFF
 13426              	.LVL874:
 13427              	.L1153:
 13428              	.LBB810:
 13429              	.LBB811:
 13430              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13431              		.loc 3 107 10 view .LVU4500
 13432 472c BF010000 		mov	edi, 1	#,
 13432      00
 13433              	.LBE811:
 13434              	.LBE810:
 13435              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13436              		.loc 1 569 53 view .LVU4501
 13437 4731 4B8D5436 		lea	rdx, 1[r14+r14]	# tmp220,
 13437      01
 13438              	.LBB814:
 13439              	.LBB812:
 13440              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13441              		.loc 3 107 10 view .LVU4502
 13442 4736 4C89F1   		mov	rcx, r14	#, prime
 13443 4739 488D3500 		lea	rsi, .LC13[rip]	#,
 13443      000000
 13444 4740 31C0     		xor	eax, eax	#
 13445 4742 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, warn_prime
 13445      18
 13446              	.LBE812:
 13447              	.LBE814:
 569:sieve_extend.c ****         }
 13448              		.loc 1 569 53 is_stmt 1 view .LVU4503
 13449              	.LVL875:
 13450              	.LBB815:
GAS LISTING /tmp/ccG38KJh.s 			page 357


 13451              	.LBI810:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13452              		.loc 3 105 1 view .LVU4504
 13453              	.LBB813:
 13454              		.loc 3 107 3 view .LVU4505
 13455              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13456              		.loc 3 107 10 is_stmt 0 view .LVU4506
 13457 4747 E8000000 		call	__printf_chk@PLT	#
 13457      00
 13458              	.LVL876:
 13459              		.loc 3 107 10 view .LVU4507
 13460 474c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 13460      08
 13461 4751 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13462 4755 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# warn_prime, %sfp
 13462      18
 13463 475a E98AFDFF 		jmp	.L1145	#
 13463      FF
 13464              	.LVL877:
 13465              	.L1133:
 13466              		.loc 3 107 10 view .LVU4508
 13467 475f 4981F8A2 		cmp	r8, 78498	# primeCount,
 13467      320100
 13468 4766 410F94C6 		sete	r14b	#, tmp183
 13469 476a 4421F2   		and	edx, r14d	# _253, tmp183
 13470 476d 4981F8A2 		cmp	r8, 78498	# primeCount,
 13470      320100
 13471 4774 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 13472 4778 410F95C4 		setne	r12b	#, _135
 13473              	.LBE813:
 13474              	.LBE815:
 13475              	.LBE817:
 13476              	.LBE821:
 13477              	.LBE823:
 13478              	.LBE828:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13479              		.loc 1 585 29 is_stmt 1 view .LVU4509
 13480              	.LVL878:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13481              		.loc 1 585 54 view .LVU4510
 13482              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13483              		.loc 1 585 42 is_stmt 0 view .LVU4511
 13484 477c B9A23201 		mov	ecx, 78498	# valid_primes,
 13484      00
 13485              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13486              		.loc 1 585 9 view .LVU4512
 13487 4781 E902FBFF 		jmp	.L1136	#
 13487      FF
 13488              	.LVL879:
 13489              	.L1127:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13490              		.loc 1 585 9 view .LVU4513
 13491 4786 4983F804 		cmp	r8, 4	# primeCount,
 13492 478a 410F94C2 		sete	r10b	#, tmp175
 13493 478e 4421D2   		and	edx, r10d	# _253, tmp175
GAS LISTING /tmp/ccG38KJh.s 			page 358


 13494 4791 4983F804 		cmp	r8, 4	# primeCount,
 13495 4795 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 13496 4799 410F95C4 		setne	r12b	#, _135
 13497              	# sieve_extend.c:580:         case 10:            valid_primes = 4;        break;
 580:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 13498              		.loc 1 580 42 view .LVU4514
 13499 479d B9040000 		mov	ecx, 4	# valid_primes,
 13499      00
 13500 47a2 E9E1FAFF 		jmp	.L1136	#
 13500      FF
 13501              	.LVL880:
 13502              	.L1150:
 13503              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13504              		.loc 1 587 42 view .LVU4515
 13505 47a7 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13505      00
 13506              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13507              		.loc 1 579 5 view .LVU4516
 13508 47ac 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13508      E1F505
 13509 47b3 0F8401FF 		je	.L1137	#,
 13509      FFFF
 13510 47b9 762C     		jbe	.L1272	#,
 13511 47bb 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13511      CA9A3B
 13512 47c2 B92EDF07 		mov	ecx, 50847534	# tmp227,
 13512      03
 13513 47c7 B8000000 		mov	eax, 0	# tmp228,
 13513      00
 13514 47cc 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 13515 47d0 E9E5FEFF 		jmp	.L1137	#
 13515      FF
 13516              	.L1271:
 13517 47d5 31C9     		xor	ecx, ecx	# valid_primes
 13518 47d7 4983F90A 		cmp	r9, 10	# pretmp_201,
 13519 47db 0F94C1   		sete	cl	#, valid_primes
 13520 47de 48C1E102 		sal	rcx, 2	# valid_primes,
 13521 47e2 E9D3FEFF 		jmp	.L1137	#
 13521      FF
 13522              	.L1272:
 13523              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13524              		.loc 1 585 42 view .LVU4517
 13525 47e7 B9A23201 		mov	ecx, 78498	# valid_primes,
 13525      00
 13526              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13527              		.loc 1 579 5 view .LVU4518
 13528 47ec 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13528      420F00
 13529 47f3 0F84C1FE 		je	.L1137	#,
 13529      FFFF
 13530 47f9 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13530      969800
 13531 4800 B903240A 		mov	ecx, 664579	# tmp225,
GAS LISTING /tmp/ccG38KJh.s 			page 359


 13531      00
 13532 4805 BE000000 		mov	esi, 0	# tmp226,
 13532      00
 13533 480a 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 13534 480e E9A7FEFF 		jmp	.L1137	#
 13534      FF
 13535              	.LVL881:
 13536              	.L1125:
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13537              		.loc 1 579 5 view .LVU4519
 13538 4813 4981F8A8 		cmp	r8, 168	# primeCount,
 13538      000000
 13539 481a 410F94C4 		sete	r12b	#, tmp177
 13540 481e 4421E2   		and	edx, r12d	# _253, tmp177
 13541 4821 4981F8A8 		cmp	r8, 168	# primeCount,
 13541      000000
 13542 4828 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 13543              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13544              		.loc 1 582 42 view .LVU4520
 13545 482c B9A80000 		mov	ecx, 168	# valid_primes,
 13545      00
 13546 4831 410F95C4 		setne	r12b	#, _135
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13547              		.loc 1 582 29 is_stmt 1 view .LVU4521
 13548              	.LVL882:
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13549              		.loc 1 582 54 view .LVU4522
 13550              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13551              		.loc 1 582 9 is_stmt 0 view .LVU4523
 13552 4835 E94EFAFF 		jmp	.L1136	#
 13552      FF
 13553              	.LVL883:
 13554              	.L1131:
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13555              		.loc 1 582 9 view .LVU4524
 13556 483a 4981F8AF 		cmp	r8, 5761455	# primeCount,
 13556      E95700
 13557 4841 0F94C0   		sete	al	#, tmp187
 13558 4844 21C2     		and	edx, eax	# _253, tmp187
 13559 4846 4981F8AF 		cmp	r8, 5761455	# primeCount,
 13559      E95700
 13560 484d 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 13561 4851 410F95C4 		setne	r12b	#, _135
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13562              		.loc 1 587 29 is_stmt 1 view .LVU4525
 13563              	.LVL884:
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13564              		.loc 1 587 54 view .LVU4526
 13565              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13566              		.loc 1 587 42 is_stmt 0 view .LVU4527
 13567 4855 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13567      00
 13568              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
GAS LISTING /tmp/ccG38KJh.s 			page 360


 13569              		.loc 1 587 9 view .LVU4528
 13570 485a E929FAFF 		jmp	.L1136	#
 13570      FF
 13571              	.LVL885:
 13572              	.L1129:
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13573              		.loc 1 587 9 view .LVU4529
 13574 485f 4D85C0   		test	r8, r8	# primeCount
 13575 4862 410F94C3 		sete	r11b	#, tmp191
 13576 4866 4421DA   		and	edx, r11d	# _253, tmp191
 13577 4869 4D85C0   		test	r8, r8	# primeCount
 13578 486c 410F95C4 		setne	r12b	#, _135
 589:sieve_extend.c ****     }
 13579              		.loc 1 589 29 is_stmt 1 view .LVU4530
 589:sieve_extend.c ****     }
 13580              		.loc 1 589 29 is_stmt 0 view .LVU4531
 13581 4870 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 13582              	# sieve_extend.c:589:         default:            valid_primes= 0;
 589:sieve_extend.c ****     }
 13583              		.loc 1 589 41 view .LVU4532
 13584 4874 31C9     		xor	ecx, ecx	# valid_primes
 13585 4876 E90DFAFF 		jmp	.L1136	#
 13585      FF
 13586              	.L1123:
 589:sieve_extend.c ****     }
 13587              		.loc 1 589 41 view .LVU4533
 13588 487b 4981F878 		cmp	r8, 9592	# primeCount,
 13588      250000
 13589 4882 400F94C7 		sete	dil	#, tmp181
 13590 4886 21FA     		and	edx, edi	# _253, tmp181
 13591 4888 4981F878 		cmp	r8, 9592	# primeCount,
 13591      250000
 13592 488f 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 13593 4893 410F95C4 		setne	r12b	#, _135
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13594              		.loc 1 584 29 is_stmt 1 view .LVU4534
 13595              	.LVL886:
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13596              		.loc 1 584 54 view .LVU4535
 13597              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13598              		.loc 1 584 42 is_stmt 0 view .LVU4536
 13599 4897 B9782500 		mov	ecx, 9592	# valid_primes,
 13599      00
 13600              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13601              		.loc 1 584 9 view .LVU4537
 13602 489c E9E7F9FF 		jmp	.L1136	#
 13602      FF
 13603              	.LVL887:
 13604              	.L1158:
 13605              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13606              		.loc 1 584 42 view .LVU4538
 13607 48a1 B9782500 		mov	ecx, 9592	# valid_primes,
 13607      00
 13608 48a6 E90FFEFF 		jmp	.L1137	#
GAS LISTING /tmp/ccG38KJh.s 			page 361


 13608      FF
 13609              		.cfi_endproc
 13610              	.LFE71:
 13612              		.section	.rodata.str1.8
 13613 0145 000000   		.align 8
 13614              	.LC14:
 13615 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 13615      653A2025 
 13615      73205B6F 
 13615      7074696F 
 13615      6E735D20 
 13616              		.section	.rodata.str1.1
 13617              	.LC15:
 13618 0031 4F707469 		.string	"Options:\n"
 13618      6F6E733A 
 13618      0A00
 13619              		.section	.rodata.str1.8
 13620 0167 00       		.align 8
 13621              	.LC16:
 13622 0168 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 13622      63686563 
 13622      6B202020 
 13622      20202020 
 13622      20202020 
 13623 01a5 000000   		.align 8
 13624              	.LC17:
 13625 01a8 20202D2D 		.string	"  --help             This help function\n"
 13625      68656C70 
 13625      20202020 
 13625      20202020 
 13625      20202020 
 13626 01d1 00000000 		.align 8
 13626      000000
 13627              	.LC18:
 13628 01d8 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 13628      73686F77 
 13628      203C6D61 
 13628      78696D75 
 13628      6D3E2020 
 13629 0216 0000     		.align 8
 13630              	.LC19:
 13631 0218 20202D2D 		.string	"  --threads <count>  Set the maximum number of threads to be used\n"
 13631      74687265 
 13631      61647320 
 13631      3C636F75 
 13631      6E743E20 
 13632 025b 00000000 		.align 8
 13632      00
 13633              	.LC20:
 13634 0260 20202020 		.string	"                     Use 'all' to use all available threads or 'half' for /2 (e.g. for no
 13634      20202020 
 13634      20202020 
 13634      20202020 
 13634      20202020 
 13635 02cb 00000000 		.align 8
 13635      00
 13636              	.LC21:
GAS LISTING /tmp/ccG38KJh.s 			page 362


 13637 02d0 20202D2D 		.string	"  --time  <seconds>  The maximum time (in seconds) to run passes of the sieve algorithm\n
 13637      74696D65 
 13637      20203C73 
 13637      65636F6E 
 13637      64733E20 
 13638 0329 00000000 		.align 8
 13638      000000
 13639              	.LC22:
 13640 0330 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 13640      74756E65 
 13640      20203C6C 
 13640      6576656C 
 13640      3E202020 
 13641 037d 000000   		.align 8
 13642              	.LC23:
 13643 0380 20202020 		.string	"                     1 - fast tuning\n"
 13643      20202020 
 13643      20202020 
 13643      20202020 
 13643      20202020 
 13644 03a6 0000     		.align 8
 13645              	.LC24:
 13646 03a8 20202020 		.string	"                     2 - refined tuning\n"
 13646      20202020 
 13646      20202020 
 13646      20202020 
 13646      20202020 
 13647 03d1 00000000 		.align 8
 13647      000000
 13648              	.LC25:
 13649 03d8 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 13649      20202020 
 13649      20202020 
 13649      20202020 
 13649      20202020 
 13650 040e 0000     		.align 8
 13651              	.LC26:
 13652 0410 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 13652      76657262 
 13652      6F736520 
 13652      3C6C6576 
 13652      656C3E20 
 13653 044b 00000000 		.align 8
 13653      00
 13654              	.LC27:
 13655 0450 20202020 		.string	"                     1 - show phase progress\n"
 13655      20202020 
 13655      20202020 
 13655      20202020 
 13655      20202020 
 13656 047e 0000     		.align 8
 13657              	.LC28:
 13658 0480 20202020 		.string	"                     2 - show general progress within the phase\n"
 13658      20202020 
 13658      20202020 
 13658      20202020 
 13658      20202020 
GAS LISTING /tmp/ccG38KJh.s 			page 363


 13659 04c1 00000000 		.align 8
 13659      000000
 13660              	.LC29:
 13661 04c8 20202020 		.string	"                     3 - show actual work\n"
 13661      20202020 
 13661      20202020 
 13661      20202020 
 13661      20202020 
 13662              		.text
 13663 48ab 0F1F4400 		.p2align 4
 13663      00
 13664              		.globl	usage
 13666              	usage:
 13667              	.LVL888:
 13668              	.LFB72:
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13669              		.loc 1 602 24 is_stmt 1 view -0
 13670              		.cfi_startproc
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13671              		.loc 1 602 24 is_stmt 0 view .LVU4540
 13672 48b0 F30F1EFA 		endbr64	
 13673 48b4 50       		push	rax	#
 13674              		.cfi_def_cfa_offset 16
 13675 48b5 58       		pop	rax	#
 13676              		.cfi_def_cfa_offset 8
 603:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 13677              		.loc 1 603 5 is_stmt 1 view .LVU4541
 13678              	.LVL889:
 13679              	.LBB829:
 13680              	.LBI829:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13681              		.loc 3 98 1 view .LVU4542
 13682              	.LBB830:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13683              		.loc 3 100 3 view .LVU4543
 13684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13685              		.loc 3 100 10 is_stmt 0 view .LVU4544
 13686 48b6 488D1500 		lea	rdx, .LC14[rip]	#,
 13686      000000
 13687 48bd BE010000 		mov	esi, 1	#,
 13687      00
 13688 48c2 31C0     		xor	eax, eax	#
 13689              	.LBE830:
 13690              	.LBE829:
 13691              	# sieve_extend.c:602: void usage(char *name) {
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13692              		.loc 1 602 24 view .LVU4545
 13693 48c4 4883EC08 		sub	rsp, 8	#,
 13694              		.cfi_def_cfa_offset 16
 13695              	# sieve_extend.c:602: void usage(char *name) {
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13696              		.loc 1 602 24 view .LVU4546
 13697 48c8 4889F9   		mov	rcx, rdi	# name, tmp115
 13698              	.LBB832:
 13699              	.LBB831:
 13700              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccG38KJh.s 			page 364


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13701              		.loc 3 100 10 view .LVU4547
 13702 48cb 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 13702      000000
 13703              	.LVL890:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13704              		.loc 3 100 10 view .LVU4548
 13705 48d2 E8000000 		call	__fprintf_chk@PLT	#
 13705      00
 13706              	.LVL891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13707              		.loc 3 100 10 view .LVU4549
 13708              	.LBE831:
 13709              	.LBE832:
 604:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 13710              		.loc 1 604 5 is_stmt 1 view .LVU4550
 13711              	.LBB833:
 13712              	.LBI833:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13713              		.loc 3 98 1 view .LVU4551
 13714              	.LBB834:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13715              		.loc 3 100 3 view .LVU4552
 13716              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13717              		.loc 3 100 10 is_stmt 0 view .LVU4553
 13718 48d7 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13718      000000
 13719 48de BA090000 		mov	edx, 9	#,
 13719      00
 13720 48e3 BE010000 		mov	esi, 1	#,
 13720      00
 13721 48e8 488D3D00 		lea	rdi, .LC15[rip]	#,
 13721      000000
 13722 48ef E8000000 		call	fwrite@PLT	#
 13722      00
 13723              	.LVL892:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13724              		.loc 3 100 10 view .LVU4554
 13725              	.LBE834:
 13726              	.LBE833:
 605:sieve_extend.c ****     fprintf(stderr, "  --help             This help function\n");
 13727              		.loc 1 605 5 is_stmt 1 view .LVU4555
 13728              	.LBB835:
 13729              	.LBI835:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13730              		.loc 3 98 1 view .LVU4556
 13731              	.LBB836:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13732              		.loc 3 100 3 view .LVU4557
 13733              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13734              		.loc 3 100 10 is_stmt 0 view .LVU4558
 13735 48f4 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13735      000000
 13736 48fb BA3C0000 		mov	edx, 60	#,
 13736      00
GAS LISTING /tmp/ccG38KJh.s 			page 365


 13737 4900 BE010000 		mov	esi, 1	#,
 13737      00
 13738 4905 488D3D00 		lea	rdi, .LC16[rip]	#,
 13738      000000
 13739 490c E8000000 		call	fwrite@PLT	#
 13739      00
 13740              	.LVL893:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13741              		.loc 3 100 10 view .LVU4559
 13742              	.LBE836:
 13743              	.LBE835:
 606:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 13744              		.loc 1 606 5 is_stmt 1 view .LVU4560
 13745              	.LBB837:
 13746              	.LBI837:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13747              		.loc 3 98 1 view .LVU4561
 13748              	.LBB838:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13749              		.loc 3 100 3 view .LVU4562
 13750              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13751              		.loc 3 100 10 is_stmt 0 view .LVU4563
 13752 4911 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13752      000000
 13753 4918 BA280000 		mov	edx, 40	#,
 13753      00
 13754 491d BE010000 		mov	esi, 1	#,
 13754      00
 13755 4922 488D3D00 		lea	rdi, .LC17[rip]	#,
 13755      000000
 13756 4929 E8000000 		call	fwrite@PLT	#
 13756      00
 13757              	.LVL894:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13758              		.loc 3 100 10 view .LVU4564
 13759              	.LBE838:
 13760              	.LBE837:
 607:sieve_extend.c ****     #ifdef _OPENMP
 13761              		.loc 1 607 5 is_stmt 1 view .LVU4565
 13762              	.LBB839:
 13763              	.LBI839:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13764              		.loc 3 98 1 view .LVU4566
 13765              	.LBB840:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13766              		.loc 3 100 3 view .LVU4567
 13767              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13768              		.loc 3 100 10 is_stmt 0 view .LVU4568
 13769 492e 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13769      000000
 13770 4935 BA3D0000 		mov	edx, 61	#,
 13770      00
 13771 493a BE010000 		mov	esi, 1	#,
 13771      00
 13772 493f 488D3D00 		lea	rdi, .LC18[rip]	#,
GAS LISTING /tmp/ccG38KJh.s 			page 366


 13772      000000
 13773 4946 E8000000 		call	fwrite@PLT	#
 13773      00
 13774              	.LVL895:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13775              		.loc 3 100 10 view .LVU4569
 13776              	.LBE840:
 13777              	.LBE839:
 609:sieve_extend.c ****     fprintf(stderr, "                     Use 'all' to use all available threads or 'half' for /2 (
 13778              		.loc 1 609 5 is_stmt 1 view .LVU4570
 13779              	.LBB841:
 13780              	.LBI841:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13781              		.loc 3 98 1 view .LVU4571
 13782              	.LBB842:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13783              		.loc 3 100 3 view .LVU4572
 13784              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13785              		.loc 3 100 10 is_stmt 0 view .LVU4573
 13786 494b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13786      000000
 13787 4952 BA420000 		mov	edx, 66	#,
 13787      00
 13788 4957 BE010000 		mov	esi, 1	#,
 13788      00
 13789 495c 488D3D00 		lea	rdi, .LC19[rip]	#,
 13789      000000
 13790 4963 E8000000 		call	fwrite@PLT	#
 13790      00
 13791              	.LVL896:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13792              		.loc 3 100 10 view .LVU4574
 13793              	.LBE842:
 13794              	.LBE841:
 610:sieve_extend.c ****     #endif
 13795              		.loc 1 610 5 is_stmt 1 view .LVU4575
 13796              	.LBB843:
 13797              	.LBI843:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13798              		.loc 3 98 1 view .LVU4576
 13799              	.LBB844:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13800              		.loc 3 100 3 view .LVU4577
 13801              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13802              		.loc 3 100 10 is_stmt 0 view .LVU4578
 13803 4968 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13803      000000
 13804 496f BA6A0000 		mov	edx, 106	#,
 13804      00
 13805 4974 BE010000 		mov	esi, 1	#,
 13805      00
 13806 4979 488D3D00 		lea	rdi, .LC20[rip]	#,
 13806      000000
 13807 4980 E8000000 		call	fwrite@PLT	#
 13807      00
GAS LISTING /tmp/ccG38KJh.s 			page 367


 13808              	.LVL897:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13809              		.loc 3 100 10 view .LVU4579
 13810              	.LBE844:
 13811              	.LBE843:
 612:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 13812              		.loc 1 612 5 is_stmt 1 view .LVU4580
 13813              	.LBB845:
 13814              	.LBI845:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13815              		.loc 3 98 1 view .LVU4581
 13816              	.LBB846:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13817              		.loc 3 100 3 view .LVU4582
 13818              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13819              		.loc 3 100 10 is_stmt 0 view .LVU4583
 13820 4985 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13820      000000
 13821 498c BA580000 		mov	edx, 88	#,
 13821      00
 13822 4991 BE010000 		mov	esi, 1	#,
 13822      00
 13823 4996 488D3D00 		lea	rdi, .LC21[rip]	#,
 13823      000000
 13824 499d E8000000 		call	fwrite@PLT	#
 13824      00
 13825              	.LVL898:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13826              		.loc 3 100 10 view .LVU4584
 13827              	.LBE846:
 13828              	.LBE845:
 613:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 13829              		.loc 1 613 5 is_stmt 1 view .LVU4585
 13830              	.LBB847:
 13831              	.LBI847:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13832              		.loc 3 98 1 view .LVU4586
 13833              	.LBB848:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13834              		.loc 3 100 3 view .LVU4587
 13835              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13836              		.loc 3 100 10 is_stmt 0 view .LVU4588
 13837 49a2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13837      000000
 13838 49a9 BA4C0000 		mov	edx, 76	#,
 13838      00
 13839 49ae BE010000 		mov	esi, 1	#,
 13839      00
 13840 49b3 488D3D00 		lea	rdi, .LC22[rip]	#,
 13840      000000
 13841 49ba E8000000 		call	fwrite@PLT	#
 13841      00
 13842              	.LVL899:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13843              		.loc 3 100 10 view .LVU4589
GAS LISTING /tmp/ccG38KJh.s 			page 368


 13844              	.LBE848:
 13845              	.LBE847:
 614:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 13846              		.loc 1 614 5 is_stmt 1 view .LVU4590
 13847              	.LBB849:
 13848              	.LBI849:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13849              		.loc 3 98 1 view .LVU4591
 13850              	.LBB850:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13851              		.loc 3 100 3 view .LVU4592
 13852              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13853              		.loc 3 100 10 is_stmt 0 view .LVU4593
 13854 49bf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13854      000000
 13855 49c6 BA250000 		mov	edx, 37	#,
 13855      00
 13856 49cb BE010000 		mov	esi, 1	#,
 13856      00
 13857 49d0 488D3D00 		lea	rdi, .LC23[rip]	#,
 13857      000000
 13858 49d7 E8000000 		call	fwrite@PLT	#
 13858      00
 13859              	.LVL900:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13860              		.loc 3 100 10 view .LVU4594
 13861              	.LBE850:
 13862              	.LBE849:
 615:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 13863              		.loc 1 615 5 is_stmt 1 view .LVU4595
 13864              	.LBB851:
 13865              	.LBI851:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13866              		.loc 3 98 1 view .LVU4596
 13867              	.LBB852:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13868              		.loc 3 100 3 view .LVU4597
 13869              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13870              		.loc 3 100 10 is_stmt 0 view .LVU4598
 13871 49dc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13871      000000
 13872 49e3 BA280000 		mov	edx, 40	#,
 13872      00
 13873 49e8 BE010000 		mov	esi, 1	#,
 13873      00
 13874 49ed 488D3D00 		lea	rdi, .LC24[rip]	#,
 13874      000000
 13875 49f4 E8000000 		call	fwrite@PLT	#
 13875      00
 13876              	.LVL901:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13877              		.loc 3 100 10 view .LVU4599
 13878              	.LBE852:
 13879              	.LBE851:
 616:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
GAS LISTING /tmp/ccG38KJh.s 			page 369


 13880              		.loc 1 616 5 is_stmt 1 view .LVU4600
 13881              	.LBB853:
 13882              	.LBI853:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13883              		.loc 3 98 1 view .LVU4601
 13884              	.LBB854:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13885              		.loc 3 100 3 view .LVU4602
 13886              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13887              		.loc 3 100 10 is_stmt 0 view .LVU4603
 13888 49f9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13888      000000
 13889 4a00 BA350000 		mov	edx, 53	#,
 13889      00
 13890 4a05 BE010000 		mov	esi, 1	#,
 13890      00
 13891 4a0a 488D3D00 		lea	rdi, .LC25[rip]	#,
 13891      000000
 13892 4a11 E8000000 		call	fwrite@PLT	#
 13892      00
 13893              	.LVL902:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13894              		.loc 3 100 10 view .LVU4604
 13895              	.LBE854:
 13896              	.LBE853:
 617:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 13897              		.loc 1 617 5 is_stmt 1 view .LVU4605
 13898              	.LBB855:
 13899              	.LBI855:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13900              		.loc 3 98 1 view .LVU4606
 13901              	.LBB856:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13902              		.loc 3 100 3 view .LVU4607
 13903              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13904              		.loc 3 100 10 is_stmt 0 view .LVU4608
 13905 4a16 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13905      000000
 13906 4a1d BA3A0000 		mov	edx, 58	#,
 13906      00
 13907 4a22 BE010000 		mov	esi, 1	#,
 13907      00
 13908 4a27 488D3D00 		lea	rdi, .LC26[rip]	#,
 13908      000000
 13909 4a2e E8000000 		call	fwrite@PLT	#
 13909      00
 13910              	.LVL903:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13911              		.loc 3 100 10 view .LVU4609
 13912              	.LBE856:
 13913              	.LBE855:
 618:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 13914              		.loc 1 618 5 is_stmt 1 view .LVU4610
 13915              	.LBB857:
 13916              	.LBI857:
GAS LISTING /tmp/ccG38KJh.s 			page 370


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13917              		.loc 3 98 1 view .LVU4611
 13918              	.LBB858:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13919              		.loc 3 100 3 view .LVU4612
 13920              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13921              		.loc 3 100 10 is_stmt 0 view .LVU4613
 13922 4a33 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13922      000000
 13923 4a3a BA2D0000 		mov	edx, 45	#,
 13923      00
 13924 4a3f BE010000 		mov	esi, 1	#,
 13924      00
 13925 4a44 488D3D00 		lea	rdi, .LC27[rip]	#,
 13925      000000
 13926 4a4b E8000000 		call	fwrite@PLT	#
 13926      00
 13927              	.LVL904:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13928              		.loc 3 100 10 view .LVU4614
 13929              	.LBE858:
 13930              	.LBE857:
 619:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 13931              		.loc 1 619 5 is_stmt 1 view .LVU4615
 13932              	.LBB859:
 13933              	.LBI859:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13934              		.loc 3 98 1 view .LVU4616
 13935              	.LBB860:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13936              		.loc 3 100 3 view .LVU4617
 13937              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13938              		.loc 3 100 10 is_stmt 0 view .LVU4618
 13939 4a50 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13939      000000
 13940 4a57 BA400000 		mov	edx, 64	#,
 13940      00
 13941 4a5c BE010000 		mov	esi, 1	#,
 13941      00
 13942 4a61 488D3D00 		lea	rdi, .LC28[rip]	#,
 13942      000000
 13943 4a68 E8000000 		call	fwrite@PLT	#
 13943      00
 13944              	.LVL905:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13945              		.loc 3 100 10 view .LVU4619
 13946              	.LBE860:
 13947              	.LBE859:
 620:sieve_extend.c ****     exit(1);
 13948              		.loc 1 620 5 is_stmt 1 view .LVU4620
 13949              	.LBB861:
 13950              	.LBI861:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13951              		.loc 3 98 1 view .LVU4621
 13952              	.LBB862:
GAS LISTING /tmp/ccG38KJh.s 			page 371


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13953              		.loc 3 100 3 view .LVU4622
 13954              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13955              		.loc 3 100 10 is_stmt 0 view .LVU4623
 13956 4a6d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13956      000000
 13957 4a74 488D3D00 		lea	rdi, .LC29[rip]	#,
 13957      000000
 13958 4a7b BA2A0000 		mov	edx, 42	#,
 13958      00
 13959 4a80 BE010000 		mov	esi, 1	#,
 13959      00
 13960 4a85 E8000000 		call	fwrite@PLT	#
 13960      00
 13961              	.LVL906:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13962              		.loc 3 100 10 view .LVU4624
 13963              	.LBE862:
 13964              	.LBE861:
 621:sieve_extend.c **** }
 13965              		.loc 1 621 5 is_stmt 1 view .LVU4625
 13966 4a8a BF010000 		mov	edi, 1	#,
 13966      00
 13967 4a8f E8000000 		call	exit@PLT	#
 13967      00
 13968              	.LVL907:
 13969              		.cfi_endproc
 13970              	.LFE72:
 13972              		.section	.rodata.str1.1
 13973              	.LC32:
 13974 003b 2D2D6865 		.string	"--help"
 13974      6C7000
 13975              	.LC33:
 13976 0042 2D2D7665 		.string	"--verbose"
 13976      72626F73 
 13976      6500
 13977              	.LC34:
 13978 004c 4E6F2076 		.string	"No verbose level specified\n"
 13978      6572626F 
 13978      7365206C 
 13978      6576656C 
 13978      20737065 
 13979              	.LC35:
 13980 0068 256400   		.string	"%d"
 13981              		.section	.rodata.str1.8
 13982 04f3 00000000 		.align 8
 13982      00
 13983              	.LC36:
 13984 04f8 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 13984      723A2049 
 13984      6E76616C 
 13984      6964206D 
 13984      65617375 
 13985              		.section	.rodata.str1.1
 13986              	.LC37:
 13987 006b 56657262 		.string	"Verbose level set to %d\n"
GAS LISTING /tmp/ccG38KJh.s 			page 372


 13987      6F736520 
 13987      6C657665 
 13987      6C207365 
 13987      7420746F 
 13988              	.LC38:
 13989 0084 2D2D6368 		.string	"--check"
 13989      65636B00 
 13990              	.LC39:
 13991 008c 2D2D7475 		.string	"--tune"
 13991      6E6500
 13992              	.LC40:
 13993 0093 4E6F2074 		.string	"No tune level specified\n"
 13993      756E6520 
 13993      6C657665 
 13993      6C207370 
 13993      65636966 
 13994              		.section	.rodata.str1.8
 13995 051d 000000   		.align 8
 13996              	.LC41:
 13997 0520 4572726F 		.string	"Error: Invalid tune level: %s\n"
 13997      723A2049 
 13997      6E76616C 
 13997      69642074 
 13997      756E6520 
 13998              		.section	.rodata.str1.1
 13999              	.LC42:
 14000 00ac 54756E65 		.string	"Tune level set to %d\n"
 14000      206C6576 
 14000      656C2073 
 14000      65742074 
 14000      6F202564 
 14001              	.LC43:
 14002 00c2 2D2D7469 		.string	"--time"
 14002      6D6500
 14003              	.LC44:
 14004 00c9 4E6F2074 		.string	"No time specified\n"
 14004      696D6520 
 14004      73706563 
 14004      69666965 
 14004      640A00
 14005              	.LC45:
 14006 00dc 256C6600 		.string	"%lf"
 14007              	.LC46:
 14008 00e0 4572726F 		.string	"Error: Invalid max time: %s\n"
 14008      723A2049 
 14008      6E76616C 
 14008      6964206D 
 14008      61782074 
 14009              		.section	.rodata.str1.8
 14010 053f 00       		.align 8
 14011              	.LC47:
 14012 0540 4D617820 		.string	"Max time is set to %d seconds\n"
 14012      74696D65 
 14012      20697320 
 14012      73657420 
 14012      746F2025 
 14013              		.section	.rodata.str1.1
GAS LISTING /tmp/ccG38KJh.s 			page 373


 14014              	.LC48:
 14015 00fd 2D2D7368 		.string	"--show"
 14015      6F7700
 14016              	.LC49:
 14017 0104 4E6F2073 		.string	"No show maximum specified\n"
 14017      686F7720 
 14017      6D617869 
 14017      6D756D20 
 14017      73706563 
 14018              	.LC50:
 14019 011f 256A7500 		.string	"%ju"
 14020              		.section	.rodata.str1.8
 14021 055f 00       		.align 8
 14022              	.LC51:
 14023 0560 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 14023      723A2049 
 14023      6E76616C 
 14023      69642073 
 14023      686F7720 
 14024              		.section	.rodata.str1.1
 14025              	.LC52:
 14026 0123 53686F77 		.string	"Show maximum set to %ju\n"
 14026      206D6178 
 14026      696D756D 
 14026      20736574 
 14026      20746F20 
 14027              	.LC53:
 14028 013c 2D2D7468 		.string	"--threads"
 14028      72656164 
 14028      7300
 14029              	.LC54:
 14030 0146 4E6F2074 		.string	"No thread maximum specified\n"
 14030      68726561 
 14030      64206D61 
 14030      78696D75 
 14030      6D207370 
 14031              	.LC55:
 14032 0163 616C6C00 		.string	"all"
 14033              	.LC56:
 14034 0167 68616C66 		.string	"half"
 14034      00
 14035              		.section	.rodata.str1.8
 14036 0581 00000000 		.align 8
 14036      000000
 14037              	.LC57:
 14038 0588 4572726F 		.string	"Error: Invalid max threads: %s\n"
 14038      723A2049 
 14038      6E76616C 
 14038      6964206D 
 14038      61782074 
 14039              		.section	.rodata.str1.1
 14040              	.LC58:
 14041 016c 54687265 		.string	"Thread maximum set to %ju\n"
 14041      6164206D 
 14041      6178696D 
 14041      756D2073 
 14041      65742074 
GAS LISTING /tmp/ccG38KJh.s 			page 374


 14042              	.LC59:
 14043 0187 496E7661 		.string	"Invalid size %s\n"
 14043      6C696420 
 14043      73697A65 
 14043      2025730A 
 14043      00
 14044              	.LC60:
 14045 0198 56616C69 		.string	"Validating..."
 14045      64617469 
 14045      6E672E2E 
 14045      2E00
 14046              	.LC61:
 14047 01a6 2E2E2E43 		.string	"...Checking size %ju ..."
 14047      6865636B 
 14047      696E6720 
 14047      73697A65 
 14047      20256A75 
 14048              	.LC62:
 14049 01bf 2E626C6F 		.string	".blocksize %ju-"
 14049      636B7369 
 14049      7A652025 
 14049      6A752D00 
 14050              	.LC63:
 14051 01cf 76616C69 		.string	"valid;"
 14051      643B00
 14052              	.LC64:
 14053 01d6 76616C69 		.string	"valid"
 14053      6400
 14054              	.LC65:
 14055 01dc 76616C69 		.string	"valid algorithm"
 14055      6420616C 
 14055      676F7269 
 14055      74686D00 
 14056              	.LC66:
 14057 01ec 54756E69 		.string	"Tuning..."
 14057      6E672E2E 
 14057      2E00
 14058              	.LC67:
 14059 01f6 2E283E29 		.string	".(>)"
 14059      00
 14060              		.section	.rodata.str1.8
 14061              		.align 8
 14062              	.LC68:
 14063 05a8 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 14063      6B73697A 
 14063      655F6269 
 14063      74732025 
 14063      31306A75 
 14064              		.section	.rodata.str1.1
 14065              	.LC69:
 14066 01fb 2E2E2E2E 		.string	"...."
 14066      00
 14067              		.section	.rodata.str1.8
 14068 062f 00       		.align 8
 14069              	.LC70:
 14070 0630 0D54756E 		.string	"\rTuning...tuning %ju options.."
 14070      696E672E 
GAS LISTING /tmp/ccG38KJh.s 			page 375


 14070      2E2E7475 
 14070      6E696E67 
 14070      20256A75 
 14071              		.section	.rodata.str1.1
 14072              	.LC71:
 14073 0200 0D54756E 		.string	"\rTuning...tuned %ju options.."
 14073      696E672E 
 14073      2E2E7475 
 14073      6E656420 
 14073      256A7520 
 14074              	.LC72:
 14075 021e 54756E69 		.string	"Tuning...tuned %ju options..\n"
 14075      6E672E2E 
 14075      2E74756E 
 14075      65642025 
 14075      6A75206F 
 14076              		.section	.rodata.str1.8
 14077 064f 00       		.align 8
 14078              	.LC73:
 14079 0650 256A7520 		.string	"%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 14079      6F707469 
 14079      6F6E732E 
 14079      20496E69 
 14079      74616C20 
 14080              		.section	.rodata.str1.1
 14081              	.LC74:
 14082 023c 42657374 		.string	"Best options"
 14082      206F7074 
 14082      696F6E73 
 14082      00
 14083              	.LC75:
 14084 0249 28256A75 		.string	"(%ju) "
 14084      292000
 14085              	.LC76:
 14086 0250 2E2E2E00 		.string	"..."
 14087              		.section	.rodata.str1.8
 14088 06b7 00       		.align 8
 14089              	.LC78:
 14090 06b8 0D54756E 		.string	"\rTuning...found %ju options..benchmarking step %ju - tuning %3ju options"
 14090      696E672E 
 14090      2E2E666F 
 14090      756E6420 
 14090      256A7520 
 14091              		.section	.rodata.str1.1
 14092              	.LC79:
 14093 0254 2E426573 		.string	".Best result:"
 14093      74207265 
 14093      73756C74 
 14093      3A00
 14094              		.section	.rodata.str1.8
 14095 0701 00000000 		.align 8
 14095      000000
 14096              	.LC80:
 14097 0708 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads for %.1f seconds - 
 14097      686D6172 
 14097      6B696E67 
 14097      2E2E2E20 
GAS LISTING /tmp/ccG38KJh.s 			page 376


 14097      77697468 
 14098 076b 00000000 		.align 8
 14098      00
 14099              	.LC81:
 14100 0770 726F6769 		.string	"rogiervandam_extend_epar;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n"
 14100      65727661 
 14100      6E64616D 
 14100      5F657874 
 14100      656E645F 
 14101 07b9 00000000 		.align 8
 14101      000000
 14102              	.LC82:
 14103 07c0 1B5B303B 		.string	"\033[0;32m(Passes - per %.1f seconds: %f - per second \033[1;33m%.1f\033[0;32m)\033[0m\n"
 14103      33326D28 
 14103      50617373 
 14103      6573202D 
 14103      20706572 
 14104 080c 00000000 		.align 8
 14105              	.LC83:
 14106 0810 1B5B303B 		.string	"\033[0;32m(Passes per thread (total %ju) - per %.1f seconds: %.1f - per second \033[1;33m
 14106      33326D28 
 14106      50617373 
 14106      65732070 
 14106      65722074 
 14107              		.section	.rodata.str1.1
 14108              	.LC84:
 14109 0262 53686F77 		.string	"Show result set:"
 14109      20726573 
 14109      756C7420 
 14109      7365743A 
 14109      00
 14110              		.section	.text.startup,"ax",@progbits
 14111              		.p2align 4
 14112              		.globl	main
 14114              	main:
 14115              	.LVL908:
 14116              	.LFB77:
 815:sieve_extend.c ****     
 14117              		.loc 1 815 34 view -0
 14118              		.cfi_startproc
 815:sieve_extend.c ****     
 14119              		.loc 1 815 34 is_stmt 0 view .LVU4627
 14120 0000 F30F1EFA 		endbr64	
 14121 0004 4157     		push	r15	#
 14122              		.cfi_def_cfa_offset 16
 14123              		.cfi_offset 15, -16
 14124 0006 4156     		push	r14	#
 14125              		.cfi_def_cfa_offset 24
 14126              		.cfi_offset 14, -24
 14127 0008 4155     		push	r13	#
 14128              		.cfi_def_cfa_offset 32
 14129              		.cfi_offset 13, -32
 14130 000a 4154     		push	r12	#
 14131              		.cfi_def_cfa_offset 40
 14132              		.cfi_offset 12, -40
 14133 000c 4989F4   		mov	r12, rsi	# argv, tmp645
 14134 000f 55       		push	rbp	#
GAS LISTING /tmp/ccG38KJh.s 			page 377


 14135              		.cfi_def_cfa_offset 48
 14136              		.cfi_offset 6, -48
 14137 0010 89FD     		mov	ebp, edi	# argc, tmp644
 14138 0012 53       		push	rbx	#
 14139              		.cfi_def_cfa_offset 56
 14140              		.cfi_offset 3, -56
 14141 0013 4881EC28 		sub	rsp, 296	#,
 14141      010000
 14142              		.cfi_def_cfa_offset 352
 14143              	# sieve_extend.c:815: int main(int argc, char *argv[]) {
 815:sieve_extend.c ****     
 14144              		.loc 1 815 34 view .LVU4628
 14145 001a 64488B04 		mov	rax, QWORD PTR fs:40	# tmp718, MEM[(<address-space-1> long unsigned int *)40B]
 14145      25280000 
 14145      00
 14146 0023 48898424 		mov	QWORD PTR 280[rsp], rax	# D.7838, tmp718
 14146      18010000 
 14147 002b 31C0     		xor	eax, eax	# tmp718
 818:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 14148              		.loc 1 818 5 is_stmt 1 view .LVU4629
 14149              	# sieve_extend.c:818:     double option_max_time = default_max_time;
 818:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 14150              		.loc 1 818 12 is_stmt 0 view .LVU4630
 14151 002d 488B0500 		mov	rax, QWORD PTR .LC31[rip]	# tmp720,
 14151      000000
 14152              	# sieve_extend.c:819:     counter_t option_maxFactor  = default_sieve_limit;
 819:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 14153              		.loc 1 819 15 view .LVU4631
 14154 0034 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 14154      A0000000 
 14154      40420F00 
 14155              	# sieve_extend.c:818:     double option_max_time = default_max_time;
 818:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 14156              		.loc 1 818 12 view .LVU4632
 14157 0040 48898424 		mov	QWORD PTR 152[rsp], rax	# option_max_time, tmp720
 14157      98000000 
 819:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 14158              		.loc 1 819 5 is_stmt 1 view .LVU4633
 820:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 14159              		.loc 1 820 5 view .LVU4634
 14160              	# sieve_extend.c:820:     counter_t option_showMaxFactor = default_showMaxFactor;
 820:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 14161              		.loc 1 820 15 is_stmt 0 view .LVU4635
 14162 0048 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 14162      A8000000 
 14162      00000000 
 821:sieve_extend.c ****     int option_check = default_check_level;
 14163              		.loc 1 821 5 is_stmt 1 view .LVU4636
 14164              	# sieve_extend.c:821:     int option_verboselevel = default_verbose_level;
 821:sieve_extend.c ****     int option_check = default_check_level;
 14165              		.loc 1 821 9 is_stmt 0 view .LVU4637
 14166 0054 C784248C 		mov	DWORD PTR 140[rsp], 0	# option_verboselevel,
 14166      00000000 
 14166      000000
 822:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 14167              		.loc 1 822 5 is_stmt 1 view .LVU4638
 14168              	.LVL909:
GAS LISTING /tmp/ccG38KJh.s 			page 378


 823:sieve_extend.c ****     int option_threads = 1;
 14169              		.loc 1 823 5 view .LVU4639
 14170              	# sieve_extend.c:823:     int option_tunelevel = default_tune_level;
 823:sieve_extend.c ****     int option_threads = 1;
 14171              		.loc 1 823 9 is_stmt 0 view .LVU4640
 14172 005f C7842490 		mov	DWORD PTR 144[rsp], 1	# option_tunelevel,
 14172      00000001 
 14172      000000
 824:sieve_extend.c ****     #ifdef _OPENMP
 14173              		.loc 1 824 5 is_stmt 1 view .LVU4641
 14174              	# sieve_extend.c:824:     int option_threads = 1;
 824:sieve_extend.c ****     #ifdef _OPENMP
 14175              		.loc 1 824 9 is_stmt 0 view .LVU4642
 14176 006a C7842494 		mov	DWORD PTR 148[rsp], 1	# option_threads,
 14176      00000001 
 14176      000000
 826:sieve_extend.c ****     option_threads = max_threads;
 14177              		.loc 1 826 5 is_stmt 1 view .LVU4643
 14178              	# sieve_extend.c:826:     int max_threads = omp_get_max_threads();
 826:sieve_extend.c ****     option_threads = max_threads;
 14179              		.loc 1 826 23 is_stmt 0 view .LVU4644
 14180 0075 E8000000 		call	omp_get_max_threads@PLT	#
 14180      00
 14181              	.LVL910:
 826:sieve_extend.c ****     option_threads = max_threads;
 14182              		.loc 1 826 23 view .LVU4645
 14183 007a 890424   		mov	DWORD PTR [rsp], eax	# %sfp, max_threads
 14184              	.LVL911:
 827:sieve_extend.c ****     #endif
 14185              		.loc 1 827 5 is_stmt 1 view .LVU4646
 14186              	# sieve_extend.c:827:     option_threads = max_threads;
 827:sieve_extend.c ****     #endif
 14187              		.loc 1 827 20 is_stmt 0 view .LVU4647
 14188 007d 89842494 		mov	DWORD PTR 148[rsp], eax	# option_threads, max_threads
 14188      000000
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14189              		.loc 1 831 5 is_stmt 1 view .LVU4648
 14190              	.LBB999:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14191              		.loc 1 831 10 view .LVU4649
 14192              	.LVL912:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14193              		.loc 1 831 21 view .LVU4650
 14194              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14195              		.loc 1 831 5 is_stmt 0 view .LVU4651
 14196 0084 83FD01   		cmp	ebp, 1	# argc,
 14197 0087 0F8E8B01 		jle	.L1306	#,
 14197      0000
 14198              	# sieve_extend.c:866:             else if (strcmp(argv[arg], "half")==0) option_threads = max_threa
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14199              		.loc 1 866 80 view .LVU4652
 14200 008d D1F8     		sar	eax	# _69
 14201              	.LVL913:
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14202              		.loc 1 866 80 view .LVU4653
 14203 008f 89442408 		mov	DWORD PTR 8[rsp], eax	# %sfp, _69
GAS LISTING /tmp/ccG38KJh.s 			page 379


 14204              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14205              		.loc 1 831 14 view .LVU4654
 14206 0093 BB010000 		mov	ebx, 1	# arg,
 14206      00
 14207 0098 4C8D2D00 		lea	r13, .LC32[rip]	# tmp548,
 14207      000000
 14208              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14209              		.loc 1 833 18 view .LVU4655
 14210 009f 4C8D3500 		lea	r14, .LC33[rip]	# tmp574,
 14210      000000
 14211 00a6 EB6A     		jmp	.L1305	#
 14212              	.LVL914:
 14213 00a8 0F1F8400 		.p2align 4,,10
 14213      00000000 
 14214              		.p2align 3
 14215              	.L1431:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 14216              		.loc 1 834 13 is_stmt 1 view .LVU4656
 14217              	# sieve_extend.c:834:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 14218              		.loc 1 834 16 is_stmt 0 view .LVU4657
 14219 00b0 FFC3     		inc	ebx	# arg
 14220              	.LVL915:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 14221              		.loc 1 834 16 view .LVU4658
 14222 00b2 39DD     		cmp	ebp, ebx	# argc, arg
 14223 00b4 0F8EB812 		jle	.L1430	#,
 14223      0000
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 14224              		.loc 1 835 13 is_stmt 1 view .LVU4659
 14225              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 14226              		.loc 1 835 28 is_stmt 0 view .LVU4660
 14227 00ba 4F8D7C14 		lea	r15, 8[r12+r10]	# _12,
 14227      08
 14228              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 14229              		.loc 1 835 17 view .LVU4661
 14230 00bf 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_12
 14231 00c2 31C0     		xor	eax, eax	#
 14232 00c4 488D9424 		lea	rdx, 140[rsp]	# tmp356,
 14232      8C000000 
 14233 00cc 488D3500 		lea	rsi, .LC35[rip]	#,
 14233      000000
 14234 00d3 E8000000 		call	__isoc99_sscanf@PLT	#
 14234      00
 14235              	.LVL916:
 14236              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 14237              		.loc 1 835 16 view .LVU4662
 14238 00d8 83F801   		cmp	eax, 1	# tmp647,
 14239 00db 0F856808 		jne	.L1282	#,
 14239      0000
 14240              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
GAS LISTING /tmp/ccG38KJh.s 			page 380


 14241              		.loc 1 835 91 discriminator 1 view .LVU4663
 14242 00e1 8B94248C 		mov	edx, DWORD PTR 140[rsp]	# option_verboselevel.20_15, option_verboselevel
 14242      000000
 14243              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 835:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 14244              		.loc 1 835 68 discriminator 1 view .LVU4664
 14245 00e8 83FA04   		cmp	edx, 4	# option_verboselevel.20_15,
 14246 00eb 0F8F5808 		jg	.L1282	#,
 14246      0000
 838:sieve_extend.c ****         } 
 14247              		.loc 1 838 13 is_stmt 1 view .LVU4665
 14248 00f1 85D2     		test	edx, edx	# option_verboselevel.20_15
 14249 00f3 7E13     		jle	.L1284	#,
 838:sieve_extend.c ****         } 
 14250              		.loc 1 838 24 discriminator 1 view .LVU4666
 14251              	.LVL917:
 14252              	.LBB1000:
 14253              	.LBI1000:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14254              		.loc 3 105 1 discriminator 1 view .LVU4667
 14255              	.LBB1001:
 14256              		.loc 3 107 3 discriminator 1 view .LVU4668
 14257              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14258              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4669
 14259 00f5 488D3500 		lea	rsi, .LC37[rip]	#,
 14259      000000
 14260 00fc BF010000 		mov	edi, 1	#,
 14260      00
 14261 0101 31C0     		xor	eax, eax	#
 14262 0103 E8000000 		call	__printf_chk@PLT	#
 14262      00
 14263              	.LVL918:
 14264              	.L1284:
 14265              		.loc 3 107 10 discriminator 1 view .LVU4670
 14266              	.LBE1001:
 14267              	.LBE1000:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14268              		.loc 1 831 33 is_stmt 1 discriminator 2 view .LVU4671
 14269              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14270              		.loc 1 831 36 is_stmt 0 discriminator 2 view .LVU4672
 14271 0108 FFC3     		inc	ebx	# arg
 14272              	.LVL919:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14273              		.loc 1 831 21 is_stmt 1 discriminator 2 view .LVU4673
 14274              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14275              		.loc 1 831 5 is_stmt 0 discriminator 2 view .LVU4674
 14276 010a 39DD     		cmp	ebp, ebx	# argc, arg
 14277 010c 0F8E0601 		jle	.L1306	#,
 14277      0000
 14278              	.LVL920:
 14279              	.L1305:
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14280              		.loc 1 832 9 is_stmt 1 view .LVU4675
 14281              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/ccG38KJh.s 			page 381


 14282              		.loc 1 832 24 is_stmt 0 view .LVU4676
 14283 0112 4C63D3   		movsx	r10, ebx	# arg, arg
 14284 0115 49C1E203 		sal	r10, 3	# _2,
 14285 0119 4F8D3C14 		lea	r15, [r12+r10]	# _3,
 14286              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14287              		.loc 1 832 13 view .LVU4677
 14288 011d 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 14289 0120 BA070000 		mov	edx, 7	# tmp345,
 14289      00
 14290 0125 4C89C6   		mov	rsi, r8	# _4, _4
 14291 0128 4C89EF   		mov	rdi, r13	# tmp344, tmp548
 14292 012b 4889D1   		mov	rcx, rdx	# tmp588, tmp345
 14293 012e F3A6     		repz cmpsb
 14294 0130 410F97C1 		seta	r9b	#, tmp346
 14295 0134 4180D900 		sbb	r9b, 0	# _5
 14296              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14297              		.loc 1 832 12 view .LVU4678
 14298 0138 4584C9   		test	r9b, r9b	# _5
 14299 013b 0F842508 		je	.L1428	#,
 14299      0000
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14300              		.loc 1 833 14 is_stmt 1 view .LVU4679
 14301              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14302              		.loc 1 833 18 is_stmt 0 view .LVU4680
 14303 0141 41BB0A00 		mov	r11d, 10	# tmp351,
 14303      0000
 14304 0147 4C89C6   		mov	rsi, r8	# _4, _4
 14305 014a 4C89F7   		mov	rdi, r14	# tmp350, tmp574
 14306 014d 4C89D9   		mov	rcx, r11	# tmp590, tmp351
 14307 0150 F3A6     		repz cmpsb
 14308 0152 0F97C0   		seta	al	#, tmp352
 14309 0155 1C00     		sbb	al, 0	# _7
 14310              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14311              		.loc 1 833 17 view .LVU4681
 14312 0157 84C0     		test	al, al	# _7
 14313 0159 0F8451FF 		je	.L1431	#,
 14313      FFFF
 840:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14314              		.loc 1 840 14 is_stmt 1 view .LVU4682
 14315              	# sieve_extend.c:840:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 840:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14316              		.loc 1 840 18 is_stmt 0 view .LVU4683
 14317 015f B9080000 		mov	ecx, 8	# tmp361,
 14317      00
 14318 0164 4C89C6   		mov	rsi, r8	# _4, _4
 14319 0167 488D3D00 		lea	rdi, .LC38[rip]	# tmp360,
 14319      000000
 14320 016e F3A6     		repz cmpsb
 14321 0170 410F97C1 		seta	r9b	#, tmp362
 14322 0174 4180D900 		sbb	r9b, 0	# _19
 14323              	# sieve_extend.c:840:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 840:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14324              		.loc 1 840 17 view .LVU4684
GAS LISTING /tmp/ccG38KJh.s 			page 382


 14325 0178 4584C9   		test	r9b, r9b	# _19
 14326 017b 748B     		je	.L1284	#,
 841:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14327              		.loc 1 841 14 is_stmt 1 view .LVU4685
 14328              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 841:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14329              		.loc 1 841 18 is_stmt 0 view .LVU4686
 14330 017d 4C89C6   		mov	rsi, r8	# _4, _4
 14331 0180 488D3D00 		lea	rdi, .LC39[rip]	# tmp366,
 14331      000000
 14332 0187 4889D1   		mov	rcx, rdx	# tmp594, tmp345
 14333 018a F3A6     		repz cmpsb
 14334 018c 0F97C0   		seta	al	#, tmp368
 14335 018f 1C00     		sbb	al, 0	# _20
 14336              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 841:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14337              		.loc 1 841 17 view .LVU4687
 14338 0191 84C0     		test	al, al	# _20
 14339 0193 0F858F01 		jne	.L1285	#,
 14339      0000
 841:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14340              		.loc 1 841 52 is_stmt 1 discriminator 1 view .LVU4688
 14341              	# sieve_extend.c:842:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n")
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 14342              		.loc 1 842 16 is_stmt 0 discriminator 1 view .LVU4689
 14343 0199 FFC3     		inc	ebx	# arg
 14344              	.LVL921:
 14345              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 841:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14346              		.loc 1 841 68 discriminator 1 view .LVU4690
 14347 019b C7842490 		mov	DWORD PTR 144[rsp], 0	# option_tunelevel,
 14347      00000000 
 14347      000000
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 14348              		.loc 1 842 13 is_stmt 1 discriminator 1 view .LVU4691
 14349              	.LVL922:
 14350              	# sieve_extend.c:842:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n")
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 14351              		.loc 1 842 16 is_stmt 0 discriminator 1 view .LVU4692
 14352 01a6 39DD     		cmp	ebp, ebx	# argc, arg
 14353 01a8 0F8E7012 		jle	.L1432	#,
 14353      0000
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14354              		.loc 1 843 13 is_stmt 1 view .LVU4693
 14355              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14356              		.loc 1 843 28 is_stmt 0 view .LVU4694
 14357 01ae 4F8D7C14 		lea	r15, 8[r12+r10]	# _25,
 14357      08
 14358              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14359              		.loc 1 843 17 view .LVU4695
 14360 01b3 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_25
 14361 01b6 31C0     		xor	eax, eax	#
 14362 01b8 488D9424 		lea	rdx, 144[rsp]	# tmp372,
 14362      90000000 
 14363 01c0 488D3500 		lea	rsi, .LC35[rip]	#,
GAS LISTING /tmp/ccG38KJh.s 			page 383


 14363      000000
 14364 01c7 E8000000 		call	__isoc99_sscanf@PLT	#
 14364      00
 14365              	.LVL923:
 14366              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14367              		.loc 1 843 16 view .LVU4696
 14368 01cc 83F801   		cmp	eax, 1	# tmp648,
 14369 01cf 0F85DA11 		jne	.L1287	#,
 14369      0000
 14370              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14371              		.loc 1 843 85 discriminator 1 view .LVU4697
 14372 01d5 8B942490 		mov	edx, DWORD PTR 144[rsp]	# option_tunelevel.25_28, option_tunelevel
 14372      000000
 14373              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 843:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 14374              		.loc 1 843 65 discriminator 1 view .LVU4698
 14375 01dc 83FA04   		cmp	edx, 4	# option_tunelevel.25_28,
 14376 01df 0F8FCA11 		jg	.L1287	#,
 14376      0000
 846:sieve_extend.c ****         }
 14377              		.loc 1 846 13 is_stmt 1 view .LVU4699
 14378 01e5 8BB4248C 		mov	esi, DWORD PTR 140[rsp]	#, option_verboselevel
 14378      000000
 14379 01ec 85F6     		test	esi, esi	#
 14380 01ee 0F8E14FF 		jle	.L1284	#,
 14380      FFFF
 846:sieve_extend.c ****         }
 14381              		.loc 1 846 24 discriminator 1 view .LVU4700
 14382              	.LVL924:
 14383              	.LBB1002:
 14384              	.LBI1002:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14385              		.loc 3 105 1 discriminator 1 view .LVU4701
 14386              	.LBB1003:
 14387              		.loc 3 107 3 discriminator 1 view .LVU4702
 14388              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14389              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4703
 14390 01f4 488D3500 		lea	rsi, .LC42[rip]	#,
 14390      000000
 14391 01fb BF010000 		mov	edi, 1	#,
 14391      00
 14392 0200 31C0     		xor	eax, eax	#
 14393              	.LBE1003:
 14394              	.LBE1002:
 14395              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14396              		.loc 1 831 36 discriminator 1 view .LVU4704
 14397 0202 FFC3     		inc	ebx	# arg
 14398              	.LVL925:
 14399              	.LBB1005:
 14400              	.LBB1004:
 14401              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14402              		.loc 3 107 10 discriminator 1 view .LVU4705
 14403 0204 E8000000 		call	__printf_chk@PLT	#
 14403      00
GAS LISTING /tmp/ccG38KJh.s 			page 384


 14404              	.LVL926:
 14405              		.loc 3 107 10 discriminator 1 view .LVU4706
 14406              	.LBE1004:
 14407              	.LBE1005:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14408              		.loc 1 831 33 is_stmt 1 discriminator 1 view .LVU4707
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14409              		.loc 1 831 21 discriminator 1 view .LVU4708
 14410              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14411              		.loc 1 831 5 is_stmt 0 discriminator 1 view .LVU4709
 14412 0209 39DD     		cmp	ebp, ebx	# argc, arg
 14413 020b 0F8F01FF 		jg	.L1305	#,
 14413      FFFF
 14414              	.LVL927:
 14415              		.p2align 4,,10
 14416 0211 0F1F8000 		.p2align 3
 14416      000000
 14417              	.L1306:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14418              		.loc 1 831 5 discriminator 1 view .LVU4710
 14419              	.LBE999:
 882:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
 14420              		.loc 1 882 5 is_stmt 1 view .LVU4711
 894:sieve_extend.c ****         // Count the number of primes and validate the result
 14421              		.loc 1 894 5 view .LVU4712
 896:sieve_extend.c ****         verbose(2) printf("\n");
 14422              		.loc 1 896 9 view .LVU4713
 14423 0218 8BAC248C 		mov	ebp, DWORD PTR 140[rsp]	#, option_verboselevel
 14423      000000
 14424              	.LVL928:
 896:sieve_extend.c ****         verbose(2) printf("\n");
 14425              		.loc 1 896 9 is_stmt 0 view .LVU4714
 14426 021f 85ED     		test	ebp, ebp	#
 14427 0221 7E1F     		jle	.L1278	#,
 896:sieve_extend.c ****         verbose(2) printf("\n");
 14428              		.loc 1 896 22 is_stmt 1 view .LVU4715
 14429              	.LVL929:
 14430              	.LBB1038:
 14431              	.LBI1038:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14432              		.loc 3 105 1 view .LVU4716
 14433              	.LBB1039:
 14434              		.loc 3 107 3 view .LVU4717
 14435              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14436              		.loc 3 107 10 is_stmt 0 view .LVU4718
 14437 0223 BF010000 		mov	edi, 1	#,
 14437      00
 14438 0228 488D3500 		lea	rsi, .LC60[rip]	#,
 14438      000000
 14439 022f 31C0     		xor	eax, eax	#
 14440 0231 E8000000 		call	__printf_chk@PLT	#
 14440      00
 14441              	.LVL930:
 14442              		.loc 3 107 10 view .LVU4719
 14443              	.LBE1039:
 14444              	.LBE1038:
GAS LISTING /tmp/ccG38KJh.s 			page 385


 896:sieve_extend.c ****         verbose(2) printf("\n");
 14445              		.loc 1 896 47 is_stmt 1 view .LVU4720
 14446 0236 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 14446      000000
 14447 023d E8000000 		call	fflush@PLT	#
 14447      00
 14448              	.LVL931:
 14449              	.L1278:
 897:sieve_extend.c **** 
 14450              		.loc 1 897 9 view .LVU4721
 14451 0242 83BC248C 		cmp	DWORD PTR 140[rsp], 1	# option_verboselevel,
 14451      00000001 
 14452 024a 7E0A     		jle	.L1307	#,
 897:sieve_extend.c **** 
 14453              		.loc 1 897 20 view .LVU4722
 14454              	.LVL932:
 14455              	.LBB1040:
 14456              	.LBI1040:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14457              		.loc 3 105 1 view .LVU4723
 14458              	.LBB1041:
 14459              		.loc 3 107 3 view .LVU4724
 14460              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14461              		.loc 3 107 10 is_stmt 0 view .LVU4725
 14462 024c BF0A0000 		mov	edi, 10	#,
 14462      00
 14463 0251 E8000000 		call	putchar@PLT	#
 14463      00
 14464              	.LVL933:
 14465              	.L1307:
 14466              		.loc 3 107 10 view .LVU4726
 14467              	.LBE1041:
 14468              	.LBE1040:
 14469              	.LBB1042:
 14470              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14471              		.loc 1 831 14 view .LVU4727
 14472 0256 C7042406 		mov	DWORD PTR [rsp], 6	# %sfp,
 14472      000000
 14473              	.LVL934:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14474              		.loc 1 831 14 view .LVU4728
 14475 025d 41BC6400 		mov	r12d, 100	# sieveSize_check,
 14475      0000
 14476              	.LVL935:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14477              		.loc 1 831 14 view .LVU4729
 14478              	.LBE1042:
 14479              	.LBB1043:
 14480              	.LBB1044:
 14481              	.LBB1045:
 14482              	.LBB1046:
 14483              	.LBB1047:
 14484              	.LBB1048:
 14485              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14486              		.loc 3 107 10 view .LVU4730
 14487 0263 4C8D2D00 		lea	r13, .LC62[rip]	# tmp573,
GAS LISTING /tmp/ccG38KJh.s 			page 386


 14487      000000
 14488              	.L1314:
 14489              	.LVL936:
 14490              		.loc 3 107 10 view .LVU4731
 14491              	.LBE1048:
 14492              	.LBE1047:
 14493              	.LBE1046:
 14494              	.LBE1045:
 901:sieve_extend.c ****             struct sieve_t *sieve_check;
 14495              		.loc 1 901 13 is_stmt 1 view .LVU4732
 14496 026a 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# prephitmp_533, option_verboselevel
 14496      8C000000 
 14497 0272 4183F801 		cmp	r8d, 1	# prephitmp_533,
 14498 0276 7E2A     		jle	.L1308	#,
 901:sieve_extend.c ****             struct sieve_t *sieve_check;
 14499              		.loc 1 901 26 view .LVU4733
 14500              	.LVL937:
 14501              	.LBB1061:
 14502              	.LBI1061:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14503              		.loc 3 105 1 view .LVU4734
 14504              	.LBB1062:
 14505              		.loc 3 107 3 view .LVU4735
 14506              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14507              		.loc 3 107 10 is_stmt 0 view .LVU4736
 14508 0278 4C89E2   		mov	rdx, r12	#, sieveSize_check
 14509 027b 488D3500 		lea	rsi, .LC61[rip]	#,
 14509      000000
 14510 0282 BF010000 		mov	edi, 1	#,
 14510      00
 14511 0287 31C0     		xor	eax, eax	#
 14512 0289 E8000000 		call	__printf_chk@PLT	#
 14512      00
 14513              	.LVL938:
 14514              		.loc 3 107 10 view .LVU4737
 14515              	.LBE1062:
 14516              	.LBE1061:
 901:sieve_extend.c ****             struct sieve_t *sieve_check;
 14517              		.loc 1 901 89 is_stmt 1 view .LVU4738
 14518 028e 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 14518      000000
 14519 0295 E8000000 		call	fflush@PLT	#
 14519      00
 14520              	.LVL939:
 14521 029a 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# prephitmp_533, option_verboselevel
 14521      8C000000 
 14522              	.L1308:
 14523              	.LBE1044:
 14524              	.LBE1043:
 14525              	.LBB1071:
 14526              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14527              		.loc 1 831 14 is_stmt 0 view .LVU4739
 14528 02a2 BB050000 		mov	ebx, 5	# ivtmp_466,
 14528      00
 14529 02a7 41BE0004 		mov	r14d, 1024	# blocksize_bits,
 14529      0000
GAS LISTING /tmp/ccG38KJh.s 			page 387


 14530 02ad EB58     		jmp	.L1312	#
 14531              	.LVL940:
 14532 02af 90       		.p2align 4,,10
 14533              		.p2align 3
 14534              	.L1309:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14535              		.loc 1 831 14 view .LVU4740
 14536              	.LBE1071:
 14537              	.LBB1072:
 14538              	.LBB1068:
 14539              	.LBB1063:
 14540              	.LBB1057:
 905:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 14541              		.loc 1 905 17 is_stmt 1 view .LVU4741
 14542              	# sieve_extend.c:905:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 905:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 14543              		.loc 1 905 31 is_stmt 0 view .LVU4742
 14544 02b0 4C89F6   		mov	rsi, r14	#, blocksize_bits
 14545 02b3 4C89E7   		mov	rdi, r12	#, sieveSize_check
 14546 02b6 E8000000 		call	sieve_shake	#
 14546      00
 14547              	.LVL941:
 14548              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 906:sieve_extend.c ****                 sieve_delete(sieve_check);
 14549              		.loc 1 906 29 view .LVU4743
 14550 02bb 8BB4248C 		mov	esi, DWORD PTR 140[rsp]	#, option_verboselevel
 14550      000000
 14551              	# sieve_extend.c:905:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 905:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 14552              		.loc 1 905 31 view .LVU4744
 14553 02c2 4889C5   		mov	rbp, rax	# sieve_check, tmp654
 14554              	.LVL942:
 906:sieve_extend.c ****                 sieve_delete(sieve_check);
 14555              		.loc 1 906 17 is_stmt 1 view .LVU4745
 14556              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 906:sieve_extend.c ****                 sieve_delete(sieve_check);
 14557              		.loc 1 906 29 is_stmt 0 view .LVU4746
 14558 02c5 4889C7   		mov	rdi, rax	#, sieve_check
 14559 02c8 E8000000 		call	validatePrimeCount	#
 14559      00
 14560              	.LVL943:
 14561              	.LBB1050:
 14562              	.LBB1051:
 14563              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 14564              		.loc 1 116 5 view .LVU4747
 14565 02cd 488B7D00 		mov	rdi, QWORD PTR 0[rbp]	#, sieve_check_179->bitstorage
 14566              	.LBE1051:
 14567              	.LBE1050:
 14568              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 906:sieve_extend.c ****                 sieve_delete(sieve_check);
 14569              		.loc 1 906 29 view .LVU4748
 14570 02d1 4189C7   		mov	r15d, eax	# valid, tmp655
 14571              	.LVL944:
 907:sieve_extend.c ****                 if (!valid) return 0; else verbose(3) printf("valid;");
 14572              		.loc 1 907 17 is_stmt 1 view .LVU4749
 14573              	.LBB1053:
GAS LISTING /tmp/ccG38KJh.s 			page 388


 14574              	.LBI1050:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 14575              		.loc 1 115 13 view .LVU4750
 14576              	.LBB1052:
 116:sieve_extend.c ****     free(sieve);
 14577              		.loc 1 116 5 view .LVU4751
 14578 02d4 E8000000 		call	free@PLT	#
 14578      00
 14579              	.LVL945:
 117:sieve_extend.c **** }
 14580              		.loc 1 117 5 view .LVU4752
 14581 02d9 4889EF   		mov	rdi, rbp	#, sieve_check
 14582 02dc E8000000 		call	free@PLT	#
 14582      00
 14583              	.LVL946:
 117:sieve_extend.c **** }
 14584              		.loc 1 117 5 is_stmt 0 view .LVU4753
 14585              	.LBE1052:
 14586              	.LBE1053:
 908:sieve_extend.c ****             }
 14587              		.loc 1 908 17 is_stmt 1 view .LVU4754
 14588              	# sieve_extend.c:908:                 if (!valid) return 0; else verbose(3) printf("valid;");
 908:sieve_extend.c ****             }
 14589              		.loc 1 908 20 is_stmt 0 view .LVU4755
 14590 02e1 4585FF   		test	r15d, r15d	# valid
 14591 02e4 0F846605 		je	.L1350	#,
 14591      0000
 908:sieve_extend.c ****             }
 14592              		.loc 1 908 44 is_stmt 1 discriminator 2 view .LVU4756
 14593 02ea 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# prephitmp_533, option_verboselevel
 14593      8C000000 
 14594 02f2 4183F802 		cmp	r8d, 2	# prephitmp_533,
 14595 02f6 0F8F2402 		jg	.L1433	#,
 14595      0000
 14596              	.LBE1057:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14597              		.loc 1 903 75 discriminator 2 view .LVU4757
 14598              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14599              		.loc 1 903 90 is_stmt 0 discriminator 2 view .LVU4758
 14600 02fc 4D01F6   		add	r14, r14	# blocksize_bits
 14601              	.LVL947:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14602              		.loc 1 903 49 is_stmt 1 discriminator 2 view .LVU4759
 14603              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14604              		.loc 1 903 13 is_stmt 0 discriminator 2 view .LVU4760
 14605 02ff FFCB     		dec	ebx	# ivtmp_466
 14606 0301 0F843F02 		je	.L1434	#,
 14606      0000
 14607              	.LVL948:
 14608              	.L1312:
 14609              	.LBB1058:
 904:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14610              		.loc 1 904 17 is_stmt 1 view .LVU4761
 14611 0307 4183F802 		cmp	r8d, 2	# prephitmp_533,
 14612 030b 7EA3     		jle	.L1309	#,
GAS LISTING /tmp/ccG38KJh.s 			page 389


 904:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14613              		.loc 1 904 28 view .LVU4762
 14614              	.LVL949:
 14615              	.LBB1054:
 14616              	.LBI1047:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14617              		.loc 3 105 1 view .LVU4763
 14618              	.LBB1049:
 14619              		.loc 3 107 3 view .LVU4764
 14620              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14621              		.loc 3 107 10 is_stmt 0 view .LVU4765
 14622 030d 4C89F2   		mov	rdx, r14	#, blocksize_bits
 14623 0310 4C89EE   		mov	rsi, r13	#, tmp573
 14624 0313 BF010000 		mov	edi, 1	#,
 14624      00
 14625 0318 31C0     		xor	eax, eax	#
 14626 031a E8000000 		call	__printf_chk@PLT	#
 14626      00
 14627              	.LVL950:
 14628 031f EB8F     		jmp	.L1309	#
 14629              	.LVL951:
 14630              		.p2align 4,,10
 14631 0321 0F1F8000 		.p2align 3
 14631      000000
 14632              	.L1285:
 14633              		.loc 3 107 10 view .LVU4766
 14634              	.LBE1049:
 14635              	.LBE1054:
 14636              	.LBE1058:
 14637              	.LBE1063:
 14638              	.LBE1068:
 14639              	.LBE1072:
 14640              	.LBB1073:
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14641              		.loc 1 848 14 is_stmt 1 view .LVU4767
 14642              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14643              		.loc 1 848 18 is_stmt 0 view .LVU4768
 14644 0328 4C89C6   		mov	rsi, r8	# _4, _4
 14645 032b 488D3D00 		lea	rdi, .LC43[rip]	# tmp376,
 14645      000000
 14646 0332 4889D1   		mov	rcx, rdx	# tmp596, tmp345
 14647 0335 F3A6     		repz cmpsb
 14648 0337 410F97C1 		seta	r9b	#, tmp378
 14649 033b 4180D900 		sbb	r9b, 0	# _33
 14650              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14651              		.loc 1 848 17 view .LVU4769
 14652 033f 4584C9   		test	r9b, r9b	# _33
 14653 0342 756C     		jne	.L1289	#,
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14654              		.loc 1 848 52 is_stmt 1 discriminator 1 view .LVU4770
 14655              	# sieve_extend.c:849:             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usag
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14656              		.loc 1 849 16 is_stmt 0 discriminator 1 view .LVU4771
 14657 0344 FFC3     		inc	ebx	# arg
 14658              	.LVL952:
GAS LISTING /tmp/ccG38KJh.s 			page 390


 14659              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14660              		.loc 1 848 67 discriminator 1 view .LVU4772
 14661 0346 48C78424 		mov	QWORD PTR 152[rsp], 0x000000000	# option_max_time,
 14661      98000000 
 14661      00000000 
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14662              		.loc 1 849 13 is_stmt 1 discriminator 1 view .LVU4773
 14663              	.LVL953:
 14664              	# sieve_extend.c:849:             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usag
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14665              		.loc 1 849 16 is_stmt 0 discriminator 1 view .LVU4774
 14666 0352 39DD     		cmp	ebp, ebx	# argc, arg
 14667 0354 0F8E9E10 		jle	.L1435	#,
 14667      0000
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14668              		.loc 1 850 13 is_stmt 1 view .LVU4775
 14669              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14670              		.loc 1 850 28 is_stmt 0 view .LVU4776
 14671 035a 4F8D7C14 		lea	r15, 8[r12+r10]	# _38,
 14671      08
 14672              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14673              		.loc 1 850 17 view .LVU4777
 14674 035f 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_38
 14675 0362 31C0     		xor	eax, eax	#
 14676 0364 488D9424 		lea	rdx, 152[rsp]	# tmp549,
 14676      98000000 
 14677 036c 488D3500 		lea	rsi, .LC45[rip]	#,
 14677      000000
 14678 0373 E8000000 		call	__isoc99_sscanf@PLT	#
 14678      00
 14679              	.LVL954:
 14680              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14681              		.loc 1 850 16 view .LVU4778
 14682 0378 83F801   		cmp	eax, 1	# tmp649,
 14683 037b 0F856810 		jne	.L1436	#,
 14683      0000
 853:sieve_extend.c ****         }
 14684              		.loc 1 853 13 is_stmt 1 view .LVU4779
 14685 0381 8B8C248C 		mov	ecx, DWORD PTR 140[rsp]	#, option_verboselevel
 14685      000000
 14686 0388 85C9     		test	ecx, ecx	#
 14687 038a 0F8E78FD 		jle	.L1284	#,
 14687      FFFF
 853:sieve_extend.c ****         }
 14688              		.loc 1 853 24 discriminator 1 view .LVU4780
 14689              	.LVL955:
 14690              	.LBB1006:
 14691              	.LBI1006:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14692              		.loc 3 105 1 discriminator 1 view .LVU4781
 14693              	.LBB1007:
 14694              		.loc 3 107 3 discriminator 1 view .LVU4782
 14695              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccG38KJh.s 			page 391


 14696              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4783
 14697 0390 8B942490 		mov	edx, DWORD PTR 144[rsp]	#, option_tunelevel
 14697      000000
 14698 0397 488D3500 		lea	rsi, .LC47[rip]	#,
 14698      000000
 14699 039e BF010000 		mov	edi, 1	#,
 14699      00
 14700 03a3 31C0     		xor	eax, eax	#
 14701 03a5 E8000000 		call	__printf_chk@PLT	#
 14701      00
 14702              	.LVL956:
 14703 03aa E959FDFF 		jmp	.L1284	#
 14703      FF
 14704              	.LVL957:
 14705 03af 90       		.p2align 4,,10
 14706              		.p2align 3
 14707              	.L1289:
 14708              		.loc 3 107 10 discriminator 1 view .LVU4784
 14709              	.LBE1007:
 14710              	.LBE1006:
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14711              		.loc 1 855 14 is_stmt 1 view .LVU4785
 14712              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14713              		.loc 1 855 18 is_stmt 0 view .LVU4786
 14714 03b0 4889D1   		mov	rcx, rdx	# tmp345, tmp345
 14715 03b3 488D3D00 		lea	rdi, .LC48[rip]	# tmp386,
 14715      000000
 14716 03ba 4C89C6   		mov	rsi, r8	# _4, _4
 14717 03bd F3A6     		repz cmpsb
 14718 03bf 0F97C2   		seta	dl	#, tmp390
 14719 03c2 80DA00   		sbb	dl, 0	# _46
 14720              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14721              		.loc 1 855 17 view .LVU4787
 14722 03c5 84D2     		test	dl, dl	# _46
 14723 03c7 757F     		jne	.L1292	#,
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14724              		.loc 1 855 52 is_stmt 1 discriminator 1 view .LVU4788
 14725              	# sieve_extend.c:856:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14726              		.loc 1 856 16 is_stmt 0 discriminator 1 view .LVU4789
 14727 03c9 FFC3     		inc	ebx	# arg
 14728              	.LVL958:
 14729              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14730              		.loc 1 855 72 discriminator 1 view .LVU4790
 14731 03cb 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 14731      A8000000 
 14731      00000000 
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14732              		.loc 1 856 13 is_stmt 1 discriminator 1 view .LVU4791
 14733              	.LVL959:
 14734              	# sieve_extend.c:856:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14735              		.loc 1 856 16 is_stmt 0 discriminator 1 view .LVU4792
 14736 03d7 39DD     		cmp	ebp, ebx	# argc, arg
GAS LISTING /tmp/ccG38KJh.s 			page 392


 14737 03d9 0F8EE40F 		jle	.L1437	#,
 14737      0000
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14738              		.loc 1 857 13 is_stmt 1 view .LVU4793
 14739              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14740              		.loc 1 857 28 is_stmt 0 view .LVU4794
 14741 03df 4F8D7C14 		lea	r15, 8[r12+r10]	# _51,
 14741      08
 14742              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14743              		.loc 1 857 17 view .LVU4795
 14744 03e4 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_51
 14745 03e7 31C0     		xor	eax, eax	#
 14746 03e9 488D9424 		lea	rdx, 168[rsp]	# tmp394,
 14746      A8000000 
 14747 03f1 488D3500 		lea	rsi, .LC50[rip]	#,
 14747      000000
 14748 03f8 E8000000 		call	__isoc99_sscanf@PLT	#
 14748      00
 14749              	.LVL960:
 14750              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14751              		.loc 1 857 16 view .LVU4796
 14752 03fd 83F801   		cmp	eax, 1	# tmp650,
 14753 0400 0F853E10 		jne	.L1294	#,
 14753      0000
 14754              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14755              		.loc 1 857 106 discriminator 1 view .LVU4797
 14756 0406 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.34_54, option_showMaxFactor
 14756      A8000000 
 14757              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14758              		.loc 1 857 82 discriminator 1 view .LVU4798
 14759 040e 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.34_54, option_maxFactor
 14759      A0000000 
 14760 0416 0F872810 		ja	.L1294	#,
 14760      0000
 860:sieve_extend.c ****         }
 14761              		.loc 1 860 13 is_stmt 1 view .LVU4799
 14762 041c 8BBC248C 		mov	edi, DWORD PTR 140[rsp]	#, option_verboselevel
 14762      000000
 14763 0423 85FF     		test	edi, edi	#
 14764 0425 0F8EDDFC 		jle	.L1284	#,
 14764      FFFF
 860:sieve_extend.c ****         }
 14765              		.loc 1 860 24 discriminator 1 view .LVU4800
 14766              	.LVL961:
 14767              	.LBB1008:
 14768              	.LBI1008:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14769              		.loc 3 105 1 discriminator 1 view .LVU4801
 14770              	.LBB1009:
 14771              		.loc 3 107 3 discriminator 1 view .LVU4802
 14772              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14773              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4803
GAS LISTING /tmp/ccG38KJh.s 			page 393


 14774 042b 488D3500 		lea	rsi, .LC52[rip]	#,
 14774      000000
 14775 0432 BF010000 		mov	edi, 1	#,
 14775      00
 14776 0437 31C0     		xor	eax, eax	#
 14777 0439 E8000000 		call	__printf_chk@PLT	#
 14777      00
 14778              	.LVL962:
 14779 043e E9C5FCFF 		jmp	.L1284	#
 14779      FF
 14780              	.LVL963:
 14781              		.p2align 4,,10
 14782 0443 0F1F4400 		.p2align 3
 14782      00
 14783              	.L1292:
 14784              		.loc 3 107 10 discriminator 1 view .LVU4804
 14785              	.LBE1009:
 14786              	.LBE1008:
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14787              		.loc 1 862 14 is_stmt 1 view .LVU4805
 14788              	# sieve_extend.c:862:         else if (strcmp(argv[arg], "--threads")==0) { 
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14789              		.loc 1 862 18 is_stmt 0 view .LVU4806
 14790 0448 4C89D9   		mov	rcx, r11	# tmp351, tmp351
 14791 044b 488D3D00 		lea	rdi, .LC53[rip]	# tmp396,
 14791      000000
 14792 0452 4C89C6   		mov	rsi, r8	# _4, _4
 14793 0455 F3A6     		repz cmpsb
 14794 0457 410F97C3 		seta	r11b	#, tmp400
 14795 045b 4180DB00 		sbb	r11b, 0	# _60
 14796              	# sieve_extend.c:862:         else if (strcmp(argv[arg], "--threads")==0) { 
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14797              		.loc 1 862 17 view .LVU4807
 14798 045f 4584DB   		test	r11b, r11b	# _60
 14799 0462 0F853804 		jne	.L1296	#,
 14799      0000
 863:sieve_extend.c ****         #ifdef _OPENMP
 14800              		.loc 1 863 13 is_stmt 1 view .LVU4808
 14801              	# sieve_extend.c:863:             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified
 863:sieve_extend.c ****         #ifdef _OPENMP
 14802              		.loc 1 863 16 is_stmt 0 view .LVU4809
 14803 0468 FFC3     		inc	ebx	# arg
 14804              	.LVL964:
 863:sieve_extend.c ****         #ifdef _OPENMP
 14805              		.loc 1 863 16 view .LVU4810
 14806 046a 39DD     		cmp	ebp, ebx	# argc, arg
 14807 046c 0F8EE10F 		jle	.L1438	#,
 14807      0000
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 14808              		.loc 1 865 13 is_stmt 1 view .LVU4811
 14809              	# sieve_extend.c:865:             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 14810              		.loc 1 865 28 is_stmt 0 view .LVU4812
 14811 0472 4F8D5414 		lea	r10, 8[r12+r10]	# _65,
 14811      08
 14812              	# sieve_extend.c:865:             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
GAS LISTING /tmp/ccG38KJh.s 			page 394


 14813              		.loc 1 865 17 view .LVU4813
 14814 0477 4D8B3A   		mov	r15, QWORD PTR [r10]	# _66, *_65
 14815 047a 488D3D00 		lea	rdi, .LC55[rip]	# tmp404,
 14815      000000
 14816 0481 B9040000 		mov	ecx, 4	# tmp407,
 14816      00
 14817 0486 4C89FE   		mov	rsi, r15	# _66, _66
 14818 0489 F3A6     		repz cmpsb
 14819 048b 410F97C0 		seta	r8b	#, tmp408
 14820 048f 4180D800 		sbb	r8b, 0	# _67
 14821              	# sieve_extend.c:865:             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 14822              		.loc 1 865 16 view .LVU4814
 14823 0493 4584C0   		test	r8b, r8b	# _67
 14824 0496 0F84DF03 		je	.L1439	#,
 14824      0000
 14825              	# sieve_extend.c:866:             else if (strcmp(argv[arg], "half")==0) option_threads = max_threa
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14826              		.loc 1 866 22 view .LVU4815
 14827 049c 488D3500 		lea	rsi, .LC56[rip]	#,
 14827      000000
 14828 04a3 4C89FF   		mov	rdi, r15	#, _66
 14829 04a6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, _65
 14829      10
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14830              		.loc 1 866 18 is_stmt 1 view .LVU4816
 14831              	# sieve_extend.c:866:             else if (strcmp(argv[arg], "half")==0) option_threads = max_threa
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14832              		.loc 1 866 22 is_stmt 0 view .LVU4817
 14833 04ab E8000000 		call	strcmp@PLT	#
 14833      00
 14834              	.LVL965:
 14835              	# sieve_extend.c:866:             else if (strcmp(argv[arg], "half")==0) option_threads = max_threa
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14836              		.loc 1 866 21 view .LVU4818
 14837 04b0 85C0     		test	eax, eax	# tmp651
 14838 04b2 488B4424 		mov	rax, QWORD PTR 16[rsp]	# _65, %sfp
 14838      10
 14839 04b7 0F851304 		jne	.L1302	#,
 14839      0000
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14840              		.loc 1 866 52 is_stmt 1 discriminator 1 view .LVU4819
 14841              	# sieve_extend.c:866:             else if (strcmp(argv[arg], "half")==0) option_threads = max_threa
 866:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 14842              		.loc 1 866 67 is_stmt 0 discriminator 1 view .LVU4820
 14843 04bd 8B542408 		mov	edx, DWORD PTR 8[rsp]	# _69, %sfp
 14844 04c1 89942494 		mov	DWORD PTR 148[rsp], edx	# option_threads, _69
 14844      000000
 14845              	.L1303:
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 14846              		.loc 1 868 13 is_stmt 1 view .LVU4821
 14847              	# sieve_extend.c:868:             if (option_threads <1)  option_threads = 1;
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 14848              		.loc 1 868 16 is_stmt 0 view .LVU4822
 14849 04c8 83BC2494 		cmp	DWORD PTR 148[rsp], 0	# option_threads,
 14849      00000000 
 14850 04d0 0F8EBA03 		jle	.L1299	#,
GAS LISTING /tmp/ccG38KJh.s 			page 395


 14850      0000
 14851              	.L1301:
 869:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 14852              		.loc 1 869 13 is_stmt 1 view .LVU4823
 14853              	# sieve_extend.c:869:             if (option_threads > max_threads)  option_threads = max_threads;
 869:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 14854              		.loc 1 869 16 is_stmt 0 view .LVU4824
 14855 04d6 448B1424 		mov	r10d, DWORD PTR [rsp]	# max_threads, %sfp
 14856 04da 44399424 		cmp	DWORD PTR 148[rsp], r10d	# option_threads, max_threads
 14856      94000000 
 14857 04e2 7E08     		jle	.L1300	#,
 869:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 14858              		.loc 1 869 48 is_stmt 1 discriminator 1 view .LVU4825
 14859              	# sieve_extend.c:869:             if (option_threads > max_threads)  option_threads = max_threads;
 869:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 14860              		.loc 1 869 63 is_stmt 0 discriminator 1 view .LVU4826
 14861 04e4 44899424 		mov	DWORD PTR 148[rsp], r10d	# option_threads, max_threads
 14861      94000000 
 14862              	.L1300:
 870:sieve_extend.c ****         #else
 14863              		.loc 1 870 13 is_stmt 1 view .LVU4827
 14864 04ec 448BBC24 		mov	r15d, DWORD PTR 140[rsp]	#, option_verboselevel
 14864      8C000000 
 14865 04f4 4585FF   		test	r15d, r15d	#
 14866 04f7 0F8E0BFC 		jle	.L1284	#,
 14866      FFFF
 870:sieve_extend.c ****         #else
 14867              		.loc 1 870 24 discriminator 1 view .LVU4828
 14868              	.LVL966:
 14869              	.LBB1010:
 14870              	.LBI1010:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14871              		.loc 3 105 1 discriminator 1 view .LVU4829
 14872              	.LBB1011:
 14873              		.loc 3 107 3 discriminator 1 view .LVU4830
 14874              	.LBE1011:
 14875              	.LBE1010:
 14876              	# sieve_extend.c:870:             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option
 870:sieve_extend.c ****         #else
 14877              		.loc 1 870 24 is_stmt 0 discriminator 1 view .LVU4831
 14878 04fd 48639424 		movsx	rdx, DWORD PTR 148[rsp]	# option_threads, option_threads
 14878      94000000 
 14879              	.LBB1013:
 14880              	.LBB1012:
 14881              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14882              		.loc 3 107 10 discriminator 1 view .LVU4832
 14883 0505 488D3500 		lea	rsi, .LC58[rip]	#,
 14883      000000
 14884 050c BF010000 		mov	edi, 1	#,
 14884      00
 14885 0511 31C0     		xor	eax, eax	#
 14886 0513 E8000000 		call	__printf_chk@PLT	#
 14886      00
 14887              	.LVL967:
 14888 0518 E9EBFBFF 		jmp	.L1284	#
 14888      FF
 14889              	.LVL968:
GAS LISTING /tmp/ccG38KJh.s 			page 396


 14890 051d 0F1F00   		.p2align 4,,10
 14891              		.p2align 3
 14892              	.L1433:
 14893              		.loc 3 107 10 discriminator 1 view .LVU4833
 14894              	.LBE1012:
 14895              	.LBE1013:
 14896              	.LBE1073:
 14897              	.LBB1074:
 14898              	.LBB1069:
 14899              	.LBB1064:
 14900              	.LBB1059:
 908:sieve_extend.c ****             }
 14901              		.loc 1 908 55 is_stmt 1 view .LVU4834
 14902              	.LBB1055:
 14903              	.LBI1055:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14904              		.loc 3 105 1 view .LVU4835
 14905              	.LBB1056:
 14906              		.loc 3 107 3 view .LVU4836
 14907              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14908              		.loc 3 107 10 is_stmt 0 view .LVU4837
 14909 0520 488D3500 		lea	rsi, .LC63[rip]	#,
 14909      000000
 14910 0527 BF010000 		mov	edi, 1	#,
 14910      00
 14911 052c 31C0     		xor	eax, eax	#
 14912 052e E8000000 		call	__printf_chk@PLT	#
 14912      00
 14913              	.LVL969:
 14914              	.LBE1056:
 14915              	.LBE1055:
 14916              	.LBE1059:
 14917              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14918              		.loc 1 903 90 view .LVU4838
 14919 0533 4D01F6   		add	r14, r14	# blocksize_bits
 14920              	.LVL970:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14921              		.loc 1 903 90 view .LVU4839
 14922 0536 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# prephitmp_533, option_verboselevel
 14922      8C000000 
 14923              	.LVL971:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14924              		.loc 1 903 75 is_stmt 1 view .LVU4840
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14925              		.loc 1 903 49 view .LVU4841
 14926              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14927              		.loc 1 903 13 is_stmt 0 view .LVU4842
 14928 053e FFCB     		dec	ebx	# ivtmp_466
 14929 0540 0F85C1FD 		jne	.L1312	#,
 14929      FFFF
 14930              	.L1434:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14931              		.loc 1 903 13 view .LVU4843
 14932              	.LBE1064:
 910:sieve_extend.c ****         }
GAS LISTING /tmp/ccG38KJh.s 			page 397


 14933              		.loc 1 910 13 is_stmt 1 view .LVU4844
 14934 0546 4183F801 		cmp	r8d, 1	# prephitmp_533,
 14935 054a 7E0C     		jle	.L1313	#,
 910:sieve_extend.c ****         }
 14936              		.loc 1 910 24 view .LVU4845
 14937              	.LVL972:
 14938              	.LBB1065:
 14939              	.LBI1065:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14940              		.loc 3 105 1 view .LVU4846
 14941              	.LBB1066:
 14942              		.loc 3 107 3 view .LVU4847
 14943              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14944              		.loc 3 107 10 is_stmt 0 view .LVU4848
 14945 054c 488D3D00 		lea	rdi, .LC64[rip]	#,
 14945      000000
 14946 0553 E8000000 		call	puts@PLT	#
 14946      00
 14947              	.LVL973:
 14948              	.L1313:
 14949              		.loc 3 107 10 view .LVU4849
 14950              	.LBE1066:
 14951              	.LBE1065:
 14952              	.LBE1069:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14953              		.loc 1 900 76 is_stmt 1 discriminator 2 view .LVU4850
 14954              	# sieve_extend.c:900:         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; si
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14955              		.loc 1 900 92 is_stmt 0 discriminator 2 view .LVU4851
 14956 0558 4F8D24A4 		lea	r12, [r12+r12*4]	# tmp423,
 14957              	.LVL974:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14958              		.loc 1 900 92 discriminator 2 view .LVU4852
 14959 055c 4D01E4   		add	r12, r12	# sieveSize_check
 14960              	.LVL975:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14961              		.loc 1 900 47 is_stmt 1 discriminator 2 view .LVU4853
 14962              	# sieve_extend.c:900:         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; si
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14963              		.loc 1 900 9 is_stmt 0 discriminator 2 view .LVU4854
 14964 055f FF0C24   		dec	DWORD PTR [rsp]	# %sfp
 14965 0562 0F8502FD 		jne	.L1314	#,
 14965      FFFF
 14966              	.LBE1074:
 912:sieve_extend.c ****     }
 14967              		.loc 1 912 9 is_stmt 1 view .LVU4855
 14968 0568 83BC248C 		cmp	DWORD PTR 140[rsp], 0	# option_verboselevel,
 14968      00000000 
 14969 0570 7E0C     		jle	.L1315	#,
 912:sieve_extend.c ****     }
 14970              		.loc 1 912 20 view .LVU4856
 14971              	.LVL976:
 14972              	.LBB1075:
 14973              	.LBI1075:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14974              		.loc 3 105 1 view .LVU4857
 14975              	.LBB1076:
GAS LISTING /tmp/ccG38KJh.s 			page 398


 14976              		.loc 3 107 3 view .LVU4858
 14977              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14978              		.loc 3 107 10 is_stmt 0 view .LVU4859
 14979 0572 488D3D00 		lea	rdi, .LC65[rip]	#,
 14979      000000
 14980 0579 E8000000 		call	puts@PLT	#
 14980      00
 14981              	.LVL977:
 14982              	.L1315:
 14983              		.loc 3 107 10 view .LVU4860
 14984              	.LBE1076:
 14985              	.LBE1075:
 916:sieve_extend.c ****     if (option_tunelevel) {
 14986              		.loc 1 916 5 is_stmt 1 view .LVU4861
 917:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_threads,
 14987              		.loc 1 917 5 view .LVU4862
 14988              	# sieve_extend.c:917:     if (option_tunelevel) {
 917:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_threads,
 14989              		.loc 1 917 9 is_stmt 0 view .LVU4863
 14990 057e 8B842490 		mov	eax, DWORD PTR 144[rsp]	# option_tunelevel.59_93, option_tunelevel
 14990      000000
 14991              	# sieve_extend.c:916:     counter_t best_blocksize_bits = default_blocksize;
 916:sieve_extend.c ****     if (option_tunelevel) {
 14992              		.loc 1 916 15 view .LVU4864
 14993 0585 41BD0000 		mov	r13d, 262144	# best_result$8,
 14993      0400
 14994              	# sieve_extend.c:917:     if (option_tunelevel) {
 917:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_threads,
 14995              		.loc 1 917 8 view .LVU4865
 14996 058b 85C0     		test	eax, eax	# option_tunelevel.59_93
 14997 058d 0F85DC03 		jne	.L1440	#,
 14997      0000
 14998              	.LVL978:
 14999              	.L1316:
 926:sieve_extend.c ****     counter_t used_threads = 1;
 15000              		.loc 1 926 5 is_stmt 1 view .LVU4866
 927:sieve_extend.c **** 
 15001              		.loc 1 927 5 view .LVU4867
 932:sieve_extend.c ****     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  ) {
 15002              		.loc 1 932 5 view .LVU4868
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15003              		.loc 1 933 5 view .LVU4869
 15004              	.LBB1077:
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15005              		.loc 1 933 9 view .LVU4870
 15006              	# sieve_extend.c:933:     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15007              		.loc 1 933 19 is_stmt 0 view .LVU4871
 15008 0593 4C63A424 		movsx	r12, DWORD PTR 148[rsp]	# threads, option_threads
 15008      94000000 
 15009              	.LVL979:
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15010              		.loc 1 933 43 is_stmt 1 view .LVU4872
 15011              	# sieve_extend.c:933:     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15012              		.loc 1 933 5 is_stmt 0 view .LVU4873
 15013 059b 4D85E4   		test	r12, r12	# threads
GAS LISTING /tmp/ccG38KJh.s 			page 399


 15014 059e 0F845C02 		je	.L1361	#,
 15014      0000
 15015 05a4 488DBC24 		lea	rdi, 152[rsp]	# tmp631,
 15015      98000000 
 15016 05ac 488DB424 		lea	rsi, 160[rsp]	# tmp632,
 15016      A0000000 
 15017 05b4 488D8424 		lea	rax, 192[rsp]	# tmp552,
 15017      C0000000 
 15018 05bc 488D9424 		lea	rdx, 208[rsp]	# tmp553,
 15018      D0000000 
 15019 05c4 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, tmp631
 15019      18
 15020 05c9 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp632
 15020      20
 15021 05ce 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, tmp552
 15021      10
 15022              	.LBB1078:
 15023              	# sieve_extend.c:936:         if (--max_tries ==1) threads = 2;
 936:sieve_extend.c ****     #endif
 15024              		.loc 1 936 38 view .LVU4874
 15025 05d3 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, tmp553
 15025      28
 15026 05d8 488B6C24 		mov	rbp, QWORD PTR 120[rsp]	# sieve, %sfp
 15026      78
 15027              	.LBE1078:
 15028              	.LBE1077:
 15029              	# sieve_extend.c:932:     counter_t max_tries = 4;
 932:sieve_extend.c ****     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  ) {
 15030              		.loc 1 932 15 view .LVU4875
 15031 05dd BB040000 		mov	ebx, 4	# max_tries,
 15031      00
 15032 05e2 4C8DB424 		lea	r14, 176[rsp]	# tmp551,
 15032      B0000000 
 15033 05ea EB11     		jmp	.L1348	#
 15034              	.LVL980:
 15035 05ec 0F1F4000 		.p2align 4,,10
 15036              		.p2align 3
 15037              	.L1355:
 15038              	.LBB1099:
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15039              		.loc 1 933 55 is_stmt 1 discriminator 2 view .LVU4876
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15040              		.loc 1 933 43 discriminator 2 view .LVU4877
 15041              	# sieve_extend.c:933:     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15042              		.loc 1 933 5 is_stmt 0 discriminator 2 view .LVU4878
 15043 05f0 4C8B2424 		mov	r12, QWORD PTR [rsp]	# threads, %sfp
 15044 05f4 49D1EC   		shr	r12	# threads
 15045              	.LVL981:
 933:sieve_extend.c ****         omp_set_num_threads(threads);
 15046              		.loc 1 933 5 discriminator 2 view .LVU4879
 15047 05f7 0F840302 		je	.L1361	#,
 15047      0000
 15048              	.LVL982:
 15049              	.L1348:
 15050              	.LBB1097:
 934:sieve_extend.c ****         used_threads=threads;
GAS LISTING /tmp/ccG38KJh.s 			page 400


 15051              		.loc 1 934 9 is_stmt 1 view .LVU4880
 15052 05fd 4489E7   		mov	edi, r12d	#, threads
 15053              	# sieve_extend.c:936:         if (--max_tries ==1) threads = 2;
 936:sieve_extend.c ****     #endif
 15054              		.loc 1 936 12 is_stmt 0 view .LVU4881
 15055 0600 48FFCB   		dec	rbx	# max_tries
 15056              	.LVL983:
 15057              	# sieve_extend.c:934:         omp_set_num_threads(threads);
 934:sieve_extend.c ****         used_threads=threads;
 15058              		.loc 1 934 9 view .LVU4882
 15059 0603 E8000000 		call	omp_set_num_threads@PLT	#
 15059      00
 15060              	.LVL984:
 935:sieve_extend.c ****         if (--max_tries ==1) threads = 2;
 15061              		.loc 1 935 9 is_stmt 1 view .LVU4883
 936:sieve_extend.c ****     #endif
 15062              		.loc 1 936 9 view .LVU4884
 15063              	# sieve_extend.c:936:         if (--max_tries ==1) threads = 2;
 936:sieve_extend.c ****     #endif
 15064              		.loc 1 936 38 is_stmt 0 view .LVU4885
 15065 0608 4883FB01 		cmp	rbx, 1	# max_tries,
 15066 060c 41B90200 		mov	r9d, 2	# threads,
 15066      0000
 15067 0612 4D0F45CC 		cmovne	r9, r12	# threads,, threads
 15068              	# sieve_extend.c:938:         verbose(2) printf("\n");
 938:sieve_extend.c ****         verbose(1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads fo
 15069              		.loc 1 938 9 view .LVU4886
 15070 0616 83BC248C 		cmp	DWORD PTR 140[rsp], 1	# option_verboselevel,
 15070      00000001 
 15071              	# sieve_extend.c:936:         if (--max_tries ==1) threads = 2;
 936:sieve_extend.c ****     #endif
 15072              		.loc 1 936 38 view .LVU4887
 15073 061e 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, threads
 15074              	.LVL985:
 938:sieve_extend.c ****         verbose(1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads fo
 15075              		.loc 1 938 9 is_stmt 1 view .LVU4888
 15076 0622 7E0A     		jle	.L1352	#,
 938:sieve_extend.c ****         verbose(1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads fo
 15077              		.loc 1 938 20 view .LVU4889
 15078              	.LVL986:
 15079              	.LBB1079:
 15080              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15081              		.loc 3 105 1 view .LVU4890
 15082              	.LBB1080:
 15083              		.loc 3 107 3 view .LVU4891
 15084              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15085              		.loc 3 107 10 is_stmt 0 view .LVU4892
 15086 0624 BF0A0000 		mov	edi, 10	#,
 15086      00
 15087 0629 E8000000 		call	putchar@PLT	#
 15087      00
 15088              	.LVL987:
 15089              	.L1352:
 15090              		.loc 3 107 10 view .LVU4893
 15091              	.LBE1080:
 15092              	.LBE1079:
GAS LISTING /tmp/ccG38KJh.s 			page 401


 939:sieve_extend.c ****         counter_t passes = 0;
 15093              		.loc 1 939 9 is_stmt 1 view .LVU4894
 15094 062e 448BBC24 		mov	r15d, DWORD PTR 140[rsp]	#, option_verboselevel
 15094      8C000000 
 15095 0636 4585FF   		test	r15d, r15d	#
 15096 0639 7E3C     		jle	.L1353	#,
 939:sieve_extend.c ****         counter_t passes = 0;
 15097              		.loc 1 939 20 discriminator 1 view .LVU4895
 15098              	.LVL988:
 15099              	.LBB1081:
 15100              	.LBI1081:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15101              		.loc 3 105 1 discriminator 1 view .LVU4896
 15102              	.LBB1082:
 15103              		.loc 3 107 3 discriminator 1 view .LVU4897
 15104              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15105              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4898
 15106 063b 52       		push	rdx	#
 15107              		.cfi_def_cfa_offset 360
 15108              	.LVL989:
 15109              		.loc 3 107 10 discriminator 1 view .LVU4899
 15110 063c 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 15110      000000
 15111 0643 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 15111      000000
 15112 064a 4154     		push	r12	# threads
 15113              		.cfi_def_cfa_offset 368
 15114 064c 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 15114      000000
 15115 0653 488D3500 		lea	rsi, .LC80[rip]	#,
 15115      000000
 15116 065a C5FB1084 		vmovsd	xmm0, QWORD PTR 168[rsp]	#, option_max_time
 15116      24A80000 
 15116      00
 15117 0663 4C89EA   		mov	rdx, r13	#, best_result$8
 15118 0666 BF010000 		mov	edi, 1	#,
 15118      00
 15119 066b B8010000 		mov	eax, 1	#,
 15119      00
 15120 0670 E8000000 		call	__printf_chk@PLT	#
 15120      00
 15121              	.LVL990:
 15122 0675 59       		pop	rcx	#
 15123              		.cfi_def_cfa_offset 360
 15124 0676 5E       		pop	rsi	#
 15125              		.cfi_def_cfa_offset 352
 15126              	.LVL991:
 15127              	.L1353:
 15128              		.loc 3 107 10 discriminator 1 view .LVU4900
 15129              	.LBE1082:
 15130              	.LBE1081:
 940:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 15131              		.loc 1 940 9 is_stmt 1 view .LVU4901
 941:sieve_extend.c ****         double elapsed_time = 0;
 15132              		.loc 1 941 9 view .LVU4902
 942:sieve_extend.c ****         struct sieve_t *sieve;
 15133              		.loc 1 942 9 view .LVU4903
GAS LISTING /tmp/ccG38KJh.s 			page 402


 943:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 15134              		.loc 1 943 9 view .LVU4904
 944:sieve_extend.c ****         #ifdef _OPENMP
 15135              		.loc 1 944 9 view .LVU4905
 15136 0677 4C89F6   		mov	rsi, r14	#, tmp551
 15137 067a BF010000 		mov	edi, 1	#,
 15137      00
 15138 067f E8000000 		call	clock_gettime@PLT	#
 15138      00
 15139              	.LVL992:
 15140              	.LBB1083:
 15141              	# sieve_extend.c:946:         #pragma omp parallel reduction(+:passes)
 946:sieve_extend.c ****         #endif
 15142              		.loc 1 946 17 is_stmt 0 view .LVU4906
 15143 0684 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# tmp552, %sfp
 15143      10
 15144 0689 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# tmp631, %sfp
 15144      18
 15145 068e 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# tmp632, %sfp
 15145      20
 15146 0693 488B7424 		mov	rsi, QWORD PTR 40[rsp]	#, %sfp
 15146      28
 15147 0698 48898C24 		mov	QWORD PTR 232[rsp], rcx	# .omp_data_o.84.end_time, tmp552
 15147      E8000000 
 15148 06a0 31D2     		xor	edx, edx	#
 15149 06a2 31C9     		xor	ecx, ecx	#
 15150 06a4 488D3D00 		lea	rdi, main._omp_fn.0[rip]	#,
 15150      000000
 15151 06ab 4C899C24 		mov	QWORD PTR 208[rsp], r11	# .omp_data_o.84.option_max_time, tmp631
 15151      D0000000 
 15152 06b3 4C899424 		mov	QWORD PTR 216[rsp], r10	# .omp_data_o.84.option_maxFactor, tmp632
 15152      D8000000 
 15153 06bb 4889AC24 		mov	QWORD PTR 256[rsp], rbp	# .omp_data_o.84.sieve, sieve
 15153      00010000 
 15154 06c3 48C78424 		mov	QWORD PTR 264[rsp], 0	# .omp_data_o.84.passes,
 15154      08010000 
 15154      00000000 
 15155 06cf 4C89AC24 		mov	QWORD PTR 240[rsp], r13	# .omp_data_o.84.blocksize_bits, best_result$8
 15155      F0000000 
 15156 06d7 4C89B424 		mov	QWORD PTR 224[rsp], r14	# .omp_data_o.84.start_time, tmp551
 15156      E0000000 
 15157 06df 48C78424 		mov	QWORD PTR 248[rsp], 0x000000000	# .omp_data_o.84.elapsed_time,
 15157      F8000000 
 15157      00000000 
 15158 06eb E8000000 		call	GOMP_parallel@PLT	#
 15158      00
 15159              	.LVL993:
 15160 06f0 C57B1084 		vmovsd	xmm8, QWORD PTR 248[rsp]	# elapsed_time, .omp_data_o.84.elapsed_time
 15160      24F80000 
 15160      00
 15161 06f9 4C8BBC24 		mov	r15, QWORD PTR 264[rsp]	# passes, .omp_data_o.84.passes
 15161      08010000 
 15162              	.LVL994:
 946:sieve_extend.c ****         #endif
 15163              		.loc 1 946 17 view .LVU4907
 15164              	.LBE1083:
 15165              	.LBB1084:
GAS LISTING /tmp/ccG38KJh.s 			page 403


 15166              	.LBB1085:
 15167              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15168              		.loc 3 107 10 view .LVU4908
 15169 0701 4C89E1   		mov	rcx, r12	#, threads
 15170 0704 C57929C0 		vmovapd	xmm0, xmm8	#, elapsed_time
 15171 0708 4C89FA   		mov	rdx, r15	#, passes
 15172 070b 488D3500 		lea	rsi, .LC81[rip]	#,
 15172      000000
 15173 0712 BF010000 		mov	edi, 1	#,
 15173      00
 15174 0717 B8010000 		mov	eax, 1	#,
 15174      00
 15175              	.LBE1085:
 15176              	.LBE1084:
 15177              	.LBB1087:
 15178              	# sieve_extend.c:946:         #pragma omp parallel reduction(+:passes)
 946:sieve_extend.c ****         #endif
 15179              		.loc 1 946 17 view .LVU4909
 15180 071c 488BAC24 		mov	rbp, QWORD PTR 256[rsp]	# sieve, .omp_data_o.84.sieve
 15180      00010000 
 15181              	.LVL995:
 946:sieve_extend.c ****         #endif
 15182              		.loc 1 946 17 view .LVU4910
 15183              	.LBE1087:
 954:sieve_extend.c ****         }
 955:sieve_extend.c ****         #ifdef _OPENMP
 956:sieve_extend.c ****         printf("rogiervandam_extend_epar;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n", (uintma
 15184              		.loc 1 956 9 is_stmt 1 view .LVU4911
 15185              	.LBB1088:
 15186              	.LBI1084:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15187              		.loc 3 105 1 view .LVU4912
 15188              	.LBB1086:
 15189              		.loc 3 107 3 view .LVU4913
 15190              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15191              		.loc 3 107 10 is_stmt 0 view .LVU4914
 15192 0724 C57B1144 		vmovsd	QWORD PTR 8[rsp], xmm8	# %sfp, elapsed_time
 15192      2408
 15193 072a E8000000 		call	__printf_chk@PLT	#
 15193      00
 15194              	.LVL996:
 15195              		.loc 3 107 10 view .LVU4915
 15196              	.LBE1086:
 15197              	.LBE1088:
 957:sieve_extend.c ****         #else
 958:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)p
 959:sieve_extend.c ****         #endif
 960:sieve_extend.c ****         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per second \033[1;33m%.1f\033
 15198              		.loc 1 960 9 is_stmt 1 view .LVU4916
 15199 072f 448B8424 		mov	r8d, DWORD PTR 140[rsp]	#, option_verboselevel
 15199      8C000000 
 15200 0737 4585C0   		test	r8d, r8d	#
 15201 073a 0F8EB0FE 		jle	.L1355	#,
 15201      FFFF
 15202              		.loc 1 960 20 discriminator 1 view .LVU4917
 15203 0740 4D85FF   		test	r15, r15	# passes
 15204 0743 C57B104C 		vmovsd	xmm9, QWORD PTR 8[rsp]	# elapsed_time, %sfp
GAS LISTING /tmp/ccG38KJh.s 			page 404


 15204      2408
 15205 0749 0F88B801 		js	.L1356	#,
 15205      0000
 15206 074f C4412957 		vxorpd	xmm10, xmm10, xmm10	# tmp823
 15206      D2
 15207 0754 C441AB2A 		vcvtsi2sd	xmm13, xmm10, r15	# tmp659, tmp823, passes
 15207      EF
 15208              	.LVL997:
 15209              	.L1357:
 15210              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 15211              		.loc 1 960 151 is_stmt 0 discriminator 1 view .LVU4918
 15212 0759 C5FB1084 		vmovsd	xmm0, QWORD PTR 152[rsp]	# option_max_time.74_114, option_max_time
 15212      24980000 
 15212      00
 15213              	.LVL998:
 15214              	.LBB1089:
 15215              	.LBI1089:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15216              		.loc 3 105 1 is_stmt 1 discriminator 1 view .LVU4919
 15217              	.LBB1090:
 15218              		.loc 3 107 3 discriminator 1 view .LVU4920
 15219              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15220              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4921
 15221 0762 C4C1135E 		vdivsd	xmm2, xmm13, xmm9	#, _111, elapsed_time
 15221      D1
 15222              	.LBE1090:
 15223              	.LBE1089:
 15224              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 15225              		.loc 1 960 151 discriminator 1 view .LVU4922
 15226 0767 C51359F0 		vmulsd	xmm14, xmm13, xmm0	# tmp531, _111, option_max_time.74_114
 15227              	.LBB1092:
 15228              	.LBB1091:
 15229              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15230              		.loc 3 107 10 discriminator 1 view .LVU4923
 15231 076b 488D3500 		lea	rsi, .LC82[rip]	#,
 15231      000000
 15232 0772 BF010000 		mov	edi, 1	#,
 15232      00
 15233 0777 B8030000 		mov	eax, 3	#,
 15233      00
 15234 077c C57B116C 		vmovsd	QWORD PTR 48[rsp], xmm13	# %sfp, _111
 15234      2430
 15235 0782 C57B114C 		vmovsd	QWORD PTR 8[rsp], xmm9	# %sfp, elapsed_time
 15235      2408
 15236              	.LVL999:
 15237              		.loc 3 107 10 discriminator 1 view .LVU4924
 15238 0788 C4C10B5E 		vdivsd	xmm1, xmm14, xmm9	#, tmp531, elapsed_time
 15238      C9
 15239 078d E8000000 		call	__printf_chk@PLT	#
 15239      00
 15240              	.LVL1000:
 15241              		.loc 3 107 10 discriminator 1 view .LVU4925
 15242              	.LBE1091:
 15243              	.LBE1092:
 961:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 15244              		.loc 1 961 9 is_stmt 1 discriminator 1 view .LVU4926
 15245              		.loc 1 961 20 discriminator 1 view .LVU4927
GAS LISTING /tmp/ccG38KJh.s 			page 405


 15246              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 15247              		.loc 1 961 23 is_stmt 0 discriminator 1 view .LVU4928
 15248 0792 83BC248C 		cmp	DWORD PTR 140[rsp], 0	# option_verboselevel,
 15248      00000000 
 15249 079a 0F8E50FE 		jle	.L1355	#,
 15249      FFFF
 15250 07a0 4983FC01 		cmp	r12, 1	# threads,
 15251 07a4 0F8646FE 		jbe	.L1355	#,
 15251      FFFF
 15252              		.loc 1 961 40 is_stmt 1 discriminator 2 view .LVU4929
 15253              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 15254              		.loc 1 961 276 is_stmt 0 discriminator 2 view .LVU4930
 15255 07aa 4D85E4   		test	r12, r12	# threads
 15256 07ad C57B107C 		vmovsd	xmm15, QWORD PTR 8[rsp]	# elapsed_time, %sfp
 15256      2408
 15257 07b3 C5FB106C 		vmovsd	xmm5, QWORD PTR 48[rsp]	# _111, %sfp
 15257      2430
 15258 07b9 0F886901 		js	.L1359	#,
 15258      0000
 15259 07bf C5C157FF 		vxorpd	xmm7, xmm7, xmm7	# tmp827
 15260 07c3 C4C1C32A 		vcvtsi2sd	xmm3, xmm7, r12	# tmp661, tmp827, threads
 15260      DC
 15261              	.L1360:
 15262              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 15263              		.loc 1 961 222 discriminator 2 view .LVU4931
 15264 07c8 C5FB1084 		vmovsd	xmm0, QWORD PTR 152[rsp]	# option_max_time.77_124, option_max_time
 15264      24980000 
 15264      00
 15265              	.LVL1001:
 15266              	.LBB1093:
 15267              	.LBI1093:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15268              		.loc 3 105 1 is_stmt 1 discriminator 2 view .LVU4932
 15269              	.LBB1094:
 15270              		.loc 3 107 3 discriminator 2 view .LVU4933
 15271              	.LBE1094:
 15272              	.LBE1093:
 15273              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 15274              		.loc 1 961 276 is_stmt 0 discriminator 2 view .LVU4934
 15275 07d1 C4C16359 		vmulsd	xmm6, xmm3, xmm15	# _121, tmp537, elapsed_time
 15275      F7
 15276              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 15277              		.loc 1 961 222 discriminator 2 view .LVU4935
 15278 07d6 C5D359C8 		vmulsd	xmm1, xmm5, xmm0	# tmp542, _111, option_max_time.77_124
 15279              	.LBB1096:
 15280              	.LBB1095:
 15281              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15282              		.loc 3 107 10 discriminator 2 view .LVU4936
 15283 07da 4C89E2   		mov	rdx, r12	#, threads
 15284 07dd 488D3500 		lea	rsi, .LC83[rip]	#,
 15284      000000
 15285 07e4 BF010000 		mov	edi, 1	#,
 15285      00
 15286 07e9 C5D35ED6 		vdivsd	xmm2, xmm5, xmm6	#, _111, _121
 15287 07ed B8030000 		mov	eax, 3	#,
 15287      00
 15288 07f2 C5F35ECE 		vdivsd	xmm1, xmm1, xmm6	#, tmp542, _121
GAS LISTING /tmp/ccG38KJh.s 			page 406


 15289 07f6 E8000000 		call	__printf_chk@PLT	#
 15289      00
 15290              	.LVL1002:
 15291 07fb E9F0FDFF 		jmp	.L1355	#
 15291      FF
 15292              	.LVL1003:
 15293              	.L1361:
 15294              		.loc 3 107 10 discriminator 2 view .LVU4937
 15295              	.LBE1095:
 15296              	.LBE1096:
 15297              	.LBE1097:
 15298              	.LBE1099:
 962:sieve_extend.c ****     #ifdef _OPENMP
 963:sieve_extend.c ****     }
 964:sieve_extend.c ****     #endif
 965:sieve_extend.c **** 
 966:sieve_extend.c ****     // show results for --show command line option
 967:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 15299              		.loc 1 967 5 is_stmt 1 view .LVU4938
 15300              	# sieve_extend.c:967:     if (option_showMaxFactor > 0) {
 15301              		.loc 1 967 8 is_stmt 0 view .LVU4939
 15302 0800 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 15302      A8000000 
 15302      00
 15303 0809 7445     		je	.L1350	#,
 15304              	.LBB1100:
 968:sieve_extend.c ****         printf("Show result set:\n");
 15305              		.loc 1 968 9 is_stmt 1 view .LVU4940
 15306              	.LVL1004:
 15307              	.LBB1101:
 15308              	.LBI1101:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15309              		.loc 3 105 1 view .LVU4941
 15310              	.LBB1102:
 15311              		.loc 3 107 3 view .LVU4942
 15312              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15313              		.loc 3 107 10 is_stmt 0 view .LVU4943
 15314 080b 488D3D00 		lea	rdi, .LC84[rip]	#,
 15314      000000
 15315 0812 E8000000 		call	puts@PLT	#
 15315      00
 15316              	.LVL1005:
 15317              		.loc 3 107 10 view .LVU4944
 15318              	.LBE1102:
 15319              	.LBE1101:
 969:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 15320              		.loc 1 969 9 is_stmt 1 view .LVU4945
 15321              	# sieve_extend.c:969:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 15322              		.loc 1 969 33 is_stmt 0 view .LVU4946
 15323 0817 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.80_130, option_maxFactor
 15323      A0000000 
 15324 081f 4889FE   		mov	rsi, rdi	#, option_maxFactor.80_130
 15325 0822 E8000000 		call	sieve_shake	#
 15325      00
 15326              	.LVL1006:
 15327              	# sieve_extend.c:970:         show_primes(sieve, option_showMaxFactor);
 970:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
GAS LISTING /tmp/ccG38KJh.s 			page 407


 15328              		.loc 1 970 9 view .LVU4947
 15329 0827 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 15329      A8000000 
 15330              	# sieve_extend.c:969:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 969:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 15331              		.loc 1 969 33 view .LVU4948
 15332 082f 4989C5   		mov	r13, rax	# sieve, tmp657
 15333              	.LVL1007:
 15334              		.loc 1 970 9 is_stmt 1 view .LVU4949
 15335 0832 4889C7   		mov	rdi, rax	#, sieve
 15336 0835 488D7008 		lea	rsi, 8[rax]	# tmp545,
 15337 0839 E8000000 		call	show_primes.isra.0	#
 15337      00
 15338              	.LVL1008:
 971:sieve_extend.c ****         sieve_delete(sieve);
 15339              		.loc 1 971 9 view .LVU4950
 15340              	.LBB1103:
 15341              	.LBI1103:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 15342              		.loc 1 115 13 view .LVU4951
 15343              	.LBB1104:
 116:sieve_extend.c ****     free(sieve);
 15344              		.loc 1 116 5 view .LVU4952
 15345 083e 498B7D00 		mov	rdi, QWORD PTR 0[r13]	#, sieve_200->bitstorage
 15346 0842 E8000000 		call	free@PLT	#
 15346      00
 15347              	.LVL1009:
 117:sieve_extend.c **** }
 15348              		.loc 1 117 5 view .LVU4953
 15349 0847 4C89EF   		mov	rdi, r13	#, sieve
 15350 084a E8000000 		call	free@PLT	#
 15350      00
 15351              	.LVL1010:
 15352 084f 90       		.p2align 4,,10
 15353              		.p2align 3
 15354              	.L1350:
 117:sieve_extend.c **** }
 15355              		.loc 1 117 5 is_stmt 0 view .LVU4954
 15356              	.LBE1104:
 15357              	.LBE1103:
 15358              	.LBE1100:
 15359              	.LBB1105:
 15360              	.LBB1070:
 15361              	.LBB1067:
 15362              	.LBB1060:
 908:sieve_extend.c ****             }
 15363              		.loc 1 908 29 is_stmt 1 discriminator 1 view .LVU4955
 15364              	.LBE1060:
 15365              	.LBE1067:
 15366              	.LBE1070:
 15367              	.LBE1105:
 15368              	# sieve_extend.c:973: }
 972:sieve_extend.c ****     }
 973:sieve_extend.c **** }
 15369              		.loc 1 973 1 is_stmt 0 discriminator 1 view .LVU4956
 15370 0850 488B8424 		mov	rax, QWORD PTR 280[rsp]	# tmp719, D.7838
 15370      18010000 
GAS LISTING /tmp/ccG38KJh.s 			page 408


 15371 0858 64483304 		xor	rax, QWORD PTR fs:40	# tmp719, MEM[(<address-space-1> long unsigned int *)40B]
 15371      25280000 
 15371      00
 15372 0861 0F85570B 		jne	.L1441	#,
 15372      0000
 15373              	# sieve_extend.c:973: }
 15374              		.loc 1 973 1 view .LVU4957
 15375 0867 4881C428 		add	rsp, 296	#,
 15375      010000
 15376              		.cfi_remember_state
 15377              		.cfi_def_cfa_offset 56
 15378 086e 5B       		pop	rbx	#
 15379              		.cfi_def_cfa_offset 48
 15380 086f 5D       		pop	rbp	#
 15381              		.cfi_def_cfa_offset 40
 15382 0870 415C     		pop	r12	#
 15383              		.cfi_def_cfa_offset 32
 15384 0872 415D     		pop	r13	#
 15385              		.cfi_def_cfa_offset 24
 15386 0874 415E     		pop	r14	#
 15387              		.cfi_def_cfa_offset 16
 15388 0876 31C0     		xor	eax, eax	#
 15389 0878 415F     		pop	r15	#
 15390              		.cfi_def_cfa_offset 8
 15391 087a C3       		ret	
 15392              	.LVL1011:
 15393              	.L1439:
 15394              		.cfi_restore_state
 15395              	.LBB1106:
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 15396              		.loc 1 865 46 is_stmt 1 discriminator 1 view .LVU4958
 15397              	# sieve_extend.c:865:             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 865:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 15398              		.loc 1 865 61 is_stmt 0 discriminator 1 view .LVU4959
 15399 087b 448B1C24 		mov	r11d, DWORD PTR [rsp]	# max_threads, %sfp
 15400 087f 44899C24 		mov	DWORD PTR 148[rsp], r11d	# option_threads, max_threads
 15400      94000000 
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 15401              		.loc 1 868 13 is_stmt 1 discriminator 1 view .LVU4960
 15402              	# sieve_extend.c:868:             if (option_threads <1)  option_threads = 1;
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 15403              		.loc 1 868 16 is_stmt 0 discriminator 1 view .LVU4961
 15404 0887 4585DB   		test	r11d, r11d	# max_threads
 15405 088a 0F8F5CFC 		jg	.L1300	#,
 15405      FFFF
 15406              	.L1299:
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 15407              		.loc 1 868 37 is_stmt 1 view .LVU4962
 15408              	# sieve_extend.c:868:             if (option_threads <1)  option_threads = 1;
 868:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 15409              		.loc 1 868 52 is_stmt 0 view .LVU4963
 15410 0890 C7842494 		mov	DWORD PTR 148[rsp], 1	# option_threads,
 15410      00000001 
 15410      000000
 15411 089b E936FCFF 		jmp	.L1301	#
 15411      FF
 15412              	.L1296:
GAS LISTING /tmp/ccG38KJh.s 			page 409


 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15413              		.loc 1 875 14 is_stmt 1 view .LVU4964
 15414              	# sieve_extend.c:875:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15415              		.loc 1 875 18 is_stmt 0 view .LVU4965
 15416 08a0 31C0     		xor	eax, eax	#
 15417 08a2 488D9424 		lea	rdx, 160[rsp]	# tmp550,
 15417      A0000000 
 15418 08aa 488D3500 		lea	rsi, .LC50[rip]	#,
 15418      000000
 15419 08b1 4C89C7   		mov	rdi, r8	#, _4
 15420 08b4 E8000000 		call	__isoc99_sscanf@PLT	#
 15420      00
 15421              	.LVL1012:
 15422              	# sieve_extend.c:875:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15423              		.loc 1 875 17 view .LVU4966
 15424 08b9 FFC8     		dec	eax	# tmp653
 15425 08bb 0F8447F8 		je	.L1284	#,
 15425      FFFF
 876:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 15426              		.loc 1 876 13 is_stmt 1 view .LVU4967
 15427              	.LVL1013:
 15428              	.LBB1014:
 15429              	.LBI1014:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15430              		.loc 3 98 1 view .LVU4968
 15431              	.LBB1015:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15432              		.loc 3 100 3 view .LVU4969
 15433              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15434              		.loc 3 100 10 is_stmt 0 view .LVU4970
 15435 08c1 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 15436 08c4 488D1500 		lea	rdx, .LC59[rip]	#,
 15436      000000
 15437 08cb E9830000 		jmp	.L1427	#
 15437      00
 15438              	.LVL1014:
 15439              	.L1302:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15440              		.loc 3 100 10 view .LVU4971
 15441 08d0 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, _65
 15441      10
 15442              	.LBE1015:
 15443              	.LBE1014:
 867:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 15444              		.loc 1 867 18 is_stmt 1 view .LVU4972
 15445              	# sieve_extend.c:867:             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprint
 867:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 15446              		.loc 1 867 22 is_stmt 0 view .LVU4973
 15447 08d5 488D9424 		lea	rdx, 148[rsp]	# tmp411,
 15447      94000000 
 15448 08dd 31C0     		xor	eax, eax	#
 15449 08df 488D3500 		lea	rsi, .LC35[rip]	#,
 15449      000000
 15450 08e6 4C89FF   		mov	rdi, r15	#, _66
GAS LISTING /tmp/ccG38KJh.s 			page 410


 15451 08e9 E8000000 		call	__isoc99_sscanf@PLT	#
 15451      00
 15452              	.LVL1015:
 15453              	# sieve_extend.c:867:             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprint
 867:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 15454              		.loc 1 867 21 view .LVU4974
 15455 08ee FFC8     		dec	eax	# tmp652
 15456 08f0 4C8B4C24 		mov	r9, QWORD PTR 16[rsp]	# _65, %sfp
 15456      10
 15457 08f5 0F84CDFB 		je	.L1303	#,
 15457      FFFF
 867:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 15458              		.loc 1 867 72 is_stmt 1 discriminator 1 view .LVU4975
 15459              	.LVL1016:
 15460              	.LBB1016:
 15461              	.LBI1016:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15462              		.loc 3 98 1 discriminator 1 view .LVU4976
 15463              	.LBB1017:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15464              		.loc 3 100 3 discriminator 1 view .LVU4977
 15465              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15466              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU4978
 15467 08fb 498B09   		mov	rcx, QWORD PTR [r9]	#, *_65
 15468 08fe 488D1500 		lea	rdx, .LC57[rip]	#,
 15468      000000
 15469 0905 EB4C     		jmp	.L1427	#
 15470              	.LVL1017:
 15471              	.L1356:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15472              		.loc 3 100 10 discriminator 1 view .LVU4979
 15473              	.LBE1017:
 15474              	.LBE1016:
 15475              	.LBE1106:
 15476              	.LBB1107:
 15477              	.LBB1098:
 15478              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 15479              		.loc 1 960 20 discriminator 1 view .LVU4980
 15480 0907 4C89FF   		mov	rdi, r15	# tmp528, passes
 15481 090a 48D1EF   		shr	rdi	# tmp528
 15482 090d 4183E701 		and	r15d, 1	# passes,
 15483              	.LVL1018:
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 15484              		.loc 1 960 20 discriminator 1 view .LVU4981
 15485 0911 4909FF   		or	r15, rdi	# tmp633, tmp528
 15486 0914 C4412157 		vxorpd	xmm11, xmm11, xmm11	# tmp826
 15486      DB
 15487 0919 C441A32A 		vcvtsi2sd	xmm12, xmm11, r15	# tmp660, tmp826, tmp633
 15487      E7
 15488 091e C4411B58 		vaddsd	xmm13, xmm12, xmm12	# _111, tmp527, tmp527
 15488      EC
 15489 0923 E931FEFF 		jmp	.L1357	#
 15489      FF
 15490              	.LVL1019:
 15491              	.L1359:
GAS LISTING /tmp/ccG38KJh.s 			page 411


 15492              	# sieve_extend.c:961:         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (
 961:sieve_extend.c ****     #ifdef _OPENMP
 15493              		.loc 1 961 276 discriminator 2 view .LVU4982
 15494 0928 4C89E6   		mov	rsi, r12	# tmp539, threads
 15495 092b 4C89E0   		mov	rax, r12	# tmp540, threads
 15496 092e 48D1EE   		shr	rsi	# tmp539
 15497 0931 83E001   		and	eax, 1	# tmp540,
 15498 0934 4809C6   		or	rsi, rax	# tmp634, tmp540
 15499 0937 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# tmp830
 15500 093b C4E1DB2A 		vcvtsi2sd	xmm0, xmm4, rsi	# tmp662, tmp830, tmp634
 15500      C6
 15501 0940 C5FB58D8 		vaddsd	xmm3, xmm0, xmm0	# tmp537, tmp538, tmp538
 15502 0944 E97FFEFF 		jmp	.L1360	#
 15502      FF
 15503              	.LVL1020:
 15504              	.L1282:
 961:sieve_extend.c ****     #ifdef _OPENMP
 15505              		.loc 1 961 276 discriminator 2 view .LVU4983
 15506              	.LBE1098:
 15507              	.LBE1107:
 15508              	.LBB1108:
 836:sieve_extend.c ****             }
 15509              		.loc 1 836 17 is_stmt 1 view .LVU4984
 15510              	.LBB1018:
 15511              	.LBI1018:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15512              		.loc 3 98 1 view .LVU4985
 15513              	.LBB1019:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15514              		.loc 3 100 3 view .LVU4986
 15515              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15516              		.loc 3 100 10 is_stmt 0 view .LVU4987
 15517 0949 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_12
 15518 094c 488D1500 		lea	rdx, .LC36[rip]	#,
 15518      000000
 15519              	.LVL1021:
 15520              	.L1427:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15521              		.loc 3 100 10 view .LVU4988
 15522              	.LBE1019:
 15523              	.LBE1018:
 15524              	.LBB1020:
 15525              	.LBB1021:
 15526 0953 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 15526      000000
 15527 095a BE010000 		mov	esi, 1	#,
 15527      00
 15528 095f 31C0     		xor	eax, eax	#
 15529 0961 E8000000 		call	__fprintf_chk@PLT	#
 15529      00
 15530              	.LVL1022:
 15531              	.L1428:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15532              		.loc 3 100 10 view .LVU4989
 15533              	.LBE1021:
 15534              	.LBE1020:
GAS LISTING /tmp/ccG38KJh.s 			page 412


 844:sieve_extend.c ****             }
 15535              		.loc 1 844 80 is_stmt 1 view .LVU4990
 15536 0966 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_228(D)
 15537 096a E8000000 		call	usage	#
 15537      00
 15538              	.LVL1023:
 15539              	.L1440:
 844:sieve_extend.c ****             }
 15540              		.loc 1 844 80 is_stmt 0 view .LVU4991
 15541              	.LBE1108:
 15542              	.LBB1109:
 918:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15543              		.loc 1 918 9 is_stmt 1 view .LVU4992
 15544              	# sieve_extend.c:918:         tuning_result_type tuning_result = tune(option_tunelevel, option_maxF
 918:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15545              		.loc 1 918 44 is_stmt 0 view .LVU4993
 15546 096f 448B8C24 		mov	r9d, DWORD PTR 140[rsp]	# option_verboselevel.60_94, option_verboselevel
 15546      8C000000 
 15547 0977 488B9424 		mov	rdx, QWORD PTR 160[rsp]	# option_maxFactor.62_97, option_maxFactor
 15547      A0000000 
 15548 097f FFC8     		dec	eax	#
 15549 0981 44894C24 		mov	DWORD PTR 8[rsp], r9d	# %sfp, option_verboselevel.60_94
 15549      08
 15550 0986 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, option_maxFactor.62_97
 15550      58
 15551              	.LVL1024:
 15552              	.LBB1110:
 15553              	.LBI1110:
 681:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 15554              		.loc 1 681 27 is_stmt 1 view .LVU4994
 15555              	.LBB1111:
 682:sieve_extend.c **** 
 15556              		.loc 1 682 5 view .LVU4995
 684:sieve_extend.c ****     best_blocksize_bits = 0;
 15557              		.loc 1 684 5 view .LVU4996
 685:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 15558              		.loc 1 685 5 view .LVU4997
 686:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 15559              		.loc 1 686 5 view .LVU4998
 687:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 15560              		.loc 1 687 5 view .LVU4999
 688:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 15561              		.loc 1 688 5 view .LVU5000
 689:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 15562              		.loc 1 689 5 view .LVU5001
 690:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 15563              		.loc 1 690 5 view .LVU5002
 691:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 15564              		.loc 1 691 5 view .LVU5003
 692:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 15565              		.loc 1 692 5 view .LVU5004
 693:sieve_extend.c ****     double sample_duration = default_sample_duration;
 15566              		.loc 1 693 5 view .LVU5005
 694:sieve_extend.c **** 
 15567              		.loc 1 694 5 view .LVU5006
 697:sieve_extend.c ****         case 1:
 15568              		.loc 1 697 5 view .LVU5007
GAS LISTING /tmp/ccG38KJh.s 			page 413


 15569 098b 83F802   		cmp	eax, 2	# _297,
 15570 098e 0F87E308 		ja	.L1364	#,
 15570      0000
 15571 0994 4C8D1500 		lea	r10, CSWTCH.143[rip]	# tmp427,
 15571      000000
 15572 099b 488D0D00 		lea	rcx, CSWTCH.144[rip]	# tmp429,
 15572      000000
 15573 09a2 4C8D2D00 		lea	r13, CSWTCH.145[rip]	# tmp431,
 15573      000000
 15574 09a9 498B3CC2 		mov	rdi, QWORD PTR [r10+rax*8]	# mediumstep_faster_steps, CSWTCH.143
 15575 09ad 488B34C1 		mov	rsi, QWORD PTR [rcx+rax*8]	# vectorstep_faster_steps, CSWTCH.144
 15576 09b1 4D8B74C5 		mov	r14, QWORD PTR 0[r13+rax*8]	# freebits_steps, CSWTCH.145
 15576      00
 15577              	.LVL1025:
 697:sieve_extend.c ****         case 1:
 15578              		.loc 1 697 5 is_stmt 0 view .LVU5008
 15579 09b6 488D2D00 		lea	rbp, CSWTCH.146[rip]	# tmp433,
 15579      000000
 15580              	.LVL1026:
 697:sieve_extend.c ****         case 1:
 15581              		.loc 1 697 5 view .LVU5009
 15582 09bd C5FB107C 		vmovsd	xmm7, QWORD PTR 0[rbp+rax*8]	# sample_duration, CSWTCH.146
 15582      C500
 15583 09c3 4C8D1D00 		lea	r11, CSWTCH.142[rip]	# tmp425,
 15583      000000
 15584 09ca 48897C24 		mov	QWORD PTR 112[rsp], rdi	# %sfp, mediumstep_faster_steps
 15584      70
 15585 09cf 48897424 		mov	QWORD PTR 104[rsp], rsi	# %sfp, vectorstep_faster_steps
 15585      68
 15586 09d4 4C897424 		mov	QWORD PTR 64[rsp], r14	# %sfp, freebits_steps
 15586      40
 15587 09d9 48C74424 		mov	QWORD PTR 72[rsp], 16	# %sfp,
 15587      48100000 
 15587      00
 15588 09e2 498B1CC3 		mov	rbx, QWORD PTR [r11+rax*8]	# smallstep_faster_steps, CSWTCH.142
 15589 09e6 C5FB117C 		vmovsd	QWORD PTR 80[rsp], xmm7	# %sfp, sample_duration
 15589      2450
 15590              	.L1317:
 15591              	# sieve_extend.c:724:     verbose(2) printf("\n");
 724:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 15592              		.loc 1 724 5 view .LVU5010
 15593 09ec 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 15593      01
 15594 09f1 448BBC24 		mov	r15d, DWORD PTR 148[rsp]	# pretmp_539, option_threads
 15594      94000000 
 15595              	.LVL1027:
 724:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 15596              		.loc 1 724 5 is_stmt 1 view .LVU5011
 15597 09f9 0F8FB408 		jg	.L1442	#,
 15597      0000
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15598              		.loc 1 725 5 view .LVU5012
 15599 09ff 751F     		jne	.L1319	#,
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15600              		.loc 1 725 21 view .LVU5013
 15601              	.LVL1028:
 15602              	.LBB1112:
GAS LISTING /tmp/ccG38KJh.s 			page 414


 15603              	.LBI1112:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15604              		.loc 3 105 1 view .LVU5014
 15605              	.LBB1113:
 15606              		.loc 3 107 3 view .LVU5015
 15607              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15608              		.loc 3 107 10 is_stmt 0 view .LVU5016
 15609 0a01 BF010000 		mov	edi, 1	#,
 15609      00
 15610 0a06 488D3500 		lea	rsi, .LC66[rip]	#,
 15610      000000
 15611 0a0d 31C0     		xor	eax, eax	#
 15612 0a0f E8000000 		call	__printf_chk@PLT	#
 15612      00
 15613              	.LVL1029:
 15614              		.loc 3 107 10 view .LVU5017
 15615              	.LBE1113:
 15616              	.LBE1112:
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15617              		.loc 1 725 42 is_stmt 1 view .LVU5018
 15618 0a14 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 15618      000000
 15619 0a1b E8000000 		call	fflush@PLT	#
 15619      00
 15620              	.LVL1030:
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 15621              		.loc 1 726 5 view .LVU5019
 15622              	.L1319:
 15623              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15624              		.loc 1 727 33 is_stmt 0 view .LVU5020
 15625 0a20 41BC4000 		mov	r12d, 64	# tmp439,
 15625      0000
 15626              	.LVL1031:
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15627              		.loc 1 727 33 view .LVU5021
 15628 0a26 4C89E0   		mov	rax, r12	# tmp437, tmp439
 15629 0a29 31D2     		xor	edx, edx	# tmp438
 15630 0a2b 48F7F3   		div	rbx	# smallstep_faster_steps
 15631              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15632              		.loc 1 727 254 view .LVU5022
 15633 0a2e 31D2     		xor	edx, edx	# tmp447
 15634 0a30 4D63C7   		movsx	r8, r15d	# _540, pretmp_539
 15635 0a33 4C894424 		mov	QWORD PTR 96[rsp], r8	# %sfp, _540
 15635      60
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15636              		.loc 1 727 5 is_stmt 1 view .LVU5023
 15637              	.LVL1032:
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15638              		.loc 1 728 5 view .LVU5024
 15639              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15640              		.loc 1 728 41 is_stmt 0 view .LVU5025
 15641 0a38 31ED     		xor	ebp, ebp	# tuning_results
 15642              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
GAS LISTING /tmp/ccG38KJh.s 			page 415


 15643              		.loc 1 727 83 view .LVU5026
 15644 0a3a 488D7801 		lea	rdi, 1[rax]	# tmp444,
 15645              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15646              		.loc 1 727 254 view .LVU5027
 15647 0a3e B8001000 		mov	eax, 4096	# tmp448,
 15647      00
 15648 0a43 48F77424 		div	QWORD PTR 64[rsp]	# %sfp
 15648      40
 15649              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15650              		.loc 1 727 90 view .LVU5028
 15651 0a48 31D2     		xor	edx, edx	# tmp456
 15652              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15653              		.loc 1 728 41 view .LVU5029
 15654 0a4a 480FAFF8 		imul	rdi, rax	# tmp453, tmp446
 15655              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15656              		.loc 1 727 90 view .LVU5030
 15657 0a4e 4C89E0   		mov	rax, r12	# tmp439, tmp439
 15658 0a51 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 15658      70
 15659              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15660              		.loc 1 727 148 view .LVU5031
 15661 0a56 31D2     		xor	edx, edx	# tmp466
 15662              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15663              		.loc 1 727 141 view .LVU5032
 15664 0a58 48FFC0   		inc	rax	# tmp462
 15665              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15666              		.loc 1 728 41 view .LVU5033
 15667 0a5b 480FAFF8 		imul	rdi, rax	# tmp463, tmp462
 15668              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15669              		.loc 1 727 148 view .LVU5034
 15670 0a5f B8000100 		mov	eax, 256	# tmp467,
 15670      00
 15671 0a64 48F77424 		div	QWORD PTR 104[rsp]	# %sfp
 15671      68
 15672              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15673              		.loc 1 727 201 view .LVU5035
 15674 0a69 48FFC0   		inc	rax	# tmp472
 15675              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15676              		.loc 1 728 41 view .LVU5036
 15677 0a6c 480FAFF8 		imul	rdi, rax	# tmp473, tmp472
 15678 0a70 48C1E708 		sal	rdi, 8	# tmp473,
 15679 0a74 E8000000 		call	malloc@PLT	#
 15679      00
 15680              	.LVL1033:
 15681 0a79 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp656
 15681      18
 15682              	.LVL1034:
GAS LISTING /tmp/ccG38KJh.s 			page 416


 729:sieve_extend.c ****     counter_t tuning_result_index=0;
 15683              		.loc 1 729 5 is_stmt 1 view .LVU5037
 730:sieve_extend.c ****     
 15684              		.loc 1 730 5 view .LVU5038
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15685              		.loc 1 732 5 view .LVU5039
 15686              	.LBB1114:
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15687              		.loc 1 732 10 view .LVU5040
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15688              		.loc 1 732 42 view .LVU5041
 15689              	.LBB1115:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15690              		.loc 1 733 62 view .LVU5042
 15691              	.LBE1115:
 15692              	.LBE1114:
 15693              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15694              		.loc 1 728 41 is_stmt 0 view .LVU5043
 15695 0a7e 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 15695      30000000 
 15695      00
 15696 0a87 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 15696      28000000 
 15696      00
 15697 0a90 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 15697      20000000 
 15697      00
 15698 0a99 48C70424 		mov	QWORD PTR [rsp], 0	# %sfp,
 15698      00000000 
 15699 0aa1 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# best_avg
 15700 0aa5 C5FB1144 		vmovsd	QWORD PTR 16[rsp], xmm0	# %sfp, best_avg
 15700      2410
 15701              	.LVL1035:
 15702 0aab 0F1F4400 		.p2align 4,,10
 15702      00
 15703              		.p2align 3
 15704              	.L1320:
 15705              	.LBB1155:
 15706              	.LBB1152:
 15707              	.LBB1116:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15708              		.loc 1 734 67 is_stmt 1 view .LVU5044
 15709              	.LBB1117:
 15710              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15711              		.loc 1 735 32 is_stmt 0 view .LVU5045
 15712 0ab0 4C8B3424 		mov	r14, QWORD PTR [rsp]	# vectorstep_faster, %sfp
 15713              	.LVL1036:
 15714              		.p2align 4,,10
 15715 0ab4 0F1F4000 		.p2align 3
 15716              	.L1333:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15717              		.loc 1 735 50 is_stmt 1 view .LVU5046
 15718              	.LBB1118:
 15719              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
GAS LISTING /tmp/ccG38KJh.s 			page 417


 15720              		.loc 1 736 36 is_stmt 0 view .LVU5047
 15721 0ab8 C744243C 		mov	DWORD PTR 60[rsp], 6	# %sfp,
 15721      06000000 
 15722              	.LBE1118:
 15723              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15724              		.loc 1 735 32 view .LVU5048
 15725 0ac0 41BD0001 		mov	r13d, 256	# blocksize_kb,
 15725      0000
 15726              	.LVL1037:
 15727 0ac6 662E0F1F 		.p2align 4,,10
 15727      84000000 
 15727      0000
 15728              		.p2align 3
 15729              	.L1331:
 15730              	.LBB1145:
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15731              		.loc 1 736 49 is_stmt 1 view .LVU5049
 15732 0ad0 4C6BCD68 		imul	r9, rbp, 104	# tmp491, tuning_results,
 15733 0ad4 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# tuning_result, %sfp
 15733      18
 15734              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15735              		.loc 1 736 134 is_stmt 0 view .LVU5050
 15736 0ad9 4C89EB   		mov	rbx, r13	# ivtmp.730, blocksize_kb
 15737 0adc 48C1E30D 		sal	rbx, 13	# ivtmp.730,
 15738 0ae0 4F8D3C0B 		lea	r15, [r11+r9]	# ivtmp.729,
 15739              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15740              		.loc 1 736 36 view .LVU5051
 15741 0ae4 4531E4   		xor	r12d, r12d	# free_bits
 15742 0ae7 EB52     		jmp	.L1329	#
 15743              	.LVL1038:
 15744 0ae9 0F1F8000 		.p2align 4,,10
 15744      000000
 15745              		.p2align 3
 15746              	.L1326:
 15747              	.LBB1119:
 754:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 15748              		.loc 1 754 29 is_stmt 1 view .LVU5052
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15749              		.loc 1 755 29 view .LVU5053
 756:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 15750              		.loc 1 756 29 view .LVU5054
 757:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 15751              		.loc 1 757 29 view .LVU5055
 758:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 15752              		.loc 1 758 29 view .LVU5056
 759:sieve_extend.c ****                         }
 15753              		.loc 1 759 29 view .LVU5057
 15754              	# sieve_extend.c:759:                             if (option_verboselevel >=2) { printf(".(>)"); tu
 759:sieve_extend.c ****                         }
 15755              		.loc 1 759 32 is_stmt 0 view .LVU5058
 15756 0af0 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 15756      01
 15757 0af5 0F8FF503 		jg	.L1443	#,
 15757      0000
GAS LISTING /tmp/ccG38KJh.s 			page 418


 759:sieve_extend.c ****                         }
 15758              		.loc 1 759 32 view .LVU5059
 15759 0afb 488B3424 		mov	rsi, QWORD PTR [rsp]	# mediumstep_faster, %sfp
 15760 0aff 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, vectorstep_faster
 15760      30
 15761 0b04 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, mediumstep_faster
 15761      28
 15762              	# sieve_extend.c:755:                             best_blocksize_bits = blocksize_bits;
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15763              		.loc 1 755 49 view .LVU5060
 15764 0b09 48895C24 		mov	QWORD PTR 32[rsp], rbx	# %sfp, ivtmp.730
 15764      20
 15765              	# sieve_extend.c:754:                             best_avg = tuning_result[tuning_result_index].avg
 754:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 15766              		.loc 1 754 38 view .LVU5061
 15767 0b0e C5FB115C 		vmovsd	QWORD PTR 16[rsp], xmm3	# %sfp, _344
 15767      2410
 15768              	.LVL1039:
 15769              	.L1321:
 762:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 15770              		.loc 1 762 25 is_stmt 1 view .LVU5062
 763:sieve_extend.c ****                     }
 15771              		.loc 1 763 25 view .LVU5063
 15772 0b14 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 15772      01
 15773 0b19 0F84A903 		je	.L1444	#,
 15773      0000
 15774              	.L1324:
 763:sieve_extend.c ****                     }
 15775              		.loc 1 763 25 is_stmt 0 view .LVU5064
 15776              	.LBE1119:
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15777              		.loc 1 736 141 is_stmt 1 view .LVU5065
 15778              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15779              		.loc 1 736 151 is_stmt 0 view .LVU5066
 15780 0b1f 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# freebits_steps, %sfp
 15780      40
 15781 0b24 4983C768 		add	r15, 104	# ivtmp.729,
 15782 0b28 4901D4   		add	r12, rdx	# free_bits, freebits_steps
 15783              	.LVL1040:
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15784              		.loc 1 736 49 is_stmt 1 view .LVU5067
 15785 0b2b 4829D3   		sub	rbx, rdx	# ivtmp.730, freebits_steps
 15786              	.LVL1041:
 15787              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15788              		.loc 1 736 21 is_stmt 0 view .LVU5068
 15789 0b2e 4981FCFF 		cmp	r12, 4095	# free_bits,
 15789      0F0000
 15790 0b35 0F87DD00 		ja	.L1325	#,
 15790      0000
 15791              	.LVL1042:
 15792              	.L1329:
 15793              	.LBB1142:
 737:sieve_extend.c **** 
 15794              		.loc 1 737 25 is_stmt 1 view .LVU5069
GAS LISTING /tmp/ccG38KJh.s 			page 419


 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15795              		.loc 1 740 25 view .LVU5070
 15796              	# sieve_extend.c:750:                         tuning_result[tuning_result_index].threads = threads;
 750:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 15797              		.loc 1 750 68 is_stmt 0 view .LVU5071
 15798 0b3b 488B7C24 		mov	rdi, QWORD PTR 96[rsp]	# _540, %sfp
 15798      60
 15799              	# sieve_extend.c:741:                         tuning_result[tuning_result_index].maxints = maxints;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15800              		.loc 1 741 68 view .LVU5072
 15801 0b40 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# option_maxFactor.62_97, %sfp
 15801      58
 15802              	# sieve_extend.c:743:                         tuning_result[tuning_result_index].sample_max = sampl
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15803              		.loc 1 743 71 view .LVU5073
 15804 0b45 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	# sample_max, %sfp
 15804      48
 15805              	# sieve_extend.c:748:                         tuning_result[tuning_result_index].mediumstep_faster 
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 15806              		.loc 1 748 78 view .LVU5074
 15807 0b4a 4C8B0424 		mov	r8, QWORD PTR [rsp]	# mediumstep_faster, %sfp
 15808              	# sieve_extend.c:750:                         tuning_result[tuning_result_index].threads = threads;
 750:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 15809              		.loc 1 750 68 view .LVU5075
 15810 0b4e 49897F38 		mov	QWORD PTR 56[r15], rdi	# MEM[base: _625, offset: 56B], _540
 15811              	# sieve_extend.c:742:                         tuning_result[tuning_result_index].sample_duration = 
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15812              		.loc 1 742 76 view .LVU5076
 15813 0b52 C5FB106C 		vmovsd	xmm5, QWORD PTR 80[rsp]	# sample_duration, %sfp
 15813      2450
 15814              	# sieve_extend.c:741:                         tuning_result[tuning_result_index].maxints = maxints;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15815              		.loc 1 741 68 view .LVU5077
 15816 0b58 4D8917   		mov	QWORD PTR [r15], r10	# MEM[base: _625, offset: 0B], option_maxFactor.62_97
 15817              	# sieve_extend.c:743:                         tuning_result[tuning_result_index].sample_max = sampl
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15818              		.loc 1 743 71 view .LVU5078
 15819 0b5b 49894F40 		mov	QWORD PTR 64[r15], rcx	# MEM[base: _625, offset: 64B], sample_max
 15820              	# sieve_extend.c:744:                         tuning_result[tuning_result_index].blocksize_kb = blo
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 15821              		.loc 1 744 73 view .LVU5079
 15822 0b5f 4D896F10 		mov	QWORD PTR 16[r15], r13	# MEM[base: _625, offset: 16B], blocksize_kb
 15823              	# sieve_extend.c:745:                         tuning_result[tuning_result_index].free_bits = free_b
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15824              		.loc 1 745 70 view .LVU5080
 15825 0b63 4D896718 		mov	QWORD PTR 24[r15], r12	# MEM[base: _625, offset: 24B], free_bits
 15826              	# sieve_extend.c:746:                         tuning_result[tuning_result_index].blocksize_bits = b
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15827              		.loc 1 746 75 view .LVU5081
 15828 0b67 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _625, offset: 8B], ivtmp.730
 15829              	# sieve_extend.c:747:                         tuning_result[tuning_result_index].smallstep_faster =
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15830              		.loc 1 747 77 view .LVU5082
 15831 0b6b 49C74720 		mov	QWORD PTR 32[r15], 0	# MEM[base: _625, offset: 32B],
 15831      00000000 
 15832              	# sieve_extend.c:748:                         tuning_result[tuning_result_index].mediumstep_faster 
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
GAS LISTING /tmp/ccG38KJh.s 			page 420


 15833              		.loc 1 748 78 view .LVU5083
 15834 0b73 4D894728 		mov	QWORD PTR 40[r15], r8	# MEM[base: _625, offset: 40B], mediumstep_faster
 15835              	# sieve_extend.c:749:                         tuning_result[tuning_result_index].vectorstep_faster 
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 15836              		.loc 1 749 78 view .LVU5084
 15837 0b77 4D897730 		mov	QWORD PTR 48[r15], r14	# MEM[base: _625, offset: 48B], vectorstep_faster
 15838              	# sieve_extend.c:751:                         tune_benchmark(tuning_result, tuning_result_index);
 751:sieve_extend.c **** 
 15839              		.loc 1 751 25 view .LVU5085
 15840 0b7b 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	#, %sfp
 15840      18
 15841 0b80 4889EE   		mov	rsi, rbp	# tuning_results, tuning_results
 15842              	# sieve_extend.c:742:                         tuning_result[tuning_result_index].sample_duration = 
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15843              		.loc 1 742 76 view .LVU5086
 15844 0b83 C4C17B11 		vmovsd	QWORD PTR 72[r15], xmm5	# MEM[base: _625, offset: 72B], sample_duration
 15844      6F48
 15845              	# sieve_extend.c:751:                         tune_benchmark(tuning_result, tuning_result_index);
 751:sieve_extend.c **** 
 15846              		.loc 1 751 25 view .LVU5087
 15847 0b89 E8000000 		call	tune_benchmark	#
 15847      00
 15848              	.LVL1043:
 15849              	# sieve_extend.c:753:                         if ( tuning_result[tuning_result_index].avg > best_av
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15850              		.loc 1 753 64 view .LVU5088
 15851 0b8e C4C17B10 		vmovsd	xmm3, QWORD PTR 96[r15]	# _344, MEM[base: _625, offset: 96B]
 15851      5F60
 15852              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15853              		.loc 1 740 39 view .LVU5089
 15854 0b94 48FFC5   		inc	rbp	# tuning_results
 15855              	.LVL1044:
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15856              		.loc 1 741 25 is_stmt 1 view .LVU5090
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15857              		.loc 1 742 25 view .LVU5091
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15858              		.loc 1 743 25 view .LVU5092
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 15859              		.loc 1 744 25 view .LVU5093
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15860              		.loc 1 745 25 view .LVU5094
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15861              		.loc 1 746 25 view .LVU5095
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15862              		.loc 1 747 25 view .LVU5096
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 15863              		.loc 1 748 25 view .LVU5097
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 15864              		.loc 1 749 25 view .LVU5098
 750:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 15865              		.loc 1 750 25 view .LVU5099
 751:sieve_extend.c **** 
 15866              		.loc 1 751 25 view .LVU5100
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15867              		.loc 1 753 25 view .LVU5101
GAS LISTING /tmp/ccG38KJh.s 			page 421


 15868              	# sieve_extend.c:753:                         if ( tuning_result[tuning_result_index].avg > best_av
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15869              		.loc 1 753 28 is_stmt 0 view .LVU5102
 15870 0b97 C5F92F5C 		vcomisd	xmm3, QWORD PTR 16[rsp]	# _344, %sfp
 15870      2410
 15871 0b9d 0F874DFF 		ja	.L1326	#,
 15871      FFFF
 15872              	.L1327:
 761:sieve_extend.c ****                         tuning_result_index++;
 15873              		.loc 1 761 25 is_stmt 1 view .LVU5103
 15874              	# sieve_extend.c:761:                         if (option_verboselevel >= 3) { printf("...."); tunin
 761:sieve_extend.c ****                         tuning_result_index++;
 15875              		.loc 1 761 28 is_stmt 0 view .LVU5104
 15876 0ba3 837C2408 		cmp	DWORD PTR 8[rsp], 2	# %sfp,
 15876      02
 15877 0ba8 0F8E66FF 		jle	.L1321	#,
 15877      FFFF
 761:sieve_extend.c ****                         tuning_result_index++;
 15878              		.loc 1 761 57 is_stmt 1 view .LVU5105
 15879              	.LVL1045:
 15880              	.LBB1120:
 15881              	.LBI1120:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15882              		.loc 3 105 1 view .LVU5106
 15883              	.LBB1121:
 15884              		.loc 3 107 3 view .LVU5107
 15885              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15886              		.loc 3 107 10 is_stmt 0 view .LVU5108
 15887 0bae 488D3500 		lea	rsi, .LC69[rip]	#,
 15887      000000
 15888 0bb5 BF010000 		mov	edi, 1	#,
 15888      00
 15889 0bba 31C0     		xor	eax, eax	#
 15890 0bbc E8000000 		call	__printf_chk@PLT	#
 15890      00
 15891              	.LVL1046:
 15892              		.loc 3 107 10 view .LVU5109
 15893              	.LBE1121:
 15894              	.LBE1120:
 761:sieve_extend.c ****                         tuning_result_index++;
 15895              		.loc 1 761 73 is_stmt 1 view .LVU5110
 15896              	.LBB1122:
 15897              	.LBI1122:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15898              		.loc 1 673 20 view .LVU5111
 15899              	.LBB1123:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15900              		.loc 1 674 5 view .LVU5112
 15901              	.LBB1124:
 15902              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15903              		.loc 3 105 1 view .LVU5113
 15904              	.LBB1125:
 15905              		.loc 3 107 3 view .LVU5114
 15906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15907              		.loc 3 107 10 is_stmt 0 view .LVU5115
 15908 0bc1 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r15]	# MEM[base: _625, offset: 88B], MEM[base: _625, offset: 88B]
GAS LISTING /tmp/ccG38KJh.s 			page 422


 15908      4758
 15909 0bc7 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _625, offset: 16B], MEM[base: _625, offset: 16B]
 15910 0bcb 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _625, offset: 8B], MEM[base: _625, offset: 8B]
 15911 0bcf 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _625, offset: 64B]
 15912              		.cfi_def_cfa_offset 360
 15913              	.LVL1047:
 15914              		.loc 3 107 10 view .LVU5116
 15915 0bd3 488D3500 		lea	rsi, .LC68[rip]	#,
 15915      000000
 15916 0bda BF010000 		mov	edi, 1	#,
 15916      00
 15917 0bdf 41FF7750 		push	QWORD PTR 80[r15]	# MEM[base: _625, offset: 80B]
 15918              		.cfi_def_cfa_offset 368
 15919 0be3 B8030000 		mov	eax, 3	#,
 15919      00
 15920 0be8 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _625, offset: 48B]
 15921              		.cfi_def_cfa_offset 376
 15922 0bec 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _625, offset: 40B]
 15923              		.cfi_def_cfa_offset 384
 15924 0bf0 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r15]	#, MEM[base: _625, offset: 96B]
 15924      5760
 15925 0bf6 C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r15]	#, MEM[base: _625, offset: 72B]
 15925      4F48
 15926 0bfc 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _625, offset: 32B]
 15927 0c00 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _625, offset: 24B]
 15928 0c04 E8000000 		call	__printf_chk@PLT	#
 15928      00
 15929              	.LVL1048:
 15930              		.loc 3 107 10 view .LVU5117
 15931              	.LBE1125:
 15932              	.LBE1124:
 15933              	.LBE1123:
 15934              	.LBE1122:
 762:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 15935              		.loc 1 762 25 is_stmt 1 view .LVU5118
 763:sieve_extend.c ****                     }
 15936              		.loc 1 763 25 view .LVU5119
 15937              	.LBB1129:
 15938              	.LBB1128:
 15939              	.LBB1127:
 15940              	.LBB1126:
 15941              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15942              		.loc 3 107 10 is_stmt 0 view .LVU5120
 15943 0c09 4883C420 		add	rsp, 32	#,
 15944              		.cfi_def_cfa_offset 352
 15945              	.LVL1049:
 15946              		.loc 3 107 10 view .LVU5121
 15947 0c0d E90DFFFF 		jmp	.L1324	#
 15947      FF
 15948              	.LVL1050:
 15949              		.p2align 4,,10
 15950 0c12 660F1F44 		.p2align 3
 15950      0000
 15951              	.L1325:
 15952              		.loc 3 107 10 view .LVU5122
 15953              	.LBE1126:
 15954              	.LBE1127:
GAS LISTING /tmp/ccG38KJh.s 			page 423


 15955              	.LBE1128:
 15956              	.LBE1129:
 15957              	.LBE1142:
 15958              	.LBE1145:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15959              		.loc 1 735 67 is_stmt 1 view .LVU5123
 15960              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15961              		.loc 1 735 80 is_stmt 0 view .LVU5124
 15962 0c18 49D1ED   		shr	r13	# blocksize_kb
 15963              	.LVL1051:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15964              		.loc 1 735 50 is_stmt 1 view .LVU5125
 15965              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15966              		.loc 1 735 17 is_stmt 0 view .LVU5126
 15967 0c1b FF4C243C 		dec	DWORD PTR 60[rsp]	# %sfp
 15968 0c1f 0F85ABFE 		jne	.L1331	#,
 15968      FFFF
 15969              	.LBE1117:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15970              		.loc 1 734 109 is_stmt 1 view .LVU5127
 15971              	# sieve_extend.c:734:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15972              		.loc 1 734 127 is_stmt 0 view .LVU5128
 15973 0c25 4C037424 		add	r14, QWORD PTR 104[rsp]	# vectorstep_faster, %sfp
 15973      68
 15974              	.LVL1052:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15975              		.loc 1 734 67 is_stmt 1 view .LVU5129
 15976              	# sieve_extend.c:734:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15977              		.loc 1 734 13 is_stmt 0 view .LVU5130
 15978 0c2a 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 15978      010000
 15979 0c31 0F8681FE 		jbe	.L1333	#,
 15979      FFFF
 15980              	.LBE1116:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15981              		.loc 1 733 102 is_stmt 1 view .LVU5131
 15982              	# sieve_extend.c:733:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15983              		.loc 1 733 120 is_stmt 0 view .LVU5132
 15984 0c37 4C8B7424 		mov	r14, QWORD PTR 112[rsp]	# mediumstep_faster_steps, %sfp
 15984      70
 15985              	.LVL1053:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15986              		.loc 1 733 120 view .LVU5133
 15987 0c3c 4C013424 		add	QWORD PTR [rsp], r14	# %sfp, mediumstep_faster_steps
 15988              	.LVL1054:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15989              		.loc 1 733 120 view .LVU5134
 15990 0c40 4C8B2C24 		mov	r13, QWORD PTR [rsp]	# mediumstep_faster, %sfp
 15991              	.LVL1055:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15992              		.loc 1 733 62 is_stmt 1 view .LVU5135
 15993              	# sieve_extend.c:733:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
GAS LISTING /tmp/ccG38KJh.s 			page 424


 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15994              		.loc 1 733 9 is_stmt 0 view .LVU5136
 15995 0c44 4983FD40 		cmp	r13, 64	# mediumstep_faster,
 15996 0c48 0F8662FE 		jbe	.L1320	#,
 15996      FFFF
 15997              	.LVL1056:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15998              		.loc 1 733 9 view .LVU5137
 15999              	.LBE1152:
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 16000              		.loc 1 732 42 is_stmt 1 view .LVU5138
 16001              	.LBE1155:
 769:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 16002              		.loc 1 769 5 view .LVU5139
 16003 0c4e 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 16003      01
 16004 0c53 0F843B07 		je	.L1445	#,
 16004      0000
 770:sieve_extend.c ****     verbose(2) {
 16005              		.loc 1 770 5 view .LVU5140
 16006 0c59 7E4F     		jle	.L1335	#,
 770:sieve_extend.c ****     verbose(2) {
 16007              		.loc 1 770 18 view .LVU5141
 16008              	.LVL1057:
 16009              	.LBB1156:
 16010              	.LBI1156:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16011              		.loc 3 105 1 view .LVU5142
 16012              	.LBB1157:
 16013              		.loc 3 107 3 view .LVU5143
 16014              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16015              		.loc 3 107 10 is_stmt 0 view .LVU5144
 16016 0c5b 4889EA   		mov	rdx, rbp	#, tuning_results
 16017 0c5e 488D3500 		lea	rsi, .LC72[rip]	#,
 16017      000000
 16018 0c65 BF010000 		mov	edi, 1	#,
 16018      00
 16019 0c6a 31C0     		xor	eax, eax	#
 16020 0c6c E8000000 		call	__printf_chk@PLT	#
 16020      00
 16021              	.LVL1058:
 16022              		.loc 3 107 10 view .LVU5145
 16023              	.LBE1157:
 16024              	.LBE1156:
 771:sieve_extend.c ****         printf("%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 16025              		.loc 1 771 5 is_stmt 1 view .LVU5146
 772:sieve_extend.c ****         printf("Best options\n");
 16026              		.loc 1 772 9 view .LVU5147
 16027              	.LBB1158:
 16028              	.LBI1158:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16029              		.loc 3 105 1 view .LVU5148
 16030              	.LBB1159:
 16031              		.loc 3 107 3 view .LVU5149
 16032              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16033              		.loc 3 107 10 is_stmt 0 view .LVU5150
 16034 0c71 4150     		push	r8	#
GAS LISTING /tmp/ccG38KJh.s 			page 425


 16035              		.cfi_def_cfa_offset 360
 16036 0c73 4889EA   		mov	rdx, rbp	#, tuning_results
 16037 0c76 4531C0   		xor	r8d, r8d	#
 16038 0c79 FF742438 		push	QWORD PTR 56[rsp]	# %sfp
 16039              		.cfi_def_cfa_offset 368
 16040 0c7d 488D3500 		lea	rsi, .LC73[rip]	#,
 16040      000000
 16041 0c84 BF010000 		mov	edi, 1	#,
 16041      00
 16042 0c89 4C8B4C24 		mov	r9, QWORD PTR 56[rsp]	#, %sfp
 16042      38
 16043 0c8e 488B4C24 		mov	rcx, QWORD PTR 48[rsp]	#, %sfp
 16043      30
 16044 0c93 31C0     		xor	eax, eax	#
 16045 0c95 E8000000 		call	__printf_chk@PLT	#
 16045      00
 16046              	.LVL1059:
 16047              		.loc 3 107 10 view .LVU5151
 16048              	.LBE1159:
 16049              	.LBE1158:
 773:sieve_extend.c ****     }
 16050              		.loc 1 773 9 is_stmt 1 view .LVU5152
 16051              	.LBB1160:
 16052              	.LBI1160:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16053              		.loc 3 105 1 view .LVU5153
 16054              	.LBB1161:
 16055              		.loc 3 107 3 view .LVU5154
 16056              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16057              		.loc 3 107 10 is_stmt 0 view .LVU5155
 16058 0c9a 488D3D00 		lea	rdi, .LC74[rip]	#,
 16058      000000
 16059 0ca1 E8000000 		call	puts@PLT	#
 16059      00
 16060              	.LVL1060:
 16061 0ca6 4159     		pop	r9	#
 16062              		.cfi_def_cfa_offset 360
 16063 0ca8 415A     		pop	r10	#
 16064              		.cfi_def_cfa_offset 352
 16065              	.LVL1061:
 16066              	.L1335:
 16067              		.loc 3 107 10 view .LVU5156
 16068 0caa 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# tuning_result, %sfp
 16068      18
 16069 0caf 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# sample_max, %sfp
 16069      48
 16070              	.LBE1161:
 16071              	.LBE1160:
 16072              	.LBB1162:
 16073              	.LBB1153:
 16074              	.LBB1150:
 16075              	.LBB1148:
 16076              	.LBB1146:
 16077              	.LBB1143:
 16078              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 16079              		.loc 1 740 39 view .LVU5157
GAS LISTING /tmp/ccG38KJh.s 			page 426


 16080 0cb4 4989ED   		mov	r13, rbp	# tuning_results, tuning_results
 16081              	.LVL1062:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 16082              		.loc 1 740 39 view .LVU5158
 16083 0cb7 4531E4   		xor	r12d, r12d	# step
 16084              	.LVL1063:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 16085              		.loc 1 740 39 view .LVU5159
 16086 0cba 4989E9   		mov	r9, rbp	# tuning_results, tuning_results
 16087              	.LVL1064:
 16088              	.L1336:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 16089              		.loc 1 740 39 view .LVU5160
 16090              	.LBE1143:
 16091              	.LBE1146:
 16092              	.LBE1148:
 16093              	.LBE1150:
 16094              	.LBE1153:
 16095              	.LBE1162:
 778:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 16096              		.loc 1 778 11 is_stmt 1 view .LVU5161
 16097 0cbd 4983F904 		cmp	r9, 4	# tuning_results,
 16098 0cc1 0F866A05 		jbe	.L1446	#,
 16098      0000
 779:sieve_extend.c ****         step++;
 16099              		.loc 1 779 9 view .LVU5162
 16100 0cc7 BA680000 		mov	edx, 104	#,
 16100      00
 16101 0ccc 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 16101      000000
 16102 0cd3 4C89CE   		mov	rsi, r9	#, tuning_results
 16103 0cd6 4C89F7   		mov	rdi, r14	#, tuning_result
 16104 0cd9 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, tuning_results
 16105 0cdd E8000000 		call	qsort@PLT	#
 16105      00
 16106              	.LVL1065:
 780:sieve_extend.c ****         verbose(2) {
 16107              		.loc 1 780 9 view .LVU5163
 16108 0ce2 488B1C24 		mov	rbx, QWORD PTR [rsp]	# tuning_results, %sfp
 16109              	# sieve_extend.c:781:         verbose(2) {
 781:sieve_extend.c ****             tuning_result_index = 0;
 16110              		.loc 1 781 9 is_stmt 0 view .LVU5164
 16111 0ce6 8B6C2408 		mov	ebp, DWORD PTR 8[rsp]	# option_verboselevel.60_94, %sfp
 16112 0cea 4889DA   		mov	rdx, rbx	# _635, tuning_results
 16113 0ced 48D1EA   		shr	rdx	# _635
 16114 0cf0 48895C24 		mov	QWORD PTR 16[rsp], rbx	# %sfp, tuning_results
 16114      10
 16115 0cf5 48891424 		mov	QWORD PTR [rsp], rdx	# %sfp, _635
 16116              	.LVL1066:
 16117              	# sieve_extend.c:780:         step++;
 780:sieve_extend.c ****         verbose(2) {
 16118              		.loc 1 780 13 view .LVU5165
 16119 0cf9 49FFC4   		inc	r12	# step
 16120              	.LVL1067:
 781:sieve_extend.c ****             tuning_result_index = 0;
 16121              		.loc 1 781 9 is_stmt 1 view .LVU5166
 16122 0cfc 83FD01   		cmp	ebp, 1	# option_verboselevel.60_94,
GAS LISTING /tmp/ccG38KJh.s 			page 427


 16123 0cff 0F8F6902 		jg	.L1447	#,
 16123      0000
 16124              	.LVL1068:
 16125              	.LBB1163:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16126              		.loc 1 795 29 view .LVU5167
 16127 0d05 0F84E402 		je	.L1340	#,
 16127      0000
 16128 0d0b 4C8B0C24 		mov	r9, QWORD PTR [rsp]	# _635, %sfp
 16129              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16130              		.loc 1 797 13 is_stmt 0 view .LVU5168
 16131 0d0f 31F6     		xor	esi, esi	#
 16132 0d11 4D8D59FF 		lea	r11, -1[r9]	# tmp583,
 16133 0d15 4183E303 		and	r11d, 3	# tmp585,
 16134 0d19 4C89F7   		mov	rdi, r14	#, tuning_result
 16135 0d1c 4C895C24 		mov	QWORD PTR 16[rsp], r11	# %sfp, tmp585
 16135      10
 16136 0d21 E8000000 		call	tune_benchmark	#
 16136      00
 16137              	.LVL1069:
 16138              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16139              		.loc 1 799 46 view .LVU5169
 16140 0d26 C5FB1015 		vmovsd	xmm2, QWORD PTR .LC77[rip]	# tmp790,
 16140      00000000 
 16141 0d2e 498D5E40 		lea	rbx, 64[r14]	# ivtmp.703,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16142              		.loc 1 796 13 is_stmt 1 view .LVU5170
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16143              		.loc 1 797 13 view .LVU5171
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16144              		.loc 1 798 13 view .LVU5172
 16145              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16146              		.loc 1 799 46 is_stmt 0 view .LVU5173
 16147 0d32 C56B5843 		vaddsd	xmm8, xmm2, QWORD PTR 8[rbx]	# tmp508, tmp790, MEM[base: _159, offset: 8B]
 16147      08
 16148              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16149              		.loc 1 795 48 view .LVU5174
 16150 0d37 BD010000 		mov	ebp, 1	# i,
 16150      00
 16151              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16152              		.loc 1 798 41 view .LVU5175
 16153 0d3c 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16154              		.loc 1 799 13 is_stmt 1 view .LVU5176
 16155              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16156              		.loc 1 795 9 is_stmt 0 view .LVU5177
 16157 0d3f 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16158              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16159              		.loc 1 799 46 view .LVU5178
 16160 0d43 C57B1143 		vmovsd	QWORD PTR 8[rbx], xmm8	# MEM[base: _159, offset: 8B], tmp508
GAS LISTING /tmp/ccG38KJh.s 			page 428


 16160      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16161              		.loc 1 795 47 is_stmt 1 view .LVU5179
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16162              		.loc 1 795 29 view .LVU5180
 16163              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16164              		.loc 1 795 9 is_stmt 0 view .LVU5181
 16165 0d48 4C8B5424 		mov	r10, QWORD PTR 16[rsp]	# tmp585, %sfp
 16165      10
 16166 0d4d 498D9EA8 		lea	rbx, 168[r14]	# ivtmp.703,
 16166      000000
 16167 0d54 0F835E01 		jnb	.L1342	#,
 16167      0000
 16168 0d5a 4D85D2   		test	r10, r10	# tmp585
 16169 0d5d 0F849200 		je	.L1424	#,
 16169      0000
 16170 0d63 4983FA01 		cmp	r10, 1	# tmp585,
 16171 0d67 745B     		je	.L1405	#,
 16172 0d69 4983FA02 		cmp	r10, 2	# tmp585,
 16173 0d6d 742E     		je	.L1406	#,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16174              		.loc 1 796 13 is_stmt 1 view .LVU5182
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16175              		.loc 1 797 13 view .LVU5183
 16176 0d6f BE010000 		mov	esi, 1	#,
 16176      00
 16177 0d74 4C89F7   		mov	rdi, r14	#, tuning_result
 16178 0d77 E8000000 		call	tune_benchmark	#
 16178      00
 16179              	.LVL1070:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16180              		.loc 1 798 13 view .LVU5184
 16181              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16182              		.loc 1 799 46 is_stmt 0 view .LVU5185
 16183 0d7c C57B100D 		vmovsd	xmm9, QWORD PTR .LC77[rip]	# tmp834,
 16183      00000000 
 16184              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16185              		.loc 1 798 41 view .LVU5186
 16186 0d84 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16187              		.loc 1 799 13 is_stmt 1 view .LVU5187
 16188              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16189              		.loc 1 799 46 is_stmt 0 view .LVU5188
 16190 0d87 C5335853 		vaddsd	xmm10, xmm9, QWORD PTR 8[rbx]	# tmp639, tmp834, MEM[base: _159, offset: 8B]
 16190      08
 16191              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16192              		.loc 1 795 48 view .LVU5189
 16193 0d8c BD020000 		mov	ebp, 2	# i,
 16193      00
 16194              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16195              		.loc 1 799 46 view .LVU5190
GAS LISTING /tmp/ccG38KJh.s 			page 429


 16196 0d91 C57B1153 		vmovsd	QWORD PTR 8[rbx], xmm10	# MEM[base: _159, offset: 8B], tmp639
 16196      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16197              		.loc 1 795 47 is_stmt 1 view .LVU5191
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16198              		.loc 1 795 29 view .LVU5192
 16199 0d96 498D9E10 		lea	rbx, 272[r14]	# ivtmp.703,
 16199      010000
 16200              	.L1406:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16201              		.loc 1 796 13 view .LVU5193
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16202              		.loc 1 797 13 view .LVU5194
 16203 0d9d 4889EE   		mov	rsi, rbp	#, i
 16204 0da0 4C89F7   		mov	rdi, r14	#, tuning_result
 16205 0da3 E8000000 		call	tune_benchmark	#
 16205      00
 16206              	.LVL1071:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16207              		.loc 1 798 13 view .LVU5195
 16208              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16209              		.loc 1 799 46 is_stmt 0 view .LVU5196
 16210 0da8 C57B101D 		vmovsd	xmm11, QWORD PTR .LC77[rip]	# tmp835,
 16210      00000000 
 16211              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16212              		.loc 1 798 41 view .LVU5197
 16213 0db0 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16214              		.loc 1 799 13 is_stmt 1 view .LVU5198
 16215              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16216              		.loc 1 799 46 is_stmt 0 view .LVU5199
 16217 0db3 C5235863 		vaddsd	xmm12, xmm11, QWORD PTR 8[rbx]	# tmp641, tmp835, MEM[base: _159, offset: 8B]
 16217      08
 16218              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16219              		.loc 1 795 48 view .LVU5200
 16220 0db8 48FFC5   		inc	rbp	# i
 16221 0dbb 4883C368 		add	rbx, 104	# ivtmp.703,
 16222              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16223              		.loc 1 799 46 view .LVU5201
 16224 0dbf C57B1163 		vmovsd	QWORD PTR -96[rbx], xmm12	# MEM[base: _159, offset: 8B], tmp641
 16224      A0
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16225              		.loc 1 795 47 is_stmt 1 view .LVU5202
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16226              		.loc 1 795 29 view .LVU5203
 16227              	.L1405:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16228              		.loc 1 796 13 view .LVU5204
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16229              		.loc 1 797 13 view .LVU5205
 16230 0dc4 4889EE   		mov	rsi, rbp	#, i
 16231 0dc7 4C89F7   		mov	rdi, r14	#, tuning_result
GAS LISTING /tmp/ccG38KJh.s 			page 430


 16232 0dca E8000000 		call	tune_benchmark	#
 16232      00
 16233              	.LVL1072:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16234              		.loc 1 798 13 view .LVU5206
 16235              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16236              		.loc 1 799 46 is_stmt 0 view .LVU5207
 16237 0dcf C57B102D 		vmovsd	xmm13, QWORD PTR .LC77[rip]	# tmp836,
 16237      00000000 
 16238              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16239              		.loc 1 795 48 view .LVU5208
 16240 0dd7 48FFC5   		inc	rbp	# i
 16241              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16242              		.loc 1 799 46 view .LVU5209
 16243 0dda C5135873 		vaddsd	xmm14, xmm13, QWORD PTR 8[rbx]	# tmp643, tmp836, MEM[base: _159, offset: 8B]
 16243      08
 16244              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16245              		.loc 1 798 41 view .LVU5210
 16246 0ddf 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16247              		.loc 1 799 13 is_stmt 1 view .LVU5211
 16248 0de2 4883C368 		add	rbx, 104	# ivtmp.703,
 16249              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16250              		.loc 1 799 46 is_stmt 0 view .LVU5212
 16251 0de6 C57B1173 		vmovsd	QWORD PTR -96[rbx], xmm14	# MEM[base: _159, offset: 8B], tmp643
 16251      A0
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16252              		.loc 1 795 47 is_stmt 1 view .LVU5213
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16253              		.loc 1 795 29 view .LVU5214
 16254              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16255              		.loc 1 795 9 is_stmt 0 view .LVU5215
 16256 0deb 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16257 0def 0F83C300 		jnb	.L1342	#,
 16257      0000
 16258              	.L1424:
 16259 0df5 4C896424 		mov	QWORD PTR 16[rsp], r12	# %sfp, step
 16259      10
 16260              	.LVL1073:
 16261              	.L1341:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16262              		.loc 1 796 13 is_stmt 1 view .LVU5216
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16263              		.loc 1 797 13 view .LVU5217
 16264 0dfa 4889EE   		mov	rsi, rbp	#, i
 16265 0dfd 4C89F7   		mov	rdi, r14	#, tuning_result
 16266 0e00 E8000000 		call	tune_benchmark	#
 16266      00
 16267              	.LVL1074:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16268              		.loc 1 798 13 view .LVU5218
GAS LISTING /tmp/ccG38KJh.s 			page 431


 16269              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16270              		.loc 1 799 46 is_stmt 0 view .LVU5219
 16271 0e05 C57B103D 		vmovsd	xmm15, QWORD PTR .LC77[rip]	# tmp792,
 16271      00000000 
 16272              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16273              		.loc 1 798 41 view .LVU5220
 16274 0e0d 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16275              		.loc 1 799 13 is_stmt 1 view .LVU5221
 16276              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16277              		.loc 1 799 46 is_stmt 0 view .LVU5222
 16278 0e10 C583586B 		vaddsd	xmm5, xmm15, QWORD PTR 8[rbx]	# tmp607, tmp792, MEM[base: _159, offset: 8B]
 16278      08
 16279              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16280              		.loc 1 795 48 view .LVU5223
 16281 0e15 488D7501 		lea	rsi, 1[rbp]	# tmp586,
 16282              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16283              		.loc 1 797 13 view .LVU5224
 16284 0e19 4C89F7   		mov	rdi, r14	#, tuning_result
 16285              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16286              		.loc 1 799 46 view .LVU5225
 16287 0e1c C5FB116B 		vmovsd	QWORD PTR 8[rbx], xmm5	# MEM[base: _159, offset: 8B], tmp607
 16287      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16288              		.loc 1 795 47 is_stmt 1 view .LVU5226
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16289              		.loc 1 795 29 view .LVU5227
 16290              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16291              		.loc 1 797 13 is_stmt 0 view .LVU5228
 16292 0e21 E8000000 		call	tune_benchmark	#
 16292      00
 16293              	.LVL1075:
 16294              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16295              		.loc 1 799 46 view .LVU5229
 16296 0e26 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC77[rip]	# tmp793,
 16296      00000000 
 16297 0e2e 4C8D6368 		lea	r12, 104[rbx]	# tmp587,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16298              		.loc 1 796 13 is_stmt 1 view .LVU5230
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16299              		.loc 1 797 13 view .LVU5231
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16300              		.loc 1 798 13 view .LVU5232
 16301              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16302              		.loc 1 799 46 is_stmt 0 view .LVU5233
 16303 0e32 C4C14358 		vaddsd	xmm4, xmm7, QWORD PTR 8[r12]	# tmp611, tmp793, MEM[base: _159, offset: 8B]
 16303      642408
 16304              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccG38KJh.s 			page 432


 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16305              		.loc 1 798 41 view .LVU5234
 16306 0e39 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16307              		.loc 1 799 13 is_stmt 1 view .LVU5235
 16308              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16309              		.loc 1 795 48 is_stmt 0 view .LVU5236
 16310 0e3d 488D7502 		lea	rsi, 2[rbp]	# i,
 16311              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16312              		.loc 1 799 46 view .LVU5237
 16313 0e41 C4C17B11 		vmovsd	QWORD PTR 8[r12], xmm4	# MEM[base: _159, offset: 8B], tmp611
 16313      642408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16314              		.loc 1 795 47 is_stmt 1 view .LVU5238
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16315              		.loc 1 795 29 view .LVU5239
 16316              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16317              		.loc 1 797 13 is_stmt 0 view .LVU5240
 16318 0e48 4C89F7   		mov	rdi, r14	#, tuning_result
 16319 0e4b E8000000 		call	tune_benchmark	#
 16319      00
 16320              	.LVL1076:
 16321              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16322              		.loc 1 799 46 view .LVU5241
 16323 0e50 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC77[rip]	# tmp794,
 16323      00000000 
 16324 0e58 4C8DA3D0 		lea	r12, 208[rbx]	# ivtmp.703,
 16324      000000
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16325              		.loc 1 796 13 is_stmt 1 view .LVU5242
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16326              		.loc 1 797 13 view .LVU5243
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16327              		.loc 1 798 13 view .LVU5244
 16328              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16329              		.loc 1 799 46 is_stmt 0 view .LVU5245
 16330 0e5f C4C17B58 		vaddsd	xmm3, xmm0, QWORD PTR 8[r12]	# tmp615, tmp794, MEM[base: _159, offset: 8B]
 16330      5C2408
 16331              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16332              		.loc 1 798 41 view .LVU5246
 16333 0e66 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16334              		.loc 1 799 13 is_stmt 1 view .LVU5247
 16335              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16336              		.loc 1 795 48 is_stmt 0 view .LVU5248
 16337 0e6a 488D7503 		lea	rsi, 3[rbp]	# i,
 16338              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16339              		.loc 1 799 46 view .LVU5249
 16340 0e6e C4C17B11 		vmovsd	QWORD PTR 8[r12], xmm3	# MEM[base: _159, offset: 8B], tmp615
GAS LISTING /tmp/ccG38KJh.s 			page 433


 16340      5C2408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16341              		.loc 1 795 47 is_stmt 1 view .LVU5250
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16342              		.loc 1 795 29 view .LVU5251
 16343              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16344              		.loc 1 797 13 is_stmt 0 view .LVU5252
 16345 0e75 4C89F7   		mov	rdi, r14	#, tuning_result
 16346 0e78 E8000000 		call	tune_benchmark	#
 16346      00
 16347              	.LVL1077:
 16348              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16349              		.loc 1 799 46 view .LVU5253
 16350 0e7d C5FB1035 		vmovsd	xmm6, QWORD PTR .LC77[rip]	# tmp795,
 16350      00000000 
 16351 0e85 4C8DA338 		lea	r12, 312[rbx]	# ivtmp.703,
 16351      010000
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16352              		.loc 1 796 13 is_stmt 1 view .LVU5254
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16353              		.loc 1 797 13 view .LVU5255
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16354              		.loc 1 798 13 view .LVU5256
 16355              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16356              		.loc 1 799 46 is_stmt 0 view .LVU5257
 16357 0e8c C4C14B58 		vaddsd	xmm1, xmm6, QWORD PTR 8[r12]	# tmp619, tmp795, MEM[base: _159, offset: 8B]
 16357      4C2408
 16358              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16359              		.loc 1 795 48 view .LVU5258
 16360 0e93 4883C504 		add	rbp, 4	# i,
 16361              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16362              		.loc 1 798 41 view .LVU5259
 16363 0e97 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _159, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16364              		.loc 1 799 13 is_stmt 1 view .LVU5260
 16365              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16366              		.loc 1 799 46 is_stmt 0 view .LVU5261
 16367 0e9b C4C17B11 		vmovsd	QWORD PTR 8[r12], xmm1	# MEM[base: _159, offset: 8B], tmp619
 16367      4C2408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16368              		.loc 1 795 47 is_stmt 1 view .LVU5262
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16369              		.loc 1 795 29 view .LVU5263
 16370 0ea2 4881C3A0 		add	rbx, 416	# ivtmp.703,
 16370      010000
 16371              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16372              		.loc 1 795 9 is_stmt 0 view .LVU5264
 16373 0ea9 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16374 0ead 0F8247FF 		jb	.L1341	#,
 16374      FFFF
GAS LISTING /tmp/ccG38KJh.s 			page 434


 16375 0eb3 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# step, %sfp
 16375      10
 16376              	.LVL1078:
 16377              	.L1342:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16378              		.loc 1 795 9 view .LVU5265
 16379              	.LBE1163:
 16380              	.LBB1178:
 16381              	.LBB1154:
 16382              	.LBB1151:
 16383              	.LBB1149:
 16384              	.LBB1147:
 16385              	.LBB1144:
 16386              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 16387              		.loc 1 740 39 view .LVU5266
 16388 0eb8 4C8B0C24 		mov	r9, QWORD PTR [rsp]	# tuning_results, %sfp
 16389 0ebc E9FCFDFF 		jmp	.L1336	#
 16389      FF
 16390              	.LVL1079:
 16391              		.p2align 4,,10
 16392 0ec1 0F1F8000 		.p2align 3
 16392      000000
 16393              	.L1444:
 763:sieve_extend.c ****                     }
 16394              		.loc 1 763 41 is_stmt 1 view .LVU5267
 16395              	.LBB1130:
 16396              	.LBI1130:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16397              		.loc 3 105 1 view .LVU5268
 16398              	.LBB1131:
 16399              		.loc 3 107 3 view .LVU5269
 16400              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16401              		.loc 3 107 10 is_stmt 0 view .LVU5270
 16402 0ec8 4889EA   		mov	rdx, rbp	#, tuning_results
 16403 0ecb 488D3500 		lea	rsi, .LC70[rip]	#,
 16403      000000
 16404 0ed2 BF010000 		mov	edi, 1	#,
 16404      00
 16405 0ed7 31C0     		xor	eax, eax	#
 16406 0ed9 E8000000 		call	__printf_chk@PLT	#
 16406      00
 16407              	.LVL1080:
 16408              		.loc 3 107 10 view .LVU5271
 16409              	.LBE1131:
 16410              	.LBE1130:
 763:sieve_extend.c ****                     }
 16411              		.loc 1 763 110 is_stmt 1 view .LVU5272
 16412 0ede 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16412      000000
 16413 0ee5 E8000000 		call	fflush@PLT	#
 16413      00
 16414              	.LVL1081:
 16415 0eea E930FCFF 		jmp	.L1324	#
 16415      FF
 16416              	.LVL1082:
 16417 0eef 90       		.p2align 4,,10
GAS LISTING /tmp/ccG38KJh.s 			page 435


 16418              		.p2align 3
 16419              	.L1443:
 16420              	.LBB1132:
 16421              	.LBB1133:
 16422              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16423              		.loc 3 107 10 is_stmt 0 view .LVU5273
 16424 0ef0 488D3500 		lea	rsi, .LC67[rip]	#,
 16424      000000
 16425 0ef7 BF010000 		mov	edi, 1	#,
 16425      00
 16426 0efc 31C0     		xor	eax, eax	#
 16427 0efe C5FB115C 		vmovsd	QWORD PTR 16[rsp], xmm3	# %sfp, _344
 16427      2410
 16428              	.LBE1133:
 16429              	.LBE1132:
 759:sieve_extend.c ****                         }
 16430              		.loc 1 759 60 is_stmt 1 view .LVU5274
 16431              	.LVL1083:
 16432              	.LBB1135:
 16433              	.LBI1132:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16434              		.loc 3 105 1 view .LVU5275
 16435              	.LBB1134:
 16436              		.loc 3 107 3 view .LVU5276
 16437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16438              		.loc 3 107 10 is_stmt 0 view .LVU5277
 16439 0f04 E8000000 		call	__printf_chk@PLT	#
 16439      00
 16440              	.LVL1084:
 16441              		.loc 3 107 10 view .LVU5278
 16442              	.LBE1134:
 16443              	.LBE1135:
 759:sieve_extend.c ****                         }
 16444              		.loc 1 759 76 is_stmt 1 view .LVU5279
 16445              	.LBB1136:
 16446              	.LBI1136:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 16447              		.loc 1 673 20 view .LVU5280
 16448              	.LBB1137:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 16449              		.loc 1 674 5 view .LVU5281
 16450              	.LBB1138:
 16451              	.LBI1138:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16452              		.loc 3 105 1 view .LVU5282
 16453              	.LBB1139:
 16454              		.loc 3 107 3 view .LVU5283
 16455              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16456              		.loc 3 107 10 is_stmt 0 view .LVU5284
 16457 0f09 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r15]	# MEM[base: _625, offset: 88B], MEM[base: _625, offset: 88B]
 16457      4758
 16458 0f0f 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _625, offset: 16B], MEM[base: _625, offset: 16B]
 16459 0f13 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _625, offset: 8B], MEM[base: _625, offset: 8B]
 16460 0f17 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _625, offset: 64B]
 16461              		.cfi_def_cfa_offset 360
 16462              	.LVL1085:
 16463              		.loc 3 107 10 view .LVU5285
GAS LISTING /tmp/ccG38KJh.s 			page 436


 16464 0f1b 488D3500 		lea	rsi, .LC68[rip]	#,
 16464      000000
 16465 0f22 BF010000 		mov	edi, 1	#,
 16465      00
 16466 0f27 41FF7750 		push	QWORD PTR 80[r15]	# MEM[base: _625, offset: 80B]
 16467              		.cfi_def_cfa_offset 368
 16468 0f2b B8030000 		mov	eax, 3	#,
 16468      00
 16469 0f30 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _625, offset: 48B]
 16470              		.cfi_def_cfa_offset 376
 16471 0f34 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _625, offset: 40B]
 16472              		.cfi_def_cfa_offset 384
 16473 0f38 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r15]	#, MEM[base: _625, offset: 96B]
 16473      5760
 16474 0f3e C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r15]	#, MEM[base: _625, offset: 72B]
 16474      4F48
 16475 0f44 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _625, offset: 32B]
 16476 0f48 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _625, offset: 24B]
 16477 0f4c E8000000 		call	__printf_chk@PLT	#
 16477      00
 16478              	.LVL1086:
 16479              		.loc 3 107 10 view .LVU5286
 16480              	.LBE1139:
 16481              	.LBE1138:
 16482              	# sieve_extend.c:679: }
 679:sieve_extend.c **** 
 16483              		.loc 1 679 1 view .LVU5287
 16484 0f51 488B4424 		mov	rax, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 16484      20
 16485 0f56 4883C420 		add	rsp, 32	#,
 16486              		.cfi_def_cfa_offset 352
 16487              	.LVL1087:
 679:sieve_extend.c **** 
 16488              		.loc 1 679 1 view .LVU5288
 16489 0f5a 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, vectorstep_faster
 16489      30
 16490 0f5f 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, mediumstep_faster
 16490      28
 16491              	.LBE1137:
 16492              	.LBE1136:
 16493              	# sieve_extend.c:755:                             best_blocksize_bits = blocksize_bits;
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 16494              		.loc 1 755 49 view .LVU5289
 16495 0f64 48895C24 		mov	QWORD PTR 32[rsp], rbx	# %sfp, ivtmp.730
 16495      20
 16496              	.LBB1141:
 16497              	.LBB1140:
 16498              	# sieve_extend.c:679: }
 679:sieve_extend.c **** 
 16499              		.loc 1 679 1 view .LVU5290
 16500 0f69 E935FCFF 		jmp	.L1327	#
 16500      FF
 16501              	.LVL1088:
 16502              	.L1447:
 679:sieve_extend.c **** 
 16503              		.loc 1 679 1 view .LVU5291
 16504              	.LBE1140:
GAS LISTING /tmp/ccG38KJh.s 			page 437


 16505              	.LBE1141:
 16506              	.LBE1144:
 16507              	.LBE1147:
 16508              	.LBE1149:
 16509              	.LBE1151:
 16510              	.LBE1154:
 16511              	.LBE1178:
 782:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 16512              		.loc 1 782 13 is_stmt 1 view .LVU5292
 783:sieve_extend.c ****             fflush(stdout);
 16513              		.loc 1 783 13 view .LVU5293
 16514              	.LBB1179:
 16515              	.LBI1179:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16516              		.loc 3 105 1 view .LVU5294
 16517              	.LBB1180:
 16518              		.loc 3 107 3 view .LVU5295
 16519              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16520              		.loc 3 107 10 is_stmt 0 view .LVU5296
 16521 0f6e 4C89E2   		mov	rdx, r12	#, step
 16522 0f71 488D3500 		lea	rsi, .LC75[rip]	#,
 16522      000000
 16523 0f78 BF010000 		mov	edi, 1	#,
 16523      00
 16524 0f7d 31C0     		xor	eax, eax	#
 16525 0f7f E8000000 		call	__printf_chk@PLT	#
 16525      00
 16526              	.LVL1089:
 16527              		.loc 3 107 10 view .LVU5297
 16528              	.LBE1180:
 16529              	.LBE1179:
 783:sieve_extend.c ****             fflush(stdout);
 16530              		.loc 1 783 47 is_stmt 1 view .LVU5298
 16531              	.LBB1181:
 16532              	.LBI1181:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 16533              		.loc 1 673 20 view .LVU5299
 16534              	.LBB1182:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 16535              		.loc 1 674 5 view .LVU5300
 16536              	.LBB1183:
 16537              	.LBI1183:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16538              		.loc 3 105 1 view .LVU5301
 16539              	.LBB1184:
 16540              		.loc 3 107 3 view .LVU5302
 16541              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16542              		.loc 3 107 10 is_stmt 0 view .LVU5303
 16543 0f84 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 88B], MEM[(s
 16543      4658
 16544 0f8a 498B4E10 		mov	rcx, QWORD PTR 16[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 16B], MEM[(struc
 16545 0f8e 498B5608 		mov	rdx, QWORD PTR 8[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 8B], MEM[(struct 
 16546 0f92 41FF7640 		push	QWORD PTR 64[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 64B]
 16547              		.cfi_def_cfa_offset 360
 16548 0f96 BF010000 		mov	edi, 1	#,
 16548      00
 16549 0f9b 488D3500 		lea	rsi, .LC68[rip]	#,
GAS LISTING /tmp/ccG38KJh.s 			page 438


 16549      000000
 16550 0fa2 41FF7650 		push	QWORD PTR 80[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 80B]
 16551              		.cfi_def_cfa_offset 368
 16552 0fa6 B8030000 		mov	eax, 3	#,
 16552      00
 16553 0fab 41FF7630 		push	QWORD PTR 48[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 48B]
 16554              		.cfi_def_cfa_offset 376
 16555 0faf 41FF7628 		push	QWORD PTR 40[r14]	# MEM[(struct tuning_result_type *)tuning_result_331 + 40B]
 16556              		.cfi_def_cfa_offset 384
 16557 0fb3 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r14]	#, MEM[(struct tuning_result_type *)tuning_result_331 + 96B]
 16557      5660
 16558 0fb9 C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r14]	#, MEM[(struct tuning_result_type *)tuning_result_331 + 72B]
 16558      4E48
 16559 0fbf 4D8B4E20 		mov	r9, QWORD PTR 32[r14]	#, MEM[(struct tuning_result_type *)tuning_result_331 + 32B]
 16560 0fc3 4D8B4618 		mov	r8, QWORD PTR 24[r14]	#, MEM[(struct tuning_result_type *)tuning_result_331 + 24B]
 16561 0fc7 E8000000 		call	__printf_chk@PLT	#
 16561      00
 16562              	.LVL1090:
 16563              		.loc 3 107 10 view .LVU5304
 16564              	.LBE1184:
 16565              	.LBE1183:
 16566              	.LBE1182:
 16567              	.LBE1181:
 784:sieve_extend.c ****             verbose(3) {
 16568              		.loc 1 784 13 is_stmt 1 view .LVU5305
 16569 0fcc 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16569      000000
 16570 0fd3 4883C420 		add	rsp, 32	#,
 16571              		.cfi_def_cfa_offset 352
 16572 0fd7 E8000000 		call	fflush@PLT	#
 16572      00
 16573              	.LVL1091:
 785:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(40,tuning_results); t
 16574              		.loc 1 785 13 view .LVU5306
 16575 0fdc 83FD02   		cmp	ebp, 2	# option_verboselevel.60_94,
 16576 0fdf 0F85C101 		jne	.L1448	#,
 16576      0000
 16577              	.LVL1092:
 16578              	.L1338:
 792:sieve_extend.c **** 
 16579              		.loc 1 792 9 view .LVU5307
 794:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 16580              		.loc 1 794 9 view .LVU5308
 794:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 16581              		.loc 1 794 20 view .LVU5309
 16582              	.LBB1185:
 16583              	.LBI1185:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16584              		.loc 3 105 1 view .LVU5310
 16585              	.LBB1186:
 16586              		.loc 3 107 3 view .LVU5311
 16587              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16588              		.loc 3 107 10 is_stmt 0 view .LVU5312
 16589 0fe5 BF0A0000 		mov	edi, 10	#,
 16589      00
 16590 0fea E8000000 		call	putchar@PLT	#
 16590      00
GAS LISTING /tmp/ccG38KJh.s 			page 439


 16591              	.LVL1093:
 16592              		.loc 3 107 10 view .LVU5313
 16593              	.LBE1186:
 16594              	.LBE1185:
 16595              	.LBB1187:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16596              		.loc 1 795 29 is_stmt 1 view .LVU5314
 16597              	.L1340:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16598              		.loc 1 795 29 is_stmt 0 view .LVU5315
 16599 0fef 4C8B0424 		mov	r8, QWORD PTR [rsp]	# _635, %sfp
 16600              	.LBB1164:
 16601              	.LBB1165:
 16602              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16603              		.loc 3 107 10 view .LVU5316
 16604 0ff3 4C89E1   		mov	rcx, r12	#, step
 16605 0ff6 4C89EA   		mov	rdx, r13	#, tuning_results
 16606 0ff9 488D3500 		lea	rsi, .LC78[rip]	#,
 16606      000000
 16607 1000 498D58FF 		lea	rbx, -1[r8]	# tmp578,
 16608 1004 BF010000 		mov	edi, 1	#,
 16608      00
 16609 1009 4531C0   		xor	r8d, r8d	#
 16610 100c 31C0     		xor	eax, eax	#
 16611 100e E8000000 		call	__printf_chk@PLT	#
 16611      00
 16612              	.LVL1094:
 16613              	.LBE1165:
 16614              	.LBE1164:
 16615              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16616              		.loc 1 796 159 view .LVU5317
 16617 1013 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16617      000000
 16618 101a 498D6E40 		lea	rbp, 64[r14]	# ivtmp.710,
 16619 101e E8000000 		call	fflush@PLT	#
 16619      00
 16620              	.LVL1095:
 16621              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16622              		.loc 1 797 13 view .LVU5318
 16623 1023 31F6     		xor	esi, esi	#
 16624 1025 4C89F7   		mov	rdi, r14	#, tuning_result
 16625 1028 E8000000 		call	tune_benchmark	#
 16625      00
 16626              	.LVL1096:
 16627              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16628              		.loc 1 799 46 view .LVU5319
 16629 102d C5FB1015 		vmovsd	xmm2, QWORD PTR .LC77[rip]	# tmp798,
 16629      00000000 
 16630              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16631              		.loc 1 798 41 view .LVU5320
 16632 1035 4C017D00 		add	QWORD PTR 0[rbp], r15	# MEM[base: _100, offset: 0B], sample_max
 16633              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
GAS LISTING /tmp/ccG38KJh.s 			page 440


 16634              		.loc 1 799 46 view .LVU5321
 16635 1039 C56B5845 		vaddsd	xmm8, xmm2, QWORD PTR 8[rbp]	# tmp512, tmp798, MEM[base: _100, offset: 8B]
 16635      08
 16636 103e 83E301   		and	ebx, 1	# tmp580,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16637              		.loc 1 796 13 is_stmt 1 view .LVU5322
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16638              		.loc 1 796 26 view .LVU5323
 16639              	.LVL1097:
 16640              	.LBB1172:
 16641              	.LBI1164:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16642              		.loc 3 105 1 view .LVU5324
 16643              	.LBB1166:
 16644              		.loc 3 107 3 view .LVU5325
 16645              		.loc 3 107 3 is_stmt 0 view .LVU5326
 16646              	.LBE1166:
 16647              	.LBE1172:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16648              		.loc 1 796 159 is_stmt 1 view .LVU5327
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16649              		.loc 1 797 13 view .LVU5328
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16650              		.loc 1 798 13 view .LVU5329
 799:sieve_extend.c ****         }
 16651              		.loc 1 799 13 view .LVU5330
 16652 1041 498DB6A8 		lea	rsi, 168[r14]	# ivtmp.710,
 16652      000000
 16653              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16654              		.loc 1 799 46 is_stmt 0 view .LVU5331
 16655 1048 C57B1145 		vmovsd	QWORD PTR 8[rbp], xmm8	# MEM[base: _100, offset: 8B], tmp512
 16655      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16656              		.loc 1 795 47 is_stmt 1 view .LVU5332
 16657              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16658              		.loc 1 795 48 is_stmt 0 view .LVU5333
 16659 104d BD010000 		mov	ebp, 1	# i,
 16659      00
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16660              		.loc 1 795 29 is_stmt 1 view .LVU5334
 16661              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16662              		.loc 1 795 9 is_stmt 0 view .LVU5335
 16663 1052 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16664 1056 0F833001 		jnb	.L1420	#,
 16664      0000
 16665 105c 4885DB   		test	rbx, rbx	# tmp580
 16666 105f 746D     		je	.L1422	#,
 16667              	.LBB1173:
 16668              	.LBB1167:
 16669              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16670              		.loc 3 107 10 view .LVU5336
 16671 1061 41B80100 		mov	r8d, 1	#,
 16671      0000
 16672 1067 4C89E1   		mov	rcx, r12	#, step
GAS LISTING /tmp/ccG38KJh.s 			page 441


 16673 106a 4C89EA   		mov	rdx, r13	#, tuning_results
 16674 106d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.710
 16674      10
 16675              		.loc 3 107 10 view .LVU5337
 16676              	.LBE1167:
 16677              	.LBE1173:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16678              		.loc 1 796 13 is_stmt 1 view .LVU5338
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16679              		.loc 1 796 26 view .LVU5339
 16680              	.LVL1098:
 16681              	.LBB1174:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16682              		.loc 3 105 1 view .LVU5340
 16683              	.LBB1168:
 16684              		.loc 3 107 3 view .LVU5341
 16685              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16686              		.loc 3 107 10 is_stmt 0 view .LVU5342
 16687 1072 BF010000 		mov	edi, 1	#,
 16687      00
 16688 1077 488D3500 		lea	rsi, .LC78[rip]	#,
 16688      000000
 16689 107e 31C0     		xor	eax, eax	#
 16690 1080 E8000000 		call	__printf_chk@PLT	#
 16690      00
 16691              	.LVL1099:
 16692              		.loc 3 107 10 view .LVU5343
 16693              	.LBE1168:
 16694              	.LBE1174:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16695              		.loc 1 796 159 is_stmt 1 view .LVU5344
 16696 1085 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16696      000000
 16697              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16698              		.loc 1 795 48 is_stmt 0 view .LVU5345
 16699 108c BD020000 		mov	ebp, 2	# i,
 16699      00
 16700              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16701              		.loc 1 796 159 view .LVU5346
 16702 1091 E8000000 		call	fflush@PLT	#
 16702      00
 16703              	.LVL1100:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16704              		.loc 1 797 13 is_stmt 1 view .LVU5347
 16705 1096 BE010000 		mov	esi, 1	#,
 16705      00
 16706 109b 4C89F7   		mov	rdi, r14	#, tuning_result
 16707 109e E8000000 		call	tune_benchmark	#
 16707      00
 16708              	.LVL1101:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16709              		.loc 1 798 13 view .LVU5348
 16710              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16711              		.loc 1 798 41 is_stmt 0 view .LVU5349
GAS LISTING /tmp/ccG38KJh.s 			page 442


 16712 10a3 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# ivtmp.710, %sfp
 16712      10
 16713              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16714              		.loc 1 799 46 view .LVU5350
 16715 10a8 C57B100D 		vmovsd	xmm9, QWORD PTR .LC77[rip]	# tmp832,
 16715      00000000 
 16716              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16717              		.loc 1 798 41 view .LVU5351
 16718 10b0 4C013F   		add	QWORD PTR [rdi], r15	# MEM[base: _100, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16719              		.loc 1 799 13 is_stmt 1 view .LVU5352
 16720              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16721              		.loc 1 799 46 is_stmt 0 view .LVU5353
 16722 10b3 C5335857 		vaddsd	xmm10, xmm9, QWORD PTR 8[rdi]	# tmp637, tmp832, MEM[base: _100, offset: 8B]
 16722      08
 16723 10b8 498DB610 		lea	rsi, 272[r14]	# ivtmp.710,
 16723      010000
 16724 10bf C57B1157 		vmovsd	QWORD PTR 8[rdi], xmm10	# MEM[base: _100, offset: 8B], tmp637
 16724      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16725              		.loc 1 795 47 is_stmt 1 view .LVU5354
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16726              		.loc 1 795 29 view .LVU5355
 16727              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16728              		.loc 1 795 9 is_stmt 0 view .LVU5356
 16729 10c4 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16730 10c8 0F83BE00 		jnb	.L1420	#,
 16730      0000
 16731              	.L1422:
 16732 10ce 4889F3   		mov	rbx, rsi	# ivtmp.710, ivtmp.710
 16733              	.L1343:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16734              		.loc 1 796 13 is_stmt 1 view .LVU5357
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16735              		.loc 1 796 26 view .LVU5358
 16736              	.LVL1102:
 16737              	.LBB1175:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16738              		.loc 3 105 1 view .LVU5359
 16739              	.LBB1169:
 16740              		.loc 3 107 3 view .LVU5360
 16741              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16742              		.loc 3 107 10 is_stmt 0 view .LVU5361
 16743 10d1 4989E8   		mov	r8, rbp	#, i
 16744 10d4 4C89E1   		mov	rcx, r12	#, step
 16745 10d7 4C89EA   		mov	rdx, r13	#, tuning_results
 16746 10da 488D3500 		lea	rsi, .LC78[rip]	#,
 16746      000000
 16747 10e1 BF010000 		mov	edi, 1	#,
 16747      00
 16748 10e6 31C0     		xor	eax, eax	#
 16749 10e8 E8000000 		call	__printf_chk@PLT	#
 16749      00
GAS LISTING /tmp/ccG38KJh.s 			page 443


 16750              	.LVL1103:
 16751              		.loc 3 107 10 view .LVU5362
 16752              	.LBE1169:
 16753              	.LBE1175:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16754              		.loc 1 796 159 is_stmt 1 view .LVU5363
 16755 10ed 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16755      000000
 16756 10f4 E8000000 		call	fflush@PLT	#
 16756      00
 16757              	.LVL1104:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16758              		.loc 1 797 13 view .LVU5364
 16759 10f9 4889EE   		mov	rsi, rbp	#, i
 16760 10fc 4C89F7   		mov	rdi, r14	#, tuning_result
 16761 10ff E8000000 		call	tune_benchmark	#
 16761      00
 16762              	.LVL1105:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16763              		.loc 1 798 13 view .LVU5365
 16764              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16765              		.loc 1 799 46 is_stmt 0 view .LVU5366
 16766 1104 C57B101D 		vmovsd	xmm11, QWORD PTR .LC77[rip]	# tmp800,
 16766      00000000 
 16767              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16768              		.loc 1 798 41 view .LVU5367
 16769 110c 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _100, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16770              		.loc 1 799 13 is_stmt 1 view .LVU5368
 16771              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16772              		.loc 1 799 46 is_stmt 0 view .LVU5369
 16773 110f C5235863 		vaddsd	xmm12, xmm11, QWORD PTR 8[rbx]	# tmp625, tmp800, MEM[base: _100, offset: 8B]
 16773      08
 16774 1114 488D4368 		lea	rax, 104[rbx]	# tmp582,
 16775              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16776              		.loc 1 795 48 view .LVU5370
 16777 1118 4C8D4501 		lea	r8, 1[rbp]	# tmp581,
 16778              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16779              		.loc 1 799 46 view .LVU5371
 16780 111c C57B1163 		vmovsd	QWORD PTR 8[rbx], xmm12	# MEM[base: _100, offset: 8B], tmp625
 16780      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16781              		.loc 1 795 47 is_stmt 1 view .LVU5372
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16782              		.loc 1 795 29 view .LVU5373
 16783              	.LBB1176:
 16784              	.LBB1170:
 16785              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16786              		.loc 3 107 10 is_stmt 0 view .LVU5374
 16787 1121 4C89EA   		mov	rdx, r13	#, tuning_results
 16788 1124 4C89E1   		mov	rcx, r12	#, step
 16789 1127 488D3500 		lea	rsi, .LC78[rip]	#,
GAS LISTING /tmp/ccG38KJh.s 			page 444


 16789      000000
 16790 112e 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp582
 16790      20
 16791              		.loc 3 107 10 view .LVU5375
 16792              	.LBE1170:
 16793              	.LBE1176:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16794              		.loc 1 796 13 is_stmt 1 view .LVU5376
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16795              		.loc 1 796 26 view .LVU5377
 16796              	.LVL1106:
 16797              	.LBB1177:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16798              		.loc 3 105 1 view .LVU5378
 16799              	.LBB1171:
 16800              		.loc 3 107 3 view .LVU5379
 16801              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16802              		.loc 3 107 10 is_stmt 0 view .LVU5380
 16803 1133 BF010000 		mov	edi, 1	#,
 16803      00
 16804 1138 31C0     		xor	eax, eax	#
 16805 113a 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, tmp581
 16805      10
 16806 113f E8000000 		call	__printf_chk@PLT	#
 16806      00
 16807              	.LVL1107:
 16808              		.loc 3 107 10 view .LVU5381
 16809              	.LBE1171:
 16810              	.LBE1177:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16811              		.loc 1 796 159 is_stmt 1 view .LVU5382
 16812 1144 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16812      000000
 16813              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16814              		.loc 1 795 48 is_stmt 0 view .LVU5383
 16815 114b 4883C502 		add	rbp, 2	# i,
 16816              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16817              		.loc 1 796 159 view .LVU5384
 16818 114f E8000000 		call	fflush@PLT	#
 16818      00
 16819              	.LVL1108:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16820              		.loc 1 797 13 is_stmt 1 view .LVU5385
 16821 1154 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# tmp581, %sfp
 16821      10
 16822 1159 4C89F7   		mov	rdi, r14	#, tuning_result
 16823 115c E8000000 		call	tune_benchmark	#
 16823      00
 16824              	.LVL1109:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16825              		.loc 1 798 13 view .LVU5386
 16826              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16827              		.loc 1 798 41 is_stmt 0 view .LVU5387
 16828 1161 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# tmp582, %sfp
GAS LISTING /tmp/ccG38KJh.s 			page 445


 16828      20
 16829              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16830              		.loc 1 799 46 view .LVU5388
 16831 1166 C57B102D 		vmovsd	xmm13, QWORD PTR .LC77[rip]	# tmp801,
 16831      00000000 
 16832              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16833              		.loc 1 798 41 view .LVU5389
 16834 116e 4C013A   		add	QWORD PTR [rdx], r15	# MEM[base: _100, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16835              		.loc 1 799 13 is_stmt 1 view .LVU5390
 16836              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16837              		.loc 1 799 46 is_stmt 0 view .LVU5391
 16838 1171 C5135872 		vaddsd	xmm14, xmm13, QWORD PTR 8[rdx]	# tmp630, tmp801, MEM[base: _100, offset: 8B]
 16838      08
 16839 1176 4881C3D0 		add	rbx, 208	# ivtmp.710,
 16839      000000
 16840 117d C57B1172 		vmovsd	QWORD PTR 8[rdx], xmm14	# MEM[base: _100, offset: 8B], tmp630
 16840      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16841              		.loc 1 795 47 is_stmt 1 view .LVU5392
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16842              		.loc 1 795 29 view .LVU5393
 16843              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16844              		.loc 1 795 9 is_stmt 0 view .LVU5394
 16845 1182 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# i, %sfp
 16846 1186 0F8245FF 		jb	.L1343	#,
 16846      FFFF
 16847              	.L1420:
 16848              	.LBE1187:
 801:sieve_extend.c ****         
 16849              		.loc 1 801 9 is_stmt 1 view .LVU5395
 16850 118c 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 16850      01
 16851 1191 0F8E21FD 		jle	.L1342	#,
 16851      FFFF
 801:sieve_extend.c ****         
 16852              		.loc 1 801 20 view .LVU5396
 16853              	.LVL1110:
 16854              	.LBB1188:
 16855              	.LBI1188:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16856              		.loc 3 105 1 view .LVU5397
 16857              	.LBB1189:
 16858              		.loc 3 107 3 view .LVU5398
 16859              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16860              		.loc 3 107 10 is_stmt 0 view .LVU5399
 16861 1197 BF0A0000 		mov	edi, 10	#,
 16861      00
 16862 119c E8000000 		call	putchar@PLT	#
 16862      00
 16863              	.LVL1111:
 16864 11a1 E912FDFF 		jmp	.L1342	#
 16864      FF
GAS LISTING /tmp/ccG38KJh.s 			page 446


 16865              	.LVL1112:
 16866              	.L1448:
 16867              		.loc 3 107 10 view .LVU5400
 16868              	.LBE1189:
 16869              	.LBE1188:
 16870              	.LBB1190:
 16871              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16872              		.loc 1 786 32 view .LVU5401
 16873 11a6 4C896424 		mov	QWORD PTR 32[rsp], r12	# %sfp, step
 16873      20
 16874 11ab 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# tuning_results, %sfp
 16874      10
 16875              	.LVL1113:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16876              		.loc 1 786 32 view .LVU5402
 16877 11b0 498D5E08 		lea	rbx, 8[r14]	# ivtmp.717,
 16878 11b4 31ED     		xor	ebp, ebp	# tuning_result_index
 16879              	.L1339:
 16880              	.LVL1114:
 787:sieve_extend.c ****                 }
 16881              		.loc 1 787 21 is_stmt 1 view .LVU5403
 16882              	.LBB1191:
 16883              	.LBI1191:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16884              		.loc 3 105 1 view .LVU5404
 16885              	.LBB1192:
 16886              		.loc 3 107 3 view .LVU5405
 16887              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16888              		.loc 3 107 10 is_stmt 0 view .LVU5406
 16889 11b6 488D3500 		lea	rsi, .LC76[rip]	#,
 16889      000000
 16890 11bd BF010000 		mov	edi, 1	#,
 16890      00
 16891 11c2 31C0     		xor	eax, eax	#
 16892 11c4 E8000000 		call	__printf_chk@PLT	#
 16892      00
 16893              	.LVL1115:
 16894              		.loc 3 107 10 view .LVU5407
 16895              	.LBE1192:
 16896              	.LBE1191:
 787:sieve_extend.c ****                 }
 16897              		.loc 1 787 36 is_stmt 1 view .LVU5408
 16898              	.LBB1193:
 16899              	.LBI1193:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 16900              		.loc 1 673 20 view .LVU5409
 16901              	.LBB1194:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 16902              		.loc 1 674 5 view .LVU5410
 16903              	.LBB1195:
 16904              	.LBI1195:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16905              		.loc 3 105 1 view .LVU5411
 16906              	.LBB1196:
 16907              		.loc 3 107 3 view .LVU5412
 16908              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccG38KJh.s 			page 447


 16909              		.loc 3 107 10 is_stmt 0 view .LVU5413
 16910 11c9 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _208, offset: 8B], MEM[base: _208, offset: 8B]
 16911 11cd C5FB1043 		vmovsd	xmm0, QWORD PTR 80[rbx]	# MEM[base: _208, offset: 80B], MEM[base: _208, offset: 80B]
 16911      50
 16912 11d2 FF7338   		push	QWORD PTR 56[rbx]	# MEM[base: _208, offset: 56B]
 16913              		.cfi_def_cfa_offset 360
 16914 11d5 488D3500 		lea	rsi, .LC68[rip]	#,
 16914      000000
 16915 11dc BF010000 		mov	edi, 1	#,
 16915      00
 16916 11e1 FF7348   		push	QWORD PTR 72[rbx]	# MEM[base: _208, offset: 72B]
 16917              		.cfi_def_cfa_offset 368
 16918 11e4 B8030000 		mov	eax, 3	#,
 16918      00
 16919              	.LBE1196:
 16920              	.LBE1195:
 16921              	.LBE1194:
 16922              	.LBE1193:
 16923              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16924              		.loc 1 786 118 view .LVU5414
 16925 11e9 48FFC5   		inc	rbp	# tuning_result_index
 16926              	.LVL1116:
 16927              	.LBB1200:
 16928              	.LBB1199:
 16929              	.LBB1198:
 16930              	.LBB1197:
 16931              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16932              		.loc 3 107 10 view .LVU5415
 16933 11ec FF7328   		push	QWORD PTR 40[rbx]	# MEM[base: _208, offset: 40B]
 16934              		.cfi_def_cfa_offset 376
 16935 11ef 4883C368 		add	rbx, 104	# ivtmp.717,
 16936 11f3 FF73B8   		push	QWORD PTR -72[rbx]	# MEM[base: _208, offset: 32B]
 16937              		.cfi_def_cfa_offset 384
 16938 11f6 C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _208, offset: 88B]
 16938      F0
 16939 11fb C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _208, offset: 64B]
 16939      D8
 16940 1200 4C8B4BB0 		mov	r9, QWORD PTR -80[rbx]	#, MEM[base: _208, offset: 24B]
 16941 1204 4C8B43A8 		mov	r8, QWORD PTR -88[rbx]	#, MEM[base: _208, offset: 16B]
 16942 1208 488B5398 		mov	rdx, QWORD PTR -104[rbx]	#, MEM[base: _208, offset: 0B]
 16943 120c E8000000 		call	__printf_chk@PLT	#
 16943      00
 16944              	.LVL1117:
 16945              		.loc 3 107 10 view .LVU5416
 16946              	.LBE1197:
 16947              	.LBE1198:
 16948              	.LBE1199:
 16949              	.LBE1200:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16950              		.loc 1 786 99 is_stmt 1 view .LVU5417
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16951              		.loc 1 786 55 view .LVU5418
 16952              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16953              		.loc 1 786 75 is_stmt 0 view .LVU5419
 16954 1211 4883C420 		add	rsp, 32	#,
GAS LISTING /tmp/ccG38KJh.s 			page 448


 16955              		.cfi_def_cfa_offset 352
 16956 1215 B9280000 		mov	ecx, 40	# tmp506,
 16956      00
 16957 121a 4983FC28 		cmp	r12, 40	# tuning_results,
 16958 121e 490F46CC 		cmovbe	rcx, r12	# tuning_results,, tmp506
 16959              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16960              		.loc 1 786 17 view .LVU5420
 16961 1222 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp506
 16962 1225 728F     		jb	.L1339	#,
 16963 1227 4C8B6424 		mov	r12, QWORD PTR 32[rsp]	# step, %sfp
 16963      20
 16964 122c E9B4FDFF 		jmp	.L1338	#
 16964      FF
 16965              	.LVL1118:
 16966              	.L1446:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16967              		.loc 1 786 17 view .LVU5421
 16968              	.LBE1190:
 804:sieve_extend.c ****     verbose(2) {
 16969              		.loc 1 804 5 is_stmt 1 view .LVU5422
 16970              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16971              		.loc 1 804 24 is_stmt 0 view .LVU5423
 16972 1231 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# tuning_result, %sfp
 16972      18
 16973              	.LVL1119:
 16974              	# sieve_extend.c:805:     verbose(2) {
 805:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 16975              		.loc 1 805 5 view .LVU5424
 16976 1236 837C2408 		cmp	DWORD PTR 8[rsp], 1	# %sfp,
 16976      01
 16977              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16978              		.loc 1 804 24 view .LVU5425
 16979 123b 4D8B6908 		mov	r13, QWORD PTR 8[r9]	# best_result$8, MEM[(struct tuning_result_type *)tuning_result_331 + 8B]
 16980              	.LVL1120:
 804:sieve_extend.c ****     verbose(2) {
 16981              		.loc 1 804 24 view .LVU5426
 16982 123f 4D8B6120 		mov	r12, QWORD PTR 32[r9]	# best_result$32, MEM[(struct tuning_result_type *)tuning_result_331 + 3
 16983              	.LVL1121:
 804:sieve_extend.c ****     verbose(2) {
 16984              		.loc 1 804 24 view .LVU5427
 16985 1243 498B6928 		mov	rbp, QWORD PTR 40[r9]	# best_result$40, MEM[(struct tuning_result_type *)tuning_result_331 + 4
 16986 1247 498B5930 		mov	rbx, QWORD PTR 48[r9]	# best_result$48, MEM[(struct tuning_result_type *)tuning_result_331 + 4
 805:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 16987              		.loc 1 805 5 is_stmt 1 view .LVU5428
 16988 124b 7F7F     		jg	.L1449	#,
 808:sieve_extend.c **** 
 16989              		.loc 1 808 5 view .LVU5429
 16990 124d 0F841001 		je	.L1346	#,
 16990      0000
 16991              	.LVL1122:
 16992              	.L1347:
 810:sieve_extend.c ****     return best_result;
 16993              		.loc 1 810 5 view .LVU5430
 16994 1253 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	#, %sfp
GAS LISTING /tmp/ccG38KJh.s 			page 449


 16994      18
 16995 1258 E8000000 		call	free@PLT	#
 16995      00
 16996              	.LVL1123:
 811:sieve_extend.c **** }
 16997              		.loc 1 811 5 view .LVU5431
 811:sieve_extend.c **** }
 16998              		.loc 1 811 5 is_stmt 0 view .LVU5432
 16999              	.LBE1111:
 17000              	.LBE1110:
 919:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 17001              		.loc 1 919 9 is_stmt 1 view .LVU5433
 17002              	# sieve_extend.c:919:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 919:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 17003              		.loc 1 919 33 is_stmt 0 view .LVU5434
 17004 125d 4C892500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r12	# global_SMALLSTEP_FASTER, best_result$32
 17004      000000
 920:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 17005              		.loc 1 920 9 is_stmt 1 view .LVU5435
 17006              	# sieve_extend.c:920:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 920:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 17007              		.loc 1 920 34 is_stmt 0 view .LVU5436
 17008 1264 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$40
 17008      000000
 921:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 17009              		.loc 1 921 9 is_stmt 1 view .LVU5437
 17010              	# sieve_extend.c:921:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 921:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 17011              		.loc 1 921 34 is_stmt 0 view .LVU5438
 17012 126b 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$48
 17012      000000
 922:sieve_extend.c ****     }
 17013              		.loc 1 922 9 is_stmt 1 view .LVU5439
 17014              	.LVL1124:
 922:sieve_extend.c ****     }
 17015              		.loc 1 922 9 is_stmt 0 view .LVU5440
 17016 1272 E91CF3FF 		jmp	.L1316	#
 17016      FF
 17017              	.LVL1125:
 17018              	.L1364:
 17019              	.LBB1225:
 17020              	.LBB1223:
 17021              	# sieve_extend.c:697:     switch (tune_level) {
 697:sieve_extend.c ****         case 1:
 17022              		.loc 1 697 5 view .LVU5441
 17023 1277 C5FB1025 		vmovsd	xmm4, QWORD PTR .LC30[rip]	# sample_duration,
 17023      00000000 
 17024 127f 48C74424 		mov	QWORD PTR 72[rsp], 5	# %sfp,
 17024      48050000 
 17024      00
 17025 1288 48C74424 		mov	QWORD PTR 64[rsp], 128	# %sfp,
 17025      40800000 
 17025      00
 17026 1291 48C74424 		mov	QWORD PTR 104[rsp], 32	# %sfp,
 17026      68200000 
 17026      00
 17027 129a 48C74424 		mov	QWORD PTR 112[rsp], 4	# %sfp,
GAS LISTING /tmp/ccG38KJh.s 			page 450


 17027      70040000 
 17027      00
 17028 12a3 C5FB1164 		vmovsd	QWORD PTR 80[rsp], xmm4	# %sfp, sample_duration
 17028      2450
 17029 12a9 BB040000 		mov	ebx, 4	# smallstep_faster_steps,
 17029      00
 17030 12ae E939F7FF 		jmp	.L1317	#
 17030      FF
 17031              	.LVL1126:
 17032              	.L1442:
 724:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 17033              		.loc 1 724 16 is_stmt 1 view .LVU5442
 17034              	.LBB1201:
 17035              	.LBI1201:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17036              		.loc 3 105 1 view .LVU5443
 17037              	.LBB1202:
 17038              		.loc 3 107 3 view .LVU5444
 17039              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17040              		.loc 3 107 10 is_stmt 0 view .LVU5445
 17041 12b3 BF0A0000 		mov	edi, 10	#,
 17041      00
 17042 12b8 E8000000 		call	putchar@PLT	#
 17042      00
 17043              	.LVL1127:
 17044              		.loc 3 107 10 view .LVU5446
 17045              	.LBE1202:
 17046              	.LBE1201:
 725:sieve_extend.c ****     verbose(2) printf("\n");
 17047              		.loc 1 725 5 is_stmt 1 view .LVU5447
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 17048              		.loc 1 726 5 view .LVU5448
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 17049              		.loc 1 726 16 view .LVU5449
 17050              	.LBB1203:
 17051              	.LBI1203:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17052              		.loc 3 105 1 view .LVU5450
 17053              	.LBB1204:
 17054              		.loc 3 107 3 view .LVU5451
 17055              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17056              		.loc 3 107 10 is_stmt 0 view .LVU5452
 17057 12bd BF0A0000 		mov	edi, 10	#,
 17057      00
 17058 12c2 E8000000 		call	putchar@PLT	#
 17058      00
 17059              	.LVL1128:
 17060 12c7 E954F7FF 		jmp	.L1319	#
 17060      FF
 17061              	.LVL1129:
 17062              	.L1449:
 17063              		.loc 3 107 10 view .LVU5453
 17064              	.LBE1204:
 17065              	.LBE1203:
 17066              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 17067              		.loc 1 804 24 view .LVU5454
GAS LISTING /tmp/ccG38KJh.s 			page 451


 17068 12cc 4D8B5940 		mov	r11, QWORD PTR 64[r9]	# best_result$64, MEM[(struct tuning_result_type *)tuning_result_331 + 6
 17069 12d0 C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r9]	# best_result$72, MEM[(struct tuning_result_type *)tuning_result_331
 17069      4948
 17070 12d6 4D8B5150 		mov	r10, QWORD PTR 80[r9]	# best_result$80, MEM[(struct tuning_result_type *)tuning_result_331 + 8
 17071 12da C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r9]	# best_result$88, MEM[(struct tuning_result_type *)tuning_result_331
 17071      5158
 17072 12e0 C4C17B10 		vmovsd	xmm6, QWORD PTR 96[r9]	# best_result$96, MEM[(struct tuning_result_type *)tuning_result_331
 17072      7160
 17073              	.LBB1205:
 17074              	.LBB1206:
 17075              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17076              		.loc 3 107 10 view .LVU5455
 17077 12e6 488D3500 		lea	rsi, .LC79[rip]	#,
 17077      000000
 17078 12ed BF010000 		mov	edi, 1	#,
 17078      00
 17079 12f2 31C0     		xor	eax, eax	#
 17080              	.LBE1206:
 17081              	.LBE1205:
 17082              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 17083              		.loc 1 804 24 view .LVU5456
 17084 12f4 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, best_result$64
 17084      28
 17085              	.LVL1130:
 804:sieve_extend.c ****     verbose(2) {
 17086              		.loc 1 804 24 view .LVU5457
 17087 12f9 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, best_result$80
 17087      10
 17088 12fe C5FB114C 		vmovsd	QWORD PTR 32[rsp], xmm1	# %sfp, best_result$72
 17088      2420
 17089 1304 C5FB1154 		vmovsd	QWORD PTR 8[rsp], xmm2	# %sfp, best_result$88
 17089      2408
 17090              	.LVL1131:
 804:sieve_extend.c ****     verbose(2) {
 17091              		.loc 1 804 24 view .LVU5458
 17092 130a C5FB1134 		vmovsd	QWORD PTR [rsp], xmm6	# %sfp, best_result$96
 17092      24
 806:sieve_extend.c ****     }
 17093              		.loc 1 806 9 is_stmt 1 view .LVU5459
 17094              	.LVL1132:
 17095              	.LBB1209:
 17096              	.LBI1205:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17097              		.loc 3 105 1 view .LVU5460
 17098              	.LBB1207:
 17099              		.loc 3 107 3 view .LVU5461
 17100              	.LBE1207:
 17101              	.LBE1209:
 17102              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 17103              		.loc 1 804 24 is_stmt 0 view .LVU5462
 17104 130f 4D8B7110 		mov	r14, QWORD PTR 16[r9]	# best_result$16, MEM[(struct tuning_result_type *)tuning_result_331 + 1
 17105 1313 4D8B7918 		mov	r15, QWORD PTR 24[r9]	# best_result$24, MEM[(struct tuning_result_type *)tuning_result_331 + 2
 17106              	.LBB1210:
 17107              	.LBB1208:
 17108              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccG38KJh.s 			page 452


 17109              		.loc 3 107 10 view .LVU5463
 17110 1317 E8000000 		call	__printf_chk@PLT	#
 17110      00
 17111              	.LVL1133:
 17112              		.loc 3 107 10 view .LVU5464
 17113              	.LBE1208:
 17114              	.LBE1210:
 806:sieve_extend.c ****     }
 17115              		.loc 1 806 34 is_stmt 1 view .LVU5465
 17116              	.LBB1211:
 17117              	.LBI1211:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 17118              		.loc 1 673 20 view .LVU5466
 17119              	.LBB1212:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 17120              		.loc 1 674 5 view .LVU5467
 17121              	.LBB1213:
 17122              	.LBI1213:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17123              		.loc 3 105 1 view .LVU5468
 17124              	.LBB1214:
 17125              		.loc 3 107 3 view .LVU5469
 17126              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17127              		.loc 3 107 10 is_stmt 0 view .LVU5470
 17128 131c 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# best_result$64, %sfp
 17128      28
 17129 1321 4D89E1   		mov	r9, r12	#, best_result$32
 17130 1324 51       		push	rcx	# best_result$64
 17131              		.cfi_def_cfa_offset 360
 17132 1325 4C89EA   		mov	rdx, r13	#, best_result$8
 17133 1328 4C89F1   		mov	rcx, r14	#, best_result$16
 17134 132b 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# best_result$80, %sfp
 17134      18
 17135 1330 488D3500 		lea	rsi, .LC68[rip]	#,
 17135      000000
 17136 1337 4150     		push	r8	# best_result$80
 17137              		.cfi_def_cfa_offset 368
 17138 1339 BF010000 		mov	edi, 1	#,
 17138      00
 17139 133e 4D89F8   		mov	r8, r15	#, best_result$24
 17140 1341 53       		push	rbx	# best_result$48
 17141              		.cfi_def_cfa_offset 376
 17142 1342 B8030000 		mov	eax, 3	#,
 17142      00
 17143 1347 55       		push	rbp	# best_result$40
 17144              		.cfi_def_cfa_offset 384
 17145 1348 C5FB1054 		vmovsd	xmm2, QWORD PTR 32[rsp]	# best_result$96, %sfp
 17145      2420
 17146 134e C5FB104C 		vmovsd	xmm1, QWORD PTR 64[rsp]	# best_result$72, %sfp
 17146      2440
 17147 1354 C5FB1044 		vmovsd	xmm0, QWORD PTR 40[rsp]	# best_result$88, %sfp
 17147      2428
 17148 135a E8000000 		call	__printf_chk@PLT	#
 17148      00
 17149              	.LVL1134:
 17150              		.loc 3 107 10 view .LVU5471
 17151              	.LBE1214:
GAS LISTING /tmp/ccG38KJh.s 			page 453


 17152              	.LBE1213:
 17153              	.LBE1212:
 17154              	.LBE1211:
 808:sieve_extend.c **** 
 17155              		.loc 1 808 5 is_stmt 1 view .LVU5472
 17156              	.LBB1218:
 17157              	.LBB1217:
 17158              	.LBB1216:
 17159              	.LBB1215:
 17160              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17161              		.loc 3 107 10 is_stmt 0 view .LVU5473
 17162 135f 4883C420 		add	rsp, 32	#,
 17163              		.cfi_def_cfa_offset 352
 17164              	.L1346:
 17165              		.loc 3 107 10 view .LVU5474
 17166              	.LBE1215:
 17167              	.LBE1216:
 17168              	.LBE1217:
 17169              	.LBE1218:
 808:sieve_extend.c **** 
 17170              		.loc 1 808 16 is_stmt 1 view .LVU5475
 17171              	.LVL1135:
 17172              	.LBB1219:
 17173              	.LBI1219:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17174              		.loc 3 105 1 view .LVU5476
 17175              	.LBB1220:
 17176              		.loc 3 107 3 view .LVU5477
 17177              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17178              		.loc 3 107 10 is_stmt 0 view .LVU5478
 17179 1363 BF0A0000 		mov	edi, 10	#,
 17179      00
 17180 1368 E8000000 		call	putchar@PLT	#
 17180      00
 17181              	.LVL1136:
 17182 136d E9E1FEFF 		jmp	.L1347	#
 17182      FF
 17183              	.LVL1137:
 17184              	.L1430:
 17185              		.loc 3 107 10 view .LVU5479
 17186              	.LBE1220:
 17187              	.LBE1219:
 17188              	.LBE1223:
 17189              	.LBE1225:
 17190              	.LBE1109:
 17191              	.LBB1227:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17192              		.loc 1 834 34 is_stmt 1 discriminator 1 view .LVU5480
 17193              	.LBB1023:
 17194              	.LBI1023:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17195              		.loc 3 98 1 discriminator 1 view .LVU5481
 17196              	.LBB1024:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17197              		.loc 3 100 3 discriminator 1 view .LVU5482
 17198              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccG38KJh.s 			page 454


 17199              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5483
 17200 1372 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17200      000000
 17201 1379 BA1B0000 		mov	edx, 27	#,
 17201      00
 17202 137e BE010000 		mov	esi, 1	#,
 17202      00
 17203 1383 488D3D00 		lea	rdi, .LC34[rip]	#,
 17203      000000
 17204 138a E8000000 		call	fwrite@PLT	#
 17204      00
 17205              	.LVL1138:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17206              		.loc 3 100 10 discriminator 1 view .LVU5484
 17207              	.LBE1024:
 17208              	.LBE1023:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17209              		.loc 1 834 83 is_stmt 1 discriminator 1 view .LVU5485
 17210 138f E9D2F5FF 		jmp	.L1428	#
 17210      FF
 17211              	.LVL1139:
 17212              	.L1445:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17213              		.loc 1 834 83 is_stmt 0 discriminator 1 view .LVU5486
 17214              	.LBE1227:
 17215              	.LBB1228:
 17216              	.LBB1226:
 17217              	.LBB1224:
 769:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 17218              		.loc 1 769 21 is_stmt 1 view .LVU5487
 17219              	.LBB1221:
 17220              	.LBI1221:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17221              		.loc 3 105 1 view .LVU5488
 17222              	.LBB1222:
 17223              		.loc 3 107 3 view .LVU5489
 17224              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17225              		.loc 3 107 10 is_stmt 0 view .LVU5490
 17226 1394 4889EA   		mov	rdx, rbp	#, tuning_results
 17227 1397 488D3500 		lea	rsi, .LC71[rip]	#,
 17227      000000
 17228 139e BF010000 		mov	edi, 1	#,
 17228      00
 17229 13a3 31C0     		xor	eax, eax	#
 17230 13a5 E8000000 		call	__printf_chk@PLT	#
 17230      00
 17231              	.LVL1140:
 17232              		.loc 3 107 10 view .LVU5491
 17233              	.LBE1222:
 17234              	.LBE1221:
 770:sieve_extend.c ****     verbose(2) {
 17235              		.loc 1 770 5 is_stmt 1 view .LVU5492
 17236 13aa E9FBF8FF 		jmp	.L1335	#
 17236      FF
 17237              	.LVL1141:
 17238              	.L1287:
 770:sieve_extend.c ****     verbose(2) {
GAS LISTING /tmp/ccG38KJh.s 			page 455


 17239              		.loc 1 770 5 is_stmt 0 view .LVU5493
 17240              	.LBE1224:
 17241              	.LBE1226:
 17242              	.LBE1228:
 17243              	.LBB1229:
 844:sieve_extend.c ****             }
 17244              		.loc 1 844 17 is_stmt 1 view .LVU5494
 17245              	.LBB1025:
 17246              	.LBI1020:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17247              		.loc 3 98 1 view .LVU5495
 17248              	.LBB1022:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17249              		.loc 3 100 3 view .LVU5496
 17250              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17251              		.loc 3 100 10 is_stmt 0 view .LVU5497
 17252 13af 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_25
 17253 13b2 488D1500 		lea	rdx, .LC41[rip]	#,
 17253      000000
 17254 13b9 E995F5FF 		jmp	.L1427	#
 17254      FF
 17255              	.LVL1142:
 17256              	.L1441:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17257              		.loc 3 100 10 view .LVU5498
 17258              	.LBE1022:
 17259              	.LBE1025:
 17260              	.LBE1229:
 17261              	# sieve_extend.c:973: }
 17262              		.loc 1 973 1 view .LVU5499
 17263 13be E8000000 		call	__stack_chk_fail@PLT	#
 17263      00
 17264              	.LVL1143:
 17265              	.L1437:
 17266              	.LBB1230:
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17267              		.loc 1 856 34 is_stmt 1 discriminator 1 view .LVU5500
 17268              	.LBB1026:
 17269              	.LBI1026:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17270              		.loc 3 98 1 discriminator 1 view .LVU5501
 17271              	.LBB1027:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17272              		.loc 3 100 3 discriminator 1 view .LVU5502
 17273              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17274              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5503
 17275 13c3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17275      000000
 17276 13ca 488D3D00 		lea	rdi, .LC49[rip]	#,
 17276      000000
 17277 13d1 BA1A0000 		mov	edx, 26	#,
 17277      00
 17278 13d6 BE010000 		mov	esi, 1	#,
 17278      00
 17279 13db E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/ccG38KJh.s 			page 456


 17279      00
 17280              	.LVL1144:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17281              		.loc 3 100 10 discriminator 1 view .LVU5504
 17282              	.LBE1027:
 17283              	.LBE1026:
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17284              		.loc 1 856 82 is_stmt 1 discriminator 1 view .LVU5505
 17285 13e0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_228(D)
 17286 13e4 E8000000 		call	usage	#
 17286      00
 17287              	.LVL1145:
 17288              	.L1436:
 851:sieve_extend.c ****             }
 17289              		.loc 1 851 17 view .LVU5506
 17290              	.LBB1028:
 17291              	.LBI1028:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17292              		.loc 3 98 1 view .LVU5507
 17293              	.LBB1029:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17294              		.loc 3 100 3 view .LVU5508
 17295              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17296              		.loc 3 100 10 is_stmt 0 view .LVU5509
 17297 13e9 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_38
 17298 13ec 488D1500 		lea	rdx, .LC46[rip]	#,
 17298      000000
 17299 13f3 E95BF5FF 		jmp	.L1427	#
 17299      FF
 17300              	.LVL1146:
 17301              	.L1435:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17302              		.loc 3 100 10 view .LVU5510
 17303              	.LBE1029:
 17304              	.LBE1028:
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 17305              		.loc 1 849 34 is_stmt 1 discriminator 1 view .LVU5511
 17306              	.LBB1030:
 17307              	.LBI1030:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17308              		.loc 3 98 1 discriminator 1 view .LVU5512
 17309              	.LBB1031:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17310              		.loc 3 100 3 discriminator 1 view .LVU5513
 17311              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17312              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5514
 17313 13f8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17313      000000
 17314 13ff 488D3D00 		lea	rdi, .LC44[rip]	#,
 17314      000000
 17315 1406 BA120000 		mov	edx, 18	#,
 17315      00
 17316 140b BE010000 		mov	esi, 1	#,
 17316      00
 17317 1410 E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/ccG38KJh.s 			page 457


 17317      00
 17318              	.LVL1147:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17319              		.loc 3 100 10 discriminator 1 view .LVU5515
 17320              	.LBE1031:
 17321              	.LBE1030:
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 17322              		.loc 1 849 74 is_stmt 1 discriminator 1 view .LVU5516
 17323 1415 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_228(D)
 17324 1419 E8000000 		call	usage	#
 17324      00
 17325              	.LVL1148:
 17326              	.L1432:
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17327              		.loc 1 842 34 discriminator 1 view .LVU5517
 17328              	.LBB1032:
 17329              	.LBI1032:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17330              		.loc 3 98 1 discriminator 1 view .LVU5518
 17331              	.LBB1033:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17332              		.loc 3 100 3 discriminator 1 view .LVU5519
 17333              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17334              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5520
 17335 141e 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17335      000000
 17336 1425 488D3D00 		lea	rdi, .LC40[rip]	#,
 17336      000000
 17337 142c BA180000 		mov	edx, 24	#,
 17337      00
 17338 1431 BE010000 		mov	esi, 1	#,
 17338      00
 17339 1436 E8000000 		call	fwrite@PLT	#
 17339      00
 17340              	.LVL1149:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17341              		.loc 3 100 10 discriminator 1 view .LVU5521
 17342              	.LBE1033:
 17343              	.LBE1032:
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17344              		.loc 1 842 80 is_stmt 1 discriminator 1 view .LVU5522
 17345 143b 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_228(D)
 17346 143f E8000000 		call	usage	#
 17346      00
 17347              	.LVL1150:
 17348              	.L1294:
 858:sieve_extend.c ****             }
 17349              		.loc 1 858 17 view .LVU5523
 17350              	.LBB1034:
 17351              	.LBI1034:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17352              		.loc 3 98 1 view .LVU5524
 17353              	.LBB1035:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17354              		.loc 3 100 3 view .LVU5525
 17355              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccG38KJh.s 			page 458


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17356              		.loc 3 100 10 is_stmt 0 view .LVU5526
 17357 1444 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_51
 17358 1447 488D1500 		lea	rdx, .LC51[rip]	#,
 17358      000000
 17359 144e E900F5FF 		jmp	.L1427	#
 17359      FF
 17360              	.LVL1151:
 17361              	.L1438:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17362              		.loc 3 100 10 view .LVU5527
 17363              	.LBE1035:
 17364              	.LBE1034:
 863:sieve_extend.c ****         #ifdef _OPENMP
 17365              		.loc 1 863 34 is_stmt 1 discriminator 1 view .LVU5528
 17366              	.LBB1036:
 17367              	.LBI1036:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17368              		.loc 3 98 1 discriminator 1 view .LVU5529
 17369              	.LBB1037:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17370              		.loc 3 100 3 discriminator 1 view .LVU5530
 17371              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17372              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5531
 17373 1453 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17373      000000
 17374 145a 488D3D00 		lea	rdi, .LC54[rip]	#,
 17374      000000
 17375 1461 BA1C0000 		mov	edx, 28	#,
 17375      00
 17376 1466 BE010000 		mov	esi, 1	#,
 17376      00
 17377 146b E8000000 		call	fwrite@PLT	#
 17377      00
 17378              	.LVL1152:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17379              		.loc 3 100 10 discriminator 1 view .LVU5532
 17380              	.LBE1037:
 17381              	.LBE1036:
 863:sieve_extend.c ****         #ifdef _OPENMP
 17382              		.loc 1 863 84 is_stmt 1 discriminator 1 view .LVU5533
 17383 1470 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_228(D)
 17384 1474 E8000000 		call	usage	#
 17384      00
 17385              	.LVL1153:
 17386              	.LBE1230:
 17387              		.cfi_endproc
 17388              	.LFE77:
 17390              		.section	.rodata
 17391              		.align 16
 17394              	CSWTCH.146:
 17395 0000 9A999999 		.long	2576980378
 17396 0004 9999B93F 		.long	1069128089
 17397 0008 9A999999 		.long	2576980378
 17398 000c 9999C93F 		.long	1070176665
 17399 0010 9A999999 		.long	2576980378
GAS LISTING /tmp/ccG38KJh.s 			page 459


 17400 0014 9999C93F 		.long	1070176665
 17401 0018 00000000 		.align 16
 17401      00000000 
 17404              	CSWTCH.145:
 17405 0020 00080000 		.quad	2048
 17405      00000000 
 17406 0028 00040000 		.quad	1024
 17406      00000000 
 17407 0030 40000000 		.quad	64
 17407      00000000 
 17408 0038 00000000 		.align 16
 17408      00000000 
 17411              	CSWTCH.144:
 17412 0040 10000000 		.quad	16
 17412      00000000 
 17413 0048 10000000 		.quad	16
 17413      00000000 
 17414 0050 04000000 		.quad	4
 17414      00000000 
 17415 0058 00000000 		.align 16
 17415      00000000 
 17418              	CSWTCH.143:
 17419 0060 10000000 		.quad	16
 17419      00000000 
 17420 0068 04000000 		.quad	4
 17420      00000000 
 17421 0070 04000000 		.quad	4
 17421      00000000 
 17422 0078 00000000 		.align 16
 17422      00000000 
 17425              	CSWTCH.142:
 17426 0080 10000000 		.quad	16
 17426      00000000 
 17427 0088 08000000 		.quad	8
 17427      00000000 
 17428 0090 04000000 		.quad	4
 17428      00000000 
 17429              		.globl	global_VECTORSTEP_FASTER
 17430              		.data
 17431              		.align 8
 17434              	global_VECTORSTEP_FASTER:
 17435 0000 60000000 		.quad	96
 17435      00000000 
 17436              		.globl	global_MEDIUMSTEP_FASTER
 17437              		.align 8
 17440              	global_MEDIUMSTEP_FASTER:
 17441 0008 20000000 		.quad	32
 17441      00000000 
 17442              		.globl	global_SMALLSTEP_FASTER
 17443              		.bss
 17444              		.align 8
 17447              	global_SMALLSTEP_FASTER:
 17448 0000 00000000 		.zero	8
 17448      00000000 
 17449              		.section	.rodata.cst32,"aM",@progbits,32
 17450              		.align 32
 17451              	.LC0:
GAS LISTING /tmp/ccG38KJh.s 			page 460


 17452 0000 00000000 		.quad	0
 17452      00000000 
 17453 0008 01000000 		.quad	1
 17453      00000000 
 17454 0010 02000000 		.quad	2
 17454      00000000 
 17455 0018 03000000 		.quad	3
 17455      00000000 
 17456              		.align 32
 17457              	.LC1:
 17458 0020 08000000 		.quad	8
 17458      00000000 
 17459 0028 08000000 		.quad	8
 17459      00000000 
 17460 0030 08000000 		.quad	8
 17460      00000000 
 17461 0038 08000000 		.quad	8
 17461      00000000 
 17462              		.align 32
 17463              	.LC2:
 17464 0040 04000000 		.quad	4
 17464      00000000 
 17465 0048 04000000 		.quad	4
 17465      00000000 
 17466 0050 04000000 		.quad	4
 17466      00000000 
 17467 0058 04000000 		.quad	4
 17467      00000000 
 17468              		.align 32
 17469              	.LC3:
 17470 0060 3F000000 		.long	63
 17471 0064 3F000000 		.long	63
 17472 0068 3F000000 		.long	63
 17473 006c 3F000000 		.long	63
 17474 0070 3F000000 		.long	63
 17475 0074 3F000000 		.long	63
 17476 0078 3F000000 		.long	63
 17477 007c 3F000000 		.long	63
 17478              		.section	.rodata.cst8,"aM",@progbits,8
 17479              		.align 8
 17480              	.LC8:
 17481 0000 95D626E8 		.long	3894859413
 17482 0004 0B2E113E 		.long	1041313291
 17483              		.align 8
 17484              	.LC30:
 17485 0008 9A999999 		.long	2576980378
 17486 000c 9999B93F 		.long	1069128089
 17487              		.align 8
 17488              	.LC31:
 17489 0010 00000000 		.long	0
 17490 0014 00001440 		.long	1075052544
 17491              		.align 8
 17492              	.LC77:
 17493 0018 9A999999 		.long	2576980378
 17494 001c 9999A93F 		.long	1068079513
 17495              		.text
 17496              	.Letext0:
GAS LISTING /tmp/ccG38KJh.s 			page 461


 17497              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 17498              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 17499              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 17500              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 17501              		.file 8 "/usr/include/stdio.h"
 17502              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 17503              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 17504              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 17505              		.file 12 "/usr/include/stdint.h"
 17506              		.file 13 "/usr/include/time.h"
 17507              		.file 14 "/usr/include/math.h"
 17508              		.file 15 "/usr/include/stdlib.h"
 17509              		.file 16 "/usr/lib/gcc/x86_64-linux-gnu/9/include/omp.h"
 17510              		.file 17 "<built-in>"
 17511              		.file 18 "/usr/include/string.h"
 43511              		.section	.note.gnu.property,"a"
 43512              		.align 8
 43513 0000 04000000 		.long	 1f - 0f
 43514 0004 10000000 		.long	 4f - 1f
 43515 0008 05000000 		.long	 5
 43516              	0:
 43517 000c 474E5500 		.string	 "GNU"
 43518              	1:
 43519              		.align 8
 43520 0010 020000C0 		.long	 0xc0000002
 43521 0014 04000000 		.long	 3f - 2f
 43522              	2:
 43523 0018 03000000 		.long	 0x3
 43524              	3:
 43525 001c 00000000 		.align 8
 43526              	4:
GAS LISTING /tmp/ccG38KJh.s 			page 462


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccG38KJh.s:87     .text:0000000000000000 continuePattern_smallSize
     /tmp/ccG38KJh.s:17451  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccG38KJh.s:17457  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccG38KJh.s:17463  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccG38KJh.s:17469  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccG38KJh.s:921    .text:0000000000000530 compare_tuning_result
     /tmp/ccG38KJh.s:947    .text:0000000000000550 tune_benchmark
     /tmp/ccG38KJh.s:17440  .data:0000000000000008 global_MEDIUMSTEP_FASTER
     /tmp/ccG38KJh.s:17434  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccG38KJh.s:17447  .bss:0000000000000000 global_SMALLSTEP_FASTER
     /tmp/ccG38KJh.s:12236  .text:0000000000004040 tune_benchmark._omp_fn.0
     /tmp/ccG38KJh.s:1117   .text:0000000000000660 continuePattern_shiftright
     /tmp/ccG38KJh.s:2008   .text:0000000000000c20 continuePattern_aligned
     /tmp/ccG38KJh.s:2807   .text:0000000000001120 continuePattern_shiftleft
     /tmp/ccG38KJh.s:5066   .text:0000000000001fc0 show_primes.isra.0
     /tmp/ccG38KJh.s:5061   .rodata.str1.1:0000000000000006 .LC7
     /tmp/ccG38KJh.s:5059   .rodata.str1.1:0000000000000000 .LC6
     /tmp/ccG38KJh.s:5467   .text:0000000000002160 sieve_shake
     /tmp/ccG38KJh.s:12007  .text:0000000000003ef0 main._omp_fn.0
     /tmp/ccG38KJh.s:17480  .rodata.cst8:0000000000000000 .LC8
     /tmp/ccG38KJh.s:12410  .text:0000000000004120 validatePrimeCount
     /tmp/ccG38KJh.s:12391  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccG38KJh.s:12397  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccG38KJh.s:12401  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccG38KJh.s:12394  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccG38KJh.s:12404  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccG38KJh.s:13666  .text:00000000000048b0 usage
     /tmp/ccG38KJh.s:13614  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccG38KJh.s:13617  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccG38KJh.s:13621  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccG38KJh.s:13624  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccG38KJh.s:13627  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccG38KJh.s:13630  .rodata.str1.8:0000000000000218 .LC19
     /tmp/ccG38KJh.s:13633  .rodata.str1.8:0000000000000260 .LC20
     /tmp/ccG38KJh.s:13636  .rodata.str1.8:00000000000002d0 .LC21
     /tmp/ccG38KJh.s:13639  .rodata.str1.8:0000000000000330 .LC22
     /tmp/ccG38KJh.s:13642  .rodata.str1.8:0000000000000380 .LC23
     /tmp/ccG38KJh.s:13645  .rodata.str1.8:00000000000003a8 .LC24
     /tmp/ccG38KJh.s:13648  .rodata.str1.8:00000000000003d8 .LC25
     /tmp/ccG38KJh.s:13651  .rodata.str1.8:0000000000000410 .LC26
     /tmp/ccG38KJh.s:13654  .rodata.str1.8:0000000000000450 .LC27
     /tmp/ccG38KJh.s:13657  .rodata.str1.8:0000000000000480 .LC28
     /tmp/ccG38KJh.s:13660  .rodata.str1.8:00000000000004c8 .LC29
     /tmp/ccG38KJh.s:14114  .text.startup:0000000000000000 main
     /tmp/ccG38KJh.s:17488  .rodata.cst8:0000000000000010 .LC31
     /tmp/ccG38KJh.s:13973  .rodata.str1.1:000000000000003b .LC32
     /tmp/ccG38KJh.s:13975  .rodata.str1.1:0000000000000042 .LC33
     /tmp/ccG38KJh.s:13979  .rodata.str1.1:0000000000000068 .LC35
     /tmp/ccG38KJh.s:13986  .rodata.str1.1:000000000000006b .LC37
     /tmp/ccG38KJh.s:13988  .rodata.str1.1:0000000000000084 .LC38
     /tmp/ccG38KJh.s:13990  .rodata.str1.1:000000000000008c .LC39
     /tmp/ccG38KJh.s:13999  .rodata.str1.1:00000000000000ac .LC42
     /tmp/ccG38KJh.s:14044  .rodata.str1.1:0000000000000198 .LC60
     /tmp/ccG38KJh.s:14048  .rodata.str1.1:00000000000001bf .LC62
     /tmp/ccG38KJh.s:14046  .rodata.str1.1:00000000000001a6 .LC61
GAS LISTING /tmp/ccG38KJh.s 			page 463


     /tmp/ccG38KJh.s:14001  .rodata.str1.1:00000000000000c2 .LC43
     /tmp/ccG38KJh.s:14005  .rodata.str1.1:00000000000000dc .LC45
     /tmp/ccG38KJh.s:14011  .rodata.str1.8:0000000000000540 .LC47
     /tmp/ccG38KJh.s:14014  .rodata.str1.1:00000000000000fd .LC48
     /tmp/ccG38KJh.s:14018  .rodata.str1.1:000000000000011f .LC50
     /tmp/ccG38KJh.s:14025  .rodata.str1.1:0000000000000123 .LC52
     /tmp/ccG38KJh.s:14027  .rodata.str1.1:000000000000013c .LC53
     /tmp/ccG38KJh.s:14031  .rodata.str1.1:0000000000000163 .LC55
     /tmp/ccG38KJh.s:14033  .rodata.str1.1:0000000000000167 .LC56
     /tmp/ccG38KJh.s:14040  .rodata.str1.1:000000000000016c .LC58
     /tmp/ccG38KJh.s:14050  .rodata.str1.1:00000000000001cf .LC63
     /tmp/ccG38KJh.s:14052  .rodata.str1.1:00000000000001d6 .LC64
     /tmp/ccG38KJh.s:14054  .rodata.str1.1:00000000000001dc .LC65
     /tmp/ccG38KJh.s:14096  .rodata.str1.8:0000000000000708 .LC80
     /tmp/ccG38KJh.s:14099  .rodata.str1.8:0000000000000770 .LC81
     /tmp/ccG38KJh.s:14102  .rodata.str1.8:00000000000007c0 .LC82
     /tmp/ccG38KJh.s:14105  .rodata.str1.8:0000000000000810 .LC83
     /tmp/ccG38KJh.s:14108  .rodata.str1.1:0000000000000262 .LC84
     /tmp/ccG38KJh.s:14042  .rodata.str1.1:0000000000000187 .LC59
     /tmp/ccG38KJh.s:14037  .rodata.str1.8:0000000000000588 .LC57
     /tmp/ccG38KJh.s:13983  .rodata.str1.8:00000000000004f8 .LC36
     /tmp/ccG38KJh.s:17418  .rodata:0000000000000060 CSWTCH.143
     /tmp/ccG38KJh.s:17411  .rodata:0000000000000040 CSWTCH.144
     /tmp/ccG38KJh.s:17404  .rodata:0000000000000020 CSWTCH.145
     /tmp/ccG38KJh.s:17394  .rodata:0000000000000000 CSWTCH.146
     /tmp/ccG38KJh.s:17425  .rodata:0000000000000080 CSWTCH.142
     /tmp/ccG38KJh.s:14056  .rodata.str1.1:00000000000001ec .LC66
     /tmp/ccG38KJh.s:14065  .rodata.str1.1:00000000000001fb .LC69
     /tmp/ccG38KJh.s:14062  .rodata.str1.8:00000000000005a8 .LC68
     /tmp/ccG38KJh.s:14074  .rodata.str1.1:000000000000021e .LC72
     /tmp/ccG38KJh.s:14078  .rodata.str1.8:0000000000000650 .LC73
     /tmp/ccG38KJh.s:14081  .rodata.str1.1:000000000000023c .LC74
     /tmp/ccG38KJh.s:17492  .rodata.cst8:0000000000000018 .LC77
     /tmp/ccG38KJh.s:14069  .rodata.str1.8:0000000000000630 .LC70
     /tmp/ccG38KJh.s:14058  .rodata.str1.1:00000000000001f6 .LC67
     /tmp/ccG38KJh.s:14083  .rodata.str1.1:0000000000000249 .LC75
     /tmp/ccG38KJh.s:14089  .rodata.str1.8:00000000000006b8 .LC78
     /tmp/ccG38KJh.s:14085  .rodata.str1.1:0000000000000250 .LC76
     /tmp/ccG38KJh.s:17484  .rodata.cst8:0000000000000008 .LC30
     /tmp/ccG38KJh.s:14092  .rodata.str1.1:0000000000000254 .LC79
     /tmp/ccG38KJh.s:13977  .rodata.str1.1:000000000000004c .LC34
     /tmp/ccG38KJh.s:14072  .rodata.str1.1:0000000000000200 .LC71
     /tmp/ccG38KJh.s:13996  .rodata.str1.8:0000000000000520 .LC41
     /tmp/ccG38KJh.s:14016  .rodata.str1.1:0000000000000104 .LC49
     /tmp/ccG38KJh.s:14007  .rodata.str1.1:00000000000000e0 .LC46
     /tmp/ccG38KJh.s:14003  .rodata.str1.1:00000000000000c9 .LC44
     /tmp/ccG38KJh.s:13992  .rodata.str1.1:0000000000000093 .LC40
     /tmp/ccG38KJh.s:14022  .rodata.str1.8:0000000000000560 .LC51
     /tmp/ccG38KJh.s:14029  .rodata.str1.1:0000000000000146 .LC54

UNDEFINED SYMBOLS
clock_gettime
_GLOBAL_OFFSET_TABLE_
omp_set_num_threads
GOMP_parallel
__stack_chk_fail
memcpy
GAS LISTING /tmp/ccG38KJh.s 			page 464


__printf_chk
putchar
aligned_alloc
free
puts
stderr
__fprintf_chk
fwrite
exit
omp_get_max_threads
__isoc99_sscanf
stdout
fflush
strcmp
malloc
qsort
